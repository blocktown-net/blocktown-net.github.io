{"version":3,"sources":["regexp/wrapper","node_modules/browser-pack/_prelude.js","amp-dailymotion.js","build/video-autoplay.css.js","extensions/amp-dailymotion/0.1/amp-dailymotion.js","src/action-constants.js","src/common-signals.js","src/config.js","src/css.js","src/dom.js","src/element-service.js","src/event-helper-listen.js","src/event-helper.js","src/experiments.js","src/iframe-video.js","src/internal-version.js","src/json.js","src/layout.js","src/log.js","src/mediasession-helper.js","src/mode-object.js","src/mode.js","src/observable.js","src/render-delaying-services.js","src/service.js","src/service/video-manager-impl.js","src/service/video-session-manager.js","src/service/video/autoplay.js","src/service/video/install-autoplay-styles.js","src/services.js","src/static-template.js","src/string.js","src/style-installer.js","src/style.js","src/types.js","src/url-parse-query-string.js","src/url-try-decode-uri-component.js","src/url.js","src/utils/function.js","src/utils/lru-cache.js","src/utils/math.js","src/utils/object.js","src/utils/promise.js","src/utils/video.js","src/video-interface.js","third_party/css-escape/css-escape.js"],"names":[],"mappings":"AAAA;ACAA;ACCA;AACA;AACA;AACA;AACA;ACLA;AAAwB;ADQxB;AACA;AACA;AACA;AACA;AEIA;AFFA;AEGA;AFDA;AEEA;AFAA;AECA;AFCA;AEIA;AFFA;AEQA;AFNA;AEOA;AFLA;AEMA;AFJA;AEUA;AFRA;AESA;AFPA;AEQA;AFNA;AACA;AACA;AEMA;AAEA;AFLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEMA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBwB;AAsB1B;AFLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEEE;AACA;AAAqB;AFCvB;AEAI;AACA;AFEJ;AEDI;AAEA;AFEJ;AEDI;AAEA;AFEJ;AEDI;AAEA;AFEJ;AEDI;AAEA;AFEJ;AEDI;AAEA;AFEJ;AEDI;AAEA;AFEJ;AEDI;AAEA;AFEJ;AEDI;AAEA;AFEJ;AEDI;AA3BmB;AA4BpB;AAED;AFGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AELI;AFOJ;AELI;AACD;AAED;AFMF;AACA;AACA;AACA;AACA;AENI;AACD;AAED;AFOF;AACA;AACA;AEPI;AACA;AACA;AACA;AACD;AAED;AFQF;AACA;AACA;AERI;AACD;AAED;AFSF;AACA;AACA;AETI;AAA0D;AAAD;AAC1D;AAED;AFYF;AACA;AACA;AEZI;AAMA;AFSJ;AERI;AFUJ;AETI;AACA;AACA;AAEA;AACA;AACA;AACD;AAED;AFSF;AACA;AACA;AETI;AAEA;AAEA;AAEA;AACD;AAED;AFOF;AACA;AACA;AACA;AACA;AACA;AERuB;AFUvB;AETI;AACE;AACD;AFWL;AEVI;AFYJ;AEXI;AACE;AACD;AFaL;AEZI;AAA8B;AAAuB;AFgBzD;AEfI;AACE;AACD;AFiBL;AEfI;AFiBJ;AEVI;AACE;AACE;AACA;AFYR;AEVM;AACE;AACA;AFYR;AEVM;AACA;AACE;AACA;AFYR;AEVM;AACE;AFYR;AEXQ;AAIE;AACA;AACD;AFUT;AETQ;AFWR;AETM;AACE;AACA;AFWR;AETM;AACE;AACA;AFWR;AETM;AFWN;AE5CI;AAmCD;AAED;AFWF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEZkC;AFclC;AEbI;AACA;AACE;AACE;AAEI;AACA;AAFG;AFiBf;AEZQ;AAA2B;AAAO;AACnC;AACF;AACF;AAED;AFeF;AACA;AACA;AEhBkB;AFkBlB;AEjBI;AAKA;AAUA;AACE;AFMN;AELM;AACE;AACD;AACF;AAED;AACA;AAEA;AACD;AAED;AFIF;AACA;AACA;AEJI;AACD;AAED;AFKF;AACA;AACA;AACA;AACA;AENmB;AFQnB;AEPI;AAEA;AFQJ;AEPI;AACE;AACE;AACD;AACF;AACF;AAED;AFQF;AACA;AACA;AACA;AACA;AERI;AACD;AAED;AFSF;AACA;AACA;AACA;AACA;AEVS;AFYT;AEXI;AAEA;AFYJ;AEXI;AACE;AFaN;AEZM;AACD;AACF;AAED;AFaF;AACA;AACA;AACA;AACA;AEdW;AFgBX;AEfI;AAEA;AFgBJ;AEfI;AACE;AFiBN;AEhBM;AACD;AACF;AAED;AFiBF;AACA;AACA;AACA;AACA;AEjBI;AACD;AAED;AFkBF;AACA;AACA;AACA;AACA;AElBI;AACD;AAED;AFmBF;AACA;AACA;AACA;AACA;AEnBI;AFqBJ;AEpBI;AACE;AACD;AACC;AACE;AACD;AFsBP;AErBM;AACD;AACF;AAED;AFsBF;AACA;AACA;AACA;AACA;AEtBI;AFwBJ;AEvBI;AACE;AACD;AACC;AACE;AACD;AFyBP;AExBM;AACD;AACF;AAED;AFyBF;AACA;AACA;AEzBI;AF2BJ;AE1BI;AACE;AACD;AACC;AACE;AACD;AF4BP;AE3BM;AACD;AACF;AAED;AF4BF;AACA;AACA;AACA;AE1BE;AF4BF;AACA;AACA;AE5BI;AACD;AAED;AF6BF;AACA;AACA;AE7BI;AACD;AAED;AF8BF;AACA;AACA;AE9BI;AACA;AACD;AAED;AF+BF;AACA;AACA;AE/BI;AACA;AACD;AAED;AFgCF;AACA;AACA;AEhCI;AACA;AACD;AAED;AFiCF;AACA;AACA;AEjCI;AACD;AFmCH;AACA;AACA;AACA;AEnCA;AACE;AACD;AFqCD;AACA;AACA;AACA;AACA;AACA;AACA;AG/dA;AHieA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG/dA;AHieA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG/dO;AAEP;AHgeA;AACA;AGheO;AAEP;AHieA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGjeO;AACL;AACA;AAFyB;AHse3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIthBA;AJwhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIthBA;AJwhBA;AACA;AACA;AIthBO;AACL;AJwhBF;AACA;AIthBE;AJwhBF;AIthBE;AJwhBF;AACA;AIthBE;AJwhBF;AIthBE;AJwhBF;AACA;AACA;AIthBE;AJwhBF;AIthBE;AJwhBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIthBE;AJwhBF;AIthBE;AJwhBF;AACA;AACA;AACA;AIthBE;AJwhBF;AIthBE;AJwhBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIthBE;AJwhBF;AIthBE;AJwhBF;AACA;AIthBE;AArD2B;AJ8kB7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKzmBA;AL2mBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKzmBA;AL2mBA;AACA;AACA;AACA;AACA;AACA;AKzmBA;AAEA;AAKA;AAKA;ALkmBA;AKjmBO;AACL;AACA;AACA;AACA;ALmmBF;AKlmBE;ALomBF;AACA;AKlmBE;AAEA;AACA;AAEA;ALkmBF;AKjmBE;ALmmBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKjmBE;AAvBkB;AL2nBpB;AK9lBO;AACL;AADoB;ALkmBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AM/pBA;ANiqBA;AMhqBA;ANkqBA;AMnrBA;ANqrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMhrBA;ANkrBA;AACA;AACA;AACA;AACA;AMhrBO;AACL;AACD;AAED;ANirBA;AACA;AACA;AACA;AMjrBA;AAEA;ANkrBA;AACA;AACA;AACA;AMjrBO;AACL;AACD;AAED;ANkrBA;AACA;AACA;AACA;AACA;AACA;AMlrBO;AACL;AACE;AACD;ANorBH;AMlrBE;AACD;AAED;ANmrBA;AACA;AACA;AACA;AACA;AACA;AMnrBA;AACE;AACE;AACA;AACA;AACA;AAEA;ANorBJ;AMnrBI;AAAmB;AAAO;AAC3B;AACC;AACD;AACF;AAED;ANsrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMtrBO;AACL;AACD;AAED;ANurBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMvrBO;AACL;AACD;AAED;ANwrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMxrBO;AACL;AN0rBF;AMxrBE;AACA;AACD;AN0rBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO51BA;AP81BA;AO71BA;AP+1BA;AO11BA;AP41BA;AO31BA;AP61BA;AO51BA;AP81BA;AO71BA;AP+1BA;AOx3BA;AP03BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO52BA;AACE;AACA;AACA;AACA;AACA;AACA;AANwB;AAQ1B;AAEA;AP62BA;AO52BO;AAEP;AP62BA;AACA;AO72BO;AAEP;AP82BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO/2BO;AACL;AACE;AACA;AACD;AACD;APi3BF;AACA;AOj3BE;APm3BF;AOl3BE;AACE;AACA;AACE;AACE;AACA;AACD;AACF;AACD;AAA0B;AAAD;AAC1B;AACC;AACA;AACE;AACE;AACA;AACD;AACF;AAAE;AAAmB;AACvB;AACF;AAED;APu3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOv3BO;AACL;AACE;AACD;AACF;AAED;APw3BA;AACA;AACA;AACA;AACA;AACA;AOx3BO;AACL;AAAkC;AAAA;AACnC;AAED;AP23BA;AACA;AACA;AACA;AACA;AACA;AO33BO;AACL;AAA0B;AAAA;AAC3B;AAED;AP83BA;AACA;AACA;AACA;AACA;AO93BO;AACL;AACE;AACD;AACF;AAED;AP+3BA;AACA;AACA;AACA;AACA;AO/3BO;AACL;AACE;AACD;AACF;AAED;APg4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOh4BO;AACL;APk4BF;AOj4BE;AACE;AACD;APm4BH;AOl4BE;AACD;AAED;APm4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOn4BO;AACL;AACA;AACD;AAED;APo4BA;AACA;AACA;AACA;AACA;AACA;AACA;AOp4BO;AACL;AACE;AACD;APs4BH;AOr4BE;AACD;AAED;APs4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOt4BO;AACL;AACA;AACD;AAED;APu4BA;AACA;AACA;AACA;AACA;AACA;AACA;AOv4BO;AACL;APy4BF;AOx4BE;AACE;AACD;AP04BH;AACA;AOx4BE;AP04BF;AOz4BE;AACE;AP24BJ;AO14BI;AACE;AACD;AACC;AACD;AACF;AP44BH;AO34BE;AACD;AAED;AP44BA;AACA;AACA;AACA;AACA;AACA;AO54BO;AACL;AACE;AACA;AACD;AP84BH;AO74BE;AP+4BF;AO74BE;AP+4BF;AO94BE;AACD;AAED;AP+4BA;AACA;AACA;AACA;AACA;AACA;AO/4BO;AACL;AACA;AACE;AACD;AAED;APg5BF;AACA;AOh5BE;AACE;AACD;APk5BH;AOj5BE;AACoB;AAAwB;AAG7C;AAED;APi5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOj5BO;AACL;AACE;AACE;AACD;AACF;APm5BH;AOl5BE;AACD;AAED;APm5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOn5BO;AACL;AACE;AACE;AACD;AACF;APq5BH;AOp5BE;AACD;AAED;APq5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOr5BO;AACL;AACE;AACD;APu5BH;AOr5BE;AACE;AACD;AACF;AAED;APs5BA;AACA;AACA;AACA;AACA;AACA;AACA;AOt5BO;AACL;APw5BF;AOv5BE;AAKE;AACE;AACD;AACF;APq5BH;AOp5BE;AACD;AAED;APq5BA;AACA;AACA;AACA;AACA;AACA;AACA;AOr5BO;AACL;AACA;AACA;AACE;AACD;AACF;AAED;APs5BA;AACA;AACA;AACA;AACA;AACA;AACA;AOt5BO;AACL;AAKE;AACE;AACD;AACF;APo5BH;AOn5BE;AACD;AAED;APo5BA;AACA;AACA;AACA;AACA;AACA;AACA;AOp5BO;AACL;APs5BF;AOr5BE;AAKE;AACE;AACD;AACF;APm5BH;AOl5BE;AACD;AAED;APm5BA;AACA;AACA;AACA;AACA;AACA;AACA;AOn5BO;AACL;AAKE;AACE;AACD;AACF;APi5BH;AOh5BE;AACD;AAED;APi5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOj5BO;AACL;APm5BF;AOl5BE;AACE;AACE;AACD;AACF;APo5BH;AOn5BE;AACD;AAED;APo5BA;AACA;AACA;AACA;AACA;AACA;AACA;AOp5BO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;APw5BA;AACA;AACA;AACA;AACA;AACA;AACA;AOx5BO;AACL;AACA;AACE;AACD;AACF;AAED;APy5BA;AACA;AACA;AACA;AACA;AACA;AACA;AOz5BO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AP65BA;AACA;AACA;AACA;AACA;AACA;AACA;AO75BO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;APi6BA;AACA;AACA;AACA;AACA;AACA;AACA;AOj6BO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;APq6BA;AACA;AACA;AACA;AACA;AACA;AACA;AOr6BO;AACL;APu6BF;AOj6BE;AACE;AACD;APm6BH;AOl6BE;AACD;AAED;APm6BA;AACA;AACA;AACA;AACA;AACA;AACA;AOn6BO;AACL;AACA;AAAe;AAAO;AACvB;AAED;APs6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOt6BA;AACE;AACA;AACA;AACA;AAAsB;AAAO;AAC7B;AACA;AACD;AAED;APy6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOz6BO;AACL;AACE;AAAY;AAAO;AACpB;AP66BH;AACA;AO36BE;AACA;AACD;AAED;AP46BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO56BO;AACL;AACE;AAAY;AAAO;AAGpB;AP86BH;AACA;AO56BE;AACD;AAED;AP66BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO76BO;AAKL;AAA6D;AAAA;AP66B/D;AO96BE;AAGA;AACA;AP86BF;AO76BE;AACE;AP+6BJ;AO96BI;AACE;APg7BN;AO/6BM;AACD;AACF;APi7BH;AOh7BE;AACD;AAED;APi7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOj7BO;AACL;APm7BF;AOl7BE;AACE;AACE;AACD;AACF;APo7BH;AOh7BE;AACD;AAED;APi7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOj7BO;AACL;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAED;APk7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOl7BO;AAAqC;APq7B5C;AOn7BE;AACE;AACD;AACF;AAED;APo7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOp7BO;AACL;AACA;AACA;AACA;APs7BF;AOr7BE;AACE;AACD;AACC;AACD;APu7BH;AACA;AOr7BE;AACE;AACD;APu7BH;AOt7BE;AACD;AAED;APu7BA;AACA;AACA;AACA;AACA;AACA;AOv7BO;AACL;AAKD;AAED;APo7BA;AACA;AACA;AACA;AACA;AACA;AOp7BO;AACL;AAID;AAED;APk7BA;AACA;AACA;AACA;AACA;AACA;AOl7BO;AACL;AAIA;AACD;AAED;APg7BA;AACA;AACA;AACA;AACA;AACA;AOh7BO;AACL;AACE;AACD;APk7BH;AOj7BE;AACD;AAED;APk7BA;AACA;AACA;AACA;AACA;AOl7BA;AACE;AACD;AAED;APm7BA;AACA;AACA;AACA;AACA;AACA;AOn7BO;AACL;AACE;AAAQ;AAAO;AAChB;AAEA;AACF;AAED;APq7BA;AACA;AACA;AACA;AACA;AACA;AOr7BO;AACL;AACD;AAED;APs7BA;AACA;AACA;AACA;AACA;AACA;AOt7BO;AACL;AAEA;APu7BF;AOt7BE;AAGE;AAEH;AAED;APo7BA;AACA;AACA;AACA;AACA;AACA;AACA;AOp7BO;AACL;APs7BF;AOr7BE;AACE;AACA;AACD;AAED;APs7BF;AACA;AOt7BE;AACE;AACA;AACA;AACD;APw7BH;AOt7BE;AACD;AAED;APu7BA;AACA;AACA;AACA;AACA;AACA;AOv7BO;AACL;APy7BF;AOl7BE;AACE;AACD;AACF;AAED;APm7BA;AACA;AACA;AACA;AACA;AACA;AOn7BO;AACL;APq7BF;AO96BE;AACE;AACA;AACD;APg7BH;AO37BwC;AP67BxC;AOh7BE;AACE;AACD;APk7BH;AOj7BE;APm7BF;AO56BE;AACE;AACD;AACF;AAED;AP66BA;AACA;AACA;AACA;AACA;AACA;AACA;AO76BO;AAAsC;APg7B7C;AO96BE;AACE;AACD;APg7BH;AOp7B6C;APs7B7C;AOh7BE;AACE;AACD;APk7BH;AOj7BE;AAKA;AACD;AAED;AP86BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO96BO;AACL;AACD;AAED;AP+6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO/6BO;AACL;AACE;AACD;APi7BH;AO/6BE;AACA;APi7BF;AO76BE;AACE;AACD;AP+6BH;AACA;AO76BE;AACD;AAED;AP86BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO96BO;AACL;AACA;APg7BF;AO96BE;AACE;AACE;AACD;AACC;AACD;AACF;APg7BH;AO96BE;AACD;AAED;AP+6BA;AACA;AACA;AACA;AACA;AO/6BO;AAAwC;AAE7C;AAAwB;AAAO;AAC/B;AAAsC;AAAO;AAC7C;AACD;APq7BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQ70DA;AR+0DA;AQ90DA;ARg1DA;AQt0DA;ARw0DA;AQv0DA;ARy0DA;AACA;AACA;AACA;AACA;AQz2DA;AR22DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQ31DA;AR61DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQ31DO;AACL;AACS;AAAA;AAEV;AAED;AR41DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQ51DO;AACL;AR81DF;AQ71DE;AACE;AAAO;AAAkC;AAAzC;AACD;ARk2DH;AQj2DE;AACD;AAED;ARk2DA;AACA;AACA;AACA;AACA;AACA;AQl2DA;AACE;AACA;AACE;AACD;ARo2DH;AQn2DE;AACD;AAED;ARo2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQp2DO;AACL;AAKc;AAAA;AACf;AAED;ARk2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQl2DO;AAML;AR+1DF;AQ91DE;AACE;AAAO;AAAkC;AAAzC;AACD;ARm2DH;AQl2DE;AACA;AAEQ;AAAA;AAIJ;AACA;AACA;AACE;AACD;AACC;AACD;ARi2DP;AQh2DM;AACD;AACJ;AAED;ARi2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQj2DO;AAKL;AR+1DF;AQ91DE;AACE;AAAO;AAAkC;AAAzC;AACD;ARm2DH;AQl2DE;AACA;ARo2DF;AQl2DE;AACE;AACD;AACC;AACA;AACD;AACF;AAED;ARm2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQn2DA;AACE;AAAO;AAAwB;AAA/B;AAUD;AAED;AR81DA;AACA;AACA;AACA;AACA;AACA;AQ91DO;AACL;AACA;AACE;AACD;ARg2DH;AQ/1DE;AAEA;ARg2DF;AQ/1DE;ARi2DF;AQ91DE;AACE;AACA;AAGA;AACD;AR81DH;AQ71DE;AACD;AAED;AR81DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQ91DO;AACL;AACE;AACD;AACF;AAED;AR+1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQ/1DA;AACE;AACD;AAED;ARg2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQh2DA;AACE;ARk2DF;AACA;AACA;AACA;AACA;AACA;AQ/1DE;AACA;AACA;AACE;AACD;ARi2DH;AQ/1DE;AACA;AAAO;AAAkC;AAAzC;AAID;AAED;ARg2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQh2DA;AACE;AAEQ;AAAA;AAEJ;AACA;AACA;AACE;AACD;AACC;AACD;ARi2DP;AQh2DM;AACD;AACJ;ARk2DD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASxpEA;AT0pEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASxpEA;AT0pEA;AACA;AACA;AACA;ASxpEA;AAEA;ATypEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASxpEO;AAML;AACA;AACA;ATqpEF;AACA;AACA;ASppEE;ATspEF;ASppEE;AACE;AACE;AACD;AACC;AACA;ATspEN;ASrpEM;AACD;AACF;ATupEH;AStpEE;AACA;ATwpEF;ASvpEE;AACE;AACD;ATypEH;ASxpEE;AAKA;AACE;AACE;AAKD;ATkpEL;AACA;ASjpEI;AACA;AACA;AACD;AACF;AAED;ATkpEA;AACA;AACA;AACA;AACA;AACA;AACA;ASlpEO;AACL;AACA;AACE;AACD;ATopEH;ASlpEE;ATopEF;ASnpEE;AACE;AACA;AACE;AACE;AACD;ATqpEP;ASxpEoB;AAKhB;AACA;AACD;AAEA;ATqpEH;ASppEE;AACD;AAED;ATqpEA;AACA;AACA;AACA;ASrpEO;AACL;AACD;ATupED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AU1wEA;AV4wEA;AU3wEA;AV6wEA;AU5wEA;AV8wEA;AUhyEA;AVkyEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AU5xEA;AACA;AAEA;AV6xEA;AU5xEO;AAEP;AV6xEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AU9xEO;AACL;AAAkB;AAAiC;AAAC;AAAD;AACnD;AAEA;AVmyEF;AUlyEE;AACE;AACD;AACC;AACA;AACA;AAMA;AACD;AACF;AAED;AV8xEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AU9xEO;AACL;AAMD;AAED;AV0xEA;AACA;AACA;AACA;AACA;AACA;AU1xEO;AACL;AAAO;AAA6C;AAApD;AACD;AAED;AV8xEA;AACA;AACA;AACA;AACA;AACA;AU9xEO;AACL;AAAO;AAA6C;AAApD;AACD;AAED;AVkyEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AUlyEO;AACL;AACA;AAII;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAGH;AACD;AAED;AV8xEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AU9xEO;AAML;AACA;AACE;AACD;AACD;AV2xEF;AU1xEE;AACE;AACD;AV4xEH;AU3xEE;AACD;AAED;AV4xEA;AACA;AACA;AACA;AACA;AACA;AU5xEO;AACL;AAKE;AACC;AAEJ;AAED;AVwxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AUxxEO;AACL;AACA;AV0xEF;AUzxEE;AACE;AACD;AV2xEH;AU1xEE;AV4xEF;AU3xEE;AAIE;AACD;AV0xEH;AUzxEE;AACE;AACA;AACA;AACE;AACA;AACA;AACE;AADgE;AAGnE;AACC;AACD;AV2xEL;AACA;AU1xEI;AACE;AACD;AV4xEL;AU3xEI;AAEA;AACA;AV4xEJ;AU3xEI;AACE;AAEO;AAAA;AV6xEb;AU3xEM;AACE;AACD;AACF;AV6xEL;AU5xEI;AACD;AAED;AAEI;AACE;AACD;AV4xEP;AU3xEM;AACD;AAEC;AACE;AACD;AV4xEP;AU3xEM;AACD;AAEJ;AAED;AV2xEA;AACA;AACA;AACA;AACA;AACA;AU3xEA;AACE;AACA;AACA;AACA;AACE;AAED;AAGD;AV0xEF;AACA;AU1xEE;AV4xEF;AU3xEE;AACE;AACD;AV6xEH;AU5xEE;AACD;AAED;AV6xEA;AACA;AACA;AACA;AACA;AACA;AU7xEA;AACE;AACD;AAED;AV8xEA;AACA;AACA;AACA;AACA;AACA;AU9xEO;AACL;AACD;AVgyED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWviFA;AXyiFA;AWxiFA;AX0iFA;AWziFA;AX2iFA;AW1iFA;AX4iFA;AWtkFA;AXwkFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWtkFA;AXwkFA;AACA;AACA;AACA;AACA;AACA;AWjkFA;AACA;AAEA;AXkkFA;AWjkFA;AAEA;AXkkFA;AWjkFA;AAEA;AXkkFA;AACA;AACA;AACA;AACA;AACA;AWjkFO;AAEP;AXkkFA;AACA;AACA;AACA;AACA;AACA;AACA;AWnkFO;AACL;AACD;AAED;AXokFA;AACA;AACA;AACA;AACA;AACA;AWpkFO;AACL;AAGD;AAED;AXmkFA;AACA;AACA;AACA;AACA;AACA;AACA;AWnkFO;AACL;AACA;AACD;AAED;AXokFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWpkFO;AAML;AAAwC;AAAO;AAC/C;AXmkFF;AWlkFE;AACE;AACA;AXokFJ;AWlkFI;AACE;AACA;AACA;AXokFN;AWlkFM;AACE;AAOD;AACF;AACF;AX8jFH;AW7jFE;AACD;AAED;AX8jFA;AACA;AACA;AACA;AACA;AACA;AACA;AW9jFO;AACL;AACE;AACD;AXgkFH;AW/jFE;AACA;AXikFF;AW9jFE;AACE;AACE;AXgkFN;AW/jFM;AACE;AACD;AACF;AACF;AXikFH;AACA;AWhkFE;AAKE;AACA;AX8jFJ;AW3jFI;AACE;AX6jFN;AW5jFM;AACE;AACE;AACD;AACF;AACF;AACF;AX8jFH;AW5jFE;AX8jFF;AW5jFE;AAKE;AACA;AACA;AX0jFJ;AWzjFI;AACE;AX2jFN;AW1jFM;AACE;AACD;AX4jFP;AW3jFM;AACE;AACD;AACF;AACF;AX6jFH;AW5jFE;AACD;AAED;AX6jFA;AACA;AACA;AACA;AACA;AACA;AACA;AW7jFO;AACL;AACD;AAED;AX8jFA;AACA;AACA;AACA;AACA;AACA;AW9jFA;AACE;AXgkFF;AW/jFE;AACE;AACE;AACD;AACF;AACC;AACD;AXikFH;AWhkFE;AAEA;AXikFF;AWhkFE;AACE;AACE;AACD;AXkkFL;AWjkFI;AACE;AACD;AACC;AACD;AACF;AXmkFH;AWlkFE;AACD;AAED;AXmkFA;AACA;AACA;AACA;AACA;AACA;AWnkFA;AACE;AXqkFF;AWpkFE;AACE;AACD;AXskFH;AWrkFE;AACE;AACE;AACD;AACF;AACC;AACD;AACF;AAED;AXskFA;AACA;AACA;AACA;AACA;AACA;AACA;AWtkFO;AACL;AACD;AAED;AXukFA;AACA;AACA;AACA;AACA;AACA;AWvkFO;AACL;AACA;AACD;AAED;AXwkFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWxkFA;AACE;AACA;AACD;AAED;AXykFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWzkFO;AACL;AADsC;AAIxC;AX0kFA;AACA;AACA;AACA;AACA;AACA;AACA;AW3kFA;AACE;AACA;AACD;AAED;AX4kFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AW5kFO;AACL;AACA;AX8kFF;AW7kFE;AACE;AACA;AACA;AACE;AACD;AX+kFL;AW9kFI;AACE;AAEA;AACD;AX+kFL;AW7kFI;AAIE;AACA;AACD;AAGD;AACA;AX0kFJ;AACA;AW1kFI;AAEsB;AAAO;AAC3B;AAEA;AAGA;AAED;AACF;AXwkFH;AWvkFE;AACD;AAED;AXwkFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWxkFO;AACL;AAGD;AAED;AXukFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWvkFO;AACL;AACA;AACA;AACD;AXykFD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYz8FA;AZ28FA;AY18FA;AZ48FA;AY38FA;AZ68FA;AY58FA;AZ88FA;AY78FA;AZ+8FA;AY98FA;AZg9FA;AY/8FA;AZi9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY39FA;AACO;AACL;AACA;AACA;AACA;AACA;AAL4B;AAS9B;AZ29FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY59FO;AACL;AACE;AACD;AZ89FH;AY79FE;AACE;AACD;AZ+9FH;AY99FE;AACD;AAED;AZ+9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY/9FO;AACL;AACE;AACD;AZi+FH;AYh+FE;AACA;AACE;AACD;AACD;AACD;AAED;AZi+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYj+FO;AAA2D;AAEhE;AZm+FF;AY/9FE;AACE;AACD;AZi+FH;AY/9FE;AACE;AACD;AAGD;AZ+9FF;AACA;AY/9FE;AAEA;AAEA;AACA;AAEA;AACD;AAED;AZ69FA;AACA;AACA;AACA;AACA;AY79FO;AACL;AACE;AACD;AZ+9FH;AY99FE;AACmC;AAAuB;AAE3D;AAED;AZ+9FA;AACA;AACA;AACA;AACA;AY/9FO;AACL;AACE;AAAO;AAA4B;AAAnC;AACD;AZo+FH;AYn+FE;AACD;AAED;AZo+FA;AACA;AACA;AACA;AACA;AYp+FO;AACL;AACD;AAED;AZq+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYr+FO;AACL;AACA;AACA;AACD;AZu+FD;AACA;AACA;AACA;AACA;AACA;AACA;Aa/nGA;AbioGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa/nGA;AbioGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa/nGO;AACL;AACD;AbioGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcrpGA;AdupGA;ActpGA;AdwpGA;Ac9qGA;AdgrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac9qGA;AdgrGA;AACA;AACA;Ac1qGA;AACA;Ad4qGA;Ac1qGA;Ad4qGA;AACA;AACA;Ac1qGA;AAEA;Ad2qGA;AACA;AACA;AACA;Ac1qGA;AAEA;Ad2qGA;AACA;AACA;AACA;Ac1qGA;AAEA;Ad2qGA;AACA;AACA;AACA;Ac1qGA;AAEA;Ad2qGA;AACA;AACA;AACA;AACA;Ac1qGO;AACL;Ad4qGF;Ac3qGE;AACE;AACE;AACD;Ad6qGL;Ac5qGI;AACA;AACD;Ad8qGH;Ac7qGE;AAAO;AAA4B;AAAnC;AACD;AAED;AdirGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcjrGO;AACL;AACA;AACE;AACD;AdmrGH;AACA;AclrGE;AACA;AdorGF;AcnrGE;AACE;AdqrGJ;AcprGI;AAME;AACA;AACD;AdirGL;AchrGI;AACA;AACD;AdkrGH;AcjrGE;AACD;AAED;AdkrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AclrGO;AACL;AAAO;AAA4B;AAAW;AAAuB;AAArE;AACD;AAED;AdwrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcxrGO;AACL;AACE;AACD;AACC;AACE;AACD;Ad0rGL;AczrGI;AACD;AACF;AAED;Ad0rGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac1rGO;AACL;AACA;Ad4rGF;Ac3rGE;AACE;AACD;Ad6rGH;Ac5rGE;Ad8rGF;Ac7rGE;AACE;AACD;Ad+rGH;Ac9rGE;AACE;AACD;AACC;AACD;AACF;AAED;Ad+rGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac/rGO;AAAqC;AAAX;AAAW;AdosG5C;AcnsGE;AACE;AACD;AdqsGH;AcpsGE;AACE;AACD;AACD;AdssGF;AACA;ActsGE;AAAgB;AAAG;AAAG;AAAP;Ad4sGjB;Ac3sGE;AAAyB;AAAA;AAAA;AAAA;AditG3B;AACA;Ac/sGI;AACE;AACE;AACD;AACC;AACE;AACD;AditGT;AchtGQ;AACE;AAAY;AAAS;AAAS;AAAnB;AACZ;AdstGT;AcrtGQ;AACD;AACC;AAA0B;AAAwB;AAClD;AAA0B;AAAwB;Ad2tG1D;Ac1tGQ;AACE;AACD;Ad4tGT;Ac3tGQ;AACE;AACA;AAAY;AAAS;AAAS;AAAnB;AACZ;AdiuGT;AchuGQ;AACD;AACF;AdkuGL;AACA;AcjuGI;AACE;AACD;AACF;AdmuGH;AcluGE;AACD;AAED;AdmuGA;AACA;AACA;AACA;AACA;AACA;AcnuGA;AACE;AACE;AACD;AdquGH;AcpuGE;AACE;AAAwB;AAG3B;AAED;AdouGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcpuGO;AACL;AAAO;AAA4B;AAAnC;AACD;AAED;AdwuGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcxuGO;AACL;AAAO;AAA4C;AAAnD;AACD;AAED;Ad4uGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac5uGO;AACL;AACD;Ad8uGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aen/GA;Afq/GA;Aep/GA;Afs/GA;Aer/GA;Afu/GA;Aet/GA;Afw/GA;Aev/GA;Afy/GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AengHA;AfqgHA;AACA;AengHO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAToB;AAYtB;AfogHA;AACA;AACA;AACA;AACA;AACA;AepgHO;AACL;AACA;AACA;AACA;AAJ4B;AAO9B;AfqgHA;AACA;AACA;AACA;AACA;AergHO;AAEP;AfsgHA;AACA;AACA;AACA;AACA;AACA;AACA;AetgHA;AAEA;AfugHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AetgHO;AACL;AAAc;AAAc;AAAf;AACb;AAAkB;AAAc;AAAf;AACjB;AACA;AACA;AAAqB;AAAe;AAAhB;AALY;AAQlC;AfghHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AehhHO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAd+B;AAgBjC;AfkhHA;AACA;AACA;AACA;AACA;AACA;AACA;AelhHA;AAEA;AfmhHA;AACA;AACA;AACA;AACA;AelhHO;AACL;AACE;AACE;AACD;AACF;AfohHH;AenhHE;AACD;AAED;AfohHA;AACA;AACA;AACA;AACA;AephHO;AACL;AACD;AAED;AfqhHA;AACA;AACA;AACA;AACA;AACA;AerhHO;AACL;AASD;AAED;Af8gHA;AACA;AACA;AACA;AACA;AACA;Ae9gHO;AACL;AACD;AAED;Af+gHA;AACA;AACA;AACA;AACA;AACA;Ae/gHO;AACL;AACA;AACD;AAED;AfghHA;AACA;AACA;AACA;AACA;AACA;AACA;AehhHO;AACL;AACE;AACD;AfkhHH;AejhHE;AACE;AACD;AfmhHH;AelhHE;AACE;AACD;AfohHH;AenhHE;AACE;AACD;AfqhHH;AephHE;AACD;AAED;AfqhHA;AACA;AACA;AACA;AACA;AACA;AACA;AerhHO;AACL;AAKA;AAAO;AAA2B;AAAlC;AACD;AAED;AfqhHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AerhHO;AACL;AAKA;AACD;AAED;AfkhHA;AACA;AACA;AACA;AACA;AACA;AelhHO;AACL;AACA;AACA;AAKA;AACD;AAED;Af+gHA;AACA;AACA;AACA;AACA;AACA;Ae/gHO;AACL;AACA;AACD;AAED;AfghHA;AACA;AACA;AACA;AACA;AACA;AACA;AehhHO;AACL;AACA;AACD;AAED;AfihHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AejhHO;AACL;AACA;AfmhHF;AelhHE;AACE;AACA;AACA;AfohHJ;AelhHI;AACA;AACE;AACA;AAFc;AAIhB;AACA;AACE;AAAa;AAAO;AACpB;AAAc;AAAO;AAFO;AAI9B;AACD;AfwhHH;AevhHE;AAAO;AAA8B;AAArC;AACD;AAED;Af2hHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ae3hHO;AACL;AACA;AACD;AAED;Af4hHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ae5hHO;AACL;AACE;AACD;Af8hHH;Ae7hHE;AACD;AAED;Af8hHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ae9hHO;AACL;AACA;AACA;AACA;AACA;AfgiHF;Ae/hHE;AACE;AAAe;AAAwB;AfmiH3C;AehiHI;AAIE;AACA;AAED;AACC;AAEA;Af6hHN;Ae5hHM;AACD;Af8hHL;Ae7hHI;AACD;AAGD;AACA;AAEA;Af4hHF;AACA;Ae5hHE;AACA;AACA;AACA;AACA;Af8hHF;Ae3hHE;AACA;AACA;Af6hHF;Ae5hHE;AAEA;AACA;Af6hHF;Ae5hHE;AAEA;Af6hHF;Ae1hHE;AACA;AACA;Af4hHF;AezhHE;AAOE;AACA;AACA;AACA;AAIA;AACD;AACC;AACA;AACD;AfkhHH;AACA;AehhHE;AACE;AACD;AACC;AACD;AACC;AACD;AACC;AACD;AACC;AACD;AACC;AACD;AfkhHH;AACA;AehhHE;AAME;AACD;Af6gHH;Ae5gHE;AACE;AAMD;AfygHH;AexgHE;AAKE;AAKD;AfkgHH;AehgHE;AACE;AAMD;AACC;AAID;Af0/GH;AACA;Aex/GE;Af0/GF;Aez/GE;AACE;AACD;Af2/GH;Ae1/GE;AACE;AACA;AACA;AAEA;Af2/GJ;Ae1/GI;AACD;AACC;AACE;AACA;AAFiB;AAIpB;AACC;AACD;AACC;AACA;AACE;AADe;AAIjB;AACA;AACD;AACC;AACA;AACA;AACA;Af2/GJ;Aet/GI;AACA;AAIA;AACA;AACD;AAEA;AAEC;AACA;AACD;AACC;AACA;AACA;AACE;AACD;Afm/GL;Ael/GI;AACE;AACD;AACF;AACC;Afo/GJ;Aen/GI;AACE;AACD;Afq/GL;Aep/GI;AACD;AAED;Afq/GF;AACA;Aer/GE;AACA;AACD;Afu/GD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBvhIA;AhByhIA;AgBxhIA;AhB0hIA;AgBzhIA;AhB2hIA;AgB1hIA;AhB4hIA;AgB3hIA;AhB6hIA;AgB5hIA;AhB8hIA;AgBnjIA;AhBqjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB3iIA;AAEA;AhB4iIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB5iIO;AAEP;AhB6iIA;AACA;AACA;AACA;AACA;AACA;AgB7iIO;AAEP;AhB8iIA;AACA;AACA;AACA;AACA;AACA;AgB/iIO;AACL;AACD;AAED;AhBgjIA;AACA;AACA;AACA;AACA;AgBhjIO;AACL;AACD;AAED;AhBijIA;AACA;AACA;AACA;AACA;AgBjjIO;AACL;AACA;AACA;AACA;AACA;AALsB;AAQxB;AhBkjIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBnjIO;AACL;AACD;AAED;AhBojIA;AACA;AACA;AACA;AACA;AgBpjIA;AAEA;AhBqjIA;AACA;AACA;AgBpjIO;AACL;AACD;AAED;AhBqjIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBrjIA;AAAsB;AAAA;AAEtB;AhBwjIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBxjIA;AAA2B;AAEvB;AAAA;AAFuB;AAM3B;AhByjIA;AACA;AACA;AACA;AACA;AACA;AgBzjIA;AAAuC;AAAA;AAGvC;AhB2jIA;AACA;AACA;AACA;AACA;AgB3jIA;AAAwC;AAAA;AAGxC;AhB6jIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB/jIE;AhBikIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB/jIE;AAA6C;AhBkkI/C;AgBlkI+C;AAAjB;AAAiB;AhBskI/C;AgBrkII;AhBukIJ;AACA;AACA;AACA;AgBrkII;AAEA;AhBskIJ;AgBrkII;AAEA;AhBskIJ;AgBrkII;AAEA;AhBskIJ;AgBrkII;AAEA;AhBskIJ;AgBrkII;AAEA;AACE;AAEgB;AAAA;AAEZ;AACE;AAAiB;AAA4B;AAC9C;AACF;AACJ;AACF;AAED;AhBskIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBxkII;AACD;AAED;AhBykIF;AACA;AACA;AACA;AACA;AACA;AgBzkII;AACA;AACE;AACD;AhB2kIL;AACA;AgBzkII;AACE;AACD;AhB2kIL;AACA;AgBzkII;AACE;AACD;AhB2kIL;AACA;AgBzkII;AACE;AACD;AhB2kIL;AACA;AgBzkII;AACD;AAED;AhB0kIF;AACA;AACA;AACA;AACA;AACA;AACA;AgB1kII;AACE;AhB4kIN;AgB3kIM;AACE;AACD;AACC;AACD;AACC;AACD;AhB6kIP;AgB5kIM;AhB8kIN;AgB5kIM;AhB8kIN;AgB7kIM;AACE;AACA;AACD;AACC;AACD;AhB+kIP;AgB9kIM;AACD;AACF;AAED;AhB+kIF;AACA;AACA;AACA;AACA;AACA;AgB/kII;AACD;AAED;AhBglIF;AACA;AACA;AACA;AACA;AACA;AACA;AgBhlII;AACE;AACD;AACF;AAED;AhBilIF;AACA;AACA;AACA;AACA;AACA;AACA;AgBjlII;AACE;AACD;AACF;AAED;AhBklIF;AACA;AACA;AACA;AACA;AACA;AACA;AgBllII;AACE;AACD;AACF;AAED;AhBmlIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBnlII;AACE;AACD;AACC;AAIA;AACA;AACD;AACF;AAED;AhBilIF;AACA;AACA;AACA;AACA;AACA;AACA;AgBjlII;AhBmlIJ;AgBllII;AACE;AhBolIN;AgBllIM;AACD;AACF;AAED;AhBmlIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBnlII;AhBqlIJ;AgBplII;AACE;AhBslIN;AgBplIM;AACD;AACF;AAED;AhBqlIF;AACA;AACA;AACA;AACA;AACA;AACA;AgBrlII;AACA;AACA;AACD;AAED;AhBslIF;AACA;AACA;AACA;AACA;AACA;AACA;AgBtlII;AACA;AACA;AACA;AACD;AAED;AhBulIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBvlII;AhBylIJ;AgBxlII;AACE;AAG4B;AAAuB;AAGpD;AhBulIL;AgBtlII;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AhBwlIN;AgBvlIM;AACE;AACA;AhBylIR;AgBxlIQ;AACE;AACD;AhB0lIT;AgBzlIQ;AACA;AACA;AACD;AhB2lIP;AgB1lIM;AACA;AACA;AACA;AACA;AhB4lIN;AgB1lIM;AhB4lIN;AgB3lIM;AACD;AhB6lIL;AgB5lII;AACD;AAED;AhB6lIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB7lII;AACA;AAMA;AAAO;AAAyB;AAAhC;AACD;AAED;AhB4lIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB5lII;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;AhB2lIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB3lII;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;AhB0lIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB1lII;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;AhBylIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBzlII;AAMA;AAAO;AAAwB;AAA/B;AACD;AAED;AhBwlIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBxlII;AACE;AACD;AhB0lIL;AgBzlII;AACD;AAED;AhB0lIF;AACA;AACA;AACA;AACA;AACA;AgB1lII;AhB4lIJ;AgB3lII;AACE;AACE;AACD;AACC;AACD;AACF;AACC;AACD;AACF;AAED;AhB4lIF;AACA;AACA;AACA;AACA;AACA;AACA;AgB5lII;AACE;AAA+B;AAAuB;AACvD;AhBgmIL;AgB/lII;AACD;AAED;AhBgmIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBhmII;AACA;AAEA;AACA;AACA;AhBimIJ;AgBhmII;AACE;AACD;AhBkmIL;AgBjmII;AACE;AACD;AhBmmIL;AgBlmII;AACD;AAED;AhBmmIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBnmII;AACE;AACD;AACC;AACD;AACF;AhBqmIH;AACA;AACA;AgBpmIA;AhBsmIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBxmIA;AAAiC;AAC/B;AAAuB;AADQ;AAAA;AAGjC;AhB6mIA;AACA;AACA;AACA;AACA;AgB7mIA;AACE;AACA;AACE;AACD;AhB+mIH;AgB9mIE;AACD;AAED;AhB+mIA;AACA;AACA;AACA;AACA;AgB/mIA;AACE;AACE;AACD;AACF;AAED;AhBgnIA;AACA;AACA;AACA;AACA;AACA;AgBhnIO;AACL;AhBknIF;AgBjnIE;AACE;AACD;AhBmnIH;AgBvnIiD;AAAA;AAO/C;AhBonIF;AgBlnIE;AACE;AACD;AhBonIH;AACA;AgBnnIE;AACA;AACD;AAED;AhBonIA;AACA;AACA;AACA;AACA;AACA;AgBpnIO;AACL;AACA;AhBsnIF;AgBrnIE;AACE;AhBunIJ;AgBtnII;AACE;AACD;AACC;AACE;AACD;AhBwnIP;AgBvnIM;AACD;AACF;AhBynIH;AgBvnIE;AACE;AACD;AACC;AACD;AhBynIH;AgBxnIE;AACD;AAED;AhBynIA;AACA;AACA;AACA;AACA;AACA;AgBznIO;AACL;AACA;AACE;AACA;AhB2nIJ;AgB1nII;AACD;AACF;AAED;AhB2nIA;AACA;AACA;AACA;AACA;AACA;AgB3nIA;AACE;AACA;AACA;AAHiC;AAMnC;AAEA;AhB2nIA;AACA;AACA;AACA;AACA;AACA;AgB1nIA;AAEA;AhB2nIA;AACA;AACA;AgB1nIO;AACL;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AhB2nIF;AgB1nIE;AACA;AACD;AAED;AhB2nIA;AACA;AACA;AACA;AgB3nIO;AACL;AACD;AAED;AhB4nIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB5nIO;AACL;AACE;AACD;AhB8nIH;AgB7nIE;AACE;AACD;AACC;AACE;AACD;AhB+nIL;AgB9nII;AACD;AACF;AAED;AhB+nIA;AACA;AACA;AACA;AACA;AACA;AgB/nIA;AACE;AACE;AACD;AhBioIH;AgBhoIE;AAGI;AhBgoIN;AgB/nIM;AACE;AACD;AhBioIP;AgBhoIM;AACD;AAGJ;AAED;AhB+nIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB/nIO;AACL;AACE;AACD;AhBioIH;AgBhoIE;AACE;AACD;AhBkoIH;AgBjoIE;AACE;AhBmoIJ;AgBloII;AACE;AACD;AhBooIL;AgBnoII;AACE;AACD;AhBqoIL;AgBpoII;AACD;AACF;AAED;AhBqoIA;AACA;AACA;AACA;AACA;AACA;AgBroIO;AACL;AACE;AACD;AhBuoIH;AgBtoIE;AACD;AAED;AhBuoIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBvoIO;AAaL;AACE;AACD;AhB6nIH;AgB5nIE;AAAa;AAAc;AAa5B;AAED;AhBmnIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBnnIO;AAaL;AAAc;AAAc;AAa7B;AhB+lID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBlkKA;AjBokKA;AiBnkKA;AjBqkKA;AiBpkKA;AjBskKA;AiBrkKA;AjBukKA;AiBzlKA;AjB2lKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBrlKA;AjBulKA;AACA;AACA;AACA;AACA;AACA;AACA;AiBrlKO;AAEP;AjBslKA;AACA;AiBtlKO;AACL;AACA;AACA;AACA;AAAa;AAAD;AAJgB;AAO9B;AjBylKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiB1lKO;AAML;AjBulKF;AiBrlKE;AACE;AACA;AACA;AjBulKJ;AiBplKI;AACA;AAEA;AACA;AAGD;AACF;AAED;AjBklKA;AACA;AACA;AACA;AACA;AACA;AACA;AiBllKO;AACL;AjBolKF;AiBnlKE;AACE;AACA;AACD;AjBqlKH;AiBplKE;AjBslKF;AiBrlKE;AACE;AACA;AACD;AjBulKH;AACA;AiBrlKE;AACE;AACA;AACD;AAIC;AACA;AACD;AACC;AACA;AACD;AACC;AACA;AACD;AACC;AACD;AACF;AAED;AjBmlKA;AACA;AACA;AACA;AACA;AACA;AiBnlKO;AACL;AjBqlKF;AiBplKE;AACE;AACD;AACC;AACD;AACF;AAED;AjBqlKA;AACA;AACA;AACA;AACA;AACA;AiBrlKO;AACL;AjBulKF;AiBplKE;AACE;AACD;AACC;AACD;AACF;AAED;AjBqlKA;AACA;AACA;AACA;AACA;AACA;AiBrlKA;AACE;AjBulKF;AACA;AiBtlKE;AAAkC;AAEhC;AACA;AACE;AACE;AACA;AACD;AACF;AACF;AACF;AjBwlKD;AACA;AACA;AACA;AACA;AACA;AACA;AkB3uKA;AlB6uKA;AkB7vKA;AlB+vKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB3vKA;AlB6vKA;AACA;AACA;AACA;AACA;AkB3vKO;AACL;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVK;AAYR;AlB6vKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB3xKA;AnB6xKA;AmB5xKA;AnB8xKA;AmB/yKA;AnBizKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB5yKA;AnB8yKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB5yKO;AAEP;AnB6yKA;AACA;AACA;AACA;AACA;AACA;AmB7yKA;AAEA;AnB8yKA;AACA;AACA;AACA;AACA;AmB7yKO;AACL;AnB+yKF;AmB9yKE;AACE;AACD;AnBgzKH;AmB/yKE;AACD;AAED;AnBgzKA;AACA;AACA;AACA;AACA;AACA;AmBhzKA;AACE;AACA;AAGA;AACA;AACA;AnBgzKF;AmB/yKE;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEE;AACA;AAEF;AAEA;AnB4yKF;AmB1yKE;AACE;AACD;AAGD;AACA;AACA;AnB0yKF;AACA;AmB1yKE;AACE;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BK;AA8BR;AAED;AnBuyKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBvyKA;AACE;AACA;AACA;AACE;AACD;AnByyKH;AmBvyKE;AACE;AACD;AAGD;AACA;AACA;AACA;AnBuyKF;AACA;AmBvyKE;AACD;AAED;AnBwyKA;AACA;AACA;AACA;AACA;AACA;AACA;AmBxyKO;AACL;AACD;AAED;AnByyKA;AACA;AmBzyKO;AACL;AACD;AnB2yKD;AACA;AACA;AACA;AACA;AACA;AACA;AoBx9KA;ApB09KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBx9KA;ApB09KA;AACA;AACA;AACA;AACA;AACA;AACA;AoB19KE;ApB49KF;AACA;AoB19KE;AACE;AACA;AACD;AAED;ApB29KF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoB99Ke;ApBg+Kf;AoB/9KI;AACE;AACD;ApBi+KL;AoBh+KI;AACA;AACE;AACD;AACF;AAED;ApBi+KF;AACA;AACA;AACA;AACA;AACA;AoBj+KI;AACE;AACD;ApBm+KL;AoBl+KI;ApBo+KJ;AoBn+KI;AACE;AACD;AACF;AAED;ApBo+KF;AACA;AACA;AACA;AACA;AoBp+KI;AACE;AACD;ApBs+KL;AoBr+KI;AACD;AAED;ApBs+KF;AACA;AACA;AACA;AACA;AACA;AoBt+KI;AACE;AACD;ApBw+KL;AoBv+KI;ApBy+KJ;AoBx+KI;AACE;AACA;AACD;AACF;AAED;ApBy+KF;AACA;AACA;AACA;AACA;AACA;AoBz+KI;AACE;AACD;ApB2+KL;AoB1+KI;AACD;ApB4+KH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBxkLA;ArB0kLA;AqBzkLA;ArB2kLA;AqB1kLA;ArB4kLA;AqB9lLA;ArBgmLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB1lLA;ArB4lLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB1lLA;AACE;AACA;AACA;AAHe;AAMjB;ArB2lLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBhmLE;ArBkmLF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBjmLA;ArBmmLA;AACA;AACA;AACA;AACA;AACA;AqBpmLA;AAEA;ArBqmLA;AACA;AACA;AACA;AACA;AACA;AACA;AqBpmLO;AACL;AACE;AAEI;AACE;AACE;AACD;AACF;ArBqmLT;AqBpmLQ;AACD;AAGH;AAKD;AACD;AACD;AAED;ArB+lLA;AACA;AACA;AACA;AACA;AACA;AqB/lLO;AACL;AACD;AAED;ArBgmLA;AACA;AACA;AACA;AACA;AACA;AACA;AqBhmLO;AACL;AAAmC;AAAsC;AACzE;AACD;AAED;ArBmmLA;AACA;AACA;AACA;AACA;AACA;AqBnmLO;AACL;AACA;AACA;AAEA;AACE;AACD;AACF;ArBomLD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB/uLA;AtBivLA;AsBhvLA;AtBkvLA;AsBjvLA;AtBmvLA;AsBlvLA;AtBovLA;AsB7wLA;AtB+wLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB7wLA;AtB+wLA;AACA;AACA;AACA;AACA;AsBxwLA;AtB0wLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBxwLA;AAEA;AtBywLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB9wLE;AtBgxLF;AACA;AACA;AACA;AACA;AACA;AACA;AsB/wLA;AtBixLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBvxLE;AtByxLF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBxxLA;AtB0xLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB5xLO;AACL;AACA;AACA;AACA;AtB8xLF;AsB5xLE;AACA;AtB8xLF;AsB7xLE;AACE;AACE;AACD;AtB+xLL;AACA;AsB9xLI;AACD;AACC;AACA;AACD;AACF;AAED;AtB+xLA;AACA;AACA;AACA;AACA;AACA;AACA;AsB/xLO;AACL;AACA;AAKA;AAKA;AtByxLF;AsBxxLE;AACE;AACA;AAIE;AAAA;AACA;AAAe;AAElB;AACC;AAAgD;AAAA;AAChD;AACD;AACF;AAED;AtByxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBzxLO;AACL;AACA;AtB2xLF;AsB1xLE;AACE;AACD;AACF;AAED;AtB2xLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB3xLO;AAML;AACA;AACA;AtBwxLF;AsBvxLE;AACE;AACD;AACF;AAED;AtBwxLA;AACA;AACA;AACA;AACA;AACA;AACA;AsBxxLO;AACL;AACA;AACA;AACD;AAED;AtByxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBzxLO;AACL;AACA;AACD;AAED;AtB0xLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB1xLO;AACL;AACD;AAED;AtB2xLA;AACA;AACA;AACA;AACA;AACA;AACA;AsB3xLO;AACL;AtB6xLF;AsB5xLE;AACE;AACD;AACC;AACD;AACF;AAED;AtB6xLA;AACA;AACA;AACA;AACA;AACA;AACA;AsB7xLO;AACL;AACD;AAED;AtB8xLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB9xLO;AACL;AACA;AACA;AACD;AAED;AtB+xLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB/xLA;AACE;AACA;AtBiyLF;AsBhyLE;AACE;AACD;AACC;AACD;AACF;AAED;AtBiyLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBjyLO;AACL;AACD;AAED;AtBkyLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBlyLO;AACL;AAID;AAED;AtBgyLA;AACA;AACA;AACA;AACA;AACA;AsBhyLO;AACL;AACA;AACD;AAED;AtBiyLA;AACA;AACA;AACA;AACA;AACA;AsBjyLO;AACL;AACD;AAED;AtBkyLA;AACA;AACA;AACA;AACA;AACA;AACA;AsBlyLO;AACL;AACD;AAED;AtBmyLA;AACA;AACA;AACA;AACA;AACA;AACA;AsBnyLO;AACL;AACA;AtBqyLF;AsBpyLE;AACE;AACE;AAAO;AAAmC;AAA1C;AACD;AAEA;AACF;AtBwyLH;AsBvyLE;AACD;AAED;AtBwyLA;AACA;AACA;AACA;AACA;AsBxyLO;AACL;AACE;AACE;AAAyB;AAG3B;AAAuC;AAAsB;AAC9D;AtB2yLH;AsB1yLE;AAAO;AAA8C;AAArD;AACD;AAED;AtB8yLA;AACA;AACA;AACA;AACA;AsB9yLA;AACE;AACA;AACD;AAED;AtB+yLA;AACA;AACA;AACA;AACA;AACA;AACA;AsB/yLA;AACE;AAAO;AAAqD;AAA5D;AAID;AAED;AtBgzLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBhzLA;AACE;AAIA;AACA;AtB+yLF;AsB9yLE;AACE;AACA;AACA;AACA;AACA;AACA;AAEA;AtB+yLJ;AsB9yLI;AACE;AACD;AACF;AtBgzLH;AsB/yLE;AACD;AAED;AtBgzLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBhzLA;AACE;AACA;AtBkzLF;AsBhzLE;AACE;AACE;AACA;AACA;AACA;AACA;AACA;AANiB;AAQpB;AtBkzLH;AsBhzLE;AACE;AACA;AACD;AtBkzLH;AsBhzLE;AACA;AAGA;AtBgzLF;AsB/yLE;AACE;AACA;AACD;AACF;AAED;AtBgzLA;AACA;AACA;AACA;AACA;AACA;AsBhzLA;AACE;AtBkzLF;AsBjzLE;AACE;AACD;AAGD;AACA;AtBizLF;AACA;AsBjzLE;AACA;AACA;AAAO;AAAkC;AAAzC;AACD;AAED;AtBqzLA;AACA;AACA;AACA;AACA;AACA;AsBrzLA;AACE;AACA;AtBuzLF;AsBtzLE;AACE;AACE;AACD;AtBwzLL;AsBvzLI;AACD;AtByzLH;AsBvzLE;AACA;AACD;AAED;AtBwzLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBxzLA;AACE;AACA;AtB0zLF;AsBzzLE;AACE;AACE;AACD;AACC;AACA;AACA;AAAoC;AAAwB;AAC7D;AACF;AtB6zLH;AsB5zLE;AACD;AAED;AtB6zLA;AACA;AACA;AACA;AACA;AACA;AsB7zLA;AACE;AtB+zLF;AsB9zLE;AACE;AACD;AtBg0LH;AsB/zLE;AACD;AAED;AtBg0LA;AACA;AACA;AACA;AACA;AACA;AsBh0LO;AACL;AACD;AAED;AtBi0LA;AACA;AACA;AACA;AACA;AACA;AACA;AsBj0LO;AACL;AACA;AAAO;AAA4B;AAAnC;AACD;AAED;AtBq0LA;AACA;AACA;AACA;AACA;AACA;AsBr0LO;AACL;AACD;AAED;AtBs0LA;AACA;AACA;AACA;AACA;AACA;AsBt0LO;AACL;AACD;AAED;AtBu0LA;AACA;AACA;AACA;AsBv0LA;AACE;AACA;AACA;AtBy0LF;AsB50LyC;AAKrC;AACE;AACD;AtB00LL;AsBz0LI;AtB20LJ;AsB10LI;AACE;AACD;AACC;AAAmC;AAAA;AAGpC;AAfoC;AtB41LzC;AsBx1LE;AAA2B;AtB21L7B;AsB31L6B;AAY1B;AACF;AAED;AtBi1LA;AACA;AACA;AACA;AACA;AsBj1LA;AACE;AACE;AACD;AtBm1LH;AsBl1LE;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAED;AtBm1LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBn1LO;AACL;AtBq1LF;AsBn1LE;AACE;AACD;AtBq1LH;AsBp1LE;AAIA;AACA;AACA;AACD;AAED;AtBk1LA;AACA;AACA;AACA;AACA;AsBl1LO;AACL;AAIA;AAIE;AAAA;AAEH;AAED;AtB60LA;AACA;AACA;AACA;AACA;AACA;AsB70LO;AACL;AACE;AACD;AACF;AAED;AtB80LA;AACA;AACA;AACA;AACA;AACA;AsB90LA;AACE;AtBg1LF;AsB90LE;AACD;AAED;AtB+0LA;AACA;AsB/0LA;AACE;AADuC;AAAA;AAAA;AAGvC;AtBm1LF;AsBl1LE;AACE;AACA;AACA;AACA;AACA;AACA;AANK;AAQR;AtBo1LD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB5+MA;AvB8+MA;AuB7+MA;AvB++MA;AuBx+MA;AvB0+MA;AuBh+MA;AvBk+MA;AuBj+MA;AvBm+MA;AuBl+MA;AvBo+MA;AuBn+MA;AvBq+MA;AuBp+MA;AvBs+MA;AuB/9MA;AvBi+MA;AuBh+MA;AvBk+MA;AuBj+MA;AvBm+MA;AuBl+MA;AvBo+MA;AuBn+MA;AvBq+MA;AuBp+MA;AvBs+MA;AuBr+MA;AvBu+MA;AuBt+MA;AvBw+MA;AuBv+MA;AvBy+MA;AuBx+MA;AvB0+MA;AuBz+MA;AvB2+MA;AuBliNA;AvBoiNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBz/MA;AACA;AAEA;AvB0/MA;AACA;AACA;AACA;AuBz/MA;AAEA;AvB0/MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB3/ME;AvB6/MF;AACA;AuB3/ME;AAAoB;AvB8/MtB;AuB7/MI;AACA;AAEA;AvB8/MJ;AuB7/MI;AAAkC;AAAA;AAIlC;AvB8/MJ;AuB7/MI;AAEA;AvB8/MJ;AuB7/MI;AAEA;AvB8/MJ;AuB7/MI;AAEA;AvB8/MJ;AuB7/MI;AAEA;AvB8/MJ;AuB7/MI;AAEA;AvB8/MJ;AACA;AACA;AACA;AACA;AuB7/MI;AAA4B;AAAA;AAE5B;AvBggNJ;AACA;AuBhgNI;AACE;AAAA;AAIF;AACA;AvBggNJ;AuB//MI;AACD;AAED;AvBggNF;AACA;AACA;AACA;AACA;AuBlgNI;AvBogNJ;AuBlgNI;AACE;AACD;AvBogNL;AuBngNI;AACE;AACA;AACD;AACF;AAED;AvBogNF;AACA;AACA;AACA;AACA;AACA;AACA;AuBpgNI;AACE;AvBsgNN;AuBrgNM;AACE;AACA;AACD;AACF;AvBugNL;AuBtgNI;AACD;AAED;AvBugNF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBvgNI;AACA;AACA;AvBygNJ;AuBxgNI;AAKE;AACA;AAGQ;AAAqB;AAAtB;AAEP;AACD;AACF;AAED;AvBogNF;AACA;AACA;AuBpgNI;AAEA;AvBqgNJ;AuBngNI;AACE;AACD;AvBqgNL;AuBngNI;AACA;AACA;AACA;AAZc;AAed;AAEA;AAGA;AACA;AvBigNJ;AuBhgNI;AAAgB;AAA6C;AAE7D;AvBmgNJ;AuBhgNI;AACD;AAED;AvBigNF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBjgNI;AACA;AACA;AAEA;AAAuB;AAAiB;AAAiB;AAAlC;AACvB;AAAwB;AAAA;AACxB;AAAuB;AAAA;AACvB;AAAyB;AAAA;AACzB;AAA6B;AAAA;AAE7B;AvB6gNJ;AACA;AACA;AACA;AuB5gNI;AACE;AAGI;AACA;AACD;AAGJ;AACF;AAED;AvBygNF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB1gNyC;AvB4gNzC;AuB5gNyC;AAGrC;AACE;AvB4gNN;AuB3gNM;AACE;AAAuB;AAAuB;AAC/C;AACC;AACD;AACF;AAED;AACE;AACD;AvB8gNL;AuB3gNI;AACE;AACE;AACE;AACD;AACF;AvB6gNP;AuB5gNM;AACA;AACA;AACD;AACF;AAED;AvB6gNF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB7gNI;AACE;AACE;AACD;AACF;AvB+gNL;AuB9gNI;AACA;AACD;AAED;AvB+gNF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB/gNI;AACE;AvBihNN;AuBhhNM;AACE;AACD;AACF;AvBkhNL;AuBjhNI;AACA;AACD;AAED;AvBkhNF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBlhNI;AACA;AACD;AAED;AvBmhNF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBnhNI;AACD;AAED;AvBohNF;AACA;AACA;AACA;AACA;AACA;AuBphNI;AACD;AAED;AvBqhNF;AACA;AACA;AACA;AACA;AACA;AuBrhNI;AACD;AAED;AvBshNF;AACA;AACA;AuBthNI;AACD;AAED;AvBuhNF;AACA;AACA;AACA;AACA;AACA;AuBvhNI;AACD;AvByhNH;AACA;AACA;AuBxhNA;AvB0hNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB9hNE;AvBgiNF;AACA;AACA;AuB9hNE;AAA4B;AvBiiN9B;AuBhiNI;AACA;AAEA;AvBiiNJ;AuBhiNI;AAEA;AvBiiNJ;AuBhiNI;AAEA;AvBiiNJ;AuBhiNI;AAEA;AvBiiNJ;AuBhiNI;AAEA;AvBiiNJ;AuBhiNI;AAEA;AvBiiNJ;AuBhiNI;AAEA;AvBiiNJ;AuBhiNI;AAEA;AAAwC;AAAA;AAIxC;AvBgiNJ;AuB/hNI;AAEA;AAA4C;AAAA;AvBkiNhD;AuB7hNI;AvB+hNJ;AuB9hNI;AAA+B;AAE7B;AACD;AAED;AvB+hNJ;AACA;AuB/hNI;AACE;AAAA;AvBkiNN;AuB7hNI;AvB+hNJ;AuB9hNI;AAEA;AvB+hNJ;AuB9hNI;AAEA;AvB+hNJ;AuB9hNI;AAEA;AvB+hNJ;AuB9hNI;AAEA;AvB+hNJ;AuB7hNI;AACE;AACD;AvB+hNL;AuB3hNI;AvB6hNJ;AACA;AuB7hNI;AAEA;AvB8hNJ;AuB7hNI;AACE;AAAgB;AAAiB;AAClC;AAED;AvBgiNJ;AACA;AuBhiNI;AACE;AACD;AvBkiNL;AuBhiNI;AAAwD;AAAA;AAGxD;AAAyC;AAAA;AACzC;AAA2C;AAAA;AAC3C;AAAyC;AAAA;AACzC;AAA2C;AAAA;AAC3C;AAAyC;AAAA;AAEzC;AAA4C;AAAA;AAI5C;AAA0C;AAAA;AAI1C;AACE;AACA;AvByiNN;AuBxiNM;AACE;AACA;AACA;AACA;AACD;AvB0iNP;AuBziNM;AACD;AAED;AAGQ;AAAA;AAER;AvBwiNJ;AACA;AACA;AACA;AuBviNI;AACE;AACA;AACA;AAGE;AAAa;AANuB;AvB+iN5C;AuBtiNM;AvBwiNN;AuBviNM;AACD;AAED;AACD;AAED;AvBuiNF;AACA;AACA;AACA;AACA;AuBziNI;AACD;AAED;AvB0iNF;AACA;AACA;AACA;AACA;AACA;AuB3iNuC;AvB6iNvC;AuB5iNI;AAEA;AACE;AACD;AAED;AACD;AAED;AvB2iNF;AACA;AACA;AuB5iNiC;AvB8iNjC;AuB7iNI;AACA;AACE;AvB+iNN;AuB7iNM;AACE;AACD;AACF;AACF;AAED;AvB8iNF;AACA;AACA;AuB9iNI;AACD;AAED;AvB+iNF;AACA;AACA;AuB/iNI;AACE;AACD;AvBijNL;AuB/iNI;AvBijNJ;AuBhjNI;AACE;AACD;AACF;AAED;AvBijNF;AACA;AACA;AACA;AACA;AACA;AuBljN4B;AvBojN5B;AuBljNI;AAIE;AACD;AvBijNL;AuBhjNI;AAMD;AAED;AvB4iNF;AACA;AACA;AACA;AACA;AACA;AuB5iNI;AvB8iNJ;AuB5iNI;AACE;AACD;AvB8iNL;AuBnjNiB;AAAA;AvBsjNjB;AuB5iNI;AAIE;AAOD;AvBqiNL;AuBniNI;AvBqiNJ;AuBpiNI;AACE;AACD;AvBsiNL;AuBriNI;AACD;AAED;AvBsiNF;AACA;AACA;AACA;AACA;AACA;AuBtiNI;AACA;AAGA;AvBsiNJ;AuBriNI;AACE;AACD;AACC;AACA;AACD;AACF;AAED;AvBsiNF;AACA;AACA;AACA;AACA;AACA;AuBtiNI;AACD;AAED;AvBuiNF;AACA;AACA;AACA;AACA;AuBviNI;AAEA;AAEA;AAEA;AAEA;AvBqiNJ;AuBpiNI;AACE;AACA;AACD;AACF;AAED;AvBqiNF;AACA;AACA;AACA;AACA;AACA;AuBriNI;AACE;AACD;AvBuiNL;AuBriNI;AACE;AACE;AACC;AAEJ;AvBsiNL;AuBpiNI;AvBsiNJ;AuBpiNI;AACE;AvBsiNN;AuBniNM;AACE;AAEI;AADF;AAIH;AACF;AvBmiNL;AuBjiNI;AACE;AvBmiNN;AuB7hNM;AACE;AACD;AACF;AACF;AAED;AvB8hNF;AACA;AACA;AACA;AACA;AACA;AuB9hNI;AACE;AACD;AACF;AAED;AvB+hNF;AACA;AACA;AACA;AACA;AACA;AuBhiNkC;AvBkiNlC;AuBjiNI;AACE;AACD;AvBmiNL;AuBliNI;AACE;AvBoiNN;AuBliNM;AACE;AACD;AACC;AACD;AACF;AACF;AAED;AvBmiNF;AuBjiNE;AvBmiNF;AACA;AACA;AACA;AACA;AACA;AuBpiNwB;AvBsiNxB;AuBriNI;AACA;AACA;AACA;AACE;AACD;AvBuiNL;AuBriNI;AACE;AACE;AACA;AACA;AvBuiNR;AuBtiNQ;AACD;AvBwiNP;AACA;AuBtiNM;AvBwiNN;AuBtiNM;AACD;AACF;AAED;AvBuiNF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBxiN8B;AvB0iN9B;AuB1iN8B;AAAA;AAAA;AAAA;AvB+iN9B;AuB3iNI;AAIE;AACD;AvB0iNL;AuBxiNI;AAEA;AvByiNJ;AuBxiNI;AACE;AACE;AACD;AACF;AvB0iNL;AuBxiNI;AACE;AACD;AAED;AACqC;AAAA;AACE;AAAA;AAGvC;AAGc;AAAA;AvBwiNlB;AuBriNQ;AvBuiNR;AuBtiNQ;AACE;AACD;AvBwiNT;AuBviNQ;AACA;AACE;AACD;AACD;AACA;AvByiNR;AuBxiNQ;AACE;AACD;AvB0iNT;AuBziNQ;AACE;AACD;AACF;AvB2iNP;AuBziNI;AACE;AACD;AvB2iNL;AuBziNI;AAEA;AvB0iNJ;AuBziNI;AACE;AACE;AACD;AACF;AvB2iNL;AuBziNI;AAEA;AACE;AACD;AAED;AACwB;AAAA;AAEpB;AACA;AACD;AAEC;AACA;AACD;AACoC;AAAA;AACnB;AAAA;AACrB;AAED;AvByiNF;AACA;AACA;AACA;AACA;AACA;AuBziNI;AACE;AACD;AvB2iNL;AuB1iNI;AACE;AACA;AAAgB;AAAa;AAC7B;AACD;AACC;AACE;AACD;AvB8iNP;AuB7iNM;AACA;AACD;AACF;AAED;AvB8iNF;AACA;AACA;AACA;AACA;AACA;AuB9iNI;AACE;AACD;AACC;AACD;AACF;AAED;AvB+iNF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB/iNI;AvBijNJ;AuB/iNI;AACE;AACD;AAAM;AAEL;AACA;AAGD;AvB+iNL;AuB7iNI;AACE;AACD;AACF;AAED;AvB8iNF;AACA;AACA;AACA;AACA;AACA;AACA;AuB9iNI;AACE;AACD;AvBgjNL;AuB9iNI;AAKE;AACD;AvB4iNL;AuB1iNI;AACD;AAED;AvB2iNF;AACA;AACA;AACA;AACA;AACA;AuB3iNI;AAGD;AAED;AvB0iNF;AACA;AACA;AACA;AACA;AACA;AuB3iNwB;AvB6iNxB;AuB7iNwB;AAEpB;AAAyD;AAAA;AAAA;AvBijN7D;AuB/iNM;AACA;AACA;AACE;AAAA;AAIF;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXK;AAaR;AACF;AvB+iNH;AACA;AACA;AuB9iNA;AvBgjNA;AACA;AACA;AACA;AACA;AACA;AuBhjNA;AACE;AACA;AACE;AACA;AAFO;AAIV;AAED;AvBijNA;AACA;AACA;AACA;AACA;AuBnjNE;AvBqjNF;AACA;AACA;AuBnjNE;AAA6B;AvBsjN/B;AuBrjNI;AACA;AAEA;AvBsjNJ;AuBrjNI;AAEA;AvBsjNJ;AuBrjNI;AAEA;AvBsjNJ;AuBrjNI;AAEA;AvBsjNJ;AuBrjNI;AAEA;AvBsjNJ;AACA;AACA;AACA;AuBrjNI;AvBujNJ;AuBpjNI;AvBsjNJ;AuBrjNI;AAAgC;AAAA;AAEhC;AvBwjNJ;AACA;AACA;AACA;AACA;AuBxjNI;AAAqC;AAAA;AAGrC;AvB0jNJ;AACA;AACA;AACA;AACA;AACA;AuB1jNI;AAA4B;AAAA;AvB8jNhC;AuB5jNI;AACA;AACD;AAED;AvB6jNF;AACA;AACA;AACA;AACA;AuB/jNI;AAAkC;AAAA;AAClC;AACD;AAED;AvBkkNF;AACA;AACA;AuBnkNkB;AAAA;AvBskNlB;AuBlkNI;AACE;AACD;AvBokNL;AuBlkNI;AAEA;AACA;AACA;AAEA;AvBkkNJ;AuB5jNI;AACD;AAED;AvB6jNF;AACA;AACA;AuB9jN+B;AvBgkN/B;AuB/jNI;AvBikNJ;AuBhkNI;AAAoB;AAAA;AvBokNxB;AuBnkNI;AAMD;AAED;AvB+jNF;AACA;AACA;AACA;AACA;AACA;AuB/jNI;AACD;AAED;AvBgkNF;AACA;AACA;AACA;AACA;AACA;AACA;AuBhkNI;AACA;AACA;AACA;AACA;AvBkkNJ;AuBjkNI;AACE;AACD;AvBmkNL;AuBlkNI;AvBokNJ;AuBnkNI;AACE;AACD;AvBqkNL;AuBpkNI;AACD;AAED;AvBqkNF;AACA;AACA;AuBrkNI;AACD;AAED;AvBskNF;AACA;AACA;AuBvkNgC;AvBykNhC;AuBxkNI;AAD4B;AAAA;AAK5B;AACA;AACA;AvBykNJ;AuBxkNI;AACE;AAAe;AAAmC;AAClD;AAC2B;AAAA;AAE5B;AAED;AvB2kNJ;AACA;AuB3kNI;AACmC;AAAA;AAEpC;AAED;AvB4kNF;AACA;AACA;AuB5kNI;AACE;AACE;AACD;AvB8kNP;AuB7kNM;AACD;AvB+kNL;AuB9kNI;AACE;AACD;AACF;AAED;AvB+kNF;AACA;AACA;AACA;AACA;AACA;AuB/kNI;AvBilNJ;AuB/kNI;AvBilNJ;AuB/kNI;AACE;AACA;AACA;AACA;AACD;AvBilNL;AuB/kNI;AAAyC;AAAA;AAC1C;AAED;AvBklNF;AACA;AACA;AACA;AACA;AACA;AuBllNI;AAEA;AAAmD;AAAA;AAGpD;AAED;AvBklNF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBnlNgD;AAAf;AAAe;AvBulNhD;AuBvlNgD;AAE5C;AAEA;AAAiD;AAAA;AvBylNrD;AuBzlNqD;AAAA;AAG/C;AACA;AvB0lNN;AuBzlNM;AACE;AACD;AvB2lNP;AuB1lNM;AAKA;AACD;AACF;AAED;AvBulNF;AACA;AACA;AACA;AACA;AACA;AuBvlNI;AACD;AAED;AvBwlNF;AACA;AACA;AACA;AACA;AACA;AuBxlNI;AACA;AACD;AAED;AvBylNF;AACA;AACA;AACA;AACA;AACA;AuBzlNI;AACE;AACD;AvB2lNL;AuBzlNI;AAEA;AvB0lNJ;AuBtlNI;AAAc;AAAA;AvB0lNlB;AuBxlNM;AACE;AACD;AACF;AvB0lNL;AuBxlNI;AACD;AAED;AvBylNF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB1lNwB;AAAA;AAAA;AvB8lNxB;AuB9lNwB;AAAA;AAAA;AvBkmNxB;AACA;AuBxlNI;AACA;AvB0lNJ;AuBzlNI;AACE;AACD;AvB2lNL;AACA;AuBzlNI;AvB2lNJ;AuB1lNI;AACA;AvB4lNJ;AuB3lNI;AACE;AACD;AvB6lNL;AACA;AuB3lNI;AACD;AAED;AvB4lNF;AACA;AACA;AACA;AACA;AACA;AACA;AuB5lNI;AACE;AAAmD;AAEtD;AvB8lNH;AACA;AACA;AuB7lNA;AvB+lNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBjmNA;AACE;AACA;AACA;AACD;AAED;AvBkmNA;AACA;AACA;AACA;AACA;AuBlmNA;AACE;AACE;AACD;AvBomNH;AuBnmNE;AACD;AAED;AvBomNA;AACA;AuBpmNO;AAEP;AvBqmNA;AACA;AuBrmNA;AAEA;AvBsmNA;AuBrmNA;AAEA;AvBsmNA;AuBrmNA;AAEA;AvBsmNA;AACA;AACA;AACA;AACA;AACA;AuBrmNA;AACE;AACD;AAED;AvBsmNA;AACA;AACA;AACA;AACA;AACA;AACA;AuBtmNA;AACE;AAKD;AAED;AvBmmNA;AACA;AACA;AACA;AACA;AuBrmNE;AvBumNF;AACA;AACA;AuBrmNE;AACE;AvBumNJ;AuBtmNI;AACA;AvBwmNJ;AuBtmNI;AvBwmNJ;AuBvmNI;AAEA;AvBwmNJ;AuBvmNI;AAEA;AvBwmNJ;AuBvmNI;AAEA;AvBwmNJ;AACA;AACA;AACA;AACA;AACA;AuBvmNI;AACD;AAED;AvBwmNF;AACA;AACA;AACA;AACA;AuB3mNU;AvB6mNV;AuB7mNU;AAGN;AAEA;AAGA;AvB0mNJ;AuBzmNI;AACE;AACD;AACC;AAEI;AACE;AACD;AACF;AAEJ;AvBymNL;AuBvmNI;AAEI;AACE;AAAmB;AAA2B;AAC/C;AACF;AAEJ;AAED;AvBwmNF;AACA;AACA;AuBxmNI;AACE;AACD;AvB0mNL;AuBzmNI;AACE;AACD;AvB2mNL;AuB1mNI;AACD;AAED;AvB2mNF;AACA;AACA;AACA;AACA;AACA;AuB5mNiB;AAEb;AvB6mNJ;AuB1mNI;AACE;AACD;AvB4mNL;AuB1mNI;AAIE;AAIA;AAOD;AvBgmNL;AuB9lNI;AACD;AAED;AvB+lNF;AACA;AACA;AACA;AACA;AACA;AuBhmN2B;AAAN;AAAM;AvBomN3B;AuBnmNI;AACD;AAED;AvBomNF;AACA;AACA;AACA;AACA;AACA;AuBrmNwB;AvBumNxB;AuBtmNI;AACE;AACD;AvBwmNL;AuB3mNwB;AAAA;AAAA;AvB+mNxB;AuBvmNI;AAAuB;AAAA;AvB2mN3B;AuBzmNI;AACE;AACA;AACD;AvB2mNL;AuBzmNI;AAEA;AAEA;AACA;AAGA;AAEA;AAEA;AACD;AAED;AvBomNF;AACA;AACA;AACA;AACA;AACA;AuBpmNI;AACE;AACD;AvBsmNL;AuBpmNI;AACE;AACD;AvBsmNL;AuBpmNI;AAEA;AACD;AAED;AvBomNF;AACA;AACA;AACA;AACA;AACA;AuBpmNI;AACE;AADkE;AAGrE;AvBsmNH;AACA;AACA;AuBrmNA;AvBumNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBzmNA;AAAoD;AAGlD;AACE;AACE;AACD;AvB0mNL;AuBzmNI;AACD;AACF;AAED;AvB0mNA;AACA;AuB1mNO;AACL;AACD;AvB4mND;AACA;AACA;AACA;AACA;AACA;AACA;AwBjnQA;AxBmnQA;AwBnoQA;AxBqoQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBloQE;AxBooQF;AACA;AwBloQE;AACE;AACA;AAEA;AxBmoQJ;AwBloQI;AACD;AAED;AxBmoQF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBroQI;AACD;AAED;AxBsoQF;AACA;AACA;AACA;AACA;AwBtoQI;AACD;AAED;AxBuoQF;AACA;AACA;AACA;AACA;AwBvoQI;AACE;AACD;AxByoQL;AwBxoQI;AACD;AAED;AxByoQF;AACA;AACA;AACA;AACA;AACA;AwBzoQI;AACD;AxB2oQH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBpsQA;AzBssQA;AyBrsQA;AzBusQA;AyBtsQA;AzBwsQA;AyBvsQA;AzBysQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyB7tQA;AzB+tQA;AACA;AACA;AyB7tQA;AACE;AAA0C;AAAW;AACtD;AAED;AzBguQA;AACA;AACA;AACA;AACA;AyBhuQO;AACL;AACA;AAID;AAED;AzB8tQA;AACA;AACA;AACA;AACA;AACA;AyB9tQO;AACL;AACA;AzBguQF;AyBttQE;AzBwtQF;AyBvtQE;AACE;AACA;AzBytQJ;AyBxtQI;AACE;AACA;AACD;AzB0tQL;AyBztQI;AACD;AzB2tQH;AACA;AyBztQE;AzB2tQF;AyBztQE;AACE;AACA;AACD;AzB2tQH;AyBztQE;AACD;AzB2tQD;AACA;AACA;AACA;AACA;AACA;AACA;A0B/xQA;A1BiyQA;A0B/xQA;A1BiyQA;A0BnzQA;A1BqzQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BjzQA;A1BmzQA;A0BhzQA;A1BkzQA;AACA;A0BhzQO;AACL;AAGE;AAAe;AACf;AAAuB;AACvB;AAAc;AAEjB;A1BkzQD;AACA;AACA;AACA;AACA;AACA;AACA;A2Bv0QA;A3By0QA;A2Bj0QA;A3Bm0QA;A2B31QA;A3B61QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2B50QA;AACO;A3B80QP;AACA;AACA;AACA;AACA;AACA;AACA;A2Bj1QE;A3Bm1QF;AACA;AACA;AACA;A2Bj1QE;A3Bm1QF;AACA;AACA;AACA;AACA;A2Bj1QI;AAAO;AAAiF;AAAxF;AAKD;AAED;A3Bi1QF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Bj1QI;AAAO;AAAiF;AAAxF;AAKD;AAED;A3Bi1QF;AACA;AACA;AACA;AACA;AACA;AACA;A2Bj1QI;AAAO;AAA+C;AAAtD;AAKD;AAED;A3Bi1QF;AACA;AACA;AACA;AACA;AACA;AACA;A2Bj1QI;AAAO;AAA+C;AAAtD;AAKD;AAED;A3Bi1QF;AACA;AACA;AACA;AACA;AACA;A2Bj1QI;AAAO;AAAqD;AAA5D;AAID;AAED;A3Bk1QF;AACA;AACA;AACA;AACA;AACA;A2Bl1QI;AAAO;AAAiE;AAAxE;AAID;AAED;A3Bm1QF;AACA;AACA;AACA;AACA;AACA;A2Bn1QI;AAAO;AAAkF;AAAzF;AAKD;AAED;A3Bm1QF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Bn1QI;AAAO;AAAqD;AAA5D;AAID;AAED;A3Bo1QF;AACA;AACA;AACA;AACA;AACA;AACA;A2Bp1QI;AACD;AAED;A3Bq1QF;AACA;AACA;AACA;AACA;AACA;AACA;A2Bt1QyD;AAAvB;AAAuB;A3B01QzD;A2Bz1QI;AACE;AACA;AACA;AAAmC;AAAO;AAI3C;A3B01QL;A2Bz1QI;AAAO;AAAkG;AAAzG;AAKD;AAED;A3By1QF;AACA;AACA;AACA;AACA;AACA;A2Bz1QI;AAAO;AAAkG;AAAzG;AAKD;AAED;A3By1QF;AACA;AACA;AACA;AACA;AACA;A2Bz1QI;AAAO;AAAuD;AAA9D;AAID;AAED;A3B01QF;AACA;AACA;AACA;AACA;AACA;A2B11QI;AAAO;AAAqE;AAA5E;AAKD;AAED;A3B01QF;AACA;AACA;AACA;AACA;AACA;A2B11QI;AAAO;AAAqD;AAA5D;AAID;AAED;A3B21QF;AACA;AACA;AACA;AACA;AACA;A2B31QI;AAAO;AAAiD;AAAxD;AAID;AAED;A3B41QF;AACA;AACA;AACA;AACA;AACA;A2B51QI;AAAO;AAAiF;AAAxF;AAKD;AAED;A3B41QF;AACA;AACA;AACA;AACA;AACA;A2B51QI;AAAO;AAA6F;AAApG;AAKD;AAED;A3B41QF;AACA;AACA;AACA;AACA;AACA;A2B51QI;AAAO;AAA8C;AAArD;AAID;AAED;A3B61QF;AACA;AACA;AACA;AACA;AACA;A2B71QI;AAAO;AAAsD;AAA7D;AAID;AAED;A3B81QF;AACA;AACA;AACA;AACA;AACA;A2B91QI;AAAO;AAAsD;AAA7D;AAID;AAED;A3B+1QF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2B/1QI;AAAO;AAA2F;AAAlG;AAID;AAED;A3Bg2QF;AACA;AACA;AACA;AACA;AACA;AACA;A2Bh2QI;AAAO;AAA+D;AAAtE;AAID;AAED;A3Bi2QF;AACA;AACA;AACA;AACA;AACA;AACA;A2Bj2QI;AAAO;AAAgD;AAAvD;AAID;AAED;A3Bk2QF;AACA;AACA;AACA;AACA;AACA;A2Bl2QI;AACD;AAED;A3Bm2QF;AACA;AACA;AACA;AACA;AACA;AACA;A2Bn2QI;AAAO;AAA6F;AAApG;AAKD;AAED;A3Bm2QF;AACA;AACA;AACA;AACA;AACA;A2Bn2QI;AAAO;AAA4D;AAAnE;AAID;AAED;A3Bo2QF;AACA;AACA;AACA;AACA;AACA;A2Bp2QI;AAAO;AAAuD;AAA9D;AAID;AAED;A3Bq2QF;AACA;AACA;AACA;AACA;AACA;A2Br2QI;AAAO;AAAuD;AAA9D;AAID;AAED;A3Bs2QF;AACA;AACA;AACA;AACA;AACA;A2Bt2QI;AAAO;AAAkD;AAAzD;AAID;AAED;A3Bu2QF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Bv2QI;AAAO;AAAqF;AAA5F;AAID;AAED;A3Bw2QF;AACA;AACA;AACA;AACA;AACA;A2Bx2QI;AAAO;AAAkE;AAAzE;AAID;AAED;A3By2QF;AACA;AACA;AACA;AACA;AACA;A2Bz2QI;AAAO;AAA4E;AAAnF;AAID;AAED;A3B02QF;AACA;AACA;AACA;AACA;AACA;A2B12QI;AAAO;AAAgF;AAAvF;AAMD;AAED;A3By2QF;AACA;AACA;AACA;AACA;AACA;AACA;A2Bz2QI;AACE;AACC;AAFH;AAID;AAED;A3B02QF;AACA;AACA;AACA;AACA;AACA;A2B12QI;AACE;AACC;AAFH;AAID;AAED;A3B22QF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2B32QI;AACE;AACC;AAFH;AAID;AAED;A3B42QF;AACA;AACA;AACA;AACA;AACA;A2B52QI;AACE;AACC;AAFH;AAID;AAED;A3B62QF;AACA;AACA;AACA;AACA;AACA;A2B72QI;AACE;AACC;AAFH;AAID;AAED;A3B82QF;AACA;AACA;AACA;AACA;AACA;A2B92QI;AACE;AACC;AAFH;AAID;AAED;A3B+2QF;AACA;AACA;AACA;AACA;AACA;A2B/2QI;AACE;AACC;AAFH;AAID;AAED;A3Bg3QF;AACA;AACA;AACA;AACA;AACA;A2Bh3QI;AACE;AACC;AAFH;AAID;AAED;A3Bi3QF;AACA;AACA;AACA;AACA;AACA;A2Bj3QI;AACD;AAED;A3Bk3QF;AACA;AACA;AACA;AACA;AACA;AACA;A2Bl3QI;AACE;AACC;AAFH;AAID;AAED;A3Bm3QF;AACA;AACA;AACA;AACA;AACA;A2Bn3QI;AACE;AACC;AAFH;AAID;AAED;A3Bo3QF;AACA;AACA;AACA;AACA;AACA;AACA;A2Bp3QI;AACD;AAED;A3Bq3QF;AACA;AACA;AACA;AACA;AACA;AACA;A2Br3QI;AACD;AAED;A3Bs3QF;AACA;AACA;AACA;AACA;AACA;AACA;A2Bt3QI;AACE;AACC;AAFH;AAID;AAED;A3Bu3QF;AACA;AACA;AACA;AACA;AACA;AACA;A2Bv3QI;AACD;AAED;A3Bw3QF;AACA;AACA;AACA;AACA;AACA;A2Bx3QI;AACE;AACC;AAFH;AASD;AAED;A3Bo3QF;AACA;AACA;AACA;AACA;AACA;A2Bp3QI;AACE;AACC;AAFH;AAID;AAED;A3Bq3QF;AACA;AACA;AACA;AACA;AACA;A2Br3QI;AAAO;AAA0D;AAAjE;AAID;AAED;A3Bs3QF;AACA;AACA;AACA;AACA;AACA;A2Bt3QI;AAAO;AAAmD;AAA1D;AAID;AAED;A3Bu3QF;AACA;AACA;AACA;AACA;AACA;A2Bv3QI;AACA;AAAO;AAA4C;AAAnD;AAID;AAED;A3Bw3QF;AACA;AACA;AACA;AACA;AACA;A2Bx3QI;AAAO;AAAiE;AAAxE;AAID;AAED;A3By3QF;AACA;AACA;AACA;AACA;AACA;A2Bz3QI;AACE;AACC;AAFH;AAQD;AAED;A3Bs3QF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Bt3QI;AACE;AACC;AAFH;AAQD;AAED;A3Bm3QF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Bn3QI;AAAO;AAAoE;AAA3E;AAMD;AAED;A3Bk3QF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Bl3QI;AAAO;AAAyG;AAAhH;AAMD;AAED;A3Bi3QF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Bj3QI;AAAO;AAAwC;AAA/C;AAID;AAED;A3Bk3QF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Bl3QI;AAAO;AAA6E;AAApF;AAMD;AAED;A3Bi3QF;AACA;AACA;AACA;AACA;AACA;A2Bj3QI;AAAO;AAA2D;AAAlE;AAID;AAED;A3Bk3QF;AACA;AACA;AACA;AACA;AACA;A2Bl3QI;AACE;AACC;AAFH;AAQD;AAED;A3B+2QF;AACA;AACA;AACA;AACA;AACA;A2B/2QI;AAAO;AAA4D;AAAnE;AAID;AAED;A3Bg3QF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Bh3QI;AAAO;AAAsE;AAA7E;AAID;AAED;A3Bi3QF;AACA;AACA;AACA;AACA;AACA;A2Bj3QI;AAAO;AAA4C;AAAnD;AAID;AAED;A3Bk3QF;AACA;AACA;AACA;AACA;AACA;A2Bl3QI;AAAO;AAAyE;AAAhF;AAID;AAED;A3Bm3QF;AACA;AACA;AACA;AACA;AACA;A2Bn3QI;AAAO;AAAwC;AAA/C;AACD;A3Bw3QH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4B1rSA;A5B4rSA;A4B3rSA;A5B6rSA;A4B9sSA;A5BgtSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4B1sSA;AACA;AAEA;A5B2sSA;AACA;AACA;AACA;AACA;AACA;A4B1sSO;AACL;A5B4sSF;A4B3sSE;AACE;AACD;A5B6sSH;A4B3sSE;AACD;AAED;A5B4sSA;AACA;AACA;AACA;AACA;AACA;AACA;A4B5sSO;AACL;A5B8sSF;A4B7sSE;AACE;AACD;A5B+sSH;A4B7sSE;AACD;AAED;A5B8sSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4B9sSA;AACE;AACD;AAED;A5B+sSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4B/sSA;AACE;AACD;AAED;A5BgtSA;AACA;AACA;AACA;AACA;AACA;AACA;A4BhtSA;AACE;AACA;AAAU;AAAO;AAEjB;AACA;AACA;A5BmtSF;A4BhtSE;AAEA;AACD;AAED;A5BgtSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4BhtSO;AACL;AACA;A5BktSF;A4BhtSE;AACE;AACA;AACA;AACA;AACA;AACD;A5BktSH;A4BhtSE;AACD;A5BktSD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bn2SA;A7Bq2SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bn2SA;A7Bq2SA;AACA;AACA;AACA;A6Bn2SA;AACE;AACD;AAED;A7Bo2SA;AACA;AACA;AACA;AACA;A6Bp2SA;AACE;AACD;AAED;A7Bq2SA;AACA;AACA;AACA;AACA;AACA;A6Br2SO;AACL;AACD;AAED;A7Bs2SA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bt2SO;AACL;AACD;AAED;A7Bu2SA;AACA;AACA;AACA;AACA;A6Bv2SO;AACL;AACD;AAED;A7Bw2SA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bx2SO;AACL;AACA;AACD;AAED;A7By2SA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bz2SO;AACL;AACE;AACD;A7B22SH;A6B12SE;AACD;AAED;A7B22SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B32SO;AACL;AACE;AACD;A7B62SH;A6B52SE;AACE;AACD;A7B82SH;A6B72SE;AACD;AAED;A7B82SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B92SO;AACL;A7Bg3SF;A6Bj3SoE;AAGhE;AACA;AACE;AACA;AACD;A7Bi3SL;A6Bh3SI;AACE;AACD;AAV+D;A7B63SpE;A6B33SE;AAAwC;A7B83S1C;A6B93S0C;AASvC;A7Bw3SH;A6Bv3SE;AACD;AAED;A7Bw3SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bx3SO;AAA2B;AAEhC;A7B03SF;A6Bz3SE;AACE;AACD;A7B23SH;AACA;A6B13SE;AACD;AAED;A7B23SA;AACA;AACA;AACA;AACA;AACA;A6B33SO;AACL;AACA;AACE;AACD;A7B63SH;A6B33SE;AACD;AAED;A7B43SA;AACA;AACA;AACA;AACA;AACA;A6B53SO;AACL;AACE;AACD;A7B83SH;A6B53SE;AACD;AAED;A7B63SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B73SO;AACL;AACE;AACD;A7B+3SH;A6B93SE;AACA;A7Bg4SF;A6B/3SE;AACE;AACD;A7Bi4SH;A6Bh4SE;AACD;A7Bk4SD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8B9jTA;A9BgkTA;A8B/jTA;A9BikTA;A8BhkTA;A9BkkTA;A8BjkTA;A9BmkTA;A8BlkTA;A9BokTA;A8BnkTA;A9BqkTA;A8BpkTA;A9BskTA;A8BrkTA;A9BukTA;A8B9lTA;A9BgmTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BplTA;AACA;AAEA;A9BqlTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BplTO;AAOL;AACA;A9BglTF;A8BzkTE;AACE;AAEA;AACA;AACA;AACA;A9B0kTJ;A8BzkTI;AACE;AACA;AACD;A9B2kTL;AACA;A8B1kTI;AACE;AACE;AACA;AACD;AACF;AACF;A9B4kTH;A8B3kTE;AACD;AAED;A9B4kTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8B5kTO;AAOL;A9BwkTF;A8BjkTE;AACE;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACD;A9BmkTL;AACA;A8BlkTI;AACE;AACE;AACA;AACD;AACF;AACF;A9BokTH;A8BnkTE;AACD;AAED;A9BokTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BpkTA;AACE;A9BskTF;A8BrkTE;AACE;AACD;A9BukTH;A8BrkTE;AAEA;A9BskTF;A8B/jTE;AACE;A9BikTJ;A8BhkTI;AACE;AACE;AACD;A9BkkTP;A8BjkTM;AACD;AACF;A9BmkTH;AACA;A8BjkTE;AACA;AACA;AAAM;AAAO;AACb;AAEA;A9BokTF;A8BnkTE;AACE;AACD;AACC;AACA;AAGD;AACC;AACE;AACD;A9BmkTL;A8BlkTI;AACD;A9BokTH;A8BnkTE;A9BqkTF;A8BpkTE;AACE;AACD;A9BskTH;A8BrkTE;AACD;AAED;A9BskTA;AACA;AACA;AACA;AACA;AACA;AACA;A8BtkTA;AACE;AACA;AACE;AACD;A9BwkTH;AACA;A8BvkTE;AAAyB;AAAO;A9B2kTlC;A8B1kTE;AACE;AACA;AACD;A9B4kTH;AACA;A8B3kTE;AACD;AAED;A9B4kTA;AACA;AACA;AACA;AACA;AACA;A8B5kTO;AACL;AACD;AAED;A9B6kTA;AACA;AACA;AACA;AACA;AACA;AACA;A8B7kTA;AACE;AACA;AACD;AAED;A9B8kTA;AACA;A8B9kTA;AAEA;A9B+kTA;AACA;AACA;AACA;A8B9kTO;AACL;AACD;AAED;A9B+kTA;AACA;AACA;AACA;AACA;AACA;AACA;A8B/kTO;AACL;AACA;AAAY;AAAwB;AACpC;AAEI;AACD;AAEC;AACA;AACD;AAEC;AACA;AACA;AACA;A9BglTN;A8B/kTM;AACE;A9BilTR;A8BhlTQ;AAAU;AAAO;AAAgB;AAAkB;AACpD;A9BslTP;A8BrlTM;AACE;A9BulTR;A8BtlTQ;AACA;AACD;AACF;AACJ;AAED;A9BulTA;AACA;AACA;AACA;AACA;A8BvlTO;AACL;A9BylTF;A8BxlTE;AACE;AACD;A9B0lTH;A8BzlTE;AACA;AACD;AAED;A9B0lTA;AACA;AACA;AACA;AACA;A8B1lTA;AACE;AACE;AACA;AACA;AAHuC;AAK1C;AAED;A9B2lTA;AACA;AACA;AACA;AACA;AACA;AACA;A8B3lTO;AACL;AACD;AAED;A9B4lTA;AACA;AACA;AACA;AACA;AACA;AACA;A8B5lTA;AACE;A9B8lTF;A8B7lTE;AACE;A9B+lTJ;A8B9lTI;AACE;AACD;AACF;A9BgmTH;A8B/lTE;AACD;A9BimTD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Bn7TA;A/Bq7TA;A+Bp7TA;A/Bs7TA;A+Br7TA;A/Bu7TA;A+B18TA;A/B48TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Bz8TA;A/B28TA;A+Bt8TA;AACA;AAEA;A/Bu8TA;A+Bt8TA;AAEA;A/Bu8TA;AACA;AACA;AACA;AACA;A+Bt8TO;AACL;AACD;AAED;A/Bu8TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Bv8TA;AACE;AACE;A/By8TJ;A+Bx8TI;AACE;AACD;AACF;A/B08TH;A+Bz8TE;AACD;AAED;A/B08TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B18TO;AACL;AACE;AACA;AACD;A/B48TH;A+B38TE;AACE;AACD;A/B68TH;A+B58TE;A/B88TF;A+B78TE;AACE;A/B+8TJ;A+B98TI;AACE;AACA;A/Bg9TN;A+B98TM;AACE;AACD;AACF;A/Bg9TL;A+B/8TI;AACE;AACD;AACF;A/Bi9TH;A+Bh9TE;AACD;AAED;A/Bi9TA;AACA;AACA;AACA;AACA;AACA;AACA;A+Bj9TO;AAA6C;A/Bo9TpD;A+Bl9TE;AACE;AAKD;AACF;AAED;A/B+8TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B/8TO;AACL;A/Bi9TF;A+B58TE;AACE;AAA8B;AAAuB;AAGtD;AACF;AAED;A/B68TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B78TO;AACL;A/B+8TF;A+B18TE;AACE;AACD;A/B48TH;A+B38TE;AACD;AAED;A/B48TA;AACA;AACA;AACA;AACA;AACA;AACA;A+B58TO;AACL;AACE;AACD;AACF;AAED;A/B68TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B78TO;AACL;AACE;AAID;A/B48TH;A+B38TE;AACD;AAED;A/B48TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B58TO;AACL;AACE;AAID;A/B28TH;A+B18TE;AACD;AAED;A/B28TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B38TO;AAAsC;AAE3C;AAIA;AAMA;AACD;AAED;A/Bo8TA;AACA;AACA;AACA;AACA;AACA;A+Bp8TO;AACL;AACE;AACD;A/Bs8TH;A+Br8TE;AACE;AACD;AACC;AACD;AACF;AAED;A/Bs8TA;AACA;AACA;AACA;AACA;AACA;A+Bt8TO;AACL;AACD;AAED;A/Bu8TA;AACA;AACA;AACA;AACA;AACA;A+Bv8TO;AACL;AACD;AAED;A/Bw8TA;AACA;AACA;AACA;AACA;AACA;A+Bx8TO;AACL;AACE;AACD;A/B08TH;A+Bz8TE;AACD;AAED;A/B08TA;AACA;AACA;AACA;AACA;AACA;AACA;A+B18TO;AACL;AACE;AACD;A/B48TH;A+B38TE;AACE;AACD;A/B68TH;A+B58TE;AACE;AACD;A/B88TH;A+B78TE;AACD;AAED;A/B88TA;AACA;AACA;AACA;AACA;AACA;A+B98TO;AACL;AACD;AAED;A/B+8TA;AACA;AACA;AACA;AACA;AACA;A+B/8TO;AACL;AACE;AACD;A/Bi9TH;A+Bh9TE;AACD;AAED;A/Bi9TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Bj9TO;AACL;AAID;AAED;A/B+8TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B/8TO;AACL;AAAc;AAAqC;AACnD;AAAO;AAAwC;AAA/C;AACD;AAED;A/Bq9TA;AACA;AACA;AACA;AACA;AACA;A+Br9TO;AACL;AACE;AACD;AACF;AAED;A/Bs9TA;AACA;AACA;AACA;AACA;AACA;A+Bt9TO;AACL;AACE;AACD;A/Bw9TH;A+Bt9TE;AACE;AACD;AACF;A/Bw9TD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgC50UA;AhC80UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgC50UA;AACA;AAEA;AhC60UA;AACA;AACA;AACA;AACA;AgC50UA;AACE;AACD;AAED;AhC60UA;AACA;AACA;AACA;AACA;AACA;AgC70UO;AACL;AACD;AAED;AhC80UA;AACA;AACA;AACA;AACA;AACA;AACA;AgC90UO;AACL;AACD;AAED;AhC+0UA;AACA;AACA;AACA;AACA;AACA;AgC/0UO;AACL;AACD;AAED;AhCg1UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCh1UO;AACL;AACD;AAED;AhCi1UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCj1UO;AACL;AACE;AACE;AACD;AACF;AhCm1UH;AgCl1UE;AACD;AAED;AhCm1UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCn1UO;AACL;AAAO;AAAwB;AAA/B;AACD;AhCw1UD;AACA;AACA;AACA;AACA;AACA;AACA;AiC96UA;AjCg7UA;AiCh8UA;AjCk8UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiC77UA;AAEA;AjC87UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiC77UO;AACL;AAAe;AAA4B;AjCi8U7C;AiCh8UE;AACE;AACD;AjCk8UH;AiCh8UE;AjCk8UF;AiCj8UE;AACE;AACA;AACA;AACD;AjCm8UH;AiCl8UE;AACD;AjCo8UD;AACA;AACA;AACA;AACA;AACA;AACA;AkCr/UA;AlCu/UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCr/UA;AlCu/UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCr/UO;AAA0D;AAAf;AAAe;AlC0/UjE;AkCz/UE;AACE;AACD;AACC;AACD;AACF;AlC2/UD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmC9iVA;AnCgjVA;AmC/iVA;AnCijVA;AmChjVA;AnCkjVA;AmCjjVA;AnCmjVA;AmCljVA;AnCojVA;AmCnjVA;AnCqjVA;AmCpjVA;AnCsjVA;AmCrjVA;AnCujVA;AmCtjVA;AnCwjVA;AmChlVA;AnCklVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCtkVA;AnCwkVA;AACA;AmCtkVA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAV+B;AAajC;AnCukVA;AACA;AACA;AACA;AmCtkVA;AAEA;AnCukVA;AACA;AACA;AACA;AACA;AACA;AmCtkVA;AAEA;AnCukVA;AmCtkVA;AAEA;AnCukVA;AmCtkVA;AAEA;AnCukVA;AmCtkVA;AAEA;AnCukVA;AmCtkVA;AAEA;AnCukVA;AmCtkVA;AAEA;AACE;AAA4B;AAC5B;AAA4B;AAC5B;AAA4B;AAG9B;AnCwkVA;AmCvkVO;AAEP;AnCwkVA;AACA;AACA;AACA;AACA;AACA;AACA;AmCzkVO;AACL;AACD;AAED;AnC0kVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmC1kVO;AACL;AACE;AAAI;AAAmC;AACvC;AACD;AnC8kVH;AmC5kVE;AACD;AAED;AnC6kVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmC7kVO;AACL;AACE;AACD;AnC+kVH;AmC7kVE;AAGA;AnC6kVF;AmC5kVE;AACE;AACD;AnC8kVH;AmC5kVE;AAAa;AAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AnCglVJ;AmCzlVyC;AAavC;AnC+kVF;AmC9kVE;AACE;AACD;AAGD;AnC8kVF;AACA;AmC9kVE;AAIE;AACA;AACD;AAGD;AnC2kVF;AACA;AmC3kVE;AnC6kVF;AmC5kVE;AACE;AACD;AACC;AACD;AACC;AACD;AnC8kVH;AmC7kVE;AnC+kVF;AmC5kVE;AnC8kVF;AmC5kVE;AACE;AACD;AnC8kVH;AmC5kVE;AACD;AAED;AnC6kVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmC7kVO;AAKL;AACE;AACD;AnC2kVH;AmC1kVE;AACA;AAEA;AAOA;AACA;AACD;AACD;AnCqkVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCrkVO;AACL;AACA;AACD;AAED;AnCskVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCtkVO;AACL;AACD;AAED;AnCukVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCvkVO;AACL;AACA;AACA;AACA;AnCykVF;AmCxkVE;AACE;AACE;AACD;AACF;AnC0kVH;AmCzkVE;AACD;AAED;AnC0kVA;AACA;AACA;AACA;AACA;AACA;AACA;AmC1kVO;AACL;AnC4kVF;AmC3kVE;AACE;AnC6kVJ;AmC5kVI;AACE;AACD;AACC;AACE;AAAW;AAAuB;AAClC;AACD;AACF;AACC;AAAW;AAAuB;AAClC;AACD;AACF;AnCklVH;AmCjlVE;AACD;AAED;AnCklVA;AACA;AACA;AACA;AACA;AACA;AmCllVO;AACL;AACE;AACD;AnColVH;AmCnlVE;AAMD;AAED;AnC+kVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmC/kVO;AAIL;AADA;AACA;AnCglVF;AmC/kVE;AnCilVF;AmC1kVE;AAAqB;AAAuB;AAC5C;AASA;AACD;AAED;AnCqkVA;AACA;AACA;AACA;AACA;AACA;AmCrkVO;AACL;AAKA;AACD;AAED;AnCkkVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmClkVO;AACL;AACD;AAED;AnCmkVA;AACA;AACA;AACA;AACA;AACA;AACA;AmCnkVO;AACL;AnCqkVF;AmCpkVE;AACE;AACD;AnCskVH;AmCrkVE;AACD;AAED;AnCskVA;AACA;AACA;AACA;AACA;AACA;AACA;AmCtkVO;AACL;AnCwkVF;AmCvkVE;AACE;AACD;AnCykVH;AmCxkVE;AACD;AAED;AnCykVA;AACA;AACA;AACA;AACA;AACA;AmCzkVO;AACL;AACE;AACD;AnC2kVH;AmC1kVE;AACD;AAED;AnC2kVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmC3kVO;AACL;AACE;AACD;AnC6kVH;AmC5kVE;AACE;AACD;AnC8kVH;AmC7kVE;AACA;AACD;AAED;AnC8kVA;AACA;AACA;AACA;AACA;AACA;AmC9kVO;AACL;AACE;AACD;AnCglVH;AmC/kVE;AACD;AAED;AnCglVA;AACA;AACA;AACA;AACA;AACA;AACA;AmChlVO;AACL;AACE;AACD;AnCklVH;AmCjlVE;AACE;AACD;AnCmlVH;AmCllVE;AACD;AAED;AnCmlVA;AACA;AACA;AACA;AACA;AACA;AmCnlVO;AACL;AACA;AACA;AACD;AAED;AnColVA;AACA;AACA;AACA;AACA;AACA;AmCplVO;AACL;AnCslVF;AmCrlVE;AACE;AACD;AnCulVH;AmCtlVE;AACA;AACD;AAED;AnCulVA;AACA;AACA;AACA;AACA;AACA;AACA;AmCvlVA;AACE;AACE;AACD;AnCylVH;AmCxlVE;AnC0lVF;AmCnlVE;AACD;AAED;AnColVA;AACA;AACA;AACA;AACA;AACA;AACA;AmCplVO;AACL;AACA;AACA;AACE;AACD;AnCslVH;AmCrlVE;AACA;AACA;AACD;AAED;AnCslVA;AACA;AACA;AACA;AACA;AACA;AACA;AmCtlVO;AACL;AACE;AACD;AnCwlVH;AACA;AmCtlVE;AACE;AACD;AAGD;AACA;AACA;AnCslVF;AACA;AmCtlVE;AACA;AACA;AAKA;AACA;AnColVF;AmC/kVE;AACA;AACA;AAMD;AAED;AnC2kVA;AACA;AACA;AACA;AACA;AACA;AACA;AmC3kVO;AACL;AACD;AAED;AnC4kVA;AACA;AACA;AACA;AACA;AACA;AACA;AmC5kVO;AACL;AACE;AACD;AnC8kVH;AmC7kVE;AACE;AACD;AnC+kVH;AmC9kVE;AACD;AAED;AnC+kVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmC/kVO;AACL;AACE;AACD;AnCilVH;AmChlVE;AACA;AnCklVF;AmC/kVE;AACE;AACD;AnCilVH;AACA;AmC/kVE;AACE;AACD;AnCilVH;AACA;AmC/kVE;AACE;AACD;AnCilVH;AACA;AmC/kVE;AAKD;AAED;AnC4kVA;AACA;AACA;AACA;AACA;AACA;AACA;AmC5kVO;AACL;AACA;AACA;AACD;AAED;AnC6kVA;AACA;AACA;AACA;AACA;AmC7kVO;AACL;AACA;AACA;AAKD;AAED;AnC0kVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmC1kVO;AACL;AACD;AnC4kVD;AACA;AACA;AACA;AACA;AACA;AACA;AoC7tWA;ApC+tWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoC5tWA;ApC8tWA;AoC7tWA;ApC+tWA;AoC7tWA;ApC+tWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoC7tWO;AACL;AACA;AACA;AACA;AACE;AAAgB;AADP;AACO;ApCkuWpB;AoCjuWM;AACA;AACA;AACD;ApCmuWL;AoCluWI;AACD;AACF;ApCouWD;AACA;AACA;AACA;AACA;AACA;AACA;AqCrwWA;ArCuwWA;AqCvxWA;ArCyxWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqCrxWA;AACA;AAEA;ArCsxWA;AACA;AACA;AACA;AACA;AACA;AqCvxWE;ArCyxWF;AACA;AqCvxWE;AACE;AACA;AAEA;ArCwxWJ;AqCvxWI;AAEA;ArCwxWJ;AACA;AACA;AACA;AqCvxWI;AAEA;ArCwxWJ;AqCvxWI;AACD;AAED;ArCwxWF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqC1xWI;AACD;AAED;ArC2xWF;AACA;AACA;AACA;AACA;AACA;AqC3xWI;ArC6xWJ;AqC5xWI;AACE;AACA;AACD;ArC8xWL;AqC7xWI;AACD;AAED;ArC8xWF;AACA;AACA;AACA;AACA;AACA;AqC9xWI;AACE;AACD;ArCgyWL;AqC/xWI;AAAoB;AAAS;AAAV;AACnB;AACD;AAED;ArCmyWF;AACA;AACA;AACA;AACA;AqCnyWI;AACE;AACD;ArCqyWL;AqCnyWI;AACA;AACA;AACA;ArCqyWJ;AqCpyWI;AAAyB;ArCuyW7B;AqCryWM;AACE;AACA;AACD;AACF;ArCuyWL;AqCryWI;AACE;AACA;AACD;AACF;ArCuyWH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCj5WA;AtCm5WA;AsCn6WA;AtCq6WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCj6WA;AtCm6WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCj6WO;AACL;AACA;AtCm6WF;AsCl6WE;AACE;AACA;AACD;AtCo6WH;AsCl6WE;AACE;AACD;AACC;AACD;AtCo6WH;AsCl6WE;AACD;AAED;AtCm6WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCn6WO;AACL;AACD;AAED;AtCo6WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCp6WO;AACL;AACA;AACD;AAED;AtCq6WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCr6WO;AACL;AACA;AACD;AAED;AtCs6WA;AACA;AACA;AACA;AACA;AACA;AACA;AsCt6WO;AACL;AACD;AAED;AtCu6WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCv6WO;AACL;AACD;AAED;AtCw6WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCx6WO;AACL;AAEA;AACE;AACA;AAFK;AAIR;AAED;AtCw6WA;AACA;AACA;AACA;AACA;AACA;AsCx6WO;AACL;AACE;AACD;AACF;AtC06WD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuC1kXA;AvC4kXA;AuC5lXA;AvC8lXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuC1lXA;AACA;AAEA;AvC2lXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuC1lXO;AACL;AvC4lXF;AuC3lXE;AACE;AACD;AvC6lXH;AuC5lXE;AACD;AAED;AvC6lXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuC7lXO;AACL;AACA;AACA;AAAO;AAA4B;AAAnC;AACD;AAED;AvCimXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuCjmXO;AACL;AACD;AAED;AvCkmXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuClmXO;AACL;AACE;AACD;AACC;AACD;AACF;AAED;AvCmmXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuCnmXO;AAA+C;AAAZ;AAAY;AvCwmXtD;AuCvmXE;AACA;AAEA;AvCwmXF;AuCvmXE;AACA;AAAY;AAAW;AAAW;AAAvB;AvC6mXb;AuCnnXsD;AAAA;AAAA;AAAA;AAAA;AvCynXtD;AuC9mXI;AACE;AACD;AvCgnXL;AuC/mXI;AvCinXJ;AuChnXI;AACE;AACD;AvCknXL;AuCjnXI;AACE;AACA;AACD;AvCmnXL;AuClnXI;AACE;AAEA;AvCmnXN;AuClnXM;AACE;AvConXR;AuCnnXQ;AACE;AAAY;AAAa;AAAa;AAA3B;AACX;AACD;AACF;AvCynXP;AuCxnXM;AACD;AAlCiD;AvC6pXtD;AuCppXE;AAAyB;AvCupX3B;AuCvpX2B;AA0BxB;AvCgoXH;AuC/nXE;AACD;AAED;AvCgoXA;AACA;AACA;AACA;AACA;AACA;AuChoXO;AACL;AACE;AACE;AACD;AvCkoXL;AuCjoXI;AACD;AACF;AvCmoXD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwC3xXA;AxC6xXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwC3xXA;AxC6xXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwC3xXE;AxC6xXF;AACA;AwC3xXE;AACE;AAEA;AxC4xXJ;AACA;AACA;AwC3xXI;AAAmB;AAAO;AACxB;AACA;AACD;AAED;AxC8xXJ;AACA;AACA;AwC7xXI;AAEA;AxC8xXJ;AACA;AACA;AwC7xXI;AACD;AAGH;AxC6xXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwC/xXO;AACL;AACE;AACD;AACF;AAED;AxCgyXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwChyXO;AAAmC;AAAX;AAAW;AxCqyX1C;AwCpyXE;AACE;AACA;AxCsyXJ;AwCryXI;AACE;AACD;AxCuyXL;AwCtyXI;AACE;AACD;AxCwyXL;AwCvyXI;AACA;AxCyyXJ;AwCvyXI;AACE;AACE;AACD;AxCyyXP;AwCxyXM;AACE;AACD;AACF;AxC0yXL;AwCzyXI;AACE;AACE;AACD;AxC2yXP;AwC1yXM;AACE;AACD;AACF;AxC4yXL;AwC3yXI;AACE;AACD;AACF;AACF;AAED;AxC4yXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwC9yXE;AxCgzXF;AACA;AwC9yXE;AACE;AACA;AxCgzXJ;AwC/yXI;AACE;AACA;AACD;AAED;AxCgzXJ;AwC/yXI;AAEA;AxCgzXJ;AwC/yXI;AAEA;AxCgzXJ;AwC/yXI;AxCizXJ;AwC/yXI;AACE;AACE;AACD;AACF;AACF;AAED;AxCgzXF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCnzXe;AxCqzXf;AwCpzXI;AACA;AAEI;AACE;AACD;AACF;AAEC;AACA;AACA;AACE;AACD;AACF;AAEH;AACD;AAED;AxCkzXF;AACA;AACA;AwClzXI;AACD;AxCozXH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyCt+XA;AzCw+XA;AyCv+XA;AzCy+XA;AyCx+XA;AzC0+XA;AyC3/XA;AzC6/XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyCx/XA;AzC0/XA;AACA;AACA;AACA;AyCx/XA;AACE;AACA;AACE;AACD;AAGD;AACA;AACA;AzCw/XF;AACA;AyCx/XE;AAGA;AzCw/XF;AyCv/XE;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACE;AACA;AACA;AACA;AACA;AAL0B;AAS5B;AzCq/XF;AyCp/XE;AAAmB;AAAA;AAElB;AAED;AACD;AAED;AzCq/XA;AACA;AyCr/XA;AAEA;AzCs/XA;AACA;AACA;AyCr/XA;AACE;AAAsB;AAA4D;AAGnF;AAED;AzCs/XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyC1/XE;AzC4/XF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyC1/XI;AACE;AACD;AzC4/XL;AyC3/XI;AACD;AAED;AzC4/XF;AACA;AACA;AyC5/XI;AACD;AzC8/XH;AACA;AACA;AyC7/XA;AzC+/XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyCjgYO;AACL;AACD;AzCmgYD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0C7nYA;A1C+nYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0C5nYO;AAEP;A1C6nYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0CpoYE;A1CsoYF;AACA;AACA;AACA;AACA;A0CnoYE;A1CqoYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0CpoYE;A1CsoYF;AACA;AACA;AACA;AACA;AACA;A0CroYE;A1CuoYF;AACA;AACA;AACA;AACA;AACA;A0CtoYE;A1CwoYF;AACA;AACA;AACA;AACA;AACA;A0CvoYE;A1CyoYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0CxoYE;A1C0oYF;AACA;AACA;AACA;AACA;A0CzoYE;A1C2oYF;AACA;AACA;AACA;AACA;A0C1oYE;A1C4oYF;AACA;AACA;AACA;AACA;A0C3oYE;A1C6oYF;AACA;AACA;AACA;AACA;AACA;AACA;A0C5oYE;A1C8oYF;AACA;AACA;AACA;AACA;AACA;AACA;A0C7oYE;A1C+oYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0C9oYE;A1CgpYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0C/oYE;A1CipYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0ChpYE;A1CkpYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0CjpYE;A1CmpYF;AACA;AACA;AACA;AACA;A0ClpYE;A1CopYF;AACA;AACA;AACA;AACA;AACA;A0CnpYE;A1CqpYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0CtpYA;A1CwpYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0CzpYO;AACL;A1C2pYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0CzpYE;A1C2pYF;A0C1pYE;A1C4pYF;AACA;AACA;AACA;AACA;A0C1pYE;A1C4pYF;A0C3pYE;A1C6pYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0C3pYE;A1C6pYF;A0C5pYE;A1C8pYF;AACA;AACA;AACA;A0C5pYE;AA/C6B;AAkD/B;A1C6pYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0C7pYO;AACL;A1C+pYF;AACA;AACA;AACA;AACA;AACA;AACA;A0C7pYE;A1C+pYF;A0C7pYE;A1C+pYF;AACA;AACA;AACA;AACA;AACA;AACA;A0C7pYE;A1C+pYF;A0C7pYE;A1C+pYF;AACA;AACA;AACA;AACA;AACA;A0C7pYE;A1C+pYF;A0C7pYE;A1C+pYF;AACA;AACA;AACA;AACA;AACA;A0C7pYE;A1C+pYF;A0C7pYE;A1C+pYF;AACA;AACA;AACA;AACA;AACA;A0C7pYE;A1C+pYF;A0C7pYE;A1C+pYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0C7pYE;A1C+pYF;A0C7pYE;A1C+pYF;AACA;AACA;AACA;AACA;AACA;A0C7pYE;A1C+pYF;A0C7pYE;A1C+pYF;AACA;AACA;AACA;AACA;AACA;A0C7pYE;A1C+pYF;A0C7pYE;A1C+pYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0C7pYE;A1C+pYF;A0C7pYE;A1C+pYF;AACA;AACA;AACA;AACA;AACA;A0C7pYE;A1C+pYF;A0C7pYE;A1C+pYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0C7pYE;A1C+pYF;A0C7pYE;A1C+pYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0C7pYE;A1C+pYF;A0C7pYE;A1C+pYF;AACA;AACA;AACA;AACA;AACA;A0C7pYE;AAhIyB;AAmI3B;A1C8pYA;AACA;A0C9pYO;AAEP;A1C+pYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0C/pYO;AACL;A1CiqYF;AACA;AACA;AACA;AACA;AACA;AACA;A0C/pYE;A1CiqYF;A0C/pYE;A1CiqYF;AACA;AACA;AACA;AACA;AACA;A0C/pYE;A1CiqYF;A0C/pYE;A1CiqYF;AACA;AACA;AACA;AACA;AACA;A0C/pYE;AA3B2B;AA8B7B;A1CgqYA;AACA;A0ChqYO;AACL;A1CkqYF;AACA;AACA;AACA;AACA;AACA;A0ChqYE;A1CkqYF;A0ChqYE;A1CkqYF;AACA;AACA;AACA;AACA;AACA;A0ChqYE;A1CkqYF;A0ChqYE;A1CkqYF;AACA;AACA;AACA;AACA;AACA;A0ChqYE;A1CkqYF;A0ChqYE;A1CkqYF;AACA;AACA;AACA;AACA;AACA;A0ChqYE;A1CkqYF;A0ChqYE;A1CkqYF;AACA;AACA;AACA;AACA;AACA;A0ChqYE;A1CkqYF;A0ChqYE;A1CkqYF;AACA;AACA;AACA;AACA;AACA;AACA;A0ChqYE;A1CkqYF;A0ChqYE;A1CkqYF;AACA;AACA;AACA;AACA;AACA;A0ChqYE;A1CkqYF;A0ChqYE;A1CkqYF;AACA;AACA;AACA;AACA;AACA;A0ChqYE;A1CkqYF;A0ChqYE;A1CkqYF;AACA;AACA;AACA;AACA;AACA;A0ChqYE;A1CkqYF;A0ChqYE;A1CkqYF;AACA;AACA;AACA;AACA;AACA;A0ChqYE;AA1FkC;AA6FpC;A1CiqYA;AACA;AACA;AACA;AACA;AACA;A0CjqYO;AAEP;A1CkqYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0ClqYO;AAEP;A1CmqYA;AACA;AACA;AACA;AACA;AACA;A0CpqYO;AACL;AACD;AAED;A1CqqYA;AACA;A0CrqYO;AACL;AACA;AAFiC;AAKnC;A1CsqYA;AACA;AACA;A0CvqYO;AACL;AACD;AAED;A1CwqYA;AACA;A0CxqYO;AACL;AACD;A1C0qYD;AACA;AACA;AACA;AACA;AACA;AACA;A2C1sZA;A3C4sZA;A2CzsZA;A3C2sZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2CzsZA;A3C2sZA;A2CzsZA;AACE;AACA;AACE;AACD;A3C2sZH;AACA;A2C1sZE;AACE;AACD;AAED;AACA;A3C2sZF;AACA;A2C3sZE;AACE;AACD;AAED;A3C4sZF;AACA;A2C5sZE;AACD;AAED;A3C6sZA;AACA;AACA;AACA;AACA;AACA;A2C7sZO;AACL;AACD;A3C+sZD;AACA;AACA;AFjwZA;AACA","file":"amp-dailymotion-0.1.max.js","sourcesContent":["(self.AMP=self.AMP||[]).push({n:\"amp-dailymotion\",v:\"1910072132470\",f:(function(AMP,_){\n$1\n})});","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.cssText = void 0;\n\n/** @noinline */\nvar cssText = \"i-amphtml-video-mask{display:block;z-index:1}.amp-video-eq{display:none}.i-amphtml-video-component:not(amp-video) .amp-video-eq,amp-story .amp-video-eq,amp-video[controls] .amp-video-eq{display:-ms-flexbox;display:flex}[noaudio] .amp-video-eq{display:none!important}.amp-video-eq{pointer-events:none!important;-ms-flex-align:end;align-items:flex-end;bottom:7px;height:12px;opacity:0.8;overflow:hidden;position:absolute;right:7px;width:20px;z-index:1}.amp-video-eq .amp-video-eq-col{-ms-flex:1;flex:1;height:100%;margin-right:1px;position:relative}.amp-video-eq .amp-video-eq-col div{animation-name:amp-video-eq-animation;animation-timing-function:linear;animation-iteration-count:infinite;animation-direction:alternate;background-color:#fafafa;height:100%;position:absolute;width:100%;will-change:transform;animation-play-state:paused}.amp-video-eq[unpausable] .amp-video-eq-col div{animation-name:none}.amp-video-eq[unpausable].amp-video-eq-play .amp-video-eq-col div{animation-name:amp-video-eq-animation}.amp-video-eq.amp-video-eq-play .amp-video-eq-col div{animation-play-state:running}.amp-video-eq-1-1{animation-duration:0.3s;transform:translateY(60%)}.amp-video-eq-1-2{animation-duration:0.45s;transform:translateY(60%)}.amp-video-eq-2-1{animation-duration:0.5s;transform:translateY(30%)}.amp-video-eq-2-2{animation-duration:0.4s;transform:translateY(30%)}.amp-video-eq-3-1{animation-duration:0.3s;transform:translateY(70%)}.amp-video-eq-3-2{animation-duration:0.35s;transform:translateY(70%)}.amp-video-eq-4-1{animation-duration:0.4s;transform:translateY(50%)}.amp-video-eq-4-2{animation-duration:0.25s;transform:translateY(50%)}@keyframes amp-video-eq-animation{0%{transform:translateY(100%)}to{transform:translateY(0)}}\\n/*# sourceURL=/css/video-autoplay.css*/\";\nexports.cssText = cssText;\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\nvar _promise = require(\"../../../src/utils/promise\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _videoInterface = require(\"../../../src/video-interface\");\n\nvar _url = require(\"../../../src/url\");\n\nvar _iframeVideo = require(\"../../../src/iframe-video\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _dom = require(\"../../../src/dom\");\n\nvar _eventHelper = require(\"../../../src/event-helper\");\n\nvar _videoManagerImpl = require(\"../../../src/service/video-manager-impl\");\n\nvar _layout = require(\"../../../src/layout\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar TAG = 'amp-dailymotion';\n/**\n * Player events reverse-engineered from the Dailymotion API\n * NOTE: 'unstarted' isn't part of the API, just a placeholder\n * as an initial state\n *\n * @enum {string}\n * @private\n */\n\nvar DailymotionEvents = {\n  UNSTARTED: 'unstarted',\n  API_READY: 'apiready',\n  // Events fired for both the original content or ads\n  START: 'start',\n  PLAY: 'play',\n  PAUSE: 'pause',\n  END: 'end',\n  // Events fired only for ads\n  AD_START: 'ad_start',\n  AD_PLAY: 'ad_play',\n  AD_PAUSE: 'ad_pause',\n  AD_END: 'ad_end',\n  // Events fired only for the original content\n  VIDEO_START: 'video_start',\n  VIDEO_END: 'video_end',\n  // Other events\n  VOLUMECHANGE: 'volumechange',\n  STARTED_BUFFERING: 'progress',\n  FULLSCREEN_CHANGE: 'fullscreenchange'\n};\n/**\n * @implements {../../../src/video-interface.VideoInterface}\n */\n\nvar AmpDailymotion =\n/*#__PURE__*/\nfunction (_AMP$BaseElement) {\n  _inheritsLoose(AmpDailymotion, _AMP$BaseElement);\n\n  /** @param {!AmpElement} element */\n  function AmpDailymotion(element) {\n    var _this;\n\n    _this = _AMP$BaseElement.call(this, element) || this;\n    /** @private {string} */\n\n    _this.playerState_ = DailymotionEvents.UNSTARTED;\n    /** @private {?string}  */\n\n    _this.videoid_ = null;\n    /** @private {?Element} */\n\n    _this.iframe_ = null;\n    /** @private {boolean}  */\n\n    _this.muted_ = false;\n    /** @private {?Promise} */\n\n    _this.playerReadyPromise_ = null;\n    /** @private {?Function} */\n\n    _this.playerReadyResolver_ = null;\n    /** @private {?Promise} */\n\n    _this.startedBufferingPromise_ = null;\n    /** @private {?Function} */\n\n    _this.startedBufferingResolver_ = null;\n    /** @private {boolean} */\n\n    _this.isFullscreen_ = false;\n    return _this;\n  }\n  /**\n   * @param {boolean=} opt_onLayout\n   * @override\n   */\n\n\n  var _proto = AmpDailymotion.prototype;\n\n  _proto.preconnectCallback = function preconnectCallback(opt_onLayout) {\n    this.preconnect.url('https://www.dailymotion.com', opt_onLayout); // Host that Dailymotion uses to serve JS needed by player.\n\n    this.preconnect.url('https://static1.dmcdn.net', opt_onLayout);\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.supportsPlatform = function supportsPlatform() {\n    return true;\n  }\n  /** @override */\n  ;\n\n  _proto.isInteractive = function isInteractive() {\n    // Dailymotion videos are always interactive. There is no Dailymotion param\n    // that makes the video non-interactive. Even controls=false will not\n    // prevent user from pausing or resuming the video.\n    return true;\n  }\n  /** @override */\n  ;\n\n  _proto.isLayoutSupported = function isLayoutSupported(layout) {\n    return (0, _layout.isLayoutSizeDefined)(layout);\n  }\n  /** @override */\n  ;\n\n  _proto.viewportCallback = function viewportCallback(visible) {\n    this.element.dispatchCustomEvent(_videoInterface.VideoEvents.VISIBILITY, {\n      visible: visible\n    });\n  }\n  /** @override */\n  ;\n\n  _proto.buildCallback = function buildCallback() {\n    this.videoid_ = (0, _log.userAssert)(this.element.getAttribute('data-videoid'), 'The data-videoid attribute is required for <amp-dailymotion> %s', this.element);\n    (0, _videoManagerImpl.installVideoManagerForDoc)(this.element);\n\n    _services.Services.videoManagerForDoc(this.element).register(this);\n\n    var readyDeferred = new _promise.Deferred();\n    this.playerReadyPromise_ = readyDeferred.promise;\n    this.playerReadyResolver_ = readyDeferred.resolve;\n    var bufferingDeferred = new _promise.Deferred();\n    this.startedBufferingPromise_ = bufferingDeferred.promise;\n    this.startedBufferingResolver_ = bufferingDeferred.resolve;\n  }\n  /** @override */\n  ;\n\n  _proto.layoutCallback = function layoutCallback() {\n    (0, _log.devAssert)(this.videoid_);\n    this.iframe_ = (0, _iframeVideo.createFrameFor)(this, this.getIframeSrc_());\n    (0, _eventHelper.listen)(this.win, 'message', this.handleEvents_.bind(this));\n    return this.loadPromise(this.iframe_);\n  }\n  /**\n   * @param {!Event} event\n   * @private\n   */\n  ;\n\n  _proto.handleEvents_ = function handleEvents_(event) {\n    var _redispatch;\n\n    if (!(0, _iframeVideo.originMatches)(event, this.iframe_, 'https://www.dailymotion.com')) {\n      return;\n    }\n\n    var eventData = (0, _eventHelper.getData)(event);\n\n    if (!eventData || !event.type || event.type != 'message') {\n      return; // Event empty\n    }\n\n    var data = (0, _url.parseQueryString)(\n    /** @type {string} */\n    eventData);\n\n    if (data === undefined) {\n      return; // The message isn't valid\n    }\n\n    (0, _iframeVideo.redispatch)(this.element, data['event'], (_redispatch = {}, _redispatch[DailymotionEvents.API_READY] = _videoInterface.VideoEvents.LOAD, _redispatch[DailymotionEvents.END] = [_videoInterface.VideoEvents.ENDED, _videoInterface.VideoEvents.PAUSE], _redispatch[DailymotionEvents.PAUSE] = _videoInterface.VideoEvents.PAUSE, _redispatch[DailymotionEvents.PLAY] = _videoInterface.VideoEvents.PLAYING, _redispatch));\n\n    switch (data['event']) {\n      case DailymotionEvents.API_READY:\n        this.playerReadyResolver_(true);\n        break;\n\n      case DailymotionEvents.END:\n        this.playerState_ = DailymotionEvents.PAUSE;\n        break;\n\n      case DailymotionEvents.PAUSE:\n      case DailymotionEvents.PLAY:\n        this.playerState_ = data['event'];\n        break;\n\n      case DailymotionEvents.VOLUMECHANGE:\n        var isMuted = data['volume'] == 0 || data['muted'] == 'true';\n\n        if (this.playerState_ == DailymotionEvents.UNSTARTED || this.muted_ != isMuted) {\n          this.muted_ = isMuted;\n          this.element.dispatchCustomEvent((0, _iframeVideo.mutedOrUnmutedEvent)(isMuted));\n        }\n\n        break;\n\n      case DailymotionEvents.STARTED_BUFFERING:\n        this.startedBufferingResolver_(true);\n        break;\n\n      case DailymotionEvents.FULLSCREEN_CHANGE:\n        this.isFullscreen_ = data['fullscreen'] == 'true';\n        break;\n\n      default: // nothing\n\n    }\n  }\n  /**\n   * Sends a command to the player through postMessage.\n   * @param {string} command\n   * @param {Array<boolean>=} opt_args\n   * @private\n   */\n  ;\n\n  _proto.sendCommand_ = function sendCommand_(command, opt_args) {\n    var _this2 = this;\n\n    var endpoint = 'https://www.dailymotion.com';\n    this.playerReadyPromise_.then(function () {\n      if (_this2.iframe_ && _this2.iframe_.contentWindow) {\n        var message = JSON.stringify((0, _object.dict)({\n          'command': command,\n          'parameters': opt_args || []\n        }));\n\n        _this2.iframe_.contentWindow.\n        /*OK*/\n        postMessage(message, endpoint);\n      }\n    });\n  }\n  /** @private */\n  ;\n\n  _proto.getIframeSrc_ = function getIframeSrc_() {\n    var _this3 = this;\n\n    var iframeSrc = 'https://www.dailymotion.com/embed/video/' + encodeURIComponent(this.videoid_ || '') + '?api=1&html=1&app=amp';\n    var explicitParamsAttributes = ['mute', 'endscreen-enable', 'sharing-enable', 'start', 'ui-highlight', 'ui-logo', 'info'];\n    explicitParamsAttributes.forEach(function (explicitParam) {\n      var val = _this3.element.getAttribute(\"data-\" + explicitParam);\n\n      if (val) {\n        iframeSrc = (0, _url.addParamToUrl)(iframeSrc, explicitParam, val);\n      }\n    });\n    var implicitParams = (0, _dom.getDataParamsFromAttributes)(this.element);\n    iframeSrc = (0, _url.addParamsToUrl)(iframeSrc, implicitParams);\n    return iframeSrc;\n  }\n  /** @override */\n  ;\n\n  _proto.pauseCallback = function pauseCallback() {\n    this.pause();\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.play = function play(isAutoplay) {\n    var _this4 = this;\n\n    this.sendCommand_('play'); // Hack to solve autoplay problem on Chrome Android\n    // (first play always fails)\n\n    if (isAutoplay && this.playerState_ != DailymotionEvents.PAUSE) {\n      this.startedBufferingPromise_.then(function () {\n        _this4.sendCommand_('play');\n      });\n    }\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.sendCommand_('pause');\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.mute = function mute() {\n    var _this5 = this;\n\n    this.sendCommand_('muted', [true]); // Hack to simulate firing mute events when video is not playing\n    // since Dailymotion only fires volume changes when the video has started\n\n    this.playerReadyPromise_.then(function () {\n      _this5.element.dispatchCustomEvent(_videoInterface.VideoEvents.MUTED);\n\n      _this5.muted_ = true;\n    });\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.unmute = function unmute() {\n    var _this6 = this;\n\n    this.sendCommand_('muted', [false]); // Hack to simulate firing mute events when video is not playing\n    // since Dailymotion only fires volume changes when the video has started\n\n    this.playerReadyPromise_.then(function () {\n      _this6.element.dispatchCustomEvent(_videoInterface.VideoEvents.UNMUTED);\n\n      _this6.muted_ = false;\n    });\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.showControls = function showControls() {\n    this.sendCommand_('controls', [true]);\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.hideControls = function hideControls() {\n    this.sendCommand_('controls', [false]);\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.fullscreenEnter = function fullscreenEnter() {\n    var platform = _services.Services.platformFor(this.win);\n\n    if (platform.isSafari() || platform.isIos()) {\n      this.sendCommand_('fullscreen', [true]);\n    } else {\n      if (!this.iframe_) {\n        return;\n      }\n\n      (0, _dom.fullscreenEnter)((0, _log.dev)().assertElement(this.iframe_));\n    }\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.fullscreenExit = function fullscreenExit() {\n    var platform = _services.Services.platformFor(this.win);\n\n    if (platform.isSafari() || platform.isIos()) {\n      this.sendCommand_('fullscreen', [false]);\n    } else {\n      if (!this.iframe_) {\n        return;\n      }\n\n      (0, _dom.fullscreenExit)((0, _log.dev)().assertElement(this.iframe_));\n    }\n  }\n  /** @override */\n  ;\n\n  _proto.isFullscreen = function isFullscreen() {\n    var platform = _services.Services.platformFor(this.win);\n\n    if (platform.isSafari() || platform.isIos()) {\n      return this.isFullscreen_;\n    } else {\n      if (!this.iframe_) {\n        return false;\n      }\n\n      return (0, _dom.isFullscreenElement)((0, _log.dev)().assertElement(this.iframe_));\n    }\n  }\n  /** @override */\n  ;\n\n  _proto.getMetadata = function getMetadata() {} // Not implemented\n\n  /** @override */\n  ;\n\n  _proto.preimplementsMediaSessionAPI = function preimplementsMediaSessionAPI() {\n    return false;\n  }\n  /** @override */\n  ;\n\n  _proto.preimplementsAutoFullscreen = function preimplementsAutoFullscreen() {\n    return false;\n  }\n  /** @override */\n  ;\n\n  _proto.getCurrentTime = function getCurrentTime() {\n    // Not supported.\n    return 0;\n  }\n  /** @override */\n  ;\n\n  _proto.getDuration = function getDuration() {\n    // Not supported.\n    return 1;\n  }\n  /** @override */\n  ;\n\n  _proto.getPlayedRanges = function getPlayedRanges() {\n    // Not supported.\n    return [];\n  }\n  /** @override */\n  ;\n\n  _proto.seekTo = function seekTo(unusedTimeSeconds) {\n    this.user().error(TAG, '`seekTo` not supported.');\n  };\n\n  return AmpDailymotion;\n}(AMP.BaseElement);\n\nAMP.extension(TAG, '0.1', function (AMP) {\n  AMP.registerElement(TAG, AmpDailymotion);\n});\n\n},{\"../../../src/dom\":7,\"../../../src/event-helper\":10,\"../../../src/iframe-video\":12,\"../../../src/layout\":15,\"../../../src/log\":16,\"../../../src/service/video-manager-impl\":23,\"../../../src/services\":27,\"../../../src/url\":35,\"../../../src/utils/object\":39,\"../../../src/utils/promise\":40,\"../../../src/video-interface\":42}],3:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.ActionTrust = exports.DEFAULT_ACTION = exports.RAW_OBJECT_ARGS_KEY = void 0;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Key string in an action arguments map for an unparsed object literal string.\n *\n * E.g. for the action in <p on=\"tap:AMP.setState({foo: 'bar'})\",\n * then `args[RAW_OBJECT_ARGS_KEY]` is the string \"{foo: 'bar'}\".\n *\n * The action service delegates parsing of object literals to the corresponding\n * extension (in the example above, amp-bind).\n *\n * @see ./service/action-impl.ActionInfoDef\n * @const {string}\n */\nvar RAW_OBJECT_ARGS_KEY = '__AMP_OBJECT_STRING__';\n/** @const {string} Identifier for an element's default action. */\n\nexports.RAW_OBJECT_ARGS_KEY = RAW_OBJECT_ARGS_KEY;\nvar DEFAULT_ACTION = 'activate';\n/**\n * Trust level of an action.\n *\n * Corresponds to degree of user intent, i.e. events triggered with strong\n * user intent have high trust.\n *\n * @enum {number}\n */\n\nexports.DEFAULT_ACTION = DEFAULT_ACTION;\nvar ActionTrust = {\n  LOW: 1,\n  HIGH: 100\n};\nexports.ActionTrust = ActionTrust;\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.CommonSignals = void 0;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Commonly used signals across different elements and documents.\n * @enum {string}\n */\nvar CommonSignals = {\n  /**\n   * The element has been upgraded from ElementStub to its real implementation.\n   */\n  UPGRADED: 'upgraded',\n\n  /**\n   * The element has been built.\n   */\n  BUILT: 'built',\n\n  /**\n   * The element has started loading.\n   * LOAD_START triggers at the start of the layoutCallback.\n   */\n  LOAD_START: 'load-start',\n\n  /**\n   * Rendering has been confirmed to have been started.\n   * It is a signal to indicate meaningful display (e.g. text could be displayed\n   * CSS is correctly installed/applied).\n   *\n   * Elements can optionally implement RENDER_START signal. (e.g. ad, shadowdoc)\n   * if it want to define its own meaningful display time and toggle visibility.\n   *\n   * Simpler elements's RENDER_START can be equal to the start of the\n   * buildCallback\n   */\n  RENDER_START: 'render-start',\n\n  /**\n   * The element has been loaded.\n   * LOAD_END triggers at the end of the layoutCallback.\n   *\n   */\n  LOAD_END: 'load-end',\n\n  /**\n   * The initial contents of an element/document/embed have been loaded.\n   * INI_LOAD is an optional signal, implemented by ads, story, and elements\n   * that consist of other resources.\n   * It instructs that all critical resources has been loaded, and can be used\n   * for more accurate visibility measurement.\n   * When an element doesn't consist multiple child resources, LOAD_END signal\n   * can be used to indicate resource load completion.\n   * Note: Based on the implementation, INI_LOAD can trigger before or after\n   * LOAD_END.\n   */\n  INI_LOAD: 'ini-load',\n\n  /**\n   * The element has been unlaid out.\n   */\n  UNLOAD: 'unload'\n};\nexports.CommonSignals = CommonSignals;\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.config = exports.urls = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nvar env = self.AMP_CONFIG || {};\nvar thirdPartyFrameRegex = typeof env['thirdPartyFrameRegex'] == 'string' ? new RegExp(env['thirdPartyFrameRegex']) : env['thirdPartyFrameRegex'];\nvar cdnProxyRegex = typeof env['cdnProxyRegex'] == 'string' ? new RegExp(env['cdnProxyRegex']) : env['cdnProxyRegex'];\n/** @type {!Object<string, string|boolean|RegExp|Array<RegExp>>} */\n\nvar urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex: thirdPartyFrameRegex || /^d-\\d+\\.ampproject\\.net$/,\n  cdn: env['cdnUrl'] || 'https://cdn.ampproject.org',\n\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex: cdnProxyRegex || /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting: env['errorReportingUrl'] || 'https://amp-error-reporting.appspot.com/r',\n  localDev: env['localDev'] || false,\n\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/master/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [/(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/, /(^|\\.)gmail\\.dev$/]\n};\nexports.urls = urls;\nvar config = {\n  urls: urls\n};\nexports.config = config;\n\n},{}],6:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.assertIsName = assertIsName;\nexports.setScopeSelectorSupportedForTesting = setScopeSelectorSupportedForTesting;\nexports.isScopeSelectorSupported = isScopeSelectorSupported;\nexports.prependSelectorsWith = prependSelectorsWith;\nexports.escapeCssSelectorIdent = escapeCssSelectorIdent;\nexports.escapeCssSelectorNth = escapeCssSelectorNth;\n\nvar _cssEscape = require(\"../third_party/css-escape/css-escape\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nfunction assertIsName(name) {\n  (0, _log.devAssert)(/^[\\w-]+$/.test(name));\n}\n/**\n * @type {boolean|undefined}\n */\n\n\nvar scopeSelectorSupported;\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\n\nfunction setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\n\n\nfunction isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return scopeSelectorSupported = testScopeSelector(el);\n}\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\n\n\nfunction testScopeSelector(el) {\n  try {\n    var doc = el.ownerDocument;\n    var testElement = doc.createElement('div');\n    var testChild = doc.createElement('div');\n    testElement.appendChild(testChild); // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n\n    return testElement.\n    /*OK*/\n    querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\n\n\nfunction prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, \"$&\" + distribute + \" \");\n}\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n */\n\n\nfunction escapeCssSelectorIdent(ident) {\n  return (0, _cssEscape.cssEscape)(ident);\n}\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\n\n\nfunction escapeCssSelectorNth(ident) {\n  var escaped = String(ident); // Ensure it doesn't close the nth-child psuedo class.\n\n  (0, _log.devAssert)(escaped.indexOf(')') === -1);\n  return escaped;\n}\n\n},{\"../third_party/css-escape/css-escape\":43,\"./log\":16}],7:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.waitForChild = waitForChild;\nexports.waitForChildPromise = waitForChildPromise;\nexports.waitForBodyOpen = waitForBodyOpen;\nexports.waitForBodyOpenPromise = waitForBodyOpenPromise;\nexports.removeElement = removeElement;\nexports.removeChildren = removeChildren;\nexports.copyChildren = copyChildren;\nexports.insertAfterOrAtStart = insertAfterOrAtStart;\nexports.addAttributesToElement = addAttributesToElement;\nexports.createElementWithAttributes = createElementWithAttributes;\nexports.isConnectedNode = isConnectedNode;\nexports.rootNodeFor = rootNodeFor;\nexports.isShadowRoot = isShadowRoot;\nexports.closest = closest;\nexports.closestNode = closestNode;\nexports.closestAncestorElementBySelector = closestAncestorElementBySelector;\nexports.ancestorElements = ancestorElements;\nexports.ancestorElementsByTag = ancestorElementsByTag;\nexports.childElement = childElement;\nexports.childElements = childElements;\nexports.lastChildElement = lastChildElement;\nexports.childNodes = childNodes;\nexports.childElementByAttr = childElementByAttr;\nexports.lastChildElementByAttr = lastChildElementByAttr;\nexports.childElementsByAttr = childElementsByAttr;\nexports.childElementByTag = childElementByTag;\nexports.childElementsByTag = childElementsByTag;\nexports.matches = matches;\nexports.elementByTag = elementByTag;\nexports.scopedQuerySelector = scopedQuerySelector;\nexports.scopedQuerySelectorAll = scopedQuerySelectorAll;\nexports.getDataParamsFromAttributes = getDataParamsFromAttributes;\nexports.hasNextNodeInDocumentOrder = hasNextNodeInDocumentOrder;\nexports.templateContentClone = templateContentClone;\nexports.iterateCursor = iterateCursor;\nexports.openWindowDialog = openWindowDialog;\nexports.isJsonScriptTag = isJsonScriptTag;\nexports.isJsonLdScriptTag = isJsonLdScriptTag;\nexports.isRTL = isRTL;\nexports.escapeHtml = escapeHtml;\nexports.tryFocus = tryFocus;\nexports.isIframed = isIframed;\nexports.isAmpElement = isAmpElement;\nexports.whenUpgradedToCustomElement = whenUpgradedToCustomElement;\nexports.fullscreenEnter = fullscreenEnter;\nexports.fullscreenExit = fullscreenExit;\nexports.isFullscreenElement = isFullscreenElement;\nexports.isEnabled = isEnabled;\nexports.domOrderComparator = domOrderComparator;\nexports.toggleAttribute = toggleAttribute;\nexports.getVerticalScrollbarWidth = getVerticalScrollbarWidth;\nexports.UPGRADE_TO_CUSTOMELEMENT_RESOLVER = exports.UPGRADE_TO_CUSTOMELEMENT_PROMISE = void 0;\n\nvar _promise = require(\"./utils/promise\");\n\nvar _css = require(\"./css\");\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object\");\n\nvar _string = require(\"./string\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;'\n};\nvar HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n/** @const {string} */\n\nvar UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n/** @const {string} */\n\nexports.UPGRADE_TO_CUSTOMELEMENT_PROMISE = UPGRADE_TO_CUSTOMELEMENT_PROMISE;\nvar UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\n\nexports.UPGRADE_TO_CUSTOMELEMENT_RESOLVER = UPGRADE_TO_CUSTOMELEMENT_RESOLVER;\n\nfunction waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n\n\n  var win = (0, _types.toWin)(parent.ownerDocument.defaultView);\n\n  if (win.MutationObserver) {\n    /** @const {MutationObserver} */\n    var observer = new win.MutationObserver(function () {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {\n      childList: true\n    });\n  } else {\n    /** @const {number} */\n    var interval = win.setInterval(function () {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    },\n    /* milliseconds */\n    5);\n  }\n}\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\n\n\nfunction waitForChildPromise(parent, checkFunc) {\n  return new Promise(function (resolve) {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\n\n\nfunction waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, function () {\n    return !!doc.body;\n  }, callback);\n}\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\n\n\nfunction waitForBodyOpenPromise(doc) {\n  return new Promise(function (resolve) {\n    return waitForBodyOpen(doc, resolve);\n  });\n}\n/**\n * Removes the element.\n * @param {!Element} element\n */\n\n\nfunction removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element} parent\n */\n\n\nfunction removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\n\n\nfunction copyChildren(from, to) {\n  var frag = to.ownerDocument.createDocumentFragment();\n\n  for (var n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n\n  to.appendChild(frag);\n}\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node} after\n */\n\n\nfunction insertAfterOrAtStart(root, element, after) {\n  var before = after ? after.nextSibling : root.firstChild;\n  root.insertBefore(element, before);\n}\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\n\n\nfunction addAttributesToElement(element, attributes) {\n  for (var attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n\n  return element;\n}\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\n\n\nfunction createElementWithAttributes(doc, tagName, attributes) {\n  var element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\n\n\nfunction isConnectedNode(node) {\n  var connected = node.isConnected;\n\n  if (connected !== undefined) {\n    return connected;\n  } // \"An element is connected if its shadow-including root is a document.\"\n\n\n  var n = node;\n\n  do {\n    n = rootNodeFor(n);\n\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\n\n\nfunction rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n\n  var n; // Check isShadowRoot() is only needed for the polyfill case.\n\n  for (n = node; !!n.parentNode && !isShadowRoot(n); n = n.parentNode) {}\n\n  return n;\n}\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isShadowRoot(value) {\n  // TODO(#22733): remove in preference to dom's `rootNodeFor`.\n  if (!value) {\n    return false;\n  } // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n\n\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n\n  return value.nodeType ==\n  /* DOCUMENT_FRAGMENT */\n  11 && Object.prototype.toString.call(value) === '[object ShadowRoot]';\n}\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\n\n\nfunction closest(element, callback, opt_stopAt) {\n  for (var el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\n\n\nfunction closestNode(node, callback) {\n  for (var n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\n\n\nfunction closestAncestorElementBySelector(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  return closest(element, function (el) {\n    return matches(el, selector);\n  });\n}\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\n\n\nfunction ancestorElements(child, predicate) {\n  var ancestors = [];\n\n  for (var ancestor = child.parentElement; ancestor; ancestor = ancestor.parentElement) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n\n  return ancestors;\n}\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\n\n\nfunction ancestorElementsByTag(child, tagName) {\n  (0, _css.assertIsName)(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, function (el) {\n    return el.tagName == tagName;\n  });\n}\n/**\n * Finds the first child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\n\n\nfunction childElement(parent, callback) {\n  for (var child = parent.firstElementChild; child; child = child.nextElementSibling) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\n\n\nfunction childElements(parent, callback) {\n  var children = [];\n\n  for (var child = parent.firstElementChild; child; child = child.nextElementSibling) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n\n  return children;\n}\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\n\n\nfunction lastChildElement(parent, callback) {\n  for (var child = parent.lastElementChild; child; child = child.previousElementSibling) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\n\n\nfunction childNodes(parent, callback) {\n  var nodes = [];\n\n  for (var child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n\n  return nodes;\n}\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\n\n\nfunction childElementByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return (\n    /*OK*/\n    scopedQuerySelector(parent, \"> [\" + attr + \"]\")\n  );\n}\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\n\n\nfunction lastChildElementByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return lastChildElement(parent, function (el) {\n    return el.hasAttribute(attr);\n  });\n}\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\n\n\nfunction childElementsByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return (\n    /*OK*/\n    scopedQuerySelectorAll(parent, \"> [\" + attr + \"]\")\n  );\n}\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {?Element}\n */\n\n\nfunction childElementByTag(parent, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return (\n    /*OK*/\n    scopedQuerySelector(parent, \"> \" + tagName)\n  );\n}\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\n\n\nfunction childElementsByTag(parent, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return (\n    /*OK*/\n    scopedQuerySelectorAll(parent, \"> \" + tagName)\n  );\n}\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\n\n\nfunction matches(el, selector) {\n  var matcher = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector || el.oMatchesSelector;\n\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n\n  return false; // IE8 always returns false.\n}\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\n\n\nfunction elementByTag(element, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return element.\n  /*OK*/\n  querySelector(tagName);\n}\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\n\n\nfunction scopedQuerySelectionFallback(root, selector) {\n  var unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  var scopedSelector = (0, _css.prependSelectorsWith)(selector, \".\" + unique);\n  var elements = root.\n  /*OK*/\n  querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {?Element}\n */\n\n\nfunction scopedQuerySelector(root, selector) {\n  if ((0, _css.isScopeSelectorSupported)(root)) {\n    return root.\n    /*OK*/\n    querySelector((0, _css.prependSelectorsWith)(selector, ':scope'));\n  } // Only IE.\n\n\n  var fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\n\n\nfunction scopedQuerySelectorAll(root, selector) {\n  if ((0, _css.isScopeSelectorSupported)(root)) {\n    return root.\n    /*OK*/\n    querySelectorAll((0, _css.prependSelectorsWith)(selector, ':scope'));\n  } // Only IE.\n\n\n  return scopedQuerySelectionFallback(root, selector);\n}\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!Element} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\n\n\nfunction getDataParamsFromAttributes(element, opt_computeParamNameFunc, opt_paramPattern) {\n  var computeParamNameFunc = opt_computeParamNameFunc || function (key) {\n    return key;\n  };\n\n  var dataset = element.dataset;\n  var params = (0, _object.dict)();\n  var paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n\n  for (var key in dataset) {\n    var _matches = key.match(paramPattern);\n\n    if (_matches) {\n      var param = _matches[1][0].toLowerCase() + _matches[1].substr(1);\n\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n\n  return params;\n}\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\n\n\nfunction hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  var currentElement = element;\n\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while ((currentElement = currentElement.parentNode) && currentElement != opt_stopNode);\n\n  return false;\n}\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\n\n\nfunction templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    var content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\n\n\nfunction iterateCursor(iterable, cb) {\n  var length = iterable.length;\n\n  for (var i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\n\n\nfunction openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  var res;\n\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    (0, _log.dev)().error('DOM', 'Failed to open url on target: ', target, e);\n  } // Then try with `_top` target.\n\n\n  if (!res && target != '_top' && !(0, _string.includes)(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n\n  return res;\n}\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isJsonScriptTag(element) {\n  return element.tagName == 'SCRIPT' && element.hasAttribute('type') && element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON';\n}\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isJsonLdScriptTag(element) {\n  return element.tagName == 'SCRIPT' && element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON';\n}\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\n\n\nfunction isRTL(doc) {\n  var dir = doc.body.getAttribute('dir') || doc.documentElement.getAttribute('dir') || 'ltr';\n  return dir == 'rtl';\n}\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\n\n\nfunction escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n/**\n * @param {string} c\n * @return {string}\n */\n\n\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\n\n\nfunction tryFocus(element) {\n  try {\n    element.\n    /*OK*/\n    focus();\n  } catch (e) {// IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nfunction isIframed(win) {\n  return win.parent && win.parent != win;\n}\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isAmpElement(element) {\n  var tag = element.tagName; // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n\n  return (0, _string.startsWith)(tag, 'AMP-') && // Some \"amp-*\" elements are not really AMP elements. :smh:\n  !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY');\n}\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!Element} element\n * @return {!Promise<!Element>}\n */\n\n\nfunction whenUpgradedToCustomElement(element) {\n  (0, _log.devAssert)(isAmpElement(element), 'element is not AmpElement');\n\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(element);\n  } // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n\n\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    var deferred = new _promise.Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n/**\n * Replacement for `Element.requestFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n * @param {!Element} element\n */\n\n\nfunction fullscreenEnter(element) {\n  var requestFs = element.requestFullscreen || element.requestFullScreen || element.webkitRequestFullscreen || element.webkitEnterFullscreen || element.msRequestFullscreen || element.mozRequestFullScreen;\n\n  if (requestFs) {\n    requestFs.call(element);\n  }\n}\n/**\n * Replacement for `Document.exitFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/exitFullscreen\n * @param {!Element} element\n */\n\n\nfunction fullscreenExit(element) {\n  var elementBoundExit = element.cancelFullScreen || element.exitFullscreen || element.webkitExitFullscreen || element.webkitCancelFullScreen || element.mozCancelFullScreen || element.msExitFullscreen;\n\n  if (elementBoundExit) {\n    elementBoundExit.call(element);\n    return;\n  }\n\n  var ownerDocument = element.ownerDocument;\n\n  if (!ownerDocument) {\n    return;\n  }\n\n  var docBoundExit = ownerDocument.cancelFullScreen || ownerDocument.exitFullscreencancelFullScreen || ownerDocument.webkitExitFullscreencancelFullScreen || ownerDocument.webkitCancelFullScreencancelFullScreen || ownerDocument.mozCancelFullScreencancelFullScreen || ownerDocument.msExitFullscreen;\n\n  if (docBoundExit) {\n    docBoundExit.call(ownerDocument);\n  }\n}\n/**\n * Replacement for `Document.fullscreenElement`.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenElement\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isFullscreenElement(element) {\n  var webkitDisplayingFullscreen = element.webkitDisplayingFullscreen;\n\n  if (webkitDisplayingFullscreen !== undefined) {\n    return webkitDisplayingFullscreen;\n  }\n\n  var ownerDocument = element.ownerDocument;\n\n  if (!ownerDocument) {\n    return false;\n  }\n\n  var fullscreenElement = ownerDocument.fullscreenElement || ownerDocument.webkitFullscreenElement || ownerDocument.mozFullScreenElement || ownerDocument.webkitCurrentFullScreenElement;\n  return fullscreenElement == element;\n}\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!Element} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\n\n\nfunction isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\n\n\nfunction domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  var pos = element1.compareDocumentPosition(element2);\n  var precedingOrContains = Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS; // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n\n  if (pos & precedingOrContains) {\n    return 1;\n  } // if fe2 is following or contained by fe1, then fe1 is before fe2\n\n\n  return -1;\n}\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\n\n\nfunction toggleAttribute(element, name, forced) {\n  var hasAttribute = element.hasAttribute(name);\n  var enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\n\n\nfunction getVerticalScrollbarWidth(win) {\n  var documentElement = win.document.documentElement;\n  var windowWidth = win.\n  /*OK*/\n  innerWidth;\n  var documentWidth = documentElement.\n  /*OK*/\n  clientWidth;\n  return windowWidth - documentWidth;\n}\n\n},{\"./css\":6,\"./log\":16,\"./string\":29,\"./types\":32,\"./utils/object\":39,\"./utils/promise\":40}],8:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getElementService = getElementService;\nexports.getElementServiceIfAvailable = getElementServiceIfAvailable;\nexports.getElementServiceForDoc = getElementServiceForDoc;\nexports.getElementServiceIfAvailableForDoc = getElementServiceIfAvailableForDoc;\nexports.getElementServiceIfAvailableForDocInEmbedScope = getElementServiceIfAvailableForDocInEmbedScope;\nexports.extensionScriptsInNode = extensionScriptsInNode;\nexports.isExtensionScriptInNode = isExtensionScriptInNode;\n\nvar dom = _interopRequireWildcard(require(\"./dom\"));\n\nvar _service = require(\"./service\");\n\nvar _types = require(\"./types\");\n\nvar _log = require(\"./log\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nfunction getElementService(win, id, extension, opt_element) {\n  return getElementServiceIfAvailable(win, id, extension, opt_element).then(function (service) {\n    return assertService(service, id, extension);\n  });\n}\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailable(win, id, extension, opt_element) {\n  var s = (0, _service.getServicePromiseOrNull)(win, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      s\n    );\n  }\n\n  return getElementServicePromiseOrNull(win, id, extension, opt_element);\n}\n/**\n * @param {!Window} win\n * @param {string} elementName Name of an extended custom element.\n * @return {boolean} Whether this element is scheduled to be loaded.\n */\n\n\nfunction isElementScheduled(win, elementName) {\n  // Set in custom-element.js\n  if (!win.__AMP_EXTENDED_ELEMENTS) {\n    return false;\n  }\n\n  return !!win.__AMP_EXTENDED_ELEMENTS[elementName];\n}\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\n\n\nfunction getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(element, id, extension, opt_element).then(function (service) {\n    return assertService(service, id, extension);\n  });\n}\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailableForDoc(element, id, extension, opt_element) {\n  var s = (0, _service.getServicePromiseOrNullForDoc)(element, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      s\n    );\n  }\n\n  var ampdoc = (0, _service.getAmpdoc)(element);\n  return ampdoc.waitForBodyOpen().then(function () {\n    return waitForExtensionIfPresent(ampdoc.win, extension, ampdoc.win.document.head);\n  }).then(function () {\n    // If this service is provided by an element, then we can't depend on\n    // the service (they may not use the element).\n    if (opt_element) {\n      return (0, _service.getServicePromiseOrNullForDoc)(element, id);\n    } else if (isElementScheduled(ampdoc.win, extension)) {\n      return (0, _service.getServicePromiseForDoc)(element, id);\n    }\n\n    return null;\n  });\n}\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailableForDocInEmbedScope(element, id, extension) {\n  var s = (0, _service.getExistingServiceForDocInEmbedScope)(element, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      Promise.resolve(s)\n    );\n  }\n\n  var win = (0, _types.toWin)(element.ownerDocument.defaultView);\n  var topWin = (0, _service.getTopWindow)(win); // In embeds, doc services are stored on the embed window.\n\n  if (win !== topWin) {\n    return getElementServicePromiseOrNull(win, id, extension);\n  } else {\n    // Only fallback to element's ampdoc (top-level) if not embedded.\n    return getElementServiceIfAvailableForDoc(element, id, extension);\n  }\n}\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction assertService(service, id, extension) {\n  return (\n    /** @type {!Object} */\n    (0, _log.userAssert)(service, 'Service %s was requested to be provided through %s, ' + 'but %s is not loaded in the current page. To fix this ' + 'problem load the JavaScript file for %s in this page.', id, extension, extension, extension)\n  );\n}\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Array<string>}\n */\n\n\nfunction extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n\n  var scripts = {}; // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n\n  var list = head.querySelectorAll('script[custom-element],script[custom-template]');\n\n  for (var i = 0; i < list.length; i++) {\n    var script = list[i];\n    var name = script.getAttribute('custom-element') || script.getAttribute('custom-template');\n    scripts[name] = true;\n  }\n\n  return Object.keys(scripts);\n}\n/**\n * Waits for body to be present then verifies that an extension script is\n * present in head for installation.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} extensionId\n * @return {!Promise<boolean>}\n */\n\n\nfunction isExtensionScriptInNode(ampdoc, extensionId) {\n  return ampdoc.waitForBodyOpen().then(function () {\n    return extensionScriptInNode(ampdoc.getHeadNode(), extensionId);\n  });\n}\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @param {string} extensionId\n * @return {boolean}\n * @private\n */\n\n\nfunction extensionScriptInNode(head, extensionId) {\n  return extensionScriptsInNode(head).includes(extensionId);\n}\n/**\n * Waits for an extension if its script is present\n * @param {!Window} win\n * @param {string} extension\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Promise}\n * @private\n */\n\n\nfunction waitForExtensionIfPresent(win, extension, head) {\n  /**\n   * If there is an extension script wait for it to load before trying\n   * to get the service. Prevents a race condition when everything but\n   * the extensions is in cache. If there is no script then it's either\n   * not present, or the service was defined by a test. In those cases\n   * we don't wait around for an extension that does not exist.\n   */\n  // TODO(jpettitt) investigate registerExtension to short circuit\n  // the dom call in extensionScriptsInNode()\n  if (!extensionScriptInNode(head, extension)) {\n    return Promise.resolve();\n  }\n\n  var extensions = (0, _service.getService)(win, 'extensions');\n  return (\n    /** @type {!Promise<?Object>} */\n    extensions.waitForExtension(win, extension)\n  );\n}\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\n\n\nfunction getElementServicePromiseOrNull(win, id, extension, opt_element) {\n  return dom.waitForBodyOpenPromise(win.document).then(function () {\n    return waitForExtensionIfPresent(win, extension, win.document.head);\n  }).then(function () {\n    // If this service is provided by an element, then we can't depend on\n    // the service (they may not use the element).\n    if (opt_element) {\n      return (0, _service.getServicePromiseOrNull)(win, id);\n    } else if (isElementScheduled(win, extension)) {\n      return (0, _service.getServicePromise)(win, id);\n    }\n\n    return null;\n  });\n}\n\n},{\"./dom\":7,\"./log\":16,\"./service\":22,\"./types\":32}],9:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.internalListenImplementation = internalListenImplementation;\nexports.detectEvtListenerOptsSupport = detectEvtListenerOptsSupport;\nexports.resetEvtListenerOptsSupportForTesting = resetEvtListenerOptsSupportForTesting;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nvar optsSupported;\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\nfunction internalListenImplementation(element, eventType, listener, opt_evtListenerOpts) {\n  var localElement = element;\n  var localListener = listener;\n  /**\n   * @type {?Function}\n   */\n\n  var wrapped;\n\n  wrapped = function wrapped(event) {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n\n      throw e;\n    }\n  };\n\n  var optsSupported = detectEvtListenerOptsSupport();\n  var capture = false;\n\n  if (opt_evtListenerOpts) {\n    capture = opt_evtListenerOpts.capture;\n  }\n\n  localElement.addEventListener(eventType, wrapped, optsSupported ? opt_evtListenerOpts : capture);\n  return function () {\n    if (localElement) {\n      localElement.removeEventListener(eventType, wrapped, optsSupported ? opt_evtListenerOpts : capture);\n    } // Ensure these are GC'd\n\n\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\n\n\nfunction detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    var options = {\n      get capture() {\n        optsSupported = true;\n      }\n\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {// EventListenerOptions are not supported\n  }\n\n  return optsSupported;\n}\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\n\n\nfunction resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n\n},{}],10:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.createCustomEvent = createCustomEvent;\nexports.listen = listen;\nexports.getData = getData;\nexports.getDetail = getDetail;\nexports.listenOnce = listenOnce;\nexports.listenOncePromise = listenOncePromise;\nexports.isLoaded = isLoaded;\nexports.loadPromise = loadPromise;\nexports.isLoadErrorMessage = isLoadErrorMessage;\nexports.MEDIA_LOAD_FAILURE_SRC_PROPERTY = void 0;\n\nvar _eventHelperListen = require(\"./event-helper-listen\");\n\nvar _dom = require(\"./dom\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string}  */\nvar LOAD_FAILURE_PREFIX = 'Failed to load:';\n/** @const {string} */\n\nvar MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\n\nexports.MEDIA_LOAD_FAILURE_SRC_PROPERTY = MEDIA_LOAD_FAILURE_SRC_PROPERTY;\n\nfunction createCustomEvent(win, type, detail, opt_eventInit) {\n  var eventInit =\n  /** @type {!CustomEventInit} */\n  {\n    detail: detail\n  };\n  Object.assign(eventInit, opt_eventInit); // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n\n  if (typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    var e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(type, !!eventInit.bubbles, !!eventInit.cancelable, detail);\n    return e;\n  }\n}\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\n\nfunction listen(element, eventType, listener, opt_evtListenerOpts) {\n  return (0, _eventHelperListen.internalListenImplementation)(element, eventType, listener, opt_evtListenerOpts);\n}\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\n\n\nfunction getData(event) {\n  return (\n    /** @type {?JsonObject|string|undefined} */\n    event.data\n  );\n}\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\n\n\nfunction getDetail(event) {\n  return (\n    /** @type {?JsonObject|string|undefined} */\n    event.detail\n  );\n}\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\n\nfunction listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  var localListener = listener;\n  var unlisten = (0, _eventHelperListen.internalListenImplementation)(element, eventType, function (event) {\n    try {\n      localListener(event);\n    } finally {\n      // Ensure listener is GC'd\n      localListener = null;\n      unlisten();\n    }\n  }, opt_evtListenerOpts);\n  return unlisten;\n}\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\n\n\nfunction listenOncePromise(element, eventType, opt_evtListenerOpts, opt_cancel) {\n  var unlisten;\n  var eventPromise = new Promise(function (resolve) {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n\n  return eventPromise;\n}\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\n\n\nfunction isLoaded(eleOrWindow) {\n  return !!(eleOrWindow.complete || eleOrWindow.readyState == 'complete' || isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0 || // If the passed in thing is a Window, infer loaded state from\n  //\n  eleOrWindow.document && eleOrWindow.document.readyState == 'complete');\n}\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\n\n\nfunction loadPromise(eleOrWindow) {\n  var unlistenLoad;\n  var unlistenError;\n\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n\n  var isMediaElement = isHTMLMediaElement(eleOrWindow);\n\n  if (isMediaElement && eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc) {\n    return Promise.reject(eleOrWindow);\n  }\n\n  var loadingPromise = new Promise(function (resolve, reject) {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    } // Don't unlisten on error for Windows.\n\n\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n\n    var errorTarget = eleOrWindow; // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = (0, _dom.lastChildElement)(eleOrWindow, function (child) {\n        return child.tagName === 'SOURCE';\n      });\n\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n  return loadingPromise.then(function () {\n    if (unlistenError) {\n      unlistenError();\n    }\n\n    return eleOrWindow;\n  }, function () {\n    if (unlistenLoad) {\n      unlistenLoad();\n    }\n\n    failedToLoad(eleOrWindow);\n  });\n}\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\n\n\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] = eleOrWindow.currentSrc || true;\n  } // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n\n\n  var target = eleOrWindow;\n\n  if (target && target.src) {\n    target = target.src;\n  }\n\n  throw (0, _log.user)().createError(LOAD_FAILURE_PREFIX, target);\n}\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\n\n\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\n\n\nfunction isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n\n},{\"./dom\":7,\"./event-helper-listen\":9,\"./log\":16}],11:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isCanary = isCanary;\nexports.getBinaryType = getBinaryType;\nexports.isExperimentOn = isExperimentOn;\nexports.toggleExperiment = toggleExperiment;\nexports.experimentToggles = experimentToggles;\nexports.experimentTogglesOrNull = experimentTogglesOrNull;\nexports.getExperimentTogglesForTesting = getExperimentTogglesForTesting;\nexports.resetExperimentTogglesForTesting = resetExperimentTogglesForTesting;\nexports.randomlySelectUnsetExperiments = randomlySelectUnsetExperiments;\nexports.getExperimentBranch = getExperimentBranch;\nexports.forceExperimentBranch = forceExperimentBranch;\nexports.RANDOM_NUMBER_GENERATORS = exports.ExperimentInfo = void 0;\n\nvar _log = require(\"./log\");\n\nvar _mode = require(\"./mode\");\n\nvar _object = require(\"./utils/object\");\n\nvar _url = require(\"./url\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\n/** @const {string} */\nvar TAG = 'EXPERIMENTS';\n/** @const {string} */\n\nvar LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n/** @const {string} */\n\nvar TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n/**\n * @typedef {{\n *   isTrafficEligible: function(!Window):boolean,\n *   branches: !Array<string>\n * }}\n */\n\nvar ExperimentInfo;\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\n\nexports.ExperimentInfo = ExperimentInfo;\n\nfunction isCanary(win) {\n  return !!(win.AMP_CONFIG && win.AMP_CONFIG.canary);\n}\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\n\n\nfunction getBinaryType(win) {\n  return win.AMP_CONFIG && win.AMP_CONFIG.type ? win.AMP_CONFIG.type : 'unknown';\n}\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\n\n\nfunction isExperimentOn(win, experimentId) {\n  var toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\n\n\nfunction toggleExperiment(win, experimentId, opt_on, opt_transientExperiment) {\n  var currentlyOn = isExperimentOn(win,\n  /*OK*/\n  experimentId);\n  var on = !!(opt_on !== undefined ? opt_on : !currentlyOn);\n\n  if (on != currentlyOn) {\n    var toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      var storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles); // Avoid affecting tests that spy/stub warn().\n\n      if (!(0, _mode.getMode)().test) {\n        (0, _log.user)().warn(TAG, '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental', experimentId, on ? 'enabled' : 'disabled', win.location.hostname);\n      }\n    }\n  }\n\n  return on;\n}\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\n\n\nfunction experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n\n  win[TOGGLES_WINDOW_PROPERTY] = Object.create(null);\n  var toggles = win[TOGGLES_WINDOW_PROPERTY]; // Read the default config of this build.\n\n  if (win.AMP_CONFIG) {\n    for (var experimentId in win.AMP_CONFIG) {\n      var frequency = win.AMP_CONFIG[experimentId];\n\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  } // Read document level override from meta tag.\n\n\n  if (win.AMP_CONFIG && Array.isArray(win.AMP_CONFIG['allow-doc-opt-in']) && win.AMP_CONFIG['allow-doc-opt-in'].length > 0) {\n    var allowed = win.AMP_CONFIG['allow-doc-opt-in'];\n    var meta = win.document.head.querySelector('meta[name=\"amp-experiments-opt-in\"]');\n\n    if (meta) {\n      var optedInExperiments = meta.getAttribute('content').split(',');\n\n      for (var i = 0; i < optedInExperiments.length; i++) {\n        if (allowed.indexOf(optedInExperiments[i]) != -1) {\n          toggles[optedInExperiments[i]] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  if (win.AMP_CONFIG && Array.isArray(win.AMP_CONFIG['allow-url-opt-in']) && win.AMP_CONFIG['allow-url-opt-in'].length > 0) {\n    var _allowed = win.AMP_CONFIG['allow-url-opt-in'];\n    var hash = win.location.originalHash || win.location.hash;\n    var params = (0, _url.parseQueryString)(hash);\n\n    for (var _i = 0; _i < _allowed.length; _i++) {\n      var param = params[\"e-\" + _allowed[_i]];\n\n      if (param == '1') {\n        toggles[_allowed[_i]] = true;\n      }\n\n      if (param == '0') {\n        toggles[_allowed[_i]] = false;\n      }\n    }\n  }\n\n  return toggles;\n}\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {Object<string, boolean>}\n */\n\n\nfunction experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\n\n\nfunction getExperimentToggles(win) {\n  var experimentsString = '';\n\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch (e) {\n    (0, _log.dev)().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n\n  var tokens = experimentsString ? experimentsString.split(/\\s*,\\s*/g) : [];\n  var toggles = Object.create(null);\n\n  for (var i = 0; i < tokens.length; i++) {\n    if (tokens[i].length == 0) {\n      continue;\n    }\n\n    if (tokens[i][0] == '-') {\n      toggles[tokens[i].substr(1)] = false;\n    } else {\n      toggles[tokens[i]] = true;\n    }\n  }\n\n  return toggles;\n}\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\n\n\nfunction saveExperimentToggles(win, toggles) {\n  var experimentIds = [];\n\n  for (var experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n\n  try {\n    if ('localStorage' in win) {\n      win.localStorage.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n    }\n  } catch (e) {\n    (0, _log.user)().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\n\n\nfunction getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\n\n\nfunction resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\n\n\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\n\n\nvar RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng\n};\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\n\nexports.RANDOM_NUMBER_GENERATORS = RANDOM_NUMBER_GENERATORS;\n\nfunction selectRandomItem(arr) {\n  var rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return arr[Math.floor(rn * arr.length)] || null;\n}\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Object<string, !ExperimentInfo>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\n\n\nfunction randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  var selectedExperiments = {};\n\n  for (var experimentName in experiments) {\n    // Skip experimentName if it is not a key of experiments object or if it\n    // has already been populated by some other property.\n    if (!(0, _object.hasOwn)(experiments, experimentName)) {\n      continue;\n    }\n\n    if ((0, _object.hasOwn)(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] = win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (!experiments[experimentName].isTrafficEligible || !experiments[experimentName].isTrafficEligible(win)) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    } // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n\n\n    if (!win.__AMP_EXPERIMENT_BRANCHES[experimentName] && isExperimentOn(win,\n    /*OK*/\n    experimentName)) {\n      var branches = experiments[experimentName].branches;\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(branches);\n      selectedExperiments[experimentName] = win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n\n  return selectedExperiments;\n}\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\n\n\nfunction getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES ? win.__AMP_EXPERIMENT_BRANCHES[experimentName] : null;\n}\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\n\n\nfunction forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n\n},{\"./log\":16,\"./mode\":19,\"./url\":35,\"./utils/object\":39}],12:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.originMatches = originMatches;\nexports.redispatch = redispatch;\nexports.createFrameFor = createFrameFor;\nexports.isJsonOrObj = isJsonOrObj;\nexports.objOrParseJson = objOrParseJson;\nexports.mutedOrUnmutedEvent = mutedOrUnmutedEvent;\nexports.addUnsafeAllowAutoplay = addUnsafeAllowAutoplay;\nexports.SandboxOptions = void 0;\n\nvar _services = require(\"./services\");\n\nvar _videoInterface = require(\"./video-interface\");\n\nvar _log = require(\"./log\");\n\nvar _staticTemplate = require(\"./static-template\");\n\nvar _types = require(\"./types\");\n\nvar _string = require(\"./string\");\n\nvar _json = require(\"./json\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"<iframe frameborder=0 allowfullscreen></iframe>\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) { if (!raw) { raw = strings.slice(0); } strings.raw = raw; return strings; }\n\n/** @enum {string} */\nvar SandboxOptions = {\n  ALLOW_SCRIPTS: 'allow-scripts',\n  ALLOW_SAME_ORIGIN: 'allow-same-origin',\n  ALLOW_POPUPS: 'allow-popups',\n  ALLOW_POPUPS_TO_ESCAPE_SANDBOX: 'allow-popups-to-escape-sandbox',\n  ALLOW_TOP_NAVIGATION_BY_USER_ACTIVATION: 'allow-top-navigation-by-user-activation'\n};\n/**\n * @param {!Event} event\n * @param {?Element} iframe\n * @param {string|!RegExp} host\n * @return {boolean}\n */\n\nexports.SandboxOptions = SandboxOptions;\n\nfunction originMatches(event, iframe, host) {\n  if (!iframe || event.source != iframe.contentWindow) {\n    return false;\n  }\n\n  if (typeof host === 'string') {\n    return host == event.origin;\n  }\n\n  return host.test(event.origin);\n}\n/**\n * Re-dispatches an event received from postMessage as an event in the host\n * document.\n *\n * @param {!AmpElement} element\n * @param {string} event\n * @param {!Object<string, (string|?Array<string>)>} events\n * @return {boolean}\n */\n\n\nfunction redispatch(element, event, events) {\n  if (events[event] == null) {\n    return false;\n  }\n\n  var dispatchEvent = events[event];\n  ((0, _types.isArray)(dispatchEvent) ? dispatchEvent : [dispatchEvent]).forEach(function (e) {\n    element.dispatchCustomEvent((0, _log.dev)().assertString(e));\n  });\n  return true;\n}\n/**\n * @param {!./base-element.BaseElement} video\n * @param {string} src\n * @param {string=} opt_name\n * @param {!Array<!SandboxOptions>=} opt_sandbox\n * @return {!Element}\n */\n\n\nfunction createFrameFor(video, src, opt_name, opt_sandbox) {\n  var element = video.element;\n  var frame = (0, _staticTemplate.htmlFor)(element)(_templateObject());\n\n  if (opt_name) {\n    frame.setAttribute('name', opt_name);\n  }\n\n  if (opt_sandbox) {\n    frame.setAttribute('sandbox', opt_sandbox.join(' '));\n  } // Will propagate for every component, but only validation rules will actually\n  // allow the attribute to be set.\n\n\n  video.propagateAttributes(['referrerpolicy'], frame);\n  frame.src = _services.Services.urlForDoc(element).assertHttpsUrl(src, element);\n  video.applyFillContent(frame);\n  element.appendChild(frame);\n  return frame;\n}\n/**\n * @param {?} anything\n * @return {boolean}\n */\n\n\nfunction isJsonOrObj(anything) {\n  if (!anything) {\n    return false;\n  }\n\n  return (0, _types.isObject)(anything) || (0, _string.startsWith)(\n  /** @type {string} */\n  anything, '{');\n}\n/**\n * @param {?JsonObject|string|undefined} objOrStr\n * @return {?JsonObject|undefined}\n */\n\n\nfunction objOrParseJson(objOrStr) {\n  if ((0, _types.isObject)(objOrStr)) {\n    return (\n      /** @type {!JsonObject} */\n      objOrStr\n    );\n  }\n\n  return (0, _json.tryParseJson)(objOrStr);\n}\n/**\n * @param {boolean} isMuted\n * @return {string}\n */\n\n\nfunction mutedOrUnmutedEvent(isMuted) {\n  return isMuted ? _videoInterface.VideoEvents.MUTED : _videoInterface.VideoEvents.UNMUTED;\n}\n/**\n * TEMPORARY workaround for M72-M74 user-activation breakage.\n * If this method is still here in May 2019, please ping @aghassemi\n * Only used by trusted video players: IMA and YouTube.\n * See https://github.com/ampproject/amphtml/issues/21242 for details.\n * TODO(aghassemi, #21247)\n * @param {Element} iframe\n */\n\n\nfunction addUnsafeAllowAutoplay(iframe) {\n  var val = iframe.getAttribute('allow') || '';\n  val += 'autoplay;';\n  iframe.setAttribute('allow', val);\n}\n\n},{\"./json\":14,\"./log\":16,\"./services\":27,\"./static-template\":28,\"./string\":29,\"./types\":32,\"./video-interface\":42}],13:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.internalRuntimeVersion = internalRuntimeVersion;\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nfunction internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n\n},{}],14:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.recreateNonProtoObject = recreateNonProtoObject;\nexports.getValueForExpr = getValueForExpr;\nexports.parseJson = parseJson;\nexports.tryParseJson = tryParseJson;\nexports.getChildJsonConfig = getChildJsonConfig;\nexports.deepEquals = deepEquals;\nexports.jsonConfiguration = jsonConfiguration;\nexports.jsonLiteral = jsonLiteral;\nexports.includeJsonLiteral = includeJsonLiteral;\n\nvar _dom = require(\"./dom\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {*} should be string|number|boolean|null\n */\nvar JSONScalarDef;\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {*} should be !Object<string, ?JSONValueDef>\n */\n\nvar JSONObjectDef;\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {*} should be !Array<?JSONValueDef>\n */\n\nvar JSONArrayDef;\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {*} should be !JSONScalarDef|!JSONObjectDef|!JSONArrayDef\n */\n\nvar JSONValueDef;\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\n\nfunction recreateNonProtoObject(obj) {\n  var copy = Object.create(null);\n\n  for (var k in obj) {\n    if (!hasOwnProperty(obj, k)) {\n      continue;\n    }\n\n    var v = obj[k];\n    copy[k] = (0, _types.isObject)(v) ? recreateNonProtoObject(v) : v;\n  }\n\n  return (\n    /** @type {!JsonObject} */\n    copy\n  );\n}\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\n\n\nfunction getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  } // Otherwise, navigate via properties.\n\n\n  var parts = expr.split('.');\n  var value = obj;\n\n  for (var i = 0; i < parts.length; i++) {\n    var part = parts[i];\n\n    if (part && value && value[part] !== undefined && hasOwnProperty(value, part)) {\n      value = value[part];\n      continue;\n    }\n\n    value = undefined;\n    break;\n  }\n\n  return value;\n}\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {*} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\n\n\nfunction parseJson(json) {\n  return (\n    /** @type {?JsonObject} */\n    JSON.parse(\n    /** @type {string} */\n    json)\n  );\n}\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {*} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\n\n\nfunction tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    if (opt_onFailed) {\n      opt_onFailed(e);\n    }\n\n    return null;\n  }\n}\n/**\n * Helper method to get the json config from an element <script> tag\n * @param {!Element} element\n * @return {?JsonObject}\n * @throws {!Error} If element does not have exactly one <script> child\n * with type=\"application/json\", or if the <script> contents are not valid JSON.\n */\n\n\nfunction getChildJsonConfig(element) {\n  var scripts = (0, _dom.childElementsByTag)(element, 'script');\n  var n = scripts.length;\n\n  if (n !== 1) {\n    throw new Error(\"Found \" + scripts.length + \" <script> children. Expected 1.\");\n  }\n\n  var script = scripts[0];\n\n  if (!(0, _dom.isJsonScriptTag)(script)) {\n    throw new Error('<script> child must have type=\"application/json\"');\n  }\n\n  try {\n    return parseJson(script.textContent);\n  } catch (unusedError) {\n    throw new Error('Failed to parse <script> contents. Is it valid JSON?');\n  }\n}\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\n\n\nfunction deepEquals(a, b, depth) {\n  if (depth === void 0) {\n    depth = 5;\n  }\n\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n\n\n  var queue = [{\n    a: a,\n    b: b,\n    depth: depth\n  }];\n\n  while (queue.length > 0) {\n    var _queue$shift = queue.shift(),\n        _a = _queue$shift.a,\n        _b = _queue$shift.b,\n        _depth = _queue$shift.depth; // Only check deep equality if depth > 0.\n\n\n    if (_depth > 0) {\n      if (typeof _a !== typeof _b) {\n        return false;\n      } else if (Array.isArray(_a) && Array.isArray(_b)) {\n        if (_a.length !== _b.length) {\n          return false;\n        }\n\n        for (var i = 0; i < _a.length; i++) {\n          queue.push({\n            a: _a[i],\n            b: _b[i],\n            depth: _depth - 1\n          });\n        }\n\n        continue;\n      } else if (_a && _b && typeof _a === 'object' && typeof _b === 'object') {\n        var keysA = Object.keys(\n        /** @type {!Object} */\n        _a);\n        var keysB = Object.keys(\n        /** @type {!Object} */\n        _b);\n\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n\n        for (var _i = 0; _i < keysA.length; _i++) {\n          var k = keysA[_i];\n          queue.push({\n            a: _a[k],\n            b: _b[k],\n            depth: _depth - 1\n          });\n        }\n\n        continue;\n      }\n    } // If we get here, then depth == 0 or (a, b) are primitives.\n\n\n    if (_a !== _b) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @param {*} obj\n * @param {string} key\n * @return {boolean}\n */\n\n\nfunction hasOwnProperty(obj, key) {\n  if (obj == null || typeof obj != 'object') {\n    return false;\n  }\n\n  return Object.prototype.hasOwnProperty.call(\n  /** @type {!Object} */\n  obj, key);\n}\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\n\n\nfunction jsonConfiguration(obj) {\n  return (\n    /** @type {!JsonObject} */\n    obj\n  );\n}\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {!Object|!Array|string|number|boolean|null} value\n * @return {!InternalJsonLiteralTypeDef}\n */\n\n\nfunction jsonLiteral(value) {\n  return (\n    /** @type {!InternalJsonLiteralTypeDef} */\n    value\n  );\n}\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\n\n\nfunction includeJsonLiteral(value) {\n  return value;\n}\n\n},{\"./dom\":7,\"./types\":32}],15:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.parseLayout = parseLayout;\nexports.getLayoutClass = getLayoutClass;\nexports.isLayoutSizeDefined = isLayoutSizeDefined;\nexports.isLayoutSizeFixed = isLayoutSizeFixed;\nexports.isInternalElement = isInternalElement;\nexports.parseLength = parseLength;\nexports.assertLength = assertLength;\nexports.assertLengthOrPercent = assertLengthOrPercent;\nexports.getLengthUnits = getLengthUnits;\nexports.getLengthNumeral = getLengthNumeral;\nexports.hasNaturalDimensions = hasNaturalDimensions;\nexports.getNaturalDimensions = getNaturalDimensions;\nexports.isLoadingAllowed = isLoadingAllowed;\nexports.isIframeVideoPlayerComponent = isIframeVideoPlayerComponent;\nexports.applyStaticLayout = applyStaticLayout;\nexports.LOADING_ELEMENTS_ = exports.naturalDimensions_ = exports.LengthDef = exports.LayoutPriority = exports.Layout = void 0;\n\nvar _log = require(\"./log\");\n\nvar _staticTemplate = require(\"./static-template\");\n\nvar _types = require(\"./types\");\n\nvar _style = require(\"./style\");\n\nvar _string = require(\"./string\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n      <i-amphtml-sizer class=\\\"i-amphtml-sizer\\\">\\n        <img alt=\\\"\\\" role=\\\"presentation\\\" aria-hidden=\\\"true\\\"\\n             class=\\\"i-amphtml-intrinsic-sizer\\\" />\\n      </i-amphtml-sizer>\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) { if (!raw) { raw = strings.slice(0); } strings.raw = raw; return strings; }\n\n/**\n * @enum {string}\n */\nvar Layout = {\n  NODISPLAY: 'nodisplay',\n  FIXED: 'fixed',\n  FIXED_HEIGHT: 'fixed-height',\n  RESPONSIVE: 'responsive',\n  CONTAINER: 'container',\n  FILL: 'fill',\n  FLEX_ITEM: 'flex-item',\n  FLUID: 'fluid',\n  INTRINSIC: 'intrinsic'\n};\n/**\n * Layout priorities to use with BaseElement#getLayoutPriority() and\n * BaseElement#updateLayoutPriority().\n * @enum {number}\n */\n\nexports.Layout = Layout;\nvar LayoutPriority = {\n  CONTENT: 0,\n  METADATA: 1,\n  ADS: 2,\n  BACKGROUND: 3\n};\n/**\n * CSS Length type. E.g. \"1px\" or \"20vh\".\n * @typedef {string}\n */\n\nexports.LayoutPriority = LayoutPriority;\nvar LengthDef;\n/**\n * @typedef {{\n *   width: string,\n *   height: string\n * }}\n */\n\nexports.LengthDef = LengthDef;\nvar DimensionsDef;\n/**\n * The set of elements with natural dimensions, that is, elements\n * which have a known dimension either based on their value specified here,\n * or, if the value is null, a dimension specific to the browser.\n * `hasNaturalDimensions` checks for membership in this set.\n * `getNaturalDimensions` determines the dimensions for an element in the\n *    set and caches it.\n * @type {!Object<string, ?DimensionsDef>}\n * @private  Visible for testing only!\n */\n\nvar naturalDimensions_ = {\n  'AMP-PIXEL': {\n    width: '0px',\n    height: '0px'\n  },\n  'AMP-ANALYTICS': {\n    width: '1px',\n    height: '1px'\n  },\n  // TODO(dvoytenko): audio should have width:auto.\n  'AMP-AUDIO': null,\n  'AMP-SOCIAL-SHARE': {\n    width: '60px',\n    height: '44px'\n  }\n};\n/**\n * Elements that the progress can be shown for. This set has to be externalized\n * since the element's implementation may not be downloaded yet.\n * This list does not include video players which are found via regex later.\n * @enum {boolean}\n * @private  Visible for testing only!\n */\n\nexports.naturalDimensions_ = naturalDimensions_;\nvar LOADING_ELEMENTS_ = {\n  'AMP-AD': true,\n  'AMP-ANIM': true,\n  'AMP-EMBED': true,\n  'AMP-FACEBOOK': true,\n  'AMP-FACEBOOK-COMMENTS': true,\n  'AMP-FACEBOOK-PAGE': true,\n  'AMP-GOOGLE-DOCUMENT-EMBED': true,\n  'AMP-IFRAME': true,\n  'AMP-IMG': true,\n  'AMP-INSTAGRAM': true,\n  'AMP-LIST': true,\n  'AMP-PINTEREST': true,\n  'AMP-PLAYBUZZ': true,\n  'AMP-TWITTER': true\n};\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they are listed individually.\n * @private @const {!RegExp}\n */\n\nexports.LOADING_ELEMENTS_ = LOADING_ELEMENTS_;\nvar videoPlayerTagNameRe = /^amp\\-(video|.+player)|AMP-BRIGHTCOVE|AMP-DAILYMOTION|AMP-YOUTUBE|AMP-VIMEO|AMP-IMA-VIDEO/i;\n/**\n * @param {string} s\n * @return {Layout|undefined} Returns undefined in case of failure to parse\n *   the layout string.\n */\n\nfunction parseLayout(s) {\n  for (var k in Layout) {\n    if (Layout[k] == s) {\n      return Layout[k];\n    }\n  }\n\n  return undefined;\n}\n/**\n * @param {!Layout} layout\n * @return {string}\n */\n\n\nfunction getLayoutClass(layout) {\n  return 'i-amphtml-layout-' + layout;\n}\n/**\n * Whether an element with this layout inherently defines the size.\n * @param {!Layout} layout\n * @return {boolean}\n */\n\n\nfunction isLayoutSizeDefined(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT || layout == Layout.RESPONSIVE || layout == Layout.FILL || layout == Layout.FLEX_ITEM || layout == Layout.FLUID || layout == Layout.INTRINSIC;\n}\n/**\n * Whether an element with this layout has a fixed dimension.\n * @param {!Layout} layout\n * @return {boolean}\n */\n\n\nfunction isLayoutSizeFixed(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT;\n}\n/**\n * Whether the tag is an internal (service) AMP tag.\n * @param {!Node|string} tag\n * @return {boolean}\n */\n\n\nfunction isInternalElement(tag) {\n  var tagName = typeof tag == 'string' ? tag : tag.tagName;\n  return tagName && (0, _string.startsWith)(tagName.toLowerCase(), 'i-');\n}\n/**\n * Parses the CSS length value. If no units specified, the assumed value is\n * \"px\". Returns undefined in case of parsing error.\n * @param {string|undefined|null} s\n * @return {!LengthDef|undefined}\n */\n\n\nfunction parseLength(s) {\n  if (typeof s == 'number') {\n    return s + 'px';\n  }\n\n  if (!s) {\n    return undefined;\n  }\n\n  if (!/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)?$/.test(s)) {\n    return undefined;\n  }\n\n  if (/^\\d+(\\.\\d+)?$/.test(s)) {\n    return s + 'px';\n  }\n\n  return s;\n}\n/**\n * Asserts that the supplied value is a non-percent CSS Length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction assertLength(length) {\n  (0, _log.userAssert)(/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)$/.test(length), 'Invalid length value: %s', length);\n  return (\n    /** @type {!LengthDef} */\n    length\n  );\n}\n/**\n * Asserts that the supplied value is a CSS Length value\n * (including percent unit).\n * @param {!LengthDef|string} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction assertLengthOrPercent(length) {\n  (0, _log.userAssert)(/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|%)$/.test(length), 'Invalid length or percent value: %s', length);\n  return length;\n}\n/**\n * Returns units from the CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {string}\n */\n\n\nfunction getLengthUnits(length) {\n  assertLength(length);\n  (0, _log.dev)().assertString(length);\n  var m = (0, _log.userAssert)(length.match(/[a-z]+/i), 'Failed to read units from %s', length);\n  return m[0];\n}\n/**\n * Returns the numeric value of a CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {number|undefined}\n */\n\n\nfunction getLengthNumeral(length) {\n  var res = parseFloat(length);\n  return (0, _types.isFiniteNumber)(res) ? res : undefined;\n}\n/**\n * Determines whether the tagName is a known element that has natural dimensions\n * in our runtime or the browser.\n * @param {string} tagName The element tag name.\n * @return {boolean}\n */\n\n\nfunction hasNaturalDimensions(tagName) {\n  tagName = tagName.toUpperCase();\n  return naturalDimensions_[tagName] !== undefined;\n}\n/**\n * Determines the default dimensions for an element which could vary across\n * different browser implementations, like <audio> for instance.\n * This operation can only be completed for an element whitelisted by\n * `hasNaturalDimensions`.\n * @param {!Element} element\n * @return {DimensionsDef}\n */\n\n\nfunction getNaturalDimensions(element) {\n  var tagName = element.tagName.toUpperCase();\n  (0, _log.devAssert)(naturalDimensions_[tagName] !== undefined);\n\n  if (!naturalDimensions_[tagName]) {\n    var doc = element.ownerDocument;\n    var naturalTagName = tagName.replace(/^AMP\\-/, '');\n    var temp = doc.createElement(naturalTagName); // For audio, should no-op elsewhere.\n\n    temp.controls = true;\n    (0, _style.setStyles)(temp, {\n      position: 'absolute',\n      visibility: 'hidden'\n    });\n    doc.body.appendChild(temp);\n    naturalDimensions_[tagName] = {\n      width: (temp.\n      /*OK*/\n      offsetWidth || 1) + 'px',\n      height: (temp.\n      /*OK*/\n      offsetHeight || 1) + 'px'\n    };\n    doc.body.removeChild(temp);\n  }\n\n  return (\n    /** @type {DimensionsDef} */\n    naturalDimensions_[tagName]\n  );\n}\n/**\n * Whether the loading can be shown for the specified elemeent. This set has\n * to be externalized since the element's implementation may not be\n * downloaded yet.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isLoadingAllowed(element) {\n  var tagName = element.tagName.toUpperCase();\n  return LOADING_ELEMENTS_[tagName] || isIframeVideoPlayerComponent(tagName);\n}\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they're present in the LOADING_ELEMENTS_ whitelist.\n * @param {string} tagName\n * @return {boolean}\n */\n\n\nfunction isIframeVideoPlayerComponent(tagName) {\n  if (tagName == 'AMP-VIDEO') {\n    return false;\n  }\n\n  return videoPlayerTagNameRe.test(tagName);\n}\n/**\n * Applies layout to the element. Visible for testing only.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this method is used for server-side rendering (SSR) and\n * any changes made to it must be made in coordination with caches that\n * implement SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @param {!Element} element\n * @return {!Layout}\n */\n\n\nfunction applyStaticLayout(element) {\n  // Check if the layout has already been done by server-side rendering or\n  // client-side rendering and the element was cloned. The document may be\n  // visible to the user if the boilerplate was removed so please take care in\n  // making changes here.\n  var completedLayoutAttr = element.getAttribute('i-amphtml-layout');\n\n  if (completedLayoutAttr) {\n    var _layout =\n    /** @type {!Layout} */\n    (0, _log.devAssert)(parseLayout(completedLayoutAttr));\n\n    if ((_layout == Layout.RESPONSIVE || _layout == Layout.INTRINSIC) && element.firstElementChild) {\n      // Find sizer, but assume that it might not have been parsed yet.\n      element.sizerElement = element.querySelector('i-amphtml-sizer') || undefined;\n    } else if (_layout == Layout.NODISPLAY) {\n      (0, _style.toggle)(element, false); // TODO(jridgewell): Temporary hack while SSR still adds an inline\n      // `display: none`\n\n      element['style']['display'] = '';\n    }\n\n    return _layout;\n  } // If the layout was already done by server-side rendering (SSR), then the\n  // code below will not run. Any changes below will necessitate a change to SSR\n  // and must be coordinated with caches that implement SSR. See bit.ly/amp-ssr.\n  // Parse layout from the element.\n\n\n  var layoutAttr = element.getAttribute('layout');\n  var widthAttr = element.getAttribute('width');\n  var heightAttr = element.getAttribute('height');\n  var sizesAttr = element.getAttribute('sizes');\n  var heightsAttr = element.getAttribute('heights'); // Input layout attributes.\n\n  var inputLayout = layoutAttr ? parseLayout(layoutAttr) : null;\n  (0, _log.userAssert)(inputLayout !== undefined, 'Unknown layout: %s', layoutAttr);\n  /** @const {string|null|undefined} */\n\n  var inputWidth = widthAttr && widthAttr != 'auto' ? parseLength(widthAttr) : widthAttr;\n  (0, _log.userAssert)(inputWidth !== undefined, 'Invalid width value: %s', widthAttr);\n  /** @const {string|null|undefined} */\n\n  var inputHeight = heightAttr && heightAttr != 'fluid' ? parseLength(heightAttr) : heightAttr;\n  (0, _log.userAssert)(inputHeight !== undefined, 'Invalid height value: %s', heightAttr); // Effective layout attributes. These are effectively constants.\n\n  var width;\n  var height;\n  var layout; // Calculate effective width and height.\n\n  if ((!inputLayout || inputLayout == Layout.FIXED || inputLayout == Layout.FIXED_HEIGHT) && (!inputWidth || !inputHeight) && hasNaturalDimensions(element.tagName)) {\n    // Default width and height: handle elements that do not specify a\n    // width/height and are defined to have natural browser dimensions.\n    var dimensions = getNaturalDimensions(element);\n    width = inputWidth || inputLayout == Layout.FIXED_HEIGHT ? inputWidth : dimensions.width;\n    height = inputHeight || dimensions.height;\n  } else {\n    width = inputWidth;\n    height = inputHeight;\n  } // Calculate effective layout.\n\n\n  if (inputLayout) {\n    layout = inputLayout;\n  } else if (!width && !height) {\n    layout = Layout.CONTAINER;\n  } else if (height == 'fluid') {\n    layout = Layout.FLUID;\n  } else if (height && (!width || width == 'auto')) {\n    layout = Layout.FIXED_HEIGHT;\n  } else if (height && width && (sizesAttr || heightsAttr)) {\n    layout = Layout.RESPONSIVE;\n  } else {\n    layout = Layout.FIXED;\n  } // Verify layout attributes.\n\n\n  if (layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT || layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    (0, _log.userAssert)(height, 'Expected height to be available: %s', heightAttr);\n  }\n\n  if (layout == Layout.FIXED_HEIGHT) {\n    (0, _log.userAssert)(!width || width == 'auto', 'Expected width to be either absent or equal \"auto\" ' + 'for fixed-height layout: %s', widthAttr);\n  }\n\n  if (layout == Layout.FIXED || layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    (0, _log.userAssert)(width && width != 'auto', 'Expected width to be available and not equal to \"auto\": %s', widthAttr);\n  }\n\n  if (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    (0, _log.userAssert)(getLengthUnits(width) == getLengthUnits(height), 'Length units should be the same for width and height: %s, %s', widthAttr, heightAttr);\n  } else {\n    (0, _log.userAssert)(heightsAttr === null, 'Unexpected \"heights\" attribute for none-responsive layout');\n  } // Apply UI.\n\n\n  element.classList.add(getLayoutClass(layout));\n\n  if (isLayoutSizeDefined(layout)) {\n    element.classList.add('i-amphtml-layout-size-defined');\n  }\n\n  if (layout == Layout.NODISPLAY) {\n    // CSS defines layout=nodisplay automatically with `display:none`. Thus\n    // no additional styling is needed.\n    (0, _style.toggle)(element, false); // TODO(jridgewell): Temporary hack while SSR still adds an inline\n    // `display: none`\n\n    element['style']['display'] = '';\n  } else if (layout == Layout.FIXED) {\n    (0, _style.setStyles)(element, {\n      width: (0, _log.dev)().assertString(width),\n      height: (0, _log.dev)().assertString(height)\n    });\n  } else if (layout == Layout.FIXED_HEIGHT) {\n    (0, _style.setStyle)(element, 'height', (0, _log.dev)().assertString(height));\n  } else if (layout == Layout.RESPONSIVE) {\n    var sizer = element.ownerDocument.createElement('i-amphtml-sizer');\n    (0, _style.setStyles)(sizer, {\n      paddingTop: getLengthNumeral(height) / getLengthNumeral(width) * 100 + '%'\n    });\n    element.insertBefore(sizer, element.firstChild);\n    element.sizerElement = sizer;\n  } else if (layout == Layout.INTRINSIC) {\n    // Intrinsic uses an svg inside the sizer element rather than the padding\n    // trick Note a naked svg won't work becasue other thing expect the\n    // i-amphtml-sizer element\n    var _sizer = (0, _staticTemplate.htmlFor)(element)(_templateObject());\n\n    var intrinsicSizer = _sizer.firstElementChild;\n    intrinsicSizer.setAttribute('src', \"data:image/svg+xml;charset=utf-8,<svg height=\\\"\" + height + \"\\\" width=\\\"\" + width + \"\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\"/>\");\n    element.insertBefore(_sizer, element.firstChild);\n    element.sizerElement = _sizer;\n  } else if (layout == Layout.FILL) {// Do nothing.\n  } else if (layout == Layout.CONTAINER) {// Do nothing. Elements themselves will check whether the supplied\n    // layout value is acceptable. In particular container is only OK\n    // sometimes.\n  } else if (layout == Layout.FLEX_ITEM) {\n    // Set height and width to a flex item if they exist.\n    // The size set to a flex item could be overridden by `display: flex` later.\n    if (width) {\n      (0, _style.setStyle)(element, 'width', width);\n    }\n\n    if (height) {\n      (0, _style.setStyle)(element, 'height', height);\n    }\n  } else if (layout == Layout.FLUID) {\n    element.classList.add('i-amphtml-layout-awaiting-size');\n\n    if (width) {\n      (0, _style.setStyle)(element, 'width', width);\n    }\n\n    (0, _style.setStyle)(element, 'height', 0);\n  } // Mark the element as having completed static layout, in case it is cloned\n  // in the future.\n\n\n  element.setAttribute('i-amphtml-layout', layout);\n  return layout;\n}\n\n},{\"./log\":16,\"./static-template\":28,\"./string\":29,\"./style\":31,\"./types\":32}],16:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isUserErrorMessage = isUserErrorMessage;\nexports.isUserErrorEmbed = isUserErrorEmbed;\nexports.setReportError = setReportError;\nexports.overrideLogLevel = overrideLogLevel;\nexports.duplicateErrorIfNecessary = duplicateErrorIfNecessary;\nexports.createErrorVargs = createErrorVargs;\nexports.rethrowAsync = rethrowAsync;\nexports.initLogConstructor = initLogConstructor;\nexports.resetLogConstructorForTesting = resetLogConstructorForTesting;\nexports.user = user;\nexports.dev = dev;\nexports.isFromEmbed = isFromEmbed;\nexports.devAssert = devAssert;\nexports.userAssert = userAssert;\nexports.Log = exports.LogLevel = exports.USER_ERROR_EMBED_SENTINEL = exports.USER_ERROR_SENTINEL = void 0;\n\nvar _mode = require(\"./mode\");\n\nvar _modeObject = require(\"./mode-object\");\n\nvar _internalVersion = require(\"./internal-version\");\n\nvar _types = require(\"./types\");\n\nvar _function = require(\"./utils/function\");\n\nvar _config = require(\"./config\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar noop = function noop() {};\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\n\n\nvar USER_ERROR_SENTINEL = \"\\u200B\\u200B\\u200B\";\n/**\n * Four zero width space.\n *\n * @const {string}\n */\n\nexports.USER_ERROR_SENTINEL = USER_ERROR_SENTINEL;\nvar USER_ERROR_EMBED_SENTINEL = \"\\u200B\\u200B\\u200B\\u200B\";\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\n\nexports.USER_ERROR_EMBED_SENTINEL = USER_ERROR_EMBED_SENTINEL;\n\nfunction isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\n\n\nfunction isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n/**\n * @enum {number}\n * @private Visible for testing only.\n */\n\n\nvar LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4\n};\n/**\n * Sets reportError function. Called from error.js to break cyclic\n * dependency.\n * @param {function(*, !Element=)|undefined} fn\n */\n\nexports.LogLevel = LogLevel;\n\nfunction setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\n\n\nvar levelOverride_ = undefined;\n/**\n * @param {!LogLevel} level\n */\n\nfunction overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\n\n\nvar messageUrlRtv = function messageUrlRtv() {\n  return \"01\" + (0, _internalVersion.internalRuntimeVersion)();\n};\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\n\n\nvar externalMessageUrl = function externalMessageUrl(id, interpolatedParts) {\n  return interpolatedParts.reduce(function (prefix, arg) {\n    return prefix + \"&s[]=\" + messageArgToEncodedComponent(arg);\n  }, \"https://log.amp.dev/?v=\" + messageUrlRtv() + \"&id=\" + encodeURIComponent(id));\n};\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\n\n\nvar externalMessagesSimpleTableUrl = function externalMessagesSimpleTableUrl() {\n  return _config.urls.cdn + \"/rtv/\" + messageUrlRtv() + \"/log-messages.simple.json\";\n};\n/**\n * @param {*} arg\n * @return {string}\n */\n\n\nvar messageArgToEncodedComponent = function messageArgToEncodedComponent(arg) {\n  return encodeURIComponent(String(elementStringOrPassthru(arg)));\n};\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don’t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\n\n\nvar Log =\n/*#__PURE__*/\nfunction () {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(!./mode.ModeDef):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  function Log(win, levelFunc, opt_suffix) {\n    var _this = this;\n\n    if (opt_suffix === void 0) {\n      opt_suffix = '';\n    }\n\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = (0, _mode.getMode)().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n    /** @private @const {function(!./mode.ModeDef):!LogLevel} */\n\n    this.levelFunc_ = levelFunc;\n    /** @private @const {!LogLevel} */\n\n    this.level_ = this.defaultLevel_();\n    /** @private @const {string} */\n\n    this.suffix_ = opt_suffix;\n    /** @private {?JsonObject} */\n\n    this.messages_ = null;\n    this.fetchExternalMessagesOnce_ = (0, _function.once)(function () {\n      win.fetch(externalMessagesSimpleTableUrl()).then(function (response) {\n        return response.json();\n      }, noop).then(function (opt_messages) {\n        if (opt_messages) {\n          _this.messages_ =\n          /** @type {!JsonObject} */\n          opt_messages;\n        }\n      });\n    });\n  }\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n\n\n  var _proto = Log.prototype;\n\n  _proto.getLevel_ = function getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  ;\n\n  _proto.defaultLevel_ = function defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    } // Logging has been explicitly disabled.\n\n\n    if ((0, _mode.getMode)().log == '0') {\n      return LogLevel.OFF;\n    } // Logging is enabled for tests directly.\n\n\n    if ((0, _mode.getMode)().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    } // LocalDev by default allows INFO level, unless overriden by `#log`.\n\n\n    if ((0, _mode.getMode)().localDev && !(0, _mode.getMode)().log) {\n      return LogLevel.INFO;\n    } // Delegate to the specific resolver.\n\n\n    return this.levelFunc_((0, _modeObject.getModeObject)());\n  }\n  /**\n   * @param {string} tag\n   * @param {string} level\n   * @param {!Array} messages\n   */\n  ;\n\n  _proto.msg_ = function msg_(tag, level, messages) {\n    if (this.getLevel_() != LogLevel.OFF) {\n      var fn = this.win.console.log;\n\n      if (level == 'ERROR') {\n        fn = this.win.console.error || fn;\n      } else if (level == 'INFO') {\n        fn = this.win.console.info || fn;\n      } else if (level == 'WARN') {\n        fn = this.win.console.warn || fn;\n      }\n\n      var args = this.maybeExpandMessageArgs_(messages); // Prefix console message with \"[tag]\".\n\n      var prefix = \"[\" + tag + \"]\";\n\n      if (typeof args[0] === 'string') {\n        // Prepend string to avoid breaking string substitutions e.g. %s.\n        args[0] = prefix + ' ' + args[0];\n      } else {\n        args.unshift(prefix);\n      }\n\n      fn.apply(this.win.console, args);\n    }\n  }\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isEnabled = function isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.fine = function fine(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.FINE) {\n      this.msg_(tag, 'FINE', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.info = function info(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.INFO) {\n      this.msg_(tag, 'INFO', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.warn = function warn(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.WARN) {\n      this.msg_(tag, 'WARN', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} var_args\n   * @return {!Error|undefined}\n   * @private\n   */\n  ;\n\n  _proto.error_ = function error_(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.ERROR) {\n      this.msg_(tag, 'ERROR', Array.prototype.slice.call(arguments, 1));\n    } else {\n      var error = createErrorVargs.apply(null, Array.prototype.slice.call(arguments, 1));\n      this.prepareError_(error);\n      return error;\n    }\n  }\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.error = function error(tag, var_args) {\n    var error = this.error_.apply(this, arguments);\n\n    if (error) {\n      error.name = tag || error.name; // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.expectedError = function expectedError(unusedTag, var_args) {\n    var error = this.error_.apply(this, arguments);\n\n    if (error) {\n      error.expected = true; // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  ;\n\n  _proto.createError = function createError(var_args) {\n    var error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  ;\n\n  _proto.createExpectedError = function createExpectedError(var_args) {\n    var error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * NOTE: for an explanation of the tempate R implementation see\n   * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {R} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is `null` or `undefined`.\n   * @template T\n   * @template R :=\n   *     mapunion(T, (V) =>\n   *         cond(eq(V, 'null'),\n   *             none(),\n   *             cond(eq(V, 'undefined'),\n   *                 none(),\n   *                 V)))\n   *  =:\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assert = function assert(shouldBeTrueish, opt_message, var_args) {\n    var firstElement;\n\n    if ((0, _types.isArray)(opt_message)) {\n      return this.assert.apply(this, [shouldBeTrueish].concat(this.expandMessageArgs_(\n      /** @type {!Array} */\n      opt_message)));\n    }\n\n    if (!shouldBeTrueish) {\n      var message = opt_message || 'Assertion failed';\n      var splitMessage = message.split('%s');\n      var first = splitMessage.shift();\n      var formatted = first;\n      var messageArray = [];\n      var i = 2;\n      pushIfNonEmpty(messageArray, first);\n\n      while (splitMessage.length > 0) {\n        var nextConstant = splitMessage.shift();\n        var val = arguments[i++];\n\n        if (val && val.tagName) {\n          firstElement = val;\n        }\n\n        messageArray.push(val);\n        pushIfNonEmpty(messageArray, nextConstant.trim());\n        formatted += stringOrElementString(val) + nextConstant;\n      }\n\n      var e = new Error(formatted);\n      e.fromAssert = true;\n      e.associatedElement = firstElement;\n      e.messageArray = messageArray;\n      this.prepareError_(e); // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(e);\n\n      throw e;\n    }\n\n    return shouldBeTrueish;\n  }\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertElement = function assertElement(shouldBeElement, opt_message) {\n    var shouldBeTrueish = shouldBeElement && shouldBeElement.nodeType == 1;\n    this.assertType_(shouldBeElement, shouldBeTrueish, 'Element expected', opt_message);\n    return (\n      /** @type {!Element} */\n      shouldBeElement\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertString = function assertString(shouldBeString, opt_message) {\n    this.assertType_(shouldBeString, typeof shouldBeString == 'string', 'String expected', opt_message);\n    return (\n      /** @type {string} */\n      shouldBeString\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertNumber = function assertNumber(shouldBeNumber, opt_message) {\n    this.assertType_(shouldBeNumber, typeof shouldBeNumber == 'number', 'Number expected', opt_message);\n    return (\n      /** @type {number} */\n      shouldBeNumber\n    );\n  }\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertArray = function assertArray(shouldBeArray, opt_message) {\n    this.assertType_(shouldBeArray, (0, _types.isArray)(shouldBeArray), 'Array expected', opt_message);\n    return (\n      /** @type {!Array} */\n      shouldBeArray\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertBoolean = function assertBoolean(shouldBeBoolean, opt_message) {\n    this.assertType_(shouldBeBoolean, !!shouldBeBoolean === shouldBeBoolean, 'Boolean expected', opt_message);\n    return (\n      /** @type {boolean} */\n      shouldBeBoolean\n    );\n  }\n  /**\n   * Asserts and returns the enum value. If the enum doesn't contain such a\n   * value, the error is thrown.\n   *\n   * @param {!Object<T>} enumObj\n   * @param {string} s\n   * @param {string=} opt_enumName\n   * @return {T}\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertEnumValue = function assertEnumValue(enumObj, s, opt_enumName) {\n    if ((0, _types.isEnumValue)(enumObj, s)) {\n      return s;\n    }\n\n    this.assert(false, 'Unknown %s value: \"%s\"', opt_enumName || 'enum', s);\n  }\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  ;\n\n  _proto.prepareError_ = function prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  ;\n\n  _proto.maybeExpandMessageArgs_ = function maybeExpandMessageArgs_(args) {\n    if ((0, _types.isArray)(args[0])) {\n      return this.expandMessageArgs_(\n      /** @type {!Array} */\n      args[0]);\n    }\n\n    return args;\n  }\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  ;\n\n  _proto.expandMessageArgs_ = function expandMessageArgs_(parts) {\n    // First value should exist.\n    var id = parts.shift(); // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n\n    if ((0, _mode.getMode)(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n\n    return [\"More info at \" + externalMessageUrl(id, parts)];\n  }\n  /**\n   * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n   *\n   * It understands array-based \"id\"-contracted messages.\n   *\n   * Otherwise creates a sprintf syntax string containing the optional message or the\n   * default. An interpolation token is added at the end to include the `subject`.\n   * @param {*} subject\n   * @param {*} assertion\n   * @param {string} defaultMessage\n   * @param {!Array|string=} opt_message\n   * @private\n   */\n  ;\n\n  _proto.assertType_ = function assertType_(subject, assertion, defaultMessage, opt_message) {\n    if ((0, _types.isArray)(opt_message)) {\n      this.assert(assertion, opt_message.concat(subject));\n    } else {\n      this.assert(assertion, (opt_message || defaultMessage) + \": %s\", subject);\n    }\n  };\n\n  return Log;\n}();\n/**\n * @param {string|!Element} val\n * @return {string}\n */\n\n\nexports.Log = Log;\n\nvar stringOrElementString = function stringOrElementString(val) {\n  return (\n    /** @type {string} */\n    elementStringOrPassthru(val)\n  );\n};\n/**\n * @param {*} val\n * @return {*}\n */\n\n\nfunction elementStringOrPassthru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (val && val.nodeType == 1) {\n    return val.tagName.toLowerCase() + (val.id ? '#' + val.id : '');\n  }\n\n  return val;\n}\n/**\n * @param {!Array} array\n * @param {*} val\n */\n\n\nfunction pushIfNonEmpty(array, val) {\n  if (val != '') {\n    array.push(val);\n  }\n}\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\n\n\nfunction duplicateErrorIfNecessary(error) {\n  var messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n\n  if (messageProperty && messageProperty.writable) {\n    return error;\n  }\n\n  var message = error.message,\n      stack = error.stack;\n  var e = new Error(message); // Copy all the extraneous things we attach.\n\n  for (var prop in error) {\n    e[prop] = error[prop];\n  } // Ensure these are copied.\n\n\n  e.stack = stack;\n  return e;\n}\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\n\n\nfunction createErrorVargs(var_args) {\n  var error = null;\n  var message = '';\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n\n  return error;\n}\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\n\n\nfunction rethrowAsync(var_args) {\n  var error = createErrorVargs.apply(null, arguments);\n  setTimeout(function () {\n    // reportError is installed globally per window in the entry point.\n    self.__AMP_REPORT_ERROR(error);\n\n    throw error;\n  });\n}\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\n\n\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null\n};\nvar logs = self.__AMP_LOG;\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?Function}\n */\n\nvar logConstructor = null;\n/**\n * Initializes log contructor.\n */\n\nfunction initLogConstructor() {\n  logConstructor = Log; // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n\n  dev();\n  user();\n}\n/**\n * Resets log contructor for testing.\n */\n\n\nfunction resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\n\n\nfunction user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n\n    return logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL);\n  }\n}\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\n\n\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n\n  return new logConstructor(self, function (mode) {\n    var logNum = parseInt(mode.log, 10);\n\n    if (mode.development || logNum >= 1) {\n      return LogLevel.FINE;\n    }\n\n    return LogLevel.WARN;\n  }, suffix);\n}\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\n\n\nfunction dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n\n  return logs.dev = new logConstructor(self, function (mode) {\n    var logNum = parseInt(mode.log, 10);\n\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n\n    return LogLevel.OFF;\n  });\n}\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\n\n\nfunction isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n\n  return opt_element.ownerDocument.defaultView != win;\n}\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction devAssert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9) {\n  if ((0, _mode.getMode)().minified) {\n    return shouldBeTrueish;\n  }\n\n  return dev().\n  /*Orig call*/\n  assert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9);\n}\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction userAssert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9) {\n  return user().\n  /*Orig call*/\n  assert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9);\n}\n\n},{\"./config\":5,\"./internal-version\":13,\"./mode\":19,\"./mode-object\":18,\"./types\":32,\"./utils/function\":36}],17:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.setMediaSession = setMediaSession;\nexports.parseSchemaImage = parseSchemaImage;\nexports.parseOgImage = parseOgImage;\nexports.parseFavicon = parseFavicon;\nexports.EMPTY_METADATA = exports.MetadataDef = void 0;\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\nvar _types = require(\"./types\");\n\nvar _json = require(\"./json\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   artwork: Array,\n *   title: string,\n *   album: string,\n *   artist: string,\n * }}\n */\nvar MetadataDef;\n/** @const {MetadataDef} Dummy metadata used to fix a bug */\n\nexports.MetadataDef = MetadataDef;\nvar EMPTY_METADATA = {\n  'title': '',\n  'artist': '',\n  'album': '',\n  'artwork': [{\n    'src': ''\n  }]\n};\n/**\n * Updates the Media Session API's metadata\n * @param {!Element} element\n * @param {!Window} win\n * @param {!MetadataDef} metadata\n * @param {function()=} playHandler\n * @param {function()=} pauseHandler\n */\n\nexports.EMPTY_METADATA = EMPTY_METADATA;\n\nfunction setMediaSession(element, win, metadata, playHandler, pauseHandler) {\n  var navigator = win.navigator;\n\n  if ('mediaSession' in navigator && win.MediaMetadata) {\n    // Clear mediaSession (required to fix a bug when switching between two\n    // videos)\n    navigator.mediaSession.metadata = new win.MediaMetadata(EMPTY_METADATA); // Add metadata\n\n    validateMetadata(element, metadata);\n    navigator.mediaSession.metadata = new win.MediaMetadata(metadata);\n    navigator.mediaSession.setActionHandler('play', playHandler);\n    navigator.mediaSession.setActionHandler('pause', pauseHandler); // TODO(@wassgha) Implement seek & next/previous\n  }\n}\n/**\n * Parses the schema.org json-ld formatted meta-data, looks for the page's\n * featured image and returns it\n * @param {!Document} doc\n * @return {string|undefined}\n */\n\n\nfunction parseSchemaImage(doc) {\n  var schema = doc.querySelector('script[type=\"application/ld+json\"]');\n\n  if (!schema) {\n    // No schema element found\n    return;\n  }\n\n  var schemaJson = (0, _json.tryParseJson)(schema.textContent);\n\n  if (!schemaJson || !schemaJson['image']) {\n    // No image found in the schema\n    return;\n  } // Image definition in schema could be one of :\n\n\n  if (typeof schemaJson['image'] === 'string') {\n    // 1. \"image\": \"http://..\",\n    return schemaJson['image'];\n  } else if (schemaJson['image']['@list'] && typeof schemaJson['image']['@list'][0] === 'string') {\n    // 2. \"image\": {.., \"@list\": [\"http://..\"], ..}\n    return schemaJson['image']['@list'][0];\n  } else if (typeof schemaJson['image']['url'] === 'string') {\n    // 3. \"image\": {.., \"url\": \"http://..\", ..}\n    return schemaJson['image']['url'];\n  } else if (typeof schemaJson['image'][0] === 'string') {\n    // 4. \"image\": [\"http://.. \"]\n    return schemaJson['image'][0];\n  } else {\n    return;\n  }\n}\n/**\n * Parses the og:image if it exists and returns it\n * @param {!Document} doc\n * @return {string|undefined}\n */\n\n\nfunction parseOgImage(doc) {\n  var metaTag = doc.querySelector('meta[property=\"og:image\"]');\n\n  if (metaTag) {\n    return metaTag.getAttribute('content');\n  } else {\n    return;\n  }\n}\n/**\n * Parses the website's Favicon and returns it\n * @param {!Document} doc\n * @return {string|undefined}\n */\n\n\nfunction parseFavicon(doc) {\n  var linkTag = doc.querySelector('link[rel=\"shortcut icon\"]') || doc.querySelector('link[rel=\"icon\"]');\n\n  if (linkTag) {\n    return linkTag.getAttribute('href');\n  } else {\n    return;\n  }\n}\n/**\n * @param {!Element} element\n * @param {!MetadataDef} metadata\n * @private\n */\n\n\nfunction validateMetadata(element, metadata) {\n  var urlService = _services.Services.urlForDoc(element); // Ensure src of artwork has valid protocol\n\n\n  if (metadata && metadata.artwork) {\n    var artwork = metadata.artwork;\n    (0, _log.devAssert)((0, _types.isArray)(artwork));\n    artwork.forEach(function (item) {\n      if (item) {\n        var src = (0, _types.isObject)(item) ? item.src : item;\n        (0, _log.userAssert)(urlService.isProtocolValid(src));\n      }\n    });\n  }\n}\n\n},{\"./json\":14,\"./log\":16,\"./services\":27,\"./types\":32}],18:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getModeObject = getModeObject;\n\nvar _mode = require(\"./mode\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides info about the current app. This return value may be cached and\n * passed around as it will always be DCE'd.\n * @param {?Window=} opt_win\n * @return {!./mode.ModeDef}\n */\nfunction getModeObject(opt_win) {\n  return {\n    localDev: (0, _mode.getMode)(opt_win).localDev,\n    development: (0, _mode.getMode)(opt_win).development,\n    filter: (0, _mode.getMode)(opt_win).filter,\n    minified: (0, _mode.getMode)(opt_win).minified,\n    lite: (0, _mode.getMode)(opt_win).lite,\n    test: (0, _mode.getMode)(opt_win).test,\n    log: (0, _mode.getMode)(opt_win).log,\n    version: (0, _mode.getMode)(opt_win).version,\n    rtvVersion: (0, _mode.getMode)(opt_win).rtvVersion,\n    singlePassType: (0, _mode.getMode)(opt_win).singlePassType\n  };\n}\n\n},{\"./mode\":19}],19:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getMode = getMode;\nexports.getRtvVersionForTesting = getRtvVersionForTesting;\nexports.resetRtvVersionForTesting = resetRtvVersionForTesting;\nexports.ModeDef = void 0;\n\nvar _internalVersion = require(\"./internal-version\");\n\nvar _urlParseQueryString = require(\"./url-parse-query-string\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   filter: (string|undefined),\n *   minified: boolean,\n *   lite: boolean,\n *   test: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   singlePassType: (string|undefined)\n * }}\n */\nvar ModeDef;\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\n\nexports.ModeDef = ModeDef;\nvar rtvVersion = '';\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\n\nfunction getMode(opt_win) {\n  var win = opt_win || self;\n\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n\n  return win.__AMP_MODE = getMode_(win);\n}\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\n\n\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  var AMP_CONFIG = self.AMP_CONFIG || {}; // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_DEV is only replaced when `gulp dist` is called without the\n  // --fortesting flag.\n\n  var IS_DEV = true;\n  var IS_MINIFIED = false;\n  var localDevEnabled = !!AMP_CONFIG.localDev;\n  var runningTests = !!AMP_CONFIG.test || IS_DEV && !!(win.__AMP_TEST || win.__karma__);\n  var runningTestsOnIe = win.__karma__ && win.__karma__.config.amp.testOnIe;\n  var isLocalDev = IS_DEV && (localDevEnabled || runningTests);\n  var hashQuery = (0, _urlParseQueryString.parseQueryString_)( // location.originalHash is set by the viewer when it removes the fragment\n  // from the URL.\n  win.location.originalHash || win.location.hash);\n  var singlePassType = AMP_CONFIG.spt;\n  var searchQuery = (0, _urlParseQueryString.parseQueryString_)(win.location.search);\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win, isLocalDev);\n  } // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `gulp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n\n\n  return {\n    localDev: isLocalDev,\n    // Triggers validation or enable pub level logging. Validation can be\n    // bypassed via #validate=0.\n    // Note that AMP_DEV_MODE flag is used for testing purposes.\n    // Use Array.indexOf instead of Array.includes because of #24219\n    development: !!(['1', 'actions', 'amp', 'amp4ads', 'amp4email'].indexOf(hashQuery['development']) >= 0 || win.AMP_DEV_MODE),\n    examiner: hashQuery['development'] == '2',\n    // Allows filtering validation errors by error category. For the\n    // available categories, see ErrorCategory in validator/validator.proto.\n    filter: hashQuery['filter'],\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    // amp-user-location override\n    userLocationOverride: hashQuery['amp-user-location'],\n    minified: IS_MINIFIED,\n    // Whether document is in an amp-lite viewer. It signal that the user\n    // would prefer to use less bandwidth.\n    lite: searchQuery['amp_lite'] != undefined,\n    test: runningTests,\n    testIe: runningTestsOnIe,\n    log: hashQuery['log'],\n    version: (0, _internalVersion.internalRuntimeVersion)(),\n    rtvVersion: rtvVersion,\n    singlePassType: singlePassType\n  };\n}\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n */\n\n\nfunction getRtvVersion(win, isLocalDev) {\n  // If it's local dev then we won't actually have a full version so\n  // just use the version.\n  if (isLocalDev) {\n    return (0, _internalVersion.internalRuntimeVersion)();\n  }\n\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  } // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n\n\n  return \"01\" + (0, _internalVersion.internalRuntimeVersion)();\n}\n/**\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n * @visibleForTesting\n */\n\n\nfunction getRtvVersionForTesting(win, isLocalDev) {\n  return getRtvVersion(win, isLocalDev);\n}\n/** @visibleForTesting */\n\n\nfunction resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n\n},{\"./internal-version\":13,\"./url-parse-query-string\":33}],20:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.Observable = void 0;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This class helps to manage observers. Observers can be added, removed or\n * fired through and instance of this class.\n * @template TYPE\n */\nvar Observable =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of Observable.\n   */\n  function Observable() {\n    /** @type {?Array<function(TYPE)>} */\n    this.handlers_ = null;\n  }\n  /**\n   * Adds the observer to this instance.\n   * @param {function(TYPE)} handler Observer's handler.\n   * @return {!UnlistenDef}\n   */\n\n\n  var _proto = Observable.prototype;\n\n  _proto.add = function add(handler) {\n    var _this = this;\n\n    if (!this.handlers_) {\n      this.handlers_ = [];\n    }\n\n    this.handlers_.push(handler);\n    return function () {\n      _this.remove(handler);\n    };\n  }\n  /**\n   * Removes the observer from this instance.\n   * @param {function(TYPE)} handler Observer's instance.\n   */\n  ;\n\n  _proto.remove = function remove(handler) {\n    if (!this.handlers_) {\n      return;\n    }\n\n    var index = this.handlers_.indexOf(handler);\n\n    if (index > -1) {\n      this.handlers_.splice(index, 1);\n    }\n  }\n  /**\n   * Removes all observers.\n   */\n  ;\n\n  _proto.removeAll = function removeAll() {\n    if (!this.handlers_) {\n      return;\n    }\n\n    this.handlers_.length = 0;\n  }\n  /**\n   * Fires an event. All observers are called.\n   * @param {TYPE=} opt_event\n   */\n  ;\n\n  _proto.fire = function fire(opt_event) {\n    if (!this.handlers_) {\n      return;\n    }\n\n    var handlers = this.handlers_;\n\n    for (var i = 0; i < handlers.length; i++) {\n      var handler = handlers[i];\n      handler(opt_event);\n    }\n  }\n  /**\n   * Returns number of handlers. Mostly needed for tests.\n   * @return {number}\n   */\n  ;\n\n  _proto.getHandlerCount = function getHandlerCount() {\n    if (!this.handlers_) {\n      return 0;\n    }\n\n    return this.handlers_.length;\n  };\n\n  return Observable;\n}();\n\nexports.Observable = Observable;\n\n},{}],21:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.waitForServices = waitForServices;\nexports.hasRenderDelayingServices = hasRenderDelayingServices;\nexports.isRenderDelayingService = isRenderDelayingService;\nexports.includedServices = includedServices;\nexports.RenderDelayingService = void 0;\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\nvar _service = require(\"./service\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A map of services that delay rendering. The key is the name of the service\n * and the value is a DOM query which is used to check if the service is needed\n * in the current document.\n * Do not add a service unless absolutely necessary.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this list is used for server-side rendering (SSR) and any\n * changes made to it must be made in coordination with caches that implement\n * SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @const {!Object<string, string>}\n */\nvar SERVICES = {\n  'amp-dynamic-css-classes': '[custom-element=amp-dynamic-css-classes]',\n  'variant': 'amp-experiment',\n  'amp-story-render': 'amp-story[standalone]'\n};\n/**\n * Base class for render delaying services.\n * This should be extended to ensure the service\n * is properly handled\n *\n * @interface\n */\n\nvar RenderDelayingService =\n/*#__PURE__*/\nfunction () {\n  function RenderDelayingService() {}\n\n  var _proto = RenderDelayingService.prototype;\n\n  /**\n   * Function to return a promise for when\n   * it is finished delaying render, and is ready.\n   * NOTE: This should simply return Promise.resolve,\n   * if your service does not need to perform any logic\n   * after being registered.\n   * @return {!Promise}\n   */\n  _proto.whenReady = function whenReady() {};\n\n  return RenderDelayingService;\n}();\n/**\n * Maximum milliseconds to wait for all extensions to load before erroring.\n * @const\n */\n\n\nexports.RenderDelayingService = RenderDelayingService;\nvar LOAD_TIMEOUT = 3000;\n/**\n * Detects any render delaying services that are required on the page, and\n * returns a promise with a timeout.\n * @param {!Window} win\n * @return {!Promise<!Array<*>>} resolves to an Array that has the same length\n *     as the detected render delaying services\n */\n\nfunction waitForServices(win) {\n  var promises = includedServices(win).map(function (serviceId) {\n    var serviceReadyPromise = (0, _service.getServicePromise)(win, serviceId).then(function (service) {\n      if (service && isRenderDelayingService(service)) {\n        return service.whenReady().then(function () {\n          return service;\n        });\n      }\n\n      return service;\n    });\n    return _services.Services.timerFor(win).timeoutPromise(LOAD_TIMEOUT, serviceReadyPromise, \"Render timeout waiting for service \" + serviceId + \" to be ready.\");\n  });\n  return Promise.all(promises);\n}\n/**\n * Returns true if the page has a render delaying service.\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nfunction hasRenderDelayingServices(win) {\n  return includedServices(win).length > 0;\n}\n/**\n * Function to determine if the passed\n * Object is a Render Delaying Service\n * @param {!Object} service\n * @return {boolean}\n */\n\n\nfunction isRenderDelayingService(service) {\n  var maybeRenderDelayingService =\n  /** @type {!RenderDelayingService}*/\n  service;\n  return typeof maybeRenderDelayingService.whenReady == 'function';\n}\n/**\n * Detects which, if any, render-delaying extensions are included on the page.\n * @param {!Window} win\n * @return {!Array<string>}\n */\n\n\nfunction includedServices(win) {\n  /** @const {!Document} */\n  var doc = win.document;\n  (0, _log.devAssert)(doc.body);\n  return Object.keys(SERVICES).filter(function (service) {\n    return doc.querySelector(SERVICES[service]);\n  });\n}\n\n},{\"./log\":16,\"./service\":22,\"./services\":27}],22:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getExistingServiceForDocInEmbedScope = getExistingServiceForDocInEmbedScope;\nexports.installServiceInEmbedScope = installServiceInEmbedScope;\nexports.registerServiceBuilder = registerServiceBuilder;\nexports.registerServiceBuilderForDoc = registerServiceBuilderForDoc;\nexports.rejectServicePromiseForDoc = rejectServicePromiseForDoc;\nexports.getService = getService;\nexports.getServicePromise = getServicePromise;\nexports.getExistingServiceOrNull = getExistingServiceOrNull;\nexports.getServicePromiseOrNull = getServicePromiseOrNull;\nexports.getServiceForDoc = getServiceForDoc;\nexports.getServicePromiseForDoc = getServicePromiseForDoc;\nexports.getServicePromiseOrNullForDoc = getServicePromiseOrNullForDoc;\nexports.setParentWindow = setParentWindow;\nexports.getParentWindow = getParentWindow;\nexports.getTopWindow = getTopWindow;\nexports.getParentWindowFrameElement = getParentWindowFrameElement;\nexports.getAmpdoc = getAmpdoc;\nexports.isDisposable = isDisposable;\nexports.assertDisposable = assertDisposable;\nexports.disposeServicesForDoc = disposeServicesForDoc;\nexports.disposeServicesForEmbed = disposeServicesForEmbed;\nexports.installServiceInEmbedIfEmbeddable = installServiceInEmbedIfEmbeddable;\nexports.adoptServiceForEmbedDoc = adoptServiceForEmbedDoc;\nexports.resetServiceForTesting = resetServiceForTesting;\nexports.EmbeddableService = exports.Disposable = void 0;\n\nvar _promise = require(\"./utils/promise\");\n\nvar _log = require(\"./log\");\n\nvar _experiments = require(\"./experiments\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (?function(new:Object, !Window)|\n *          ?function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nvar ServiceHolderDef;\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\n\nvar Disposable =\n/*#__PURE__*/\nfunction () {\n  function Disposable() {}\n\n  var _proto = Disposable.prototype;\n\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  _proto.dispose = function dispose() {};\n\n  return Disposable;\n}();\n/**\n * Services must implement this interface to be embeddable in FIEs.\n * @interface\n */\n\n\nexports.Disposable = Disposable;\n\nvar EmbeddableService =\n/*#__PURE__*/\nfunction () {\n  function EmbeddableService() {}\n\n  /**\n   * Installs a new instance of the service in the given FIE window.\n   * @param {!Window} unusedEmbedWin\n   * @param {!./service/ampdoc-impl.AmpDoc} unusedAmpDoc\n   */\n  EmbeddableService.installInEmbedWindow = function installInEmbedWindow(unusedEmbedWin, unusedAmpDoc) {};\n\n  return EmbeddableService;\n}();\n/**\n * Returns a service with the given id. Assumes that it has been constructed\n * already.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\n\n\nexports.EmbeddableService = EmbeddableService;\n\nfunction getExistingServiceForDocInEmbedScope(element, id) {\n  // TODO(#22733): completely remove this method once ampdoc-fie launches.\n  var document = element.ownerDocument;\n  var win = (0, _types.toWin)(document.defaultView);\n  var topWin = getTopWindow(win); // First, try to resolve via local embed window (if applicable).\n\n  var isEmbed = win != topWin;\n  var ampdocFieExperimentOn = (0, _experiments.isExperimentOn)(topWin, 'ampdoc-fie');\n\n  if (isEmbed && !ampdocFieExperimentOn) {\n    if (isServiceRegistered(win, id)) {\n      return getServiceInternal(win, id);\n    } // Fallback from FIE to parent is intentionally unsupported for safety.\n\n\n    return null;\n  } else {\n    // Resolve via the element's ampdoc.\n    return getServiceForDocOrNullInternal(element, id);\n  }\n}\n/**\n * Installs a service override on amp-doc level.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {!Object} service The service.\n */\n\n\nfunction installServiceInEmbedScope(embedWin, id, service) {\n  var topWin = getTopWindow(embedWin);\n  (0, _log.devAssert)(embedWin != topWin, 'Service override can only be installed in embed window: %s', id);\n  (0, _log.devAssert)(!isServiceRegistered(embedWin, id), 'Service override has already been installed: %s', id);\n  var ampdocFieExperimentOn = (0, _experiments.isExperimentOn)(topWin, 'ampdoc-fie');\n\n  if (ampdocFieExperimentOn) {\n    var ampdoc = getAmpdoc(embedWin.document);\n    registerServiceInternal(getAmpdocServiceHolder(ampdoc), ampdoc, id, function () {\n      return service;\n    },\n    /* override */\n    true);\n  } else {\n    registerServiceInternal(embedWin, embedWin, id, function () {\n      return service;\n    });\n    getServiceInternal(embedWin, id); // Force service to build.\n  }\n}\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\n\n\nfunction registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\n\n\nfunction registerServiceBuilderForDoc(nodeOrDoc, id, constructor, opt_instantiate) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\n\n\nfunction rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\n\n\nfunction getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\n\n\nfunction getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\n\n\nfunction getServiceForDoc(elementOrAmpDoc, id) {\n  var ampdoc = getAmpdoc(elementOrAmpDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\n\n\nfunction getServiceForDocOrNullInternal(element, id) {\n  var ampdoc = getAmpdoc(element);\n  var holder = getAmpdocServiceHolder(ampdoc);\n\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\n\n\nfunction setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\n\n\nfunction getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\n\n\nfunction getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\n\n\nfunction getParentWindowFrameElement(node, opt_topWin) {\n  var childWin = (node.ownerDocument || node).defaultView;\n  var topWin = opt_topWin || getTopWindow(childWin);\n\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return (\n        /** @type {?HTMLIFrameElement} */\n        childWin.frameElement\n      );\n    } catch (e) {// Ignore the error.\n    }\n  }\n\n  return null;\n}\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\n\n\nfunction getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    var win = (0, _types.toWin)(\n    /** @type {!Document} */\n    (nodeOrDoc.ownerDocument || nodeOrDoc).defaultView);\n    return getAmpdocService(win).getAmpDoc(\n    /** @type {!Node} */\n    nodeOrDoc);\n  }\n\n  return (\n    /** @type {!./service/ampdoc-impl.AmpDoc} */\n    nodeOrDoc\n  );\n}\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\n\n\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\n\n\nfunction getAmpdocService(win) {\n  return (\n    /** @type {!./service/ampdoc-impl.AmpDocService} */\n    getService(win, 'ampdoc')\n  );\n}\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n * @template T\n */\n\n\nfunction getServiceInternal(holder, id) {\n  (0, _log.devAssert)(isServiceRegistered(holder, id), \"Expected service \" + id + \" to be registered\");\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (!s.obj) {\n    (0, _log.devAssert)(s.ctor, \"Service \" + id + \" registered without ctor nor impl.\");\n    (0, _log.devAssert)(s.context, \"Service \" + id + \" registered without context.\");\n    s.obj = new s.ctor(s.context);\n    (0, _log.devAssert)(s.obj, \"Service \" + id + \" constructed to null.\");\n    s.ctor = null;\n    s.context = null; // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n\n  return s.obj;\n}\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n */\n\n\nfunction registerServiceInternal(holder, context, id, ctor, opt_override) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null\n    };\n  }\n\n  if (!opt_override && (s.ctor || s.obj)) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context; // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromiseInternal(holder, id) {\n  var cached = getServicePromiseOrNullInternal(holder, id);\n\n  if (cached) {\n    return cached;\n  } // Service is not registered.\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n\n\n  var services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return (\n    /** @type {!Promise<!Object>} */\n    services[id].promise\n  );\n}\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\n\n\nfunction rejectServicePromiseInternal(holder, id, error) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNullInternal(holder, id) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return s.promise = Promise.resolve(\n      /** @type {!Object} */\n      s.obj);\n    }\n  }\n\n  return null;\n}\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\n\n\nfunction getServices(holder) {\n  var services = holder.__AMP_SERVICES;\n\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n\n  return services;\n}\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\n\n\nfunction isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\n\n\nfunction assertDisposable(service) {\n  (0, _log.devAssert)(isDisposable(service), 'required to implement Disposable');\n  return (\n    /** @type {!Disposable} */\n    service\n  );\n}\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\n\n\nfunction disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\n\n\nfunction disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n/**\n * @param {!Object} holder Object holding the service instances.\n */\n\n\nfunction disposeServicesInternal(holder) {\n  // TODO(dvoytenko): Consider marking holder as destroyed for later-arriving\n  // service to be canceled automatically.\n  var services = getServices(holder);\n\n  var _loop = function _loop(id) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      return \"continue\";\n    }\n\n    var serviceHolder = services[id];\n\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then(function (instance) {\n        return disposeServiceInternal(id, instance);\n      });\n    }\n  };\n\n  for (var id in services) {\n    var _ret = _loop(id);\n\n    if (_ret === \"continue\") continue;\n  }\n}\n/**\n * @param {string} id\n * @param {!Object} service\n */\n\n\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    (0, _log.dev)().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n/**\n * Adopts an embeddable (implements `EmbeddableService` interface) service\n * in embed scope.\n * @param {!Window} embedWin\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} serviceClass\n * @suppress {missingProperties}\n * @return {boolean}\n */\n\n\nfunction installServiceInEmbedIfEmbeddable(embedWin, serviceClass) {\n  var isEmbeddableService = typeof serviceClass.installInEmbedWindow === 'function';\n\n  if (!isEmbeddableService) {\n    return false;\n  }\n\n  var frameElement = (0, _log.dev)().assertElement(embedWin.frameElement, 'frameElement not found for embed');\n  var ampdoc = getAmpdoc(frameElement);\n  serviceClass.installInEmbedWindow(embedWin, ampdoc);\n  return true;\n}\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\n\n\nfunction adoptServiceForEmbedDoc(ampdoc, id) {\n  var service = getServiceInternal(getAmpdocServiceHolder((0, _log.devAssert)(ampdoc.getParent())), id);\n  registerServiceInternal(getAmpdocServiceHolder(ampdoc), ampdoc, id, function () {\n    return service;\n  });\n}\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\n\n\nfunction resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\n\n\nfunction isServiceRegistered(holder, id) {\n  var service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id]; // All registered services must have an implementation or a constructor.\n\n  return !!(service && (service.ctor || service.obj));\n}\n/** @return {!ServiceHolderDef} */\n\n\nfunction emptyServiceHolderWithPromise() {\n  var deferred = new _promise.Deferred();\n  var promise = deferred.promise,\n      resolve = deferred.resolve,\n      reject = deferred.reject;\n  promise.catch(function () {}); // avoid uncaught exception when service gets rejected\n\n  return {\n    obj: null,\n    promise: promise,\n    resolve: resolve,\n    reject: reject,\n    context: null,\n    ctor: null\n  };\n}\n\n},{\"./experiments\":11,\"./log\":16,\"./types\":32,\"./utils/promise\":40}],23:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.installVideoManagerForDoc = installVideoManagerForDoc;\nexports.AnalyticsPercentageTracker = exports.PERCENTAGE_INTERVAL = exports.AutoFullscreenManager = exports.VideoManager = void 0;\n\nvar _actionConstants = require(\"../action-constants\");\n\nvar _mediasessionHelper = require(\"../mediasession-helper\");\n\nvar _videoInterface = require(\"../video-interface\");\n\nvar _services = require(\"../services\");\n\nvar _videoSessionManager = require(\"./video-session-manager\");\n\nvar _video = require(\"../utils/video\");\n\nvar _math = require(\"../utils/math\");\n\nvar _eventHelper = require(\"../event-helper\");\n\nvar _log = require(\"../log\");\n\nvar _object = require(\"../utils/object\");\n\nvar _mode = require(\"../mode\");\n\nvar _installAutoplayStyles = require(\"./video/install-autoplay-styles\");\n\nvar _types = require(\"../types\");\n\nvar _function = require(\"../utils/function\");\n\nvar _service = require(\"../service\");\n\nvar _dom = require(\"../dom\");\n\nvar _autoplay = require(\"./video/autoplay\");\n\nvar _string = require(\"../string\");\n\nvar _style = require(\"../style\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @private @const {string} */\nvar TAG = 'video-manager';\n/**\n * @private {number} The minimum number of milliseconds to wait between each\n * video-seconds-played analytics event.\n */\n\nvar SECONDS_PLAYED_MIN_DELAY = 1000;\n/**\n * VideoManager keeps track of all AMP video players that implement\n * the common Video API {@see ../video-interface.VideoInterface}.\n *\n * It is responsible for providing a unified user experience and analytics for\n * all videos within a document.\n *\n * @implements {../service.Disposable}\n */\n\nvar VideoManager =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   */\n  function VideoManager(ampdoc) {\n    var _this = this;\n\n    /** @const {!./ampdoc-impl.AmpDoc}  */\n    this.ampdoc = ampdoc;\n    /** @const */\n\n    this.installAutoplayStyles = (0, _function.once)(function () {\n      return (0, _installAutoplayStyles.installAutoplayStylesForDoc)(_this.ampdoc);\n    });\n    /** @private {!../service/viewport/viewport-interface.ViewportInterface} */\n\n    this.viewport_ = _services.Services.viewportForDoc(this.ampdoc);\n    /** @private {?Array<!VideoEntry>} */\n\n    this.entries_ = null;\n    /** @private {boolean} */\n\n    this.scrollListenerInstalled_ = false;\n    /** @private @const */\n\n    this.timer_ = _services.Services.timerFor(ampdoc.win);\n    /** @private @const */\n\n    this.actions_ = _services.Services.actionServiceForDoc(ampdoc.getHeadNode());\n    /**\n     * @private\n     * @const\n     * @return {undefined}\n     */\n\n    this.boundSecondsPlaying_ = function () {\n      return _this.secondsPlaying_();\n    };\n    /** @private @const {function():!AutoFullscreenManager} */\n\n\n    this.getAutoFullscreenManager_ = (0, _function.once)(function () {\n      return new AutoFullscreenManager(_this.ampdoc, _this);\n    }); // TODO(cvializ, #10599): It would be nice to only create the timer\n    // if video analytics are present, since the timer is not needed if\n    // video analytics are not present.\n\n    this.timer_.delay(this.boundSecondsPlaying_, SECONDS_PLAYED_MIN_DELAY);\n  }\n  /** @override */\n\n\n  var _proto = VideoManager.prototype;\n\n  _proto.dispose = function dispose() {\n    this.getAutoFullscreenManager_().dispose();\n\n    if (!this.entries_) {\n      return;\n    }\n\n    for (var i = 0; i < this.entries_.length; i++) {\n      var entry = this.entries_[i];\n      entry.dispose();\n    }\n  }\n  /**\n   * Each second, trigger video-seconds-played for videos that are playing\n   * at trigger time.\n   * @private\n   */\n  ;\n\n  _proto.secondsPlaying_ = function secondsPlaying_() {\n    for (var i = 0; i < this.entries_.length; i++) {\n      var entry = this.entries_[i];\n\n      if (entry.getPlayingState() !== _videoInterface.PlayingStates.PAUSED) {\n        analyticsEvent(entry, _videoInterface.VideoAnalyticsEvents.SECONDS_PLAYED);\n        this.timeUpdateActionEvent_(entry);\n      }\n    }\n\n    this.timer_.delay(this.boundSecondsPlaying_, SECONDS_PLAYED_MIN_DELAY);\n  }\n  /**\n   * Triggers a LOW-TRUST timeupdate event consumable by AMP actions.\n   * Frequency of this event is controlled by SECONDS_PLAYED_MIN_DELAY and is\n   * every 1 second for now.\n   * @param {!VideoEntry} entry\n   * @private\n   */\n  ;\n\n  _proto.timeUpdateActionEvent_ = function timeUpdateActionEvent_(entry) {\n    var name = 'timeUpdate';\n    var currentTime = entry.video.getCurrentTime();\n    var duration = entry.video.getDuration();\n\n    if ((0, _types.isFiniteNumber)(currentTime) && (0, _types.isFiniteNumber)(duration) && duration > 0) {\n      var perc = currentTime / duration;\n      var event = (0, _eventHelper.createCustomEvent)(this.ampdoc.win, TAG + \".\" + name, (0, _object.dict)({\n        'time': currentTime,\n        'percent': perc\n      }));\n      this.actions_.trigger(entry.video.element, name, event, _actionConstants.ActionTrust.LOW);\n    }\n  }\n  /** @param {!../video-interface.VideoInterface} video */\n  ;\n\n  _proto.register = function register(video) {\n    (0, _log.devAssert)(video);\n    this.registerCommonActions_(video);\n\n    if (!video.supportsPlatform()) {\n      return;\n    }\n\n    this.entries_ = this.entries_ || [];\n    var entry = new VideoEntry(this, video);\n    this.maybeInstallVisibilityObserver_(entry);\n    this.entries_.push(entry);\n    var element = entry.video.element;\n    element.dispatchCustomEvent(_videoInterface.VideoEvents.REGISTERED);\n    element.classList.add('i-amphtml-video-component'); // Unlike events, signals are permanent. We can wait for `REGISTERED` at any\n    // moment in the element's lifecycle and the promise will resolve\n    // appropriately each time.\n\n    var signals =\n    /** @type {!../base-element.BaseElement} */\n    video.signals();\n    signals.signal(_videoInterface.VideoEvents.REGISTERED); // Add a class to element to indicate it implements the video interface.\n\n    element.classList.add('i-amphtml-video-interface');\n  }\n  /**\n   * Register common actions such as play, pause, etc... on the video element\n   * so they can be called using AMP Actions.\n   * For example: <button on=\"tap:myVideo.play\">\n   *\n   * @param {!../video-interface.VideoOrBaseElementDef} video\n   * @private\n   */\n  ;\n\n  _proto.registerCommonActions_ = function registerCommonActions_(video) {\n    // Only require ActionTrust.LOW for video actions to defer to platform\n    // specific handling (e.g. user gesture requirement for unmuted playback).\n    var trust = _actionConstants.ActionTrust.LOW;\n    registerAction('play', function () {\n      return video.play(\n      /* isAutoplay */\n      false);\n    });\n    registerAction('pause', function () {\n      return video.pause();\n    });\n    registerAction('mute', function () {\n      return video.mute();\n    });\n    registerAction('unmute', function () {\n      return video.unmute();\n    });\n    registerAction('fullscreen', function () {\n      return video.fullscreenEnter();\n    });\n    /**\n     * @param {string} action\n     * @param {function()} fn\n     */\n\n    function registerAction(action, fn) {\n      video.registerAction(action, function () {\n        (0, _videoInterface.userInteractedWith)(video);\n        fn();\n      }, trust);\n    }\n  }\n  /**\n   * Install the necessary listeners to be notified when a video becomes visible\n   * in the viewport.\n   *\n   * Visibility of a video is defined by being in the viewport AND having\n   * {@link MIN_VISIBILITY_RATIO_FOR_AUTOPLAY} of the video element visible.\n   *\n   * @param {VideoEntry} entry\n   * @private\n   */\n  ;\n\n  _proto.maybeInstallVisibilityObserver_ = function maybeInstallVisibilityObserver_(entry) {\n    var _this2 = this;\n\n    var element = entry.video.element;\n    (0, _eventHelper.listen)(element, _videoInterface.VideoEvents.VISIBILITY, function (details) {\n      var data = (0, _eventHelper.getData)(details);\n\n      if (data && data['visible'] == true) {\n        entry.updateVisibility(\n        /* opt_forceVisible */\n        true);\n      } else {\n        entry.updateVisibility();\n      }\n    });\n    (0, _eventHelper.listen)(element, _videoInterface.VideoEvents.RELOAD, function () {\n      entry.videoLoaded();\n    }); // TODO(aghassemi, #6425): Use IntersectionObserver\n\n    if (!this.scrollListenerInstalled_) {\n      var scrollListener = function scrollListener() {\n        for (var i = 0; i < _this2.entries_.length; i++) {\n          _this2.entries_[i].updateVisibility();\n        }\n      };\n\n      this.viewport_.onScroll(scrollListener);\n      this.viewport_.onChanged(scrollListener);\n      this.scrollListenerInstalled_ = true;\n    }\n  }\n  /**\n   * Returns the entry in the video manager corresponding to the video\n   * provided\n   *\n   * @param {!../video-interface.VideoInterface} video\n   * @return {VideoEntry} entry\n   * @private\n   */\n  ;\n\n  _proto.getEntryForVideo_ = function getEntryForVideo_(video) {\n    for (var i = 0; i < this.entries_.length; i++) {\n      if (this.entries_[i].video === video) {\n        return this.entries_[i];\n      }\n    }\n\n    (0, _log.dev)().error(TAG, 'video is not registered to this video manager');\n    return null;\n  }\n  /**\n   * Returns the entry in the video manager corresponding to the element\n   * provided\n   *\n   * @param {!AmpElement} element\n   * @return {VideoEntry} entry\n   * @private\n   */\n  ;\n\n  _proto.getEntryForElement_ = function getEntryForElement_(element) {\n    for (var i = 0; i < this.entries_.length; i++) {\n      var entry = this.entries_[i];\n\n      if (entry.video.element === element) {\n        return entry;\n      }\n    }\n\n    (0, _log.dev)().error(TAG, 'video is not registered to this video manager');\n    return null;\n  }\n  /**\n   * Gets the current analytics details for the given video.\n   * Fails silently if the video is not registered.\n   * @param {!AmpElement} videoElement\n   * @return {!Promise<!VideoAnalyticsDetailsDef|undefined>}\n   */\n  ;\n\n  _proto.getAnalyticsDetails = function getAnalyticsDetails(videoElement) {\n    var entry = this.getEntryForElement_(videoElement);\n    return entry ? entry.getAnalyticsDetails() : Promise.resolve();\n  }\n  /**\n   * Returns whether the video is paused or playing after the user interacted\n   * with it or playing through autoplay\n   *\n   * @param {!../video-interface.VideoInterface} video\n   * @return {!../video-interface.PlayingStateDef}\n   */\n  ;\n\n  _proto.getPlayingState = function getPlayingState(video) {\n    return this.getEntryForVideo_(video).getPlayingState();\n  }\n  /**\n   * @param {!../video-interface.VideoInterface} video\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isMuted = function isMuted(video) {\n    return this.getEntryForVideo_(video).isMuted();\n  }\n  /**\n   * @param {!../video-interface.VideoInterface} video\n   * @return {boolean}\n   */\n  ;\n\n  _proto.userInteracted = function userInteracted(video) {\n    return this.getEntryForVideo_(video).userInteracted();\n  }\n  /** @param {!VideoEntry} entry */\n  ;\n\n  _proto.registerForAutoFullscreen = function registerForAutoFullscreen(entry) {\n    this.getAutoFullscreenManager_().register(entry);\n  }\n  /**\n   * @return {!AutoFullscreenManager}\n   * @visibleForTesting\n   */\n  ;\n\n  _proto.getAutoFullscreenManagerForTesting_ = function getAutoFullscreenManagerForTesting_() {\n    return this.getAutoFullscreenManager_();\n  };\n\n  return VideoManager;\n}();\n/**\n * VideoEntry represents an entry in the VideoManager's list.\n */\n\n\nexports.VideoManager = VideoManager;\n\nvar VideoEntry =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!VideoManager} manager\n   * @param {!../video-interface.VideoOrBaseElementDef} video\n   */\n  function VideoEntry(manager, video) {\n    var _this3 = this;\n\n    /** @private @const {!VideoManager} */\n    this.manager_ = manager;\n    /** @private @const {!./ampdoc-impl.AmpDoc}  */\n\n    this.ampdoc_ = manager.ampdoc;\n    /** @package @const {!../video-interface.VideoOrBaseElementDef} */\n\n    this.video = video;\n    /** @private {boolean} */\n\n    this.allowAutoplay_ = true;\n    /** @private {boolean} */\n\n    this.loaded_ = false;\n    /** @private {boolean} */\n\n    this.isPlaying_ = false;\n    /** @private {boolean} */\n\n    this.isVisible_ = false;\n    /** @private @const */\n\n    this.actionSessionManager_ = new _videoSessionManager.VideoSessionManager();\n    this.actionSessionManager_.onSessionEnd(function () {\n      return analyticsEvent(_this3, _videoInterface.VideoAnalyticsEvents.SESSION);\n    });\n    /** @private @const */\n\n    this.visibilitySessionManager_ = new _videoSessionManager.VideoSessionManager();\n    this.visibilitySessionManager_.onSessionEnd(function () {\n      return analyticsEvent(_this3, _videoInterface.VideoAnalyticsEvents.SESSION_VISIBLE);\n    }); // eslint-disable-next-line jsdoc/require-returns\n\n    /** @private @const {function(): !Promise<boolean>} */\n\n    this.supportsAutoplay_ = function () {\n      var win = _this3.ampdoc_.win;\n      return _video.VideoUtils.isAutoplaySupported(win, (0, _mode.getMode)(win).lite);\n    };\n    /** @private @const {function(): !AnalyticsPercentageTracker} */\n\n\n    this.getAnalyticsPercentageTracker_ = (0, _function.once)(function () {\n      return new AnalyticsPercentageTracker(_this3.ampdoc_.win, _this3);\n    }); // Autoplay Variables\n\n    /** @private {boolean} */\n\n    this.playCalledByAutoplay_ = false;\n    /** @private {boolean} */\n\n    this.pauseCalledByAutoplay_ = false;\n    /** @private {?Element} */\n\n    this.internalElement_ = null;\n    /** @private {boolean} */\n\n    this.muted_ = false;\n    this.hasAutoplay = video.element.hasAttribute(_videoInterface.VideoAttributes.AUTOPLAY);\n\n    if (this.hasAutoplay) {\n      this.manager_.installAutoplayStyles();\n    } // Media Session API Variables\n\n    /** @private {!../mediasession-helper.MetadataDef} */\n\n\n    this.metadata_ = _mediasessionHelper.EMPTY_METADATA;\n    /** @private @const {function()} */\n\n    this.boundMediasessionPlay_ = function () {\n      _this3.video.play(\n      /* isAutoplay */\n      false);\n    };\n    /** @private @const {function()} */\n\n\n    this.boundMediasessionPause_ = function () {\n      _this3.video.pause();\n    };\n\n    (0, _eventHelper.listenOncePromise)(video.element, _videoInterface.VideoEvents.LOAD).then(function () {\n      return _this3.videoLoaded();\n    });\n    (0, _eventHelper.listen)(video.element, _videoInterface.VideoEvents.PAUSE, function () {\n      return _this3.videoPaused_();\n    });\n    (0, _eventHelper.listen)(video.element, _videoInterface.VideoEvents.PLAYING, function () {\n      return _this3.videoPlayed_();\n    });\n    (0, _eventHelper.listen)(video.element, _videoInterface.VideoEvents.MUTED, function () {\n      return _this3.muted_ = true;\n    });\n    (0, _eventHelper.listen)(video.element, _videoInterface.VideoEvents.UNMUTED, function () {\n      return _this3.muted_ = false;\n    });\n    (0, _eventHelper.listen)(video.element, _videoInterface.VideoEvents.ENDED, function () {\n      return _this3.videoEnded_();\n    });\n    (0, _eventHelper.listen)(video.element, _videoInterface.VideoEvents.AD_START, function () {\n      return analyticsEvent(_this3, _videoInterface.VideoAnalyticsEvents.AD_START);\n    });\n    (0, _eventHelper.listen)(video.element, _videoInterface.VideoEvents.AD_END, function () {\n      return analyticsEvent(_this3, _videoInterface.VideoAnalyticsEvents.AD_END);\n    });\n    (0, _eventHelper.listen)(video.element, _videoInterface.VideoEvents.CUSTOM_TICK, function (e) {\n      var data = (0, _eventHelper.getData)(e);\n      var eventType = data['eventType'];\n\n      if (!eventType) {\n        // CUSTOM_TICK is a generic event for 3p players whose semantics\n        // don't fit with other video events.\n        // If `eventType` is unset, it's not meant for analytics.\n        return;\n      }\n\n      _this3.logCustomAnalytics_(eventType, data['vars']);\n    });\n    video.signals().whenSignal(_videoInterface.VideoEvents.REGISTERED).then(function () {\n      return _this3.onRegister_();\n    });\n    /**\n     * Trigger event for first manual play.\n     * @private @const {!function()}\n     */\n\n    this.firstPlayEventOrNoop_ = (0, _function.once)(function () {\n      var firstPlay = 'firstPlay';\n      var trust = _actionConstants.ActionTrust.LOW;\n      var event = (0, _eventHelper.createCustomEvent)(_this3.ampdoc_.win, firstPlay,\n      /* detail */\n      (0, _object.dict)({}));\n      var element = _this3.video.element;\n\n      var actions = _services.Services.actionServiceForDoc(element);\n\n      actions.trigger(element, firstPlay, event, trust);\n    });\n    this.listenForAutoplayDelegation_();\n  }\n  /** @public */\n\n\n  var _proto2 = VideoEntry.prototype;\n\n  _proto2.dispose = function dispose() {\n    this.getAnalyticsPercentageTracker_().stop();\n  }\n  /**\n   * @param {string} eventType\n   * @param {!Object<string, string>} vars\n   */\n  ;\n\n  _proto2.logCustomAnalytics_ = function logCustomAnalytics_(eventType, vars) {\n    var _prefixedVars;\n\n    var prefixedVars = (_prefixedVars = {}, _prefixedVars[_videoInterface.videoAnalyticsCustomEventTypeKey] = eventType, _prefixedVars);\n    Object.keys(vars).forEach(function (key) {\n      prefixedVars[\"custom_\" + key] = vars[key];\n    });\n    analyticsEvent(this, _videoInterface.VideoAnalyticsEvents.CUSTOM, prefixedVars);\n  }\n  /** Listens for signals to delegate autoplay to a different module. */\n  ;\n\n  _proto2.listenForAutoplayDelegation_ = function listenForAutoplayDelegation_() {\n    var _this4 = this;\n\n    var signals = this.video.signals();\n    signals.whenSignal(_videoInterface.VideoServiceSignals.AUTOPLAY_DELEGATED).then(function () {\n      _this4.allowAutoplay_ = false;\n\n      if (_this4.isPlaying_) {\n        _this4.video.pause();\n      }\n    });\n  }\n  /** @return {boolean} */\n  ;\n\n  _proto2.isMuted = function isMuted() {\n    return this.muted_;\n  }\n  /** @private */\n  ;\n\n  _proto2.onRegister_ = function onRegister_() {\n    if (this.requiresAutoFullscreen_()) {\n      this.manager_.registerForAutoFullscreen(this);\n    }\n\n    this.updateVisibility();\n\n    if (this.hasAutoplay) {\n      this.autoplayVideoBuilt_();\n    }\n  }\n  /**\n   * @return {boolean}\n   * @private\n   */\n  ;\n\n  _proto2.requiresAutoFullscreen_ = function requiresAutoFullscreen_() {\n    var element = this.video.element;\n\n    if (this.video.preimplementsAutoFullscreen() || !element.hasAttribute(_videoInterface.VideoAttributes.ROTATE_TO_FULLSCREEN)) {\n      return false;\n    }\n\n    return (0, _log.userAssert)(this.video.isInteractive(), 'Only interactive videos are allowed to enter fullscreen on rotate. ' + 'Set the `controls` attribute on %s to enable.', element);\n  }\n  /**\n   * Callback for when the video starts playing\n   * @private\n   */\n  ;\n\n  _proto2.videoPlayed_ = function videoPlayed_() {\n    this.isPlaying_ = true;\n\n    if (this.getPlayingState() == _videoInterface.PlayingStates.PLAYING_MANUAL) {\n      this.firstPlayEventOrNoop_();\n    }\n\n    var video = this.video;\n    var element = video.element;\n\n    if (!video.preimplementsMediaSessionAPI() && !element.classList.contains('i-amphtml-disable-mediasession')) {\n      (0, _mediasessionHelper.setMediaSession)(element, this.ampdoc_.win, this.metadata_, this.boundMediasessionPlay_, this.boundMediasessionPause_);\n    }\n\n    this.actionSessionManager_.beginSession();\n\n    if (this.isVisible_) {\n      this.visibilitySessionManager_.beginSession();\n    }\n\n    analyticsEvent(this, _videoInterface.VideoAnalyticsEvents.PLAY);\n  }\n  /**\n   * Callback for when the video has been paused\n   * @private\n   */\n  ;\n\n  _proto2.videoPaused_ = function videoPaused_() {\n    analyticsEvent(this, _videoInterface.VideoAnalyticsEvents.PAUSE);\n    this.isPlaying_ = false; // Prevent double-trigger of session if video is autoplay and the video\n    // is paused by a the user scrolling the video out of view.\n\n    if (!this.pauseCalledByAutoplay_) {\n      this.actionSessionManager_.endSession();\n    } else {\n      // reset the flag\n      this.pauseCalledByAutoplay_ = false;\n    }\n  }\n  /**\n   * Callback for when the video has ended\n   * @private\n   */\n  ;\n\n  _proto2.videoEnded_ = function videoEnded_() {\n    analyticsEvent(this, _videoInterface.VideoAnalyticsEvents.ENDED);\n  }\n  /**\n   * Called when the video is loaded and can play.\n   */\n  ;\n\n  _proto2.videoLoaded = function videoLoaded() {\n    this.loaded_ = true;\n    this.internalElement_ = (0, _video.getInternalVideoElementFor)(this.video.element);\n    this.fillMediaSessionMetadata_();\n    this.getAnalyticsPercentageTracker_().start();\n    this.updateVisibility();\n\n    if (this.isVisible_) {\n      // Handles the case when the video becomes visible before loading\n      this.loadedVideoVisibilityChanged_();\n    }\n  }\n  /**\n   * Gets the provided metadata and fills in missing fields\n   * @private\n   */\n  ;\n\n  _proto2.fillMediaSessionMetadata_ = function fillMediaSessionMetadata_() {\n    if (this.video.preimplementsMediaSessionAPI()) {\n      return;\n    }\n\n    if (this.video.getMetadata()) {\n      this.metadata_ = (0, _object.map)(\n      /** @type {!../mediasession-helper.MetadataDef} */\n      this.video.getMetadata());\n    }\n\n    var doc = this.ampdoc_.win.document;\n\n    if (!this.metadata_.artwork || this.metadata_.artwork.length == 0) {\n      var posterUrl = (0, _mediasessionHelper.parseSchemaImage)(doc) || (0, _mediasessionHelper.parseOgImage)(doc) || (0, _mediasessionHelper.parseFavicon)(doc);\n\n      if (posterUrl) {\n        this.metadata_.artwork = [{\n          'src': posterUrl\n        }];\n      }\n    }\n\n    if (!this.metadata_.title) {\n      var title = this.video.element.getAttribute('title') || this.video.element.getAttribute('aria-label') || this.internalElement_.getAttribute('title') || this.internalElement_.getAttribute('aria-label') || doc.title;\n\n      if (title) {\n        this.metadata_.title = title;\n      }\n    }\n  }\n  /**\n   * Called when visibility of a video changes.\n   * @private\n   */\n  ;\n\n  _proto2.videoVisibilityChanged_ = function videoVisibilityChanged_() {\n    if (this.loaded_) {\n      this.loadedVideoVisibilityChanged_();\n    }\n  }\n  /**\n   * Only called when visibility of a loaded video changes.\n   * @private\n   */\n  ;\n\n  _proto2.loadedVideoVisibilityChanged_ = function loadedVideoVisibilityChanged_() {\n    var _this5 = this;\n\n    if (!this.ampdoc_.isVisible()) {\n      return;\n    }\n\n    this.supportsAutoplay_().then(function (supportsAutoplay) {\n      var canAutoplay = _this5.hasAutoplay && !_this5.userInteracted();\n\n      if (canAutoplay && supportsAutoplay) {\n        _this5.autoplayLoadedVideoVisibilityChanged_();\n      } else {\n        _this5.nonAutoplayLoadedVideoVisibilityChanged_();\n      }\n    });\n  }\n  /* Autoplay Behavior */\n\n  /**\n   * Called when an autoplay video is built.\n   * @private\n   */\n  ;\n\n  _proto2.autoplayVideoBuilt_ = function autoplayVideoBuilt_() {\n    var _this6 = this;\n\n    // Hide controls until we know if autoplay is supported, otherwise hiding\n    // and showing the controls quickly becomes a bad user experience for the\n    // common case where autoplay is supported.\n    if (this.video.isInteractive()) {\n      this.video.hideControls();\n    }\n\n    this.supportsAutoplay_().then(function (supportsAutoplay) {\n      if (!supportsAutoplay && _this6.video.isInteractive()) {\n        // Autoplay is not supported, show the controls so user can manually\n        // initiate playback.\n        _this6.video.showControls();\n\n        return;\n      } // Only muted videos are allowed to autoplay\n\n\n      _this6.video.mute();\n\n      _this6.installAutoplayArtifacts_();\n    });\n  }\n  /**\n   * Installs autoplay animation and interaction mask when interactive.\n   * The animated icon is appended always, but only displayed by CSS when\n   * `controls` is set. See `video-autoplay.css`.\n   * @private\n   */\n  ;\n\n  _proto2.installAutoplayArtifacts_ = function installAutoplayArtifacts_() {\n    var _this7 = this;\n\n    var video = this.video;\n    var _this$video = this.video,\n        element = _this$video.element,\n        win = _this$video.win;\n\n    if (element.hasAttribute(_videoInterface.VideoAttributes.NO_AUDIO) || element.signals().get(_videoInterface.VideoServiceSignals.USER_INTERACTED)) {\n      return;\n    }\n\n    var animation = (0, _autoplay.renderIcon)(win, element);\n    /** @param {boolean} isPlaying */\n\n    var toggleAnimation = function toggleAnimation(isPlaying) {\n      video.mutateElement(function () {\n        animation.classList.toggle('amp-video-eq-play', isPlaying);\n      });\n    };\n\n    video.mutateElement(function () {\n      element.appendChild(animation);\n    });\n    var unlisteners = [(0, _eventHelper.listen)(element, _videoInterface.VideoEvents.PAUSE, function () {\n      return toggleAnimation(false);\n    }), (0, _eventHelper.listen)(element, _videoInterface.VideoEvents.PLAYING, function () {\n      return toggleAnimation(true);\n    })];\n    video.signals().whenSignal(_videoInterface.VideoServiceSignals.USER_INTERACTED).then(function () {\n      var video = _this7.video;\n      var element = video.element;\n\n      _this7.firstPlayEventOrNoop_();\n\n      if (video.isInteractive()) {\n        video.showControls();\n      }\n\n      video.unmute();\n      unlisteners.forEach(function (unlistener) {\n        unlistener();\n      });\n      var animation = element.querySelector('.amp-video-eq');\n      var mask = element.querySelector('i-amphtml-video-mask');\n\n      if (animation) {\n        (0, _dom.removeElement)(animation);\n      }\n\n      if (mask) {\n        (0, _dom.removeElement)(mask);\n      }\n    });\n\n    if (!video.isInteractive()) {\n      return;\n    }\n\n    var mask = (0, _autoplay.renderInteractionOverlay)(element);\n    /** @param {boolean} display */\n\n    var setMaskDisplay = function setMaskDisplay(display) {\n      video.mutateElement(function () {\n        (0, _style.toggle)(mask, display);\n      });\n    };\n\n    video.hideControls();\n    video.mutateElement(function () {\n      element.appendChild(mask);\n    });\n    [(0, _eventHelper.listen)(mask, 'click', function () {\n      return (0, _videoInterface.userInteractedWith)(video);\n    }), (0, _eventHelper.listen)(element, _videoInterface.VideoEvents.AD_START, function () {\n      setMaskDisplay(false);\n      video.showControls();\n    }), (0, _eventHelper.listen)(element, _videoInterface.VideoEvents.AD_END, function () {\n      setMaskDisplay(true);\n      video.hideControls();\n    }), (0, _eventHelper.listen)(element, _videoInterface.VideoEvents.UNMUTED, function () {\n      return (0, _videoInterface.userInteractedWith)(video);\n    })].forEach(function (unlistener) {\n      return unlisteners.push(unlistener);\n    });\n  }\n  /**\n   * Called when visibility of a loaded autoplay video changes.\n   * @private\n   */\n  ;\n\n  _proto2.autoplayLoadedVideoVisibilityChanged_ = function autoplayLoadedVideoVisibilityChanged_() {\n    if (!this.allowAutoplay_) {\n      return;\n    }\n\n    if (this.isVisible_) {\n      this.visibilitySessionManager_.beginSession();\n      this.video.play(\n      /*autoplay*/\n      true);\n      this.playCalledByAutoplay_ = true;\n    } else {\n      if (this.isPlaying_) {\n        this.visibilitySessionManager_.endSession();\n      }\n\n      this.video.pause();\n      this.pauseCalledByAutoplay_ = true;\n    }\n  }\n  /**\n   * Called when visibility of a loaded non-autoplay video changes.\n   * @private\n   */\n  ;\n\n  _proto2.nonAutoplayLoadedVideoVisibilityChanged_ = function nonAutoplayLoadedVideoVisibilityChanged_() {\n    if (this.isVisible_) {\n      this.visibilitySessionManager_.beginSession();\n    } else if (this.isPlaying_) {\n      this.visibilitySessionManager_.endSession();\n    }\n  }\n  /**\n   * Called by all possible events that might change the visibility of the video\n   * such as scrolling or {@link ../video-interface.VideoEvents#VISIBILITY}.\n   * @param {?boolean=} opt_forceVisible\n   * @package\n   */\n  ;\n\n  _proto2.updateVisibility = function updateVisibility(opt_forceVisible) {\n    var wasVisible = this.isVisible_;\n\n    if (opt_forceVisible) {\n      this.isVisible_ = true;\n    } else {\n      var element = this.video.element;\n      var ratio = element.getIntersectionChangeEntry().intersectionRatio;\n      this.isVisible_ = (!(0, _types.isFiniteNumber)(ratio) ? 0 : ratio) >= _videoInterface.MIN_VISIBILITY_RATIO_FOR_AUTOPLAY;\n    }\n\n    if (this.isVisible_ != wasVisible) {\n      this.videoVisibilityChanged_();\n    }\n  }\n  /**\n   * Returns whether the video is paused or playing after the user interacted\n   * with it or playing through autoplay\n   * @return {!../video-interface.PlayingStateDef}\n   */\n  ;\n\n  _proto2.getPlayingState = function getPlayingState() {\n    if (!this.isPlaying_) {\n      return _videoInterface.PlayingStates.PAUSED;\n    }\n\n    if (this.isPlaying_ && this.playCalledByAutoplay_ && !this.userInteracted()) {\n      return _videoInterface.PlayingStates.PLAYING_AUTO;\n    }\n\n    return _videoInterface.PlayingStates.PLAYING_MANUAL;\n  }\n  /**\n   * Returns whether the video was interacted with or not\n   * @return {boolean}\n   */\n  ;\n\n  _proto2.userInteracted = function userInteracted() {\n    return this.video.signals().get(_videoInterface.VideoServiceSignals.USER_INTERACTED) != null;\n  }\n  /**\n   * Collects a snapshot of the current video state for video analytics\n   * @return {!Promise<!VideoAnalyticsDetailsDef>}\n   */\n  ;\n\n  _proto2.getAnalyticsDetails = function getAnalyticsDetails() {\n    var _this8 = this;\n\n    var video = this.video;\n    return this.supportsAutoplay_().then(function (supportsAutoplay) {\n      var _video$element$getLay = video.element.getLayoutBox(),\n          width = _video$element$getLay.width,\n          height = _video$element$getLay.height;\n\n      var autoplay = _this8.hasAutoplay && supportsAutoplay;\n      var playedRanges = video.getPlayedRanges();\n      var playedTotal = playedRanges.reduce(function (acc, range) {\n        return acc + range[1] - range[0];\n      }, 0);\n      return {\n        'autoplay': autoplay,\n        'currentTime': video.getCurrentTime(),\n        'duration': video.getDuration(),\n        // TODO(cvializ): add fullscreen\n        'height': height,\n        'id': video.element.id,\n        'muted': _this8.muted_,\n        'playedTotal': playedTotal,\n        'playedRangesJson': JSON.stringify(playedRanges),\n        'state': _this8.getPlayingState(),\n        'width': width\n      };\n    });\n  };\n\n  return VideoEntry;\n}();\n/**\n * @param {!AmpElement} video\n * @return {boolean}\n * @restricted\n */\n\n\nfunction supportsFullscreenViaApi(video) {\n  // TODO(alanorozco): Determine this via a flag in the component itself.\n  return !!{\n    'amp-dailymotion': true,\n    'amp-ima-video': true\n  }[video.tagName.toLowerCase()];\n}\n/** Manages rotate-to-fullscreen video. */\n\n\nvar AutoFullscreenManager =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   * @param {!VideoManager} manager\n   */\n  function AutoFullscreenManager(ampdoc, manager) {\n    var _this9 = this;\n\n    /** @private @const {!VideoManager} */\n    this.manager_ = manager;\n    /** @private @const {!./ampdoc-impl.AmpDoc} */\n\n    this.ampdoc_ = ampdoc;\n    /** @private {?../video-interface.VideoOrBaseElementDef} */\n\n    this.currentlyInFullscreen_ = null;\n    /** @private {?../video-interface.VideoOrBaseElementDef} */\n\n    this.currentlyCentered_ = null;\n    /** @private @const {!Array<!../video-interface.VideoOrBaseElementDef>} */\n\n    this.entries_ = [];\n    /**\n     * Unlisteners for global objects\n     * @private {!Array<!UnlistenDef>}\n     */\n\n    this.unlisteners_ = []; // eslint-disable-next-line jsdoc/require-returns\n\n    /** @private @const {function()} */\n\n    this.boundSelectBestCentered_ = function () {\n      return _this9.selectBestCenteredInPortrait_();\n    };\n    /**\n     * @param {!../video-interface.VideoOrBaseElementDef} video\n     * @return {boolean}\n     */\n\n\n    this.boundIncludeOnlyPlaying_ = function (video) {\n      return _this9.getPlayingState_(video) == _videoInterface.PlayingStates.PLAYING_MANUAL;\n    };\n    /**\n     * @param {!../video-interface.VideoOrBaseElementDef} a\n     * @param {!../video-interface.VideoOrBaseElementDef} b\n     * @return {number}\n     */\n\n\n    this.boundCompareEntries_ = function (a, b) {\n      return _this9.compareEntries_(a, b);\n    };\n\n    this.installOrientationObserver_();\n    this.installFullscreenListener_();\n  }\n  /** @public */\n\n\n  var _proto3 = AutoFullscreenManager.prototype;\n\n  _proto3.dispose = function dispose() {\n    this.unlisteners_.forEach(function (unlisten) {\n      return unlisten();\n    });\n    this.unlisteners_.length = 0;\n  }\n  /** @param {!VideoEntry} entry */\n  ;\n\n  _proto3.register = function register(entry) {\n    var video = entry.video;\n    var element = video.element;\n\n    if (!this.canFullscreen_(element)) {\n      return;\n    }\n\n    this.entries_.push(video);\n    (0, _eventHelper.listen)(element, _videoInterface.VideoEvents.PAUSE, this.boundSelectBestCentered_);\n    (0, _eventHelper.listen)(element, _videoInterface.VideoEvents.PLAYING, this.boundSelectBestCentered_);\n    (0, _eventHelper.listen)(element, _videoInterface.VideoEvents.ENDED, this.boundSelectBestCentered_);\n    video.signals().whenSignal(_videoInterface.VideoServiceSignals.USER_INTERACTED).then(this.boundSelectBestCentered_); // Set always\n\n    this.selectBestCenteredInPortrait_();\n  }\n  /** @private */\n  ;\n\n  _proto3.installFullscreenListener_ = function installFullscreenListener_() {\n    var _this10 = this;\n\n    var root = this.ampdoc_.getRootNode();\n\n    var exitHandler = function exitHandler() {\n      return _this10.onFullscreenExit_();\n    };\n\n    this.unlisteners_.push((0, _eventHelper.listen)(root, 'webkitfullscreenchange', exitHandler), (0, _eventHelper.listen)(root, 'mozfullscreenchange', exitHandler), (0, _eventHelper.listen)(root, 'fullscreenchange', exitHandler), (0, _eventHelper.listen)(root, 'MSFullscreenChange', exitHandler));\n  }\n  /**\n   * @return {boolean}\n   * @visibleForTesting\n   */\n  ;\n\n  _proto3.isInLandscape = function isInLandscape() {\n    return isLandscape(this.ampdoc_.win);\n  }\n  /**\n   * @param {!AmpElement} video\n   * @return {boolean}\n   * @private\n   */\n  ;\n\n  _proto3.canFullscreen_ = function canFullscreen_(video) {\n    // Safari and iOS can only fullscreen <video> elements directly. In cases\n    // where the player component is implemented via an <iframe>, we need to\n    // rely on a postMessage API to fullscreen. Such an API is not necessarily\n    // provided by every player.\n    var internalElement = (0, _video.getInternalVideoElementFor)(video);\n\n    if (internalElement.tagName.toLowerCase() == 'video') {\n      return true;\n    }\n\n    var platform = _services.Services.platformFor(this.ampdoc_.win);\n\n    if (!(platform.isIos() || platform.isSafari())) {\n      return true;\n    }\n\n    return supportsFullscreenViaApi(video);\n  }\n  /** @private */\n  ;\n\n  _proto3.onFullscreenExit_ = function onFullscreenExit_() {\n    this.currentlyInFullscreen_ = null;\n  }\n  /** @private */\n  ;\n\n  _proto3.installOrientationObserver_ = function installOrientationObserver_() {\n    var _this11 = this;\n\n    // TODO(alanorozco) Update based on support\n    var win = this.ampdoc_.win;\n    var screen = win.screen; // Chrome considers 'orientationchange' to be an untrusted event, but\n    // 'change' on screen.orientation is considered a user interaction.\n    // We still need to listen to 'orientationchange' on Chrome in order to\n    // exit fullscreen since 'change' does not fire in this case.\n\n    if (screen && 'orientation' in screen) {\n      var orient =\n      /** @type {!ScreenOrientation} */\n      screen.orientation;\n      this.unlisteners_.push((0, _eventHelper.listen)(orient, 'change', function () {\n        return _this11.onRotation_();\n      }));\n    } // iOS Safari does not have screen.orientation but classifies\n    // 'orientationchange' as a user interaction.\n\n\n    this.unlisteners_.push((0, _eventHelper.listen)(win, 'orientationchange', function () {\n      return _this11.onRotation_();\n    }));\n  }\n  /** @private */\n  ;\n\n  _proto3.onRotation_ = function onRotation_() {\n    if (this.isInLandscape()) {\n      if (this.currentlyCentered_ != null) {\n        this.enter_(this.currentlyCentered_);\n      }\n\n      return;\n    }\n\n    if (this.currentlyInFullscreen_) {\n      this.exit_(this.currentlyInFullscreen_);\n    }\n  }\n  /**\n   * @param {!../video-interface.VideoOrBaseElementDef} video\n   * @private\n   */\n  ;\n\n  _proto3.enter_ = function enter_(video) {\n    var platform = _services.Services.platformFor(this.ampdoc_.win);\n\n    this.currentlyInFullscreen_ = video;\n\n    if (platform.isAndroid() && platform.isChrome()) {\n      // Chrome on Android somehow knows what we're doing and executes a nice\n      // transition by default. Delegating to browser.\n      video.fullscreenEnter();\n      return;\n    }\n\n    this.scrollIntoIfNotVisible_(video).then(function () {\n      return video.fullscreenEnter();\n    });\n  }\n  /**\n   * @param {!../video-interface.VideoOrBaseElementDef} video\n   * @private\n   */\n  ;\n\n  _proto3.exit_ = function exit_(video) {\n    this.currentlyInFullscreen_ = null;\n    this.scrollIntoIfNotVisible_(video, 'center').then(function () {\n      return video.fullscreenExit();\n    });\n  }\n  /**\n   * Scrolls to a video if it's not in view.\n   * @param {!../video-interface.VideoOrBaseElementDef} video\n   * @param {?string=} optPos\n   * @return {*} TODO(#23582): Specify return type\n   * @private\n   */\n  ;\n\n  _proto3.scrollIntoIfNotVisible_ = function scrollIntoIfNotVisible_(video, optPos) {\n    if (optPos === void 0) {\n      optPos = null;\n    }\n\n    var element = video.element;\n    var viewport = this.getViewport_();\n    return this.onceOrientationChanges_().then(function () {\n      var _element$getIntersect = element.getIntersectionChangeEntry(),\n          boundingClientRect = _element$getIntersect.boundingClientRect;\n\n      var top = boundingClientRect.top,\n          bottom = boundingClientRect.bottom;\n      var vh = viewport.getSize().height;\n      var fullyVisible = top >= 0 && bottom <= vh;\n\n      if (fullyVisible) {\n        return Promise.resolve();\n      }\n\n      var pos = optPos ? (0, _log.dev)().assertString(optPos) : bottom > vh ? 'bottom' : 'top';\n      return viewport.animateScrollIntoView(element, pos);\n    });\n  }\n  /**\n   * @private\n   * @return {*} TODO(#23582): Specify return type\n   */\n  ;\n\n  _proto3.getViewport_ = function getViewport_() {\n    return _services.Services.viewportForDoc(this.ampdoc_);\n  }\n  /**\n   * @private\n   * @return {!Promise}\n   */\n  ;\n\n  _proto3.onceOrientationChanges_ = function onceOrientationChanges_() {\n    var magicNumber = 330;\n    return _services.Services.timerFor(this.ampdoc_.win).promise(magicNumber);\n  }\n  /**\n   * @private\n   * @return {*} TODO(#23582): Specify return type\n   */\n  ;\n\n  _proto3.selectBestCenteredInPortrait_ = function selectBestCenteredInPortrait_() {\n    if (this.isInLandscape()) {\n      return this.currentlyCentered_;\n    }\n\n    this.currentlyCentered_ = null;\n    var selected = this.entries_.filter(this.boundIncludeOnlyPlaying_).sort(this.boundCompareEntries_)[0];\n\n    if (selected) {\n      var _selected$element$get = selected.element.getIntersectionChangeEntry(),\n          intersectionRatio = _selected$element$get.intersectionRatio;\n\n      if (intersectionRatio >= _videoInterface.MIN_VISIBILITY_RATIO_FOR_AUTOPLAY) {\n        this.currentlyCentered_ = selected;\n      }\n    }\n\n    return this.currentlyCentered_;\n  }\n  /**\n   * Compares two videos in order to sort them by \"best centered\".\n   * @param {!../video-interface.VideoOrBaseElementDef} a\n   * @param {!../video-interface.VideoOrBaseElementDef} b\n   * @return {number}\n   */\n  ;\n\n  _proto3.compareEntries_ = function compareEntries_(a, b) {\n    var _a$element$getInterse = a.element.getIntersectionChangeEntry(),\n        ratioA = _a$element$getInterse.intersectionRatio,\n        rectA = _a$element$getInterse.boundingClientRect;\n\n    var _b$element$getInterse = b.element.getIntersectionChangeEntry(),\n        ratioB = _b$element$getInterse.intersectionRatio,\n        rectB = _b$element$getInterse.boundingClientRect; // Prioritize by how visible they are, with a tolerance of 10%\n\n\n    var ratioTolerance = 0.1;\n    var ratioDelta = ratioA - ratioB;\n\n    if (Math.abs(ratioDelta) > ratioTolerance) {\n      return ratioDelta;\n    } // Prioritize by distance from center.\n\n\n    var viewport = _services.Services.viewportForDoc(this.ampdoc_);\n\n    var centerA = centerDist(viewport, rectA);\n    var centerB = centerDist(viewport, rectB);\n\n    if (centerA < centerB || centerA > centerB) {\n      return centerA - centerB;\n    } // Everything else failing, choose the highest element.\n\n\n    return rectA.top - rectB.top;\n  }\n  /**\n   * @param {!../video-interface.VideoOrBaseElementDef} video\n   * @return {!../video-interface.PlayingStateDef}\n   * @private\n   */\n  ;\n\n  _proto3.getPlayingState_ = function getPlayingState_(video) {\n    return this.manager_.getPlayingState(\n    /** @type {!../video-interface.VideoInterface} */\n    video);\n  };\n\n  return AutoFullscreenManager;\n}();\n/**\n * @param {!./viewport/viewport-interface.ViewportInterface} viewport\n * @param {{top: number, height: number}} rect\n * @return {number}\n */\n\n\nexports.AutoFullscreenManager = AutoFullscreenManager;\n\nfunction centerDist(viewport, rect) {\n  var centerY = rect.top + rect.height / 2;\n  var centerViewport = viewport.getSize().height / 2;\n  return Math.abs(centerY - centerViewport);\n}\n/**\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nfunction isLandscape(win) {\n  if (win.screen && 'orientation' in win.screen) {\n    return (0, _string.startsWith)(win.screen.orientation.type, 'landscape');\n  }\n\n  return Math.abs(win.orientation) == 90;\n}\n/** @visibleForTesting */\n\n\nvar PERCENTAGE_INTERVAL = 5;\n/** @private */\n\nexports.PERCENTAGE_INTERVAL = PERCENTAGE_INTERVAL;\nvar PERCENTAGE_FREQUENCY_WHEN_PAUSED_MS = 500;\n/** @private */\n\nvar PERCENTAGE_FREQUENCY_MIN_MS = 250;\n/** @private */\n\nvar PERCENTAGE_FREQUENCY_MAX_MS = 4000;\n/**\n * Calculates the \"ideal\" analytics check frequency from playback start, e.g.\n * the amount of ms after each PERCENTAGE_INTERVAL.\n * @param {number} durationSeconds\n * @return {number}\n */\n\nfunction calculateIdealPercentageFrequencyMs(durationSeconds) {\n  return durationSeconds * 10 * PERCENTAGE_INTERVAL;\n}\n/**\n * Calculates the \"actual\" analytics check frequency by calculating the ideal\n * frequency and clamping it between MIN and MAX.\n * @param {number} durationSeconds\n * @return {number}\n */\n\n\nfunction calculateActualPercentageFrequencyMs(durationSeconds) {\n  return (0, _math.clamp)(calculateIdealPercentageFrequencyMs(durationSeconds), PERCENTAGE_FREQUENCY_MIN_MS, PERCENTAGE_FREQUENCY_MAX_MS);\n}\n/** @visibleForTesting */\n\n\nvar AnalyticsPercentageTracker =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Window} win\n   * @param {!VideoEntry} entry\n   */\n  function AnalyticsPercentageTracker(win, entry) {\n    // This is destructured in `calculate_()`, but the linter thinks it's unused\n\n    /** @private @const {!./timer-impl.Timer} */\n    this.timer_ = _services.Services.timerFor(win); // eslint-disable-line\n\n    /** @private @const {!VideoEntry} */\n\n    this.entry_ = entry;\n    /** @private {?Array<!UnlistenDef>} */\n\n    this.unlisteners_ = null;\n    /** @private {number} */\n\n    this.last_ = 0;\n    /**\n     * Counter for each trigger `start`. This is to prevent duplicate events if\n     * two consecutive triggers take place, or to prevent events firing once\n     * the tracker is stopped.\n     * @private {number}\n     */\n\n    this.triggerId_ = 0;\n  }\n  /** @public */\n\n\n  var _proto4 = AnalyticsPercentageTracker.prototype;\n\n  _proto4.start = function start() {\n    var _this12 = this;\n\n    var element = this.entry_.video.element;\n    this.stop();\n    this.unlisteners_ = this.unlisteners_ || []; // If the video has already emitted LOADEDMETADATA, the event below\n    // will never fire, so we check if it's already available here.\n\n    if (this.hasDuration_()) {\n      this.calculate_(this.triggerId_);\n    } else {\n      this.unlisteners_.push((0, _eventHelper.listenOnce)(element, _videoInterface.VideoEvents.LOADEDMETADATA, function () {\n        if (_this12.hasDuration_()) {\n          _this12.calculate_(_this12.triggerId_);\n        }\n      }));\n    }\n\n    this.unlisteners_.push((0, _eventHelper.listen)(element, _videoInterface.VideoEvents.ENDED, function () {\n      if (_this12.hasDuration_()) {\n        _this12.maybeTrigger_(\n        /* normalizedPercentage */\n        100);\n      }\n    }));\n  }\n  /** @public */\n  ;\n\n  _proto4.stop = function stop() {\n    if (!this.unlisteners_) {\n      return;\n    }\n\n    while (this.unlisteners_.length > 0) {\n      this.unlisteners_.pop().call();\n    }\n\n    this.triggerId_++;\n  }\n  /**\n   * @return {boolean}\n   * @private\n   */\n  ;\n\n  _proto4.hasDuration_ = function hasDuration_() {\n    var video = this.entry_.video;\n    var duration = video.getDuration(); // Livestreams or videos with no duration information available.\n\n    if (!duration || isNaN(duration) || duration <= 0) {\n      return false;\n    }\n\n    if (calculateIdealPercentageFrequencyMs(duration) < PERCENTAGE_FREQUENCY_MIN_MS) {\n      var bestResultLength = Math.ceil(PERCENTAGE_FREQUENCY_MIN_MS * (100 / PERCENTAGE_INTERVAL) / 1000);\n      this.warnForTesting_('This video is too short for `video-percentage-played`. ' + 'Reports may be innacurate. For best results, use videos over', bestResultLength, 'seconds long.', video.element);\n    }\n\n    return true;\n  }\n  /**\n   * @param  {...*} args\n   * @private\n   */\n  ;\n\n  _proto4.warnForTesting_ = function warnForTesting_() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    (0, _log.user)().warn.apply((0, _log.user)(), [TAG].concat(args));\n  }\n  /**\n   * @param {number=} triggerId\n   * @private\n   */\n  ;\n\n  _proto4.calculate_ = function calculate_(triggerId) {\n    var _this13 = this;\n\n    if (triggerId != this.triggerId_) {\n      return;\n    }\n\n    var entry = this.entry_,\n        timer = this.timer_;\n    var video = entry.video;\n\n    var calculateAgain = function calculateAgain() {\n      return _this13.calculate_(triggerId);\n    };\n\n    if (entry.getPlayingState() == _videoInterface.PlayingStates.PAUSED) {\n      timer.delay(calculateAgain, PERCENTAGE_FREQUENCY_WHEN_PAUSED_MS);\n      return;\n    }\n\n    var duration = video.getDuration();\n    var frequencyMs = calculateActualPercentageFrequencyMs(duration);\n    var percentage = video.getCurrentTime() / duration * 100;\n    var normalizedPercentage = Math.floor(percentage / PERCENTAGE_INTERVAL) * PERCENTAGE_INTERVAL;\n    (0, _log.devAssert)((0, _types.isFiniteNumber)(normalizedPercentage));\n    this.maybeTrigger_(normalizedPercentage);\n    timer.delay(calculateAgain, frequencyMs);\n  }\n  /**\n   * @param {number} normalizedPercentage\n   * @private\n   */\n  ;\n\n  _proto4.maybeTrigger_ = function maybeTrigger_(normalizedPercentage) {\n    if (normalizedPercentage <= 0) {\n      return;\n    }\n\n    if (this.last_ == normalizedPercentage) {\n      return;\n    }\n\n    this.last_ = normalizedPercentage;\n    this.analyticsEventForTesting_(normalizedPercentage);\n  }\n  /**\n   * @param {number} normalizedPercentage\n   * @private\n   */\n  ;\n\n  _proto4.analyticsEventForTesting_ = function analyticsEventForTesting_(normalizedPercentage) {\n    analyticsEvent(this.entry_, _videoInterface.VideoAnalyticsEvents.PERCENTAGE_PLAYED, {\n      'normalizedPercentage': normalizedPercentage.toString()\n    });\n  };\n\n  return AnalyticsPercentageTracker;\n}();\n/**\n * @param {!VideoEntry} entry\n * @param {!VideoAnalyticsEvents} eventType\n * @param {!Object<string, string>=} opt_vars A map of vars and their values.\n * @private\n */\n\n\nexports.AnalyticsPercentageTracker = AnalyticsPercentageTracker;\n\nfunction analyticsEvent(entry, eventType, opt_vars) {\n  var video = entry.video;\n  entry.getAnalyticsDetails().then(function (details) {\n    if (opt_vars) {\n      Object.assign(details, opt_vars);\n    }\n\n    video.element.dispatchCustomEvent(eventType, details);\n  });\n}\n/** @param {!Node|!./ampdoc-impl.AmpDoc} nodeOrDoc */\n\n\nfunction installVideoManagerForDoc(nodeOrDoc) {\n  (0, _service.registerServiceBuilderForDoc)(nodeOrDoc, 'video-manager', VideoManager);\n}\n\n},{\"../action-constants\":3,\"../dom\":7,\"../event-helper\":10,\"../log\":16,\"../mediasession-helper\":17,\"../mode\":19,\"../service\":22,\"../services\":27,\"../string\":29,\"../style\":31,\"../types\":32,\"../utils/function\":36,\"../utils/math\":38,\"../utils/object\":39,\"../utils/video\":41,\"../video-interface\":42,\"./video-session-manager\":24,\"./video/autoplay\":25,\"./video/install-autoplay-styles\":26}],24:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.VideoSessionManager = void 0;\n\nvar _observable = require(\"../observable\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar VideoSessionManager =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of VideoSessionManager.\n   */\n  function VideoSessionManager() {\n    /** @private */\n    this.isSessionActive_ = false;\n    /** @private */\n\n    this.endSessionObservable_ = new _observable.Observable();\n  }\n  /**\n   * Register a listener to be notified when a session has ended\n   * @param {!Function} listener\n   */\n\n\n  var _proto = VideoSessionManager.prototype;\n\n  _proto.onSessionEnd = function onSessionEnd(listener) {\n    this.endSessionObservable_.add(listener);\n  }\n  /**\n   * Begin a session.\n   */\n  ;\n\n  _proto.beginSession = function beginSession() {\n    this.isSessionActive_ = true;\n  }\n  /**\n   * End a session.\n   */\n  ;\n\n  _proto.endSession = function endSession() {\n    if (this.isSessionActive_) {\n      this.endSessionObservable_.fire();\n    }\n\n    this.isSessionActive_ = false;\n  }\n  /**\n   * Get the current session state.\n   * @return {*} TODO(#23582): Specify return type\n   */\n  ;\n\n  _proto.isSessionActive = function isSessionActive() {\n    return this.isSessionActive_;\n  };\n\n  return VideoSessionManager;\n}();\n\nexports.VideoSessionManager = VideoSessionManager;\n\n},{\"../observable\":20}],25:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.renderInteractionOverlay = renderInteractionOverlay;\nexports.renderIcon = renderIcon;\n\nvar _services = require(\"../../services\");\n\nvar _log = require(\"../../log\");\n\nvar _staticTemplate = require(\"../../static-template\");\n\nvar _dom = require(\"../../dom\");\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    <i-amphtml-video-icon class=\\\"amp-video-eq\\\">\\n      <div class=\\\"amp-video-eq-col\\\">\\n        <div class=\\\"amp-video-eq-filler\\\"></div>\\n        <div class=\\\"amp-video-eq-filler\\\"></div>\\n      </div>\\n    </i-amphtml-video-icon>\\n  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    <i-amphtml-video-mask class=\\\"i-amphtml-fill-content\\\" role=\\\"button\\\">\\n    </i-amphtml-video-mask>\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) { if (!raw) { raw = strings.slice(0); } strings.raw = raw; return strings; }\n\n/**\n * @param {!Element} node\n * @return {!Element}\n */\nfunction cloneDeep(node) {\n  return (0, _log.dev)().assertElement(node.cloneNode(\n  /* deep */\n  true));\n}\n/**\n * @param {!Element|!Document} elOrDoc\n * @return {!Element}\n */\n\n\nfunction renderInteractionOverlay(elOrDoc) {\n  var html = (0, _staticTemplate.htmlFor)(elOrDoc);\n  return html(_templateObject());\n}\n/**\n * @param {!Window} win\n * @param {!Element|!Document} elOrDoc\n * @return {!Element}\n */\n\n\nfunction renderIcon(win, elOrDoc) {\n  var html = (0, _staticTemplate.htmlFor)(elOrDoc);\n  var icon = html(_templateObject2()); // Copy equalizer column 4x and annotate filler positions for animation.\n\n  var firstCol = (0, _log.dev)().assertElement(icon.firstElementChild);\n\n  for (var i = 0; i < 4; i++) {\n    var col = cloneDeep(firstCol);\n    var fillers = col.children;\n\n    for (var j = 0; j < fillers.length; j++) {\n      var filler = fillers[j];\n      filler.classList.add(\"amp-video-eq-\" + (i + 1) + \"-\" + (j + 1));\n    }\n\n    icon.appendChild(col);\n  } // Remove seed column.\n\n\n  (0, _dom.removeElement)(firstCol);\n\n  if (_services.Services.platformFor(win).isIos()) {\n    // iOS is unable to pause hardware accelerated animations.\n    icon.setAttribute('unpausable', '');\n  }\n\n  return icon;\n}\n\n},{\"../../dom\":7,\"../../log\":16,\"../../services\":27,\"../../static-template\":28}],26:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.installAutoplayStylesForDoc = installAutoplayStylesForDoc;\n\nvar _styleInstaller = require(\"../../style-installer\");\n\nvar _videoAutoplay = require(\"../../../build/video-autoplay.css\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Source for this constant is css/video-autoplay.css\n\n/**\n * @param  {!../ampdoc-impl.AmpDoc} ampdoc\n */\nfunction installAutoplayStylesForDoc(ampdoc) {\n  (0, _styleInstaller.installStylesForDoc)(ampdoc, _videoAutoplay.cssText,\n  /* callback */\n  null,\n  /* opt_isRuntimeCss */\n  false,\n  /* opt_ext */\n  'amp-video-autoplay');\n}\n\n},{\"../../../build/video-autoplay.css\":1,\"../../style-installer\":30}],27:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.Services = exports.SubscriptionService = void 0;\n\nvar _service = require(\"./service\");\n\nvar _elementService = require(\"./element-service\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nvar SubscriptionService;\nexports.SubscriptionService = SubscriptionService;\n\nvar Services =\n/*#__PURE__*/\nfunction () {\n  function Services() {}\n\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  Services.accessServiceForDoc = function accessServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'access', 'amp-access')\n    );\n  }\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  ;\n\n  Services.accessServiceForDocOrNull = function accessServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'access', 'amp-access')\n    );\n  }\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  ;\n\n  Services.subscriptionsServiceForDoc = function subscriptionsServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!SubscriptionService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  ;\n\n  Services.subscriptionsServiceForDocOrNull = function subscriptionsServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?SubscriptionService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  ;\n\n  Services.actionServiceForDoc = function actionServiceForDoc(element) {\n    return (\n      /** @type {!./service/action-impl.ActionService} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'action')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  ;\n\n  Services.standardActionsForDoc = function standardActionsForDoc(element) {\n    return (\n      /** @type {!./service/standard-actions-impl.StandardActions} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'standard-actions')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  ;\n\n  Services.activityForDoc = function activityForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'activity', 'amp-analytics')\n    );\n  }\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  ;\n\n  Services.ampdocServiceFor = function ampdocServiceFor(window) {\n    return (\n      /** @type {!./service/ampdoc-impl.AmpDocService} */\n      (0, _service.getService)(window, 'ampdoc')\n    );\n  }\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  ;\n\n  Services.ampdoc = function ampdoc(nodeOrAmpDoc) {\n    return (0, _service.getAmpdoc)(nodeOrAmpDoc);\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  ;\n\n  Services.analyticsForDoc = function analyticsForDoc(element, loadAnalytics) {\n    if (loadAnalytics === void 0) {\n      loadAnalytics = false;\n    }\n\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      var ampdoc = (0, _service.getAmpdoc)(element);\n      Services.extensionsFor(ampdoc.win).\n      /*OK*/\n      installExtensionForDoc(ampdoc, 'amp-analytics');\n    }\n\n    return (\n      /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'amp-analytics-instrumentation', 'amp-analytics')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  ;\n\n  Services.analyticsForDocOrNull = function analyticsForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'amp-analytics-instrumentation', 'amp-analytics')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  ;\n\n  Services.batchedXhrFor = function batchedXhrFor(window) {\n    return (\n      /** @type {!./service/batched-xhr-impl.BatchedXhr} */\n      (0, _service.getService)(window, 'batched-xhr')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  ;\n\n  Services.bindForDocOrNull = function bindForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */\n      (0, _elementService.getElementServiceIfAvailableForDocInEmbedScope)(element, 'bind', 'amp-bind')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  ;\n\n  Services.cidForDoc = function cidForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/cid-impl.CidDef>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'cid')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  ;\n\n  Services.navigationForDoc = function navigationForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/navigation.Navigation} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'navigation')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  ;\n\n  Services.loaderServiceForDoc = function loaderServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'loader', 'amp-loader')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  ;\n\n  Services.standaloneServiceForDoc = function standaloneServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'standalone', 'amp-standalone')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  ;\n\n  Services.cryptoFor = function cryptoFor(window) {\n    return (\n      /** @type {!./service/crypto-impl.Crypto} */\n      (0, _service.getService)(window, 'crypto')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  ;\n\n  Services.documentInfoForDoc = function documentInfoForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/document-info-impl.DocInfo} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'documentInfo').get()\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  ;\n\n  Services.extensionsFor = function extensionsFor(window) {\n    return (\n      /** @type {!./service/extensions-impl.Extensions} */\n      (0, _service.getService)(window, 'extensions')\n    );\n  }\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  ;\n\n  Services.formSubmitForDoc = function formSubmitForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  ;\n\n  Services.hiddenObserverForDoc = function hiddenObserverForDoc(element) {\n    return (\n      /** @type {!./service/hidden-observer-impl.HiddenObserver} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'hidden-observer')\n    );\n  }\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  ;\n\n  Services.historyForDoc = function historyForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/history-impl.History} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'history')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  ;\n\n  Services.inputFor = function inputFor(win) {\n    return (0, _service.getService)(win, 'input');\n  }\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  ;\n\n  Services.inputmaskServiceForDocOrNull = function inputmaskServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  ;\n\n  Services.ownersForDoc = function ownersForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/owners-interface.OwnersInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'owners')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  ;\n\n  Services.performanceFor = function performanceFor(window) {\n    return (\n      /** @type {!./service/performance-impl.Performance}*/\n      (0, _service.getService)(window, 'performance')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  ;\n\n  Services.performanceForOrNull = function performanceForOrNull(window) {\n    return (\n      /** @type {!./service/performance-impl.Performance}*/\n      (0, _service.getExistingServiceOrNull)(window, 'performance')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  ;\n\n  Services.platformFor = function platformFor(window) {\n    return (\n      /** @type {!./service/platform-impl.Platform} */\n      (0, _service.getService)(window, 'platform')\n    );\n  }\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  ;\n\n  Services.positionObserverForDoc = function positionObserverForDoc(element) {\n    return (\n      /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */\n      (0, _service.getServiceForDoc)(element, 'position-observer')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  ;\n\n  Services.resourcesForDoc = function resourcesForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/resources-interface.ResourcesInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'resources')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  ;\n\n  Services.resourcesPromiseForDoc = function resourcesPromiseForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'resources')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?{incomingFragment: string, outgoingFragment: string}>}\n   */\n  ;\n\n  Services.shareTrackingForOrNull = function shareTrackingForOrNull(win) {\n    return (\n      /** @type {!Promise<?{incomingFragment: string, outgoingFragment: string}>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'share-tracking', 'amp-share-tracking', true)\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>}\n   */\n  ;\n\n  Services.storyVariableServiceForOrNull = function storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-variable', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  ;\n\n  Services.storyVariableService = function storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-variable')\n    );\n  }\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>}\n   */\n  ;\n\n  Services.storyStoreServiceForOrNull = function storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-store', 'amp-story')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  ;\n\n  Services.storyStoreService = function storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-store')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  ;\n\n  Services.storyMediaQueryService = function storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-media-query')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  ;\n\n  Services.storyRequestService = function storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-request')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  ;\n\n  Services.mediaPerformanceMetricsService = function mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (0, _service.getExistingServiceOrNull)(win, 'media-performance-metrics')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  ;\n\n  Services.localizationServiceForOrNull = function localizationServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'localization', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  ;\n\n  Services.localizationService = function localizationService(win) {\n    return (0, _service.getService)(win, 'localization');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  ;\n\n  Services.storyAnalyticsServiceForOrNull = function storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-analytics', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  ;\n\n  Services.storyAnalyticsService = function storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-analytics')\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService}\n   */\n  ;\n\n  Services.storyStoreServiceV01 = function storyStoreServiceV01(win) {\n    return (0, _service.getService)(win, 'story-store');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-request-service.AmpStoryRequestService}\n   */\n  ;\n\n  Services.storyRequestServiceV01 = function storyRequestServiceV01(win) {\n    return (0, _service.getService)(win, 'story-request-v01');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  ;\n\n  Services.localizationServiceForOrNullV01 = function localizationServiceForOrNullV01(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'localization-v01', 'amp-story', true)\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  ;\n\n  Services.localizationServiceV01 = function localizationServiceV01(win) {\n    return (0, _service.getService)(win, 'localization-v01');\n  }\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>}\n   */\n  ;\n\n  Services.viewerIntegrationVariableServiceForOrNull = function viewerIntegrationVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'viewer-integration-variable', 'amp-viewer-integration', true)\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  ;\n\n  Services.webAnimationServiceFor = function webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'web-animation', 'amp-animation')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  ;\n\n  Services.storageForDoc = function storageForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/storage-impl.Storage>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'storage')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/template-impl.Templates}\n   */\n  ;\n\n  Services.templatesFor = function templatesFor(window) {\n    return (\n      /** @type {!./service/template-impl.Templates} */\n      (0, _service.getService)(window, 'templates')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  ;\n\n  Services.timerFor = function timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return (\n      /** @type {!./service/timer-impl.Timer} */\n      (0, _service.getService)(window, 'timer')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  ;\n\n  Services.urlReplacementsForDoc = function urlReplacementsForDoc(element) {\n    return (\n      /** @type {!./service/url-replacements-impl.UrlReplacements} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'url-replace')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  ;\n\n  Services.userNotificationManagerForDoc = function userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'userNotificationManager', 'amp-user-notification')\n    );\n  }\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  ;\n\n  Services.consentPolicyServiceForDocOrNull = function consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'consentPolicyManager', 'amp-consent')\n    );\n  }\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  ;\n\n  Services.geoForDocOrNull = function geoForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'geo', 'amp-geo', true)\n    );\n  }\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>}\n   */\n  ;\n\n  Services.userLocationForDocOrNull = function userLocationForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'user-location', 'amp-user-location', true)\n    );\n  }\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  ;\n\n  Services.urlForDoc = function urlForDoc(element) {\n    return (\n      /** @type {!./service/url-impl.Url} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'url')\n    );\n  }\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  ;\n\n  Services.variantsForDocOrNull = function variantsForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'variant', 'amp-experiment', true)\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  ;\n\n  Services.videoManagerForDoc = function videoManagerForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/video-manager-impl.VideoManager} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'video-manager')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>}\n   */\n  ;\n\n  Services.viewerAssistanceForDocOrNull = function viewerAssistanceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'amp-viewer-assistance', 'amp-viewer-assistance')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  ;\n\n  Services.viewerForDoc = function viewerForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/viewer-interface.ViewerInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'viewer')\n    );\n  }\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  ;\n\n  Services.viewerPromiseForDoc = function viewerPromiseForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'viewer')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  ;\n\n  Services.vsyncFor = function vsyncFor(window) {\n    return (\n      /** @type {!./service/vsync-impl.Vsync} */\n      (0, _service.getService)(window, 'vsync')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  ;\n\n  Services.viewportForDoc = function viewportForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/viewport/viewport-interface.ViewportInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'viewport')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  ;\n\n  Services.xhrFor = function xhrFor(window) {\n    return (\n      /** @type {!./service/xhr-impl.Xhr} */\n      (0, _service.getService)(window, 'xhr')\n    );\n  };\n\n  return Services;\n}();\n\nexports.Services = Services;\n\n},{\"./element-service\":8,\"./service\":22}],28:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.htmlFor = htmlFor;\nexports.svgFor = svgFor;\nexports.htmlRefs = htmlRefs;\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object.js\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar htmlContainer;\nvar svgContainer;\n/**\n * Creates the html helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\n\nfunction htmlFor(nodeOrDoc) {\n  var doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n\n  if (!htmlContainer || htmlContainer.ownerDocument !== doc) {\n    htmlContainer = doc.createElement('div');\n  }\n\n  return html;\n}\n/**\n * Creates the svg helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\n\n\nfunction svgFor(nodeOrDoc) {\n  var doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n\n  if (!svgContainer || svgContainer.ownerDocument !== svgContainer) {\n    svgContainer = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  }\n\n  return svg;\n}\n/**\n * A tagged template literal helper to generate static SVG trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const circle = svg`<circle cx=\"60\" cy=\"60\" r=\"22\"></circle>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\n\n\nfunction svg(strings) {\n  return createNode(svgContainer, strings);\n}\n/**\n * A tagged template literal helper to generate static DOM trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const div = html`<div><span></span></div>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\n\n\nfunction html(strings) {\n  return createNode(htmlContainer, strings);\n}\n/**\n * Helper used by html and svg string literal functions.\n * @param {!Element} container\n * @param {!Array<string>} strings\n * @return {!Element}\n */\n\n\nfunction createNode(container, strings) {\n  (0, _log.devAssert)(strings.length === 1, 'Improper html template tag usage.');\n  container.\n  /*OK*/\n  innerHTML = strings[0];\n  var el = container.firstElementChild;\n  (0, _log.devAssert)(el, 'No elements in template');\n  (0, _log.devAssert)(!el.nextElementSibling, 'Too many root elements in template'); // Clear to free memory.\n\n  container.removeChild(el);\n  return el;\n}\n/**\n * Queries an element for all elements with a \"ref\" attribute, removing\n * the attribute afterwards.\n * Returns a named map of all ref elements.\n *\n * @param {!Element} root\n * @return {!Object<string, !Element>}\n */\n\n\nfunction htmlRefs(root) {\n  var elements = root.querySelectorAll('[ref]');\n  var refs = (0, _object.map)();\n\n  for (var i = 0; i < elements.length; i++) {\n    var element = elements[i];\n    var ref = (0, _log.devAssert)(element.getAttribute('ref'), 'Empty ref attr');\n    element.removeAttribute('ref');\n    (0, _log.devAssert)(refs[ref] === undefined, 'Duplicate ref');\n    refs[ref] = element;\n  }\n\n  return refs;\n}\n\n},{\"./log\":16,\"./utils/object.js\":39}],29:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.dashToCamelCase = dashToCamelCase;\nexports.camelCaseToDash = camelCaseToDash;\nexports.dashToUnderline = dashToUnderline;\nexports.endsWith = endsWith;\nexports.startsWith = startsWith;\nexports.includes = includes;\nexports.expandTemplate = expandTemplate;\nexports.stringHash32 = stringHash32;\nexports.trimEnd = trimEnd;\nexports.trimStart = trimStart;\nexports.padStart = padStart;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n/**\n * @param {string} match\n * @return {string}\n */\n\n\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\n\n\nfunction dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\n\n\nfunction camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\n\n\nfunction dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\n\n\nfunction endsWith(string, suffix) {\n  var index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n/**\n * Polyfill for String.prototype.startsWith.\n * @param {string} string\n * @param {string} prefix\n * @return {boolean}\n */\n\n\nfunction startsWith(string, prefix) {\n  if (prefix.length > string.length) {\n    return false;\n  }\n\n  return string.lastIndexOf(prefix, 0) == 0;\n}\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\n\n\nfunction includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + substring.length > string.length) {\n    return false;\n  }\n\n  return string.indexOf(substring, start) !== -1;\n}\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\n\n\nfunction expandTemplate(template, getter, opt_maxIterations) {\n  var maxIterations = opt_maxIterations || 1;\n\n  var _loop = function _loop(i) {\n    var matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, function (_a, b) {\n      matches++;\n      return getter(b);\n    });\n\n    if (!matches) {\n      return \"break\";\n    }\n  };\n\n  for (var i = 0; i < maxIterations; i++) {\n    var _ret = _loop(i);\n\n    if (_ret === \"break\") break;\n  }\n\n  return template;\n}\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\n\n\nfunction stringHash32(str) {\n  var length = str.length;\n  var hash = 5381;\n\n  for (var i = 0; i < length; i++) {\n    hash = hash * 33 ^ str.charCodeAt(i);\n  } // Convert from 32-bit signed to unsigned.\n\n\n  return String(hash >>> 0);\n}\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\n\n\nfunction trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\n\n\nfunction trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {*} TODO(#23582): Specify return type\n */\n\n\nfunction padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n\n  targetLength = targetLength - s.length;\n  var padding = padString;\n\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n\n  return padding.slice(0, targetLength) + s;\n}\n\n},{}],30:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.installStylesForDoc = installStylesForDoc;\nexports.installStylesLegacy = installStylesLegacy;\nexports.installCssTransformer = installCssTransformer;\nexports.setBodyMadeVisibleForTesting = setBodyMadeVisibleForTesting;\nexports.makeBodyVisible = makeBodyVisible;\nexports.makeBodyVisibleRecovery = makeBodyVisibleRecovery;\nexports.bodyAlwaysVisible = bodyAlwaysVisible;\n\nvar _commonSignals = require(\"./common-signals\");\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\nvar _service = require(\"./service\");\n\nvar _dom = require(\"./dom\");\n\nvar _object = require(\"./utils/object\");\n\nvar _style = require(\"./style\");\n\nvar _renderDelayingServices = require(\"./render-delaying-services\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TRANSFORMER_PROP = '__AMP_CSS_TR';\nvar STYLE_MAP_PROP = '__AMP_CSS_SM';\n/**\n * Adds the given css text to the given ampdoc.\n *\n * The style tags will be at the beginning of the head before all author\n * styles. One element can be the main runtime CSS. This is guaranteed\n * to always be the first stylesheet in the doc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc The ampdoc that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are available.\n *     Not using a promise, because this is synchronous when possible.\n *     for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\n\nfunction installStylesForDoc(ampdoc, cssText, cb, opt_isRuntimeCss, opt_ext) {\n  var cssRoot = ampdoc.getHeadNode();\n  var style = insertStyleElement(cssRoot, maybeTransform(cssRoot, cssText), opt_isRuntimeCss || false, opt_ext || null);\n\n  if (cb) {\n    var rootNode = ampdoc.getRootNode(); // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n\n    if (styleLoaded(rootNode, style)) {\n      cb(style);\n      return style;\n    } // Poll until styles are available.\n\n\n    var interval = setInterval(function () {\n      if (styleLoaded(rootNode, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n\n  return style;\n}\n/**\n * Adds the given css text to the given document.\n * TODO(dvoytenko, #22733): Remove this method once FIE/ampdoc migration is\n * done.\n *\n * @param {!Document} doc The document that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are\n *     available. Not using a promise, because this is synchronous when\n *     possible. for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\n\n\nfunction installStylesLegacy(doc, cssText, cb, opt_isRuntimeCss, opt_ext) {\n  var style = insertStyleElement((0, _log.dev)().assertElement(doc.head), cssText, opt_isRuntimeCss || false, opt_ext || null);\n\n  if (cb) {\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(doc, style)) {\n      cb(style);\n      return style;\n    } // Poll until styles are available.\n\n\n    var interval = setInterval(function () {\n      if (styleLoaded(doc, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n\n  return style;\n}\n/**\n * Creates the properly configured style element.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @param {boolean} isRuntimeCss\n * @param {?string} ext\n * @return {!Element}\n */\n\n\nfunction insertStyleElement(cssRoot, cssText, isRuntimeCss, ext) {\n  var styleMap = cssRoot[STYLE_MAP_PROP];\n\n  if (!styleMap) {\n    styleMap = cssRoot[STYLE_MAP_PROP] = (0, _object.map)();\n  }\n\n  var isExtCss = !isRuntimeCss && ext && ext != 'amp-custom' && ext != 'amp-keyframes';\n  var key = isRuntimeCss ? 'amp-runtime' : isExtCss ? \"amp-extension=\" + ext : null; // Check if it has already been created or discovered.\n\n  if (key) {\n    var existing = getExistingStyleElement(cssRoot, styleMap, key);\n\n    if (existing) {\n      if (existing.textContent !== cssText) {\n        existing.textContent = cssText;\n      }\n\n      return existing;\n    }\n  } // Create the new style element and append to cssRoot.\n\n\n  var doc = cssRoot.ownerDocument || cssRoot;\n  var style = doc.createElement('style');\n  style.\n  /*OK*/\n  textContent = cssText;\n  var afterElement = null; // Make sure that we place style tags after the main runtime CSS. Otherwise\n  // the order is random.\n\n  if (isRuntimeCss) {\n    style.setAttribute('amp-runtime', '');\n  } else if (isExtCss) {\n    style.setAttribute('amp-extension', ext || '');\n    afterElement = (0, _log.dev)().assertElement(getExistingStyleElement(cssRoot, styleMap, 'amp-runtime'));\n  } else {\n    if (ext) {\n      style.setAttribute(ext, '');\n    }\n\n    afterElement = cssRoot.lastChild;\n  }\n\n  (0, _dom.insertAfterOrAtStart)(cssRoot, style, afterElement);\n\n  if (key) {\n    styleMap[key] = style;\n  }\n\n  return style;\n}\n/**\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {!Object<string, !Element>} styleMap\n * @param {string} key\n * @return {?Element}\n */\n\n\nfunction getExistingStyleElement(cssRoot, styleMap, key) {\n  // Already cached.\n  if (styleMap[key]) {\n    return styleMap[key];\n  } // Check if the style has already been added by the server layout.\n\n\n  var existing = cssRoot.\n  /*OK*/\n  querySelector(\"style[\" + key + \"]\");\n\n  if (existing) {\n    styleMap[key] = existing;\n    return existing;\n  } // Nothing found.\n\n\n  return null;\n}\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {function(string):string} transformer\n */\n\n\nfunction installCssTransformer(cssRoot, transformer) {\n  cssRoot[TRANSFORMER_PROP] = transformer;\n}\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @return {string}\n */\n\n\nfunction maybeTransform(cssRoot, cssText) {\n  var transformer = cssRoot[TRANSFORMER_PROP];\n  return transformer ? transformer(cssText) : cssText;\n}\n/** @private {boolean} */\n\n\nvar bodyMadeVisible = false;\n/**\n * @param {boolean} value\n * @visibleForTesting\n */\n\nfunction setBodyMadeVisibleForTesting(value) {\n  bodyMadeVisible = value;\n}\n/**\n * Sets the document's body opacity to 1.\n * If the body is not yet available (because our script was loaded\n * synchronously), polls until it is.\n * @param {!Document} doc The document who's body we should make visible.\n */\n\n\nfunction makeBodyVisible(doc) {\n  (0, _log.devAssert)(doc.defaultView, 'Passed in document must have a defaultView');\n  var win =\n  /** @type {!Window} */\n  doc.defaultView;\n  (0, _dom.waitForBodyOpenPromise)(doc).then(function () {\n    return (0, _renderDelayingServices.waitForServices)(win);\n  }).catch(function (reason) {\n    (0, _log.rethrowAsync)(reason);\n    return [];\n  }).then(function (services) {\n    bodyMadeVisible = true;\n    setBodyVisibleStyles(doc);\n    var ampdoc = (0, _service.getAmpdoc)(doc);\n    ampdoc.signals().signal(_commonSignals.CommonSignals.RENDER_START);\n\n    if (services.length > 0) {\n      var resources = _services.Services.resourcesForDoc(doc.documentElement);\n\n      resources.\n      /*OK*/\n      schedulePass(1,\n      /* relayoutAll */\n      true);\n    }\n\n    try {\n      var perf = _services.Services.performanceFor(win);\n\n      perf.tick('mbv');\n      perf.flush();\n    } catch (e) {}\n  });\n}\n/**\n * Set the document's body opacity to 1. Called in error cases.\n * @param {!Document} doc The document who's body we should make visible.\n */\n\n\nfunction makeBodyVisibleRecovery(doc) {\n  (0, _log.devAssert)(doc.defaultView, 'Passed in document must have a defaultView');\n\n  if (bodyMadeVisible) {\n    return;\n  }\n\n  bodyMadeVisible = true;\n  setBodyVisibleStyles(doc);\n}\n/**\n * Make sure that body exists, and make it visible.\n * @param {!Document} doc\n */\n\n\nfunction setBodyVisibleStyles(doc) {\n  (0, _style.setStyles)((0, _log.dev)().assertElement(doc.body), {\n    opacity: 1,\n    visibility: 'visible',\n    'animation': 'none'\n  });\n}\n/**\n * Indicates that the body is always visible. For instance, in case of PWA.\n * This check is on a module level variable, and could be problematic if you are\n * relying on this function across different binaries.\n * @param {!Window} unusedWin\n */\n\n\nfunction bodyAlwaysVisible(unusedWin) {\n  bodyMadeVisible = true;\n}\n/**\n * Checks whether a style element was registered in the DOM.\n * @param {!Document|!ShadowRoot} doc\n * @param {!Element} style\n * @return {boolean}\n */\n\n\nfunction styleLoaded(doc, style) {\n  var sheets = doc.styleSheets;\n\n  for (var i = 0; i < sheets.length; i++) {\n    var sheet = sheets[i];\n\n    if (sheet.ownerNode == style) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n},{\"./common-signals\":4,\"./dom\":7,\"./log\":16,\"./render-delaying-services\":21,\"./service\":22,\"./services\":27,\"./style\":31,\"./utils/object\":39}],31:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.camelCaseToTitleCase = camelCaseToTitleCase;\nexports.getVendorJsPropertyName = getVendorJsPropertyName;\nexports.setImportantStyles = setImportantStyles;\nexports.setStyle = setStyle;\nexports.getStyle = getStyle;\nexports.setStyles = setStyles;\nexports.assertNotDisplay = assertNotDisplay;\nexports.assertDoesNotContainDisplay = assertDoesNotContainDisplay;\nexports.setInitialDisplay = setInitialDisplay;\nexports.toggle = toggle;\nexports.px = px;\nexports.deg = deg;\nexports.translateX = translateX;\nexports.translate = translate;\nexports.scale = scale;\nexports.rotate = rotate;\nexports.removeAlphaFromColor = removeAlphaFromColor;\nexports.computedStyle = computedStyle;\nexports.resetStyles = resetStyles;\nexports.propagateObjectFitStyles = propagateObjectFitStyles;\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object.js\");\n\nvar _string = require(\"./string\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\n\n/** @type {Object<string, string>} */\nvar propertyNameCache;\n/** @const {!Array<string>} */\n\nvar vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n/**\n * @export\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\n\nfunction camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\n\n\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (var i = 0; i < vendorPrefixes.length; i++) {\n    var propertyName = vendorPrefixes[i] + titleCase;\n\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n\n  return '';\n}\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @export\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\n\n\nfunction getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if ((0, _string.startsWith)(camelCase, '--')) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n\n  if (!propertyNameCache) {\n    propertyNameCache = (0, _object.map)();\n  }\n\n  var propertyName = propertyNameCache[camelCase];\n\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n\n    if (style[camelCase] === undefined) {\n      var titleCase = camelCaseToTitleCase(camelCase);\n      var prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n\n  return propertyName;\n}\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\n\n\nfunction setImportantStyles(element, styles) {\n  var style = element.style;\n\n  for (var k in styles) {\n    style.setProperty(getVendorJsPropertyName(style, k), styles[k].toString(), 'important');\n  }\n}\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\n\n\nfunction setStyle(element, property, value, opt_units, opt_bypassCache) {\n  var propertyName = getVendorJsPropertyName(element.style, property, opt_bypassCache);\n\n  if (propertyName) {\n    element.style[propertyName] =\n    /** @type {string} */\n    opt_units ? value + opt_units : value;\n  }\n}\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\n\n\nfunction getStyle(element, property, opt_bypassCache) {\n  var propertyName = getVendorJsPropertyName(element.style, property, opt_bypassCache);\n\n  if (!propertyName) {\n    return undefined;\n  }\n\n  return element.style[propertyName];\n}\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\n\n\nfunction setStyles(element, styles) {\n  for (var k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\n\n\nfunction assertNotDisplay(style) {\n  if (style === 'display') {\n    (0, _log.dev)().error('STYLE', '`display` style detected. You must use toggle instead.');\n  }\n\n  return style;\n}\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\n\n\nfunction assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    (0, _log.dev)().error('STYLE', '`display` style detected in styles. You must use toggle instead.');\n  }\n\n  return styles;\n}\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\n\n\nfunction setInitialDisplay(el, value) {\n  var style = el.style;\n  (0, _log.devAssert)(value !== '' && value !== 'none', 'Initial display value must not be \"none\". Use toggle instead.');\n  (0, _log.devAssert)(!style['display'], 'setInitialDisplay MUST NOT be used for ' + 'resetting the display style. If you are looking for display:none ' + 'toggling, use toggle instead.');\n  style['display'] = value;\n}\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\n\n\nfunction toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\n\n\nfunction px(value) {\n  return value + \"px\";\n}\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\n\n\nfunction deg(value) {\n  return value + \"deg\";\n}\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction translateX(value) {\n  if (typeof value == 'string') {\n    return \"translateX(\" + value + \")\";\n  }\n\n  return \"translateX(\" + px(value) + \")\";\n}\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\n\n\nfunction translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n\n  if (opt_y === undefined) {\n    return \"translate(\" + x + \")\";\n  }\n\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n\n  return \"translate(\" + x + \", \" + opt_y + \")\";\n}\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction scale(value) {\n  return \"scale(\" + value + \")\";\n}\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n\n  return \"rotate(\" + value + \")\";\n}\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\n\n\nfunction removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(/\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g, '($1,$2,$3, 1)');\n}\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!Object<string, string>}\n */\n\n\nfunction computedStyle(win, el) {\n  var style =\n  /** @type {?CSSStyleDeclaration} */\n  win.getComputedStyle(el);\n  return (\n    /** @type {!Object<string, string>} */\n    style || (0, _object.map)()\n  );\n}\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\n\n\nfunction resetStyles(element, properties) {\n  for (var i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\n\n\nfunction propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n},{\"./log\":16,\"./string\":29,\"./utils/object.js\":39}],32:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isArray = isArray;\nexports.toArray = toArray;\nexports.isObject = isObject;\nexports.isFiniteNumber = isFiniteNumber;\nexports.isEnumValue = isEnumValue;\nexports.toWin = toWin;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nvar toString_ = Object.prototype.toString;\n/**\n * Returns the ECMA [[Class]] of a value\n * @param {*} value\n * @return {string}\n */\n\nfunction toString(value) {\n  return toString_.call(value);\n}\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\n\n\nfunction toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  return toString(value) === '[object Object]';\n}\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n/**\n * Checks whether `s` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} s\n * @return {boolean}\n * @template T\n */\n\n\nfunction isEnumValue(enumObj, s) {\n  for (var k in enumObj) {\n    if (enumObj[k] === s) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {!Window|null} winOrNull\n * @return {!Window}\n */\n\n\nfunction toWin(winOrNull) {\n  return (\n    /** @type {!Window} */\n    winOrNull\n  );\n}\n\n},{}],33:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.parseQueryString_ = parseQueryString_;\n\nvar _urlTryDecodeUriComponent = require(\"./url-try-decode-uri-component\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar regex = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * DO NOT import the function from this file. Instead, import parseQueryString\n * from `src/url.js`.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\n\nfunction parseQueryString_(queryString) {\n  var params =\n  /** @type {!JsonObject} */\n  Object.create(null);\n\n  if (!queryString) {\n    return params;\n  }\n\n  var match;\n\n  while (match = regex.exec(queryString)) {\n    var name = (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(match[1], match[1]);\n    var value = match[2] ? (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(match[2], match[2]) : '';\n    params[name] = value;\n  }\n\n  return params;\n}\n\n},{\"./url-try-decode-uri-component\":34}],34:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.tryDecodeUriComponent_ = tryDecodeUriComponent_;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * DO NOT import the function from this file. Instead, import\n * tryDecodeUriComponent from `src/url.js`.\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nfunction tryDecodeUriComponent_(component, fallback) {\n  if (fallback === void 0) {\n    fallback = '';\n  }\n\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n},{}],35:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getWinOrigin = getWinOrigin;\nexports.parseUrlDeprecated = parseUrlDeprecated;\nexports.parseUrlWithA = parseUrlWithA;\nexports.appendEncodedParamStringToUrl = appendEncodedParamStringToUrl;\nexports.addParamToUrl = addParamToUrl;\nexports.addParamsToUrl = addParamsToUrl;\nexports.addMissingParamsToUrl = addMissingParamsToUrl;\nexports.serializeQueryString = serializeQueryString;\nexports.isSecureUrlDeprecated = isSecureUrlDeprecated;\nexports.assertHttpsUrl = assertHttpsUrl;\nexports.assertAbsoluteHttpOrHttpsUrl = assertAbsoluteHttpOrHttpsUrl;\nexports.parseQueryString = parseQueryString;\nexports.removeFragment = removeFragment;\nexports.getFragment = getFragment;\nexports.isProxyOrigin = isProxyOrigin;\nexports.getProxyServingType = getProxyServingType;\nexports.isLocalhostOrigin = isLocalhostOrigin;\nexports.isProtocolValid = isProtocolValid;\nexports.removeAmpJsParamsFromUrl = removeAmpJsParamsFromUrl;\nexports.removeSearch = removeSearch;\nexports.removeParamsFromSearch = removeParamsFromSearch;\nexports.getSourceUrl = getSourceUrl;\nexports.getSourceOrigin = getSourceOrigin;\nexports.resolveRelativeUrl = resolveRelativeUrl;\nexports.resolveRelativeUrlFallback_ = resolveRelativeUrlFallback_;\nexports.getCorsUrl = getCorsUrl;\nexports.checkCorsUrl = checkCorsUrl;\nexports.tryDecodeUriComponent = tryDecodeUriComponent;\nexports.SOURCE_ORIGIN_PARAM = void 0;\n\nvar _lruCache = require(\"./utils/lru-cache\");\n\nvar _object = require(\"./utils/object\");\n\nvar _string = require(\"./string\");\n\nvar _mode = require(\"./mode\");\n\nvar _types = require(\"./types\");\n\nvar _urlParseQueryString = require(\"./url-parse-query-string\");\n\nvar _urlTryDecodeUriComponent = require(\"./url-try-decode-uri-component\");\n\nvar _config = require(\"./config\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @type {!JsonObject}\n */\nvar SERVING_TYPE_PREFIX = (0, _object.dict)({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n  // Actions viewer\n  'action': true\n});\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\n\nvar a;\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\n\nvar cache;\n/** @private @const Matches amp_js_* parameters in query string. */\n\nvar AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n/** @private @const Matches amp_gsa parameters in query string. */\n\nvar AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n/** @private @const Matches amp_r parameters in query string. */\n\nvar AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n/** @private @const Matches amp_kit parameters in query string. */\n\nvar AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n/** @private @const Matches usqp parameters from goog experiment in query string. */\n\nvar GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\nvar INVALID_PROTOCOLS = [\n/*eslint no-script-url: 0*/\n'javascript:',\n/*eslint no-script-url: 0*/\n'data:',\n/*eslint no-script-url: 0*/\n'vbscript:'];\n/** @const {string} */\n\nvar SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\n\nexports.SOURCE_ORIGIN_PARAM = SOURCE_ORIGIN_PARAM;\n\nfunction getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n * @return {!Location}\n */\n\n\nfunction parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a =\n    /** @type {!HTMLAnchorElement} */\n    self.document.createElement('a');\n    cache = self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new _lruCache.LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, opt_nocache ? null : cache);\n}\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n * @return {!Location}\n * @restricted\n */\n\n\nfunction parseUrlWithA(a, url, opt_cache) {\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url; // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  var info =\n  /** @type {!Location} */\n  {\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null // Set below.\n\n  }; // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  } // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n\n\n  if (info.protocol == 'http:' && info.port == 80 || info.protocol == 'https:' && info.port == 443) {\n    info.port = '';\n    info.host = info.hostname;\n  } // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n\n\n  var origin;\n\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n\n  info.origin = origin; // Freeze during testing to avoid accidental mutation.\n\n  var frozen = (0, _mode.getMode)().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\n\n\nfunction appendEncodedParamStringToUrl(url, paramString, opt_addToFront) {\n  if (!paramString) {\n    return url;\n  }\n\n  var mainAndFragment = url.split('#', 2);\n  var mainAndQuery = mainAndFragment[0].split('?', 2);\n  var newUrl = mainAndQuery[0] + (mainAndQuery[1] ? opt_addToFront ? \"?\" + paramString + \"&\" + mainAndQuery[1] : \"?\" + mainAndQuery[1] + \"&\" + paramString : \"?\" + paramString);\n  newUrl += mainAndFragment[1] ? \"#\" + mainAndFragment[1] : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\n\n\nfunction addParamToUrl(url, key, value, opt_addToFront) {\n  var field = encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction addMissingParamsToUrl(url, params) {\n  var location = parseUrlDeprecated(url);\n  var existingParams = parseQueryString(location.search);\n  var paramsToAdd = (0, _object.dict)({});\n  var keys = Object.keys(params);\n\n  for (var i = 0; i < keys.length; i++) {\n    if (!(0, _object.hasOwn)(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n\n  return addParamsToUrl(url, paramsToAdd);\n}\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction serializeQueryString(params) {\n  var s = [];\n\n  for (var k in params) {\n    var v = params[k];\n\n    if (v == null) {\n      continue;\n    } else if ((0, _types.isArray)(v)) {\n      for (var i = 0; i < v.length; i++) {\n        var sv =\n        /** @type {string} */\n        v[i];\n        s.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(sv));\n      }\n    } else {\n      var _sv =\n      /** @type {string} */\n      v;\n      s.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(_sv));\n    }\n  }\n\n  return s.join('&');\n}\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\n\n\nfunction isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return url.protocol == 'https:' || url.hostname == 'localhost' || url.hostname == '127.0.0.1' || (0, _string.endsWith)(url.hostname, '.localhost');\n}\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\n\n\nfunction assertHttpsUrl(urlString, elementContext, sourceName) {\n  if (sourceName === void 0) {\n    sourceName = 'source';\n  }\n\n  (0, _log.userAssert)(urlString != null, '%s %s must be available', elementContext, sourceName); // (erwinm, #4560): type cast necessary until #4560 is fixed.\n\n  var theUrlString =\n  /** @type {string} */\n  urlString;\n  (0, _log.userAssert)(isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString), '%s %s must start with ' + '\"https://\" or \"//\" or be relative and served from ' + 'either https or from localhost. Invalid value: %s', elementContext, sourceName, theUrlString);\n  return theUrlString;\n}\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\n\n\nfunction assertAbsoluteHttpOrHttpsUrl(urlString) {\n  (0, _log.userAssert)(/^https?\\:/i.test(urlString), 'URL must start with \"http://\" or \"https://\". Invalid value: %s', urlString);\n  return parseUrlDeprecated(urlString).href;\n}\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * This function is implemented in a separate file to avoid a circular\n * dependency.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\n\n\nfunction parseQueryString(queryString) {\n  return (0, _urlParseQueryString.parseQueryString_)(queryString);\n}\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeFragment(url) {\n  var index = url.indexOf('#');\n\n  if (index == -1) {\n    return url;\n  }\n\n  return url.substring(0, index);\n}\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction getFragment(url) {\n  var index = url.indexOf('#');\n\n  if (index == -1) {\n    return '';\n  }\n\n  return url.substring(index);\n}\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\n\n\nfunction isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return _config.urls.cdnProxyRegex.test(url.origin);\n}\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\n\n\nfunction getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n\n  var path = url.pathname.split('/', 2);\n  return path[1];\n}\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\n\n\nfunction isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return _config.urls.localhostRegex.test(url.origin);\n}\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\n\n\nfunction isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeAmpJsParamsFromUrl(url) {\n  var parsed = parseUrlDeprecated(url);\n  var search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeSearch(url) {\n  var index = url.indexOf('?');\n\n  if (index == -1) {\n    return url;\n  }\n\n  var fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\n\n\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n\n  var search = urlSearch.replace(AMP_JS_PARAMS_REGEX, '').replace(AMP_GSA_PARAMS_REGEX, '').replace(AMP_R_PARAMS_REGEX, '').replace(AMP_KIT_PARAMS_REGEX, '').replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '').replace(/^[?&]/, ''); // Removes first ? or &.\n\n  return search ? '?' + search : '';\n}\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\n\n\nfunction removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n\n  var paramRegex = new RegExp(\"[?&]\" + paramName + \"=[^&]*\", 'g');\n  var search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\n\n\nfunction getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  } // Not a proxy URL - return the URL itself.\n\n\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  } // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n\n\n  var path = url.pathname.split('/');\n  var prefix = path[1];\n  (0, _log.userAssert)(SERVING_TYPE_PREFIX[prefix], 'Unknown path prefix in url %s', url.href);\n  var domainOrHttpsSignal = path[2];\n  var origin = domainOrHttpsSignal == 's' ? 'https://' + decodeURIComponent(path[3]) : 'http://' + decodeURIComponent(domainOrHttpsSignal); // Sanity test that what we found looks like a domain.\n\n  (0, _log.userAssert)(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return origin + path.join('/') + removeAmpJsParamsFromSearch(url.search) + (url.hash || '');\n}\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\n\n\nfunction getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\n\n\nfunction resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n\n  if (typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private Visible for testing.\n */\n\n\nfunction resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  var relativeUrl = parseUrlDeprecated(relativeUrlString); // Absolute URL.\n\n  if ((0, _string.startsWith)(relativeUrlString.toLowerCase(), relativeUrl.protocol)) {\n    return relativeUrl.href;\n  } // Protocol-relative URL.\n\n\n  if ((0, _string.startsWith)(relativeUrlString, '//')) {\n    return baseUrl.protocol + relativeUrlString;\n  } // Absolute path.\n\n\n  if ((0, _string.startsWith)(relativeUrlString, '/')) {\n    return baseUrl.origin + relativeUrlString;\n  } // Relative path.\n\n\n  return baseUrl.origin + baseUrl.pathname.replace(/\\/[^/]*$/, '/') + relativeUrlString;\n}\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\n\n\nfunction getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  var sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\n\n\nfunction checkCorsUrl(url) {\n  var parsedUrl = parseUrlDeprecated(url);\n  var query = parseQueryString(parsedUrl.search);\n  (0, _log.userAssert)(!(SOURCE_ORIGIN_PARAM in query), 'Source origin is not allowed in %s', url);\n}\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} opt_fallback\n * @return {string}\n */\n\n\nfunction tryDecodeUriComponent(component, opt_fallback) {\n  return (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(component, opt_fallback);\n}\n\n},{\"./config\":5,\"./log\":16,\"./mode\":19,\"./string\":29,\"./types\":32,\"./url-parse-query-string\":33,\"./url-try-decode-uri-component\":34,\"./utils/lru-cache\":37,\"./utils/object\":39}],36:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.once = once;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// TODO(rsimha, #15334): Enable this rule.\n\n/* eslint jsdoc/check-types: 0 */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nfunction once(fn) {\n  var evaluated = false;\n  var retValue = null;\n  var callback = fn;\n  return function () {\n    if (!evaluated) {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n\n    return retValue;\n  };\n}\n\n},{}],37:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.LruCache = void 0;\n\nvar _log = require(\"../log\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nvar TAG = 'lru-cache';\n/**\n * @template T\n */\n\nvar LruCache =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {number} capacity\n   */\n  function LruCache(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n    /** @private {number} */\n\n    this.size_ = 0;\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n\n    this.access_ = 0;\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n\n    this.cache_ = Object.create(null);\n  }\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n\n\n  var _proto = LruCache.prototype;\n\n  _proto.has = function has(key) {\n    return !!this.cache_[key];\n  }\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  ;\n\n  _proto.get = function get(key) {\n    var cacheable = this.cache_[key];\n\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n\n    return undefined;\n  }\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  ;\n\n  _proto.put = function put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n\n    this.cache_[key] = {\n      payload: payload,\n      access: this.access_\n    };\n    this.evict_();\n  }\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  ;\n\n  _proto.evict_ = function evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    (0, _log.dev)().warn(TAG, 'Trimming LRU cache');\n    var cache = this.cache_;\n    var oldest = this.access_ + 1;\n    var oldestKey;\n\n    for (var key in cache) {\n      var access = cache[key].access;\n\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  };\n\n  return LruCache;\n}();\n\nexports.LruCache = LruCache;\n\n},{\"../log\":16}],38:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.mapRange = mapRange;\nexports.mod = mod;\nexports.clamp = clamp;\nexports.boundValue = boundValue;\nexports.magnitude = magnitude;\nexports.distance = distance;\nexports.polarToCartesian = polarToCartesian;\nexports.sum = sum;\n\nvar _log = require(\"../log\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Maps a value in a first range to its equivalent in a second range\n * Ex.: 5 in the range [0,10] gives 60 in the range[40,80]\n *\n * NOTE: lower/upper bounds on the source range are detected automatically,\n * however the bounds on the target range are not altered (thus the target\n * range could be decreasing).\n * Ex1: 8 in the range [0, 10] gives 2 in the range [10, 0]\n * Ex2: also, 8 in the range [10, 0] gives 2 in the range [10, 0]\n *\n * NOTE: Input value is enforced to be bounded inside the source range\n * Ex1: -2 in the range [0, 10] is interpreted as 0 and thus gives 40 in [40,80]\n * Ex2: 19 in the range [0, 5] is interpreted as 5 and thus gives 80 in [40,80]\n *\n * @param {number} val the value in the source range\n * @param {number} min1 the lower bound of the source range\n * @param {number} max1 the upper bound of the source range\n * @param {number} min2 the lower bound of the target range\n * @param {number} max2 the upper bound of the target range\n * @return {number} the equivalent value in the target range\n */\nfunction mapRange(val, min1, max1, min2, max2) {\n  var max1Bound = max1;\n  var min1Bound = min1;\n\n  if (min1 > max1) {\n    max1Bound = min1;\n    min1Bound = max1;\n  }\n\n  if (val < min1Bound) {\n    val = min1Bound;\n  } else if (val > max1Bound) {\n    val = max1Bound;\n  }\n\n  return (val - min1) * (max2 - min2) / (max1 - min1) + min2;\n}\n/**\n * Computes the modulus of values `a` and `b`.\n *\n * This is needed because the % operator in JavaScript doesn't implement\n * modulus behavior as can be seen by the spec here:\n * http://www.ecma-international.org/ecma-262/5.1/#sec-11.5.3.\n * It instead is used to obtain the remainder of a division.\n * This function uses the remainder (%) operator to determine the modulus.\n * Derived from here:\n * https://stackoverflow.com/questions/25726760/javascript-modular-arithmetic/47354356#47354356\n *\n * @param {number} a\n * @param {number} b\n * @return {number} returns the modulus of the two numbers.\n * @example\n *\n * _.min(10, 5);\n * // => 0\n *\n * _.mod(-1, 5);\n * // => 4\n */\n\n\nfunction mod(a, b) {\n  return a > 0 && b > 0 ? a % b : (a % b + b) % b;\n}\n/**\n * Restricts a number to be in the given min/max range. The minimum value must\n * be less than or equal to the maximum value.\n *\n * Examples:\n * clamp(0.5, 0, 1) -> 0.5\n * clamp(1.5, 0, 1) -> 1\n * clamp(-0.5, 0, 1) -> 0\n *\n * @param {number} val the value to clamp.\n * @param {number} min the lower bound.\n * @param {number} max the upper bound.\n * @return {number} the clamped value.\n */\n\n\nfunction clamp(val, min, max) {\n  (0, _log.devAssert)(min <= max, 'Minimum value is greater than the maximum.');\n  return Math.min(Math.max(val, min), max);\n}\n/**\n * Returns value bound to min and max values +/- extent. The lower bound must\n * be less than or equal to the upper bound.\n * @param {number} val the value to bound.\n * @param {number} min the lower bound.\n * @param {number} max the upper bound\n * @param {number} extent the allowed extent beyond the bounds.\n * @return {number} the bounded value.\n */\n\n\nfunction boundValue(val, min, max, extent) {\n  (0, _log.devAssert)(min <= max, 'Lower bound is greater than the upper bound.');\n  return clamp(val, min - extent, max + extent);\n}\n/**\n * Returns the length of a vector given in X- and Y-coordinates.\n * @param {number} deltaX distance in the X direction.\n * @param {number} deltaY distance in the Y direction.\n * @return {number} the magnitude of the vector.\n */\n\n\nfunction magnitude(deltaX, deltaY) {\n  return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n}\n/**\n * Returns the distance between two points.\n * @param {number} x1 X-coordinate of the first point.\n * @param {number} y1 Y-coordinate of the first point.\n * @param {number} x2 X-coordinate of the second point.\n * @param {number} y2 Y-coordinate of the second point.\n * @return {number} the distance between the two points.\n */\n\n\nfunction distance(x1, y1, x2, y2) {\n  return magnitude(x2 - x1, y2 - y1);\n}\n/**\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} radius\n * @param {number} angleInDegrees\n * @return {{\n *  x: number,\n *  y: number,\n * }}\n */\n\n\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians)\n  };\n}\n/**\n * Sums up the values of the given array and returns the result\n * @param {Array<number>} values\n * @return {number}\n */\n\n\nfunction sum(values) {\n  return values.reduce(function (a, b) {\n    return a + b;\n  });\n}\n\n},{\"../log\":16}],39:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.map = map;\nexports.dict = dict;\nexports.hasOwn = hasOwn;\nexports.ownProperty = ownProperty;\nexports.deepMerge = deepMerge;\nexports.omit = omit;\n\nvar _types = require(\"../types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nvar hasOwn_ = Object.prototype.hasOwnProperty;\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\n\nfunction map(opt_initial) {\n  var obj = Object.create(null);\n\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n\n  return obj;\n}\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\n\n\nfunction dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return (\n    /** @type {!JsonObject} */\n    opt_initial || {}\n  );\n}\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\n\n\nfunction hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\n\n\nfunction ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\n\n\nfunction deepMerge(target, source, depth) {\n  if (depth === void 0) {\n    depth = 10;\n  }\n\n  // Keep track of seen objects to detect recursive references.\n  var seen = [];\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n\n  var queue = [];\n  queue.push({\n    t: target,\n    s: source,\n    d: 0\n  }); // BFS to ensure objects don't have recursive references at shallower depths.\n\n  var _loop = function _loop() {\n    var _queue$shift = queue.shift(),\n        t = _queue$shift.t,\n        s = _queue$shift.s,\n        d = _queue$shift.d;\n\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n\n    seen.push(s);\n\n    if (t === s) {\n      return \"continue\";\n    }\n\n    if (d > depth) {\n      Object.assign(t, s);\n      return \"continue\";\n    }\n\n    Object.keys(s).forEach(function (key) {\n      var newValue = s[key]; // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n\n      if (hasOwn(t, key)) {\n        var oldValue = t[key];\n\n        if ((0, _types.isObject)(newValue) && (0, _types.isObject)(oldValue)) {\n          queue.push({\n            t: oldValue,\n            s: newValue,\n            d: d + 1\n          });\n          return;\n        }\n      }\n\n      t[key] = newValue;\n    });\n  };\n\n  while (queue.length > 0) {\n    var _ret = _loop();\n\n    if (_ret === \"continue\") continue;\n  }\n\n  return target;\n}\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\n\n\nfunction omit(o, props) {\n  return Object.keys(o).reduce(function (acc, key) {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n\n    return acc;\n  }, {});\n}\n\n},{\"../types\":32}],40:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.tryResolve = tryResolve;\nexports.some = some;\nexports.LastAddedResolver = exports.Deferred = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nvar Deferred =\n/**\n * Creates an instance of Deferred.\n */\nfunction Deferred() {\n  var resolve, reject;\n  /**\n   * @const {!Promise<T>}\n   */\n\n  this.promise = new\n  /*OK*/\n  Promise(function (res, rej) {\n    resolve = res;\n    reject = rej;\n  });\n  /**\n   * @const {function(T=)}\n   */\n\n  this.resolve = resolve;\n  /**\n   * @const {function(*=)}\n   */\n\n  this.reject = reject;\n};\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\n\n\nexports.Deferred = Deferred;\n\nfunction tryResolve(fn) {\n  return new Promise(function (resolve) {\n    resolve(fn());\n  });\n}\n/**\n * Returns a promise which resolves if a threshold amount of the given promises\n * resolve, and rejects otherwise.\n * @param {!Array<!Promise>} promises The array of promises to test.\n * @param {number} count The number of promises that must resolve for the\n *     returned promise to resolve.\n * @return {!Promise} A promise that resolves if any of the given promises\n *     resolve, and which rejects otherwise.\n */\n\n\nfunction some(promises, count) {\n  if (count === void 0) {\n    count = 1;\n  }\n\n  return new Promise(function (resolve, reject) {\n    count = Math.max(count, 0);\n    var extra = promises.length - count;\n\n    if (extra < 0) {\n      reject(new Error('not enough promises to resolve'));\n    }\n\n    if (promises.length == 0) {\n      resolve([]);\n    }\n\n    var values = [];\n    var reasons = [];\n\n    var onFulfilled = function onFulfilled(value) {\n      if (values.length < count) {\n        values.push(value);\n      }\n\n      if (values.length == count) {\n        resolve(values);\n      }\n    };\n\n    var onRejected = function onRejected(reason) {\n      if (reasons.length <= extra) {\n        reasons.push(reason);\n      }\n\n      if (reasons.length > extra) {\n        reject(reasons);\n      }\n    };\n\n    for (var i = 0; i < promises.length; i++) {\n      Promise.resolve(promises[i]).then(onFulfilled, onRejected);\n    }\n  });\n}\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\n\n\nvar LastAddedResolver =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Array<!Promise>=} opt_promises\n   */\n  function LastAddedResolver(opt_promises) {\n    var resolve_, reject_;\n    /** @private @const {!Promise} */\n\n    this.promise_ = new Promise(function (resolve, reject) {\n      resolve_ = resolve;\n      reject_ = reject;\n    });\n    /** @private */\n\n    this.resolve_ = resolve_;\n    /** @private */\n\n    this.reject_ = reject_;\n    /** @private */\n\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (var i = 0; i < opt_promises.length; i++) {\n        this.add(opt_promises[i]);\n      }\n    }\n  }\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!Promise} promise\n   * @return {!Promise}\n   */\n\n\n  var _proto = LastAddedResolver.prototype;\n\n  _proto.add = function add(promise) {\n    var _this = this;\n\n    var countAtAdd = ++this.count_;\n    Promise.resolve(promise).then(function (result) {\n      if (_this.count_ === countAtAdd) {\n        _this.resolve_(result);\n      }\n    }, function (error) {\n      // Don't follow behavior of Promise.all and Promise.race error so that\n      // this will only reject when most recently added promise fails.\n      if (_this.count_ === countAtAdd) {\n        _this.reject_(error);\n      }\n    });\n    return this.promise_;\n  }\n  /** @override */\n  ;\n\n  _proto.then = function then(opt_resolve, opt_reject) {\n    return this.promise_.then(opt_resolve, opt_reject);\n  };\n\n  return LastAddedResolver;\n}();\n\nexports.LastAddedResolver = LastAddedResolver;\n\n},{}],41:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getInternalVideoElementFor = getInternalVideoElementFor;\nexports.VideoUtils = void 0;\n\nvar _log = require(\"../log\");\n\nvar _function = require(\"./function\");\n\nvar _style = require(\"../style\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {!Window} win\n * @param {boolean} isLiteViewer\n * @return {!Promise<boolean>}\n */\nfunction isAutoplaySupportedImpl(win, isLiteViewer) {\n  // We do not support autoplay in amp-lite viewer regardless of platform.\n  if (isLiteViewer) {\n    return Promise.resolve(false);\n  } // To detect autoplay, we create a video element and call play on it, if\n  // `paused` is true after `play()` call, autoplay is supported. Although\n  // this is unintuitive, it works across browsers and is currently the lightest\n  // way to detect autoplay without using a data source.\n\n\n  var detectionElement = win.document.createElement('video'); // NOTE(aghassemi): We need both attributes and properties due to Chrome and\n  // Safari differences when dealing with non-attached elements.\n\n  detectionElement.setAttribute('muted', '');\n  detectionElement.setAttribute('playsinline', '');\n  detectionElement.setAttribute('webkit-playsinline', '');\n  detectionElement.setAttribute('height', '0');\n  detectionElement.setAttribute('width', '0');\n  detectionElement.muted = true;\n  detectionElement.playsinline = true;\n  detectionElement.webkitPlaysinline = true;\n  (0, _style.setStyles)(detectionElement, {\n    position: 'fixed',\n    top: '0',\n    width: '0',\n    height: '0',\n    opacity: '0'\n  }); // Promise wrapped this way to catch both sync throws and async rejections.\n  // More info: https://github.com/tc39/proposal-promise-try\n\n  new Promise(function (resolve) {\n    return resolve(detectionElement.play());\n  }).catch(function () {// Suppress any errors, useless to report as they are expected.\n  });\n  return Promise.resolve(!detectionElement.paused);\n}\n/** @private {?(function(Window, boolean):!Promise<boolean>)} */\n\n\nvar _isAutoplaySupported = null;\n/**\n * Sets if autoplay is supported.\n */\n\nfunction setIsAutoplaySupported() {\n  _isAutoplaySupported =\n  /** @type {function(Window, boolean):!Promise<boolean>} */\n  (0, _function.once)(isAutoplaySupportedImpl);\n}\n/**\n * Wrapper around static utilities for testability.\n */\n\n\nvar VideoUtils =\n/*#__PURE__*/\nfunction () {\n  function VideoUtils() {}\n\n  /**\n   * Determines autoplay support.\n   *\n   * Note that even if platfrom supports autoplay, users or browsers can disable\n   * autoplay to save data / battery. This detects both platfrom support and\n   * when autoplay has been disabled by the user.\n   *\n   * @param {!Window} win\n   * @param {boolean} isLiteViewer\n   * @return {!Promise<boolean>}\n   */\n  VideoUtils.isAutoplaySupported = function isAutoplaySupported(win, isLiteViewer) {\n    if (!_isAutoplaySupported) {\n      setIsAutoplaySupported();\n    }\n\n    return _isAutoplaySupported(win, isLiteViewer);\n  }\n  /** @visibleForTesting */\n  ;\n\n  VideoUtils.resetIsAutoplaySupported = function resetIsAutoplaySupported() {\n    setIsAutoplaySupported();\n  };\n\n  return VideoUtils;\n}();\n/**\n * @param {!Element} element\n * @return {!Element}\n * Note: Not included in `VideoUtils` as we don't need to test a\n * static selector.\n */\n\n\nexports.VideoUtils = VideoUtils;\n\nfunction getInternalVideoElementFor(element) {\n  return (0, _log.dev)().assertElement(element.querySelector('video, iframe'));\n}\n\n},{\"../log\":16,\"../style\":31,\"./function\":36}],42:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isDockable = isDockable;\nexports.delegateAutoplay = delegateAutoplay;\nexports.userInteractedWith = userInteractedWith;\nexports.VideoServiceSignals = exports.VideoOrBaseElementDef = exports.videoAnalyticsCustomEventTypeKey = exports.VideoAnalyticsEvents = exports.PlayingStates = exports.PlayingStateDef = exports.VideoEvents = exports.VideoAttributes = exports.VideoInterface = exports.MIN_VISIBILITY_RATIO_FOR_AUTOPLAY = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar MIN_VISIBILITY_RATIO_FOR_AUTOPLAY = 0.5;\n/**\n * VideoInterface defines a common video API which any AMP component that plays\n * videos is expected to implement.\n *\n * AMP runtime uses this common API to provide consistent video experience and\n * analytics across all video players.\n *\n * Components implementing this interface must also extend\n * {@link ./base-element.BaseElement} and register with the\n * Video Manager {@link ./service/video-manager-impl.VideoManager} during\n * their `builtCallback`.\n *\n * @interface\n */\n\nexports.MIN_VISIBILITY_RATIO_FOR_AUTOPLAY = MIN_VISIBILITY_RATIO_FOR_AUTOPLAY;\n\nvar VideoInterface =\n/*#__PURE__*/\nfunction () {\n  function VideoInterface() {}\n\n  var _proto = VideoInterface.prototype;\n\n  /**\n   * Whether the component supports video playback in the current platform.\n   * If false, component will be not treated as a video component.\n   * @return {boolean}\n   */\n  _proto.supportsPlatform = function supportsPlatform() {}\n  /**\n   * Whether users can interact with the video such as pausing it.\n   * Example of non-interactive videos include design background videos where\n   * all controls are hidden from the user.\n   *\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isInteractive = function isInteractive() {}\n  /**\n   * Current playback time in seconds at time of trigger\n   * @return {number}\n   */\n  ;\n\n  _proto.getCurrentTime = function getCurrentTime() {}\n  /**\n   * Total duration of the video in seconds\n   * @return {number}\n   */\n  ;\n\n  _proto.getDuration = function getDuration() {}\n  /**\n   * Get a 2d array of start and stop times that the user has watched.\n   * @return {!Array<Array<number>>}\n   */\n  ;\n\n  _proto.getPlayedRanges = function getPlayedRanges() {}\n  /**\n   * Plays the video..\n   *\n   * @param {boolean} unusedIsAutoplay Whether the call to the `play` method is\n   * triggered by the autoplay functionality. Video players can use this hint\n   * to make decisions such as not playing pre-roll video ads.\n   */\n  ;\n\n  _proto.play = function play(unusedIsAutoplay) {}\n  /**\n   * Pauses the video.\n   */\n  ;\n\n  _proto.pause = function pause() {}\n  /**\n   * Mutes the video.\n   */\n  ;\n\n  _proto.mute = function mute() {}\n  /**\n   * Unmutes the video.\n   */\n  ;\n\n  _proto.unmute = function unmute() {}\n  /**\n   * Makes the video UI controls visible.\n   *\n   * AMP will not call this method if `controls` attribute is not set.\n   */\n  ;\n\n  _proto.showControls = function showControls() {}\n  /**\n   * Hides the video UI controls.\n   *\n   * AMP will not call this method if `controls` attribute is not set.\n   */\n  ;\n\n  _proto.hideControls = function hideControls() {}\n  /**\n   * Returns video's meta data (artwork, title, artist, album, etc.) for use\n   * with the Media Session API\n   * artwork (Array): URL to the poster image (preferably a 512x512 PNG)\n   * title (string): Name of the video\n   * artist (string): Name of the video's author/artist\n   * album (string): Name of the video's album if it exists\n   * @return {!./mediasession-helper.MetadataDef|undefined} metadata\n   */\n  ;\n\n  _proto.getMetadata = function getMetadata() {}\n  /**\n   * If this returns true then it will be assumed that the player implements\n   * a feature to enter fullscreen on device rotation internally, so that the\n   * video manager does not override it. If not, the video manager will\n   * implement this feature automatically for videos with the attribute\n   * `rotate-to-fullscreen`.\n   *\n   * @return {boolean}\n   */\n  ;\n\n  _proto.preimplementsAutoFullscreen = function preimplementsAutoFullscreen() {}\n  /**\n   * If this returns true then it will be assumed that the player implements\n   * the MediaSession API internally so that the video manager does not override\n   * it. If not, the video manager will use the metadata variable as well as\n   * inferred meta-data to update the video's Media Session notification.\n   *\n   * @return {boolean}\n   */\n  ;\n\n  _proto.preimplementsMediaSessionAPI = function preimplementsMediaSessionAPI() {}\n  /**\n   * Enables fullscreen on the internal video element\n   * NOTE: While implementing, keep in mind that Safari/iOS do not allow taking\n   * any element other than <video> to fullscreen, if the player has an internal\n   * implementation of fullscreen (flash for example) then check\n   * if Services.platformFor(this.win).isSafari is true and use the internal\n   * implementation instead. If not, it is recommended to take the iframe\n   * to fullscreen using fullscreenEnter from dom.js\n   */\n  ;\n\n  _proto.fullscreenEnter = function fullscreenEnter() {}\n  /**\n   * Quits fullscreen mode\n   */\n  ;\n\n  _proto.fullscreenExit = function fullscreenExit() {}\n  /**\n   * Returns whether the video is currently in fullscreen mode or not\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen() {}\n  /**\n   * Seeks the video to a specified time.\n   * @param {number} unusedTimeSeconds\n   */\n  ;\n\n  _proto.seekTo = function seekTo(unusedTimeSeconds) {};\n\n  return VideoInterface;\n}();\n/**\n * Attributes\n *\n * Components implementing the VideoInterface are expected to support\n * the following attributes.\n *\n * @const {!Object<string, string>}\n */\n\n\nexports.VideoInterface = VideoInterface;\nvar VideoAttributes = {\n  /**\n   * autoplay\n   *\n   * Whether the developer has configured autoplay on the component.\n   * This is normally done by setting `autoplay` attribute on the component.\n   *\n   * AMP runtime manages autoplay behavior itself using methods such as `play`,\n   * `pause`, `showControls`, `hideControls`, `mute`, etc.. therefore components\n   * should not propagate the autoplay attribute to the underlying player\n   * implementation.\n   *\n   * When a video is requested to autoplay, AMP will automatically\n   * mute and hide the controls for the video, when video is 75% visible in\n   * the viewport, AMP will play the video and later pauses it when 25%\n   * or more of the video exits the viewport. If an auto-playing video also has\n   * controls, AMP will install a tap\n   * handler on the video, and when an end-user taps the video, AMP will show\n   * the controls.\n   *\n   */\n  AUTOPLAY: 'autoplay',\n\n  /**\n   * dock\n   *\n   * Setting the `dock` attribute on the component makes the video minimize\n   * to the corner when scrolled out of view and has been interacted with.\n   */\n  DOCK: 'dock',\n\n  /**\n   * rotate-to-fullscreen\n   *\n   * If enabled, this automatically expands the currently visible video and\n   * playing to fullscreen when the user changes the device's orientation to\n   * landscape if the video was started following a user interaction\n   * (not autoplay)\n   *\n   * Dependent upon browser support of\n   * http://caniuse.com/#feat=screen-orientation\n   * and http://caniuse.com/#feat=fullscreen\n   */\n  ROTATE_TO_FULLSCREEN: 'rotate-to-fullscreen',\n\n  /**\n   * noaudio\n   *\n   * If set and autoplay, the equalizer icon will not be displayed.\n   */\n  NO_AUDIO: 'noaudio'\n};\n/**\n * Events\n *\n * Components implementing the VideoInterface are expected to dispatch\n * the following DOM events.\n *\n * @const {!Object<string, string>}\n */\n\nexports.VideoAttributes = VideoAttributes;\nvar VideoEvents = {\n  /**\n   * registered\n   *\n   * Fired when the video player element is built and has been registered with\n   * the video manager.\n   *\n   * @event registered\n   */\n  REGISTERED: 'registered',\n\n  /**\n   * load\n   *\n   * Fired when the video player is loaded and calls to methods such as `play()`\n   * are allowed.\n   *\n   * @event load\n   */\n  LOAD: 'load',\n\n  /**\n   * loadedmetadata\n   *\n   * Fired when the video's metadata becomes available (e.g. duration).\n   *\n   * @event loadedmetadata\n   */\n  LOADEDMETADATA: 'loadedmetadata',\n\n  /**\n   * playing\n   *\n   * Fired when the video begins playing.\n   *\n   * @event playing\n   */\n  PLAYING: 'playing',\n\n  /**\n   * pause\n   *\n   * Fired when the video pauses.\n   *\n   * @event pause\n   */\n  PAUSE: 'pause',\n\n  /**\n   * ended\n   *\n   * Fired when the video ends.\n   *\n   * This event should be fired in addition to `pause` when video ends.\n   *\n   * @event ended\n   */\n  ENDED: 'ended',\n\n  /**\n   * muted\n   *\n   * Fired when the video is muted.\n   *\n   * @event muted\n   */\n  MUTED: 'muted',\n\n  /**\n   * unmuted\n   *\n   * Fired when the video is unmuted.\n   *\n   * @event unmuted\n   */\n  UNMUTED: 'unmuted',\n\n  /**\n   * amp:video:visibility\n   *\n   * Fired when the video's visibility changes. Normally fired\n   * from `viewportCallback`.\n   *\n   * @event amp:video:visibility\n   * @property {boolean} visible Whether the video player is visible or not.\n   */\n  VISIBILITY: 'amp:video:visibility',\n\n  /**\n   * reload\n   *\n   * Fired when the video's src changes.\n   *\n   * @event reloaded\n   */\n  RELOAD: 'reloaded',\n\n  /**\n   * pre/mid/post Ad start\n   *\n   * Fired when an Ad starts playing.\n   *\n   * This is used to remove any overlay shims during Ad play during autoplay\n   * or minimized-to-corner version of the player.\n   *\n   * @event ad_start\n   */\n  AD_START: 'ad_start',\n\n  /**\n   * pre/mid/post Ad ends\n   *\n   * Fired when an Ad ends playing.\n   *\n   * This is used to restore any overlay shims during Ad play during autoplay\n   * or minimized-to-corner version of the player.\n   *\n   * @event ad_end\n   */\n  AD_END: 'ad_end',\n\n  /**\n   * A 3p video player can send signals for analytics whose meaning doesn't\n   * fit for other events. In this case, a `tick` event is sent with additional\n   * information in its data property.\n   *\n   * @event amp:video:tick\n   */\n  CUSTOM_TICK: 'amp:video:tick'\n};\n/** @typedef {string} */\n\nexports.VideoEvents = VideoEvents;\nvar PlayingStateDef;\n/**\n * Playing States\n *\n * Internal playing states used to distinguish between video playing on user's\n * command and videos playing automatically\n *\n * @const {!Object<string, PlayingStateDef>}\n */\n\nexports.PlayingStateDef = PlayingStateDef;\nvar PlayingStates = {\n  /**\n   * playing_manual\n   *\n   * When the video user manually interacted with the video and the video\n   * is now playing\n   *\n   * @event playing_manual\n   */\n  PLAYING_MANUAL: 'playing_manual',\n\n  /**\n   * playing_auto\n   *\n   * When the video has autoplay and the user hasn't interacted with it yet\n   *\n   * @event playing_auto\n   */\n  PLAYING_AUTO: 'playing_auto',\n\n  /**\n   * paused\n   *\n   * When the video is paused.\n   *\n   * @event paused\n   */\n  PAUSED: 'paused'\n};\n/** @enum {string} */\n\nexports.PlayingStates = PlayingStates;\nvar VideoAnalyticsEvents = {\n  /**\n   * video-ended\n   *\n   * Indicates that a video ended.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-ended\n   */\n  ENDED: 'video-ended',\n\n  /**\n   * video-pause\n   *\n   * Indicates that a video paused.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-pause\n   */\n  PAUSE: 'video-pause',\n\n  /**\n   * video-play\n   *\n   * Indicates that a video began to play.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-play\n   */\n  PLAY: 'video-play',\n\n  /**\n   * video-session\n   *\n   * Indicates that some segment of the video played.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-session\n   */\n  SESSION: 'video-session',\n\n  /**\n   * video-session-visible\n   *\n   * Indicates that some segment of the video played in the viewport.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-session-visible\n   */\n  SESSION_VISIBLE: 'video-session-visible',\n\n  /**\n   * video-seconds-played\n   *\n   * Indicates that a video was playing when the\n   * video-seconds-played interval fired.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-session-visible\n   */\n  SECONDS_PLAYED: 'video-seconds-played',\n\n  /**\n   * video-hosted-custom\n   *\n   * Indicates that a custom event incoming from a 3p frame is to be logged.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-custom\n   */\n  CUSTOM: 'video-hosted-custom',\n\n  /**\n   * video-percentage-played\n   *\n   * Indicates that a percentage interval has been played.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-custom\n   */\n  PERCENTAGE_PLAYED: 'video-percentage-played',\n\n  /**\n   * video-ad-start\n   *\n   * Indicates that an ad begins to play.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-ad-start\n   */\n  AD_START: 'video-ad-start',\n\n  /**\n   * video-ad-end\n   *\n   * Indicates that an ad ended.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-ad-end\n   */\n  AD_END: 'video-ad-end'\n};\n/**\n * This key can't predictably collide with custom var names as defined in\n * analytics user configuration.\n * @type {string}\n */\n\nexports.VideoAnalyticsEvents = VideoAnalyticsEvents;\nvar videoAnalyticsCustomEventTypeKey = '__amp:eventType';\n/**\n * Helper union type to be used internally, so that the compiler treats\n * `VideoInterface` objects as `BaseElement`s, which they should be anyway.\n *\n * WARNING: Don't use this at the service level. Its `register` method should\n * only allow `VideoInterface` as a guarding measure.\n *\n * @typedef {!VideoInterface|!./base-element.BaseElement}\n */\n\nexports.videoAnalyticsCustomEventTypeKey = videoAnalyticsCustomEventTypeKey;\nvar VideoOrBaseElementDef;\n/**\n * @param {!Element} element\n * @return {boolean}\n */\n\nexports.VideoOrBaseElementDef = VideoOrBaseElementDef;\n\nfunction isDockable(element) {\n  return element.hasAttribute(VideoAttributes.DOCK);\n}\n/** @enum {string} */\n\n\nvar VideoServiceSignals = {\n  USER_INTERACTED: 'user-interacted',\n  AUTOPLAY_DELEGATED: 'autoplay-delegated'\n};\n/** @param {!AmpElement|!VideoOrBaseElementDef} video */\n\nexports.VideoServiceSignals = VideoServiceSignals;\n\nfunction delegateAutoplay(video) {\n  video.signals().signal(VideoServiceSignals.AUTOPLAY_DELEGATED);\n}\n/** @param {!AmpElement|!VideoOrBaseElementDef} video */\n\n\nfunction userInteractedWith(video) {\n  video.signals().signal(VideoServiceSignals.USER_INTERACTED);\n}\n\n},{}],43:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.cssEscape = cssEscape;\n\n/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  } // Nil is the null terminator (group 1) capture\n\n\n  if (nil) {\n    return \"\\uFFFD\";\n  } // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n\n\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' ';\n  } // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n\n\n  return '\\\\' + match;\n}\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\n\n\nfunction cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n\n},{}]},{},[2])\n\n","/** @noinline */ export const cssText = \"i-amphtml-video-mask{display:block;z-index:1}.amp-video-eq{display:none}.i-amphtml-video-component:not(amp-video) .amp-video-eq,amp-story .amp-video-eq,amp-video[controls] .amp-video-eq{display:-ms-flexbox;display:flex}[noaudio] .amp-video-eq{display:none!important}.amp-video-eq{pointer-events:none!important;-ms-flex-align:end;align-items:flex-end;bottom:7px;height:12px;opacity:0.8;overflow:hidden;position:absolute;right:7px;width:20px;z-index:1}.amp-video-eq .amp-video-eq-col{-ms-flex:1;flex:1;height:100%;margin-right:1px;position:relative}.amp-video-eq .amp-video-eq-col div{animation-name:amp-video-eq-animation;animation-timing-function:linear;animation-iteration-count:infinite;animation-direction:alternate;background-color:#fafafa;height:100%;position:absolute;width:100%;will-change:transform;animation-play-state:paused}.amp-video-eq[unpausable] .amp-video-eq-col div{animation-name:none}.amp-video-eq[unpausable].amp-video-eq-play .amp-video-eq-col div{animation-name:amp-video-eq-animation}.amp-video-eq.amp-video-eq-play .amp-video-eq-col div{animation-play-state:running}.amp-video-eq-1-1{animation-duration:0.3s;transform:translateY(60%)}.amp-video-eq-1-2{animation-duration:0.45s;transform:translateY(60%)}.amp-video-eq-2-1{animation-duration:0.5s;transform:translateY(30%)}.amp-video-eq-2-2{animation-duration:0.4s;transform:translateY(30%)}.amp-video-eq-3-1{animation-duration:0.3s;transform:translateY(70%)}.amp-video-eq-3-2{animation-duration:0.35s;transform:translateY(70%)}.amp-video-eq-4-1{animation-duration:0.4s;transform:translateY(50%)}.amp-video-eq-4-2{animation-duration:0.25s;transform:translateY(50%)}@keyframes amp-video-eq-animation{0%{transform:translateY(100%)}to{transform:translateY(0)}}\\n/*# sourceURL=/css/video-autoplay.css*/\"","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from '../../../src/utils/promise';\nimport {Services} from '../../../src/services';\nimport {VideoEvents} from '../../../src/video-interface';\nimport {\n  addParamToUrl,\n  addParamsToUrl,\n  parseQueryString,\n} from '../../../src/url';\nimport {\n  createFrameFor,\n  mutedOrUnmutedEvent,\n  originMatches,\n  redispatch,\n} from '../../../src/iframe-video';\nimport {dev, devAssert, userAssert} from '../../../src/log';\nimport {dict} from '../../../src/utils/object';\nimport {\n  fullscreenEnter,\n  fullscreenExit,\n  getDataParamsFromAttributes,\n  isFullscreenElement,\n} from '../../../src/dom';\nimport {getData, listen} from '../../../src/event-helper';\nimport {installVideoManagerForDoc} from '../../../src/service/video-manager-impl';\nimport {isLayoutSizeDefined} from '../../../src/layout';\n\nconst TAG = 'amp-dailymotion';\n\n/**\n * Player events reverse-engineered from the Dailymotion API\n * NOTE: 'unstarted' isn't part of the API, just a placeholder\n * as an initial state\n *\n * @enum {string}\n * @private\n */\nconst DailymotionEvents = {\n  UNSTARTED: 'unstarted',\n  API_READY: 'apiready',\n  // Events fired for both the original content or ads\n  START: 'start',\n  PLAY: 'play',\n  PAUSE: 'pause',\n  END: 'end',\n  // Events fired only for ads\n  AD_START: 'ad_start',\n  AD_PLAY: 'ad_play',\n  AD_PAUSE: 'ad_pause',\n  AD_END: 'ad_end',\n  // Events fired only for the original content\n  VIDEO_START: 'video_start',\n  VIDEO_END: 'video_end',\n  // Other events\n  VOLUMECHANGE: 'volumechange',\n  STARTED_BUFFERING: 'progress',\n  FULLSCREEN_CHANGE: 'fullscreenchange',\n};\n\n/**\n * @implements {../../../src/video-interface.VideoInterface}\n */\nclass AmpDailymotion extends AMP.BaseElement {\n  /** @param {!AmpElement} element */\n  constructor(element) {\n    super(element);\n    /** @private {string} */\n    this.playerState_ = DailymotionEvents.UNSTARTED;\n\n    /** @private {?string}  */\n    this.videoid_ = null;\n\n    /** @private {?Element} */\n    this.iframe_ = null;\n\n    /** @private {boolean}  */\n    this.muted_ = false;\n\n    /** @private {?Promise} */\n    this.playerReadyPromise_ = null;\n\n    /** @private {?Function} */\n    this.playerReadyResolver_ = null;\n\n    /** @private {?Promise} */\n    this.startedBufferingPromise_ = null;\n\n    /** @private {?Function} */\n    this.startedBufferingResolver_ = null;\n\n    /** @private {boolean} */\n    this.isFullscreen_ = false;\n  }\n\n  /**\n   * @param {boolean=} opt_onLayout\n   * @override\n   */\n  preconnectCallback(opt_onLayout) {\n    this.preconnect.url('https://www.dailymotion.com', opt_onLayout);\n    // Host that Dailymotion uses to serve JS needed by player.\n    this.preconnect.url('https://static1.dmcdn.net', opt_onLayout);\n  }\n\n  /**\n   * @override\n   */\n  supportsPlatform() {\n    return true;\n  }\n\n  /** @override */\n  isInteractive() {\n    // Dailymotion videos are always interactive. There is no Dailymotion param\n    // that makes the video non-interactive. Even controls=false will not\n    // prevent user from pausing or resuming the video.\n    return true;\n  }\n\n  /** @override */\n  isLayoutSupported(layout) {\n    return isLayoutSizeDefined(layout);\n  }\n\n  /** @override */\n  viewportCallback(visible) {\n    this.element.dispatchCustomEvent(VideoEvents.VISIBILITY, {visible});\n  }\n\n  /** @override */\n  buildCallback() {\n    this.videoid_ = userAssert(\n      this.element.getAttribute('data-videoid'),\n      'The data-videoid attribute is required for <amp-dailymotion> %s',\n      this.element\n    );\n\n    installVideoManagerForDoc(this.element);\n    Services.videoManagerForDoc(this.element).register(this);\n    const readyDeferred = new Deferred();\n    this.playerReadyPromise_ = readyDeferred.promise;\n    this.playerReadyResolver_ = readyDeferred.resolve;\n\n    const bufferingDeferred = new Deferred();\n    this.startedBufferingPromise_ = bufferingDeferred.promise;\n    this.startedBufferingResolver_ = bufferingDeferred.resolve;\n  }\n\n  /** @override */\n  layoutCallback() {\n    devAssert(this.videoid_);\n\n    this.iframe_ = createFrameFor(this, this.getIframeSrc_());\n\n    listen(this.win, 'message', this.handleEvents_.bind(this));\n\n    return this.loadPromise(this.iframe_);\n  }\n\n  /**\n   * @param {!Event} event\n   * @private\n   */\n  handleEvents_(event) {\n    if (!originMatches(event, this.iframe_, 'https://www.dailymotion.com')) {\n      return;\n    }\n    const eventData = getData(event);\n    if (!eventData || !event.type || event.type != 'message') {\n      return; // Event empty\n    }\n    const data = parseQueryString(/** @type {string} */ (eventData));\n    if (data === undefined) {\n      return; // The message isn't valid\n    }\n\n    redispatch(this.element, data['event'], {\n      [DailymotionEvents.API_READY]: VideoEvents.LOAD,\n      [DailymotionEvents.END]: [VideoEvents.ENDED, VideoEvents.PAUSE],\n      [DailymotionEvents.PAUSE]: VideoEvents.PAUSE,\n      [DailymotionEvents.PLAY]: VideoEvents.PLAYING,\n    });\n\n    switch (data['event']) {\n      case DailymotionEvents.API_READY:\n        this.playerReadyResolver_(true);\n        break;\n\n      case DailymotionEvents.END:\n        this.playerState_ = DailymotionEvents.PAUSE;\n        break;\n\n      case DailymotionEvents.PAUSE:\n      case DailymotionEvents.PLAY:\n        this.playerState_ = data['event'];\n        break;\n\n      case DailymotionEvents.VOLUMECHANGE:\n        const isMuted = data['volume'] == 0 || data['muted'] == 'true';\n        if (\n          this.playerState_ == DailymotionEvents.UNSTARTED ||\n          this.muted_ != isMuted\n        ) {\n          this.muted_ = isMuted;\n          this.element.dispatchCustomEvent(mutedOrUnmutedEvent(isMuted));\n        }\n        break;\n\n      case DailymotionEvents.STARTED_BUFFERING:\n        this.startedBufferingResolver_(true);\n        break;\n\n      case DailymotionEvents.FULLSCREEN_CHANGE:\n        this.isFullscreen_ = data['fullscreen'] == 'true';\n        break;\n\n      default: // nothing\n    }\n  }\n\n  /**\n   * Sends a command to the player through postMessage.\n   * @param {string} command\n   * @param {Array<boolean>=} opt_args\n   * @private\n   */\n  sendCommand_(command, opt_args) {\n    const endpoint = 'https://www.dailymotion.com';\n    this.playerReadyPromise_.then(() => {\n      if (this.iframe_ && this.iframe_.contentWindow) {\n        const message = JSON.stringify(\n          dict({\n            'command': command,\n            'parameters': opt_args || [],\n          })\n        );\n        this.iframe_.contentWindow./*OK*/ postMessage(message, endpoint);\n      }\n    });\n  }\n\n  /** @private */\n  getIframeSrc_() {\n    let iframeSrc =\n      'https://www.dailymotion.com/embed/video/' +\n      encodeURIComponent(this.videoid_ || '') +\n      '?api=1&html=1&app=amp';\n\n    const explicitParamsAttributes = [\n      'mute',\n      'endscreen-enable',\n      'sharing-enable',\n      'start',\n      'ui-highlight',\n      'ui-logo',\n      'info',\n    ];\n\n    explicitParamsAttributes.forEach(explicitParam => {\n      const val = this.element.getAttribute(`data-${explicitParam}`);\n      if (val) {\n        iframeSrc = addParamToUrl(iframeSrc, explicitParam, val);\n      }\n    });\n\n    const implicitParams = getDataParamsFromAttributes(this.element);\n    iframeSrc = addParamsToUrl(iframeSrc, implicitParams);\n\n    return iframeSrc;\n  }\n\n  /** @override */\n  pauseCallback() {\n    this.pause();\n  }\n\n  /**\n   * @override\n   */\n  play(isAutoplay) {\n    this.sendCommand_('play');\n    // Hack to solve autoplay problem on Chrome Android\n    // (first play always fails)\n    if (isAutoplay && this.playerState_ != DailymotionEvents.PAUSE) {\n      this.startedBufferingPromise_.then(() => {\n        this.sendCommand_('play');\n      });\n    }\n  }\n\n  /**\n   * @override\n   */\n  pause() {\n    this.sendCommand_('pause');\n  }\n\n  /**\n   * @override\n   */\n  mute() {\n    this.sendCommand_('muted', [true]);\n    // Hack to simulate firing mute events when video is not playing\n    // since Dailymotion only fires volume changes when the video has started\n    this.playerReadyPromise_.then(() => {\n      this.element.dispatchCustomEvent(VideoEvents.MUTED);\n      this.muted_ = true;\n    });\n  }\n\n  /**\n   * @override\n   */\n  unmute() {\n    this.sendCommand_('muted', [false]);\n    // Hack to simulate firing mute events when video is not playing\n    // since Dailymotion only fires volume changes when the video has started\n    this.playerReadyPromise_.then(() => {\n      this.element.dispatchCustomEvent(VideoEvents.UNMUTED);\n      this.muted_ = false;\n    });\n  }\n\n  /**\n   * @override\n   */\n  showControls() {\n    this.sendCommand_('controls', [true]);\n  }\n\n  /**\n   * @override\n   */\n  hideControls() {\n    this.sendCommand_('controls', [false]);\n  }\n\n  /**\n   * @override\n   */\n  fullscreenEnter() {\n    const platform = Services.platformFor(this.win);\n    if (platform.isSafari() || platform.isIos()) {\n      this.sendCommand_('fullscreen', [true]);\n    } else {\n      if (!this.iframe_) {\n        return;\n      }\n      fullscreenEnter(dev().assertElement(this.iframe_));\n    }\n  }\n\n  /**\n   * @override\n   */\n  fullscreenExit() {\n    const platform = Services.platformFor(this.win);\n    if (platform.isSafari() || platform.isIos()) {\n      this.sendCommand_('fullscreen', [false]);\n    } else {\n      if (!this.iframe_) {\n        return;\n      }\n      fullscreenExit(dev().assertElement(this.iframe_));\n    }\n  }\n\n  /** @override */\n  isFullscreen() {\n    const platform = Services.platformFor(this.win);\n    if (platform.isSafari() || platform.isIos()) {\n      return this.isFullscreen_;\n    } else {\n      if (!this.iframe_) {\n        return false;\n      }\n      return isFullscreenElement(dev().assertElement(this.iframe_));\n    }\n  }\n\n  /** @override */\n  getMetadata() {\n    // Not implemented\n  }\n\n  /** @override */\n  preimplementsMediaSessionAPI() {\n    return false;\n  }\n\n  /** @override */\n  preimplementsAutoFullscreen() {\n    return false;\n  }\n\n  /** @override */\n  getCurrentTime() {\n    // Not supported.\n    return 0;\n  }\n\n  /** @override */\n  getDuration() {\n    // Not supported.\n    return 1;\n  }\n\n  /** @override */\n  getPlayedRanges() {\n    // Not supported.\n    return [];\n  }\n\n  /** @override */\n  seekTo(unusedTimeSeconds) {\n    this.user().error(TAG, '`seekTo` not supported.');\n  }\n}\n\nAMP.extension(TAG, '0.1', AMP => {\n  AMP.registerElement(TAG, AmpDailymotion);\n});\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Key string in an action arguments map for an unparsed object literal string.\n *\n * E.g. for the action in <p on=\"tap:AMP.setState({foo: 'bar'})\",\n * then `args[RAW_OBJECT_ARGS_KEY]` is the string \"{foo: 'bar'}\".\n *\n * The action service delegates parsing of object literals to the corresponding\n * extension (in the example above, amp-bind).\n *\n * @see ./service/action-impl.ActionInfoDef\n * @const {string}\n */\nexport const RAW_OBJECT_ARGS_KEY = '__AMP_OBJECT_STRING__';\n\n/** @const {string} Identifier for an element's default action. */\nexport const DEFAULT_ACTION = 'activate';\n\n/**\n * Trust level of an action.\n *\n * Corresponds to degree of user intent, i.e. events triggered with strong\n * user intent have high trust.\n *\n * @enum {number}\n */\nexport const ActionTrust = {\n  LOW: 1,\n  HIGH: 100,\n};\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Commonly used signals across different elements and documents.\n * @enum {string}\n */\nexport const CommonSignals = {\n  /**\n   * The element has been upgraded from ElementStub to its real implementation.\n   */\n  UPGRADED: 'upgraded',\n\n  /**\n   * The element has been built.\n   */\n  BUILT: 'built',\n\n  /**\n   * The element has started loading.\n   * LOAD_START triggers at the start of the layoutCallback.\n   */\n  LOAD_START: 'load-start',\n\n  /**\n   * Rendering has been confirmed to have been started.\n   * It is a signal to indicate meaningful display (e.g. text could be displayed\n   * CSS is correctly installed/applied).\n   *\n   * Elements can optionally implement RENDER_START signal. (e.g. ad, shadowdoc)\n   * if it want to define its own meaningful display time and toggle visibility.\n   *\n   * Simpler elements's RENDER_START can be equal to the start of the\n   * buildCallback\n   */\n  RENDER_START: 'render-start',\n\n  /**\n   * The element has been loaded.\n   * LOAD_END triggers at the end of the layoutCallback.\n   *\n   */\n  LOAD_END: 'load-end',\n\n  /**\n   * The initial contents of an element/document/embed have been loaded.\n   * INI_LOAD is an optional signal, implemented by ads, story, and elements\n   * that consist of other resources.\n   * It instructs that all critical resources has been loaded, and can be used\n   * for more accurate visibility measurement.\n   * When an element doesn't consist multiple child resources, LOAD_END signal\n   * can be used to indicate resource load completion.\n   * Note: Based on the implementation, INI_LOAD can trigger before or after\n   * LOAD_END.\n   */\n  INI_LOAD: 'ini-load',\n\n  /**\n   * The element has been unlaid out.\n   */\n  UNLOAD: 'unload',\n};\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex'];\n\nconst cdnProxyRegex =\n  typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex'];\n\n/** @type {!Object<string, string|boolean|RegExp|Array<RegExp>>} */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex: thirdPartyFrameRegex || /^d-\\d+\\.ampproject\\.net$/,\n  cdn: env['cdnUrl'] || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex:\n    cdnProxyRegex || /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] || 'https://amp-error-reporting.appspot.com/r',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/master/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.dev$/,\n  ],\n};\n\nexport const config = {\n  urls,\n};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssEscape} from '../third_party/css-escape/css-escape';\nimport {devAssert} from './log';\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nexport function assertIsName(name) {\n  devAssert(/^[\\w-]+$/.test(name));\n}\n\n/**\n * @type {boolean|undefined}\n */\nlet scopeSelectorSupported;\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\nexport function isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return (scopeSelectorSupported = testScopeSelector(el));\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\nfunction testScopeSelector(el) {\n  try {\n    const doc = el.ownerDocument;\n    const testElement = doc.createElement('div');\n    const testChild = doc.createElement('div');\n    testElement.appendChild(testChild);\n    // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n    return testElement./*OK*/ querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\nexport function prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, `$&${distribute} `);\n}\n\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n */\nexport function escapeCssSelectorIdent(ident) {\n  return cssEscape(ident);\n}\n\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\nexport function escapeCssSelectorNth(ident) {\n  const escaped = String(ident);\n  // Ensure it doesn't close the nth-child psuedo class.\n  devAssert(escaped.indexOf(')') === -1);\n  return escaped;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './utils/promise';\nimport {\n  assertIsName,\n  isScopeSelectorSupported,\n  prependSelectorsWith,\n} from './css';\nimport {dev, devAssert} from './log';\nimport {dict} from './utils/object';\nimport {includes, startsWith} from './string';\nimport {toWin} from './types';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise(resolve => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise(resolve => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node} after\n */\nexport function insertAfterOrAtStart(root, element, after) {\n  const before = after ? after.nextSibling : root.firstChild;\n  root.insertBefore(element, before);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (n = node; !!n.parentNode && !isShadowRoot(n); n = n.parentNode) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {*} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  // TODO(#22733): remove in preference to dom's `rootNodeFor`.\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\nexport function closest(element, callback, opt_stopAt) {\n  for (let el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\nexport function closestNode(node, callback) {\n  for (let n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\nexport function closestAncestorElementBySelector(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  return closest(element, el => {\n    return matches(el, selector);\n  });\n}\n\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\nexport function ancestorElements(child, predicate) {\n  const ancestors = [];\n  for (\n    let ancestor = child.parentElement;\n    ancestor;\n    ancestor = ancestor.parentElement\n  ) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n  return ancestors;\n}\n\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\nexport function ancestorElementsByTag(child, tagName) {\n  assertIsName(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, el => {\n    return el.tagName == tagName;\n  });\n}\n\n/**\n * Finds the first child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function childElement(parent, callback) {\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\nexport function childElements(parent, callback) {\n  const children = [];\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function lastChildElement(parent, callback) {\n  for (\n    let child = parent.lastElementChild;\n    child;\n    child = child.previousElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\nexport function childNodes(parent, callback) {\n  const nodes = [];\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function childElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelector(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function lastChildElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return lastChildElement(parent, el => {\n    return el.hasAttribute(attr);\n  });\n}\n\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {?Element}\n */\nexport function childElementByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelector(parent, `> ${tagName}`);\n}\n\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> ${tagName}`);\n}\n\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\nexport function matches(el, selector) {\n  const matcher =\n    el.matches ||\n    el.webkitMatchesSelector ||\n    el.mozMatchesSelector ||\n    el.msMatchesSelector ||\n    el.oMatchesSelector;\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n  return false; // IE8 always returns false.\n}\n\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\nexport function elementByTag(element, tagName) {\n  assertIsName(tagName);\n  return element./*OK*/ querySelector(tagName);\n}\n\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nfunction scopedQuerySelectionFallback(root, selector) {\n  const unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  const scopedSelector = prependSelectorsWith(selector, `.${unique}`);\n  const elements = root./*OK*/ querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {?Element}\n */\nexport function scopedQuerySelector(root, selector) {\n  if (isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelector(prependSelectorsWith(selector, ':scope'));\n  }\n\n  // Only IE.\n  const fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nexport function scopedQuerySelectorAll(root, selector) {\n  if (isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelectorAll(\n      prependSelectorsWith(selector, ':scope')\n    );\n  }\n\n  // Only IE.\n  return scopedQuerySelectionFallback(root, selector);\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!Element} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || (key => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    startsWith(tag, 'AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!Element} element\n * @return {!Promise<!Element>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(element);\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Replacement for `Element.requestFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n * @param {!Element} element\n */\nexport function fullscreenEnter(element) {\n  const requestFs =\n    element.requestFullscreen ||\n    element.requestFullScreen ||\n    element.webkitRequestFullscreen ||\n    element.webkitEnterFullscreen ||\n    element.msRequestFullscreen ||\n    element.mozRequestFullScreen;\n  if (requestFs) {\n    requestFs.call(element);\n  }\n}\n\n/**\n * Replacement for `Document.exitFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/exitFullscreen\n * @param {!Element} element\n */\nexport function fullscreenExit(element) {\n  const elementBoundExit =\n    element.cancelFullScreen ||\n    element.exitFullscreen ||\n    element.webkitExitFullscreen ||\n    element.webkitCancelFullScreen ||\n    element.mozCancelFullScreen ||\n    element.msExitFullscreen;\n  if (elementBoundExit) {\n    elementBoundExit.call(element);\n    return;\n  }\n  const {ownerDocument} = element;\n  if (!ownerDocument) {\n    return;\n  }\n  const docBoundExit =\n    ownerDocument.cancelFullScreen ||\n    ownerDocument.exitFullscreencancelFullScreen ||\n    ownerDocument.webkitExitFullscreencancelFullScreen ||\n    ownerDocument.webkitCancelFullScreencancelFullScreen ||\n    ownerDocument.mozCancelFullScreencancelFullScreen ||\n    ownerDocument.msExitFullscreen;\n  if (docBoundExit) {\n    docBoundExit.call(ownerDocument);\n  }\n}\n\n/**\n * Replacement for `Document.fullscreenElement`.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenElement\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isFullscreenElement(element) {\n  const {webkitDisplayingFullscreen} = element;\n  if (webkitDisplayingFullscreen !== undefined) {\n    return webkitDisplayingFullscreen;\n  }\n  const {ownerDocument} = element;\n  if (!ownerDocument) {\n    return false;\n  }\n  const fullscreenElement =\n    ownerDocument.fullscreenElement ||\n    ownerDocument.webkitFullscreenElement ||\n    ownerDocument.mozFullScreenElement ||\n    ownerDocument.webkitCurrentFullScreenElement;\n  return fullscreenElement == element;\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!Element} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport {\n  getAmpdoc,\n  getExistingServiceForDocInEmbedScope,\n  getService,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n  getTopWindow,\n} from './service';\nimport {toWin} from './types';\nimport {userAssert} from './log';\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementService(win, id, extension, opt_element) {\n  return getElementServiceIfAvailable(win, id, extension, opt_element).then(\n    service => assertService(service, id, extension)\n  );\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(win, id, extension, opt_element) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(win, id, extension, opt_element);\n}\n\n/**\n * @param {!Window} win\n * @param {string} elementName Name of an extended custom element.\n * @return {boolean} Whether this element is scheduled to be loaded.\n */\nfunction isElementScheduled(win, elementName) {\n  // Set in custom-element.js\n  if (!win.__AMP_EXTENDED_ELEMENTS) {\n    return false;\n  }\n  return !!win.__AMP_EXTENDED_ELEMENTS[elementName];\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then(service => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .waitForBodyOpen()\n    .then(() =>\n      waitForExtensionIfPresent(ampdoc.win, extension, ampdoc.win.document.head)\n    )\n    .then(() => {\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      } else if (isElementScheduled(ampdoc.win, extension)) {\n        return getServicePromiseForDoc(element, id);\n      }\n      return null;\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getExistingServiceForDocInEmbedScope(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  const win = toWin(element.ownerDocument.defaultView);\n  const topWin = getTopWindow(win);\n  // In embeds, doc services are stored on the embed window.\n  if (win !== topWin) {\n    return getElementServicePromiseOrNull(win, id, extension);\n  } else {\n    // Only fallback to element's ampdoc (top-level) if not embedded.\n    return getElementServiceIfAvailableForDoc(element, id, extension);\n  }\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (userAssert(\n    service,\n    'Service %s was requested to be provided through %s, ' +\n      'but %s is not loaded in the current page. To fix this ' +\n      'problem load the JavaScript file for %s in this page.',\n    id,\n    extension,\n    extension,\n    extension\n  ));\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Array<string>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  const scripts = {};\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const name =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    scripts[name] = true;\n  }\n  return Object.keys(scripts);\n}\n\n/**\n * Waits for body to be present then verifies that an extension script is\n * present in head for installation.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} extensionId\n * @return {!Promise<boolean>}\n */\nexport function isExtensionScriptInNode(ampdoc, extensionId) {\n  return ampdoc.waitForBodyOpen().then(() => {\n    return extensionScriptInNode(ampdoc.getHeadNode(), extensionId);\n  });\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @param {string} extensionId\n * @return {boolean}\n * @private\n */\nfunction extensionScriptInNode(head, extensionId) {\n  return extensionScriptsInNode(head).includes(extensionId);\n}\n\n/**\n * Waits for an extension if its script is present\n * @param {!Window} win\n * @param {string} extension\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Promise}\n * @private\n */\nfunction waitForExtensionIfPresent(win, extension, head) {\n  /**\n   * If there is an extension script wait for it to load before trying\n   * to get the service. Prevents a race condition when everything but\n   * the extensions is in cache. If there is no script then it's either\n   * not present, or the service was defined by a test. In those cases\n   * we don't wait around for an extension that does not exist.\n   */\n\n  // TODO(jpettitt) investigate registerExtension to short circuit\n  // the dom call in extensionScriptsInNode()\n  if (!extensionScriptInNode(head, extension)) {\n    return Promise.resolve();\n  }\n\n  const extensions = getService(win, 'extensions');\n  return /** @type {!Promise<?Object>} */ (extensions.waitForExtension(\n    win,\n    extension\n  ));\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(win, id, extension, opt_element) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => waitForExtensionIfPresent(win, extension, win.document.head))\n    .then(() => {\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      } else if (isElementScheduled(win, extension)) {\n        return getServicePromise(win, id);\n      }\n      return null;\n    });\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet optsSupported;\n\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function internalListenImplementation(\n  element,\n  eventType,\n  listener,\n  opt_evtListenerOpts\n) {\n  let localElement = element;\n  let localListener = listener;\n  /**\n   * @type {?Function}\n   */\n  let wrapped;\n\n  wrapped = event => {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n      throw e;\n    }\n  };\n  const optsSupported = detectEvtListenerOptsSupport();\n  let capture = false;\n  if (opt_evtListenerOpts) {\n    capture = opt_evtListenerOpts.capture;\n  }\n  localElement.addEventListener(\n    eventType,\n    wrapped,\n    optsSupported ? opt_evtListenerOpts : capture\n  );\n  return () => {\n    if (localElement) {\n      localElement.removeEventListener(\n        eventType,\n        wrapped,\n        optsSupported ? opt_evtListenerOpts : capture\n      );\n    }\n    // Ensure these are GC'd\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\nexport function detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    const options = {\n      get capture() {\n        optsSupported = true;\n      },\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return optsSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\nexport function resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalListenImplementation} from './event-helper-listen';\nimport {lastChildElement} from './dom';\nimport {user} from './log';\n\n/** @const {string}  */\nconst LOAD_FAILURE_PREFIX = 'Failed to load:';\n\n/** @const {string} */\nexport const MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\nexport function createCustomEvent(win, type, detail, opt_eventInit) {\n  const eventInit = /** @type {!CustomEventInit} */ ({detail});\n  Object.assign(eventInit, opt_eventInit);\n  // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n  if (typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    const e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(\n      type,\n      !!eventInit.bubbles,\n      !!eventInit.cancelable,\n      detail\n    );\n    return e;\n  }\n}\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getData(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.data);\n}\n\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getDetail(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.detail);\n}\n\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  let localListener = listener;\n  const unlisten = internalListenImplementation(\n    element,\n    eventType,\n    event => {\n      try {\n        localListener(event);\n      } finally {\n        // Ensure listener is GC'd\n        localListener = null;\n        unlisten();\n      }\n    },\n    opt_evtListenerOpts\n  );\n  return unlisten;\n}\n\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\nexport function listenOncePromise(\n  element,\n  eventType,\n  opt_evtListenerOpts,\n  opt_cancel\n) {\n  let unlisten;\n  const eventPromise = new Promise(resolve => {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n  return eventPromise;\n}\n\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nexport function isLoaded(eleOrWindow) {\n  return !!(\n    eleOrWindow.complete ||\n    eleOrWindow.readyState == 'complete' ||\n    (isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0) ||\n    // If the passed in thing is a Window, infer loaded state from\n    //\n    (eleOrWindow.document && eleOrWindow.document.readyState == 'complete')\n  );\n}\n\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\nexport function loadPromise(eleOrWindow) {\n  let unlistenLoad;\n  let unlistenError;\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n  const isMediaElement = isHTMLMediaElement(eleOrWindow);\n  if (\n    isMediaElement &&\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc\n  ) {\n    return Promise.reject(eleOrWindow);\n  }\n  const loadingPromise = new Promise((resolve, reject) => {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true,\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    }\n    // Don't unlisten on error for Windows.\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n    let errorTarget = eleOrWindow;\n    // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = lastChildElement(\n        eleOrWindow,\n        child => child.tagName === 'SOURCE'\n      );\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n\n  return loadingPromise.then(\n    () => {\n      if (unlistenError) {\n        unlistenError();\n      }\n      return eleOrWindow;\n    },\n    () => {\n      if (unlistenLoad) {\n        unlistenLoad();\n      }\n      failedToLoad(eleOrWindow);\n    }\n  );\n}\n\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] =\n      eleOrWindow.currentSrc || true;\n  }\n\n  // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n  let target = eleOrWindow;\n  if (target && target.src) {\n    target = target.src;\n  }\n  throw user().createError(LOAD_FAILURE_PREFIX, target);\n}\n\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\nexport function isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\nimport {dev, user} from './log';\nimport {getMode} from './mode';\nimport {hasOwn} from './utils/object';\nimport {parseQueryString} from './url';\n\n/** @const {string} */\nconst TAG = 'EXPERIMENTS';\n\n/** @const {string} */\nconst LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n\n/** @const {string} */\nconst TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n\n/**\n * @typedef {{\n *   isTrafficEligible: function(!Window):boolean,\n *   branches: !Array<string>\n * }}\n */\nexport let ExperimentInfo;\n\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCanary(win) {\n  return !!(win.AMP_CONFIG && win.AMP_CONFIG.canary);\n}\n\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\nexport function getBinaryType(win) {\n  return win.AMP_CONFIG && win.AMP_CONFIG.type\n    ? win.AMP_CONFIG.type\n    : 'unknown';\n}\n\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\nexport function isExperimentOn(win, experimentId) {\n  const toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\nexport function toggleExperiment(\n  win,\n  experimentId,\n  opt_on,\n  opt_transientExperiment\n) {\n  const currentlyOn = isExperimentOn(win, /*OK*/ experimentId);\n  const on = !!(opt_on !== undefined ? opt_on : !currentlyOn);\n  if (on != currentlyOn) {\n    const toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      const storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles);\n      // Avoid affecting tests that spy/stub warn().\n      if (!getMode().test) {\n        user().warn(\n          TAG,\n          '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental',\n          experimentId,\n          on ? 'enabled' : 'disabled',\n          win.location.hostname\n        );\n      }\n    }\n  }\n  return on;\n}\n\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nexport function experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n  win[TOGGLES_WINDOW_PROPERTY] = Object.create(null);\n  const toggles = win[TOGGLES_WINDOW_PROPERTY];\n\n  // Read the default config of this build.\n  if (win.AMP_CONFIG) {\n    for (const experimentId in win.AMP_CONFIG) {\n      const frequency = win.AMP_CONFIG[experimentId];\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  }\n  // Read document level override from meta tag.\n  if (\n    win.AMP_CONFIG &&\n    Array.isArray(win.AMP_CONFIG['allow-doc-opt-in']) &&\n    win.AMP_CONFIG['allow-doc-opt-in'].length > 0\n  ) {\n    const allowed = win.AMP_CONFIG['allow-doc-opt-in'];\n    const meta = win.document.head.querySelector(\n      'meta[name=\"amp-experiments-opt-in\"]'\n    );\n    if (meta) {\n      const optedInExperiments = meta.getAttribute('content').split(',');\n      for (let i = 0; i < optedInExperiments.length; i++) {\n        if (allowed.indexOf(optedInExperiments[i]) != -1) {\n          toggles[optedInExperiments[i]] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  if (\n    win.AMP_CONFIG &&\n    Array.isArray(win.AMP_CONFIG['allow-url-opt-in']) &&\n    win.AMP_CONFIG['allow-url-opt-in'].length > 0\n  ) {\n    const allowed = win.AMP_CONFIG['allow-url-opt-in'];\n    const hash = win.location.originalHash || win.location.hash;\n    const params = parseQueryString(hash);\n    for (let i = 0; i < allowed.length; i++) {\n      const param = params[`e-${allowed[i]}`];\n      if (param == '1') {\n        toggles[allowed[i]] = true;\n      }\n      if (param == '0') {\n        toggles[allowed[i]] = false;\n      }\n    }\n  }\n  return toggles;\n}\n\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {Object<string, boolean>}\n */\nexport function experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nfunction getExperimentToggles(win) {\n  let experimentsString = '';\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch (e) {\n    dev().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n  const tokens = experimentsString ? experimentsString.split(/\\s*,\\s*/g) : [];\n\n  const toggles = Object.create(null);\n  for (let i = 0; i < tokens.length; i++) {\n    if (tokens[i].length == 0) {\n      continue;\n    }\n    if (tokens[i][0] == '-') {\n      toggles[tokens[i].substr(1)] = false;\n    } else {\n      toggles[tokens[i]] = true;\n    }\n  }\n  return toggles;\n}\n\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\nfunction saveExperimentToggles(win, toggles) {\n  const experimentIds = [];\n  for (const experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n  try {\n    if ('localStorage' in win) {\n      win.localStorage.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n    }\n  } catch (e) {\n    user().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\nexport function getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\nexport const RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng,\n};\n\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\nfunction selectRandomItem(arr) {\n  const rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return arr[Math.floor(rn * arr.length)] || null;\n}\n\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Object<string, !ExperimentInfo>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\nexport function randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  const selectedExperiments = {};\n  for (const experimentName in experiments) {\n    // Skip experimentName if it is not a key of experiments object or if it\n    // has already been populated by some other property.\n    if (!hasOwn(experiments, experimentName)) {\n      continue;\n    }\n    if (hasOwn(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (\n      !experiments[experimentName].isTrafficEligible ||\n      !experiments[experimentName].isTrafficEligible(win)\n    ) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    }\n\n    // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n    if (\n      !win.__AMP_EXPERIMENT_BRANCHES[experimentName] &&\n      isExperimentOn(win, /*OK*/ experimentName)\n    ) {\n      const {branches} = experiments[experimentName];\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(\n        branches\n      );\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n  return selectedExperiments;\n}\n\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\nexport function getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES\n    ? win.__AMP_EXPERIMENT_BRANCHES[experimentName]\n    : null;\n}\n\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\nexport function forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Services} from './services';\nimport {VideoEvents} from './video-interface';\nimport {dev} from './log';\nimport {htmlFor} from './static-template';\nimport {isArray, isObject} from './types';\nimport {startsWith} from './string';\nimport {tryParseJson} from './json';\n\n/** @enum {string} */\nexport const SandboxOptions = {\n  ALLOW_SCRIPTS: 'allow-scripts',\n  ALLOW_SAME_ORIGIN: 'allow-same-origin',\n  ALLOW_POPUPS: 'allow-popups',\n  ALLOW_POPUPS_TO_ESCAPE_SANDBOX: 'allow-popups-to-escape-sandbox',\n  ALLOW_TOP_NAVIGATION_BY_USER_ACTIVATION:\n    'allow-top-navigation-by-user-activation',\n};\n\n/**\n * @param {!Event} event\n * @param {?Element} iframe\n * @param {string|!RegExp} host\n * @return {boolean}\n */\nexport function originMatches(event, iframe, host) {\n  if (!iframe || event.source != iframe.contentWindow) {\n    return false;\n  }\n  if (typeof host === 'string') {\n    return host == event.origin;\n  }\n  return host.test(event.origin);\n}\n\n/**\n * Re-dispatches an event received from postMessage as an event in the host\n * document.\n *\n * @param {!AmpElement} element\n * @param {string} event\n * @param {!Object<string, (string|?Array<string>)>} events\n * @return {boolean}\n */\nexport function redispatch(element, event, events) {\n  if (events[event] == null) {\n    return false;\n  }\n  const dispatchEvent = events[event];\n  (isArray(dispatchEvent) ? dispatchEvent : [dispatchEvent]).forEach(e => {\n    element.dispatchCustomEvent(dev().assertString(e));\n  });\n  return true;\n}\n\n/**\n * @param {!./base-element.BaseElement} video\n * @param {string} src\n * @param {string=} opt_name\n * @param {!Array<!SandboxOptions>=} opt_sandbox\n * @return {!Element}\n */\nexport function createFrameFor(video, src, opt_name, opt_sandbox) {\n  const {element} = video;\n  const frame = htmlFor(\n    element\n  )`<iframe frameborder=0 allowfullscreen></iframe>`;\n\n  if (opt_name) {\n    frame.setAttribute('name', opt_name);\n  }\n\n  if (opt_sandbox) {\n    frame.setAttribute('sandbox', opt_sandbox.join(' '));\n  }\n\n  // Will propagate for every component, but only validation rules will actually\n  // allow the attribute to be set.\n  video.propagateAttributes(['referrerpolicy'], frame);\n\n  frame.src = Services.urlForDoc(element).assertHttpsUrl(src, element);\n\n  video.applyFillContent(frame);\n  element.appendChild(frame);\n\n  return frame;\n}\n\n/**\n * @param {?} anything\n * @return {boolean}\n */\nexport function isJsonOrObj(anything) {\n  if (!anything) {\n    return false;\n  }\n  return (\n    isObject(anything) || startsWith(/** @type {string} */ (anything), '{')\n  );\n}\n\n/**\n * @param {?JsonObject|string|undefined} objOrStr\n * @return {?JsonObject|undefined}\n */\nexport function objOrParseJson(objOrStr) {\n  if (isObject(objOrStr)) {\n    return /** @type {!JsonObject} */ (objOrStr);\n  }\n  return tryParseJson(objOrStr);\n}\n\n/**\n * @param {boolean} isMuted\n * @return {string}\n */\nexport function mutedOrUnmutedEvent(isMuted) {\n  return isMuted ? VideoEvents.MUTED : VideoEvents.UNMUTED;\n}\n\n/**\n * TEMPORARY workaround for M72-M74 user-activation breakage.\n * If this method is still here in May 2019, please ping @aghassemi\n * Only used by trusted video players: IMA and YouTube.\n * See https://github.com/ampproject/amphtml/issues/21242 for details.\n * TODO(aghassemi, #21247)\n * @param {Element} iframe\n */\nexport function addUnsafeAllowAutoplay(iframe) {\n  let val = iframe.getAttribute('allow') || '';\n  val += 'autoplay;';\n  iframe.setAttribute('allow', val);\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n\nimport {childElementsByTag, isJsonScriptTag} from './dom';\nimport {isObject} from './types';\n\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {*} should be string|number|boolean|null\n */\nlet JSONScalarDef;\n\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {*} should be !Object<string, ?JSONValueDef>\n */\nlet JSONObjectDef;\n\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {*} should be !Array<?JSONValueDef>\n */\nlet JSONArrayDef;\n\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {*} should be !JSONScalarDef|!JSONObjectDef|!JSONArrayDef\n */\nlet JSONValueDef;\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = Object.create(null);\n  for (const k in obj) {\n    if (!hasOwnProperty(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (let i = 0; i < parts.length; i++) {\n    const part = parts[i];\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      hasOwnProperty(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {*} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function parseJson(json) {\n  return /** @type {?JsonObject} */ (JSON.parse(/** @type {string} */ (json)));\n}\n\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {*} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    if (opt_onFailed) {\n      opt_onFailed(e);\n    }\n    return null;\n  }\n}\n\n/**\n * Helper method to get the json config from an element <script> tag\n * @param {!Element} element\n * @return {?JsonObject}\n * @throws {!Error} If element does not have exactly one <script> child\n * with type=\"application/json\", or if the <script> contents are not valid JSON.\n */\nexport function getChildJsonConfig(element) {\n  const scripts = childElementsByTag(element, 'script');\n  const n = scripts.length;\n  if (n !== 1) {\n    throw new Error(`Found ${scripts.length} <script> children. Expected 1.`);\n  }\n  const script = scripts[0];\n  if (!isJsonScriptTag(script)) {\n    throw new Error('<script> child must have type=\"application/json\"');\n  }\n  try {\n    return parseJson(script.textContent);\n  } catch (unusedError) {\n    throw new Error('Failed to parse <script> contents. Is it valid JSON?');\n  }\n}\n\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\nexport function deepEquals(a, b, depth = 5) {\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n  const queue = [{a, b, depth}];\n  while (queue.length > 0) {\n    const {a, b, depth} = queue.shift();\n    // Only check deep equality if depth > 0.\n    if (depth > 0) {\n      if (typeof a !== typeof b) {\n        return false;\n      } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          queue.push({a: a[i], b: b[i], depth: depth - 1});\n        }\n        continue;\n      } else if (a && b && typeof a === 'object' && typeof b === 'object') {\n        const keysA = Object.keys(/** @type {!Object} */ (a));\n        const keysB = Object.keys(/** @type {!Object} */ (b));\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n        for (let i = 0; i < keysA.length; i++) {\n          const k = keysA[i];\n          queue.push({a: a[k], b: b[k], depth: depth - 1});\n        }\n        continue;\n      }\n    }\n    // If we get here, then depth == 0 or (a, b) are primitives.\n    if (a !== b) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {*} obj\n * @param {string} key\n * @return {boolean}\n */\nfunction hasOwnProperty(obj, key) {\n  if (obj == null || typeof obj != 'object') {\n    return false;\n  }\n  return Object.prototype.hasOwnProperty.call(\n    /** @type {!Object} */ (obj),\n    key\n  );\n}\n\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\nexport function jsonConfiguration(obj) {\n  return /** @type {!JsonObject} */ (obj);\n}\n\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {!Object|!Array|string|number|boolean|null} value\n * @return {!InternalJsonLiteralTypeDef}\n */\nexport function jsonLiteral(value) {\n  return /** @type {!InternalJsonLiteralTypeDef} */ (value);\n}\n\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\nexport function includeJsonLiteral(value) {\n  return value;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implements element layout. See https://goo.gl/9avXuT for\n * details.\n */\n\nimport {dev, devAssert, userAssert} from './log';\nimport {htmlFor} from './static-template';\nimport {isFiniteNumber} from './types';\nimport {setStyle, setStyles, toggle} from './style';\nimport {startsWith} from './string';\n\n/**\n * @enum {string}\n */\nexport const Layout = {\n  NODISPLAY: 'nodisplay',\n  FIXED: 'fixed',\n  FIXED_HEIGHT: 'fixed-height',\n  RESPONSIVE: 'responsive',\n  CONTAINER: 'container',\n  FILL: 'fill',\n  FLEX_ITEM: 'flex-item',\n  FLUID: 'fluid',\n  INTRINSIC: 'intrinsic',\n};\n\n/**\n * Layout priorities to use with BaseElement#getLayoutPriority() and\n * BaseElement#updateLayoutPriority().\n * @enum {number}\n */\nexport const LayoutPriority = {\n  CONTENT: 0,\n  METADATA: 1,\n  ADS: 2,\n  BACKGROUND: 3,\n};\n\n/**\n * CSS Length type. E.g. \"1px\" or \"20vh\".\n * @typedef {string}\n */\nexport let LengthDef;\n\n/**\n * @typedef {{\n *   width: string,\n *   height: string\n * }}\n */\nlet DimensionsDef;\n\n/**\n * The set of elements with natural dimensions, that is, elements\n * which have a known dimension either based on their value specified here,\n * or, if the value is null, a dimension specific to the browser.\n * `hasNaturalDimensions` checks for membership in this set.\n * `getNaturalDimensions` determines the dimensions for an element in the\n *    set and caches it.\n * @type {!Object<string, ?DimensionsDef>}\n * @private  Visible for testing only!\n */\nexport const naturalDimensions_ = {\n  'AMP-PIXEL': {width: '0px', height: '0px'},\n  'AMP-ANALYTICS': {width: '1px', height: '1px'},\n  // TODO(dvoytenko): audio should have width:auto.\n  'AMP-AUDIO': null,\n  'AMP-SOCIAL-SHARE': {width: '60px', height: '44px'},\n};\n\n/**\n * Elements that the progress can be shown for. This set has to be externalized\n * since the element's implementation may not be downloaded yet.\n * This list does not include video players which are found via regex later.\n * @enum {boolean}\n * @private  Visible for testing only!\n */\nexport const LOADING_ELEMENTS_ = {\n  'AMP-AD': true,\n  'AMP-ANIM': true,\n  'AMP-EMBED': true,\n  'AMP-FACEBOOK': true,\n  'AMP-FACEBOOK-COMMENTS': true,\n  'AMP-FACEBOOK-PAGE': true,\n  'AMP-GOOGLE-DOCUMENT-EMBED': true,\n  'AMP-IFRAME': true,\n  'AMP-IMG': true,\n  'AMP-INSTAGRAM': true,\n  'AMP-LIST': true,\n  'AMP-PINTEREST': true,\n  'AMP-PLAYBUZZ': true,\n  'AMP-TWITTER': true,\n};\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they are listed individually.\n * @private @const {!RegExp}\n */\nconst videoPlayerTagNameRe = /^amp\\-(video|.+player)|AMP-BRIGHTCOVE|AMP-DAILYMOTION|AMP-YOUTUBE|AMP-VIMEO|AMP-IMA-VIDEO/i;\n\n/**\n * @param {string} s\n * @return {Layout|undefined} Returns undefined in case of failure to parse\n *   the layout string.\n */\nexport function parseLayout(s) {\n  for (const k in Layout) {\n    if (Layout[k] == s) {\n      return Layout[k];\n    }\n  }\n  return undefined;\n}\n\n/**\n * @param {!Layout} layout\n * @return {string}\n */\nexport function getLayoutClass(layout) {\n  return 'i-amphtml-layout-' + layout;\n}\n\n/**\n * Whether an element with this layout inherently defines the size.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeDefined(layout) {\n  return (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.FILL ||\n    layout == Layout.FLEX_ITEM ||\n    layout == Layout.FLUID ||\n    layout == Layout.INTRINSIC\n  );\n}\n\n/**\n * Whether an element with this layout has a fixed dimension.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeFixed(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT;\n}\n\n/**\n * Whether the tag is an internal (service) AMP tag.\n * @param {!Node|string} tag\n * @return {boolean}\n */\nexport function isInternalElement(tag) {\n  const tagName = typeof tag == 'string' ? tag : tag.tagName;\n  return tagName && startsWith(tagName.toLowerCase(), 'i-');\n}\n\n/**\n * Parses the CSS length value. If no units specified, the assumed value is\n * \"px\". Returns undefined in case of parsing error.\n * @param {string|undefined|null} s\n * @return {!LengthDef|undefined}\n */\nexport function parseLength(s) {\n  if (typeof s == 'number') {\n    return s + 'px';\n  }\n  if (!s) {\n    return undefined;\n  }\n  if (!/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)?$/.test(s)) {\n    return undefined;\n  }\n  if (/^\\d+(\\.\\d+)?$/.test(s)) {\n    return s + 'px';\n  }\n  return s;\n}\n\n/**\n * Asserts that the supplied value is a non-percent CSS Length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLength(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)$/.test(length),\n    'Invalid length value: %s',\n    length\n  );\n  return /** @type {!LengthDef} */ (length);\n}\n\n/**\n * Asserts that the supplied value is a CSS Length value\n * (including percent unit).\n * @param {!LengthDef|string} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLengthOrPercent(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|%)$/.test(length),\n    'Invalid length or percent value: %s',\n    length\n  );\n  return length;\n}\n\n/**\n * Returns units from the CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {string}\n */\nexport function getLengthUnits(length) {\n  assertLength(length);\n  dev().assertString(length);\n  const m = userAssert(\n    length.match(/[a-z]+/i),\n    'Failed to read units from %s',\n    length\n  );\n  return m[0];\n}\n\n/**\n * Returns the numeric value of a CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {number|undefined}\n */\nexport function getLengthNumeral(length) {\n  const res = parseFloat(length);\n  return isFiniteNumber(res) ? res : undefined;\n}\n\n/**\n * Determines whether the tagName is a known element that has natural dimensions\n * in our runtime or the browser.\n * @param {string} tagName The element tag name.\n * @return {boolean}\n */\nexport function hasNaturalDimensions(tagName) {\n  tagName = tagName.toUpperCase();\n  return naturalDimensions_[tagName] !== undefined;\n}\n\n/**\n * Determines the default dimensions for an element which could vary across\n * different browser implementations, like <audio> for instance.\n * This operation can only be completed for an element whitelisted by\n * `hasNaturalDimensions`.\n * @param {!Element} element\n * @return {DimensionsDef}\n */\nexport function getNaturalDimensions(element) {\n  const tagName = element.tagName.toUpperCase();\n  devAssert(naturalDimensions_[tagName] !== undefined);\n  if (!naturalDimensions_[tagName]) {\n    const doc = element.ownerDocument;\n    const naturalTagName = tagName.replace(/^AMP\\-/, '');\n    const temp = doc.createElement(naturalTagName);\n    // For audio, should no-op elsewhere.\n    temp.controls = true;\n    setStyles(temp, {\n      position: 'absolute',\n      visibility: 'hidden',\n    });\n    doc.body.appendChild(temp);\n    naturalDimensions_[tagName] = {\n      width: (temp./*OK*/ offsetWidth || 1) + 'px',\n      height: (temp./*OK*/ offsetHeight || 1) + 'px',\n    };\n    doc.body.removeChild(temp);\n  }\n  return /** @type {DimensionsDef} */ (naturalDimensions_[tagName]);\n}\n\n/**\n * Whether the loading can be shown for the specified elemeent. This set has\n * to be externalized since the element's implementation may not be\n * downloaded yet.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isLoadingAllowed(element) {\n  const tagName = element.tagName.toUpperCase();\n  return LOADING_ELEMENTS_[tagName] || isIframeVideoPlayerComponent(tagName);\n}\n\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they're present in the LOADING_ELEMENTS_ whitelist.\n * @param {string} tagName\n * @return {boolean}\n */\nexport function isIframeVideoPlayerComponent(tagName) {\n  if (tagName == 'AMP-VIDEO') {\n    return false;\n  }\n  return videoPlayerTagNameRe.test(tagName);\n}\n\n/**\n * Applies layout to the element. Visible for testing only.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this method is used for server-side rendering (SSR) and\n * any changes made to it must be made in coordination with caches that\n * implement SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @param {!Element} element\n * @return {!Layout}\n */\nexport function applyStaticLayout(element) {\n  // Check if the layout has already been done by server-side rendering or\n  // client-side rendering and the element was cloned. The document may be\n  // visible to the user if the boilerplate was removed so please take care in\n  // making changes here.\n  const completedLayoutAttr = element.getAttribute('i-amphtml-layout');\n  if (completedLayoutAttr) {\n    const layout = /** @type {!Layout} */ (devAssert(\n      parseLayout(completedLayoutAttr)\n    ));\n    if (\n      (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) &&\n      element.firstElementChild\n    ) {\n      // Find sizer, but assume that it might not have been parsed yet.\n      element.sizerElement =\n        element.querySelector('i-amphtml-sizer') || undefined;\n    } else if (layout == Layout.NODISPLAY) {\n      toggle(element, false);\n      // TODO(jridgewell): Temporary hack while SSR still adds an inline\n      // `display: none`\n      element['style']['display'] = '';\n    }\n    return layout;\n  }\n\n  // If the layout was already done by server-side rendering (SSR), then the\n  // code below will not run. Any changes below will necessitate a change to SSR\n  // and must be coordinated with caches that implement SSR. See bit.ly/amp-ssr.\n\n  // Parse layout from the element.\n  const layoutAttr = element.getAttribute('layout');\n  const widthAttr = element.getAttribute('width');\n  const heightAttr = element.getAttribute('height');\n  const sizesAttr = element.getAttribute('sizes');\n  const heightsAttr = element.getAttribute('heights');\n\n  // Input layout attributes.\n  const inputLayout = layoutAttr ? parseLayout(layoutAttr) : null;\n  userAssert(inputLayout !== undefined, 'Unknown layout: %s', layoutAttr);\n  /** @const {string|null|undefined} */\n  const inputWidth =\n    widthAttr && widthAttr != 'auto' ? parseLength(widthAttr) : widthAttr;\n  userAssert(inputWidth !== undefined, 'Invalid width value: %s', widthAttr);\n  /** @const {string|null|undefined} */\n  const inputHeight =\n    heightAttr && heightAttr != 'fluid' ? parseLength(heightAttr) : heightAttr;\n  userAssert(inputHeight !== undefined, 'Invalid height value: %s', heightAttr);\n\n  // Effective layout attributes. These are effectively constants.\n  let width;\n  let height;\n  let layout;\n\n  // Calculate effective width and height.\n  if (\n    (!inputLayout ||\n      inputLayout == Layout.FIXED ||\n      inputLayout == Layout.FIXED_HEIGHT) &&\n    (!inputWidth || !inputHeight) &&\n    hasNaturalDimensions(element.tagName)\n  ) {\n    // Default width and height: handle elements that do not specify a\n    // width/height and are defined to have natural browser dimensions.\n    const dimensions = getNaturalDimensions(element);\n    width =\n      inputWidth || inputLayout == Layout.FIXED_HEIGHT\n        ? inputWidth\n        : dimensions.width;\n    height = inputHeight || dimensions.height;\n  } else {\n    width = inputWidth;\n    height = inputHeight;\n  }\n\n  // Calculate effective layout.\n  if (inputLayout) {\n    layout = inputLayout;\n  } else if (!width && !height) {\n    layout = Layout.CONTAINER;\n  } else if (height == 'fluid') {\n    layout = Layout.FLUID;\n  } else if (height && (!width || width == 'auto')) {\n    layout = Layout.FIXED_HEIGHT;\n  } else if (height && width && (sizesAttr || heightsAttr)) {\n    layout = Layout.RESPONSIVE;\n  } else {\n    layout = Layout.FIXED;\n  }\n\n  // Verify layout attributes.\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(height, 'Expected height to be available: %s', heightAttr);\n  }\n  if (layout == Layout.FIXED_HEIGHT) {\n    userAssert(\n      !width || width == 'auto',\n      'Expected width to be either absent or equal \"auto\" ' +\n        'for fixed-height layout: %s',\n      widthAttr\n    );\n  }\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(\n      width && width != 'auto',\n      'Expected width to be available and not equal to \"auto\": %s',\n      widthAttr\n    );\n  }\n\n  if (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    userAssert(\n      getLengthUnits(width) == getLengthUnits(height),\n      'Length units should be the same for width and height: %s, %s',\n      widthAttr,\n      heightAttr\n    );\n  } else {\n    userAssert(\n      heightsAttr === null,\n      'Unexpected \"heights\" attribute for none-responsive layout'\n    );\n  }\n\n  // Apply UI.\n  element.classList.add(getLayoutClass(layout));\n  if (isLayoutSizeDefined(layout)) {\n    element.classList.add('i-amphtml-layout-size-defined');\n  }\n  if (layout == Layout.NODISPLAY) {\n    // CSS defines layout=nodisplay automatically with `display:none`. Thus\n    // no additional styling is needed.\n    toggle(element, false);\n    // TODO(jridgewell): Temporary hack while SSR still adds an inline\n    // `display: none`\n    element['style']['display'] = '';\n  } else if (layout == Layout.FIXED) {\n    setStyles(element, {\n      width: dev().assertString(width),\n      height: dev().assertString(height),\n    });\n  } else if (layout == Layout.FIXED_HEIGHT) {\n    setStyle(element, 'height', dev().assertString(height));\n  } else if (layout == Layout.RESPONSIVE) {\n    const sizer = element.ownerDocument.createElement('i-amphtml-sizer');\n    setStyles(sizer, {\n      paddingTop:\n        (getLengthNumeral(height) / getLengthNumeral(width)) * 100 + '%',\n    });\n    element.insertBefore(sizer, element.firstChild);\n    element.sizerElement = sizer;\n  } else if (layout == Layout.INTRINSIC) {\n    // Intrinsic uses an svg inside the sizer element rather than the padding\n    // trick Note a naked svg won't work becasue other thing expect the\n    // i-amphtml-sizer element\n    const sizer = htmlFor(element)`\n      <i-amphtml-sizer class=\"i-amphtml-sizer\">\n        <img alt=\"\" role=\"presentation\" aria-hidden=\"true\"\n             class=\"i-amphtml-intrinsic-sizer\" />\n      </i-amphtml-sizer>`;\n    const intrinsicSizer = sizer.firstElementChild;\n    intrinsicSizer.setAttribute(\n      'src',\n      `data:image/svg+xml;charset=utf-8,<svg height=\"${height}\" width=\"${width}\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"/>`\n    );\n    element.insertBefore(sizer, element.firstChild);\n    element.sizerElement = sizer;\n  } else if (layout == Layout.FILL) {\n    // Do nothing.\n  } else if (layout == Layout.CONTAINER) {\n    // Do nothing. Elements themselves will check whether the supplied\n    // layout value is acceptable. In particular container is only OK\n    // sometimes.\n  } else if (layout == Layout.FLEX_ITEM) {\n    // Set height and width to a flex item if they exist.\n    // The size set to a flex item could be overridden by `display: flex` later.\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    if (height) {\n      setStyle(element, 'height', height);\n    }\n  } else if (layout == Layout.FLUID) {\n    element.classList.add('i-amphtml-layout-awaiting-size');\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    setStyle(element, 'height', 0);\n  }\n  // Mark the element as having completed static layout, in case it is cloned\n  // in the future.\n  element.setAttribute('i-amphtml-layout', layout);\n  return layout;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\nimport {getModeObject} from './mode-object';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray, isEnumValue} from './types';\nimport {once} from './utils/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n * @private Visible for testing only.\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error.js to break cyclic\n * dependency.\n * @param {function(*, !Element=)|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = arg =>\n  encodeURIComponent(String(elementStringOrPassthru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don’t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(!./mode.ModeDef):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(!./mode.ModeDef):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then(response => response.json(), noop)\n        .then(opt_messages => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    // Delegate to the specific resolver.\n    return this.levelFunc_(getModeObject());\n  }\n\n  /**\n   * @param {string} tag\n   * @param {string} level\n   * @param {!Array} messages\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() != LogLevel.OFF) {\n      let fn = this.win.console.log;\n      if (level == 'ERROR') {\n        fn = this.win.console.error || fn;\n      } else if (level == 'INFO') {\n        fn = this.win.console.info || fn;\n      } else if (level == 'WARN') {\n        fn = this.win.console.warn || fn;\n      }\n      const args = this.maybeExpandMessageArgs_(messages);\n      // Prefix console message with \"[tag]\".\n      const prefix = `[${tag}]`;\n      if (typeof args[0] === 'string') {\n        // Prepend string to avoid breaking string substitutions e.g. %s.\n        args[0] = prefix + ' ' + args[0];\n      } else {\n        args.unshift(prefix);\n      }\n      fn.apply(this.win.console, args);\n    }\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  fine(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.FINE) {\n      this.msg_(tag, 'FINE', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  info(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.INFO) {\n      this.msg_(tag, 'INFO', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  warn(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.WARN) {\n      this.msg_(tag, 'WARN', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} var_args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.ERROR) {\n      this.msg_(tag, 'ERROR', Array.prototype.slice.call(arguments, 1));\n    } else {\n      const error = createErrorVargs.apply(\n        null,\n        Array.prototype.slice.call(arguments, 1)\n      );\n      this.prepareError_(error);\n      return error;\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * NOTE: for an explanation of the tempate R implementation see\n   * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {R} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is `null` or `undefined`.\n   * @template T\n   * @template R :=\n   *     mapunion(T, (V) =>\n   *         cond(eq(V, 'null'),\n   *             none(),\n   *             cond(eq(V, 'undefined'),\n   *                 none(),\n   *                 V)))\n   *  =:\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    let firstElement;\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n    if (!shouldBeTrueish) {\n      const message = opt_message || 'Assertion failed';\n      const splitMessage = message.split('%s');\n      const first = splitMessage.shift();\n      let formatted = first;\n      const messageArray = [];\n      let i = 2;\n      pushIfNonEmpty(messageArray, first);\n      while (splitMessage.length > 0) {\n        const nextConstant = splitMessage.shift();\n        const val = arguments[i++];\n        if (val && val.tagName) {\n          firstElement = val;\n        }\n        messageArray.push(val);\n        pushIfNonEmpty(messageArray, nextConstant.trim());\n        formatted += stringOrElementString(val) + nextConstant;\n      }\n      const e = new Error(formatted);\n      e.fromAssert = true;\n      e.associatedElement = firstElement;\n      e.messageArray = messageArray;\n      this.prepareError_(e);\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n      throw e;\n    }\n    return shouldBeTrueish;\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    const shouldBeTrueish = shouldBeElement && shouldBeElement.nodeType == 1;\n    this.assertType_(\n      shouldBeElement,\n      shouldBeTrueish,\n      'Element expected',\n      opt_message\n    );\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    this.assertType_(\n      shouldBeString,\n      typeof shouldBeString == 'string',\n      'String expected',\n      opt_message\n    );\n    return /** @type {string} */ (shouldBeString);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    this.assertType_(\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    );\n    return /** @type {number} */ (shouldBeNumber);\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    this.assertType_(\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    );\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    this.assertType_(\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    );\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n\n  /**\n   * Asserts and returns the enum value. If the enum doesn't contain such a\n   * value, the error is thrown.\n   *\n   * @param {!Object<T>} enumObj\n   * @param {string} s\n   * @param {string=} opt_enumName\n   * @return {T}\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertEnumValue(enumObj, s, opt_enumName) {\n    if (isEnumValue(enumObj, s)) {\n      return s;\n    }\n    this.assert(false, 'Unknown %s value: \"%s\"', opt_enumName || 'enum', s);\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n\n  /**\n   * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n   *\n   * It understands array-based \"id\"-contracted messages.\n   *\n   * Otherwise creates a sprintf syntax string containing the optional message or the\n   * default. An interpolation token is added at the end to include the `subject`.\n   * @param {*} subject\n   * @param {*} assertion\n   * @param {string} defaultMessage\n   * @param {!Array|string=} opt_message\n   * @private\n   */\n  assertType_(subject, assertion, defaultMessage, opt_message) {\n    if (isArray(opt_message)) {\n      this.assert(assertion, opt_message.concat(subject));\n    } else {\n      this.assert(assertion, `${opt_message || defaultMessage}: %s`, subject);\n    }\n  }\n}\n\n/**\n * @param {string|!Element} val\n * @return {string}\n */\nconst stringOrElementString = val =>\n  /** @type {string} */ (elementStringOrPassthru(val));\n\n/**\n * @param {*} val\n * @return {*}\n */\nfunction elementStringOrPassthru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (val && val.nodeType == 1) {\n    return val.tagName.toLowerCase() + (val.id ? '#' + val.id : '');\n  }\n  return val;\n}\n\n/**\n * @param {!Array} array\n * @param {*} val\n */\nfunction pushIfNonEmpty(array, val) {\n  if (val != '') {\n    array.push(val);\n  }\n}\n\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\nexport function duplicateErrorIfNecessary(error) {\n  const messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n  if (messageProperty && messageProperty.writable) {\n    return error;\n  }\n\n  const {message, stack} = error;\n  const e = new Error(message);\n  // Copy all the extraneous things we attach.\n  for (const prop in error) {\n    e[prop] = error[prop];\n  }\n  // Ensure these are copied.\n  e.stack = stack;\n  return e;\n}\n\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\nexport function createErrorVargs(var_args) {\n  let error = null;\n  let message = '';\n  for (let i = 0; i < arguments.length; i++) {\n    const arg = arguments[i];\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n  return error;\n}\n\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\nexport function rethrowAsync(var_args) {\n  const error = createErrorVargs.apply(null, arguments);\n  setTimeout(() => {\n    // reportError is installed globally per window in the entry point.\n    self.__AMP_REPORT_ERROR(error);\n    throw error;\n  });\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?Function}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log contructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log contructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    mode => {\n      const logNum = parseInt(mode.log, 10);\n      if (mode.development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, mode => {\n    const logNum = parseInt(mode.log, 10);\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Services} from './services';\nimport {devAssert, userAssert} from './log';\nimport {isArray, isObject} from './types';\nimport {tryParseJson} from './json';\n\n/**\n * @typedef {{\n *   artwork: Array,\n *   title: string,\n *   album: string,\n *   artist: string,\n * }}\n */\nexport let MetadataDef;\n\n/** @const {MetadataDef} Dummy metadata used to fix a bug */\nexport const EMPTY_METADATA = {\n  'title': '',\n  'artist': '',\n  'album': '',\n  'artwork': [{'src': ''}],\n};\n\n/**\n * Updates the Media Session API's metadata\n * @param {!Element} element\n * @param {!Window} win\n * @param {!MetadataDef} metadata\n * @param {function()=} playHandler\n * @param {function()=} pauseHandler\n */\nexport function setMediaSession(\n  element,\n  win,\n  metadata,\n  playHandler,\n  pauseHandler\n) {\n  const {navigator} = win;\n  if ('mediaSession' in navigator && win.MediaMetadata) {\n    // Clear mediaSession (required to fix a bug when switching between two\n    // videos)\n    navigator.mediaSession.metadata = new win.MediaMetadata(EMPTY_METADATA);\n\n    // Add metadata\n    validateMetadata(element, metadata);\n    navigator.mediaSession.metadata = new win.MediaMetadata(metadata);\n\n    navigator.mediaSession.setActionHandler('play', playHandler);\n    navigator.mediaSession.setActionHandler('pause', pauseHandler);\n\n    // TODO(@wassgha) Implement seek & next/previous\n  }\n}\n\n/**\n * Parses the schema.org json-ld formatted meta-data, looks for the page's\n * featured image and returns it\n * @param {!Document} doc\n * @return {string|undefined}\n */\nexport function parseSchemaImage(doc) {\n  const schema = doc.querySelector('script[type=\"application/ld+json\"]');\n  if (!schema) {\n    // No schema element found\n    return;\n  }\n  const schemaJson = tryParseJson(schema.textContent);\n  if (!schemaJson || !schemaJson['image']) {\n    // No image found in the schema\n    return;\n  }\n\n  // Image definition in schema could be one of :\n  if (typeof schemaJson['image'] === 'string') {\n    // 1. \"image\": \"http://..\",\n    return schemaJson['image'];\n  } else if (\n    schemaJson['image']['@list'] &&\n    typeof schemaJson['image']['@list'][0] === 'string'\n  ) {\n    // 2. \"image\": {.., \"@list\": [\"http://..\"], ..}\n    return schemaJson['image']['@list'][0];\n  } else if (typeof schemaJson['image']['url'] === 'string') {\n    // 3. \"image\": {.., \"url\": \"http://..\", ..}\n    return schemaJson['image']['url'];\n  } else if (typeof schemaJson['image'][0] === 'string') {\n    // 4. \"image\": [\"http://.. \"]\n    return schemaJson['image'][0];\n  } else {\n    return;\n  }\n}\n\n/**\n * Parses the og:image if it exists and returns it\n * @param {!Document} doc\n * @return {string|undefined}\n */\nexport function parseOgImage(doc) {\n  const metaTag = doc.querySelector('meta[property=\"og:image\"]');\n  if (metaTag) {\n    return metaTag.getAttribute('content');\n  } else {\n    return;\n  }\n}\n\n/**\n * Parses the website's Favicon and returns it\n * @param {!Document} doc\n * @return {string|undefined}\n */\nexport function parseFavicon(doc) {\n  const linkTag =\n    doc.querySelector('link[rel=\"shortcut icon\"]') ||\n    doc.querySelector('link[rel=\"icon\"]');\n  if (linkTag) {\n    return linkTag.getAttribute('href');\n  } else {\n    return;\n  }\n}\n\n/**\n * @param {!Element} element\n * @param {!MetadataDef} metadata\n * @private\n */\nfunction validateMetadata(element, metadata) {\n  const urlService = Services.urlForDoc(element);\n  // Ensure src of artwork has valid protocol\n  if (metadata && metadata.artwork) {\n    const {artwork} = metadata;\n    devAssert(isArray(artwork));\n    artwork.forEach(item => {\n      if (item) {\n        const src = isObject(item) ? item.src : item;\n        userAssert(urlService.isProtocolValid(src));\n      }\n    });\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\n\n/**\n * Provides info about the current app. This return value may be cached and\n * passed around as it will always be DCE'd.\n * @param {?Window=} opt_win\n * @return {!./mode.ModeDef}\n */\nexport function getModeObject(opt_win) {\n  return {\n    localDev: getMode(opt_win).localDev,\n    development: getMode(opt_win).development,\n    filter: getMode(opt_win).filter,\n    minified: getMode(opt_win).minified,\n    lite: getMode(opt_win).lite,\n    test: getMode(opt_win).test,\n    log: getMode(opt_win).log,\n    version: getMode(opt_win).version,\n    rtvVersion: getMode(opt_win).rtvVersion,\n    singlePassType: getMode(opt_win).singlePassType,\n  };\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString_} from './url-parse-query-string';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   filter: (string|undefined),\n *   minified: boolean,\n *   lite: boolean,\n *   test: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   singlePassType: (string|undefined)\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_DEV is only replaced when `gulp dist` is called without the\n  // --fortesting flag.\n  const IS_DEV = true;\n  const IS_MINIFIED = false;\n\n  const localDevEnabled = !!AMP_CONFIG.localDev;\n  const runningTests =\n    !!AMP_CONFIG.test || (IS_DEV && !!(win.__AMP_TEST || win.__karma__));\n  const runningTestsOnIe = win.__karma__ && win.__karma__.config.amp.testOnIe;\n  const isLocalDev = IS_DEV && (localDevEnabled || runningTests);\n  const hashQuery = parseQueryString_(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location.originalHash || win.location.hash\n  );\n  const singlePassType = AMP_CONFIG.spt;\n\n  const searchQuery = parseQueryString_(win.location.search);\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win, isLocalDev);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `gulp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    // Triggers validation or enable pub level logging. Validation can be\n    // bypassed via #validate=0.\n    // Note that AMP_DEV_MODE flag is used for testing purposes.\n    // Use Array.indexOf instead of Array.includes because of #24219\n    development: !!(\n      ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].indexOf(\n        hashQuery['development']\n      ) >= 0 || win.AMP_DEV_MODE\n    ),\n    examiner: hashQuery['development'] == '2',\n    // Allows filtering validation errors by error category. For the\n    // available categories, see ErrorCategory in validator/validator.proto.\n    filter: hashQuery['filter'],\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    // amp-user-location override\n    userLocationOverride: hashQuery['amp-user-location'],\n    minified: IS_MINIFIED,\n    // Whether document is in an amp-lite viewer. It signal that the user\n    // would prefer to use less bandwidth.\n    lite: searchQuery['amp_lite'] != undefined,\n    test: runningTests,\n    testIe: runningTestsOnIe,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n    singlePassType,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n */\nfunction getRtvVersion(win, isLocalDev) {\n  // If it's local dev then we won't actually have a full version so\n  // just use the version.\n  if (isLocalDev) {\n    return internalRuntimeVersion();\n  }\n\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win, isLocalDev) {\n  return getRtvVersion(win, isLocalDev);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This class helps to manage observers. Observers can be added, removed or\n * fired through and instance of this class.\n * @template TYPE\n */\nexport class Observable {\n  /**\n   * Creates an instance of Observable.\n   */\n  constructor() {\n    /** @type {?Array<function(TYPE)>} */\n    this.handlers_ = null;\n  }\n\n  /**\n   * Adds the observer to this instance.\n   * @param {function(TYPE)} handler Observer's handler.\n   * @return {!UnlistenDef}\n   */\n  add(handler) {\n    if (!this.handlers_) {\n      this.handlers_ = [];\n    }\n    this.handlers_.push(handler);\n    return () => {\n      this.remove(handler);\n    };\n  }\n\n  /**\n   * Removes the observer from this instance.\n   * @param {function(TYPE)} handler Observer's instance.\n   */\n  remove(handler) {\n    if (!this.handlers_) {\n      return;\n    }\n    const index = this.handlers_.indexOf(handler);\n    if (index > -1) {\n      this.handlers_.splice(index, 1);\n    }\n  }\n\n  /**\n   * Removes all observers.\n   */\n  removeAll() {\n    if (!this.handlers_) {\n      return;\n    }\n    this.handlers_.length = 0;\n  }\n\n  /**\n   * Fires an event. All observers are called.\n   * @param {TYPE=} opt_event\n   */\n  fire(opt_event) {\n    if (!this.handlers_) {\n      return;\n    }\n    const handlers = this.handlers_;\n    for (let i = 0; i < handlers.length; i++) {\n      const handler = handlers[i];\n      handler(opt_event);\n    }\n  }\n\n  /**\n   * Returns number of handlers. Mostly needed for tests.\n   * @return {number}\n   */\n  getHandlerCount() {\n    if (!this.handlers_) {\n      return 0;\n    }\n    return this.handlers_.length;\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\nimport {devAssert} from './log';\nimport {getServicePromise} from './service';\n\n/**\n * A map of services that delay rendering. The key is the name of the service\n * and the value is a DOM query which is used to check if the service is needed\n * in the current document.\n * Do not add a service unless absolutely necessary.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this list is used for server-side rendering (SSR) and any\n * changes made to it must be made in coordination with caches that implement\n * SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @const {!Object<string, string>}\n */\nconst SERVICES = {\n  'amp-dynamic-css-classes': '[custom-element=amp-dynamic-css-classes]',\n  'variant': 'amp-experiment',\n  'amp-story-render': 'amp-story[standalone]',\n};\n\n/**\n * Base class for render delaying services.\n * This should be extended to ensure the service\n * is properly handled\n *\n * @interface\n */\nexport class RenderDelayingService {\n  /**\n   * Function to return a promise for when\n   * it is finished delaying render, and is ready.\n   * NOTE: This should simply return Promise.resolve,\n   * if your service does not need to perform any logic\n   * after being registered.\n   * @return {!Promise}\n   */\n  whenReady() {}\n}\n\n/**\n * Maximum milliseconds to wait for all extensions to load before erroring.\n * @const\n */\nconst LOAD_TIMEOUT = 3000;\n\n/**\n * Detects any render delaying services that are required on the page, and\n * returns a promise with a timeout.\n * @param {!Window} win\n * @return {!Promise<!Array<*>>} resolves to an Array that has the same length\n *     as the detected render delaying services\n */\nexport function waitForServices(win) {\n  const promises = includedServices(win).map(serviceId => {\n    const serviceReadyPromise = getServicePromise(win, serviceId).then(\n      service => {\n        if (service && isRenderDelayingService(service)) {\n          return service.whenReady().then(() => {\n            return service;\n          });\n        }\n        return service;\n      }\n    );\n\n    return Services.timerFor(win).timeoutPromise(\n      LOAD_TIMEOUT,\n      serviceReadyPromise,\n      `Render timeout waiting for service ${serviceId} to be ready.`\n    );\n  });\n  return Promise.all(promises);\n}\n\n/**\n * Returns true if the page has a render delaying service.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function hasRenderDelayingServices(win) {\n  return includedServices(win).length > 0;\n}\n\n/**\n * Function to determine if the passed\n * Object is a Render Delaying Service\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isRenderDelayingService(service) {\n  const maybeRenderDelayingService = /** @type {!RenderDelayingService}*/ (service);\n  return typeof maybeRenderDelayingService.whenReady == 'function';\n}\n\n/**\n * Detects which, if any, render-delaying extensions are included on the page.\n * @param {!Window} win\n * @return {!Array<string>}\n */\nexport function includedServices(win) {\n  /** @const {!Document} */\n  const doc = win.document;\n  devAssert(doc.body);\n\n  return Object.keys(SERVICES).filter(service => {\n    return doc.querySelector(SERVICES[service]);\n  });\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from './utils/promise';\nimport {dev, devAssert} from './log';\nimport {isExperimentOn} from './experiments';\nimport {toWin} from './types';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (?function(new:Object, !Window)|\n *          ?function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Services must implement this interface to be embeddable in FIEs.\n * @interface\n */\nexport class EmbeddableService {\n  /**\n   * Installs a new instance of the service in the given FIE window.\n   * @param {!Window} unusedEmbedWin\n   * @param {!./service/ampdoc-impl.AmpDoc} unusedAmpDoc\n   */\n  static installInEmbedWindow(unusedEmbedWin, unusedAmpDoc) {}\n}\n\n/**\n * Returns a service with the given id. Assumes that it has been constructed\n * already.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\nexport function getExistingServiceForDocInEmbedScope(element, id) {\n  // TODO(#22733): completely remove this method once ampdoc-fie launches.\n  const document = element.ownerDocument;\n  const win = toWin(document.defaultView);\n  const topWin = getTopWindow(win);\n  // First, try to resolve via local embed window (if applicable).\n  const isEmbed = win != topWin;\n  const ampdocFieExperimentOn = isExperimentOn(topWin, 'ampdoc-fie');\n  if (isEmbed && !ampdocFieExperimentOn) {\n    if (isServiceRegistered(win, id)) {\n      return getServiceInternal(win, id);\n    }\n    // Fallback from FIE to parent is intentionally unsupported for safety.\n    return null;\n  } else {\n    // Resolve via the element's ampdoc.\n    return getServiceForDocOrNullInternal(element, id);\n  }\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedScope(embedWin, id, service) {\n  const topWin = getTopWindow(embedWin);\n  devAssert(\n    embedWin != topWin,\n    'Service override can only be installed in embed window: %s',\n    id\n  );\n  devAssert(\n    !isServiceRegistered(embedWin, id),\n    'Service override has already been installed: %s',\n    id\n  );\n  const ampdocFieExperimentOn = isExperimentOn(topWin, 'ampdoc-fie');\n  if (ampdocFieExperimentOn) {\n    const ampdoc = getAmpdoc(embedWin.document);\n    registerServiceInternal(\n      getAmpdocServiceHolder(ampdoc),\n      ampdoc,\n      id,\n      () => service,\n      /* override */ true\n    );\n  } else {\n    registerServiceInternal(embedWin, embedWin, id, () => service);\n    getServiceInternal(embedWin, id); // Force service to build.\n  }\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\nfunction getServiceForDocOrNullInternal(element, id) {\n  const ampdoc = getAmpdoc(element);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = toWin(\n      /** @type {!Document} */ (nodeOrDoc.ownerDocument || nodeOrDoc)\n        .defaultView\n    );\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (getService(\n    win,\n    'ampdoc'\n  ));\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n * @template T\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.ctor = null;\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n */\nfunction registerServiceInternal(holder, context, id, ctor, opt_override) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n    };\n  }\n\n  if (!opt_override && (s.ctor || s.obj)) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  // TODO(dvoytenko): Consider marking holder as destroyed for later-arriving\n  // service to be canceled automatically.\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then(instance =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * Adopts an embeddable (implements `EmbeddableService` interface) service\n * in embed scope.\n * @param {!Window} embedWin\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} serviceClass\n * @suppress {missingProperties}\n * @return {boolean}\n */\nexport function installServiceInEmbedIfEmbeddable(embedWin, serviceClass) {\n  const isEmbeddableService =\n    typeof serviceClass.installInEmbedWindow === 'function';\n  if (!isEmbeddableService) {\n    return false;\n  }\n  const frameElement = dev().assertElement(\n    embedWin.frameElement,\n    'frameElement not found for embed'\n  );\n  const ampdoc = getAmpdoc(frameElement);\n  serviceClass.installInEmbedWindow(embedWin, ampdoc);\n  return true;\n}\n\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    () => service\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have an implementation or a constructor.\n  return !!(service && (service.ctor || service.obj));\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, resolve, reject} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ActionTrust} from '../action-constants';\nimport {\n  EMPTY_METADATA,\n  parseFavicon,\n  parseOgImage,\n  parseSchemaImage,\n  setMediaSession,\n} from '../mediasession-helper';\nimport {\n  MIN_VISIBILITY_RATIO_FOR_AUTOPLAY,\n  PlayingStates,\n  VideoAnalyticsEvents,\n  VideoAttributes,\n  VideoEvents,\n  VideoServiceSignals,\n  userInteractedWith,\n  videoAnalyticsCustomEventTypeKey,\n} from '../video-interface';\nimport {Services} from '../services';\nimport {VideoSessionManager} from './video-session-manager';\nimport {VideoUtils, getInternalVideoElementFor} from '../utils/video';\nimport {clamp} from '../utils/math';\nimport {\n  createCustomEvent,\n  getData,\n  listen,\n  listenOnce,\n  listenOncePromise,\n} from '../event-helper';\nimport {dev, devAssert, user, userAssert} from '../log';\nimport {dict, map} from '../utils/object';\nimport {getMode} from '../mode';\nimport {installAutoplayStylesForDoc} from './video/install-autoplay-styles';\nimport {isFiniteNumber} from '../types';\nimport {once} from '../utils/function';\nimport {registerServiceBuilderForDoc} from '../service';\nimport {removeElement} from '../dom';\nimport {renderIcon, renderInteractionOverlay} from './video/autoplay';\nimport {startsWith} from '../string';\nimport {toggle} from '../style';\n\n/** @private @const {string} */\nconst TAG = 'video-manager';\n\n/**\n * @private {number} The minimum number of milliseconds to wait between each\n * video-seconds-played analytics event.\n */\nconst SECONDS_PLAYED_MIN_DELAY = 1000;\n\n/**\n * VideoManager keeps track of all AMP video players that implement\n * the common Video API {@see ../video-interface.VideoInterface}.\n *\n * It is responsible for providing a unified user experience and analytics for\n * all videos within a document.\n *\n * @implements {../service.Disposable}\n */\nexport class VideoManager {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @const {!./ampdoc-impl.AmpDoc}  */\n    this.ampdoc = ampdoc;\n\n    /** @const */\n    this.installAutoplayStyles = once(() =>\n      installAutoplayStylesForDoc(this.ampdoc)\n    );\n\n    /** @private {!../service/viewport/viewport-interface.ViewportInterface} */\n    this.viewport_ = Services.viewportForDoc(this.ampdoc);\n\n    /** @private {?Array<!VideoEntry>} */\n    this.entries_ = null;\n\n    /** @private {boolean} */\n    this.scrollListenerInstalled_ = false;\n\n    /** @private @const */\n    this.timer_ = Services.timerFor(ampdoc.win);\n\n    /** @private @const */\n    this.actions_ = Services.actionServiceForDoc(ampdoc.getHeadNode());\n\n    /**\n     * @private\n     * @const\n     * @return {undefined}\n     */\n    this.boundSecondsPlaying_ = () => this.secondsPlaying_();\n\n    /** @private @const {function():!AutoFullscreenManager} */\n    this.getAutoFullscreenManager_ = once(\n      () => new AutoFullscreenManager(this.ampdoc, this)\n    );\n\n    // TODO(cvializ, #10599): It would be nice to only create the timer\n    // if video analytics are present, since the timer is not needed if\n    // video analytics are not present.\n    this.timer_.delay(this.boundSecondsPlaying_, SECONDS_PLAYED_MIN_DELAY);\n  }\n\n  /** @override */\n  dispose() {\n    this.getAutoFullscreenManager_().dispose();\n\n    if (!this.entries_) {\n      return;\n    }\n    for (let i = 0; i < this.entries_.length; i++) {\n      const entry = this.entries_[i];\n      entry.dispose();\n    }\n  }\n\n  /**\n   * Each second, trigger video-seconds-played for videos that are playing\n   * at trigger time.\n   * @private\n   */\n  secondsPlaying_() {\n    for (let i = 0; i < this.entries_.length; i++) {\n      const entry = this.entries_[i];\n      if (entry.getPlayingState() !== PlayingStates.PAUSED) {\n        analyticsEvent(entry, VideoAnalyticsEvents.SECONDS_PLAYED);\n        this.timeUpdateActionEvent_(entry);\n      }\n    }\n    this.timer_.delay(this.boundSecondsPlaying_, SECONDS_PLAYED_MIN_DELAY);\n  }\n\n  /**\n   * Triggers a LOW-TRUST timeupdate event consumable by AMP actions.\n   * Frequency of this event is controlled by SECONDS_PLAYED_MIN_DELAY and is\n   * every 1 second for now.\n   * @param {!VideoEntry} entry\n   * @private\n   */\n  timeUpdateActionEvent_(entry) {\n    const name = 'timeUpdate';\n    const currentTime = entry.video.getCurrentTime();\n    const duration = entry.video.getDuration();\n    if (\n      isFiniteNumber(currentTime) &&\n      isFiniteNumber(duration) &&\n      duration > 0\n    ) {\n      const perc = currentTime / duration;\n      const event = createCustomEvent(\n        this.ampdoc.win,\n        `${TAG}.${name}`,\n        dict({'time': currentTime, 'percent': perc})\n      );\n      this.actions_.trigger(entry.video.element, name, event, ActionTrust.LOW);\n    }\n  }\n\n  /** @param {!../video-interface.VideoInterface} video */\n  register(video) {\n    devAssert(video);\n\n    this.registerCommonActions_(video);\n\n    if (!video.supportsPlatform()) {\n      return;\n    }\n\n    this.entries_ = this.entries_ || [];\n    const entry = new VideoEntry(this, video);\n    this.maybeInstallVisibilityObserver_(entry);\n    this.entries_.push(entry);\n\n    const {element} = entry.video;\n    element.dispatchCustomEvent(VideoEvents.REGISTERED);\n\n    element.classList.add('i-amphtml-video-component');\n\n    // Unlike events, signals are permanent. We can wait for `REGISTERED` at any\n    // moment in the element's lifecycle and the promise will resolve\n    // appropriately each time.\n    const signals = /** @type {!../base-element.BaseElement} */ (video).signals();\n\n    signals.signal(VideoEvents.REGISTERED);\n\n    // Add a class to element to indicate it implements the video interface.\n    element.classList.add('i-amphtml-video-interface');\n  }\n\n  /**\n   * Register common actions such as play, pause, etc... on the video element\n   * so they can be called using AMP Actions.\n   * For example: <button on=\"tap:myVideo.play\">\n   *\n   * @param {!../video-interface.VideoOrBaseElementDef} video\n   * @private\n   */\n  registerCommonActions_(video) {\n    // Only require ActionTrust.LOW for video actions to defer to platform\n    // specific handling (e.g. user gesture requirement for unmuted playback).\n    const trust = ActionTrust.LOW;\n\n    registerAction('play', () => video.play(/* isAutoplay */ false));\n    registerAction('pause', () => video.pause());\n    registerAction('mute', () => video.mute());\n    registerAction('unmute', () => video.unmute());\n    registerAction('fullscreen', () => video.fullscreenEnter());\n\n    /**\n     * @param {string} action\n     * @param {function()} fn\n     */\n    function registerAction(action, fn) {\n      video.registerAction(\n        action,\n        () => {\n          userInteractedWith(video);\n          fn();\n        },\n        trust\n      );\n    }\n  }\n\n  /**\n   * Install the necessary listeners to be notified when a video becomes visible\n   * in the viewport.\n   *\n   * Visibility of a video is defined by being in the viewport AND having\n   * {@link MIN_VISIBILITY_RATIO_FOR_AUTOPLAY} of the video element visible.\n   *\n   * @param {VideoEntry} entry\n   * @private\n   */\n  maybeInstallVisibilityObserver_(entry) {\n    const {element} = entry.video;\n\n    listen(element, VideoEvents.VISIBILITY, details => {\n      const data = getData(details);\n      if (data && data['visible'] == true) {\n        entry.updateVisibility(/* opt_forceVisible */ true);\n      } else {\n        entry.updateVisibility();\n      }\n    });\n\n    listen(element, VideoEvents.RELOAD, () => {\n      entry.videoLoaded();\n    });\n\n    // TODO(aghassemi, #6425): Use IntersectionObserver\n    if (!this.scrollListenerInstalled_) {\n      const scrollListener = () => {\n        for (let i = 0; i < this.entries_.length; i++) {\n          this.entries_[i].updateVisibility();\n        }\n      };\n      this.viewport_.onScroll(scrollListener);\n      this.viewport_.onChanged(scrollListener);\n      this.scrollListenerInstalled_ = true;\n    }\n  }\n\n  /**\n   * Returns the entry in the video manager corresponding to the video\n   * provided\n   *\n   * @param {!../video-interface.VideoInterface} video\n   * @return {VideoEntry} entry\n   * @private\n   */\n  getEntryForVideo_(video) {\n    for (let i = 0; i < this.entries_.length; i++) {\n      if (this.entries_[i].video === video) {\n        return this.entries_[i];\n      }\n    }\n    dev().error(TAG, 'video is not registered to this video manager');\n    return null;\n  }\n\n  /**\n   * Returns the entry in the video manager corresponding to the element\n   * provided\n   *\n   * @param {!AmpElement} element\n   * @return {VideoEntry} entry\n   * @private\n   */\n  getEntryForElement_(element) {\n    for (let i = 0; i < this.entries_.length; i++) {\n      const entry = this.entries_[i];\n      if (entry.video.element === element) {\n        return entry;\n      }\n    }\n    dev().error(TAG, 'video is not registered to this video manager');\n    return null;\n  }\n\n  /**\n   * Gets the current analytics details for the given video.\n   * Fails silently if the video is not registered.\n   * @param {!AmpElement} videoElement\n   * @return {!Promise<!VideoAnalyticsDetailsDef|undefined>}\n   */\n  getAnalyticsDetails(videoElement) {\n    const entry = this.getEntryForElement_(videoElement);\n    return entry ? entry.getAnalyticsDetails() : Promise.resolve();\n  }\n\n  /**\n   * Returns whether the video is paused or playing after the user interacted\n   * with it or playing through autoplay\n   *\n   * @param {!../video-interface.VideoInterface} video\n   * @return {!../video-interface.PlayingStateDef}\n   */\n  getPlayingState(video) {\n    return this.getEntryForVideo_(video).getPlayingState();\n  }\n\n  /**\n   * @param {!../video-interface.VideoInterface} video\n   * @return {boolean}\n   */\n  isMuted(video) {\n    return this.getEntryForVideo_(video).isMuted();\n  }\n\n  /**\n   * @param {!../video-interface.VideoInterface} video\n   * @return {boolean}\n   */\n  userInteracted(video) {\n    return this.getEntryForVideo_(video).userInteracted();\n  }\n\n  /** @param {!VideoEntry} entry */\n  registerForAutoFullscreen(entry) {\n    this.getAutoFullscreenManager_().register(entry);\n  }\n\n  /**\n   * @return {!AutoFullscreenManager}\n   * @visibleForTesting\n   */\n  getAutoFullscreenManagerForTesting_() {\n    return this.getAutoFullscreenManager_();\n  }\n}\n\n/**\n * VideoEntry represents an entry in the VideoManager's list.\n */\nclass VideoEntry {\n  /**\n   * @param {!VideoManager} manager\n   * @param {!../video-interface.VideoOrBaseElementDef} video\n   */\n  constructor(manager, video) {\n    /** @private @const {!VideoManager} */\n    this.manager_ = manager;\n\n    /** @private @const {!./ampdoc-impl.AmpDoc}  */\n    this.ampdoc_ = manager.ampdoc;\n\n    /** @package @const {!../video-interface.VideoOrBaseElementDef} */\n    this.video = video;\n\n    /** @private {boolean} */\n    this.allowAutoplay_ = true;\n\n    /** @private {boolean} */\n    this.loaded_ = false;\n\n    /** @private {boolean} */\n    this.isPlaying_ = false;\n\n    /** @private {boolean} */\n    this.isVisible_ = false;\n\n    /** @private @const */\n    this.actionSessionManager_ = new VideoSessionManager();\n\n    this.actionSessionManager_.onSessionEnd(() =>\n      analyticsEvent(this, VideoAnalyticsEvents.SESSION)\n    );\n\n    /** @private @const */\n    this.visibilitySessionManager_ = new VideoSessionManager();\n\n    this.visibilitySessionManager_.onSessionEnd(() =>\n      analyticsEvent(this, VideoAnalyticsEvents.SESSION_VISIBLE)\n    );\n\n    // eslint-disable-next-line jsdoc/require-returns\n    /** @private @const {function(): !Promise<boolean>} */\n    this.supportsAutoplay_ = () => {\n      const {win} = this.ampdoc_;\n      return VideoUtils.isAutoplaySupported(win, getMode(win).lite);\n    };\n\n    /** @private @const {function(): !AnalyticsPercentageTracker} */\n    this.getAnalyticsPercentageTracker_ = once(\n      () => new AnalyticsPercentageTracker(this.ampdoc_.win, this)\n    );\n\n    // Autoplay Variables\n\n    /** @private {boolean} */\n    this.playCalledByAutoplay_ = false;\n\n    /** @private {boolean} */\n    this.pauseCalledByAutoplay_ = false;\n\n    /** @private {?Element} */\n    this.internalElement_ = null;\n\n    /** @private {boolean} */\n    this.muted_ = false;\n\n    this.hasAutoplay = video.element.hasAttribute(VideoAttributes.AUTOPLAY);\n\n    if (this.hasAutoplay) {\n      this.manager_.installAutoplayStyles();\n    }\n\n    // Media Session API Variables\n\n    /** @private {!../mediasession-helper.MetadataDef} */\n    this.metadata_ = EMPTY_METADATA;\n\n    /** @private @const {function()} */\n    this.boundMediasessionPlay_ = () => {\n      this.video.play(/* isAutoplay */ false);\n    };\n\n    /** @private @const {function()} */\n    this.boundMediasessionPause_ = () => {\n      this.video.pause();\n    };\n\n    listenOncePromise(video.element, VideoEvents.LOAD).then(() =>\n      this.videoLoaded()\n    );\n    listen(video.element, VideoEvents.PAUSE, () => this.videoPaused_());\n    listen(video.element, VideoEvents.PLAYING, () => this.videoPlayed_());\n    listen(video.element, VideoEvents.MUTED, () => (this.muted_ = true));\n    listen(video.element, VideoEvents.UNMUTED, () => (this.muted_ = false));\n    listen(video.element, VideoEvents.ENDED, () => this.videoEnded_());\n\n    listen(video.element, VideoEvents.AD_START, () =>\n      analyticsEvent(this, VideoAnalyticsEvents.AD_START)\n    );\n\n    listen(video.element, VideoEvents.AD_END, () =>\n      analyticsEvent(this, VideoAnalyticsEvents.AD_END)\n    );\n\n    listen(video.element, VideoEvents.CUSTOM_TICK, e => {\n      const data = getData(e);\n      const eventType = data['eventType'];\n      if (!eventType) {\n        // CUSTOM_TICK is a generic event for 3p players whose semantics\n        // don't fit with other video events.\n        // If `eventType` is unset, it's not meant for analytics.\n        return;\n      }\n      this.logCustomAnalytics_(eventType, data['vars']);\n    });\n\n    video\n      .signals()\n      .whenSignal(VideoEvents.REGISTERED)\n      .then(() => this.onRegister_());\n\n    /**\n     * Trigger event for first manual play.\n     * @private @const {!function()}\n     */\n    this.firstPlayEventOrNoop_ = once(() => {\n      const firstPlay = 'firstPlay';\n      const trust = ActionTrust.LOW;\n      const event = createCustomEvent(\n        this.ampdoc_.win,\n        firstPlay,\n        /* detail */ dict({})\n      );\n      const {element} = this.video;\n      const actions = Services.actionServiceForDoc(element);\n      actions.trigger(element, firstPlay, event, trust);\n    });\n\n    this.listenForAutoplayDelegation_();\n  }\n\n  /** @public */\n  dispose() {\n    this.getAnalyticsPercentageTracker_().stop();\n  }\n\n  /**\n   * @param {string} eventType\n   * @param {!Object<string, string>} vars\n   */\n  logCustomAnalytics_(eventType, vars) {\n    const prefixedVars = {[videoAnalyticsCustomEventTypeKey]: eventType};\n\n    Object.keys(vars).forEach(key => {\n      prefixedVars[`custom_${key}`] = vars[key];\n    });\n\n    analyticsEvent(this, VideoAnalyticsEvents.CUSTOM, prefixedVars);\n  }\n\n  /** Listens for signals to delegate autoplay to a different module. */\n  listenForAutoplayDelegation_() {\n    const signals = this.video.signals();\n    signals.whenSignal(VideoServiceSignals.AUTOPLAY_DELEGATED).then(() => {\n      this.allowAutoplay_ = false;\n\n      if (this.isPlaying_) {\n        this.video.pause();\n      }\n    });\n  }\n\n  /** @return {boolean} */\n  isMuted() {\n    return this.muted_;\n  }\n\n  /** @private */\n  onRegister_() {\n    if (this.requiresAutoFullscreen_()) {\n      this.manager_.registerForAutoFullscreen(this);\n    }\n\n    this.updateVisibility();\n    if (this.hasAutoplay) {\n      this.autoplayVideoBuilt_();\n    }\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  requiresAutoFullscreen_() {\n    const {element} = this.video;\n    if (\n      this.video.preimplementsAutoFullscreen() ||\n      !element.hasAttribute(VideoAttributes.ROTATE_TO_FULLSCREEN)\n    ) {\n      return false;\n    }\n    return userAssert(\n      this.video.isInteractive(),\n      'Only interactive videos are allowed to enter fullscreen on rotate. ' +\n        'Set the `controls` attribute on %s to enable.',\n      element\n    );\n  }\n\n  /**\n   * Callback for when the video starts playing\n   * @private\n   */\n  videoPlayed_() {\n    this.isPlaying_ = true;\n\n    if (this.getPlayingState() == PlayingStates.PLAYING_MANUAL) {\n      this.firstPlayEventOrNoop_();\n    }\n\n    const {video} = this;\n    const {element} = video;\n\n    if (\n      !video.preimplementsMediaSessionAPI() &&\n      !element.classList.contains('i-amphtml-disable-mediasession')\n    ) {\n      setMediaSession(\n        element,\n        this.ampdoc_.win,\n        this.metadata_,\n        this.boundMediasessionPlay_,\n        this.boundMediasessionPause_\n      );\n    }\n\n    this.actionSessionManager_.beginSession();\n    if (this.isVisible_) {\n      this.visibilitySessionManager_.beginSession();\n    }\n    analyticsEvent(this, VideoAnalyticsEvents.PLAY);\n  }\n\n  /**\n   * Callback for when the video has been paused\n   * @private\n   */\n  videoPaused_() {\n    analyticsEvent(this, VideoAnalyticsEvents.PAUSE);\n    this.isPlaying_ = false;\n\n    // Prevent double-trigger of session if video is autoplay and the video\n    // is paused by a the user scrolling the video out of view.\n    if (!this.pauseCalledByAutoplay_) {\n      this.actionSessionManager_.endSession();\n    } else {\n      // reset the flag\n      this.pauseCalledByAutoplay_ = false;\n    }\n  }\n\n  /**\n   * Callback for when the video has ended\n   * @private\n   */\n  videoEnded_() {\n    analyticsEvent(this, VideoAnalyticsEvents.ENDED);\n  }\n\n  /**\n   * Called when the video is loaded and can play.\n   */\n  videoLoaded() {\n    this.loaded_ = true;\n\n    this.internalElement_ = getInternalVideoElementFor(this.video.element);\n\n    this.fillMediaSessionMetadata_();\n\n    this.getAnalyticsPercentageTracker_().start();\n\n    this.updateVisibility();\n    if (this.isVisible_) {\n      // Handles the case when the video becomes visible before loading\n      this.loadedVideoVisibilityChanged_();\n    }\n  }\n\n  /**\n   * Gets the provided metadata and fills in missing fields\n   * @private\n   */\n  fillMediaSessionMetadata_() {\n    if (this.video.preimplementsMediaSessionAPI()) {\n      return;\n    }\n\n    if (this.video.getMetadata()) {\n      this.metadata_ = map(\n        /** @type {!../mediasession-helper.MetadataDef} */\n        (this.video.getMetadata())\n      );\n    }\n\n    const doc = this.ampdoc_.win.document;\n\n    if (!this.metadata_.artwork || this.metadata_.artwork.length == 0) {\n      const posterUrl =\n        parseSchemaImage(doc) || parseOgImage(doc) || parseFavicon(doc);\n\n      if (posterUrl) {\n        this.metadata_.artwork = [\n          {\n            'src': posterUrl,\n          },\n        ];\n      }\n    }\n\n    if (!this.metadata_.title) {\n      const title =\n        this.video.element.getAttribute('title') ||\n        this.video.element.getAttribute('aria-label') ||\n        this.internalElement_.getAttribute('title') ||\n        this.internalElement_.getAttribute('aria-label') ||\n        doc.title;\n      if (title) {\n        this.metadata_.title = title;\n      }\n    }\n  }\n\n  /**\n   * Called when visibility of a video changes.\n   * @private\n   */\n  videoVisibilityChanged_() {\n    if (this.loaded_) {\n      this.loadedVideoVisibilityChanged_();\n    }\n  }\n\n  /**\n   * Only called when visibility of a loaded video changes.\n   * @private\n   */\n  loadedVideoVisibilityChanged_() {\n    if (!this.ampdoc_.isVisible()) {\n      return;\n    }\n    this.supportsAutoplay_().then(supportsAutoplay => {\n      const canAutoplay = this.hasAutoplay && !this.userInteracted();\n\n      if (canAutoplay && supportsAutoplay) {\n        this.autoplayLoadedVideoVisibilityChanged_();\n      } else {\n        this.nonAutoplayLoadedVideoVisibilityChanged_();\n      }\n    });\n  }\n\n  /* Autoplay Behavior */\n\n  /**\n   * Called when an autoplay video is built.\n   * @private\n   */\n  autoplayVideoBuilt_() {\n    // Hide controls until we know if autoplay is supported, otherwise hiding\n    // and showing the controls quickly becomes a bad user experience for the\n    // common case where autoplay is supported.\n    if (this.video.isInteractive()) {\n      this.video.hideControls();\n    }\n\n    this.supportsAutoplay_().then(supportsAutoplay => {\n      if (!supportsAutoplay && this.video.isInteractive()) {\n        // Autoplay is not supported, show the controls so user can manually\n        // initiate playback.\n        this.video.showControls();\n        return;\n      }\n\n      // Only muted videos are allowed to autoplay\n      this.video.mute();\n\n      this.installAutoplayArtifacts_();\n    });\n  }\n\n  /**\n   * Installs autoplay animation and interaction mask when interactive.\n   * The animated icon is appended always, but only displayed by CSS when\n   * `controls` is set. See `video-autoplay.css`.\n   * @private\n   */\n  installAutoplayArtifacts_() {\n    const {video} = this;\n    const {element, win} = this.video;\n\n    if (\n      element.hasAttribute(VideoAttributes.NO_AUDIO) ||\n      element.signals().get(VideoServiceSignals.USER_INTERACTED)\n    ) {\n      return;\n    }\n\n    const animation = renderIcon(win, element);\n\n    /** @param {boolean} isPlaying */\n    const toggleAnimation = isPlaying => {\n      video.mutateElement(() => {\n        animation.classList.toggle('amp-video-eq-play', isPlaying);\n      });\n    };\n\n    video.mutateElement(() => {\n      element.appendChild(animation);\n    });\n\n    const unlisteners = [\n      listen(element, VideoEvents.PAUSE, () => toggleAnimation(false)),\n      listen(element, VideoEvents.PLAYING, () => toggleAnimation(true)),\n    ];\n\n    video\n      .signals()\n      .whenSignal(VideoServiceSignals.USER_INTERACTED)\n      .then(() => {\n        const {video} = this;\n        const {element} = video;\n        this.firstPlayEventOrNoop_();\n        if (video.isInteractive()) {\n          video.showControls();\n        }\n        video.unmute();\n        unlisteners.forEach(unlistener => {\n          unlistener();\n        });\n        const animation = element.querySelector('.amp-video-eq');\n        const mask = element.querySelector('i-amphtml-video-mask');\n        if (animation) {\n          removeElement(animation);\n        }\n        if (mask) {\n          removeElement(mask);\n        }\n      });\n\n    if (!video.isInteractive()) {\n      return;\n    }\n\n    const mask = renderInteractionOverlay(element);\n\n    /** @param {boolean} display */\n    const setMaskDisplay = display => {\n      video.mutateElement(() => {\n        toggle(mask, display);\n      });\n    };\n\n    video.hideControls();\n\n    video.mutateElement(() => {\n      element.appendChild(mask);\n    });\n\n    [\n      listen(mask, 'click', () => userInteractedWith(video)),\n      listen(element, VideoEvents.AD_START, () => {\n        setMaskDisplay(false);\n        video.showControls();\n      }),\n      listen(element, VideoEvents.AD_END, () => {\n        setMaskDisplay(true);\n        video.hideControls();\n      }),\n      listen(element, VideoEvents.UNMUTED, () => userInteractedWith(video)),\n    ].forEach(unlistener => unlisteners.push(unlistener));\n  }\n\n  /**\n   * Called when visibility of a loaded autoplay video changes.\n   * @private\n   */\n  autoplayLoadedVideoVisibilityChanged_() {\n    if (!this.allowAutoplay_) {\n      return;\n    }\n    if (this.isVisible_) {\n      this.visibilitySessionManager_.beginSession();\n      this.video.play(/*autoplay*/ true);\n      this.playCalledByAutoplay_ = true;\n    } else {\n      if (this.isPlaying_) {\n        this.visibilitySessionManager_.endSession();\n      }\n      this.video.pause();\n      this.pauseCalledByAutoplay_ = true;\n    }\n  }\n\n  /**\n   * Called when visibility of a loaded non-autoplay video changes.\n   * @private\n   */\n  nonAutoplayLoadedVideoVisibilityChanged_() {\n    if (this.isVisible_) {\n      this.visibilitySessionManager_.beginSession();\n    } else if (this.isPlaying_) {\n      this.visibilitySessionManager_.endSession();\n    }\n  }\n\n  /**\n   * Called by all possible events that might change the visibility of the video\n   * such as scrolling or {@link ../video-interface.VideoEvents#VISIBILITY}.\n   * @param {?boolean=} opt_forceVisible\n   * @package\n   */\n  updateVisibility(opt_forceVisible) {\n    const wasVisible = this.isVisible_;\n\n    if (opt_forceVisible) {\n      this.isVisible_ = true;\n    } else {\n      const {element} = this.video;\n      const ratio = element.getIntersectionChangeEntry().intersectionRatio;\n      this.isVisible_ =\n        (!isFiniteNumber(ratio) ? 0 : ratio) >=\n        MIN_VISIBILITY_RATIO_FOR_AUTOPLAY;\n    }\n\n    if (this.isVisible_ != wasVisible) {\n      this.videoVisibilityChanged_();\n    }\n  }\n\n  /**\n   * Returns whether the video is paused or playing after the user interacted\n   * with it or playing through autoplay\n   * @return {!../video-interface.PlayingStateDef}\n   */\n  getPlayingState() {\n    if (!this.isPlaying_) {\n      return PlayingStates.PAUSED;\n    }\n\n    if (\n      this.isPlaying_ &&\n      this.playCalledByAutoplay_ &&\n      !this.userInteracted()\n    ) {\n      return PlayingStates.PLAYING_AUTO;\n    }\n\n    return PlayingStates.PLAYING_MANUAL;\n  }\n\n  /**\n   * Returns whether the video was interacted with or not\n   * @return {boolean}\n   */\n  userInteracted() {\n    return (\n      this.video.signals().get(VideoServiceSignals.USER_INTERACTED) != null\n    );\n  }\n\n  /**\n   * Collects a snapshot of the current video state for video analytics\n   * @return {!Promise<!VideoAnalyticsDetailsDef>}\n   */\n  getAnalyticsDetails() {\n    const {video} = this;\n    return this.supportsAutoplay_().then(supportsAutoplay => {\n      const {width, height} = video.element.getLayoutBox();\n      const autoplay = this.hasAutoplay && supportsAutoplay;\n      const playedRanges = video.getPlayedRanges();\n      const playedTotal = playedRanges.reduce(\n        (acc, range) => acc + range[1] - range[0],\n        0\n      );\n\n      return {\n        'autoplay': autoplay,\n        'currentTime': video.getCurrentTime(),\n        'duration': video.getDuration(),\n        // TODO(cvializ): add fullscreen\n        'height': height,\n        'id': video.element.id,\n        'muted': this.muted_,\n        'playedTotal': playedTotal,\n        'playedRangesJson': JSON.stringify(playedRanges),\n        'state': this.getPlayingState(),\n        'width': width,\n      };\n    });\n  }\n}\n\n/**\n * @param {!AmpElement} video\n * @return {boolean}\n * @restricted\n */\nfunction supportsFullscreenViaApi(video) {\n  // TODO(alanorozco): Determine this via a flag in the component itself.\n  return !!{\n    'amp-dailymotion': true,\n    'amp-ima-video': true,\n  }[video.tagName.toLowerCase()];\n}\n\n/** Manages rotate-to-fullscreen video. */\nexport class AutoFullscreenManager {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   * @param {!VideoManager} manager\n   */\n  constructor(ampdoc, manager) {\n    /** @private @const {!VideoManager} */\n    this.manager_ = manager;\n\n    /** @private @const {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n\n    /** @private {?../video-interface.VideoOrBaseElementDef} */\n    this.currentlyInFullscreen_ = null;\n\n    /** @private {?../video-interface.VideoOrBaseElementDef} */\n    this.currentlyCentered_ = null;\n\n    /** @private @const {!Array<!../video-interface.VideoOrBaseElementDef>} */\n    this.entries_ = [];\n\n    /**\n     * Unlisteners for global objects\n     * @private {!Array<!UnlistenDef>}\n     */\n    this.unlisteners_ = [];\n\n    // eslint-disable-next-line jsdoc/require-returns\n    /** @private @const {function()} */\n    this.boundSelectBestCentered_ = () => this.selectBestCenteredInPortrait_();\n\n    /**\n     * @param {!../video-interface.VideoOrBaseElementDef} video\n     * @return {boolean}\n     */\n    this.boundIncludeOnlyPlaying_ = video =>\n      this.getPlayingState_(video) == PlayingStates.PLAYING_MANUAL;\n\n    /**\n     * @param {!../video-interface.VideoOrBaseElementDef} a\n     * @param {!../video-interface.VideoOrBaseElementDef} b\n     * @return {number}\n     */\n    this.boundCompareEntries_ = (a, b) => this.compareEntries_(a, b);\n\n    this.installOrientationObserver_();\n    this.installFullscreenListener_();\n  }\n\n  /** @public */\n  dispose() {\n    this.unlisteners_.forEach(unlisten => unlisten());\n    this.unlisteners_.length = 0;\n  }\n\n  /** @param {!VideoEntry} entry */\n  register(entry) {\n    const {video} = entry;\n    const {element} = video;\n\n    if (!this.canFullscreen_(element)) {\n      return;\n    }\n\n    this.entries_.push(video);\n\n    listen(element, VideoEvents.PAUSE, this.boundSelectBestCentered_);\n    listen(element, VideoEvents.PLAYING, this.boundSelectBestCentered_);\n    listen(element, VideoEvents.ENDED, this.boundSelectBestCentered_);\n\n    video\n      .signals()\n      .whenSignal(VideoServiceSignals.USER_INTERACTED)\n      .then(this.boundSelectBestCentered_);\n\n    // Set always\n    this.selectBestCenteredInPortrait_();\n  }\n\n  /** @private */\n  installFullscreenListener_() {\n    const root = this.ampdoc_.getRootNode();\n    const exitHandler = () => this.onFullscreenExit_();\n    this.unlisteners_.push(\n      listen(root, 'webkitfullscreenchange', exitHandler),\n      listen(root, 'mozfullscreenchange', exitHandler),\n      listen(root, 'fullscreenchange', exitHandler),\n      listen(root, 'MSFullscreenChange', exitHandler)\n    );\n  }\n\n  /**\n   * @return {boolean}\n   * @visibleForTesting\n   */\n  isInLandscape() {\n    return isLandscape(this.ampdoc_.win);\n  }\n\n  /**\n   * @param {!AmpElement} video\n   * @return {boolean}\n   * @private\n   */\n  canFullscreen_(video) {\n    // Safari and iOS can only fullscreen <video> elements directly. In cases\n    // where the player component is implemented via an <iframe>, we need to\n    // rely on a postMessage API to fullscreen. Such an API is not necessarily\n    // provided by every player.\n    const internalElement = getInternalVideoElementFor(video);\n    if (internalElement.tagName.toLowerCase() == 'video') {\n      return true;\n    }\n    const platform = Services.platformFor(this.ampdoc_.win);\n    if (!(platform.isIos() || platform.isSafari())) {\n      return true;\n    }\n    return supportsFullscreenViaApi(video);\n  }\n\n  /** @private */\n  onFullscreenExit_() {\n    this.currentlyInFullscreen_ = null;\n  }\n\n  /** @private */\n  installOrientationObserver_() {\n    // TODO(alanorozco) Update based on support\n    const {win} = this.ampdoc_;\n    const {screen} = win;\n    // Chrome considers 'orientationchange' to be an untrusted event, but\n    // 'change' on screen.orientation is considered a user interaction.\n    // We still need to listen to 'orientationchange' on Chrome in order to\n    // exit fullscreen since 'change' does not fire in this case.\n    if (screen && 'orientation' in screen) {\n      const orient = /** @type {!ScreenOrientation} */ (screen.orientation);\n      this.unlisteners_.push(\n        listen(orient, 'change', () => this.onRotation_())\n      );\n    }\n    // iOS Safari does not have screen.orientation but classifies\n    // 'orientationchange' as a user interaction.\n    this.unlisteners_.push(\n      listen(win, 'orientationchange', () => this.onRotation_())\n    );\n  }\n\n  /** @private */\n  onRotation_() {\n    if (this.isInLandscape()) {\n      if (this.currentlyCentered_ != null) {\n        this.enter_(this.currentlyCentered_);\n      }\n      return;\n    }\n    if (this.currentlyInFullscreen_) {\n      this.exit_(this.currentlyInFullscreen_);\n    }\n  }\n\n  /**\n   * @param {!../video-interface.VideoOrBaseElementDef} video\n   * @private\n   */\n  enter_(video) {\n    const platform = Services.platformFor(this.ampdoc_.win);\n\n    this.currentlyInFullscreen_ = video;\n\n    if (platform.isAndroid() && platform.isChrome()) {\n      // Chrome on Android somehow knows what we're doing and executes a nice\n      // transition by default. Delegating to browser.\n      video.fullscreenEnter();\n      return;\n    }\n\n    this.scrollIntoIfNotVisible_(video).then(() => video.fullscreenEnter());\n  }\n\n  /**\n   * @param {!../video-interface.VideoOrBaseElementDef} video\n   * @private\n   */\n  exit_(video) {\n    this.currentlyInFullscreen_ = null;\n\n    this.scrollIntoIfNotVisible_(video, 'center').then(() =>\n      video.fullscreenExit()\n    );\n  }\n\n  /**\n   * Scrolls to a video if it's not in view.\n   * @param {!../video-interface.VideoOrBaseElementDef} video\n   * @param {?string=} optPos\n   * @return {*} TODO(#23582): Specify return type\n   * @private\n   */\n  scrollIntoIfNotVisible_(video, optPos = null) {\n    const {element} = video;\n    const viewport = this.getViewport_();\n\n    return this.onceOrientationChanges_().then(() => {\n      const {boundingClientRect} = element.getIntersectionChangeEntry();\n      const {top, bottom} = boundingClientRect;\n      const vh = viewport.getSize().height;\n      const fullyVisible = top >= 0 && bottom <= vh;\n      if (fullyVisible) {\n        return Promise.resolve();\n      }\n      const pos = optPos\n        ? dev().assertString(optPos)\n        : bottom > vh\n        ? 'bottom'\n        : 'top';\n      return viewport.animateScrollIntoView(element, pos);\n    });\n  }\n\n  /**\n   * @private\n   * @return {*} TODO(#23582): Specify return type\n   */\n  getViewport_() {\n    return Services.viewportForDoc(this.ampdoc_);\n  }\n\n  /**\n   * @private\n   * @return {!Promise}\n   */\n  onceOrientationChanges_() {\n    const magicNumber = 330;\n    return Services.timerFor(this.ampdoc_.win).promise(magicNumber);\n  }\n\n  /**\n   * @private\n   * @return {*} TODO(#23582): Specify return type\n   */\n  selectBestCenteredInPortrait_() {\n    if (this.isInLandscape()) {\n      return this.currentlyCentered_;\n    }\n\n    this.currentlyCentered_ = null;\n\n    const selected = this.entries_\n      .filter(this.boundIncludeOnlyPlaying_)\n      .sort(this.boundCompareEntries_)[0];\n\n    if (selected) {\n      const {intersectionRatio} = selected.element.getIntersectionChangeEntry();\n      if (intersectionRatio >= MIN_VISIBILITY_RATIO_FOR_AUTOPLAY) {\n        this.currentlyCentered_ = selected;\n      }\n    }\n\n    return this.currentlyCentered_;\n  }\n\n  /**\n   * Compares two videos in order to sort them by \"best centered\".\n   * @param {!../video-interface.VideoOrBaseElementDef} a\n   * @param {!../video-interface.VideoOrBaseElementDef} b\n   * @return {number}\n   */\n  compareEntries_(a, b) {\n    const {\n      intersectionRatio: ratioA,\n      boundingClientRect: rectA,\n    } = a.element.getIntersectionChangeEntry();\n    const {\n      intersectionRatio: ratioB,\n      boundingClientRect: rectB,\n    } = b.element.getIntersectionChangeEntry();\n\n    // Prioritize by how visible they are, with a tolerance of 10%\n    const ratioTolerance = 0.1;\n    const ratioDelta = ratioA - ratioB;\n    if (Math.abs(ratioDelta) > ratioTolerance) {\n      return ratioDelta;\n    }\n\n    // Prioritize by distance from center.\n    const viewport = Services.viewportForDoc(this.ampdoc_);\n    const centerA = centerDist(viewport, rectA);\n    const centerB = centerDist(viewport, rectB);\n    if (centerA < centerB || centerA > centerB) {\n      return centerA - centerB;\n    }\n\n    // Everything else failing, choose the highest element.\n    return rectA.top - rectB.top;\n  }\n\n  /**\n   * @param {!../video-interface.VideoOrBaseElementDef} video\n   * @return {!../video-interface.PlayingStateDef}\n   * @private\n   */\n  getPlayingState_(video) {\n    return this.manager_.getPlayingState(\n      /** @type {!../video-interface.VideoInterface} */ (video)\n    );\n  }\n}\n\n/**\n * @param {!./viewport/viewport-interface.ViewportInterface} viewport\n * @param {{top: number, height: number}} rect\n * @return {number}\n */\nfunction centerDist(viewport, rect) {\n  const centerY = rect.top + rect.height / 2;\n  const centerViewport = viewport.getSize().height / 2;\n  return Math.abs(centerY - centerViewport);\n}\n\n/**\n * @param {!Window} win\n * @return {boolean}\n */\nfunction isLandscape(win) {\n  if (win.screen && 'orientation' in win.screen) {\n    return startsWith(win.screen.orientation.type, 'landscape');\n  }\n  return Math.abs(win.orientation) == 90;\n}\n\n/** @visibleForTesting */\nexport const PERCENTAGE_INTERVAL = 5;\n\n/** @private */\nconst PERCENTAGE_FREQUENCY_WHEN_PAUSED_MS = 500;\n\n/** @private */\nconst PERCENTAGE_FREQUENCY_MIN_MS = 250;\n\n/** @private */\nconst PERCENTAGE_FREQUENCY_MAX_MS = 4000;\n\n/**\n * Calculates the \"ideal\" analytics check frequency from playback start, e.g.\n * the amount of ms after each PERCENTAGE_INTERVAL.\n * @param {number} durationSeconds\n * @return {number}\n */\nfunction calculateIdealPercentageFrequencyMs(durationSeconds) {\n  return durationSeconds * 10 * PERCENTAGE_INTERVAL;\n}\n\n/**\n * Calculates the \"actual\" analytics check frequency by calculating the ideal\n * frequency and clamping it between MIN and MAX.\n * @param {number} durationSeconds\n * @return {number}\n */\nfunction calculateActualPercentageFrequencyMs(durationSeconds) {\n  return clamp(\n    calculateIdealPercentageFrequencyMs(durationSeconds),\n    PERCENTAGE_FREQUENCY_MIN_MS,\n    PERCENTAGE_FREQUENCY_MAX_MS\n  );\n}\n\n/** @visibleForTesting */\nexport class AnalyticsPercentageTracker {\n  /**\n   * @param {!Window} win\n   * @param {!VideoEntry} entry\n   */\n  constructor(win, entry) {\n    // This is destructured in `calculate_()`, but the linter thinks it's unused\n    /** @private @const {!./timer-impl.Timer} */\n    this.timer_ = Services.timerFor(win); // eslint-disable-line\n\n    /** @private @const {!VideoEntry} */\n    this.entry_ = entry;\n\n    /** @private {?Array<!UnlistenDef>} */\n    this.unlisteners_ = null;\n\n    /** @private {number} */\n    this.last_ = 0;\n\n    /**\n     * Counter for each trigger `start`. This is to prevent duplicate events if\n     * two consecutive triggers take place, or to prevent events firing once\n     * the tracker is stopped.\n     * @private {number}\n     */\n    this.triggerId_ = 0;\n  }\n\n  /** @public */\n  start() {\n    const {element} = this.entry_.video;\n\n    this.stop();\n\n    this.unlisteners_ = this.unlisteners_ || [];\n\n    // If the video has already emitted LOADEDMETADATA, the event below\n    // will never fire, so we check if it's already available here.\n    if (this.hasDuration_()) {\n      this.calculate_(this.triggerId_);\n    } else {\n      this.unlisteners_.push(\n        listenOnce(element, VideoEvents.LOADEDMETADATA, () => {\n          if (this.hasDuration_()) {\n            this.calculate_(this.triggerId_);\n          }\n        })\n      );\n    }\n\n    this.unlisteners_.push(\n      listen(element, VideoEvents.ENDED, () => {\n        if (this.hasDuration_()) {\n          this.maybeTrigger_(/* normalizedPercentage */ 100);\n        }\n      })\n    );\n  }\n\n  /** @public */\n  stop() {\n    if (!this.unlisteners_) {\n      return;\n    }\n    while (this.unlisteners_.length > 0) {\n      this.unlisteners_.pop().call();\n    }\n    this.triggerId_++;\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  hasDuration_() {\n    const {video} = this.entry_;\n    const duration = video.getDuration();\n\n    // Livestreams or videos with no duration information available.\n    if (!duration || isNaN(duration) || duration <= 0) {\n      return false;\n    }\n\n    if (\n      calculateIdealPercentageFrequencyMs(duration) <\n      PERCENTAGE_FREQUENCY_MIN_MS\n    ) {\n      const bestResultLength = Math.ceil(\n        (PERCENTAGE_FREQUENCY_MIN_MS * (100 / PERCENTAGE_INTERVAL)) / 1000\n      );\n\n      this.warnForTesting_(\n        'This video is too short for `video-percentage-played`. ' +\n          'Reports may be innacurate. For best results, use videos over',\n        bestResultLength,\n        'seconds long.',\n        video.element\n      );\n    }\n\n    return true;\n  }\n\n  /**\n   * @param  {...*} args\n   * @private\n   */\n  warnForTesting_(...args) {\n    user().warn.apply(user(), [TAG].concat(args));\n  }\n\n  /**\n   * @param {number=} triggerId\n   * @private\n   */\n  calculate_(triggerId) {\n    if (triggerId != this.triggerId_) {\n      return;\n    }\n\n    const {entry_: entry, timer_: timer} = this;\n    const {video} = entry;\n\n    const calculateAgain = () => this.calculate_(triggerId);\n\n    if (entry.getPlayingState() == PlayingStates.PAUSED) {\n      timer.delay(calculateAgain, PERCENTAGE_FREQUENCY_WHEN_PAUSED_MS);\n      return;\n    }\n\n    const duration = video.getDuration();\n\n    const frequencyMs = calculateActualPercentageFrequencyMs(duration);\n\n    const percentage = (video.getCurrentTime() / duration) * 100;\n    const normalizedPercentage =\n      Math.floor(percentage / PERCENTAGE_INTERVAL) * PERCENTAGE_INTERVAL;\n\n    devAssert(isFiniteNumber(normalizedPercentage));\n\n    this.maybeTrigger_(normalizedPercentage);\n\n    timer.delay(calculateAgain, frequencyMs);\n  }\n\n  /**\n   * @param {number} normalizedPercentage\n   * @private\n   */\n  maybeTrigger_(normalizedPercentage) {\n    if (normalizedPercentage <= 0) {\n      return;\n    }\n\n    if (this.last_ == normalizedPercentage) {\n      return;\n    }\n\n    this.last_ = normalizedPercentage;\n\n    this.analyticsEventForTesting_(normalizedPercentage);\n  }\n\n  /**\n   * @param {number} normalizedPercentage\n   * @private\n   */\n  analyticsEventForTesting_(normalizedPercentage) {\n    analyticsEvent(this.entry_, VideoAnalyticsEvents.PERCENTAGE_PLAYED, {\n      'normalizedPercentage': normalizedPercentage.toString(),\n    });\n  }\n}\n\n/**\n * @param {!VideoEntry} entry\n * @param {!VideoAnalyticsEvents} eventType\n * @param {!Object<string, string>=} opt_vars A map of vars and their values.\n * @private\n */\nfunction analyticsEvent(entry, eventType, opt_vars) {\n  const {video} = entry;\n\n  entry.getAnalyticsDetails().then(details => {\n    if (opt_vars) {\n      Object.assign(details, opt_vars);\n    }\n    video.element.dispatchCustomEvent(eventType, details);\n  });\n}\n\n/** @param {!Node|!./ampdoc-impl.AmpDoc} nodeOrDoc */\nexport function installVideoManagerForDoc(nodeOrDoc) {\n  registerServiceBuilderForDoc(nodeOrDoc, 'video-manager', VideoManager);\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Observable} from '../observable';\n\nexport class VideoSessionManager {\n  /**\n   * Creates an instance of VideoSessionManager.\n   */\n  constructor() {\n    /** @private */\n    this.isSessionActive_ = false;\n\n    /** @private */\n    this.endSessionObservable_ = new Observable();\n  }\n\n  /**\n   * Register a listener to be notified when a session has ended\n   * @param {!Function} listener\n   */\n  onSessionEnd(listener) {\n    this.endSessionObservable_.add(listener);\n  }\n\n  /**\n   * Begin a session.\n   */\n  beginSession() {\n    this.isSessionActive_ = true;\n  }\n\n  /**\n   * End a session.\n   */\n  endSession() {\n    if (this.isSessionActive_) {\n      this.endSessionObservable_.fire();\n    }\n    this.isSessionActive_ = false;\n  }\n\n  /**\n   * Get the current session state.\n   * @return {*} TODO(#23582): Specify return type\n   */\n  isSessionActive() {\n    return this.isSessionActive_;\n  }\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../../services';\nimport {dev} from '../../log';\nimport {htmlFor} from '../../static-template';\nimport {removeElement} from '../../dom';\n\n/**\n * @param {!Element} node\n * @return {!Element}\n */\nfunction cloneDeep(node) {\n  return dev().assertElement(node.cloneNode(/* deep */ true));\n}\n\n/**\n * @param {!Element|!Document} elOrDoc\n * @return {!Element}\n */\nexport function renderInteractionOverlay(elOrDoc) {\n  const html = htmlFor(elOrDoc);\n  return html`\n    <i-amphtml-video-mask class=\"i-amphtml-fill-content\" role=\"button\">\n    </i-amphtml-video-mask>\n  `;\n}\n\n/**\n * @param {!Window} win\n * @param {!Element|!Document} elOrDoc\n * @return {!Element}\n */\nexport function renderIcon(win, elOrDoc) {\n  const html = htmlFor(elOrDoc);\n  const icon = html`\n    <i-amphtml-video-icon class=\"amp-video-eq\">\n      <div class=\"amp-video-eq-col\">\n        <div class=\"amp-video-eq-filler\"></div>\n        <div class=\"amp-video-eq-filler\"></div>\n      </div>\n    </i-amphtml-video-icon>\n  `;\n\n  // Copy equalizer column 4x and annotate filler positions for animation.\n  const firstCol = dev().assertElement(icon.firstElementChild);\n  for (let i = 0; i < 4; i++) {\n    const col = cloneDeep(firstCol);\n    const fillers = col.children;\n    for (let j = 0; j < fillers.length; j++) {\n      const filler = fillers[j];\n      filler.classList.add(`amp-video-eq-${i + 1}-${j + 1}`);\n    }\n    icon.appendChild(col);\n  }\n\n  // Remove seed column.\n  removeElement(firstCol);\n\n  if (Services.platformFor(win).isIos()) {\n    // iOS is unable to pause hardware accelerated animations.\n    icon.setAttribute('unpausable', '');\n  }\n\n  return icon;\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {installStylesForDoc} from '../../style-installer';\n// Source for this constant is css/video-autoplay.css\nimport {cssText} from '../../../build/video-autoplay.css';\n\n/**\n * @param  {!../ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installAutoplayStylesForDoc(ampdoc) {\n  installStylesForDoc(\n    ampdoc,\n    cssText,\n    /* callback */ null,\n    /* opt_isRuntimeCss */ false,\n    /* opt_ext */ 'amp-video-autoplay'\n  );\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getAmpdoc,\n  getExistingServiceForDocInEmbedScope,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServicePromiseForDoc,\n} from './service';\nimport {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from './element-service';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (getElementServiceForDoc(\n      element,\n      'access',\n      'amp-access'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'access',\n      'amp-access'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (getElementServiceForDoc(\n      element,\n      'subscriptions',\n      'amp-subscriptions'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'subscriptions',\n      'amp-subscriptions'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'action'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'standard-actions'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (getElementServiceForDoc(\n      element,\n      'activity',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (getService(\n      window,\n      'ampdoc'\n    ));\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (getElementServiceForDoc(\n      element,\n      'amp-analytics-instrumentation',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'amp-analytics-instrumentation',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (getService(\n      window,\n      'batched-xhr'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (getElementServiceIfAvailableForDocInEmbedScope(\n      element,\n      'bind',\n      'amp-bind'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'cid'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'navigation'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (getElementServiceForDoc(\n      element,\n      'loader',\n      'amp-loader'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (getElementServiceForDoc(\n      element,\n      'standalone',\n      'amp-standalone'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (getService(\n      window,\n      'crypto'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'documentInfo'\n    )).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (getService(\n      window,\n      'extensions'\n    ));\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'form-submit-service'\n    ));\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'hidden-observer'\n    ));\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'history'\n    ));\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'inputmask',\n      'amp-inputmask'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'owners'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (getService(\n      window,\n      'performance'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (getExistingServiceOrNull(\n      window,\n      'performance'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (getService(\n      window,\n      'platform'\n    ));\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (getServiceForDoc(\n      element,\n      'position-observer'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'resources'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'resources'\n    ));\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?{incomingFragment: string, outgoingFragment: string}>}\n   */\n  static shareTrackingForOrNull(win) {\n    return /** @type {!Promise<?{incomingFragment: string, outgoingFragment: string}>} */ (getElementServiceIfAvailable(\n      win,\n      'share-tracking',\n      'amp-share-tracking',\n      true\n    ));\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (getElementServiceIfAvailable(win, 'localization', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  static localizationService(win) {\n    return getService(win, 'localization');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (getElementServiceIfAvailable(win, 'story-analytics', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreServiceV01(win) {\n    return getService(win, 'story-store');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestServiceV01(win) {\n    return getService(win, 'story-request-v01');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNullV01(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (getElementServiceIfAvailable(win, 'localization-v01', 'amp-story', true))\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  static localizationServiceV01(win) {\n    return getService(win, 'localization-v01');\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>}\n   */\n  static viewerIntegrationVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>} */\n      (getElementServiceIfAvailable(\n        win,\n        'viewer-integration-variable',\n        'amp-viewer-integration',\n        true\n      ))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'storage'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesFor(window) {\n    return /** @type {!./service/template-impl.Templates} */ (getService(\n      window,\n      'templates'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (getService(\n      window,\n      'timer'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'url-replace'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (getElementServiceForDoc(\n        element,\n        'userNotificationManager',\n        'amp-user-notification'\n      ))\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (getElementServiceIfAvailableForDoc(\n        element,\n        'consentPolicyManager',\n        'amp-consent'\n      ))\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'geo',\n      'amp-geo',\n      true\n    ));\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>}\n   */\n  static userLocationForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'user-location',\n      'amp-user-location',\n      true\n    ));\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'url'\n    ));\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'variant',\n      'amp-experiment',\n      true\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'video-manager'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>}\n   */\n  static viewerAssistanceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>} */\n      (getElementServiceIfAvailableForDoc(\n        element,\n        'amp-viewer-assistance',\n        'amp-viewer-assistance'\n      ))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'viewer'\n    ));\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'viewer'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (getService(\n      window,\n      'vsync'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'viewport'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from './log';\nimport {map} from './utils/object.js';\n\nlet htmlContainer;\nlet svgContainer;\n\n/**\n * Creates the html helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\nexport function htmlFor(nodeOrDoc) {\n  const doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n  if (!htmlContainer || htmlContainer.ownerDocument !== doc) {\n    htmlContainer = doc.createElement('div');\n  }\n\n  return html;\n}\n\n/**\n * Creates the svg helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\nexport function svgFor(nodeOrDoc) {\n  const doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n  if (!svgContainer || svgContainer.ownerDocument !== svgContainer) {\n    svgContainer = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  }\n\n  return svg;\n}\n\n/**\n * A tagged template literal helper to generate static SVG trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const circle = svg`<circle cx=\"60\" cy=\"60\" r=\"22\"></circle>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction svg(strings) {\n  return createNode(svgContainer, strings);\n}\n\n/**\n * A tagged template literal helper to generate static DOM trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const div = html`<div><span></span></div>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction html(strings) {\n  return createNode(htmlContainer, strings);\n}\n\n/**\n * Helper used by html and svg string literal functions.\n * @param {!Element} container\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction createNode(container, strings) {\n  devAssert(strings.length === 1, 'Improper html template tag usage.');\n  container./*OK*/ innerHTML = strings[0];\n\n  const el = container.firstElementChild;\n  devAssert(el, 'No elements in template');\n  devAssert(!el.nextElementSibling, 'Too many root elements in template');\n\n  // Clear to free memory.\n  container.removeChild(el);\n\n  return el;\n}\n\n/**\n * Queries an element for all elements with a \"ref\" attribute, removing\n * the attribute afterwards.\n * Returns a named map of all ref elements.\n *\n * @param {!Element} root\n * @return {!Object<string, !Element>}\n */\nexport function htmlRefs(root) {\n  const elements = root.querySelectorAll('[ref]');\n  const refs = map();\n\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n    const ref = devAssert(element.getAttribute('ref'), 'Empty ref attr');\n    element.removeAttribute('ref');\n    devAssert(refs[ref] === undefined, 'Duplicate ref');\n    refs[ref] = element;\n  }\n\n  return refs;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.startsWith.\n * @param {string} string\n * @param {string} prefix\n * @return {boolean}\n */\nexport function startsWith(string, prefix) {\n  if (prefix.length > string.length) {\n    return false;\n  }\n  return string.lastIndexOf(prefix, 0) == 0;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {*} TODO(#23582): Specify return type\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CommonSignals} from './common-signals';\nimport {Services} from './services';\nimport {dev, devAssert, rethrowAsync} from './log';\nimport {getAmpdoc} from './service';\nimport {insertAfterOrAtStart, waitForBodyOpenPromise} from './dom';\nimport {map} from './utils/object';\nimport {setStyles} from './style';\nimport {waitForServices} from './render-delaying-services';\n\nconst TRANSFORMER_PROP = '__AMP_CSS_TR';\nconst STYLE_MAP_PROP = '__AMP_CSS_SM';\n\n/**\n * Adds the given css text to the given ampdoc.\n *\n * The style tags will be at the beginning of the head before all author\n * styles. One element can be the main runtime CSS. This is guaranteed\n * to always be the first stylesheet in the doc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc The ampdoc that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are available.\n *     Not using a promise, because this is synchronous when possible.\n *     for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\nexport function installStylesForDoc(\n  ampdoc,\n  cssText,\n  cb,\n  opt_isRuntimeCss,\n  opt_ext\n) {\n  const cssRoot = ampdoc.getHeadNode();\n  const style = insertStyleElement(\n    cssRoot,\n    maybeTransform(cssRoot, cssText),\n    opt_isRuntimeCss || false,\n    opt_ext || null\n  );\n\n  if (cb) {\n    const rootNode = ampdoc.getRootNode();\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(rootNode, style)) {\n      cb(style);\n      return style;\n    }\n    // Poll until styles are available.\n    const interval = setInterval(() => {\n      if (styleLoaded(rootNode, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n  return style;\n}\n\n/**\n * Adds the given css text to the given document.\n * TODO(dvoytenko, #22733): Remove this method once FIE/ampdoc migration is\n * done.\n *\n * @param {!Document} doc The document that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are\n *     available. Not using a promise, because this is synchronous when\n *     possible. for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\nexport function installStylesLegacy(\n  doc,\n  cssText,\n  cb,\n  opt_isRuntimeCss,\n  opt_ext\n) {\n  const style = insertStyleElement(\n    dev().assertElement(doc.head),\n    cssText,\n    opt_isRuntimeCss || false,\n    opt_ext || null\n  );\n\n  if (cb) {\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(doc, style)) {\n      cb(style);\n      return style;\n    }\n    // Poll until styles are available.\n    const interval = setInterval(() => {\n      if (styleLoaded(doc, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n  return style;\n}\n\n/**\n * Creates the properly configured style element.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @param {boolean} isRuntimeCss\n * @param {?string} ext\n * @return {!Element}\n */\nfunction insertStyleElement(cssRoot, cssText, isRuntimeCss, ext) {\n  let styleMap = cssRoot[STYLE_MAP_PROP];\n  if (!styleMap) {\n    styleMap = cssRoot[STYLE_MAP_PROP] = map();\n  }\n\n  const isExtCss =\n    !isRuntimeCss && (ext && ext != 'amp-custom' && ext != 'amp-keyframes');\n  const key = isRuntimeCss\n    ? 'amp-runtime'\n    : isExtCss\n    ? `amp-extension=${ext}`\n    : null;\n\n  // Check if it has already been created or discovered.\n  if (key) {\n    const existing = getExistingStyleElement(cssRoot, styleMap, key);\n    if (existing) {\n      if (existing.textContent !== cssText) {\n        existing.textContent = cssText;\n      }\n      return existing;\n    }\n  }\n\n  // Create the new style element and append to cssRoot.\n  const doc = cssRoot.ownerDocument || cssRoot;\n  const style = doc.createElement('style');\n  style./*OK*/ textContent = cssText;\n  let afterElement = null;\n  // Make sure that we place style tags after the main runtime CSS. Otherwise\n  // the order is random.\n  if (isRuntimeCss) {\n    style.setAttribute('amp-runtime', '');\n  } else if (isExtCss) {\n    style.setAttribute('amp-extension', ext || '');\n    afterElement = dev().assertElement(\n      getExistingStyleElement(cssRoot, styleMap, 'amp-runtime')\n    );\n  } else {\n    if (ext) {\n      style.setAttribute(ext, '');\n    }\n    afterElement = cssRoot.lastChild;\n  }\n  insertAfterOrAtStart(cssRoot, style, afterElement);\n  if (key) {\n    styleMap[key] = style;\n  }\n  return style;\n}\n\n/**\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {!Object<string, !Element>} styleMap\n * @param {string} key\n * @return {?Element}\n */\nfunction getExistingStyleElement(cssRoot, styleMap, key) {\n  // Already cached.\n  if (styleMap[key]) {\n    return styleMap[key];\n  }\n  // Check if the style has already been added by the server layout.\n  const existing = cssRoot./*OK*/ querySelector(`style[${key}]`);\n  if (existing) {\n    styleMap[key] = existing;\n    return existing;\n  }\n  // Nothing found.\n  return null;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {function(string):string} transformer\n */\nexport function installCssTransformer(cssRoot, transformer) {\n  cssRoot[TRANSFORMER_PROP] = transformer;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @return {string}\n */\nfunction maybeTransform(cssRoot, cssText) {\n  const transformer = cssRoot[TRANSFORMER_PROP];\n  return transformer ? transformer(cssText) : cssText;\n}\n\n/** @private {boolean} */\nlet bodyMadeVisible = false;\n\n/**\n * @param {boolean} value\n * @visibleForTesting\n */\nexport function setBodyMadeVisibleForTesting(value) {\n  bodyMadeVisible = value;\n}\n\n/**\n * Sets the document's body opacity to 1.\n * If the body is not yet available (because our script was loaded\n * synchronously), polls until it is.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisible(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  const win = /** @type {!Window} */ (doc.defaultView);\n  waitForBodyOpenPromise(doc)\n    .then(() => {\n      return waitForServices(win);\n    })\n    .catch(reason => {\n      rethrowAsync(reason);\n      return [];\n    })\n    .then(services => {\n      bodyMadeVisible = true;\n      setBodyVisibleStyles(doc);\n      const ampdoc = getAmpdoc(doc);\n      ampdoc.signals().signal(CommonSignals.RENDER_START);\n      if (services.length > 0) {\n        const resources = Services.resourcesForDoc(doc.documentElement);\n        resources./*OK*/ schedulePass(1, /* relayoutAll */ true);\n      }\n      try {\n        const perf = Services.performanceFor(win);\n        perf.tick('mbv');\n        perf.flush();\n      } catch (e) {}\n    });\n}\n\n/**\n * Set the document's body opacity to 1. Called in error cases.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisibleRecovery(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  if (bodyMadeVisible) {\n    return;\n  }\n  bodyMadeVisible = true;\n  setBodyVisibleStyles(doc);\n}\n\n/**\n * Make sure that body exists, and make it visible.\n * @param {!Document} doc\n */\nfunction setBodyVisibleStyles(doc) {\n  setStyles(dev().assertElement(doc.body), {\n    opacity: 1,\n    visibility: 'visible',\n    'animation': 'none',\n  });\n}\n\n/**\n * Indicates that the body is always visible. For instance, in case of PWA.\n * This check is on a module level variable, and could be problematic if you are\n * relying on this function across different binaries.\n * @param {!Window} unusedWin\n */\nexport function bodyAlwaysVisible(unusedWin) {\n  bodyMadeVisible = true;\n}\n\n/**\n * Checks whether a style element was registered in the DOM.\n * @param {!Document|!ShadowRoot} doc\n * @param {!Element} style\n * @return {boolean}\n */\nfunction styleLoaded(doc, style) {\n  const sheets = doc.styleSheets;\n  for (let i = 0; i < sheets.length; i++) {\n    const sheet = sheets[i];\n    if (sheet.ownerNode == style) {\n      return true;\n    }\n  }\n  return false;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {dev, devAssert} from './log';\nimport {map} from './utils/object.js';\nimport {startsWith} from './string';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\n/**\n * @export\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @export\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (startsWith(camelCase, '--')) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      styles[k].toString(),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (propertyName) {\n    element.style[propertyName] = /** @type {string} */ (opt_units\n      ? value + opt_units\n      : value);\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  if (style === 'display') {\n    dev().error(\n      'STYLE',\n      '`display` style detected. You must use toggle instead.'\n    );\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    dev().error(\n      'STYLE',\n      '`display` style detected in styles. You must use toggle instead.'\n    );\n  }\n  return styles;\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x}, ${opt_y})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n  return `rotate(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!Object<string, string>}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return /** @type {!Object<string, string>} */ (style) || map();\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst toString_ = Object.prototype.toString;\n\n/**\n * Returns the ECMA [[Class]] of a value\n * @param {*} value\n * @return {string}\n */\nfunction toString(value) {\n  return toString_.call(value);\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport function isArray(value) {\n  return Array.isArray(value);\n}\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString(value) === '[object Object]';\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Checks whether `s` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} s\n * @return {boolean}\n * @template T\n */\nexport function isEnumValue(enumObj, s) {\n  for (const k in enumObj) {\n    if (enumObj[k] === s) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {!Window|null} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {tryDecodeUriComponent_} from './url-try-decode-uri-component';\n\nconst regex = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * DO NOT import the function from this file. Instead, import parseQueryString\n * from `src/url.js`.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString_(queryString) {\n  const params = /** @type {!JsonObject} */ (Object.create(null));\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = regex.exec(queryString))) {\n    const name = tryDecodeUriComponent_(match[1], match[1]);\n    const value = match[2] ? tryDecodeUriComponent_(match[2], match[2]) : '';\n    params[name] = value;\n  }\n  return params;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * DO NOT import the function from this file. Instead, import\n * tryDecodeUriComponent from `src/url.js`.\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent_(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LruCache} from './utils/lru-cache';\nimport {dict, hasOwn} from './utils/object';\nimport {endsWith, startsWith} from './string';\nimport {getMode} from './mode';\nimport {isArray} from './types';\nimport {parseQueryString_} from './url-parse-query-string';\nimport {tryDecodeUriComponent_} from './url-try-decode-uri-component';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\n/**\n * @type {!JsonObject}\n */\nconst SERVING_TYPE_PREFIX = dict({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n  // Actions viewer\n  'action': true,\n});\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet a;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet cache;\n\n/** @private @const Matches amp_js_* parameters in query string. */\nconst AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n\n/** @private @const Matches amp_gsa parameters in query string. */\nconst AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n\n/** @private @const Matches amp_r parameters in query string. */\nconst AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n\n/** @private @const Matches amp_kit parameters in query string. */\nconst AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n\n/** @private @const Matches usqp parameters from goog experiment in query string. */\nconst GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\n\nconst INVALID_PROTOCOLS = [\n  /*eslint no-script-url: 0*/ 'javascript:',\n  /*eslint no-script-url: 0*/ 'data:',\n  /*eslint no-script-url: 0*/ 'vbscript:',\n];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a = /** @type {!HTMLAnchorElement} */ (self.document.createElement('a'));\n    cache = self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, opt_nocache ? null : cache);\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(a, url, opt_cache) {\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = getMode().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  const field = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    const v = params[k];\n    if (v == null) {\n      continue;\n    } else if (isArray(v)) {\n      for (let i = 0; i < v.length; i++) {\n        const sv = /** @type {string} */ (v[i]);\n        s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n      }\n    } else {\n      const sv = /** @type {string} */ (v);\n      s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  // (erwinm, #4560): type cast necessary until #4560 is fixed.\n  const theUrlString = /** @type {string} */ (urlString);\n  userAssert(\n    isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    theUrlString\n  );\n  return theUrlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * This function is implemented in a separate file to avoid a circular\n * dependency.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  return parseQueryString_(queryString);\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.cdnProxyRegex.test(url.origin);\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.localhostRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const parsed = parseUrlDeprecated(url);\n  const search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const search = urlSearch\n    .replace(AMP_JS_PARAMS_REGEX, '')\n    .replace(AMP_GSA_PARAMS_REGEX, '')\n    .replace(AMP_R_PARAMS_REGEX, '')\n    .replace(AMP_KIT_PARAMS_REGEX, '')\n    .replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '')\n    .replace(/^[?&]/, ''); // Removes first ? or &.\n  return search ? '?' + search : '';\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}=[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX[prefix],\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  if (typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private Visible for testing.\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (startsWith(relativeUrlString.toLowerCase(), relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (startsWith(relativeUrlString, '//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (startsWith(relativeUrlString, '/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} opt_fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, opt_fallback) {\n  return tryDecodeUriComponent_(component, opt_fallback);\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// TODO(rsimha, #15334): Enable this rule.\n/* eslint jsdoc/check-types: 0 */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nexport function once(fn) {\n  let evaluated = false;\n  let retValue = null;\n  let callback = fn;\n  return (...args) => {\n    if (!evaluated) {\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n    return retValue;\n  };\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dev} from '../log';\n\n/** @const {string} */\nconst TAG = 'lru-cache';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = Object.create(null);\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    dev().warn(TAG, 'Trimming LRU cache');\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../log';\n\n/**\n * Maps a value in a first range to its equivalent in a second range\n * Ex.: 5 in the range [0,10] gives 60 in the range[40,80]\n *\n * NOTE: lower/upper bounds on the source range are detected automatically,\n * however the bounds on the target range are not altered (thus the target\n * range could be decreasing).\n * Ex1: 8 in the range [0, 10] gives 2 in the range [10, 0]\n * Ex2: also, 8 in the range [10, 0] gives 2 in the range [10, 0]\n *\n * NOTE: Input value is enforced to be bounded inside the source range\n * Ex1: -2 in the range [0, 10] is interpreted as 0 and thus gives 40 in [40,80]\n * Ex2: 19 in the range [0, 5] is interpreted as 5 and thus gives 80 in [40,80]\n *\n * @param {number} val the value in the source range\n * @param {number} min1 the lower bound of the source range\n * @param {number} max1 the upper bound of the source range\n * @param {number} min2 the lower bound of the target range\n * @param {number} max2 the upper bound of the target range\n * @return {number} the equivalent value in the target range\n */\nexport function mapRange(val, min1, max1, min2, max2) {\n  let max1Bound = max1;\n  let min1Bound = min1;\n  if (min1 > max1) {\n    max1Bound = min1;\n    min1Bound = max1;\n  }\n\n  if (val < min1Bound) {\n    val = min1Bound;\n  } else if (val > max1Bound) {\n    val = max1Bound;\n  }\n\n  return ((val - min1) * (max2 - min2)) / (max1 - min1) + min2;\n}\n\n/**\n * Computes the modulus of values `a` and `b`.\n *\n * This is needed because the % operator in JavaScript doesn't implement\n * modulus behavior as can be seen by the spec here:\n * http://www.ecma-international.org/ecma-262/5.1/#sec-11.5.3.\n * It instead is used to obtain the remainder of a division.\n * This function uses the remainder (%) operator to determine the modulus.\n * Derived from here:\n * https://stackoverflow.com/questions/25726760/javascript-modular-arithmetic/47354356#47354356\n *\n * @param {number} a\n * @param {number} b\n * @return {number} returns the modulus of the two numbers.\n * @example\n *\n * _.min(10, 5);\n * // => 0\n *\n * _.mod(-1, 5);\n * // => 4\n */\nexport function mod(a, b) {\n  return a > 0 && b > 0 ? a % b : ((a % b) + b) % b;\n}\n\n/**\n * Restricts a number to be in the given min/max range. The minimum value must\n * be less than or equal to the maximum value.\n *\n * Examples:\n * clamp(0.5, 0, 1) -> 0.5\n * clamp(1.5, 0, 1) -> 1\n * clamp(-0.5, 0, 1) -> 0\n *\n * @param {number} val the value to clamp.\n * @param {number} min the lower bound.\n * @param {number} max the upper bound.\n * @return {number} the clamped value.\n */\nexport function clamp(val, min, max) {\n  devAssert(min <= max, 'Minimum value is greater than the maximum.');\n  return Math.min(Math.max(val, min), max);\n}\n\n/**\n * Returns value bound to min and max values +/- extent. The lower bound must\n * be less than or equal to the upper bound.\n * @param {number} val the value to bound.\n * @param {number} min the lower bound.\n * @param {number} max the upper bound\n * @param {number} extent the allowed extent beyond the bounds.\n * @return {number} the bounded value.\n */\nexport function boundValue(val, min, max, extent) {\n  devAssert(min <= max, 'Lower bound is greater than the upper bound.');\n  return clamp(val, min - extent, max + extent);\n}\n\n/**\n * Returns the length of a vector given in X- and Y-coordinates.\n * @param {number} deltaX distance in the X direction.\n * @param {number} deltaY distance in the Y direction.\n * @return {number} the magnitude of the vector.\n */\nexport function magnitude(deltaX, deltaY) {\n  return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n}\n\n/**\n * Returns the distance between two points.\n * @param {number} x1 X-coordinate of the first point.\n * @param {number} y1 Y-coordinate of the first point.\n * @param {number} x2 X-coordinate of the second point.\n * @param {number} y2 Y-coordinate of the second point.\n * @return {number} the distance between the two points.\n */\nexport function distance(x1, y1, x2, y2) {\n  return magnitude(x2 - x1, y2 - y1);\n}\n\n/**\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} radius\n * @param {number} angleInDegrees\n * @return {{\n *  x: number,\n *  y: number,\n * }}\n */\nexport function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\n\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians),\n  };\n}\n\n/**\n * Sums up the values of the given array and returns the result\n * @param {Array<number>} values\n * @return {number}\n */\nexport function sum(values) {\n  return values.reduce(function(a, b) {\n    return a + b;\n  });\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isObject} from '../types';\n\n/* @const */\nconst hasOwn_ = Object.prototype.hasOwnProperty;\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {t, s, d} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    Object.keys(s).forEach(key => {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          return;\n        }\n      }\n      t[key] = newValue;\n    });\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /**\n   * Creates an instance of Deferred.\n   */\n  constructor() {\n    let resolve, reject;\n\n    /**\n     * @const {!Promise<T>}\n     */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n\n    /**\n     * @const {function(T=)}\n     */\n    this.resolve = resolve;\n\n    /**\n     * @const {function(*=)}\n     */\n    this.reject = reject;\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise(resolve => {\n    resolve(fn());\n  });\n}\n\n/**\n * Returns a promise which resolves if a threshold amount of the given promises\n * resolve, and rejects otherwise.\n * @param {!Array<!Promise>} promises The array of promises to test.\n * @param {number} count The number of promises that must resolve for the\n *     returned promise to resolve.\n * @return {!Promise} A promise that resolves if any of the given promises\n *     resolve, and which rejects otherwise.\n */\nexport function some(promises, count = 1) {\n  return new Promise((resolve, reject) => {\n    count = Math.max(count, 0);\n    const extra = promises.length - count;\n    if (extra < 0) {\n      reject(new Error('not enough promises to resolve'));\n    }\n    if (promises.length == 0) {\n      resolve([]);\n    }\n    const values = [];\n    const reasons = [];\n\n    const onFulfilled = value => {\n      if (values.length < count) {\n        values.push(value);\n      }\n      if (values.length == count) {\n        resolve(values);\n      }\n    };\n    const onRejected = reason => {\n      if (reasons.length <= extra) {\n        reasons.push(reason);\n      }\n      if (reasons.length > extra) {\n        reject(reasons);\n      }\n    };\n    for (let i = 0; i < promises.length; i++) {\n      Promise.resolve(promises[i]).then(onFulfilled, onRejected);\n    }\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!Promise>=} opt_promises\n   */\n  constructor(opt_promises) {\n    let resolve_, reject_;\n    /** @private @const {!Promise} */\n    this.promise_ = new Promise((resolve, reject) => {\n      resolve_ = resolve;\n      reject_ = reject;\n    });\n\n    /** @private */\n    this.resolve_ = resolve_;\n\n    /** @private */\n    this.reject_ = reject_;\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (let i = 0; i < opt_promises.length; i++) {\n        this.add(opt_promises[i]);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!Promise} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    Promise.resolve(promise).then(\n      result => {\n        if (this.count_ === countAtAdd) {\n          this.resolve_(result);\n        }\n      },\n      error => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.reject_(error);\n        }\n      }\n    );\n    return this.promise_;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.promise_.then(opt_resolve, opt_reject);\n  }\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {dev} from '../log';\nimport {once} from './function';\nimport {setStyles} from '../style';\n\n/**\n * @param {!Window} win\n * @param {boolean} isLiteViewer\n * @return {!Promise<boolean>}\n */\nfunction isAutoplaySupportedImpl(win, isLiteViewer) {\n  // We do not support autoplay in amp-lite viewer regardless of platform.\n  if (isLiteViewer) {\n    return Promise.resolve(false);\n  }\n\n  // To detect autoplay, we create a video element and call play on it, if\n  // `paused` is true after `play()` call, autoplay is supported. Although\n  // this is unintuitive, it works across browsers and is currently the lightest\n  // way to detect autoplay without using a data source.\n  const detectionElement = win.document.createElement('video');\n\n  // NOTE(aghassemi): We need both attributes and properties due to Chrome and\n  // Safari differences when dealing with non-attached elements.\n  detectionElement.setAttribute('muted', '');\n  detectionElement.setAttribute('playsinline', '');\n  detectionElement.setAttribute('webkit-playsinline', '');\n  detectionElement.setAttribute('height', '0');\n  detectionElement.setAttribute('width', '0');\n\n  detectionElement.muted = true;\n  detectionElement.playsinline = true;\n  detectionElement.webkitPlaysinline = true;\n\n  setStyles(detectionElement, {\n    position: 'fixed',\n    top: '0',\n    width: '0',\n    height: '0',\n    opacity: '0',\n  });\n\n  // Promise wrapped this way to catch both sync throws and async rejections.\n  // More info: https://github.com/tc39/proposal-promise-try\n  new Promise(resolve => resolve(detectionElement.play())).catch(() => {\n    // Suppress any errors, useless to report as they are expected.\n  });\n\n  return Promise.resolve(!detectionElement.paused);\n}\n\n/** @private {?(function(Window, boolean):!Promise<boolean>)} */\nlet isAutoplaySupported = null;\n\n/**\n * Sets if autoplay is supported.\n */\nfunction setIsAutoplaySupported() {\n  isAutoplaySupported = /** @type {function(Window, boolean):!Promise<boolean>} */ (once(\n    isAutoplaySupportedImpl\n  ));\n}\n\n/**\n * Wrapper around static utilities for testability.\n */\nexport class VideoUtils {\n  /**\n   * Determines autoplay support.\n   *\n   * Note that even if platfrom supports autoplay, users or browsers can disable\n   * autoplay to save data / battery. This detects both platfrom support and\n   * when autoplay has been disabled by the user.\n   *\n   * @param {!Window} win\n   * @param {boolean} isLiteViewer\n   * @return {!Promise<boolean>}\n   */\n  static isAutoplaySupported(win, isLiteViewer) {\n    if (!isAutoplaySupported) {\n      setIsAutoplaySupported();\n    }\n    return isAutoplaySupported(win, isLiteViewer);\n  }\n\n  /** @visibleForTesting */\n  static resetIsAutoplaySupported() {\n    setIsAutoplaySupported();\n  }\n}\n\n/**\n * @param {!Element} element\n * @return {!Element}\n * Note: Not included in `VideoUtils` as we don't need to test a\n * static selector.\n */\nexport function getInternalVideoElementFor(element) {\n  return dev().assertElement(element.querySelector('video, iframe'));\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const MIN_VISIBILITY_RATIO_FOR_AUTOPLAY = 0.5;\n\n/**\n * VideoInterface defines a common video API which any AMP component that plays\n * videos is expected to implement.\n *\n * AMP runtime uses this common API to provide consistent video experience and\n * analytics across all video players.\n *\n * Components implementing this interface must also extend\n * {@link ./base-element.BaseElement} and register with the\n * Video Manager {@link ./service/video-manager-impl.VideoManager} during\n * their `builtCallback`.\n *\n * @interface\n */\nexport class VideoInterface {\n  /**\n   * Whether the component supports video playback in the current platform.\n   * If false, component will be not treated as a video component.\n   * @return {boolean}\n   */\n  supportsPlatform() {}\n\n  /**\n   * Whether users can interact with the video such as pausing it.\n   * Example of non-interactive videos include design background videos where\n   * all controls are hidden from the user.\n   *\n   * @return {boolean}\n   */\n  isInteractive() {}\n\n  /**\n   * Current playback time in seconds at time of trigger\n   * @return {number}\n   */\n  getCurrentTime() {}\n\n  /**\n   * Total duration of the video in seconds\n   * @return {number}\n   */\n  getDuration() {}\n\n  /**\n   * Get a 2d array of start and stop times that the user has watched.\n   * @return {!Array<Array<number>>}\n   */\n  getPlayedRanges() {}\n\n  /**\n   * Plays the video..\n   *\n   * @param {boolean} unusedIsAutoplay Whether the call to the `play` method is\n   * triggered by the autoplay functionality. Video players can use this hint\n   * to make decisions such as not playing pre-roll video ads.\n   */\n  play(unusedIsAutoplay) {}\n\n  /**\n   * Pauses the video.\n   */\n  pause() {}\n\n  /**\n   * Mutes the video.\n   */\n  mute() {}\n\n  /**\n   * Unmutes the video.\n   */\n  unmute() {}\n\n  /**\n   * Makes the video UI controls visible.\n   *\n   * AMP will not call this method if `controls` attribute is not set.\n   */\n  showControls() {}\n\n  /**\n   * Hides the video UI controls.\n   *\n   * AMP will not call this method if `controls` attribute is not set.\n   */\n  hideControls() {}\n\n  /**\n   * Returns video's meta data (artwork, title, artist, album, etc.) for use\n   * with the Media Session API\n   * artwork (Array): URL to the poster image (preferably a 512x512 PNG)\n   * title (string): Name of the video\n   * artist (string): Name of the video's author/artist\n   * album (string): Name of the video's album if it exists\n   * @return {!./mediasession-helper.MetadataDef|undefined} metadata\n   */\n  getMetadata() {}\n\n  /**\n   * If this returns true then it will be assumed that the player implements\n   * a feature to enter fullscreen on device rotation internally, so that the\n   * video manager does not override it. If not, the video manager will\n   * implement this feature automatically for videos with the attribute\n   * `rotate-to-fullscreen`.\n   *\n   * @return {boolean}\n   */\n  preimplementsAutoFullscreen() {}\n\n  /**\n   * If this returns true then it will be assumed that the player implements\n   * the MediaSession API internally so that the video manager does not override\n   * it. If not, the video manager will use the metadata variable as well as\n   * inferred meta-data to update the video's Media Session notification.\n   *\n   * @return {boolean}\n   */\n  preimplementsMediaSessionAPI() {}\n\n  /**\n   * Enables fullscreen on the internal video element\n   * NOTE: While implementing, keep in mind that Safari/iOS do not allow taking\n   * any element other than <video> to fullscreen, if the player has an internal\n   * implementation of fullscreen (flash for example) then check\n   * if Services.platformFor(this.win).isSafari is true and use the internal\n   * implementation instead. If not, it is recommended to take the iframe\n   * to fullscreen using fullscreenEnter from dom.js\n   */\n  fullscreenEnter() {}\n\n  /**\n   * Quits fullscreen mode\n   */\n  fullscreenExit() {}\n\n  /**\n   * Returns whether the video is currently in fullscreen mode or not\n   * @return {boolean}\n   */\n  isFullscreen() {}\n\n  /**\n   * Seeks the video to a specified time.\n   * @param {number} unusedTimeSeconds\n   */\n  seekTo(unusedTimeSeconds) {}\n}\n\n/**\n * Attributes\n *\n * Components implementing the VideoInterface are expected to support\n * the following attributes.\n *\n * @const {!Object<string, string>}\n */\nexport const VideoAttributes = {\n  /**\n   * autoplay\n   *\n   * Whether the developer has configured autoplay on the component.\n   * This is normally done by setting `autoplay` attribute on the component.\n   *\n   * AMP runtime manages autoplay behavior itself using methods such as `play`,\n   * `pause`, `showControls`, `hideControls`, `mute`, etc.. therefore components\n   * should not propagate the autoplay attribute to the underlying player\n   * implementation.\n   *\n   * When a video is requested to autoplay, AMP will automatically\n   * mute and hide the controls for the video, when video is 75% visible in\n   * the viewport, AMP will play the video and later pauses it when 25%\n   * or more of the video exits the viewport. If an auto-playing video also has\n   * controls, AMP will install a tap\n   * handler on the video, and when an end-user taps the video, AMP will show\n   * the controls.\n   *\n   */\n  AUTOPLAY: 'autoplay',\n  /**\n   * dock\n   *\n   * Setting the `dock` attribute on the component makes the video minimize\n   * to the corner when scrolled out of view and has been interacted with.\n   */\n  DOCK: 'dock',\n  /**\n   * rotate-to-fullscreen\n   *\n   * If enabled, this automatically expands the currently visible video and\n   * playing to fullscreen when the user changes the device's orientation to\n   * landscape if the video was started following a user interaction\n   * (not autoplay)\n   *\n   * Dependent upon browser support of\n   * http://caniuse.com/#feat=screen-orientation\n   * and http://caniuse.com/#feat=fullscreen\n   */\n  ROTATE_TO_FULLSCREEN: 'rotate-to-fullscreen',\n  /**\n   * noaudio\n   *\n   * If set and autoplay, the equalizer icon will not be displayed.\n   */\n  NO_AUDIO: 'noaudio',\n};\n\n/**\n * Events\n *\n * Components implementing the VideoInterface are expected to dispatch\n * the following DOM events.\n *\n * @const {!Object<string, string>}\n */\nexport const VideoEvents = {\n  /**\n   * registered\n   *\n   * Fired when the video player element is built and has been registered with\n   * the video manager.\n   *\n   * @event registered\n   */\n  REGISTERED: 'registered',\n\n  /**\n   * load\n   *\n   * Fired when the video player is loaded and calls to methods such as `play()`\n   * are allowed.\n   *\n   * @event load\n   */\n  LOAD: 'load',\n\n  /**\n   * loadedmetadata\n   *\n   * Fired when the video's metadata becomes available (e.g. duration).\n   *\n   * @event loadedmetadata\n   */\n  LOADEDMETADATA: 'loadedmetadata',\n\n  /**\n   * playing\n   *\n   * Fired when the video begins playing.\n   *\n   * @event playing\n   */\n  PLAYING: 'playing',\n\n  /**\n   * pause\n   *\n   * Fired when the video pauses.\n   *\n   * @event pause\n   */\n  PAUSE: 'pause',\n\n  /**\n   * ended\n   *\n   * Fired when the video ends.\n   *\n   * This event should be fired in addition to `pause` when video ends.\n   *\n   * @event ended\n   */\n  ENDED: 'ended',\n\n  /**\n   * muted\n   *\n   * Fired when the video is muted.\n   *\n   * @event muted\n   */\n  MUTED: 'muted',\n\n  /**\n   * unmuted\n   *\n   * Fired when the video is unmuted.\n   *\n   * @event unmuted\n   */\n  UNMUTED: 'unmuted',\n\n  /**\n   * amp:video:visibility\n   *\n   * Fired when the video's visibility changes. Normally fired\n   * from `viewportCallback`.\n   *\n   * @event amp:video:visibility\n   * @property {boolean} visible Whether the video player is visible or not.\n   */\n  VISIBILITY: 'amp:video:visibility',\n\n  /**\n   * reload\n   *\n   * Fired when the video's src changes.\n   *\n   * @event reloaded\n   */\n  RELOAD: 'reloaded',\n\n  /**\n   * pre/mid/post Ad start\n   *\n   * Fired when an Ad starts playing.\n   *\n   * This is used to remove any overlay shims during Ad play during autoplay\n   * or minimized-to-corner version of the player.\n   *\n   * @event ad_start\n   */\n  AD_START: 'ad_start',\n\n  /**\n   * pre/mid/post Ad ends\n   *\n   * Fired when an Ad ends playing.\n   *\n   * This is used to restore any overlay shims during Ad play during autoplay\n   * or minimized-to-corner version of the player.\n   *\n   * @event ad_end\n   */\n  AD_END: 'ad_end',\n\n  /**\n   * A 3p video player can send signals for analytics whose meaning doesn't\n   * fit for other events. In this case, a `tick` event is sent with additional\n   * information in its data property.\n   *\n   * @event amp:video:tick\n   */\n  CUSTOM_TICK: 'amp:video:tick',\n};\n\n/** @typedef {string} */\nexport let PlayingStateDef;\n\n/**\n * Playing States\n *\n * Internal playing states used to distinguish between video playing on user's\n * command and videos playing automatically\n *\n * @const {!Object<string, PlayingStateDef>}\n */\nexport const PlayingStates = {\n  /**\n   * playing_manual\n   *\n   * When the video user manually interacted with the video and the video\n   * is now playing\n   *\n   * @event playing_manual\n   */\n  PLAYING_MANUAL: 'playing_manual',\n\n  /**\n   * playing_auto\n   *\n   * When the video has autoplay and the user hasn't interacted with it yet\n   *\n   * @event playing_auto\n   */\n  PLAYING_AUTO: 'playing_auto',\n\n  /**\n   * paused\n   *\n   * When the video is paused.\n   *\n   * @event paused\n   */\n  PAUSED: 'paused',\n};\n\n/** @enum {string} */\nexport const VideoAnalyticsEvents = {\n  /**\n   * video-ended\n   *\n   * Indicates that a video ended.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-ended\n   */\n  ENDED: 'video-ended',\n\n  /**\n   * video-pause\n   *\n   * Indicates that a video paused.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-pause\n   */\n  PAUSE: 'video-pause',\n\n  /**\n   * video-play\n   *\n   * Indicates that a video began to play.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-play\n   */\n  PLAY: 'video-play',\n\n  /**\n   * video-session\n   *\n   * Indicates that some segment of the video played.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-session\n   */\n  SESSION: 'video-session',\n\n  /**\n   * video-session-visible\n   *\n   * Indicates that some segment of the video played in the viewport.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-session-visible\n   */\n  SESSION_VISIBLE: 'video-session-visible',\n\n  /**\n   * video-seconds-played\n   *\n   * Indicates that a video was playing when the\n   * video-seconds-played interval fired.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-session-visible\n   */\n  SECONDS_PLAYED: 'video-seconds-played',\n\n  /**\n   * video-hosted-custom\n   *\n   * Indicates that a custom event incoming from a 3p frame is to be logged.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-custom\n   */\n  CUSTOM: 'video-hosted-custom',\n\n  /**\n   * video-percentage-played\n   *\n   * Indicates that a percentage interval has been played.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-custom\n   */\n  PERCENTAGE_PLAYED: 'video-percentage-played',\n\n  /**\n   * video-ad-start\n   *\n   * Indicates that an ad begins to play.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-ad-start\n   */\n  AD_START: 'video-ad-start',\n\n  /**\n   * video-ad-end\n   *\n   * Indicates that an ad ended.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-ad-end\n   */\n  AD_END: 'video-ad-end',\n};\n\n/**\n * This key can't predictably collide with custom var names as defined in\n * analytics user configuration.\n * @type {string}\n */\nexport const videoAnalyticsCustomEventTypeKey = '__amp:eventType';\n\n/**\n * Helper union type to be used internally, so that the compiler treats\n * `VideoInterface` objects as `BaseElement`s, which they should be anyway.\n *\n * WARNING: Don't use this at the service level. Its `register` method should\n * only allow `VideoInterface` as a guarding measure.\n *\n * @typedef {!VideoInterface|!./base-element.BaseElement}\n */\nexport let VideoOrBaseElementDef;\n\n/**\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isDockable(element) {\n  return element.hasAttribute(VideoAttributes.DOCK);\n}\n\n/** @enum {string} */\nexport const VideoServiceSignals = {\n  USER_INTERACTED: 'user-interacted',\n  AUTOPLAY_DELEGATED: 'autoplay-delegated',\n};\n\n/** @param {!AmpElement|!VideoOrBaseElementDef} video */\nexport function delegateAutoplay(video) {\n  video.signals().signal(VideoServiceSignals.AUTOPLAY_DELEGATED);\n}\n\n/** @param {!AmpElement|!VideoOrBaseElementDef} video */\nexport function userInteractedWith(video) {\n  video.signals().signal(VideoServiceSignals.USER_INTERACTED);\n}\n","/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n"]}