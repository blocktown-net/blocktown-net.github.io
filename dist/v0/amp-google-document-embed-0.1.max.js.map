{"version":3,"sources":["regexp/wrapper","node_modules/browser-pack/_prelude.js","amp-google-document-embed.js","extensions/amp-google-document-embed/0.1/amp-google-document-embed.js","src/config.js","src/css.js","src/dom.js","src/internal-version.js","src/layout.js","src/log.js","src/mode-object.js","src/mode.js","src/static-template.js","src/string.js","src/style.js","src/types.js","src/url-parse-query-string.js","src/url-try-decode-uri-component.js","src/url.js","src/utils/function.js","src/utils/lru-cache.js","src/utils/object.js","src/utils/promise.js","third_party/css-escape/css-escape.js"],"names":[],"mappings":"AAAA;ACAA;ACCA;AACA;AACA;AACA;AACA;ACwBA;ADtBA;ACuBA;ADrBA;ACsBA;ADpBA;ACqBA;ADnBA;AACA;AACA;ACmBO;ADjBP;ACmBA;AAEA;ADlBA;AACA;AACA;AACA;AACA;AACA;ACgBE;AACA;AAAqB;ADbvB;ACcI;AAEA;ADbJ;ACcI;AAJmB;AAKpB;AAED;ADZF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACUI;AACD;AAED;ADTF;AACA;AACA;ACSI;AACA;AACA;AACA;AACD;AAED;ADRF;AACA;AACA;ACQI;AACD;AAED;ADPF;AACA;AACA;ACOI;AAKD;AAED;ADVF;AACA;AACA;ACUI;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACD;AAED;ADZF;AACA;AACA;ACYI;AACO;AAAA;AAEP;AACA;AAAwC;AAA6B;AACrE;ADRJ;ACSI;AACE;AACD;AACF;AAED;ADRF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACQI;AACE;AACD;ADNL;ACOI;AAKD;AAED;ADVF;AACA;AACA;ACUI;AACD;AAED;ADTF;AACA;AACA;ACSI;AACE;AACA;AACD;ADPL;ACQI;AACD;ADNH;AACA;AACA;AACA;AACA;ACKA;AACE;AACD;ADHD;AACA;AACA;AACA;AACA;AACA;AACA;AElJA;AFoJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AElJA;AFoJA;AACA;AACA;AACA;AACA;AACA;AElJA;AAEA;AAKA;AAKA;AF2IA;AE1IO;AACL;AACA;AACA;AACA;AF4IF;AE3IE;AF6IF;AACA;AE3IE;AAEA;AACA;AAEA;AF2IF;AE1IE;AF4IF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AE1IE;AAvBkB;AFoKpB;AEvIO;AACL;AADoB;AF2ItB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGxMA;AH0MA;AGzMA;AH2MA;AG5NA;AH8NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGzNA;AH2NA;AACA;AACA;AACA;AACA;AGzNO;AACL;AACD;AAED;AH0NA;AACA;AACA;AACA;AG1NA;AAEA;AH2NA;AACA;AACA;AACA;AG1NO;AACL;AACD;AAED;AH2NA;AACA;AACA;AACA;AACA;AACA;AG3NO;AACL;AACE;AACD;AH6NH;AG3NE;AACD;AAED;AH4NA;AACA;AACA;AACA;AACA;AACA;AG5NA;AACE;AACE;AACA;AACA;AACA;AAEA;AH6NJ;AG5NI;AAAmB;AAAO;AAC3B;AACC;AACD;AACF;AAED;AH+NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG/NO;AACL;AACD;AAED;AHgOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGhOO;AACL;AACD;AAED;AHiOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGjOO;AACL;AHmOF;AGjOE;AACA;AACD;AHmOD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIrYA;AJuYA;AItYA;AJwYA;AInYA;AJqYA;AIpYA;AJsYA;AIrYA;AJuYA;AItYA;AJwYA;AIjaA;AJmaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIrZA;AACE;AACA;AACA;AACA;AACA;AACA;AANwB;AAQ1B;AAEA;AJsZA;AIrZO;AAEP;AJsZA;AACA;AItZO;AAEP;AJuZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIxZO;AACL;AACE;AACA;AACD;AACD;AJ0ZF;AACA;AI1ZE;AJ4ZF;AI3ZE;AACE;AACA;AACE;AACE;AACA;AACD;AACF;AACD;AAA0B;AAAD;AAC1B;AACC;AACA;AACE;AACE;AACA;AACD;AACF;AAAE;AAAmB;AACvB;AACF;AAED;AJgaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIhaO;AACL;AACE;AACD;AACF;AAED;AJiaA;AACA;AACA;AACA;AACA;AACA;AIjaO;AACL;AAAkC;AAAA;AACnC;AAED;AJoaA;AACA;AACA;AACA;AACA;AACA;AIpaO;AACL;AAA0B;AAAA;AAC3B;AAED;AJuaA;AACA;AACA;AACA;AACA;AIvaO;AACL;AACE;AACD;AACF;AAED;AJwaA;AACA;AACA;AACA;AACA;AIxaO;AACL;AACE;AACD;AACF;AAED;AJyaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIzaO;AACL;AJ2aF;AI1aE;AACE;AACD;AJ4aH;AI3aE;AACD;AAED;AJ4aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI5aO;AACL;AACA;AACD;AAED;AJ6aA;AACA;AACA;AACA;AACA;AACA;AACA;AI7aO;AACL;AACE;AACD;AJ+aH;AI9aE;AACD;AAED;AJ+aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI/aO;AACL;AACA;AACD;AAED;AJgbA;AACA;AACA;AACA;AACA;AACA;AACA;AIhbO;AACL;AJkbF;AIjbE;AACE;AACD;AJmbH;AACA;AIjbE;AJmbF;AIlbE;AACE;AJobJ;AInbI;AACE;AACD;AACC;AACD;AACF;AJqbH;AIpbE;AACD;AAED;AJqbA;AACA;AACA;AACA;AACA;AACA;AIrbO;AACL;AACE;AACA;AACD;AJubH;AItbE;AJwbF;AItbE;AJwbF;AIvbE;AACD;AAED;AJwbA;AACA;AACA;AACA;AACA;AACA;AIxbO;AACL;AACA;AACE;AACD;AAED;AJybF;AACA;AIzbE;AACE;AACD;AJ2bH;AI1bE;AACoB;AAAwB;AAG7C;AAED;AJ0bA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI1bO;AACL;AACE;AACE;AACD;AACF;AJ4bH;AI3bE;AACD;AAED;AJ4bA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI5bO;AACL;AACE;AACE;AACD;AACF;AJ8bH;AI7bE;AACD;AAED;AJ8bA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI9bO;AACL;AACE;AACD;AJgcH;AI9bE;AACE;AACD;AACF;AAED;AJ+bA;AACA;AACA;AACA;AACA;AACA;AACA;AI/bO;AACL;AJicF;AIhcE;AAKE;AACE;AACD;AACF;AJ8bH;AI7bE;AACD;AAED;AJ8bA;AACA;AACA;AACA;AACA;AACA;AACA;AI9bO;AACL;AACA;AACA;AACE;AACD;AACF;AAED;AJ+bA;AACA;AACA;AACA;AACA;AACA;AACA;AI/bO;AACL;AAKE;AACE;AACD;AACF;AJ6bH;AI5bE;AACD;AAED;AJ6bA;AACA;AACA;AACA;AACA;AACA;AACA;AI7bO;AACL;AJ+bF;AI9bE;AAKE;AACE;AACD;AACF;AJ4bH;AI3bE;AACD;AAED;AJ4bA;AACA;AACA;AACA;AACA;AACA;AACA;AI5bO;AACL;AAKE;AACE;AACD;AACF;AJ0bH;AIzbE;AACD;AAED;AJ0bA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI1bO;AACL;AJ4bF;AI3bE;AACE;AACE;AACD;AACF;AJ6bH;AI5bE;AACD;AAED;AJ6bA;AACA;AACA;AACA;AACA;AACA;AACA;AI7bO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AJicA;AACA;AACA;AACA;AACA;AACA;AACA;AIjcO;AACL;AACA;AACE;AACD;AACF;AAED;AJkcA;AACA;AACA;AACA;AACA;AACA;AACA;AIlcO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AJscA;AACA;AACA;AACA;AACA;AACA;AACA;AItcO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AJ0cA;AACA;AACA;AACA;AACA;AACA;AACA;AI1cO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AJ8cA;AACA;AACA;AACA;AACA;AACA;AACA;AI9cO;AACL;AJgdF;AI1cE;AACE;AACD;AJ4cH;AI3cE;AACD;AAED;AJ4cA;AACA;AACA;AACA;AACA;AACA;AACA;AI5cO;AACL;AACA;AAAe;AAAO;AACvB;AAED;AJ+cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI/cA;AACE;AACA;AACA;AACA;AAAsB;AAAO;AAC7B;AACA;AACD;AAED;AJkdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIldO;AACL;AACE;AAAY;AAAO;AACpB;AJsdH;AACA;AIpdE;AACA;AACD;AAED;AJqdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIrdO;AACL;AACE;AAAY;AAAO;AAGpB;AJudH;AACA;AIrdE;AACD;AAED;AJsdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AItdO;AAKL;AAA6D;AAAA;AJsd/D;AIvdE;AAGA;AACA;AJudF;AItdE;AACE;AJwdJ;AIvdI;AACE;AJydN;AIxdM;AACD;AACF;AJ0dH;AIzdE;AACD;AAED;AJ0dA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI1dO;AACL;AJ4dF;AI3dE;AACE;AACE;AACD;AACF;AJ6dH;AIzdE;AACD;AAED;AJ0dA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI1dO;AACL;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAED;AJ2dA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI3dO;AAAqC;AJ8d5C;AI5dE;AACE;AACD;AACF;AAED;AJ6dA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI7dO;AACL;AACA;AACA;AACA;AJ+dF;AI9dE;AACE;AACD;AACC;AACD;AJgeH;AACA;AI9dE;AACE;AACD;AJgeH;AI/dE;AACD;AAED;AJgeA;AACA;AACA;AACA;AACA;AACA;AIheO;AACL;AAKD;AAED;AJ6dA;AACA;AACA;AACA;AACA;AACA;AI7dO;AACL;AAID;AAED;AJ2dA;AACA;AACA;AACA;AACA;AACA;AI3dO;AACL;AAIA;AACD;AAED;AJydA;AACA;AACA;AACA;AACA;AACA;AIzdO;AACL;AACE;AACD;AJ2dH;AI1dE;AACD;AAED;AJ2dA;AACA;AACA;AACA;AACA;AI3dA;AACE;AACD;AAED;AJ4dA;AACA;AACA;AACA;AACA;AACA;AI5dO;AACL;AACE;AAAQ;AAAO;AAChB;AAEA;AACF;AAED;AJ8dA;AACA;AACA;AACA;AACA;AACA;AI9dO;AACL;AACD;AAED;AJ+dA;AACA;AACA;AACA;AACA;AACA;AI/dO;AACL;AAEA;AJgeF;AI/dE;AAGE;AAEH;AAED;AJ6dA;AACA;AACA;AACA;AACA;AACA;AACA;AI7dO;AACL;AJ+dF;AI9dE;AACE;AACA;AACD;AAED;AJ+dF;AACA;AI/dE;AACE;AACA;AACA;AACD;AJieH;AI/dE;AACD;AAED;AJgeA;AACA;AACA;AACA;AACA;AACA;AIheO;AACL;AJkeF;AI3dE;AACE;AACD;AACF;AAED;AJ4dA;AACA;AACA;AACA;AACA;AACA;AI5dO;AACL;AJ8dF;AIvdE;AACE;AACA;AACD;AJydH;AIpewC;AJsexC;AIzdE;AACE;AACD;AJ2dH;AI1dE;AJ4dF;AIrdE;AACE;AACD;AACF;AAED;AJsdA;AACA;AACA;AACA;AACA;AACA;AACA;AItdO;AAAsC;AJyd7C;AIvdE;AACE;AACD;AJydH;AI7d6C;AJ+d7C;AIzdE;AACE;AACD;AJ2dH;AI1dE;AAKA;AACD;AAED;AJudA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIvdO;AACL;AACD;AAED;AJwdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIxdO;AACL;AACE;AACD;AJ0dH;AIxdE;AACA;AJ0dF;AItdE;AACE;AACD;AJwdH;AACA;AItdE;AACD;AAED;AJudA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIvdO;AACL;AACA;AJydF;AIvdE;AACE;AACE;AACD;AACC;AACD;AACF;AJydH;AIvdE;AACD;AAED;AJwdA;AACA;AACA;AACA;AACA;AIxdO;AAAwC;AAE7C;AAAwB;AAAO;AAC/B;AAAsC;AAAO;AAC7C;AACD;AJ8dD;AACA;AACA;AACA;AACA;AACA;AACA;AKh4CA;ALk4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKh4CA;ALk4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKh4CO;AACL;AACD;ALk4CD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AM75CA;AN+5CA;AM95CA;ANg6CA;AM/5CA;ANi6CA;AMh6CA;ANk6CA;AMj6CA;ANm6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AM76CA;AN+6CA;AACA;AM76CO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAToB;AAYtB;AN86CA;AACA;AACA;AACA;AACA;AACA;AM96CO;AACL;AACA;AACA;AACA;AAJ4B;AAO9B;AN+6CA;AACA;AACA;AACA;AACA;AM/6CO;AAEP;ANg7CA;AACA;AACA;AACA;AACA;AACA;AACA;AMh7CA;AAEA;ANi7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMh7CO;AACL;AAAc;AAAc;AAAf;AACb;AAAkB;AAAc;AAAf;AACjB;AACA;AACA;AAAqB;AAAe;AAAhB;AALY;AAQlC;AN07CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AM17CO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAd+B;AAgBjC;AN47CA;AACA;AACA;AACA;AACA;AACA;AACA;AM57CA;AAEA;AN67CA;AACA;AACA;AACA;AACA;AM57CO;AACL;AACE;AACE;AACD;AACF;AN87CH;AM77CE;AACD;AAED;AN87CA;AACA;AACA;AACA;AACA;AM97CO;AACL;AACD;AAED;AN+7CA;AACA;AACA;AACA;AACA;AACA;AM/7CO;AACL;AASD;AAED;ANw7CA;AACA;AACA;AACA;AACA;AACA;AMx7CO;AACL;AACD;AAED;ANy7CA;AACA;AACA;AACA;AACA;AACA;AMz7CO;AACL;AACA;AACD;AAED;AN07CA;AACA;AACA;AACA;AACA;AACA;AACA;AM17CO;AACL;AACE;AACD;AN47CH;AM37CE;AACE;AACD;AN67CH;AM57CE;AACE;AACD;AN87CH;AM77CE;AACE;AACD;AN+7CH;AM97CE;AACD;AAED;AN+7CA;AACA;AACA;AACA;AACA;AACA;AACA;AM/7CO;AACL;AAKA;AAAO;AAA2B;AAAlC;AACD;AAED;AN+7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AM/7CO;AACL;AAKA;AACD;AAED;AN47CA;AACA;AACA;AACA;AACA;AACA;AM57CO;AACL;AACA;AACA;AAKA;AACD;AAED;ANy7CA;AACA;AACA;AACA;AACA;AACA;AMz7CO;AACL;AACA;AACD;AAED;AN07CA;AACA;AACA;AACA;AACA;AACA;AACA;AM17CO;AACL;AACA;AACD;AAED;AN27CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AM37CO;AACL;AACA;AN67CF;AM57CE;AACE;AACA;AACA;AN87CJ;AM57CI;AACA;AACE;AACA;AAFc;AAIhB;AACA;AACE;AAAa;AAAO;AACpB;AAAc;AAAO;AAFO;AAI9B;AACD;ANk8CH;AMj8CE;AAAO;AAA8B;AAArC;AACD;AAED;ANq8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMr8CO;AACL;AACA;AACD;AAED;ANs8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMt8CO;AACL;AACE;AACD;ANw8CH;AMv8CE;AACD;AAED;ANw8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMx8CO;AACL;AACA;AACA;AACA;AACA;AN08CF;AMz8CE;AACE;AAAe;AAAwB;AN68C3C;AM18CI;AAIE;AACA;AAED;AACC;AAEA;ANu8CN;AMt8CM;AACD;ANw8CL;AMv8CI;AACD;AAGD;AACA;AAEA;ANs8CF;AACA;AMt8CE;AACA;AACA;AACA;AACA;ANw8CF;AMr8CE;AACA;AACA;ANu8CF;AMt8CE;AAEA;AACA;ANu8CF;AMt8CE;AAEA;ANu8CF;AMp8CE;AACA;AACA;ANs8CF;AMn8CE;AAOE;AACA;AACA;AACA;AAIA;AACD;AACC;AACA;AACD;AN47CH;AACA;AM17CE;AACE;AACD;AACC;AACD;AACC;AACD;AACC;AACD;AACC;AACD;AACC;AACD;AN47CH;AACA;AM17CE;AAME;AACD;ANu7CH;AMt7CE;AACE;AAMD;ANm7CH;AMl7CE;AAKE;AAKD;AN46CH;AM16CE;AACE;AAMD;AACC;AAID;ANo6CH;AACA;AMl6CE;ANo6CF;AMn6CE;AACE;AACD;ANq6CH;AMp6CE;AACE;AACA;AACA;AAEA;ANq6CJ;AMp6CI;AACD;AACC;AACE;AACA;AAFiB;AAIpB;AACC;AACD;AACC;AACA;AACE;AADe;AAIjB;AACA;AACD;AACC;AACA;AACA;AACA;ANq6CJ;AMh6CI;AACA;AAIA;AACA;AACD;AAEA;AAEC;AACA;AACD;AACC;AACA;AACA;AACE;AACD;AN65CL;AM55CI;AACE;AACD;AACF;AACC;AN85CJ;AM75CI;AACE;AACD;AN+5CL;AM95CI;AACD;AAED;AN+5CF;AACA;AM/5CE;AACA;AACD;ANi6CD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOj8DA;APm8DA;AOl8DA;APo8DA;AOn8DA;APq8DA;AOp8DA;APs8DA;AOr8DA;APu8DA;AOt8DA;APw8DA;AO79DA;AP+9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOr9DA;AAEA;APs9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOt9DO;AAEP;APu9DA;AACA;AACA;AACA;AACA;AACA;AOv9DO;AAEP;APw9DA;AACA;AACA;AACA;AACA;AACA;AOz9DO;AACL;AACD;AAED;AP09DA;AACA;AACA;AACA;AACA;AO19DO;AACL;AACD;AAED;AP29DA;AACA;AACA;AACA;AACA;AO39DO;AACL;AACA;AACA;AACA;AACA;AALsB;AAQxB;AP49DA;AACA;AACA;AACA;AACA;AACA;AACA;AO79DO;AACL;AACD;AAED;AP89DA;AACA;AACA;AACA;AACA;AO99DA;AAEA;AP+9DA;AACA;AACA;AO99DO;AACL;AACD;AAED;AP+9DA;AACA;AACA;AACA;AACA;AACA;AACA;AO/9DA;AAAsB;AAAA;AAEtB;APk+DA;AACA;AACA;AACA;AACA;AACA;AACA;AOl+DA;AAA2B;AAEvB;AAAA;AAFuB;AAM3B;APm+DA;AACA;AACA;AACA;AACA;AACA;AOn+DA;AAAuC;AAAA;AAGvC;APq+DA;AACA;AACA;AACA;AACA;AOr+DA;AAAwC;AAAA;AAGxC;APu+DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOz+DE;AP2+DF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOz+DE;AAA6C;AP4+D/C;AO5+D+C;AAAjB;AAAiB;APg/D/C;AO/+DI;APi/DJ;AACA;AACA;AACA;AO/+DI;AAEA;APg/DJ;AO/+DI;AAEA;APg/DJ;AO/+DI;AAEA;APg/DJ;AO/+DI;AAEA;APg/DJ;AO/+DI;AAEA;AACE;AAEgB;AAAA;AAEZ;AACE;AAAiB;AAA4B;AAC9C;AACF;AACJ;AACF;AAED;APg/DF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOl/DI;AACD;AAED;APm/DF;AACA;AACA;AACA;AACA;AACA;AOn/DI;AACA;AACE;AACD;APq/DL;AACA;AOn/DI;AACE;AACD;APq/DL;AACA;AOn/DI;AACE;AACD;APq/DL;AACA;AOn/DI;AACE;AACD;APq/DL;AACA;AOn/DI;AACD;AAED;APo/DF;AACA;AACA;AACA;AACA;AACA;AACA;AOp/DI;AACE;APs/DN;AOr/DM;AACE;AACD;AACC;AACD;AACC;AACD;APu/DP;AOt/DM;APw/DN;AOt/DM;APw/DN;AOv/DM;AACE;AACA;AACD;AACC;AACD;APy/DP;AOx/DM;AACD;AACF;AAED;APy/DF;AACA;AACA;AACA;AACA;AACA;AOz/DI;AACD;AAED;AP0/DF;AACA;AACA;AACA;AACA;AACA;AACA;AO1/DI;AACE;AACD;AACF;AAED;AP2/DF;AACA;AACA;AACA;AACA;AACA;AACA;AO3/DI;AACE;AACD;AACF;AAED;AP4/DF;AACA;AACA;AACA;AACA;AACA;AACA;AO5/DI;AACE;AACD;AACF;AAED;AP6/DF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO7/DI;AACE;AACD;AACC;AAIA;AACA;AACD;AACF;AAED;AP2/DF;AACA;AACA;AACA;AACA;AACA;AACA;AO3/DI;AP6/DJ;AO5/DI;AACE;AP8/DN;AO5/DM;AACD;AACF;AAED;AP6/DF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO7/DI;AP+/DJ;AO9/DI;AACE;APggEN;AO9/DM;AACD;AACF;AAED;AP+/DF;AACA;AACA;AACA;AACA;AACA;AACA;AO//DI;AACA;AACA;AACD;AAED;APggEF;AACA;AACA;AACA;AACA;AACA;AACA;AOhgEI;AACA;AACA;AACA;AACD;AAED;APigEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOjgEI;APmgEJ;AOlgEI;AACE;AAG4B;AAAuB;AAGpD;APigEL;AOhgEI;AACE;AACA;AACA;AACA;AACA;AACA;AACA;APkgEN;AOjgEM;AACE;AACA;APmgER;AOlgEQ;AACE;AACD;APogET;AOngEQ;AACA;AACA;AACD;APqgEP;AOpgEM;AACA;AACA;AACA;AACA;APsgEN;AOpgEM;APsgEN;AOrgEM;AACD;APugEL;AOtgEI;AACD;AAED;APugEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOvgEI;AACA;AAMA;AAAO;AAAyB;AAAhC;AACD;AAED;APsgEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOtgEI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;APqgEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOrgEI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;APogEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOpgEI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;APmgEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOngEI;AAMA;AAAO;AAAwB;AAA/B;AACD;AAED;APkgEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOlgEI;AACE;AACD;APogEL;AOngEI;AACD;AAED;APogEF;AACA;AACA;AACA;AACA;AACA;AOpgEI;APsgEJ;AOrgEI;AACE;AACE;AACD;AACC;AACD;AACF;AACC;AACD;AACF;AAED;APsgEF;AACA;AACA;AACA;AACA;AACA;AACA;AOtgEI;AACE;AAA+B;AAAuB;AACvD;AP0gEL;AOzgEI;AACD;AAED;AP0gEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO1gEI;AACA;AAEA;AACA;AACA;AP2gEJ;AO1gEI;AACE;AACD;AP4gEL;AO3gEI;AACE;AACD;AP6gEL;AO5gEI;AACD;AAED;AP6gEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO7gEI;AACE;AACD;AACC;AACD;AACF;AP+gEH;AACA;AACA;AO9gEA;APghEA;AACA;AACA;AACA;AACA;AACA;AACA;AOlhEA;AAAiC;AAC/B;AAAuB;AADQ;AAAA;AAGjC;APuhEA;AACA;AACA;AACA;AACA;AOvhEA;AACE;AACA;AACE;AACD;APyhEH;AOxhEE;AACD;AAED;APyhEA;AACA;AACA;AACA;AACA;AOzhEA;AACE;AACE;AACD;AACF;AAED;AP0hEA;AACA;AACA;AACA;AACA;AACA;AO1hEO;AACL;AP4hEF;AO3hEE;AACE;AACD;AP6hEH;AOjiEiD;AAAA;AAO/C;AP8hEF;AO5hEE;AACE;AACD;AP8hEH;AACA;AO7hEE;AACA;AACD;AAED;AP8hEA;AACA;AACA;AACA;AACA;AACA;AO9hEO;AACL;AACA;APgiEF;AO/hEE;AACE;APiiEJ;AOhiEI;AACE;AACD;AACC;AACE;AACD;APkiEP;AOjiEM;AACD;AACF;APmiEH;AOjiEE;AACE;AACD;AACC;AACD;APmiEH;AOliEE;AACD;AAED;APmiEA;AACA;AACA;AACA;AACA;AACA;AOniEO;AACL;AACA;AACE;AACA;APqiEJ;AOpiEI;AACD;AACF;AAED;APqiEA;AACA;AACA;AACA;AACA;AACA;AOriEA;AACE;AACA;AACA;AAHiC;AAMnC;AAEA;APqiEA;AACA;AACA;AACA;AACA;AACA;AOpiEA;AAEA;APqiEA;AACA;AACA;AOpiEO;AACL;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;APqiEF;AOpiEE;AACA;AACD;AAED;APqiEA;AACA;AACA;AACA;AOriEO;AACL;AACD;AAED;APsiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOtiEO;AACL;AACE;AACD;APwiEH;AOviEE;AACE;AACD;AACC;AACE;AACD;APyiEL;AOxiEI;AACD;AACF;AAED;APyiEA;AACA;AACA;AACA;AACA;AACA;AOziEA;AACE;AACE;AACD;AP2iEH;AO1iEE;AAGI;AP0iEN;AOziEM;AACE;AACD;AP2iEP;AO1iEM;AACD;AAGJ;AAED;APyiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOziEO;AACL;AACE;AACD;AP2iEH;AO1iEE;AACE;AACD;AP4iEH;AO3iEE;AACE;AP6iEJ;AO5iEI;AACE;AACD;AP8iEL;AO7iEI;AACE;AACD;AP+iEL;AO9iEI;AACD;AACF;AAED;AP+iEA;AACA;AACA;AACA;AACA;AACA;AO/iEO;AACL;AACE;AACD;APijEH;AOhjEE;AACD;AAED;APijEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOjjEO;AAaL;AACE;AACD;APuiEH;AOtiEE;AAAa;AAAc;AAa5B;AAED;AP6hEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO7hEO;AAaL;AAAc;AAAc;AAa7B;APygED;AACA;AACA;AACA;AACA;AACA;AACA;AQv+FA;ARy+FA;AQz/FA;AR2/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQv/FA;ARy/FA;AACA;AACA;AACA;AACA;AQv/FO;AACL;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVK;AAYR;ARy/FD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASvhGA;ATyhGA;ASxhGA;AT0hGA;AS3iGA;AT6iGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASxiGA;AT0iGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASxiGO;AAEP;ATyiGA;AACA;AACA;AACA;AACA;AACA;ASziGA;AAEA;AT0iGA;AACA;AACA;AACA;AACA;ASziGO;AACL;AT2iGF;AS1iGE;AACE;AACD;AT4iGH;AS3iGE;AACD;AAED;AT4iGA;AACA;AACA;AACA;AACA;AACA;AS5iGA;AACE;AACA;AAGA;AACA;AACA;AT4iGF;AS3iGE;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEE;AACA;AAEF;AAEA;ATwiGF;AStiGE;AACE;AACD;AAGD;AACA;AACA;ATsiGF;AACA;AStiGE;AACE;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BK;AA8BR;AAED;ATmiGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASniGA;AACE;AACA;AACA;AACE;AACD;ATqiGH;ASniGE;AACE;AACD;AAGD;AACA;AACA;AACA;ATmiGF;AACA;ASniGE;AACD;AAED;AToiGA;AACA;AACA;AACA;AACA;AACA;AACA;ASpiGO;AACL;AACD;AAED;ATqiGA;AACA;ASriGO;AACL;AACD;ATuiGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AUtsGA;AVwsGA;AUvsGA;AVysGA;AU1tGA;AV4tGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AUttGA;AACA;AAEA;AVutGA;AACA;AACA;AACA;AACA;AACA;AUttGO;AACL;AVwtGF;AUvtGE;AACE;AACD;AVytGH;AUvtGE;AACD;AAED;AVwtGA;AACA;AACA;AACA;AACA;AACA;AACA;AUxtGO;AACL;AV0tGF;AUztGE;AACE;AACD;AV2tGH;AUztGE;AACD;AAED;AV0tGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AU1tGA;AACE;AACD;AAED;AV2tGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AU3tGA;AACE;AACD;AAED;AV4tGA;AACA;AACA;AACA;AACA;AACA;AACA;AU5tGA;AACE;AACA;AAAU;AAAO;AAEjB;AACA;AACA;AV+tGF;AU5tGE;AAEA;AACD;AAED;AV4tGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AU5tGO;AACL;AACA;AV8tGF;AU5tGE;AACE;AACA;AACA;AACA;AACA;AACD;AV8tGH;AU5tGE;AACD;AV8tGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AW/2GA;AXi3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AW/2GA;AXi3GA;AACA;AACA;AACA;AW/2GA;AACE;AACD;AAED;AXg3GA;AACA;AACA;AACA;AACA;AWh3GA;AACE;AACD;AAED;AXi3GA;AACA;AACA;AACA;AACA;AACA;AWj3GO;AACL;AACD;AAED;AXk3GA;AACA;AACA;AACA;AACA;AACA;AACA;AWl3GO;AACL;AACD;AAED;AXm3GA;AACA;AACA;AACA;AACA;AWn3GO;AACL;AACD;AAED;AXo3GA;AACA;AACA;AACA;AACA;AACA;AACA;AWp3GO;AACL;AACA;AACD;AAED;AXq3GA;AACA;AACA;AACA;AACA;AACA;AACA;AWr3GO;AACL;AACE;AACD;AXu3GH;AWt3GE;AACD;AAED;AXu3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWv3GO;AACL;AACE;AACD;AXy3GH;AWx3GE;AACE;AACD;AX03GH;AWz3GE;AACD;AAED;AX03GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AW13GO;AACL;AX43GF;AW73GoE;AAGhE;AACA;AACE;AACA;AACD;AX63GL;AW53GI;AACE;AACD;AAV+D;AXy4GpE;AWv4GE;AAAwC;AX04G1C;AW14G0C;AASvC;AXo4GH;AWn4GE;AACD;AAED;AXo4GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWp4GO;AAA2B;AAEhC;AXs4GF;AWr4GE;AACE;AACD;AXu4GH;AACA;AWt4GE;AACD;AAED;AXu4GA;AACA;AACA;AACA;AACA;AACA;AWv4GO;AACL;AACA;AACE;AACD;AXy4GH;AWv4GE;AACD;AAED;AXw4GA;AACA;AACA;AACA;AACA;AACA;AWx4GO;AACL;AACE;AACD;AX04GH;AWx4GE;AACD;AAED;AXy4GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWz4GO;AACL;AACE;AACD;AX24GH;AW14GE;AACA;AX44GF;AW34GE;AACE;AACD;AX64GH;AW54GE;AACD;AX84GD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYtlHA;AZwlHA;AYvlHA;AZylHA;AYxlHA;AZ0lHA;AY7mHA;AZ+mHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY5mHA;AZ8mHA;AYzmHA;AACA;AAEA;AZ0mHA;AYzmHA;AAEA;AZ0mHA;AACA;AACA;AACA;AACA;AYzmHO;AACL;AACD;AAED;AZ0mHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY1mHA;AACE;AACE;AZ4mHJ;AY3mHI;AACE;AACD;AACF;AZ6mHH;AY5mHE;AACD;AAED;AZ6mHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY7mHO;AACL;AACE;AACA;AACD;AZ+mHH;AY9mHE;AACE;AACD;AZgnHH;AY/mHE;AZinHF;AYhnHE;AACE;AZknHJ;AYjnHI;AACE;AACA;AZmnHN;AYjnHM;AACE;AACD;AACF;AZmnHL;AYlnHI;AACE;AACD;AACF;AZonHH;AYnnHE;AACD;AAED;AZonHA;AACA;AACA;AACA;AACA;AACA;AACA;AYpnHO;AAA6C;AZunHpD;AYrnHE;AACE;AAKD;AACF;AAED;AZknHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYlnHO;AACL;AZonHF;AY/mHE;AACE;AAA8B;AAAuB;AAGtD;AACF;AAED;AZgnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYhnHO;AACL;AZknHF;AY7mHE;AACE;AACD;AZ+mHH;AY9mHE;AACD;AAED;AZ+mHA;AACA;AACA;AACA;AACA;AACA;AACA;AY/mHO;AACL;AACE;AACD;AACF;AAED;AZgnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYhnHO;AACL;AACE;AAID;AZ+mHH;AY9mHE;AACD;AAED;AZ+mHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY/mHO;AACL;AACE;AAID;AZ8mHH;AY7mHE;AACD;AAED;AZ8mHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY9mHO;AAAsC;AAE3C;AAIA;AAMA;AACD;AAED;AZumHA;AACA;AACA;AACA;AACA;AACA;AYvmHO;AACL;AACE;AACD;AZymHH;AYxmHE;AACE;AACD;AACC;AACD;AACF;AAED;AZymHA;AACA;AACA;AACA;AACA;AACA;AYzmHO;AACL;AACD;AAED;AZ0mHA;AACA;AACA;AACA;AACA;AACA;AY1mHO;AACL;AACD;AAED;AZ2mHA;AACA;AACA;AACA;AACA;AACA;AY3mHO;AACL;AACE;AACD;AZ6mHH;AY5mHE;AACD;AAED;AZ6mHA;AACA;AACA;AACA;AACA;AACA;AACA;AY7mHO;AACL;AACE;AACD;AZ+mHH;AY9mHE;AACE;AACD;AZgnHH;AY/mHE;AACE;AACD;AZinHH;AYhnHE;AACD;AAED;AZinHA;AACA;AACA;AACA;AACA;AACA;AYjnHO;AACL;AACD;AAED;AZknHA;AACA;AACA;AACA;AACA;AACA;AYlnHO;AACL;AACE;AACD;AZonHH;AYnnHE;AACD;AAED;AZonHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYpnHO;AACL;AAID;AAED;AZknHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYlnHO;AACL;AAAc;AAAqC;AACnD;AAAO;AAAwC;AAA/C;AACD;AAED;AZwnHA;AACA;AACA;AACA;AACA;AACA;AYxnHO;AACL;AACE;AACD;AACF;AAED;AZynHA;AACA;AACA;AACA;AACA;AACA;AYznHO;AACL;AACE;AACD;AZ2nHH;AYznHE;AACE;AACD;AACF;AZ2nHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa/+HA;Abi/HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa/+HA;AACA;AAEA;Abg/HA;AACA;AACA;AACA;AACA;Aa/+HA;AACE;AACD;AAED;Abg/HA;AACA;AACA;AACA;AACA;AACA;Aah/HO;AACL;AACD;AAED;Abi/HA;AACA;AACA;AACA;AACA;AACA;AACA;Aaj/HO;AACL;AACD;AAED;Abk/HA;AACA;AACA;AACA;AACA;AACA;Aal/HO;AACL;AACD;AAED;Abm/HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aan/HO;AACL;AACD;AAED;Abo/HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aap/HO;AACL;AACE;AACE;AACD;AACF;Abs/HH;Aar/HE;AACD;AAED;Abs/HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aat/HO;AACL;AAAO;AAAwB;AAA/B;AACD;Ab2/HD;AACA;AACA;AACA;AACA;AACA;AACA;AcjlIA;AdmlIA;AcnmIA;AdqmIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AchmIA;AAEA;AdimIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AchmIO;AACL;AAAe;AAA4B;AdomI7C;AcnmIE;AACE;AACD;AdqmIH;AcnmIE;AdqmIF;AcpmIE;AACE;AACA;AACA;AACD;AdsmIH;AcrmIE;AACD;AdumID;AACA;AACA;AACA;AACA;AACA;AACA;AexpIA;Af0pIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AexpIA;Af0pIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AexpIO;AAA0D;AAAf;AAAe;Af6pIjE;Ae5pIE;AACE;AACD;AACC;AACD;AACF;Af8pID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBjtIA;AhBmtIA;AgBltIA;AhBotIA;AgBntIA;AhBqtIA;AgBptIA;AhBstIA;AgBrtIA;AhButIA;AgBttIA;AhBwtIA;AgBvtIA;AhBytIA;AgBxtIA;AhB0tIA;AgBztIA;AhB2tIA;AgBnvIA;AhBqvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBzuIA;AhB2uIA;AACA;AgBzuIA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAV+B;AAajC;AhB0uIA;AACA;AACA;AACA;AgBzuIA;AAEA;AhB0uIA;AACA;AACA;AACA;AACA;AACA;AgBzuIA;AAEA;AhB0uIA;AgBzuIA;AAEA;AhB0uIA;AgBzuIA;AAEA;AhB0uIA;AgBzuIA;AAEA;AhB0uIA;AgBzuIA;AAEA;AhB0uIA;AgBzuIA;AAEA;AACE;AAA4B;AAC5B;AAA4B;AAC5B;AAA4B;AAG9B;AhB2uIA;AgB1uIO;AAEP;AhB2uIA;AACA;AACA;AACA;AACA;AACA;AACA;AgB5uIO;AACL;AACD;AAED;AhB6uIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB7uIO;AACL;AACE;AAAI;AAAmC;AACvC;AACD;AhBivIH;AgB/uIE;AACD;AAED;AhBgvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBhvIO;AACL;AACE;AACD;AhBkvIH;AgBhvIE;AAGA;AhBgvIF;AgB/uIE;AACE;AACD;AhBivIH;AgB/uIE;AAAa;AAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AhBmvIJ;AgB5vIyC;AAavC;AhBkvIF;AgBjvIE;AACE;AACD;AAGD;AhBivIF;AACA;AgBjvIE;AAIE;AACA;AACD;AAGD;AhB8uIF;AACA;AgB9uIE;AhBgvIF;AgB/uIE;AACE;AACD;AACC;AACD;AACC;AACD;AhBivIH;AgBhvIE;AhBkvIF;AgB/uIE;AhBivIF;AgB/uIE;AACE;AACD;AhBivIH;AgB/uIE;AACD;AAED;AhBgvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBhvIO;AAKL;AACE;AACD;AhB8uIH;AgB7uIE;AACA;AAEA;AAOA;AACA;AACD;AACD;AhBwuIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBxuIO;AACL;AACA;AACD;AAED;AhByuIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBzuIO;AACL;AACD;AAED;AhB0uIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB1uIO;AACL;AACA;AACA;AACA;AhB4uIF;AgB3uIE;AACE;AACE;AACD;AACF;AhB6uIH;AgB5uIE;AACD;AAED;AhB6uIA;AACA;AACA;AACA;AACA;AACA;AACA;AgB7uIO;AACL;AhB+uIF;AgB9uIE;AACE;AhBgvIJ;AgB/uII;AACE;AACD;AACC;AACE;AAAW;AAAuB;AAClC;AACD;AACF;AACC;AAAW;AAAuB;AAClC;AACD;AACF;AhBqvIH;AgBpvIE;AACD;AAED;AhBqvIA;AACA;AACA;AACA;AACA;AACA;AgBrvIO;AACL;AACE;AACD;AhBuvIH;AgBtvIE;AAMD;AAED;AhBkvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBlvIO;AAIL;AADA;AACA;AhBmvIF;AgBlvIE;AhBovIF;AgB7uIE;AAAqB;AAAuB;AAC5C;AASA;AACD;AAED;AhBwuIA;AACA;AACA;AACA;AACA;AACA;AgBxuIO;AACL;AAKA;AACD;AAED;AhBquIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBruIO;AACL;AACD;AAED;AhBsuIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBtuIO;AACL;AhBwuIF;AgBvuIE;AACE;AACD;AhByuIH;AgBxuIE;AACD;AAED;AhByuIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBzuIO;AACL;AhB2uIF;AgB1uIE;AACE;AACD;AhB4uIH;AgB3uIE;AACD;AAED;AhB4uIA;AACA;AACA;AACA;AACA;AACA;AgB5uIO;AACL;AACE;AACD;AhB8uIH;AgB7uIE;AACD;AAED;AhB8uIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB9uIO;AACL;AACE;AACD;AhBgvIH;AgB/uIE;AACE;AACD;AhBivIH;AgBhvIE;AACA;AACD;AAED;AhBivIA;AACA;AACA;AACA;AACA;AACA;AgBjvIO;AACL;AACE;AACD;AhBmvIH;AgBlvIE;AACD;AAED;AhBmvIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBnvIO;AACL;AACE;AACD;AhBqvIH;AgBpvIE;AACE;AACD;AhBsvIH;AgBrvIE;AACD;AAED;AhBsvIA;AACA;AACA;AACA;AACA;AACA;AgBtvIO;AACL;AACA;AACA;AACD;AAED;AhBuvIA;AACA;AACA;AACA;AACA;AACA;AgBvvIO;AACL;AhByvIF;AgBxvIE;AACE;AACD;AhB0vIH;AgBzvIE;AACA;AACD;AAED;AhB0vIA;AACA;AACA;AACA;AACA;AACA;AACA;AgB1vIA;AACE;AACE;AACD;AhB4vIH;AgB3vIE;AhB6vIF;AgBtvIE;AACD;AAED;AhBuvIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBvvIO;AACL;AACA;AACA;AACE;AACD;AhByvIH;AgBxvIE;AACA;AACA;AACD;AAED;AhByvIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBzvIO;AACL;AACE;AACD;AhB2vIH;AACA;AgBzvIE;AACE;AACD;AAGD;AACA;AACA;AhByvIF;AACA;AgBzvIE;AACA;AACA;AAKA;AACA;AhBuvIF;AgBlvIE;AACA;AACA;AAMD;AAED;AhB8uIA;AACA;AACA;AACA;AACA;AACA;AACA;AgB9uIO;AACL;AACD;AAED;AhB+uIA;AACA;AACA;AACA;AACA;AACA;AACA;AgB/uIO;AACL;AACE;AACD;AhBivIH;AgBhvIE;AACE;AACD;AhBkvIH;AgBjvIE;AACD;AAED;AhBkvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBlvIO;AACL;AACE;AACD;AhBovIH;AgBnvIE;AACA;AhBqvIF;AgBlvIE;AACE;AACD;AhBovIH;AACA;AgBlvIE;AACE;AACD;AhBovIH;AACA;AgBlvIE;AACE;AACD;AhBovIH;AACA;AgBlvIE;AAKD;AAED;AhB+uIA;AACA;AACA;AACA;AACA;AACA;AACA;AgB/uIO;AACL;AACA;AACA;AACD;AAED;AhBgvIA;AACA;AACA;AACA;AACA;AgBhvIO;AACL;AACA;AACA;AAKD;AAED;AhB6uIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB7uIO;AACL;AACD;AhB+uID;AACA;AACA;AACA;AACA;AACA;AACA;AiBh4JA;AjBk4JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiB/3JA;AjBi4JA;AiBh4JA;AjBk4JA;AiBh4JA;AjBk4JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBh4JO;AACL;AACA;AACA;AACA;AACE;AAAgB;AADP;AACO;AjBq4JpB;AiBp4JM;AACA;AACA;AACD;AjBs4JL;AiBr4JI;AACD;AACF;AjBu4JD;AACA;AACA;AACA;AACA;AACA;AACA;AkBx6JA;AlB06JA;AkB17JA;AlB47JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBx7JA;AACA;AAEA;AlBy7JA;AACA;AACA;AACA;AACA;AACA;AkB17JE;AlB47JF;AACA;AkB17JE;AACE;AACA;AAEA;AlB27JJ;AkB17JI;AAEA;AlB27JJ;AACA;AACA;AACA;AkB17JI;AAEA;AlB27JJ;AkB17JI;AACD;AAED;AlB27JF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB77JI;AACD;AAED;AlB87JF;AACA;AACA;AACA;AACA;AACA;AkB97JI;AlBg8JJ;AkB/7JI;AACE;AACA;AACD;AlBi8JL;AkBh8JI;AACD;AAED;AlBi8JF;AACA;AACA;AACA;AACA;AACA;AkBj8JI;AACE;AACD;AlBm8JL;AkBl8JI;AAAoB;AAAS;AAAV;AACnB;AACD;AAED;AlBs8JF;AACA;AACA;AACA;AACA;AkBt8JI;AACE;AACD;AlBw8JL;AkBt8JI;AACA;AACA;AACA;AlBw8JJ;AkBv8JI;AAAyB;AlB08J7B;AkBx8JM;AACE;AACA;AACD;AACF;AlB08JL;AkBx8JI;AACE;AACA;AACD;AACF;AlB08JH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBljKA;AnBojKA;AmBpkKA;AnBskKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBlkKA;AACA;AAEA;AnBmkKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBlkKO;AACL;AnBokKF;AmBnkKE;AACE;AACD;AnBqkKH;AmBpkKE;AACD;AAED;AnBqkKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBrkKO;AACL;AACA;AACA;AAAO;AAA4B;AAAnC;AACD;AAED;AnBykKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBzkKO;AACL;AACD;AAED;AnB0kKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB1kKO;AACL;AACE;AACD;AACC;AACD;AACF;AAED;AnB2kKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB3kKO;AAA+C;AAAZ;AAAY;AnBglKtD;AmB/kKE;AACA;AAEA;AnBglKF;AmB/kKE;AACA;AAAY;AAAW;AAAW;AAAvB;AnBqlKb;AmB3lKsD;AAAA;AAAA;AAAA;AAAA;AnBimKtD;AmBtlKI;AACE;AACD;AnBwlKL;AmBvlKI;AnBylKJ;AmBxlKI;AACE;AACD;AnB0lKL;AmBzlKI;AACE;AACA;AACD;AnB2lKL;AmB1lKI;AACE;AAEA;AnB2lKN;AmB1lKM;AACE;AnB4lKR;AmB3lKQ;AACE;AAAY;AAAa;AAAa;AAA3B;AACX;AACD;AACF;AnBimKP;AmBhmKM;AACD;AAlCiD;AnBqoKtD;AmB5nKE;AAAyB;AnB+nK3B;AmB/nK2B;AA0BxB;AnBwmKH;AmBvmKE;AACD;AAED;AnBwmKA;AACA;AACA;AACA;AACA;AACA;AmBxmKO;AACL;AACE;AACE;AACD;AnB0mKL;AmBzmKI;AACD;AACF;AnB2mKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBnwKA;ApBqwKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBnwKA;ApBqwKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBnwKE;ApBqwKF;AACA;AoBnwKE;AACE;AAEA;ApBowKJ;AACA;AACA;AoBnwKI;AAAmB;AAAO;AACxB;AACA;AACD;AAED;ApBswKJ;AACA;AACA;AoBrwKI;AAEA;ApBswKJ;AACA;AACA;AoBrwKI;AACD;AAGH;ApBqwKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBvwKO;AACL;AACE;AACD;AACF;AAED;ApBwwKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBxwKO;AAAmC;AAAX;AAAW;ApB6wK1C;AoB5wKE;AACE;AACA;ApB8wKJ;AoB7wKI;AACE;AACD;ApB+wKL;AoB9wKI;AACE;AACD;ApBgxKL;AoB/wKI;AACA;ApBixKJ;AoB/wKI;AACE;AACE;AACD;ApBixKP;AoBhxKM;AACE;AACD;AACF;ApBkxKL;AoBjxKI;AACE;AACE;AACD;ApBmxKP;AoBlxKM;AACE;AACD;AACF;ApBoxKL;AoBnxKI;AACE;AACD;AACF;AACF;AAED;ApBoxKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBtxKE;ApBwxKF;AACA;AoBtxKE;AACE;AACA;ApBwxKJ;AoBvxKI;AACE;AACA;AACD;AAED;ApBwxKJ;AoBvxKI;AAEA;ApBwxKJ;AoBvxKI;AAEA;ApBwxKJ;AoBvxKI;ApByxKJ;AoBvxKI;AACE;AACE;AACD;AACF;AACF;AAED;ApBwxKF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoB3xKe;ApB6xKf;AoB5xKI;AACA;AAEI;AACE;AACD;AACF;AAEC;AACA;AACA;AACE;AACD;AACF;AAEH;AACD;AAED;ApB0xKF;AACA;AACA;AoB1xKI;AACD;ApB4xKH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB59KA;ArB89KA;AqB39KA;ArB69KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB39KA;ArB69KA;AqB39KA;AACE;AACA;AACE;AACD;ArB69KH;AACA;AqB59KE;AACE;AACD;AAED;AACA;ArB69KF;AACA;AqB79KE;AACE;AACD;AAED;ArB89KF;AACA;AqB99KE;AACD;AAED;ArB+9KA;AACA;AACA;AACA;AACA;AACA;AqB/9KO;AACL;AACD;ArBi+KD;AACA;AACA;AFnhLA;AACA","file":"amp-google-document-embed-0.1.max.js","sourcesContent":["(self.AMP=self.AMP||[]).push({n:\"amp-google-document-embed\",v:\"1910072132470\",f:(function(AMP,_){\n$1\n})});","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.AmpDriveViewer = exports.TAG = void 0;\n\nvar _url = require(\"../../../src/url\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _layout = require(\"../../../src/layout\");\n\nvar _dom = require(\"../../../src/dom\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar TAG = 'amp-google-document-embed';\nexports.TAG = TAG;\nvar ATTRIBUTES_TO_PROPAGATE = ['title'];\nvar GOOGLE_DOCS_EMBED_RE = /^https?:\\/\\/docs\\.google\\.com.+\\/pub.*\\??/;\n\nvar AmpDriveViewer =\n/*#__PURE__*/\nfunction (_AMP$BaseElement) {\n  _inheritsLoose(AmpDriveViewer, _AMP$BaseElement);\n\n  /** @param {!AmpElement} element */\n  function AmpDriveViewer(element) {\n    var _this;\n\n    _this = _AMP$BaseElement.call(this, element) || this;\n    /** @private {?Element} */\n\n    _this.iframe_ = null;\n    return _this;\n  }\n  /**\n   * Prefetches and preconnects URLs related to the viewer.\n   * @param {boolean=} opt_onLayout\n   * @override\n   */\n\n\n  var _proto = AmpDriveViewer.prototype;\n\n  _proto.preconnectCallback = function preconnectCallback(opt_onLayout) {\n    this.preconnect.url('https://docs.google.com', opt_onLayout);\n  }\n  /** @override */\n  ;\n\n  _proto.renderOutsideViewport = function renderOutsideViewport() {\n    // We are conservative about loading heavy embeds outside the viewport.\n    // This will still start loading before it becomes visible, but it\n    // won't typically load a large number of embeds.\n    return 0.75;\n  }\n  /** @override */\n  ;\n\n  _proto.isLayoutSupported = function isLayoutSupported(layout) {\n    return (0, _layout.isLayoutSizeDefined)(layout);\n  }\n  /** @override */\n  ;\n\n  _proto.buildCallback = function buildCallback() {\n    (0, _log.userAssert)(this.element.getAttribute('src'), 'The src attribute is required for <amp-google-document-embed> %s', this.element);\n  }\n  /** @override */\n  ;\n\n  _proto.layoutCallback = function layoutCallback() {\n    var iframe = this.element.ownerDocument.createElement('iframe');\n    this.iframe_ = iframe;\n    iframe.setAttribute('frameborder', '0');\n    iframe.setAttribute('allowfullscreen', '');\n    this.propagateAttributes(ATTRIBUTES_TO_PROPAGATE, iframe);\n    iframe.src = this.getSrc_(this.element.getAttribute('src'));\n    this.applyFillContent(iframe);\n    this.element.appendChild(iframe);\n    return this.loadPromise(iframe);\n  }\n  /** @override */\n  ;\n\n  _proto.mutatedAttributesCallback = function mutatedAttributesCallback(mutations) {\n    var attrs = ATTRIBUTES_TO_PROPAGATE.filter(function (value) {\n      return mutations[value] !== undefined;\n    });\n    var iframe = (0, _log.dev)().assertElement(this.iframe_);\n    this.propagateAttributes(attrs, iframe,\n    /* opt_removeMissingAttrs */\n    true);\n    var src = mutations['src'];\n\n    if (src) {\n      iframe.src = this.getSrc_(src);\n    }\n  }\n  /**\n   * Get the iframe source. Google Docs are special cased since they display\n   * using their own embed URL.\n   * @param {string} src\n   * @return {string} A URL to display a document using the Google Drive viewer.\n   */\n  ;\n\n  _proto.getSrc_ = function getSrc_(src) {\n    if (src.match(GOOGLE_DOCS_EMBED_RE)) {\n      return src;\n    }\n\n    return (0, _url.addParamToUrl)('https://docs.google.com/gview?embedded=true', 'url', src);\n  }\n  /** @override */\n  ;\n\n  _proto.unlayoutOnPause = function unlayoutOnPause() {\n    return true;\n  }\n  /** @override */\n  ;\n\n  _proto.unlayoutCallback = function unlayoutCallback() {\n    if (this.iframe_) {\n      (0, _dom.removeElement)(this.iframe_);\n      this.iframe_ = null;\n    }\n\n    return true;\n  };\n\n  return AmpDriveViewer;\n}(AMP.BaseElement);\n\nexports.AmpDriveViewer = AmpDriveViewer;\nAMP.extension('amp-google-document-embed', '0.1', function (AMP) {\n  AMP.registerElement('amp-google-document-embed', AmpDriveViewer);\n});\n\n},{\"../../../src/dom\":4,\"../../../src/layout\":6,\"../../../src/log\":7,\"../../../src/url\":16}],2:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.config = exports.urls = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nvar env = self.AMP_CONFIG || {};\nvar thirdPartyFrameRegex = typeof env['thirdPartyFrameRegex'] == 'string' ? new RegExp(env['thirdPartyFrameRegex']) : env['thirdPartyFrameRegex'];\nvar cdnProxyRegex = typeof env['cdnProxyRegex'] == 'string' ? new RegExp(env['cdnProxyRegex']) : env['cdnProxyRegex'];\n/** @type {!Object<string, string|boolean|RegExp|Array<RegExp>>} */\n\nvar urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex: thirdPartyFrameRegex || /^d-\\d+\\.ampproject\\.net$/,\n  cdn: env['cdnUrl'] || 'https://cdn.ampproject.org',\n\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex: cdnProxyRegex || /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting: env['errorReportingUrl'] || 'https://amp-error-reporting.appspot.com/r',\n  localDev: env['localDev'] || false,\n\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/master/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [/(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/, /(^|\\.)gmail\\.dev$/]\n};\nexports.urls = urls;\nvar config = {\n  urls: urls\n};\nexports.config = config;\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.assertIsName = assertIsName;\nexports.setScopeSelectorSupportedForTesting = setScopeSelectorSupportedForTesting;\nexports.isScopeSelectorSupported = isScopeSelectorSupported;\nexports.prependSelectorsWith = prependSelectorsWith;\nexports.escapeCssSelectorIdent = escapeCssSelectorIdent;\nexports.escapeCssSelectorNth = escapeCssSelectorNth;\n\nvar _cssEscape = require(\"../third_party/css-escape/css-escape\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nfunction assertIsName(name) {\n  (0, _log.devAssert)(/^[\\w-]+$/.test(name));\n}\n/**\n * @type {boolean|undefined}\n */\n\n\nvar scopeSelectorSupported;\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\n\nfunction setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\n\n\nfunction isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return scopeSelectorSupported = testScopeSelector(el);\n}\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\n\n\nfunction testScopeSelector(el) {\n  try {\n    var doc = el.ownerDocument;\n    var testElement = doc.createElement('div');\n    var testChild = doc.createElement('div');\n    testElement.appendChild(testChild); // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n\n    return testElement.\n    /*OK*/\n    querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\n\n\nfunction prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, \"$&\" + distribute + \" \");\n}\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n */\n\n\nfunction escapeCssSelectorIdent(ident) {\n  return (0, _cssEscape.cssEscape)(ident);\n}\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\n\n\nfunction escapeCssSelectorNth(ident) {\n  var escaped = String(ident); // Ensure it doesn't close the nth-child psuedo class.\n\n  (0, _log.devAssert)(escaped.indexOf(')') === -1);\n  return escaped;\n}\n\n},{\"../third_party/css-escape/css-escape\":21,\"./log\":7}],4:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.waitForChild = waitForChild;\nexports.waitForChildPromise = waitForChildPromise;\nexports.waitForBodyOpen = waitForBodyOpen;\nexports.waitForBodyOpenPromise = waitForBodyOpenPromise;\nexports.removeElement = removeElement;\nexports.removeChildren = removeChildren;\nexports.copyChildren = copyChildren;\nexports.insertAfterOrAtStart = insertAfterOrAtStart;\nexports.addAttributesToElement = addAttributesToElement;\nexports.createElementWithAttributes = createElementWithAttributes;\nexports.isConnectedNode = isConnectedNode;\nexports.rootNodeFor = rootNodeFor;\nexports.isShadowRoot = isShadowRoot;\nexports.closest = closest;\nexports.closestNode = closestNode;\nexports.closestAncestorElementBySelector = closestAncestorElementBySelector;\nexports.ancestorElements = ancestorElements;\nexports.ancestorElementsByTag = ancestorElementsByTag;\nexports.childElement = childElement;\nexports.childElements = childElements;\nexports.lastChildElement = lastChildElement;\nexports.childNodes = childNodes;\nexports.childElementByAttr = childElementByAttr;\nexports.lastChildElementByAttr = lastChildElementByAttr;\nexports.childElementsByAttr = childElementsByAttr;\nexports.childElementByTag = childElementByTag;\nexports.childElementsByTag = childElementsByTag;\nexports.matches = matches;\nexports.elementByTag = elementByTag;\nexports.scopedQuerySelector = scopedQuerySelector;\nexports.scopedQuerySelectorAll = scopedQuerySelectorAll;\nexports.getDataParamsFromAttributes = getDataParamsFromAttributes;\nexports.hasNextNodeInDocumentOrder = hasNextNodeInDocumentOrder;\nexports.templateContentClone = templateContentClone;\nexports.iterateCursor = iterateCursor;\nexports.openWindowDialog = openWindowDialog;\nexports.isJsonScriptTag = isJsonScriptTag;\nexports.isJsonLdScriptTag = isJsonLdScriptTag;\nexports.isRTL = isRTL;\nexports.escapeHtml = escapeHtml;\nexports.tryFocus = tryFocus;\nexports.isIframed = isIframed;\nexports.isAmpElement = isAmpElement;\nexports.whenUpgradedToCustomElement = whenUpgradedToCustomElement;\nexports.fullscreenEnter = fullscreenEnter;\nexports.fullscreenExit = fullscreenExit;\nexports.isFullscreenElement = isFullscreenElement;\nexports.isEnabled = isEnabled;\nexports.domOrderComparator = domOrderComparator;\nexports.toggleAttribute = toggleAttribute;\nexports.getVerticalScrollbarWidth = getVerticalScrollbarWidth;\nexports.UPGRADE_TO_CUSTOMELEMENT_RESOLVER = exports.UPGRADE_TO_CUSTOMELEMENT_PROMISE = void 0;\n\nvar _promise = require(\"./utils/promise\");\n\nvar _css = require(\"./css\");\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object\");\n\nvar _string = require(\"./string\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;'\n};\nvar HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n/** @const {string} */\n\nvar UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n/** @const {string} */\n\nexports.UPGRADE_TO_CUSTOMELEMENT_PROMISE = UPGRADE_TO_CUSTOMELEMENT_PROMISE;\nvar UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\n\nexports.UPGRADE_TO_CUSTOMELEMENT_RESOLVER = UPGRADE_TO_CUSTOMELEMENT_RESOLVER;\n\nfunction waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n\n\n  var win = (0, _types.toWin)(parent.ownerDocument.defaultView);\n\n  if (win.MutationObserver) {\n    /** @const {MutationObserver} */\n    var observer = new win.MutationObserver(function () {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {\n      childList: true\n    });\n  } else {\n    /** @const {number} */\n    var interval = win.setInterval(function () {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    },\n    /* milliseconds */\n    5);\n  }\n}\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\n\n\nfunction waitForChildPromise(parent, checkFunc) {\n  return new Promise(function (resolve) {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\n\n\nfunction waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, function () {\n    return !!doc.body;\n  }, callback);\n}\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\n\n\nfunction waitForBodyOpenPromise(doc) {\n  return new Promise(function (resolve) {\n    return waitForBodyOpen(doc, resolve);\n  });\n}\n/**\n * Removes the element.\n * @param {!Element} element\n */\n\n\nfunction removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element} parent\n */\n\n\nfunction removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\n\n\nfunction copyChildren(from, to) {\n  var frag = to.ownerDocument.createDocumentFragment();\n\n  for (var n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n\n  to.appendChild(frag);\n}\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node} after\n */\n\n\nfunction insertAfterOrAtStart(root, element, after) {\n  var before = after ? after.nextSibling : root.firstChild;\n  root.insertBefore(element, before);\n}\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\n\n\nfunction addAttributesToElement(element, attributes) {\n  for (var attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n\n  return element;\n}\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\n\n\nfunction createElementWithAttributes(doc, tagName, attributes) {\n  var element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\n\n\nfunction isConnectedNode(node) {\n  var connected = node.isConnected;\n\n  if (connected !== undefined) {\n    return connected;\n  } // \"An element is connected if its shadow-including root is a document.\"\n\n\n  var n = node;\n\n  do {\n    n = rootNodeFor(n);\n\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\n\n\nfunction rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n\n  var n; // Check isShadowRoot() is only needed for the polyfill case.\n\n  for (n = node; !!n.parentNode && !isShadowRoot(n); n = n.parentNode) {}\n\n  return n;\n}\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isShadowRoot(value) {\n  // TODO(#22733): remove in preference to dom's `rootNodeFor`.\n  if (!value) {\n    return false;\n  } // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n\n\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n\n  return value.nodeType ==\n  /* DOCUMENT_FRAGMENT */\n  11 && Object.prototype.toString.call(value) === '[object ShadowRoot]';\n}\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\n\n\nfunction closest(element, callback, opt_stopAt) {\n  for (var el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\n\n\nfunction closestNode(node, callback) {\n  for (var n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\n\n\nfunction closestAncestorElementBySelector(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  return closest(element, function (el) {\n    return matches(el, selector);\n  });\n}\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\n\n\nfunction ancestorElements(child, predicate) {\n  var ancestors = [];\n\n  for (var ancestor = child.parentElement; ancestor; ancestor = ancestor.parentElement) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n\n  return ancestors;\n}\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\n\n\nfunction ancestorElementsByTag(child, tagName) {\n  (0, _css.assertIsName)(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, function (el) {\n    return el.tagName == tagName;\n  });\n}\n/**\n * Finds the first child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\n\n\nfunction childElement(parent, callback) {\n  for (var child = parent.firstElementChild; child; child = child.nextElementSibling) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\n\n\nfunction childElements(parent, callback) {\n  var children = [];\n\n  for (var child = parent.firstElementChild; child; child = child.nextElementSibling) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n\n  return children;\n}\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\n\n\nfunction lastChildElement(parent, callback) {\n  for (var child = parent.lastElementChild; child; child = child.previousElementSibling) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\n\n\nfunction childNodes(parent, callback) {\n  var nodes = [];\n\n  for (var child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n\n  return nodes;\n}\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\n\n\nfunction childElementByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return (\n    /*OK*/\n    scopedQuerySelector(parent, \"> [\" + attr + \"]\")\n  );\n}\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\n\n\nfunction lastChildElementByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return lastChildElement(parent, function (el) {\n    return el.hasAttribute(attr);\n  });\n}\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\n\n\nfunction childElementsByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return (\n    /*OK*/\n    scopedQuerySelectorAll(parent, \"> [\" + attr + \"]\")\n  );\n}\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {?Element}\n */\n\n\nfunction childElementByTag(parent, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return (\n    /*OK*/\n    scopedQuerySelector(parent, \"> \" + tagName)\n  );\n}\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\n\n\nfunction childElementsByTag(parent, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return (\n    /*OK*/\n    scopedQuerySelectorAll(parent, \"> \" + tagName)\n  );\n}\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\n\n\nfunction matches(el, selector) {\n  var matcher = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector || el.oMatchesSelector;\n\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n\n  return false; // IE8 always returns false.\n}\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\n\n\nfunction elementByTag(element, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return element.\n  /*OK*/\n  querySelector(tagName);\n}\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\n\n\nfunction scopedQuerySelectionFallback(root, selector) {\n  var unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  var scopedSelector = (0, _css.prependSelectorsWith)(selector, \".\" + unique);\n  var elements = root.\n  /*OK*/\n  querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {?Element}\n */\n\n\nfunction scopedQuerySelector(root, selector) {\n  if ((0, _css.isScopeSelectorSupported)(root)) {\n    return root.\n    /*OK*/\n    querySelector((0, _css.prependSelectorsWith)(selector, ':scope'));\n  } // Only IE.\n\n\n  var fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\n\n\nfunction scopedQuerySelectorAll(root, selector) {\n  if ((0, _css.isScopeSelectorSupported)(root)) {\n    return root.\n    /*OK*/\n    querySelectorAll((0, _css.prependSelectorsWith)(selector, ':scope'));\n  } // Only IE.\n\n\n  return scopedQuerySelectionFallback(root, selector);\n}\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!Element} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\n\n\nfunction getDataParamsFromAttributes(element, opt_computeParamNameFunc, opt_paramPattern) {\n  var computeParamNameFunc = opt_computeParamNameFunc || function (key) {\n    return key;\n  };\n\n  var dataset = element.dataset;\n  var params = (0, _object.dict)();\n  var paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n\n  for (var key in dataset) {\n    var _matches = key.match(paramPattern);\n\n    if (_matches) {\n      var param = _matches[1][0].toLowerCase() + _matches[1].substr(1);\n\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n\n  return params;\n}\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\n\n\nfunction hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  var currentElement = element;\n\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while ((currentElement = currentElement.parentNode) && currentElement != opt_stopNode);\n\n  return false;\n}\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\n\n\nfunction templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    var content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\n\n\nfunction iterateCursor(iterable, cb) {\n  var length = iterable.length;\n\n  for (var i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\n\n\nfunction openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  var res;\n\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    (0, _log.dev)().error('DOM', 'Failed to open url on target: ', target, e);\n  } // Then try with `_top` target.\n\n\n  if (!res && target != '_top' && !(0, _string.includes)(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n\n  return res;\n}\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isJsonScriptTag(element) {\n  return element.tagName == 'SCRIPT' && element.hasAttribute('type') && element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON';\n}\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isJsonLdScriptTag(element) {\n  return element.tagName == 'SCRIPT' && element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON';\n}\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\n\n\nfunction isRTL(doc) {\n  var dir = doc.body.getAttribute('dir') || doc.documentElement.getAttribute('dir') || 'ltr';\n  return dir == 'rtl';\n}\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\n\n\nfunction escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n/**\n * @param {string} c\n * @return {string}\n */\n\n\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\n\n\nfunction tryFocus(element) {\n  try {\n    element.\n    /*OK*/\n    focus();\n  } catch (e) {// IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nfunction isIframed(win) {\n  return win.parent && win.parent != win;\n}\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isAmpElement(element) {\n  var tag = element.tagName; // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n\n  return (0, _string.startsWith)(tag, 'AMP-') && // Some \"amp-*\" elements are not really AMP elements. :smh:\n  !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY');\n}\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!Element} element\n * @return {!Promise<!Element>}\n */\n\n\nfunction whenUpgradedToCustomElement(element) {\n  (0, _log.devAssert)(isAmpElement(element), 'element is not AmpElement');\n\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(element);\n  } // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n\n\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    var deferred = new _promise.Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n/**\n * Replacement for `Element.requestFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n * @param {!Element} element\n */\n\n\nfunction fullscreenEnter(element) {\n  var requestFs = element.requestFullscreen || element.requestFullScreen || element.webkitRequestFullscreen || element.webkitEnterFullscreen || element.msRequestFullscreen || element.mozRequestFullScreen;\n\n  if (requestFs) {\n    requestFs.call(element);\n  }\n}\n/**\n * Replacement for `Document.exitFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/exitFullscreen\n * @param {!Element} element\n */\n\n\nfunction fullscreenExit(element) {\n  var elementBoundExit = element.cancelFullScreen || element.exitFullscreen || element.webkitExitFullscreen || element.webkitCancelFullScreen || element.mozCancelFullScreen || element.msExitFullscreen;\n\n  if (elementBoundExit) {\n    elementBoundExit.call(element);\n    return;\n  }\n\n  var ownerDocument = element.ownerDocument;\n\n  if (!ownerDocument) {\n    return;\n  }\n\n  var docBoundExit = ownerDocument.cancelFullScreen || ownerDocument.exitFullscreencancelFullScreen || ownerDocument.webkitExitFullscreencancelFullScreen || ownerDocument.webkitCancelFullScreencancelFullScreen || ownerDocument.mozCancelFullScreencancelFullScreen || ownerDocument.msExitFullscreen;\n\n  if (docBoundExit) {\n    docBoundExit.call(ownerDocument);\n  }\n}\n/**\n * Replacement for `Document.fullscreenElement`.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenElement\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isFullscreenElement(element) {\n  var webkitDisplayingFullscreen = element.webkitDisplayingFullscreen;\n\n  if (webkitDisplayingFullscreen !== undefined) {\n    return webkitDisplayingFullscreen;\n  }\n\n  var ownerDocument = element.ownerDocument;\n\n  if (!ownerDocument) {\n    return false;\n  }\n\n  var fullscreenElement = ownerDocument.fullscreenElement || ownerDocument.webkitFullscreenElement || ownerDocument.mozFullScreenElement || ownerDocument.webkitCurrentFullScreenElement;\n  return fullscreenElement == element;\n}\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!Element} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\n\n\nfunction isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\n\n\nfunction domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  var pos = element1.compareDocumentPosition(element2);\n  var precedingOrContains = Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS; // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n\n  if (pos & precedingOrContains) {\n    return 1;\n  } // if fe2 is following or contained by fe1, then fe1 is before fe2\n\n\n  return -1;\n}\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\n\n\nfunction toggleAttribute(element, name, forced) {\n  var hasAttribute = element.hasAttribute(name);\n  var enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\n\n\nfunction getVerticalScrollbarWidth(win) {\n  var documentElement = win.document.documentElement;\n  var windowWidth = win.\n  /*OK*/\n  innerWidth;\n  var documentWidth = documentElement.\n  /*OK*/\n  clientWidth;\n  return windowWidth - documentWidth;\n}\n\n},{\"./css\":3,\"./log\":7,\"./string\":11,\"./types\":13,\"./utils/object\":19,\"./utils/promise\":20}],5:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.internalRuntimeVersion = internalRuntimeVersion;\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nfunction internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n\n},{}],6:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.parseLayout = parseLayout;\nexports.getLayoutClass = getLayoutClass;\nexports.isLayoutSizeDefined = isLayoutSizeDefined;\nexports.isLayoutSizeFixed = isLayoutSizeFixed;\nexports.isInternalElement = isInternalElement;\nexports.parseLength = parseLength;\nexports.assertLength = assertLength;\nexports.assertLengthOrPercent = assertLengthOrPercent;\nexports.getLengthUnits = getLengthUnits;\nexports.getLengthNumeral = getLengthNumeral;\nexports.hasNaturalDimensions = hasNaturalDimensions;\nexports.getNaturalDimensions = getNaturalDimensions;\nexports.isLoadingAllowed = isLoadingAllowed;\nexports.isIframeVideoPlayerComponent = isIframeVideoPlayerComponent;\nexports.applyStaticLayout = applyStaticLayout;\nexports.LOADING_ELEMENTS_ = exports.naturalDimensions_ = exports.LengthDef = exports.LayoutPriority = exports.Layout = void 0;\n\nvar _log = require(\"./log\");\n\nvar _staticTemplate = require(\"./static-template\");\n\nvar _types = require(\"./types\");\n\nvar _style = require(\"./style\");\n\nvar _string = require(\"./string\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n      <i-amphtml-sizer class=\\\"i-amphtml-sizer\\\">\\n        <img alt=\\\"\\\" role=\\\"presentation\\\" aria-hidden=\\\"true\\\"\\n             class=\\\"i-amphtml-intrinsic-sizer\\\" />\\n      </i-amphtml-sizer>\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) { if (!raw) { raw = strings.slice(0); } strings.raw = raw; return strings; }\n\n/**\n * @enum {string}\n */\nvar Layout = {\n  NODISPLAY: 'nodisplay',\n  FIXED: 'fixed',\n  FIXED_HEIGHT: 'fixed-height',\n  RESPONSIVE: 'responsive',\n  CONTAINER: 'container',\n  FILL: 'fill',\n  FLEX_ITEM: 'flex-item',\n  FLUID: 'fluid',\n  INTRINSIC: 'intrinsic'\n};\n/**\n * Layout priorities to use with BaseElement#getLayoutPriority() and\n * BaseElement#updateLayoutPriority().\n * @enum {number}\n */\n\nexports.Layout = Layout;\nvar LayoutPriority = {\n  CONTENT: 0,\n  METADATA: 1,\n  ADS: 2,\n  BACKGROUND: 3\n};\n/**\n * CSS Length type. E.g. \"1px\" or \"20vh\".\n * @typedef {string}\n */\n\nexports.LayoutPriority = LayoutPriority;\nvar LengthDef;\n/**\n * @typedef {{\n *   width: string,\n *   height: string\n * }}\n */\n\nexports.LengthDef = LengthDef;\nvar DimensionsDef;\n/**\n * The set of elements with natural dimensions, that is, elements\n * which have a known dimension either based on their value specified here,\n * or, if the value is null, a dimension specific to the browser.\n * `hasNaturalDimensions` checks for membership in this set.\n * `getNaturalDimensions` determines the dimensions for an element in the\n *    set and caches it.\n * @type {!Object<string, ?DimensionsDef>}\n * @private  Visible for testing only!\n */\n\nvar naturalDimensions_ = {\n  'AMP-PIXEL': {\n    width: '0px',\n    height: '0px'\n  },\n  'AMP-ANALYTICS': {\n    width: '1px',\n    height: '1px'\n  },\n  // TODO(dvoytenko): audio should have width:auto.\n  'AMP-AUDIO': null,\n  'AMP-SOCIAL-SHARE': {\n    width: '60px',\n    height: '44px'\n  }\n};\n/**\n * Elements that the progress can be shown for. This set has to be externalized\n * since the element's implementation may not be downloaded yet.\n * This list does not include video players which are found via regex later.\n * @enum {boolean}\n * @private  Visible for testing only!\n */\n\nexports.naturalDimensions_ = naturalDimensions_;\nvar LOADING_ELEMENTS_ = {\n  'AMP-AD': true,\n  'AMP-ANIM': true,\n  'AMP-EMBED': true,\n  'AMP-FACEBOOK': true,\n  'AMP-FACEBOOK-COMMENTS': true,\n  'AMP-FACEBOOK-PAGE': true,\n  'AMP-GOOGLE-DOCUMENT-EMBED': true,\n  'AMP-IFRAME': true,\n  'AMP-IMG': true,\n  'AMP-INSTAGRAM': true,\n  'AMP-LIST': true,\n  'AMP-PINTEREST': true,\n  'AMP-PLAYBUZZ': true,\n  'AMP-TWITTER': true\n};\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they are listed individually.\n * @private @const {!RegExp}\n */\n\nexports.LOADING_ELEMENTS_ = LOADING_ELEMENTS_;\nvar videoPlayerTagNameRe = /^amp\\-(video|.+player)|AMP-BRIGHTCOVE|AMP-DAILYMOTION|AMP-YOUTUBE|AMP-VIMEO|AMP-IMA-VIDEO/i;\n/**\n * @param {string} s\n * @return {Layout|undefined} Returns undefined in case of failure to parse\n *   the layout string.\n */\n\nfunction parseLayout(s) {\n  for (var k in Layout) {\n    if (Layout[k] == s) {\n      return Layout[k];\n    }\n  }\n\n  return undefined;\n}\n/**\n * @param {!Layout} layout\n * @return {string}\n */\n\n\nfunction getLayoutClass(layout) {\n  return 'i-amphtml-layout-' + layout;\n}\n/**\n * Whether an element with this layout inherently defines the size.\n * @param {!Layout} layout\n * @return {boolean}\n */\n\n\nfunction isLayoutSizeDefined(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT || layout == Layout.RESPONSIVE || layout == Layout.FILL || layout == Layout.FLEX_ITEM || layout == Layout.FLUID || layout == Layout.INTRINSIC;\n}\n/**\n * Whether an element with this layout has a fixed dimension.\n * @param {!Layout} layout\n * @return {boolean}\n */\n\n\nfunction isLayoutSizeFixed(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT;\n}\n/**\n * Whether the tag is an internal (service) AMP tag.\n * @param {!Node|string} tag\n * @return {boolean}\n */\n\n\nfunction isInternalElement(tag) {\n  var tagName = typeof tag == 'string' ? tag : tag.tagName;\n  return tagName && (0, _string.startsWith)(tagName.toLowerCase(), 'i-');\n}\n/**\n * Parses the CSS length value. If no units specified, the assumed value is\n * \"px\". Returns undefined in case of parsing error.\n * @param {string|undefined|null} s\n * @return {!LengthDef|undefined}\n */\n\n\nfunction parseLength(s) {\n  if (typeof s == 'number') {\n    return s + 'px';\n  }\n\n  if (!s) {\n    return undefined;\n  }\n\n  if (!/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)?$/.test(s)) {\n    return undefined;\n  }\n\n  if (/^\\d+(\\.\\d+)?$/.test(s)) {\n    return s + 'px';\n  }\n\n  return s;\n}\n/**\n * Asserts that the supplied value is a non-percent CSS Length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction assertLength(length) {\n  (0, _log.userAssert)(/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)$/.test(length), 'Invalid length value: %s', length);\n  return (\n    /** @type {!LengthDef} */\n    length\n  );\n}\n/**\n * Asserts that the supplied value is a CSS Length value\n * (including percent unit).\n * @param {!LengthDef|string} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction assertLengthOrPercent(length) {\n  (0, _log.userAssert)(/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|%)$/.test(length), 'Invalid length or percent value: %s', length);\n  return length;\n}\n/**\n * Returns units from the CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {string}\n */\n\n\nfunction getLengthUnits(length) {\n  assertLength(length);\n  (0, _log.dev)().assertString(length);\n  var m = (0, _log.userAssert)(length.match(/[a-z]+/i), 'Failed to read units from %s', length);\n  return m[0];\n}\n/**\n * Returns the numeric value of a CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {number|undefined}\n */\n\n\nfunction getLengthNumeral(length) {\n  var res = parseFloat(length);\n  return (0, _types.isFiniteNumber)(res) ? res : undefined;\n}\n/**\n * Determines whether the tagName is a known element that has natural dimensions\n * in our runtime or the browser.\n * @param {string} tagName The element tag name.\n * @return {boolean}\n */\n\n\nfunction hasNaturalDimensions(tagName) {\n  tagName = tagName.toUpperCase();\n  return naturalDimensions_[tagName] !== undefined;\n}\n/**\n * Determines the default dimensions for an element which could vary across\n * different browser implementations, like <audio> for instance.\n * This operation can only be completed for an element whitelisted by\n * `hasNaturalDimensions`.\n * @param {!Element} element\n * @return {DimensionsDef}\n */\n\n\nfunction getNaturalDimensions(element) {\n  var tagName = element.tagName.toUpperCase();\n  (0, _log.devAssert)(naturalDimensions_[tagName] !== undefined);\n\n  if (!naturalDimensions_[tagName]) {\n    var doc = element.ownerDocument;\n    var naturalTagName = tagName.replace(/^AMP\\-/, '');\n    var temp = doc.createElement(naturalTagName); // For audio, should no-op elsewhere.\n\n    temp.controls = true;\n    (0, _style.setStyles)(temp, {\n      position: 'absolute',\n      visibility: 'hidden'\n    });\n    doc.body.appendChild(temp);\n    naturalDimensions_[tagName] = {\n      width: (temp.\n      /*OK*/\n      offsetWidth || 1) + 'px',\n      height: (temp.\n      /*OK*/\n      offsetHeight || 1) + 'px'\n    };\n    doc.body.removeChild(temp);\n  }\n\n  return (\n    /** @type {DimensionsDef} */\n    naturalDimensions_[tagName]\n  );\n}\n/**\n * Whether the loading can be shown for the specified elemeent. This set has\n * to be externalized since the element's implementation may not be\n * downloaded yet.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isLoadingAllowed(element) {\n  var tagName = element.tagName.toUpperCase();\n  return LOADING_ELEMENTS_[tagName] || isIframeVideoPlayerComponent(tagName);\n}\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they're present in the LOADING_ELEMENTS_ whitelist.\n * @param {string} tagName\n * @return {boolean}\n */\n\n\nfunction isIframeVideoPlayerComponent(tagName) {\n  if (tagName == 'AMP-VIDEO') {\n    return false;\n  }\n\n  return videoPlayerTagNameRe.test(tagName);\n}\n/**\n * Applies layout to the element. Visible for testing only.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this method is used for server-side rendering (SSR) and\n * any changes made to it must be made in coordination with caches that\n * implement SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @param {!Element} element\n * @return {!Layout}\n */\n\n\nfunction applyStaticLayout(element) {\n  // Check if the layout has already been done by server-side rendering or\n  // client-side rendering and the element was cloned. The document may be\n  // visible to the user if the boilerplate was removed so please take care in\n  // making changes here.\n  var completedLayoutAttr = element.getAttribute('i-amphtml-layout');\n\n  if (completedLayoutAttr) {\n    var _layout =\n    /** @type {!Layout} */\n    (0, _log.devAssert)(parseLayout(completedLayoutAttr));\n\n    if ((_layout == Layout.RESPONSIVE || _layout == Layout.INTRINSIC) && element.firstElementChild) {\n      // Find sizer, but assume that it might not have been parsed yet.\n      element.sizerElement = element.querySelector('i-amphtml-sizer') || undefined;\n    } else if (_layout == Layout.NODISPLAY) {\n      (0, _style.toggle)(element, false); // TODO(jridgewell): Temporary hack while SSR still adds an inline\n      // `display: none`\n\n      element['style']['display'] = '';\n    }\n\n    return _layout;\n  } // If the layout was already done by server-side rendering (SSR), then the\n  // code below will not run. Any changes below will necessitate a change to SSR\n  // and must be coordinated with caches that implement SSR. See bit.ly/amp-ssr.\n  // Parse layout from the element.\n\n\n  var layoutAttr = element.getAttribute('layout');\n  var widthAttr = element.getAttribute('width');\n  var heightAttr = element.getAttribute('height');\n  var sizesAttr = element.getAttribute('sizes');\n  var heightsAttr = element.getAttribute('heights'); // Input layout attributes.\n\n  var inputLayout = layoutAttr ? parseLayout(layoutAttr) : null;\n  (0, _log.userAssert)(inputLayout !== undefined, 'Unknown layout: %s', layoutAttr);\n  /** @const {string|null|undefined} */\n\n  var inputWidth = widthAttr && widthAttr != 'auto' ? parseLength(widthAttr) : widthAttr;\n  (0, _log.userAssert)(inputWidth !== undefined, 'Invalid width value: %s', widthAttr);\n  /** @const {string|null|undefined} */\n\n  var inputHeight = heightAttr && heightAttr != 'fluid' ? parseLength(heightAttr) : heightAttr;\n  (0, _log.userAssert)(inputHeight !== undefined, 'Invalid height value: %s', heightAttr); // Effective layout attributes. These are effectively constants.\n\n  var width;\n  var height;\n  var layout; // Calculate effective width and height.\n\n  if ((!inputLayout || inputLayout == Layout.FIXED || inputLayout == Layout.FIXED_HEIGHT) && (!inputWidth || !inputHeight) && hasNaturalDimensions(element.tagName)) {\n    // Default width and height: handle elements that do not specify a\n    // width/height and are defined to have natural browser dimensions.\n    var dimensions = getNaturalDimensions(element);\n    width = inputWidth || inputLayout == Layout.FIXED_HEIGHT ? inputWidth : dimensions.width;\n    height = inputHeight || dimensions.height;\n  } else {\n    width = inputWidth;\n    height = inputHeight;\n  } // Calculate effective layout.\n\n\n  if (inputLayout) {\n    layout = inputLayout;\n  } else if (!width && !height) {\n    layout = Layout.CONTAINER;\n  } else if (height == 'fluid') {\n    layout = Layout.FLUID;\n  } else if (height && (!width || width == 'auto')) {\n    layout = Layout.FIXED_HEIGHT;\n  } else if (height && width && (sizesAttr || heightsAttr)) {\n    layout = Layout.RESPONSIVE;\n  } else {\n    layout = Layout.FIXED;\n  } // Verify layout attributes.\n\n\n  if (layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT || layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    (0, _log.userAssert)(height, 'Expected height to be available: %s', heightAttr);\n  }\n\n  if (layout == Layout.FIXED_HEIGHT) {\n    (0, _log.userAssert)(!width || width == 'auto', 'Expected width to be either absent or equal \"auto\" ' + 'for fixed-height layout: %s', widthAttr);\n  }\n\n  if (layout == Layout.FIXED || layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    (0, _log.userAssert)(width && width != 'auto', 'Expected width to be available and not equal to \"auto\": %s', widthAttr);\n  }\n\n  if (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    (0, _log.userAssert)(getLengthUnits(width) == getLengthUnits(height), 'Length units should be the same for width and height: %s, %s', widthAttr, heightAttr);\n  } else {\n    (0, _log.userAssert)(heightsAttr === null, 'Unexpected \"heights\" attribute for none-responsive layout');\n  } // Apply UI.\n\n\n  element.classList.add(getLayoutClass(layout));\n\n  if (isLayoutSizeDefined(layout)) {\n    element.classList.add('i-amphtml-layout-size-defined');\n  }\n\n  if (layout == Layout.NODISPLAY) {\n    // CSS defines layout=nodisplay automatically with `display:none`. Thus\n    // no additional styling is needed.\n    (0, _style.toggle)(element, false); // TODO(jridgewell): Temporary hack while SSR still adds an inline\n    // `display: none`\n\n    element['style']['display'] = '';\n  } else if (layout == Layout.FIXED) {\n    (0, _style.setStyles)(element, {\n      width: (0, _log.dev)().assertString(width),\n      height: (0, _log.dev)().assertString(height)\n    });\n  } else if (layout == Layout.FIXED_HEIGHT) {\n    (0, _style.setStyle)(element, 'height', (0, _log.dev)().assertString(height));\n  } else if (layout == Layout.RESPONSIVE) {\n    var sizer = element.ownerDocument.createElement('i-amphtml-sizer');\n    (0, _style.setStyles)(sizer, {\n      paddingTop: getLengthNumeral(height) / getLengthNumeral(width) * 100 + '%'\n    });\n    element.insertBefore(sizer, element.firstChild);\n    element.sizerElement = sizer;\n  } else if (layout == Layout.INTRINSIC) {\n    // Intrinsic uses an svg inside the sizer element rather than the padding\n    // trick Note a naked svg won't work becasue other thing expect the\n    // i-amphtml-sizer element\n    var _sizer = (0, _staticTemplate.htmlFor)(element)(_templateObject());\n\n    var intrinsicSizer = _sizer.firstElementChild;\n    intrinsicSizer.setAttribute('src', \"data:image/svg+xml;charset=utf-8,<svg height=\\\"\" + height + \"\\\" width=\\\"\" + width + \"\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\"/>\");\n    element.insertBefore(_sizer, element.firstChild);\n    element.sizerElement = _sizer;\n  } else if (layout == Layout.FILL) {// Do nothing.\n  } else if (layout == Layout.CONTAINER) {// Do nothing. Elements themselves will check whether the supplied\n    // layout value is acceptable. In particular container is only OK\n    // sometimes.\n  } else if (layout == Layout.FLEX_ITEM) {\n    // Set height and width to a flex item if they exist.\n    // The size set to a flex item could be overridden by `display: flex` later.\n    if (width) {\n      (0, _style.setStyle)(element, 'width', width);\n    }\n\n    if (height) {\n      (0, _style.setStyle)(element, 'height', height);\n    }\n  } else if (layout == Layout.FLUID) {\n    element.classList.add('i-amphtml-layout-awaiting-size');\n\n    if (width) {\n      (0, _style.setStyle)(element, 'width', width);\n    }\n\n    (0, _style.setStyle)(element, 'height', 0);\n  } // Mark the element as having completed static layout, in case it is cloned\n  // in the future.\n\n\n  element.setAttribute('i-amphtml-layout', layout);\n  return layout;\n}\n\n},{\"./log\":7,\"./static-template\":10,\"./string\":11,\"./style\":12,\"./types\":13}],7:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isUserErrorMessage = isUserErrorMessage;\nexports.isUserErrorEmbed = isUserErrorEmbed;\nexports.setReportError = setReportError;\nexports.overrideLogLevel = overrideLogLevel;\nexports.duplicateErrorIfNecessary = duplicateErrorIfNecessary;\nexports.createErrorVargs = createErrorVargs;\nexports.rethrowAsync = rethrowAsync;\nexports.initLogConstructor = initLogConstructor;\nexports.resetLogConstructorForTesting = resetLogConstructorForTesting;\nexports.user = user;\nexports.dev = dev;\nexports.isFromEmbed = isFromEmbed;\nexports.devAssert = devAssert;\nexports.userAssert = userAssert;\nexports.Log = exports.LogLevel = exports.USER_ERROR_EMBED_SENTINEL = exports.USER_ERROR_SENTINEL = void 0;\n\nvar _mode = require(\"./mode\");\n\nvar _modeObject = require(\"./mode-object\");\n\nvar _internalVersion = require(\"./internal-version\");\n\nvar _types = require(\"./types\");\n\nvar _function = require(\"./utils/function\");\n\nvar _config = require(\"./config\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar noop = function noop() {};\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\n\n\nvar USER_ERROR_SENTINEL = \"\\u200B\\u200B\\u200B\";\n/**\n * Four zero width space.\n *\n * @const {string}\n */\n\nexports.USER_ERROR_SENTINEL = USER_ERROR_SENTINEL;\nvar USER_ERROR_EMBED_SENTINEL = \"\\u200B\\u200B\\u200B\\u200B\";\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\n\nexports.USER_ERROR_EMBED_SENTINEL = USER_ERROR_EMBED_SENTINEL;\n\nfunction isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\n\n\nfunction isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n/**\n * @enum {number}\n * @private Visible for testing only.\n */\n\n\nvar LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4\n};\n/**\n * Sets reportError function. Called from error.js to break cyclic\n * dependency.\n * @param {function(*, !Element=)|undefined} fn\n */\n\nexports.LogLevel = LogLevel;\n\nfunction setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\n\n\nvar levelOverride_ = undefined;\n/**\n * @param {!LogLevel} level\n */\n\nfunction overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\n\n\nvar messageUrlRtv = function messageUrlRtv() {\n  return \"01\" + (0, _internalVersion.internalRuntimeVersion)();\n};\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\n\n\nvar externalMessageUrl = function externalMessageUrl(id, interpolatedParts) {\n  return interpolatedParts.reduce(function (prefix, arg) {\n    return prefix + \"&s[]=\" + messageArgToEncodedComponent(arg);\n  }, \"https://log.amp.dev/?v=\" + messageUrlRtv() + \"&id=\" + encodeURIComponent(id));\n};\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\n\n\nvar externalMessagesSimpleTableUrl = function externalMessagesSimpleTableUrl() {\n  return _config.urls.cdn + \"/rtv/\" + messageUrlRtv() + \"/log-messages.simple.json\";\n};\n/**\n * @param {*} arg\n * @return {string}\n */\n\n\nvar messageArgToEncodedComponent = function messageArgToEncodedComponent(arg) {\n  return encodeURIComponent(String(elementStringOrPassthru(arg)));\n};\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don’t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\n\n\nvar Log =\n/*#__PURE__*/\nfunction () {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(!./mode.ModeDef):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  function Log(win, levelFunc, opt_suffix) {\n    var _this = this;\n\n    if (opt_suffix === void 0) {\n      opt_suffix = '';\n    }\n\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = (0, _mode.getMode)().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n    /** @private @const {function(!./mode.ModeDef):!LogLevel} */\n\n    this.levelFunc_ = levelFunc;\n    /** @private @const {!LogLevel} */\n\n    this.level_ = this.defaultLevel_();\n    /** @private @const {string} */\n\n    this.suffix_ = opt_suffix;\n    /** @private {?JsonObject} */\n\n    this.messages_ = null;\n    this.fetchExternalMessagesOnce_ = (0, _function.once)(function () {\n      win.fetch(externalMessagesSimpleTableUrl()).then(function (response) {\n        return response.json();\n      }, noop).then(function (opt_messages) {\n        if (opt_messages) {\n          _this.messages_ =\n          /** @type {!JsonObject} */\n          opt_messages;\n        }\n      });\n    });\n  }\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n\n\n  var _proto = Log.prototype;\n\n  _proto.getLevel_ = function getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  ;\n\n  _proto.defaultLevel_ = function defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    } // Logging has been explicitly disabled.\n\n\n    if ((0, _mode.getMode)().log == '0') {\n      return LogLevel.OFF;\n    } // Logging is enabled for tests directly.\n\n\n    if ((0, _mode.getMode)().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    } // LocalDev by default allows INFO level, unless overriden by `#log`.\n\n\n    if ((0, _mode.getMode)().localDev && !(0, _mode.getMode)().log) {\n      return LogLevel.INFO;\n    } // Delegate to the specific resolver.\n\n\n    return this.levelFunc_((0, _modeObject.getModeObject)());\n  }\n  /**\n   * @param {string} tag\n   * @param {string} level\n   * @param {!Array} messages\n   */\n  ;\n\n  _proto.msg_ = function msg_(tag, level, messages) {\n    if (this.getLevel_() != LogLevel.OFF) {\n      var fn = this.win.console.log;\n\n      if (level == 'ERROR') {\n        fn = this.win.console.error || fn;\n      } else if (level == 'INFO') {\n        fn = this.win.console.info || fn;\n      } else if (level == 'WARN') {\n        fn = this.win.console.warn || fn;\n      }\n\n      var args = this.maybeExpandMessageArgs_(messages); // Prefix console message with \"[tag]\".\n\n      var prefix = \"[\" + tag + \"]\";\n\n      if (typeof args[0] === 'string') {\n        // Prepend string to avoid breaking string substitutions e.g. %s.\n        args[0] = prefix + ' ' + args[0];\n      } else {\n        args.unshift(prefix);\n      }\n\n      fn.apply(this.win.console, args);\n    }\n  }\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isEnabled = function isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.fine = function fine(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.FINE) {\n      this.msg_(tag, 'FINE', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.info = function info(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.INFO) {\n      this.msg_(tag, 'INFO', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.warn = function warn(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.WARN) {\n      this.msg_(tag, 'WARN', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} var_args\n   * @return {!Error|undefined}\n   * @private\n   */\n  ;\n\n  _proto.error_ = function error_(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.ERROR) {\n      this.msg_(tag, 'ERROR', Array.prototype.slice.call(arguments, 1));\n    } else {\n      var error = createErrorVargs.apply(null, Array.prototype.slice.call(arguments, 1));\n      this.prepareError_(error);\n      return error;\n    }\n  }\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.error = function error(tag, var_args) {\n    var error = this.error_.apply(this, arguments);\n\n    if (error) {\n      error.name = tag || error.name; // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.expectedError = function expectedError(unusedTag, var_args) {\n    var error = this.error_.apply(this, arguments);\n\n    if (error) {\n      error.expected = true; // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  ;\n\n  _proto.createError = function createError(var_args) {\n    var error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  ;\n\n  _proto.createExpectedError = function createExpectedError(var_args) {\n    var error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * NOTE: for an explanation of the tempate R implementation see\n   * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {R} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is `null` or `undefined`.\n   * @template T\n   * @template R :=\n   *     mapunion(T, (V) =>\n   *         cond(eq(V, 'null'),\n   *             none(),\n   *             cond(eq(V, 'undefined'),\n   *                 none(),\n   *                 V)))\n   *  =:\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assert = function assert(shouldBeTrueish, opt_message, var_args) {\n    var firstElement;\n\n    if ((0, _types.isArray)(opt_message)) {\n      return this.assert.apply(this, [shouldBeTrueish].concat(this.expandMessageArgs_(\n      /** @type {!Array} */\n      opt_message)));\n    }\n\n    if (!shouldBeTrueish) {\n      var message = opt_message || 'Assertion failed';\n      var splitMessage = message.split('%s');\n      var first = splitMessage.shift();\n      var formatted = first;\n      var messageArray = [];\n      var i = 2;\n      pushIfNonEmpty(messageArray, first);\n\n      while (splitMessage.length > 0) {\n        var nextConstant = splitMessage.shift();\n        var val = arguments[i++];\n\n        if (val && val.tagName) {\n          firstElement = val;\n        }\n\n        messageArray.push(val);\n        pushIfNonEmpty(messageArray, nextConstant.trim());\n        formatted += stringOrElementString(val) + nextConstant;\n      }\n\n      var e = new Error(formatted);\n      e.fromAssert = true;\n      e.associatedElement = firstElement;\n      e.messageArray = messageArray;\n      this.prepareError_(e); // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(e);\n\n      throw e;\n    }\n\n    return shouldBeTrueish;\n  }\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertElement = function assertElement(shouldBeElement, opt_message) {\n    var shouldBeTrueish = shouldBeElement && shouldBeElement.nodeType == 1;\n    this.assertType_(shouldBeElement, shouldBeTrueish, 'Element expected', opt_message);\n    return (\n      /** @type {!Element} */\n      shouldBeElement\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertString = function assertString(shouldBeString, opt_message) {\n    this.assertType_(shouldBeString, typeof shouldBeString == 'string', 'String expected', opt_message);\n    return (\n      /** @type {string} */\n      shouldBeString\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertNumber = function assertNumber(shouldBeNumber, opt_message) {\n    this.assertType_(shouldBeNumber, typeof shouldBeNumber == 'number', 'Number expected', opt_message);\n    return (\n      /** @type {number} */\n      shouldBeNumber\n    );\n  }\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertArray = function assertArray(shouldBeArray, opt_message) {\n    this.assertType_(shouldBeArray, (0, _types.isArray)(shouldBeArray), 'Array expected', opt_message);\n    return (\n      /** @type {!Array} */\n      shouldBeArray\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertBoolean = function assertBoolean(shouldBeBoolean, opt_message) {\n    this.assertType_(shouldBeBoolean, !!shouldBeBoolean === shouldBeBoolean, 'Boolean expected', opt_message);\n    return (\n      /** @type {boolean} */\n      shouldBeBoolean\n    );\n  }\n  /**\n   * Asserts and returns the enum value. If the enum doesn't contain such a\n   * value, the error is thrown.\n   *\n   * @param {!Object<T>} enumObj\n   * @param {string} s\n   * @param {string=} opt_enumName\n   * @return {T}\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertEnumValue = function assertEnumValue(enumObj, s, opt_enumName) {\n    if ((0, _types.isEnumValue)(enumObj, s)) {\n      return s;\n    }\n\n    this.assert(false, 'Unknown %s value: \"%s\"', opt_enumName || 'enum', s);\n  }\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  ;\n\n  _proto.prepareError_ = function prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  ;\n\n  _proto.maybeExpandMessageArgs_ = function maybeExpandMessageArgs_(args) {\n    if ((0, _types.isArray)(args[0])) {\n      return this.expandMessageArgs_(\n      /** @type {!Array} */\n      args[0]);\n    }\n\n    return args;\n  }\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  ;\n\n  _proto.expandMessageArgs_ = function expandMessageArgs_(parts) {\n    // First value should exist.\n    var id = parts.shift(); // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n\n    if ((0, _mode.getMode)(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n\n    return [\"More info at \" + externalMessageUrl(id, parts)];\n  }\n  /**\n   * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n   *\n   * It understands array-based \"id\"-contracted messages.\n   *\n   * Otherwise creates a sprintf syntax string containing the optional message or the\n   * default. An interpolation token is added at the end to include the `subject`.\n   * @param {*} subject\n   * @param {*} assertion\n   * @param {string} defaultMessage\n   * @param {!Array|string=} opt_message\n   * @private\n   */\n  ;\n\n  _proto.assertType_ = function assertType_(subject, assertion, defaultMessage, opt_message) {\n    if ((0, _types.isArray)(opt_message)) {\n      this.assert(assertion, opt_message.concat(subject));\n    } else {\n      this.assert(assertion, (opt_message || defaultMessage) + \": %s\", subject);\n    }\n  };\n\n  return Log;\n}();\n/**\n * @param {string|!Element} val\n * @return {string}\n */\n\n\nexports.Log = Log;\n\nvar stringOrElementString = function stringOrElementString(val) {\n  return (\n    /** @type {string} */\n    elementStringOrPassthru(val)\n  );\n};\n/**\n * @param {*} val\n * @return {*}\n */\n\n\nfunction elementStringOrPassthru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (val && val.nodeType == 1) {\n    return val.tagName.toLowerCase() + (val.id ? '#' + val.id : '');\n  }\n\n  return val;\n}\n/**\n * @param {!Array} array\n * @param {*} val\n */\n\n\nfunction pushIfNonEmpty(array, val) {\n  if (val != '') {\n    array.push(val);\n  }\n}\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\n\n\nfunction duplicateErrorIfNecessary(error) {\n  var messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n\n  if (messageProperty && messageProperty.writable) {\n    return error;\n  }\n\n  var message = error.message,\n      stack = error.stack;\n  var e = new Error(message); // Copy all the extraneous things we attach.\n\n  for (var prop in error) {\n    e[prop] = error[prop];\n  } // Ensure these are copied.\n\n\n  e.stack = stack;\n  return e;\n}\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\n\n\nfunction createErrorVargs(var_args) {\n  var error = null;\n  var message = '';\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n\n  return error;\n}\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\n\n\nfunction rethrowAsync(var_args) {\n  var error = createErrorVargs.apply(null, arguments);\n  setTimeout(function () {\n    // reportError is installed globally per window in the entry point.\n    self.__AMP_REPORT_ERROR(error);\n\n    throw error;\n  });\n}\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\n\n\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null\n};\nvar logs = self.__AMP_LOG;\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?Function}\n */\n\nvar logConstructor = null;\n/**\n * Initializes log contructor.\n */\n\nfunction initLogConstructor() {\n  logConstructor = Log; // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n\n  dev();\n  user();\n}\n/**\n * Resets log contructor for testing.\n */\n\n\nfunction resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\n\n\nfunction user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n\n    return logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL);\n  }\n}\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\n\n\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n\n  return new logConstructor(self, function (mode) {\n    var logNum = parseInt(mode.log, 10);\n\n    if (mode.development || logNum >= 1) {\n      return LogLevel.FINE;\n    }\n\n    return LogLevel.WARN;\n  }, suffix);\n}\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\n\n\nfunction dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n\n  return logs.dev = new logConstructor(self, function (mode) {\n    var logNum = parseInt(mode.log, 10);\n\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n\n    return LogLevel.OFF;\n  });\n}\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\n\n\nfunction isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n\n  return opt_element.ownerDocument.defaultView != win;\n}\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction devAssert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9) {\n  if ((0, _mode.getMode)().minified) {\n    return shouldBeTrueish;\n  }\n\n  return dev().\n  /*Orig call*/\n  assert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9);\n}\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction userAssert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9) {\n  return user().\n  /*Orig call*/\n  assert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9);\n}\n\n},{\"./config\":2,\"./internal-version\":5,\"./mode\":9,\"./mode-object\":8,\"./types\":13,\"./utils/function\":17}],8:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getModeObject = getModeObject;\n\nvar _mode = require(\"./mode\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides info about the current app. This return value may be cached and\n * passed around as it will always be DCE'd.\n * @param {?Window=} opt_win\n * @return {!./mode.ModeDef}\n */\nfunction getModeObject(opt_win) {\n  return {\n    localDev: (0, _mode.getMode)(opt_win).localDev,\n    development: (0, _mode.getMode)(opt_win).development,\n    filter: (0, _mode.getMode)(opt_win).filter,\n    minified: (0, _mode.getMode)(opt_win).minified,\n    lite: (0, _mode.getMode)(opt_win).lite,\n    test: (0, _mode.getMode)(opt_win).test,\n    log: (0, _mode.getMode)(opt_win).log,\n    version: (0, _mode.getMode)(opt_win).version,\n    rtvVersion: (0, _mode.getMode)(opt_win).rtvVersion,\n    singlePassType: (0, _mode.getMode)(opt_win).singlePassType\n  };\n}\n\n},{\"./mode\":9}],9:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getMode = getMode;\nexports.getRtvVersionForTesting = getRtvVersionForTesting;\nexports.resetRtvVersionForTesting = resetRtvVersionForTesting;\nexports.ModeDef = void 0;\n\nvar _internalVersion = require(\"./internal-version\");\n\nvar _urlParseQueryString = require(\"./url-parse-query-string\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   filter: (string|undefined),\n *   minified: boolean,\n *   lite: boolean,\n *   test: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   singlePassType: (string|undefined)\n * }}\n */\nvar ModeDef;\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\n\nexports.ModeDef = ModeDef;\nvar rtvVersion = '';\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\n\nfunction getMode(opt_win) {\n  var win = opt_win || self;\n\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n\n  return win.__AMP_MODE = getMode_(win);\n}\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\n\n\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  var AMP_CONFIG = self.AMP_CONFIG || {}; // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_DEV is only replaced when `gulp dist` is called without the\n  // --fortesting flag.\n\n  var IS_DEV = true;\n  var IS_MINIFIED = false;\n  var localDevEnabled = !!AMP_CONFIG.localDev;\n  var runningTests = !!AMP_CONFIG.test || IS_DEV && !!(win.__AMP_TEST || win.__karma__);\n  var runningTestsOnIe = win.__karma__ && win.__karma__.config.amp.testOnIe;\n  var isLocalDev = IS_DEV && (localDevEnabled || runningTests);\n  var hashQuery = (0, _urlParseQueryString.parseQueryString_)( // location.originalHash is set by the viewer when it removes the fragment\n  // from the URL.\n  win.location.originalHash || win.location.hash);\n  var singlePassType = AMP_CONFIG.spt;\n  var searchQuery = (0, _urlParseQueryString.parseQueryString_)(win.location.search);\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win, isLocalDev);\n  } // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `gulp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n\n\n  return {\n    localDev: isLocalDev,\n    // Triggers validation or enable pub level logging. Validation can be\n    // bypassed via #validate=0.\n    // Note that AMP_DEV_MODE flag is used for testing purposes.\n    // Use Array.indexOf instead of Array.includes because of #24219\n    development: !!(['1', 'actions', 'amp', 'amp4ads', 'amp4email'].indexOf(hashQuery['development']) >= 0 || win.AMP_DEV_MODE),\n    examiner: hashQuery['development'] == '2',\n    // Allows filtering validation errors by error category. For the\n    // available categories, see ErrorCategory in validator/validator.proto.\n    filter: hashQuery['filter'],\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    // amp-user-location override\n    userLocationOverride: hashQuery['amp-user-location'],\n    minified: IS_MINIFIED,\n    // Whether document is in an amp-lite viewer. It signal that the user\n    // would prefer to use less bandwidth.\n    lite: searchQuery['amp_lite'] != undefined,\n    test: runningTests,\n    testIe: runningTestsOnIe,\n    log: hashQuery['log'],\n    version: (0, _internalVersion.internalRuntimeVersion)(),\n    rtvVersion: rtvVersion,\n    singlePassType: singlePassType\n  };\n}\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n */\n\n\nfunction getRtvVersion(win, isLocalDev) {\n  // If it's local dev then we won't actually have a full version so\n  // just use the version.\n  if (isLocalDev) {\n    return (0, _internalVersion.internalRuntimeVersion)();\n  }\n\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  } // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n\n\n  return \"01\" + (0, _internalVersion.internalRuntimeVersion)();\n}\n/**\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n * @visibleForTesting\n */\n\n\nfunction getRtvVersionForTesting(win, isLocalDev) {\n  return getRtvVersion(win, isLocalDev);\n}\n/** @visibleForTesting */\n\n\nfunction resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n\n},{\"./internal-version\":5,\"./url-parse-query-string\":14}],10:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.htmlFor = htmlFor;\nexports.svgFor = svgFor;\nexports.htmlRefs = htmlRefs;\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object.js\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar htmlContainer;\nvar svgContainer;\n/**\n * Creates the html helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\n\nfunction htmlFor(nodeOrDoc) {\n  var doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n\n  if (!htmlContainer || htmlContainer.ownerDocument !== doc) {\n    htmlContainer = doc.createElement('div');\n  }\n\n  return html;\n}\n/**\n * Creates the svg helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\n\n\nfunction svgFor(nodeOrDoc) {\n  var doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n\n  if (!svgContainer || svgContainer.ownerDocument !== svgContainer) {\n    svgContainer = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  }\n\n  return svg;\n}\n/**\n * A tagged template literal helper to generate static SVG trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const circle = svg`<circle cx=\"60\" cy=\"60\" r=\"22\"></circle>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\n\n\nfunction svg(strings) {\n  return createNode(svgContainer, strings);\n}\n/**\n * A tagged template literal helper to generate static DOM trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const div = html`<div><span></span></div>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\n\n\nfunction html(strings) {\n  return createNode(htmlContainer, strings);\n}\n/**\n * Helper used by html and svg string literal functions.\n * @param {!Element} container\n * @param {!Array<string>} strings\n * @return {!Element}\n */\n\n\nfunction createNode(container, strings) {\n  (0, _log.devAssert)(strings.length === 1, 'Improper html template tag usage.');\n  container.\n  /*OK*/\n  innerHTML = strings[0];\n  var el = container.firstElementChild;\n  (0, _log.devAssert)(el, 'No elements in template');\n  (0, _log.devAssert)(!el.nextElementSibling, 'Too many root elements in template'); // Clear to free memory.\n\n  container.removeChild(el);\n  return el;\n}\n/**\n * Queries an element for all elements with a \"ref\" attribute, removing\n * the attribute afterwards.\n * Returns a named map of all ref elements.\n *\n * @param {!Element} root\n * @return {!Object<string, !Element>}\n */\n\n\nfunction htmlRefs(root) {\n  var elements = root.querySelectorAll('[ref]');\n  var refs = (0, _object.map)();\n\n  for (var i = 0; i < elements.length; i++) {\n    var element = elements[i];\n    var ref = (0, _log.devAssert)(element.getAttribute('ref'), 'Empty ref attr');\n    element.removeAttribute('ref');\n    (0, _log.devAssert)(refs[ref] === undefined, 'Duplicate ref');\n    refs[ref] = element;\n  }\n\n  return refs;\n}\n\n},{\"./log\":7,\"./utils/object.js\":19}],11:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.dashToCamelCase = dashToCamelCase;\nexports.camelCaseToDash = camelCaseToDash;\nexports.dashToUnderline = dashToUnderline;\nexports.endsWith = endsWith;\nexports.startsWith = startsWith;\nexports.includes = includes;\nexports.expandTemplate = expandTemplate;\nexports.stringHash32 = stringHash32;\nexports.trimEnd = trimEnd;\nexports.trimStart = trimStart;\nexports.padStart = padStart;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n/**\n * @param {string} match\n * @return {string}\n */\n\n\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\n\n\nfunction dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\n\n\nfunction camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\n\n\nfunction dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\n\n\nfunction endsWith(string, suffix) {\n  var index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n/**\n * Polyfill for String.prototype.startsWith.\n * @param {string} string\n * @param {string} prefix\n * @return {boolean}\n */\n\n\nfunction startsWith(string, prefix) {\n  if (prefix.length > string.length) {\n    return false;\n  }\n\n  return string.lastIndexOf(prefix, 0) == 0;\n}\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\n\n\nfunction includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + substring.length > string.length) {\n    return false;\n  }\n\n  return string.indexOf(substring, start) !== -1;\n}\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\n\n\nfunction expandTemplate(template, getter, opt_maxIterations) {\n  var maxIterations = opt_maxIterations || 1;\n\n  var _loop = function _loop(i) {\n    var matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, function (_a, b) {\n      matches++;\n      return getter(b);\n    });\n\n    if (!matches) {\n      return \"break\";\n    }\n  };\n\n  for (var i = 0; i < maxIterations; i++) {\n    var _ret = _loop(i);\n\n    if (_ret === \"break\") break;\n  }\n\n  return template;\n}\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\n\n\nfunction stringHash32(str) {\n  var length = str.length;\n  var hash = 5381;\n\n  for (var i = 0; i < length; i++) {\n    hash = hash * 33 ^ str.charCodeAt(i);\n  } // Convert from 32-bit signed to unsigned.\n\n\n  return String(hash >>> 0);\n}\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\n\n\nfunction trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\n\n\nfunction trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {*} TODO(#23582): Specify return type\n */\n\n\nfunction padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n\n  targetLength = targetLength - s.length;\n  var padding = padString;\n\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n\n  return padding.slice(0, targetLength) + s;\n}\n\n},{}],12:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.camelCaseToTitleCase = camelCaseToTitleCase;\nexports.getVendorJsPropertyName = getVendorJsPropertyName;\nexports.setImportantStyles = setImportantStyles;\nexports.setStyle = setStyle;\nexports.getStyle = getStyle;\nexports.setStyles = setStyles;\nexports.assertNotDisplay = assertNotDisplay;\nexports.assertDoesNotContainDisplay = assertDoesNotContainDisplay;\nexports.setInitialDisplay = setInitialDisplay;\nexports.toggle = toggle;\nexports.px = px;\nexports.deg = deg;\nexports.translateX = translateX;\nexports.translate = translate;\nexports.scale = scale;\nexports.rotate = rotate;\nexports.removeAlphaFromColor = removeAlphaFromColor;\nexports.computedStyle = computedStyle;\nexports.resetStyles = resetStyles;\nexports.propagateObjectFitStyles = propagateObjectFitStyles;\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object.js\");\n\nvar _string = require(\"./string\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\n\n/** @type {Object<string, string>} */\nvar propertyNameCache;\n/** @const {!Array<string>} */\n\nvar vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n/**\n * @export\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\n\nfunction camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\n\n\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (var i = 0; i < vendorPrefixes.length; i++) {\n    var propertyName = vendorPrefixes[i] + titleCase;\n\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n\n  return '';\n}\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @export\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\n\n\nfunction getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if ((0, _string.startsWith)(camelCase, '--')) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n\n  if (!propertyNameCache) {\n    propertyNameCache = (0, _object.map)();\n  }\n\n  var propertyName = propertyNameCache[camelCase];\n\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n\n    if (style[camelCase] === undefined) {\n      var titleCase = camelCaseToTitleCase(camelCase);\n      var prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n\n  return propertyName;\n}\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\n\n\nfunction setImportantStyles(element, styles) {\n  var style = element.style;\n\n  for (var k in styles) {\n    style.setProperty(getVendorJsPropertyName(style, k), styles[k].toString(), 'important');\n  }\n}\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\n\n\nfunction setStyle(element, property, value, opt_units, opt_bypassCache) {\n  var propertyName = getVendorJsPropertyName(element.style, property, opt_bypassCache);\n\n  if (propertyName) {\n    element.style[propertyName] =\n    /** @type {string} */\n    opt_units ? value + opt_units : value;\n  }\n}\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\n\n\nfunction getStyle(element, property, opt_bypassCache) {\n  var propertyName = getVendorJsPropertyName(element.style, property, opt_bypassCache);\n\n  if (!propertyName) {\n    return undefined;\n  }\n\n  return element.style[propertyName];\n}\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\n\n\nfunction setStyles(element, styles) {\n  for (var k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\n\n\nfunction assertNotDisplay(style) {\n  if (style === 'display') {\n    (0, _log.dev)().error('STYLE', '`display` style detected. You must use toggle instead.');\n  }\n\n  return style;\n}\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\n\n\nfunction assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    (0, _log.dev)().error('STYLE', '`display` style detected in styles. You must use toggle instead.');\n  }\n\n  return styles;\n}\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\n\n\nfunction setInitialDisplay(el, value) {\n  var style = el.style;\n  (0, _log.devAssert)(value !== '' && value !== 'none', 'Initial display value must not be \"none\". Use toggle instead.');\n  (0, _log.devAssert)(!style['display'], 'setInitialDisplay MUST NOT be used for ' + 'resetting the display style. If you are looking for display:none ' + 'toggling, use toggle instead.');\n  style['display'] = value;\n}\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\n\n\nfunction toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\n\n\nfunction px(value) {\n  return value + \"px\";\n}\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\n\n\nfunction deg(value) {\n  return value + \"deg\";\n}\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction translateX(value) {\n  if (typeof value == 'string') {\n    return \"translateX(\" + value + \")\";\n  }\n\n  return \"translateX(\" + px(value) + \")\";\n}\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\n\n\nfunction translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n\n  if (opt_y === undefined) {\n    return \"translate(\" + x + \")\";\n  }\n\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n\n  return \"translate(\" + x + \", \" + opt_y + \")\";\n}\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction scale(value) {\n  return \"scale(\" + value + \")\";\n}\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n\n  return \"rotate(\" + value + \")\";\n}\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\n\n\nfunction removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(/\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g, '($1,$2,$3, 1)');\n}\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!Object<string, string>}\n */\n\n\nfunction computedStyle(win, el) {\n  var style =\n  /** @type {?CSSStyleDeclaration} */\n  win.getComputedStyle(el);\n  return (\n    /** @type {!Object<string, string>} */\n    style || (0, _object.map)()\n  );\n}\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\n\n\nfunction resetStyles(element, properties) {\n  for (var i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\n\n\nfunction propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n},{\"./log\":7,\"./string\":11,\"./utils/object.js\":19}],13:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isArray = isArray;\nexports.toArray = toArray;\nexports.isObject = isObject;\nexports.isFiniteNumber = isFiniteNumber;\nexports.isEnumValue = isEnumValue;\nexports.toWin = toWin;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nvar toString_ = Object.prototype.toString;\n/**\n * Returns the ECMA [[Class]] of a value\n * @param {*} value\n * @return {string}\n */\n\nfunction toString(value) {\n  return toString_.call(value);\n}\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\n\n\nfunction toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  return toString(value) === '[object Object]';\n}\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n/**\n * Checks whether `s` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} s\n * @return {boolean}\n * @template T\n */\n\n\nfunction isEnumValue(enumObj, s) {\n  for (var k in enumObj) {\n    if (enumObj[k] === s) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {!Window|null} winOrNull\n * @return {!Window}\n */\n\n\nfunction toWin(winOrNull) {\n  return (\n    /** @type {!Window} */\n    winOrNull\n  );\n}\n\n},{}],14:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.parseQueryString_ = parseQueryString_;\n\nvar _urlTryDecodeUriComponent = require(\"./url-try-decode-uri-component\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar regex = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * DO NOT import the function from this file. Instead, import parseQueryString\n * from `src/url.js`.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\n\nfunction parseQueryString_(queryString) {\n  var params =\n  /** @type {!JsonObject} */\n  Object.create(null);\n\n  if (!queryString) {\n    return params;\n  }\n\n  var match;\n\n  while (match = regex.exec(queryString)) {\n    var name = (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(match[1], match[1]);\n    var value = match[2] ? (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(match[2], match[2]) : '';\n    params[name] = value;\n  }\n\n  return params;\n}\n\n},{\"./url-try-decode-uri-component\":15}],15:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.tryDecodeUriComponent_ = tryDecodeUriComponent_;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * DO NOT import the function from this file. Instead, import\n * tryDecodeUriComponent from `src/url.js`.\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nfunction tryDecodeUriComponent_(component, fallback) {\n  if (fallback === void 0) {\n    fallback = '';\n  }\n\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n},{}],16:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getWinOrigin = getWinOrigin;\nexports.parseUrlDeprecated = parseUrlDeprecated;\nexports.parseUrlWithA = parseUrlWithA;\nexports.appendEncodedParamStringToUrl = appendEncodedParamStringToUrl;\nexports.addParamToUrl = addParamToUrl;\nexports.addParamsToUrl = addParamsToUrl;\nexports.addMissingParamsToUrl = addMissingParamsToUrl;\nexports.serializeQueryString = serializeQueryString;\nexports.isSecureUrlDeprecated = isSecureUrlDeprecated;\nexports.assertHttpsUrl = assertHttpsUrl;\nexports.assertAbsoluteHttpOrHttpsUrl = assertAbsoluteHttpOrHttpsUrl;\nexports.parseQueryString = parseQueryString;\nexports.removeFragment = removeFragment;\nexports.getFragment = getFragment;\nexports.isProxyOrigin = isProxyOrigin;\nexports.getProxyServingType = getProxyServingType;\nexports.isLocalhostOrigin = isLocalhostOrigin;\nexports.isProtocolValid = isProtocolValid;\nexports.removeAmpJsParamsFromUrl = removeAmpJsParamsFromUrl;\nexports.removeSearch = removeSearch;\nexports.removeParamsFromSearch = removeParamsFromSearch;\nexports.getSourceUrl = getSourceUrl;\nexports.getSourceOrigin = getSourceOrigin;\nexports.resolveRelativeUrl = resolveRelativeUrl;\nexports.resolveRelativeUrlFallback_ = resolveRelativeUrlFallback_;\nexports.getCorsUrl = getCorsUrl;\nexports.checkCorsUrl = checkCorsUrl;\nexports.tryDecodeUriComponent = tryDecodeUriComponent;\nexports.SOURCE_ORIGIN_PARAM = void 0;\n\nvar _lruCache = require(\"./utils/lru-cache\");\n\nvar _object = require(\"./utils/object\");\n\nvar _string = require(\"./string\");\n\nvar _mode = require(\"./mode\");\n\nvar _types = require(\"./types\");\n\nvar _urlParseQueryString = require(\"./url-parse-query-string\");\n\nvar _urlTryDecodeUriComponent = require(\"./url-try-decode-uri-component\");\n\nvar _config = require(\"./config\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @type {!JsonObject}\n */\nvar SERVING_TYPE_PREFIX = (0, _object.dict)({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n  // Actions viewer\n  'action': true\n});\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\n\nvar a;\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\n\nvar cache;\n/** @private @const Matches amp_js_* parameters in query string. */\n\nvar AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n/** @private @const Matches amp_gsa parameters in query string. */\n\nvar AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n/** @private @const Matches amp_r parameters in query string. */\n\nvar AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n/** @private @const Matches amp_kit parameters in query string. */\n\nvar AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n/** @private @const Matches usqp parameters from goog experiment in query string. */\n\nvar GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\nvar INVALID_PROTOCOLS = [\n/*eslint no-script-url: 0*/\n'javascript:',\n/*eslint no-script-url: 0*/\n'data:',\n/*eslint no-script-url: 0*/\n'vbscript:'];\n/** @const {string} */\n\nvar SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\n\nexports.SOURCE_ORIGIN_PARAM = SOURCE_ORIGIN_PARAM;\n\nfunction getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n * @return {!Location}\n */\n\n\nfunction parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a =\n    /** @type {!HTMLAnchorElement} */\n    self.document.createElement('a');\n    cache = self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new _lruCache.LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, opt_nocache ? null : cache);\n}\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n * @return {!Location}\n * @restricted\n */\n\n\nfunction parseUrlWithA(a, url, opt_cache) {\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url; // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  var info =\n  /** @type {!Location} */\n  {\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null // Set below.\n\n  }; // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  } // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n\n\n  if (info.protocol == 'http:' && info.port == 80 || info.protocol == 'https:' && info.port == 443) {\n    info.port = '';\n    info.host = info.hostname;\n  } // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n\n\n  var origin;\n\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n\n  info.origin = origin; // Freeze during testing to avoid accidental mutation.\n\n  var frozen = (0, _mode.getMode)().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\n\n\nfunction appendEncodedParamStringToUrl(url, paramString, opt_addToFront) {\n  if (!paramString) {\n    return url;\n  }\n\n  var mainAndFragment = url.split('#', 2);\n  var mainAndQuery = mainAndFragment[0].split('?', 2);\n  var newUrl = mainAndQuery[0] + (mainAndQuery[1] ? opt_addToFront ? \"?\" + paramString + \"&\" + mainAndQuery[1] : \"?\" + mainAndQuery[1] + \"&\" + paramString : \"?\" + paramString);\n  newUrl += mainAndFragment[1] ? \"#\" + mainAndFragment[1] : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\n\n\nfunction addParamToUrl(url, key, value, opt_addToFront) {\n  var field = encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction addMissingParamsToUrl(url, params) {\n  var location = parseUrlDeprecated(url);\n  var existingParams = parseQueryString(location.search);\n  var paramsToAdd = (0, _object.dict)({});\n  var keys = Object.keys(params);\n\n  for (var i = 0; i < keys.length; i++) {\n    if (!(0, _object.hasOwn)(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n\n  return addParamsToUrl(url, paramsToAdd);\n}\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction serializeQueryString(params) {\n  var s = [];\n\n  for (var k in params) {\n    var v = params[k];\n\n    if (v == null) {\n      continue;\n    } else if ((0, _types.isArray)(v)) {\n      for (var i = 0; i < v.length; i++) {\n        var sv =\n        /** @type {string} */\n        v[i];\n        s.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(sv));\n      }\n    } else {\n      var _sv =\n      /** @type {string} */\n      v;\n      s.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(_sv));\n    }\n  }\n\n  return s.join('&');\n}\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\n\n\nfunction isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return url.protocol == 'https:' || url.hostname == 'localhost' || url.hostname == '127.0.0.1' || (0, _string.endsWith)(url.hostname, '.localhost');\n}\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\n\n\nfunction assertHttpsUrl(urlString, elementContext, sourceName) {\n  if (sourceName === void 0) {\n    sourceName = 'source';\n  }\n\n  (0, _log.userAssert)(urlString != null, '%s %s must be available', elementContext, sourceName); // (erwinm, #4560): type cast necessary until #4560 is fixed.\n\n  var theUrlString =\n  /** @type {string} */\n  urlString;\n  (0, _log.userAssert)(isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString), '%s %s must start with ' + '\"https://\" or \"//\" or be relative and served from ' + 'either https or from localhost. Invalid value: %s', elementContext, sourceName, theUrlString);\n  return theUrlString;\n}\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\n\n\nfunction assertAbsoluteHttpOrHttpsUrl(urlString) {\n  (0, _log.userAssert)(/^https?\\:/i.test(urlString), 'URL must start with \"http://\" or \"https://\". Invalid value: %s', urlString);\n  return parseUrlDeprecated(urlString).href;\n}\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * This function is implemented in a separate file to avoid a circular\n * dependency.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\n\n\nfunction parseQueryString(queryString) {\n  return (0, _urlParseQueryString.parseQueryString_)(queryString);\n}\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeFragment(url) {\n  var index = url.indexOf('#');\n\n  if (index == -1) {\n    return url;\n  }\n\n  return url.substring(0, index);\n}\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction getFragment(url) {\n  var index = url.indexOf('#');\n\n  if (index == -1) {\n    return '';\n  }\n\n  return url.substring(index);\n}\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\n\n\nfunction isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return _config.urls.cdnProxyRegex.test(url.origin);\n}\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\n\n\nfunction getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n\n  var path = url.pathname.split('/', 2);\n  return path[1];\n}\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\n\n\nfunction isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return _config.urls.localhostRegex.test(url.origin);\n}\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\n\n\nfunction isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeAmpJsParamsFromUrl(url) {\n  var parsed = parseUrlDeprecated(url);\n  var search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeSearch(url) {\n  var index = url.indexOf('?');\n\n  if (index == -1) {\n    return url;\n  }\n\n  var fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\n\n\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n\n  var search = urlSearch.replace(AMP_JS_PARAMS_REGEX, '').replace(AMP_GSA_PARAMS_REGEX, '').replace(AMP_R_PARAMS_REGEX, '').replace(AMP_KIT_PARAMS_REGEX, '').replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '').replace(/^[?&]/, ''); // Removes first ? or &.\n\n  return search ? '?' + search : '';\n}\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\n\n\nfunction removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n\n  var paramRegex = new RegExp(\"[?&]\" + paramName + \"=[^&]*\", 'g');\n  var search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\n\n\nfunction getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  } // Not a proxy URL - return the URL itself.\n\n\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  } // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n\n\n  var path = url.pathname.split('/');\n  var prefix = path[1];\n  (0, _log.userAssert)(SERVING_TYPE_PREFIX[prefix], 'Unknown path prefix in url %s', url.href);\n  var domainOrHttpsSignal = path[2];\n  var origin = domainOrHttpsSignal == 's' ? 'https://' + decodeURIComponent(path[3]) : 'http://' + decodeURIComponent(domainOrHttpsSignal); // Sanity test that what we found looks like a domain.\n\n  (0, _log.userAssert)(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return origin + path.join('/') + removeAmpJsParamsFromSearch(url.search) + (url.hash || '');\n}\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\n\n\nfunction getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\n\n\nfunction resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n\n  if (typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private Visible for testing.\n */\n\n\nfunction resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  var relativeUrl = parseUrlDeprecated(relativeUrlString); // Absolute URL.\n\n  if ((0, _string.startsWith)(relativeUrlString.toLowerCase(), relativeUrl.protocol)) {\n    return relativeUrl.href;\n  } // Protocol-relative URL.\n\n\n  if ((0, _string.startsWith)(relativeUrlString, '//')) {\n    return baseUrl.protocol + relativeUrlString;\n  } // Absolute path.\n\n\n  if ((0, _string.startsWith)(relativeUrlString, '/')) {\n    return baseUrl.origin + relativeUrlString;\n  } // Relative path.\n\n\n  return baseUrl.origin + baseUrl.pathname.replace(/\\/[^/]*$/, '/') + relativeUrlString;\n}\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\n\n\nfunction getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  var sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\n\n\nfunction checkCorsUrl(url) {\n  var parsedUrl = parseUrlDeprecated(url);\n  var query = parseQueryString(parsedUrl.search);\n  (0, _log.userAssert)(!(SOURCE_ORIGIN_PARAM in query), 'Source origin is not allowed in %s', url);\n}\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} opt_fallback\n * @return {string}\n */\n\n\nfunction tryDecodeUriComponent(component, opt_fallback) {\n  return (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(component, opt_fallback);\n}\n\n},{\"./config\":2,\"./log\":7,\"./mode\":9,\"./string\":11,\"./types\":13,\"./url-parse-query-string\":14,\"./url-try-decode-uri-component\":15,\"./utils/lru-cache\":18,\"./utils/object\":19}],17:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.once = once;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// TODO(rsimha, #15334): Enable this rule.\n\n/* eslint jsdoc/check-types: 0 */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nfunction once(fn) {\n  var evaluated = false;\n  var retValue = null;\n  var callback = fn;\n  return function () {\n    if (!evaluated) {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n\n    return retValue;\n  };\n}\n\n},{}],18:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.LruCache = void 0;\n\nvar _log = require(\"../log\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nvar TAG = 'lru-cache';\n/**\n * @template T\n */\n\nvar LruCache =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {number} capacity\n   */\n  function LruCache(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n    /** @private {number} */\n\n    this.size_ = 0;\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n\n    this.access_ = 0;\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n\n    this.cache_ = Object.create(null);\n  }\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n\n\n  var _proto = LruCache.prototype;\n\n  _proto.has = function has(key) {\n    return !!this.cache_[key];\n  }\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  ;\n\n  _proto.get = function get(key) {\n    var cacheable = this.cache_[key];\n\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n\n    return undefined;\n  }\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  ;\n\n  _proto.put = function put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n\n    this.cache_[key] = {\n      payload: payload,\n      access: this.access_\n    };\n    this.evict_();\n  }\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  ;\n\n  _proto.evict_ = function evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    (0, _log.dev)().warn(TAG, 'Trimming LRU cache');\n    var cache = this.cache_;\n    var oldest = this.access_ + 1;\n    var oldestKey;\n\n    for (var key in cache) {\n      var access = cache[key].access;\n\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  };\n\n  return LruCache;\n}();\n\nexports.LruCache = LruCache;\n\n},{\"../log\":7}],19:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.map = map;\nexports.dict = dict;\nexports.hasOwn = hasOwn;\nexports.ownProperty = ownProperty;\nexports.deepMerge = deepMerge;\nexports.omit = omit;\n\nvar _types = require(\"../types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nvar hasOwn_ = Object.prototype.hasOwnProperty;\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\n\nfunction map(opt_initial) {\n  var obj = Object.create(null);\n\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n\n  return obj;\n}\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\n\n\nfunction dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return (\n    /** @type {!JsonObject} */\n    opt_initial || {}\n  );\n}\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\n\n\nfunction hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\n\n\nfunction ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\n\n\nfunction deepMerge(target, source, depth) {\n  if (depth === void 0) {\n    depth = 10;\n  }\n\n  // Keep track of seen objects to detect recursive references.\n  var seen = [];\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n\n  var queue = [];\n  queue.push({\n    t: target,\n    s: source,\n    d: 0\n  }); // BFS to ensure objects don't have recursive references at shallower depths.\n\n  var _loop = function _loop() {\n    var _queue$shift = queue.shift(),\n        t = _queue$shift.t,\n        s = _queue$shift.s,\n        d = _queue$shift.d;\n\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n\n    seen.push(s);\n\n    if (t === s) {\n      return \"continue\";\n    }\n\n    if (d > depth) {\n      Object.assign(t, s);\n      return \"continue\";\n    }\n\n    Object.keys(s).forEach(function (key) {\n      var newValue = s[key]; // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n\n      if (hasOwn(t, key)) {\n        var oldValue = t[key];\n\n        if ((0, _types.isObject)(newValue) && (0, _types.isObject)(oldValue)) {\n          queue.push({\n            t: oldValue,\n            s: newValue,\n            d: d + 1\n          });\n          return;\n        }\n      }\n\n      t[key] = newValue;\n    });\n  };\n\n  while (queue.length > 0) {\n    var _ret = _loop();\n\n    if (_ret === \"continue\") continue;\n  }\n\n  return target;\n}\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\n\n\nfunction omit(o, props) {\n  return Object.keys(o).reduce(function (acc, key) {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n\n    return acc;\n  }, {});\n}\n\n},{\"../types\":13}],20:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.tryResolve = tryResolve;\nexports.some = some;\nexports.LastAddedResolver = exports.Deferred = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nvar Deferred =\n/**\n * Creates an instance of Deferred.\n */\nfunction Deferred() {\n  var resolve, reject;\n  /**\n   * @const {!Promise<T>}\n   */\n\n  this.promise = new\n  /*OK*/\n  Promise(function (res, rej) {\n    resolve = res;\n    reject = rej;\n  });\n  /**\n   * @const {function(T=)}\n   */\n\n  this.resolve = resolve;\n  /**\n   * @const {function(*=)}\n   */\n\n  this.reject = reject;\n};\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\n\n\nexports.Deferred = Deferred;\n\nfunction tryResolve(fn) {\n  return new Promise(function (resolve) {\n    resolve(fn());\n  });\n}\n/**\n * Returns a promise which resolves if a threshold amount of the given promises\n * resolve, and rejects otherwise.\n * @param {!Array<!Promise>} promises The array of promises to test.\n * @param {number} count The number of promises that must resolve for the\n *     returned promise to resolve.\n * @return {!Promise} A promise that resolves if any of the given promises\n *     resolve, and which rejects otherwise.\n */\n\n\nfunction some(promises, count) {\n  if (count === void 0) {\n    count = 1;\n  }\n\n  return new Promise(function (resolve, reject) {\n    count = Math.max(count, 0);\n    var extra = promises.length - count;\n\n    if (extra < 0) {\n      reject(new Error('not enough promises to resolve'));\n    }\n\n    if (promises.length == 0) {\n      resolve([]);\n    }\n\n    var values = [];\n    var reasons = [];\n\n    var onFulfilled = function onFulfilled(value) {\n      if (values.length < count) {\n        values.push(value);\n      }\n\n      if (values.length == count) {\n        resolve(values);\n      }\n    };\n\n    var onRejected = function onRejected(reason) {\n      if (reasons.length <= extra) {\n        reasons.push(reason);\n      }\n\n      if (reasons.length > extra) {\n        reject(reasons);\n      }\n    };\n\n    for (var i = 0; i < promises.length; i++) {\n      Promise.resolve(promises[i]).then(onFulfilled, onRejected);\n    }\n  });\n}\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\n\n\nvar LastAddedResolver =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Array<!Promise>=} opt_promises\n   */\n  function LastAddedResolver(opt_promises) {\n    var resolve_, reject_;\n    /** @private @const {!Promise} */\n\n    this.promise_ = new Promise(function (resolve, reject) {\n      resolve_ = resolve;\n      reject_ = reject;\n    });\n    /** @private */\n\n    this.resolve_ = resolve_;\n    /** @private */\n\n    this.reject_ = reject_;\n    /** @private */\n\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (var i = 0; i < opt_promises.length; i++) {\n        this.add(opt_promises[i]);\n      }\n    }\n  }\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!Promise} promise\n   * @return {!Promise}\n   */\n\n\n  var _proto = LastAddedResolver.prototype;\n\n  _proto.add = function add(promise) {\n    var _this = this;\n\n    var countAtAdd = ++this.count_;\n    Promise.resolve(promise).then(function (result) {\n      if (_this.count_ === countAtAdd) {\n        _this.resolve_(result);\n      }\n    }, function (error) {\n      // Don't follow behavior of Promise.all and Promise.race error so that\n      // this will only reject when most recently added promise fails.\n      if (_this.count_ === countAtAdd) {\n        _this.reject_(error);\n      }\n    });\n    return this.promise_;\n  }\n  /** @override */\n  ;\n\n  _proto.then = function then(opt_resolve, opt_reject) {\n    return this.promise_.then(opt_resolve, opt_reject);\n  };\n\n  return LastAddedResolver;\n}();\n\nexports.LastAddedResolver = LastAddedResolver;\n\n},{}],21:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.cssEscape = cssEscape;\n\n/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  } // Nil is the null terminator (group 1) capture\n\n\n  if (nil) {\n    return \"\\uFFFD\";\n  } // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n\n\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' ';\n  } // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n\n\n  return '\\\\' + match;\n}\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\n\n\nfunction cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n\n},{}]},{},[1])\n\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Embeds the Google Docs viewer\n *\n * Example:\n * <code>\n * <amp-google-document-embed\n *   layout=\"fixed-height\"\n *   src=\"https://www.example.com/my-document.pdf\"\n *   height=\"600\">\n * </amp-google-document-embed>\n * </code>\n */\n\nimport {addParamToUrl} from '../../../src/url';\nimport {dev, userAssert} from '../../../src/log';\nimport {isLayoutSizeDefined} from '../../../src/layout';\nimport {removeElement} from '../../../src/dom';\n\nexport const TAG = 'amp-google-document-embed';\n\nconst ATTRIBUTES_TO_PROPAGATE = ['title'];\n\nconst GOOGLE_DOCS_EMBED_RE = /^https?:\\/\\/docs\\.google\\.com.+\\/pub.*\\??/;\n\nexport class AmpDriveViewer extends AMP.BaseElement {\n  /** @param {!AmpElement} element */\n  constructor(element) {\n    super(element);\n\n    /** @private {?Element} */\n    this.iframe_ = null;\n  }\n\n  /**\n   * Prefetches and preconnects URLs related to the viewer.\n   * @param {boolean=} opt_onLayout\n   * @override\n   */\n  preconnectCallback(opt_onLayout) {\n    this.preconnect.url('https://docs.google.com', opt_onLayout);\n  }\n\n  /** @override */\n  renderOutsideViewport() {\n    // We are conservative about loading heavy embeds outside the viewport.\n    // This will still start loading before it becomes visible, but it\n    // won't typically load a large number of embeds.\n    return 0.75;\n  }\n\n  /** @override */\n  isLayoutSupported(layout) {\n    return isLayoutSizeDefined(layout);\n  }\n\n  /** @override */\n  buildCallback() {\n    userAssert(\n      this.element.getAttribute('src'),\n      'The src attribute is required for <amp-google-document-embed> %s',\n      this.element\n    );\n  }\n\n  /** @override */\n  layoutCallback() {\n    const iframe = this.element.ownerDocument.createElement('iframe');\n    this.iframe_ = iframe;\n\n    iframe.setAttribute('frameborder', '0');\n    iframe.setAttribute('allowfullscreen', '');\n    this.propagateAttributes(ATTRIBUTES_TO_PROPAGATE, iframe);\n\n    iframe.src = this.getSrc_(this.element.getAttribute('src'));\n\n    this.applyFillContent(iframe);\n    this.element.appendChild(iframe);\n    return this.loadPromise(iframe);\n  }\n\n  /** @override */\n  mutatedAttributesCallback(mutations) {\n    const attrs = ATTRIBUTES_TO_PROPAGATE.filter(\n      value => mutations[value] !== undefined\n    );\n    const iframe = dev().assertElement(this.iframe_);\n    this.propagateAttributes(attrs, iframe, /* opt_removeMissingAttrs */ true);\n    const src = mutations['src'];\n    if (src) {\n      iframe.src = this.getSrc_(src);\n    }\n  }\n\n  /**\n   * Get the iframe source. Google Docs are special cased since they display\n   * using their own embed URL.\n   * @param {string} src\n   * @return {string} A URL to display a document using the Google Drive viewer.\n   */\n  getSrc_(src) {\n    if (src.match(GOOGLE_DOCS_EMBED_RE)) {\n      return src;\n    }\n    return addParamToUrl(\n      'https://docs.google.com/gview?embedded=true',\n      'url',\n      src\n    );\n  }\n\n  /** @override */\n  unlayoutOnPause() {\n    return true;\n  }\n\n  /** @override */\n  unlayoutCallback() {\n    if (this.iframe_) {\n      removeElement(this.iframe_);\n      this.iframe_ = null;\n    }\n    return true;\n  }\n}\n\nAMP.extension('amp-google-document-embed', '0.1', AMP => {\n  AMP.registerElement('amp-google-document-embed', AmpDriveViewer);\n});\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex'];\n\nconst cdnProxyRegex =\n  typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex'];\n\n/** @type {!Object<string, string|boolean|RegExp|Array<RegExp>>} */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex: thirdPartyFrameRegex || /^d-\\d+\\.ampproject\\.net$/,\n  cdn: env['cdnUrl'] || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex:\n    cdnProxyRegex || /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] || 'https://amp-error-reporting.appspot.com/r',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/master/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.dev$/,\n  ],\n};\n\nexport const config = {\n  urls,\n};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssEscape} from '../third_party/css-escape/css-escape';\nimport {devAssert} from './log';\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nexport function assertIsName(name) {\n  devAssert(/^[\\w-]+$/.test(name));\n}\n\n/**\n * @type {boolean|undefined}\n */\nlet scopeSelectorSupported;\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\nexport function isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return (scopeSelectorSupported = testScopeSelector(el));\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\nfunction testScopeSelector(el) {\n  try {\n    const doc = el.ownerDocument;\n    const testElement = doc.createElement('div');\n    const testChild = doc.createElement('div');\n    testElement.appendChild(testChild);\n    // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n    return testElement./*OK*/ querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\nexport function prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, `$&${distribute} `);\n}\n\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n */\nexport function escapeCssSelectorIdent(ident) {\n  return cssEscape(ident);\n}\n\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\nexport function escapeCssSelectorNth(ident) {\n  const escaped = String(ident);\n  // Ensure it doesn't close the nth-child psuedo class.\n  devAssert(escaped.indexOf(')') === -1);\n  return escaped;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './utils/promise';\nimport {\n  assertIsName,\n  isScopeSelectorSupported,\n  prependSelectorsWith,\n} from './css';\nimport {dev, devAssert} from './log';\nimport {dict} from './utils/object';\nimport {includes, startsWith} from './string';\nimport {toWin} from './types';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise(resolve => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise(resolve => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node} after\n */\nexport function insertAfterOrAtStart(root, element, after) {\n  const before = after ? after.nextSibling : root.firstChild;\n  root.insertBefore(element, before);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (n = node; !!n.parentNode && !isShadowRoot(n); n = n.parentNode) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {*} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  // TODO(#22733): remove in preference to dom's `rootNodeFor`.\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\nexport function closest(element, callback, opt_stopAt) {\n  for (let el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\nexport function closestNode(node, callback) {\n  for (let n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\nexport function closestAncestorElementBySelector(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  return closest(element, el => {\n    return matches(el, selector);\n  });\n}\n\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\nexport function ancestorElements(child, predicate) {\n  const ancestors = [];\n  for (\n    let ancestor = child.parentElement;\n    ancestor;\n    ancestor = ancestor.parentElement\n  ) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n  return ancestors;\n}\n\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\nexport function ancestorElementsByTag(child, tagName) {\n  assertIsName(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, el => {\n    return el.tagName == tagName;\n  });\n}\n\n/**\n * Finds the first child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function childElement(parent, callback) {\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\nexport function childElements(parent, callback) {\n  const children = [];\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function lastChildElement(parent, callback) {\n  for (\n    let child = parent.lastElementChild;\n    child;\n    child = child.previousElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\nexport function childNodes(parent, callback) {\n  const nodes = [];\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function childElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelector(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function lastChildElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return lastChildElement(parent, el => {\n    return el.hasAttribute(attr);\n  });\n}\n\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {?Element}\n */\nexport function childElementByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelector(parent, `> ${tagName}`);\n}\n\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> ${tagName}`);\n}\n\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\nexport function matches(el, selector) {\n  const matcher =\n    el.matches ||\n    el.webkitMatchesSelector ||\n    el.mozMatchesSelector ||\n    el.msMatchesSelector ||\n    el.oMatchesSelector;\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n  return false; // IE8 always returns false.\n}\n\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\nexport function elementByTag(element, tagName) {\n  assertIsName(tagName);\n  return element./*OK*/ querySelector(tagName);\n}\n\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nfunction scopedQuerySelectionFallback(root, selector) {\n  const unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  const scopedSelector = prependSelectorsWith(selector, `.${unique}`);\n  const elements = root./*OK*/ querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {?Element}\n */\nexport function scopedQuerySelector(root, selector) {\n  if (isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelector(prependSelectorsWith(selector, ':scope'));\n  }\n\n  // Only IE.\n  const fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nexport function scopedQuerySelectorAll(root, selector) {\n  if (isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelectorAll(\n      prependSelectorsWith(selector, ':scope')\n    );\n  }\n\n  // Only IE.\n  return scopedQuerySelectionFallback(root, selector);\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!Element} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || (key => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    startsWith(tag, 'AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!Element} element\n * @return {!Promise<!Element>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(element);\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Replacement for `Element.requestFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n * @param {!Element} element\n */\nexport function fullscreenEnter(element) {\n  const requestFs =\n    element.requestFullscreen ||\n    element.requestFullScreen ||\n    element.webkitRequestFullscreen ||\n    element.webkitEnterFullscreen ||\n    element.msRequestFullscreen ||\n    element.mozRequestFullScreen;\n  if (requestFs) {\n    requestFs.call(element);\n  }\n}\n\n/**\n * Replacement for `Document.exitFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/exitFullscreen\n * @param {!Element} element\n */\nexport function fullscreenExit(element) {\n  const elementBoundExit =\n    element.cancelFullScreen ||\n    element.exitFullscreen ||\n    element.webkitExitFullscreen ||\n    element.webkitCancelFullScreen ||\n    element.mozCancelFullScreen ||\n    element.msExitFullscreen;\n  if (elementBoundExit) {\n    elementBoundExit.call(element);\n    return;\n  }\n  const {ownerDocument} = element;\n  if (!ownerDocument) {\n    return;\n  }\n  const docBoundExit =\n    ownerDocument.cancelFullScreen ||\n    ownerDocument.exitFullscreencancelFullScreen ||\n    ownerDocument.webkitExitFullscreencancelFullScreen ||\n    ownerDocument.webkitCancelFullScreencancelFullScreen ||\n    ownerDocument.mozCancelFullScreencancelFullScreen ||\n    ownerDocument.msExitFullscreen;\n  if (docBoundExit) {\n    docBoundExit.call(ownerDocument);\n  }\n}\n\n/**\n * Replacement for `Document.fullscreenElement`.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenElement\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isFullscreenElement(element) {\n  const {webkitDisplayingFullscreen} = element;\n  if (webkitDisplayingFullscreen !== undefined) {\n    return webkitDisplayingFullscreen;\n  }\n  const {ownerDocument} = element;\n  if (!ownerDocument) {\n    return false;\n  }\n  const fullscreenElement =\n    ownerDocument.fullscreenElement ||\n    ownerDocument.webkitFullscreenElement ||\n    ownerDocument.mozFullScreenElement ||\n    ownerDocument.webkitCurrentFullScreenElement;\n  return fullscreenElement == element;\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!Element} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implements element layout. See https://goo.gl/9avXuT for\n * details.\n */\n\nimport {dev, devAssert, userAssert} from './log';\nimport {htmlFor} from './static-template';\nimport {isFiniteNumber} from './types';\nimport {setStyle, setStyles, toggle} from './style';\nimport {startsWith} from './string';\n\n/**\n * @enum {string}\n */\nexport const Layout = {\n  NODISPLAY: 'nodisplay',\n  FIXED: 'fixed',\n  FIXED_HEIGHT: 'fixed-height',\n  RESPONSIVE: 'responsive',\n  CONTAINER: 'container',\n  FILL: 'fill',\n  FLEX_ITEM: 'flex-item',\n  FLUID: 'fluid',\n  INTRINSIC: 'intrinsic',\n};\n\n/**\n * Layout priorities to use with BaseElement#getLayoutPriority() and\n * BaseElement#updateLayoutPriority().\n * @enum {number}\n */\nexport const LayoutPriority = {\n  CONTENT: 0,\n  METADATA: 1,\n  ADS: 2,\n  BACKGROUND: 3,\n};\n\n/**\n * CSS Length type. E.g. \"1px\" or \"20vh\".\n * @typedef {string}\n */\nexport let LengthDef;\n\n/**\n * @typedef {{\n *   width: string,\n *   height: string\n * }}\n */\nlet DimensionsDef;\n\n/**\n * The set of elements with natural dimensions, that is, elements\n * which have a known dimension either based on their value specified here,\n * or, if the value is null, a dimension specific to the browser.\n * `hasNaturalDimensions` checks for membership in this set.\n * `getNaturalDimensions` determines the dimensions for an element in the\n *    set and caches it.\n * @type {!Object<string, ?DimensionsDef>}\n * @private  Visible for testing only!\n */\nexport const naturalDimensions_ = {\n  'AMP-PIXEL': {width: '0px', height: '0px'},\n  'AMP-ANALYTICS': {width: '1px', height: '1px'},\n  // TODO(dvoytenko): audio should have width:auto.\n  'AMP-AUDIO': null,\n  'AMP-SOCIAL-SHARE': {width: '60px', height: '44px'},\n};\n\n/**\n * Elements that the progress can be shown for. This set has to be externalized\n * since the element's implementation may not be downloaded yet.\n * This list does not include video players which are found via regex later.\n * @enum {boolean}\n * @private  Visible for testing only!\n */\nexport const LOADING_ELEMENTS_ = {\n  'AMP-AD': true,\n  'AMP-ANIM': true,\n  'AMP-EMBED': true,\n  'AMP-FACEBOOK': true,\n  'AMP-FACEBOOK-COMMENTS': true,\n  'AMP-FACEBOOK-PAGE': true,\n  'AMP-GOOGLE-DOCUMENT-EMBED': true,\n  'AMP-IFRAME': true,\n  'AMP-IMG': true,\n  'AMP-INSTAGRAM': true,\n  'AMP-LIST': true,\n  'AMP-PINTEREST': true,\n  'AMP-PLAYBUZZ': true,\n  'AMP-TWITTER': true,\n};\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they are listed individually.\n * @private @const {!RegExp}\n */\nconst videoPlayerTagNameRe = /^amp\\-(video|.+player)|AMP-BRIGHTCOVE|AMP-DAILYMOTION|AMP-YOUTUBE|AMP-VIMEO|AMP-IMA-VIDEO/i;\n\n/**\n * @param {string} s\n * @return {Layout|undefined} Returns undefined in case of failure to parse\n *   the layout string.\n */\nexport function parseLayout(s) {\n  for (const k in Layout) {\n    if (Layout[k] == s) {\n      return Layout[k];\n    }\n  }\n  return undefined;\n}\n\n/**\n * @param {!Layout} layout\n * @return {string}\n */\nexport function getLayoutClass(layout) {\n  return 'i-amphtml-layout-' + layout;\n}\n\n/**\n * Whether an element with this layout inherently defines the size.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeDefined(layout) {\n  return (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.FILL ||\n    layout == Layout.FLEX_ITEM ||\n    layout == Layout.FLUID ||\n    layout == Layout.INTRINSIC\n  );\n}\n\n/**\n * Whether an element with this layout has a fixed dimension.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeFixed(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT;\n}\n\n/**\n * Whether the tag is an internal (service) AMP tag.\n * @param {!Node|string} tag\n * @return {boolean}\n */\nexport function isInternalElement(tag) {\n  const tagName = typeof tag == 'string' ? tag : tag.tagName;\n  return tagName && startsWith(tagName.toLowerCase(), 'i-');\n}\n\n/**\n * Parses the CSS length value. If no units specified, the assumed value is\n * \"px\". Returns undefined in case of parsing error.\n * @param {string|undefined|null} s\n * @return {!LengthDef|undefined}\n */\nexport function parseLength(s) {\n  if (typeof s == 'number') {\n    return s + 'px';\n  }\n  if (!s) {\n    return undefined;\n  }\n  if (!/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)?$/.test(s)) {\n    return undefined;\n  }\n  if (/^\\d+(\\.\\d+)?$/.test(s)) {\n    return s + 'px';\n  }\n  return s;\n}\n\n/**\n * Asserts that the supplied value is a non-percent CSS Length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLength(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)$/.test(length),\n    'Invalid length value: %s',\n    length\n  );\n  return /** @type {!LengthDef} */ (length);\n}\n\n/**\n * Asserts that the supplied value is a CSS Length value\n * (including percent unit).\n * @param {!LengthDef|string} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLengthOrPercent(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|%)$/.test(length),\n    'Invalid length or percent value: %s',\n    length\n  );\n  return length;\n}\n\n/**\n * Returns units from the CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {string}\n */\nexport function getLengthUnits(length) {\n  assertLength(length);\n  dev().assertString(length);\n  const m = userAssert(\n    length.match(/[a-z]+/i),\n    'Failed to read units from %s',\n    length\n  );\n  return m[0];\n}\n\n/**\n * Returns the numeric value of a CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {number|undefined}\n */\nexport function getLengthNumeral(length) {\n  const res = parseFloat(length);\n  return isFiniteNumber(res) ? res : undefined;\n}\n\n/**\n * Determines whether the tagName is a known element that has natural dimensions\n * in our runtime or the browser.\n * @param {string} tagName The element tag name.\n * @return {boolean}\n */\nexport function hasNaturalDimensions(tagName) {\n  tagName = tagName.toUpperCase();\n  return naturalDimensions_[tagName] !== undefined;\n}\n\n/**\n * Determines the default dimensions for an element which could vary across\n * different browser implementations, like <audio> for instance.\n * This operation can only be completed for an element whitelisted by\n * `hasNaturalDimensions`.\n * @param {!Element} element\n * @return {DimensionsDef}\n */\nexport function getNaturalDimensions(element) {\n  const tagName = element.tagName.toUpperCase();\n  devAssert(naturalDimensions_[tagName] !== undefined);\n  if (!naturalDimensions_[tagName]) {\n    const doc = element.ownerDocument;\n    const naturalTagName = tagName.replace(/^AMP\\-/, '');\n    const temp = doc.createElement(naturalTagName);\n    // For audio, should no-op elsewhere.\n    temp.controls = true;\n    setStyles(temp, {\n      position: 'absolute',\n      visibility: 'hidden',\n    });\n    doc.body.appendChild(temp);\n    naturalDimensions_[tagName] = {\n      width: (temp./*OK*/ offsetWidth || 1) + 'px',\n      height: (temp./*OK*/ offsetHeight || 1) + 'px',\n    };\n    doc.body.removeChild(temp);\n  }\n  return /** @type {DimensionsDef} */ (naturalDimensions_[tagName]);\n}\n\n/**\n * Whether the loading can be shown for the specified elemeent. This set has\n * to be externalized since the element's implementation may not be\n * downloaded yet.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isLoadingAllowed(element) {\n  const tagName = element.tagName.toUpperCase();\n  return LOADING_ELEMENTS_[tagName] || isIframeVideoPlayerComponent(tagName);\n}\n\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they're present in the LOADING_ELEMENTS_ whitelist.\n * @param {string} tagName\n * @return {boolean}\n */\nexport function isIframeVideoPlayerComponent(tagName) {\n  if (tagName == 'AMP-VIDEO') {\n    return false;\n  }\n  return videoPlayerTagNameRe.test(tagName);\n}\n\n/**\n * Applies layout to the element. Visible for testing only.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this method is used for server-side rendering (SSR) and\n * any changes made to it must be made in coordination with caches that\n * implement SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @param {!Element} element\n * @return {!Layout}\n */\nexport function applyStaticLayout(element) {\n  // Check if the layout has already been done by server-side rendering or\n  // client-side rendering and the element was cloned. The document may be\n  // visible to the user if the boilerplate was removed so please take care in\n  // making changes here.\n  const completedLayoutAttr = element.getAttribute('i-amphtml-layout');\n  if (completedLayoutAttr) {\n    const layout = /** @type {!Layout} */ (devAssert(\n      parseLayout(completedLayoutAttr)\n    ));\n    if (\n      (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) &&\n      element.firstElementChild\n    ) {\n      // Find sizer, but assume that it might not have been parsed yet.\n      element.sizerElement =\n        element.querySelector('i-amphtml-sizer') || undefined;\n    } else if (layout == Layout.NODISPLAY) {\n      toggle(element, false);\n      // TODO(jridgewell): Temporary hack while SSR still adds an inline\n      // `display: none`\n      element['style']['display'] = '';\n    }\n    return layout;\n  }\n\n  // If the layout was already done by server-side rendering (SSR), then the\n  // code below will not run. Any changes below will necessitate a change to SSR\n  // and must be coordinated with caches that implement SSR. See bit.ly/amp-ssr.\n\n  // Parse layout from the element.\n  const layoutAttr = element.getAttribute('layout');\n  const widthAttr = element.getAttribute('width');\n  const heightAttr = element.getAttribute('height');\n  const sizesAttr = element.getAttribute('sizes');\n  const heightsAttr = element.getAttribute('heights');\n\n  // Input layout attributes.\n  const inputLayout = layoutAttr ? parseLayout(layoutAttr) : null;\n  userAssert(inputLayout !== undefined, 'Unknown layout: %s', layoutAttr);\n  /** @const {string|null|undefined} */\n  const inputWidth =\n    widthAttr && widthAttr != 'auto' ? parseLength(widthAttr) : widthAttr;\n  userAssert(inputWidth !== undefined, 'Invalid width value: %s', widthAttr);\n  /** @const {string|null|undefined} */\n  const inputHeight =\n    heightAttr && heightAttr != 'fluid' ? parseLength(heightAttr) : heightAttr;\n  userAssert(inputHeight !== undefined, 'Invalid height value: %s', heightAttr);\n\n  // Effective layout attributes. These are effectively constants.\n  let width;\n  let height;\n  let layout;\n\n  // Calculate effective width and height.\n  if (\n    (!inputLayout ||\n      inputLayout == Layout.FIXED ||\n      inputLayout == Layout.FIXED_HEIGHT) &&\n    (!inputWidth || !inputHeight) &&\n    hasNaturalDimensions(element.tagName)\n  ) {\n    // Default width and height: handle elements that do not specify a\n    // width/height and are defined to have natural browser dimensions.\n    const dimensions = getNaturalDimensions(element);\n    width =\n      inputWidth || inputLayout == Layout.FIXED_HEIGHT\n        ? inputWidth\n        : dimensions.width;\n    height = inputHeight || dimensions.height;\n  } else {\n    width = inputWidth;\n    height = inputHeight;\n  }\n\n  // Calculate effective layout.\n  if (inputLayout) {\n    layout = inputLayout;\n  } else if (!width && !height) {\n    layout = Layout.CONTAINER;\n  } else if (height == 'fluid') {\n    layout = Layout.FLUID;\n  } else if (height && (!width || width == 'auto')) {\n    layout = Layout.FIXED_HEIGHT;\n  } else if (height && width && (sizesAttr || heightsAttr)) {\n    layout = Layout.RESPONSIVE;\n  } else {\n    layout = Layout.FIXED;\n  }\n\n  // Verify layout attributes.\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(height, 'Expected height to be available: %s', heightAttr);\n  }\n  if (layout == Layout.FIXED_HEIGHT) {\n    userAssert(\n      !width || width == 'auto',\n      'Expected width to be either absent or equal \"auto\" ' +\n        'for fixed-height layout: %s',\n      widthAttr\n    );\n  }\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(\n      width && width != 'auto',\n      'Expected width to be available and not equal to \"auto\": %s',\n      widthAttr\n    );\n  }\n\n  if (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    userAssert(\n      getLengthUnits(width) == getLengthUnits(height),\n      'Length units should be the same for width and height: %s, %s',\n      widthAttr,\n      heightAttr\n    );\n  } else {\n    userAssert(\n      heightsAttr === null,\n      'Unexpected \"heights\" attribute for none-responsive layout'\n    );\n  }\n\n  // Apply UI.\n  element.classList.add(getLayoutClass(layout));\n  if (isLayoutSizeDefined(layout)) {\n    element.classList.add('i-amphtml-layout-size-defined');\n  }\n  if (layout == Layout.NODISPLAY) {\n    // CSS defines layout=nodisplay automatically with `display:none`. Thus\n    // no additional styling is needed.\n    toggle(element, false);\n    // TODO(jridgewell): Temporary hack while SSR still adds an inline\n    // `display: none`\n    element['style']['display'] = '';\n  } else if (layout == Layout.FIXED) {\n    setStyles(element, {\n      width: dev().assertString(width),\n      height: dev().assertString(height),\n    });\n  } else if (layout == Layout.FIXED_HEIGHT) {\n    setStyle(element, 'height', dev().assertString(height));\n  } else if (layout == Layout.RESPONSIVE) {\n    const sizer = element.ownerDocument.createElement('i-amphtml-sizer');\n    setStyles(sizer, {\n      paddingTop:\n        (getLengthNumeral(height) / getLengthNumeral(width)) * 100 + '%',\n    });\n    element.insertBefore(sizer, element.firstChild);\n    element.sizerElement = sizer;\n  } else if (layout == Layout.INTRINSIC) {\n    // Intrinsic uses an svg inside the sizer element rather than the padding\n    // trick Note a naked svg won't work becasue other thing expect the\n    // i-amphtml-sizer element\n    const sizer = htmlFor(element)`\n      <i-amphtml-sizer class=\"i-amphtml-sizer\">\n        <img alt=\"\" role=\"presentation\" aria-hidden=\"true\"\n             class=\"i-amphtml-intrinsic-sizer\" />\n      </i-amphtml-sizer>`;\n    const intrinsicSizer = sizer.firstElementChild;\n    intrinsicSizer.setAttribute(\n      'src',\n      `data:image/svg+xml;charset=utf-8,<svg height=\"${height}\" width=\"${width}\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"/>`\n    );\n    element.insertBefore(sizer, element.firstChild);\n    element.sizerElement = sizer;\n  } else if (layout == Layout.FILL) {\n    // Do nothing.\n  } else if (layout == Layout.CONTAINER) {\n    // Do nothing. Elements themselves will check whether the supplied\n    // layout value is acceptable. In particular container is only OK\n    // sometimes.\n  } else if (layout == Layout.FLEX_ITEM) {\n    // Set height and width to a flex item if they exist.\n    // The size set to a flex item could be overridden by `display: flex` later.\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    if (height) {\n      setStyle(element, 'height', height);\n    }\n  } else if (layout == Layout.FLUID) {\n    element.classList.add('i-amphtml-layout-awaiting-size');\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    setStyle(element, 'height', 0);\n  }\n  // Mark the element as having completed static layout, in case it is cloned\n  // in the future.\n  element.setAttribute('i-amphtml-layout', layout);\n  return layout;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\nimport {getModeObject} from './mode-object';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray, isEnumValue} from './types';\nimport {once} from './utils/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n * @private Visible for testing only.\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error.js to break cyclic\n * dependency.\n * @param {function(*, !Element=)|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = arg =>\n  encodeURIComponent(String(elementStringOrPassthru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don’t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(!./mode.ModeDef):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(!./mode.ModeDef):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then(response => response.json(), noop)\n        .then(opt_messages => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    // Delegate to the specific resolver.\n    return this.levelFunc_(getModeObject());\n  }\n\n  /**\n   * @param {string} tag\n   * @param {string} level\n   * @param {!Array} messages\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() != LogLevel.OFF) {\n      let fn = this.win.console.log;\n      if (level == 'ERROR') {\n        fn = this.win.console.error || fn;\n      } else if (level == 'INFO') {\n        fn = this.win.console.info || fn;\n      } else if (level == 'WARN') {\n        fn = this.win.console.warn || fn;\n      }\n      const args = this.maybeExpandMessageArgs_(messages);\n      // Prefix console message with \"[tag]\".\n      const prefix = `[${tag}]`;\n      if (typeof args[0] === 'string') {\n        // Prepend string to avoid breaking string substitutions e.g. %s.\n        args[0] = prefix + ' ' + args[0];\n      } else {\n        args.unshift(prefix);\n      }\n      fn.apply(this.win.console, args);\n    }\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  fine(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.FINE) {\n      this.msg_(tag, 'FINE', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  info(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.INFO) {\n      this.msg_(tag, 'INFO', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  warn(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.WARN) {\n      this.msg_(tag, 'WARN', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} var_args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.ERROR) {\n      this.msg_(tag, 'ERROR', Array.prototype.slice.call(arguments, 1));\n    } else {\n      const error = createErrorVargs.apply(\n        null,\n        Array.prototype.slice.call(arguments, 1)\n      );\n      this.prepareError_(error);\n      return error;\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * NOTE: for an explanation of the tempate R implementation see\n   * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {R} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is `null` or `undefined`.\n   * @template T\n   * @template R :=\n   *     mapunion(T, (V) =>\n   *         cond(eq(V, 'null'),\n   *             none(),\n   *             cond(eq(V, 'undefined'),\n   *                 none(),\n   *                 V)))\n   *  =:\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    let firstElement;\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n    if (!shouldBeTrueish) {\n      const message = opt_message || 'Assertion failed';\n      const splitMessage = message.split('%s');\n      const first = splitMessage.shift();\n      let formatted = first;\n      const messageArray = [];\n      let i = 2;\n      pushIfNonEmpty(messageArray, first);\n      while (splitMessage.length > 0) {\n        const nextConstant = splitMessage.shift();\n        const val = arguments[i++];\n        if (val && val.tagName) {\n          firstElement = val;\n        }\n        messageArray.push(val);\n        pushIfNonEmpty(messageArray, nextConstant.trim());\n        formatted += stringOrElementString(val) + nextConstant;\n      }\n      const e = new Error(formatted);\n      e.fromAssert = true;\n      e.associatedElement = firstElement;\n      e.messageArray = messageArray;\n      this.prepareError_(e);\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n      throw e;\n    }\n    return shouldBeTrueish;\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    const shouldBeTrueish = shouldBeElement && shouldBeElement.nodeType == 1;\n    this.assertType_(\n      shouldBeElement,\n      shouldBeTrueish,\n      'Element expected',\n      opt_message\n    );\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    this.assertType_(\n      shouldBeString,\n      typeof shouldBeString == 'string',\n      'String expected',\n      opt_message\n    );\n    return /** @type {string} */ (shouldBeString);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    this.assertType_(\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    );\n    return /** @type {number} */ (shouldBeNumber);\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    this.assertType_(\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    );\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    this.assertType_(\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    );\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n\n  /**\n   * Asserts and returns the enum value. If the enum doesn't contain such a\n   * value, the error is thrown.\n   *\n   * @param {!Object<T>} enumObj\n   * @param {string} s\n   * @param {string=} opt_enumName\n   * @return {T}\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertEnumValue(enumObj, s, opt_enumName) {\n    if (isEnumValue(enumObj, s)) {\n      return s;\n    }\n    this.assert(false, 'Unknown %s value: \"%s\"', opt_enumName || 'enum', s);\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n\n  /**\n   * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n   *\n   * It understands array-based \"id\"-contracted messages.\n   *\n   * Otherwise creates a sprintf syntax string containing the optional message or the\n   * default. An interpolation token is added at the end to include the `subject`.\n   * @param {*} subject\n   * @param {*} assertion\n   * @param {string} defaultMessage\n   * @param {!Array|string=} opt_message\n   * @private\n   */\n  assertType_(subject, assertion, defaultMessage, opt_message) {\n    if (isArray(opt_message)) {\n      this.assert(assertion, opt_message.concat(subject));\n    } else {\n      this.assert(assertion, `${opt_message || defaultMessage}: %s`, subject);\n    }\n  }\n}\n\n/**\n * @param {string|!Element} val\n * @return {string}\n */\nconst stringOrElementString = val =>\n  /** @type {string} */ (elementStringOrPassthru(val));\n\n/**\n * @param {*} val\n * @return {*}\n */\nfunction elementStringOrPassthru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (val && val.nodeType == 1) {\n    return val.tagName.toLowerCase() + (val.id ? '#' + val.id : '');\n  }\n  return val;\n}\n\n/**\n * @param {!Array} array\n * @param {*} val\n */\nfunction pushIfNonEmpty(array, val) {\n  if (val != '') {\n    array.push(val);\n  }\n}\n\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\nexport function duplicateErrorIfNecessary(error) {\n  const messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n  if (messageProperty && messageProperty.writable) {\n    return error;\n  }\n\n  const {message, stack} = error;\n  const e = new Error(message);\n  // Copy all the extraneous things we attach.\n  for (const prop in error) {\n    e[prop] = error[prop];\n  }\n  // Ensure these are copied.\n  e.stack = stack;\n  return e;\n}\n\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\nexport function createErrorVargs(var_args) {\n  let error = null;\n  let message = '';\n  for (let i = 0; i < arguments.length; i++) {\n    const arg = arguments[i];\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n  return error;\n}\n\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\nexport function rethrowAsync(var_args) {\n  const error = createErrorVargs.apply(null, arguments);\n  setTimeout(() => {\n    // reportError is installed globally per window in the entry point.\n    self.__AMP_REPORT_ERROR(error);\n    throw error;\n  });\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?Function}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log contructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log contructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    mode => {\n      const logNum = parseInt(mode.log, 10);\n      if (mode.development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, mode => {\n    const logNum = parseInt(mode.log, 10);\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\n\n/**\n * Provides info about the current app. This return value may be cached and\n * passed around as it will always be DCE'd.\n * @param {?Window=} opt_win\n * @return {!./mode.ModeDef}\n */\nexport function getModeObject(opt_win) {\n  return {\n    localDev: getMode(opt_win).localDev,\n    development: getMode(opt_win).development,\n    filter: getMode(opt_win).filter,\n    minified: getMode(opt_win).minified,\n    lite: getMode(opt_win).lite,\n    test: getMode(opt_win).test,\n    log: getMode(opt_win).log,\n    version: getMode(opt_win).version,\n    rtvVersion: getMode(opt_win).rtvVersion,\n    singlePassType: getMode(opt_win).singlePassType,\n  };\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString_} from './url-parse-query-string';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   filter: (string|undefined),\n *   minified: boolean,\n *   lite: boolean,\n *   test: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   singlePassType: (string|undefined)\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_DEV is only replaced when `gulp dist` is called without the\n  // --fortesting flag.\n  const IS_DEV = true;\n  const IS_MINIFIED = false;\n\n  const localDevEnabled = !!AMP_CONFIG.localDev;\n  const runningTests =\n    !!AMP_CONFIG.test || (IS_DEV && !!(win.__AMP_TEST || win.__karma__));\n  const runningTestsOnIe = win.__karma__ && win.__karma__.config.amp.testOnIe;\n  const isLocalDev = IS_DEV && (localDevEnabled || runningTests);\n  const hashQuery = parseQueryString_(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location.originalHash || win.location.hash\n  );\n  const singlePassType = AMP_CONFIG.spt;\n\n  const searchQuery = parseQueryString_(win.location.search);\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win, isLocalDev);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `gulp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    // Triggers validation or enable pub level logging. Validation can be\n    // bypassed via #validate=0.\n    // Note that AMP_DEV_MODE flag is used for testing purposes.\n    // Use Array.indexOf instead of Array.includes because of #24219\n    development: !!(\n      ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].indexOf(\n        hashQuery['development']\n      ) >= 0 || win.AMP_DEV_MODE\n    ),\n    examiner: hashQuery['development'] == '2',\n    // Allows filtering validation errors by error category. For the\n    // available categories, see ErrorCategory in validator/validator.proto.\n    filter: hashQuery['filter'],\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    // amp-user-location override\n    userLocationOverride: hashQuery['amp-user-location'],\n    minified: IS_MINIFIED,\n    // Whether document is in an amp-lite viewer. It signal that the user\n    // would prefer to use less bandwidth.\n    lite: searchQuery['amp_lite'] != undefined,\n    test: runningTests,\n    testIe: runningTestsOnIe,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n    singlePassType,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n */\nfunction getRtvVersion(win, isLocalDev) {\n  // If it's local dev then we won't actually have a full version so\n  // just use the version.\n  if (isLocalDev) {\n    return internalRuntimeVersion();\n  }\n\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win, isLocalDev) {\n  return getRtvVersion(win, isLocalDev);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from './log';\nimport {map} from './utils/object.js';\n\nlet htmlContainer;\nlet svgContainer;\n\n/**\n * Creates the html helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\nexport function htmlFor(nodeOrDoc) {\n  const doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n  if (!htmlContainer || htmlContainer.ownerDocument !== doc) {\n    htmlContainer = doc.createElement('div');\n  }\n\n  return html;\n}\n\n/**\n * Creates the svg helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\nexport function svgFor(nodeOrDoc) {\n  const doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n  if (!svgContainer || svgContainer.ownerDocument !== svgContainer) {\n    svgContainer = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  }\n\n  return svg;\n}\n\n/**\n * A tagged template literal helper to generate static SVG trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const circle = svg`<circle cx=\"60\" cy=\"60\" r=\"22\"></circle>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction svg(strings) {\n  return createNode(svgContainer, strings);\n}\n\n/**\n * A tagged template literal helper to generate static DOM trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const div = html`<div><span></span></div>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction html(strings) {\n  return createNode(htmlContainer, strings);\n}\n\n/**\n * Helper used by html and svg string literal functions.\n * @param {!Element} container\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction createNode(container, strings) {\n  devAssert(strings.length === 1, 'Improper html template tag usage.');\n  container./*OK*/ innerHTML = strings[0];\n\n  const el = container.firstElementChild;\n  devAssert(el, 'No elements in template');\n  devAssert(!el.nextElementSibling, 'Too many root elements in template');\n\n  // Clear to free memory.\n  container.removeChild(el);\n\n  return el;\n}\n\n/**\n * Queries an element for all elements with a \"ref\" attribute, removing\n * the attribute afterwards.\n * Returns a named map of all ref elements.\n *\n * @param {!Element} root\n * @return {!Object<string, !Element>}\n */\nexport function htmlRefs(root) {\n  const elements = root.querySelectorAll('[ref]');\n  const refs = map();\n\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n    const ref = devAssert(element.getAttribute('ref'), 'Empty ref attr');\n    element.removeAttribute('ref');\n    devAssert(refs[ref] === undefined, 'Duplicate ref');\n    refs[ref] = element;\n  }\n\n  return refs;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.startsWith.\n * @param {string} string\n * @param {string} prefix\n * @return {boolean}\n */\nexport function startsWith(string, prefix) {\n  if (prefix.length > string.length) {\n    return false;\n  }\n  return string.lastIndexOf(prefix, 0) == 0;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {*} TODO(#23582): Specify return type\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {dev, devAssert} from './log';\nimport {map} from './utils/object.js';\nimport {startsWith} from './string';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\n/**\n * @export\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @export\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (startsWith(camelCase, '--')) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      styles[k].toString(),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (propertyName) {\n    element.style[propertyName] = /** @type {string} */ (opt_units\n      ? value + opt_units\n      : value);\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  if (style === 'display') {\n    dev().error(\n      'STYLE',\n      '`display` style detected. You must use toggle instead.'\n    );\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    dev().error(\n      'STYLE',\n      '`display` style detected in styles. You must use toggle instead.'\n    );\n  }\n  return styles;\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x}, ${opt_y})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n  return `rotate(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!Object<string, string>}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return /** @type {!Object<string, string>} */ (style) || map();\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst toString_ = Object.prototype.toString;\n\n/**\n * Returns the ECMA [[Class]] of a value\n * @param {*} value\n * @return {string}\n */\nfunction toString(value) {\n  return toString_.call(value);\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport function isArray(value) {\n  return Array.isArray(value);\n}\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString(value) === '[object Object]';\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Checks whether `s` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} s\n * @return {boolean}\n * @template T\n */\nexport function isEnumValue(enumObj, s) {\n  for (const k in enumObj) {\n    if (enumObj[k] === s) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {!Window|null} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {tryDecodeUriComponent_} from './url-try-decode-uri-component';\n\nconst regex = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * DO NOT import the function from this file. Instead, import parseQueryString\n * from `src/url.js`.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString_(queryString) {\n  const params = /** @type {!JsonObject} */ (Object.create(null));\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = regex.exec(queryString))) {\n    const name = tryDecodeUriComponent_(match[1], match[1]);\n    const value = match[2] ? tryDecodeUriComponent_(match[2], match[2]) : '';\n    params[name] = value;\n  }\n  return params;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * DO NOT import the function from this file. Instead, import\n * tryDecodeUriComponent from `src/url.js`.\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent_(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LruCache} from './utils/lru-cache';\nimport {dict, hasOwn} from './utils/object';\nimport {endsWith, startsWith} from './string';\nimport {getMode} from './mode';\nimport {isArray} from './types';\nimport {parseQueryString_} from './url-parse-query-string';\nimport {tryDecodeUriComponent_} from './url-try-decode-uri-component';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\n/**\n * @type {!JsonObject}\n */\nconst SERVING_TYPE_PREFIX = dict({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n  // Actions viewer\n  'action': true,\n});\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet a;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet cache;\n\n/** @private @const Matches amp_js_* parameters in query string. */\nconst AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n\n/** @private @const Matches amp_gsa parameters in query string. */\nconst AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n\n/** @private @const Matches amp_r parameters in query string. */\nconst AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n\n/** @private @const Matches amp_kit parameters in query string. */\nconst AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n\n/** @private @const Matches usqp parameters from goog experiment in query string. */\nconst GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\n\nconst INVALID_PROTOCOLS = [\n  /*eslint no-script-url: 0*/ 'javascript:',\n  /*eslint no-script-url: 0*/ 'data:',\n  /*eslint no-script-url: 0*/ 'vbscript:',\n];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a = /** @type {!HTMLAnchorElement} */ (self.document.createElement('a'));\n    cache = self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, opt_nocache ? null : cache);\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(a, url, opt_cache) {\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = getMode().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  const field = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    const v = params[k];\n    if (v == null) {\n      continue;\n    } else if (isArray(v)) {\n      for (let i = 0; i < v.length; i++) {\n        const sv = /** @type {string} */ (v[i]);\n        s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n      }\n    } else {\n      const sv = /** @type {string} */ (v);\n      s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  // (erwinm, #4560): type cast necessary until #4560 is fixed.\n  const theUrlString = /** @type {string} */ (urlString);\n  userAssert(\n    isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    theUrlString\n  );\n  return theUrlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * This function is implemented in a separate file to avoid a circular\n * dependency.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  return parseQueryString_(queryString);\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.cdnProxyRegex.test(url.origin);\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.localhostRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const parsed = parseUrlDeprecated(url);\n  const search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const search = urlSearch\n    .replace(AMP_JS_PARAMS_REGEX, '')\n    .replace(AMP_GSA_PARAMS_REGEX, '')\n    .replace(AMP_R_PARAMS_REGEX, '')\n    .replace(AMP_KIT_PARAMS_REGEX, '')\n    .replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '')\n    .replace(/^[?&]/, ''); // Removes first ? or &.\n  return search ? '?' + search : '';\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}=[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX[prefix],\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  if (typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private Visible for testing.\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (startsWith(relativeUrlString.toLowerCase(), relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (startsWith(relativeUrlString, '//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (startsWith(relativeUrlString, '/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} opt_fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, opt_fallback) {\n  return tryDecodeUriComponent_(component, opt_fallback);\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// TODO(rsimha, #15334): Enable this rule.\n/* eslint jsdoc/check-types: 0 */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nexport function once(fn) {\n  let evaluated = false;\n  let retValue = null;\n  let callback = fn;\n  return (...args) => {\n    if (!evaluated) {\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n    return retValue;\n  };\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dev} from '../log';\n\n/** @const {string} */\nconst TAG = 'lru-cache';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = Object.create(null);\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    dev().warn(TAG, 'Trimming LRU cache');\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isObject} from '../types';\n\n/* @const */\nconst hasOwn_ = Object.prototype.hasOwnProperty;\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {t, s, d} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    Object.keys(s).forEach(key => {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          return;\n        }\n      }\n      t[key] = newValue;\n    });\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /**\n   * Creates an instance of Deferred.\n   */\n  constructor() {\n    let resolve, reject;\n\n    /**\n     * @const {!Promise<T>}\n     */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n\n    /**\n     * @const {function(T=)}\n     */\n    this.resolve = resolve;\n\n    /**\n     * @const {function(*=)}\n     */\n    this.reject = reject;\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise(resolve => {\n    resolve(fn());\n  });\n}\n\n/**\n * Returns a promise which resolves if a threshold amount of the given promises\n * resolve, and rejects otherwise.\n * @param {!Array<!Promise>} promises The array of promises to test.\n * @param {number} count The number of promises that must resolve for the\n *     returned promise to resolve.\n * @return {!Promise} A promise that resolves if any of the given promises\n *     resolve, and which rejects otherwise.\n */\nexport function some(promises, count = 1) {\n  return new Promise((resolve, reject) => {\n    count = Math.max(count, 0);\n    const extra = promises.length - count;\n    if (extra < 0) {\n      reject(new Error('not enough promises to resolve'));\n    }\n    if (promises.length == 0) {\n      resolve([]);\n    }\n    const values = [];\n    const reasons = [];\n\n    const onFulfilled = value => {\n      if (values.length < count) {\n        values.push(value);\n      }\n      if (values.length == count) {\n        resolve(values);\n      }\n    };\n    const onRejected = reason => {\n      if (reasons.length <= extra) {\n        reasons.push(reason);\n      }\n      if (reasons.length > extra) {\n        reject(reasons);\n      }\n    };\n    for (let i = 0; i < promises.length; i++) {\n      Promise.resolve(promises[i]).then(onFulfilled, onRejected);\n    }\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!Promise>=} opt_promises\n   */\n  constructor(opt_promises) {\n    let resolve_, reject_;\n    /** @private @const {!Promise} */\n    this.promise_ = new Promise((resolve, reject) => {\n      resolve_ = resolve;\n      reject_ = reject;\n    });\n\n    /** @private */\n    this.resolve_ = resolve_;\n\n    /** @private */\n    this.reject_ = reject_;\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (let i = 0; i < opt_promises.length; i++) {\n        this.add(opt_promises[i]);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!Promise} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    Promise.resolve(promise).then(\n      result => {\n        if (this.count_ === countAtAdd) {\n          this.resolve_(result);\n        }\n      },\n      error => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.reject_(error);\n        }\n      }\n    );\n    return this.promise_;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.promise_.then(opt_resolve, opt_reject);\n  }\n}\n","/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n"]}