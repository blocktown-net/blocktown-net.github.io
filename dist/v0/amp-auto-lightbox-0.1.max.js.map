{"version":3,"sources":["regexp/wrapper","node_modules/browser-pack/_prelude.js","amp-auto-lightbox.js","extensions/amp-auto-lightbox/0.1/amp-auto-lightbox.js","src/amp-events.js","src/auto-lightbox.js","src/chunk.js","src/common-signals.js","src/config.js","src/css.js","src/dom.js","src/element-service.js","src/event-helper-listen.js","src/event-helper.js","src/experiments.js","src/format.js","src/internal-version.js","src/json.js","src/log.js","src/mode-object.js","src/mode.js","src/render-delaying-services.js","src/service.js","src/services.js","src/string.js","src/style-installer.js","src/style.js","src/types.js","src/url-parse-query-string.js","src/url-try-decode-uri-component.js","src/url.js","src/utils/function.js","src/utils/lru-cache.js","src/utils/object.js","src/utils/priority-queue.js","src/utils/promise.js","third_party/css-escape/css-escape.js"],"names":[],"mappings":"AAAA;ACAA;ACCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACcA;ADZA;ACaA;ADXA;ACYA;ADVA;ACWA;ADTA;ACUA;ADRA;ACYA;ADVA;ACWA;ADTA;ACUA;ADRA;AC1BA;AD4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AD4BA;AACA;AACA;AACA;AACA;AACA;ACbA;AAEO;ADcP;ACbO;AAEP;ADcA;AACA;ACdO;AAEP;ADeA;AACA;AACA;AACA;AACA;AACA;ACfO;AACL;AACA;AACA;AACA;AACA;AALmC;AAQrC;ADgBA;AACA;AACA;AACA;AACA;AACA;AChBO;AAEP;ADiBA;AACA;ACjBO;AAEP;ADkBA;AACA;AClBO;AAEP;ADmBA;AACA;AACA;AACA;AACA;ACnBA;AAEE;AAGA;AAGA;AACA;AACA;AAGA;AAGF;ADYA;AACA;AACA;ACXA;AAEE;AACA;AACA;AAMA;AAGA;AAGF;AACA;ADGA;ACDA;AAEA;ADEA;AACA;AACA;AACA;AACA;AACA;ACFA;AAA0B;AAAA;AAE1B;ADKA;AACA;AACA;AACA;AACA;AACA;AACA;ACTE;ADWF;AACA;AACA;AACA;ACTI;AAID;AAED;ADOF;AACA;AACA;AACA;AACA;AACA;ACPI;AACA;ADSJ;ACLI;AACE;AACD;ADOL;ACNI;ADQJ;ACPI;AACD;AAED;ADQF;AACA;AACA;AACA;AACA;AACA;ACTsC;AAAA;AAAA;ADatC;ACbsC;AAAA;AAAA;ADiBtC;ACVI;ADYJ;ACnBsC;AAAA;AAAA;ADuBtC;ACbI;AAQD;ADQH;AACA;AACA;ACPA;ADSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXO;AAQL;AACA;AACA;AAEA;AAEA;AAGA;AAEA;AACD;AAED;ADAA;AACA;AACA;AACA;AACA;AACA;ACAA;AACE;AACE;AACD;AACF;AAED;ADCA;AACA;AACA;AACA;AACA;ACDA;AACE;AACD;AAED;ADEA;AACA;AACA;AACA;AACA;ACFA;AACE;AAAwD;AAAA;AAGzD;AAED;ADGA;AACA;AACA;AACA;AACA;AACA;AACA;ACPE;ADSF;AACA;AACA;AACA;AACA;ACPI;AACA;AACA;AACA;AACD;ADSH;AACA;AACA;ACRA;ADUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBE;ADkBF;AACA;AACA;AACA;AChBI;ADkBJ;ACjBI;AACE;AACD;AACF;AAED;ADkBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBI;AACD;AAED;ADmBF;AACA;AACA;AACA;AACA;AACA;ACnBI;AACO;AAAA;AAAA;AACkB;AAAA;AAC1B;AAED;ADuBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBI;AACM;AAAA;AAEP;ADyBH;AACA;AACA;ACxBA;AD0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCE;ADkCF;AACA;AACA;AACA;AACA;AChCI;AAAoD;AAAA;AAGrD;ADkCH;AACA;AACA;ACjCA;ADmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACE;AACA;AAEA;ADsCF;ACpCE;AAAuB;AAAA;ADwCzB;ACtCE;AAGD;AAED;ADqCA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCO;AACL;AACE;AACD;ADuCH;ACtCE;AAID;AAED;ADoCA;AACA;ACpCA;AAEA;ADqCA;AACA;AACA;AACA;ACpCA;AACE;AACD;AAED;ADqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCO;AACL;AACE;AACD;AACC;ADuCJ;AClCI;AAEA;AACD;AACF;AAED;ADkCA;AACA;AACA;AACA;AACA;AACA;AClCO;AACL;AAA+B;AAE3B;AACE;AACD;ADoCP;ACnCM;AACA;AACD;AAP4B;AAShC;AAED;ADoCA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCO;AACL;AACE;AACA;AACD;ADsCH;ACrCE;AACA;AACD;ADuCD;ACrCA;AAAwC;AACtC;AACE;AAAyE;AACvE;AACD;AACD;AACD;AACF;ADyCD;AACA;AACA;AACA;AACA;AACA;AACA;AE1dA;AF4dA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AE1dA;AF4dA;AACA;AACA;AE1dO;AACL;AACA;AACA;AACA;AAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZuB;AF0ezB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGvfA;AHyfA;AGxfA;AH0fA;AGzfA;AH2fA;AG1fA;AH4fA;AG/gBA;AHihBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG1gBA;AACO;AACL;AACA;AACA;AAHgC;AAMlC;AH2gBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG5gBO;AAA8C;AH+gBrD;AG5gBE;AACE;AACD;AH8gBH;AG7gBE;AAGI;AAID;AAGJ;AAED;AHugBA;AACA;AACA;AACA;AACA;AGvgBO;AACL;AACE;AACD;AHygBH;AGxgBE;AACE;AACD;AH0gBH;AGzgBE;AH2gBF;AG1gBE;AH4gBF;AGvgBE;AACE;AACD;AHygBH;AGxgBE;AH0gBF;AGzgBE;AACE;AH2gBJ;AG1gBI;AH4gBJ;AGvgBI;AACE;AACD;AACF;AHygBH;AGxgBE;AACD;AH0gBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIhmBA;AJkmBA;AIjmBA;AJmmBA;AIlmBA;AJomBA;AInmBA;AJqmBA;AIpmBA;AJsmBA;AIrmBA;AJumBA;AItmBA;AJwmBA;AACA;AACA;AACA;AACA;AI1mBA;AJ4mBA;AACA;AI1mBA;AAEA;AJ2mBA;AACA;AACA;AI1mBA;AAEA;AJ2mBA;AACA;AACA;AI1mBA;AAEA;AJ2mBA;AACA;AACA;AACA;AACA;AI1mBA;AACE;AACA;AACD;AAED;AJ2mBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI3mBO;AACL;AACE;AACA;AACD;AJ6mBH;AI5mBE;AACA;AJ8mBF;AI7mBE;AACE;AACE;AACD;AACF;AACF;AAED;AJ8mBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI9mBO;AACL;AACE;AACA;AACD;AJgnBH;AI/mBE;AACA;AACD;AAED;AJgnBA;AACA;AACA;AACA;AACA;AIhnBO;AACL;AACD;AAED;AJinBA;AACA;AACA;AACA;AACA;AACA;AACA;AIjnBO;AACL;AACD;AAED;AJknBA;AACA;AACA;AACA;AIlnBO;AACL;AACD;AAED;AJmnBA;AACA;AACA;AACA;AACA;AACA;AACA;AInnBO;AACL;AACA;AJqnBF;AIpnBE;AACE;AACE;AAAsB;AAAmB;AACvC;AACD;AACF;AACC;AACD;AACF;AJwnBH;AIvnBE;AACE;AACD;AACF;AAED;AJwnBA;AACA;AACA;AACA;AACA;AIxnBO;AACL;AACA;AACA;AAH2B;AAM7B;AJynBA;AACA;AIznBA;AACE;AACA;AAFgB;AAKlB;AJ0nBA;AACA;AACA;AACA;AACA;AACA;AACA;AI3nBE;AJ6nBF;AACA;AI3nBE;AACE;AACA;AAEA;AJ4nBJ;AI3nBI;AACD;AAED;AJ4nBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI9nBI;AACE;AACD;AJgoBL;AI/nBI;AJioBJ;AIhoBI;AACE;AACD;AACC;AACA;AACD;AACF;AAED;AJioBF;AACA;AACA;AACA;AACA;AACA;AIjoBI;AACD;AAED;AJkoBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIhoBE;AJkoBF;AACA;AACA;AACA;AACA;AACA;AACA;AIloBI;AACA;AACD;AAED;AJmoBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AInoBI;AACA;AACD;AJqoBH;AACA;AACA;AIpoBA;AJsoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI1oBE;AJ4oBF;AACA;AACA;AACA;AI1oBE;AAA6B;AJ6oB/B;AI5oBI;AAEA;AJ6oBJ;AI5oBI;AAJ2B;AAK5B;AAED;AJ8oBF;AACA;AACA;AACA;AACA;AIhpBI;AACA;AACD;AAED;AJipBF;AACA;AACA;AIjpBI;AACA;AACA;AACD;AAED;AJkpBF;AACA;AACA;AIlpBI;AACA;AACA;AACA;AACD;AAED;AJmpBF;AACA;AACA;AACA;AACA;AACA;AInpBI;AACD;AJqpBH;AACA;AACA;AIppBA;AJspBA;AACA;AACA;AACA;AACA;AACA;AACA;AIxpBE;AJ0pBF;AACA;AIxpBE;AAAoB;AJ2pBtB;AI1pBI;AACA;AACA;AJ4pBJ;AI3pBI;AACA;AJ6pBJ;AI5pBI;AACA;AJ8pBJ;AI7pBI;AACA;AJ+pBJ;AI9pBI;AACA;AJgqBJ;AI/pBI;AAIA;AJ8pBJ;AACA;AACA;AACA;AACA;AACA;AACA;AI7pBI;AACA;AJ+pBJ;AI9pBI;AAIA;AACE;AACE;AAAc;AAAmB;AAClC;AACF;AAED;AJ8pBJ;AI7pBI;AJ+pBJ;AI9pBI;AACE;AACA;AACA;AACD;AJgqBL;AI9pBI;AACE;AACE;AACD;AACF;AACF;AAED;AJ+pBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIjqBI;AACA;AACD;AAED;AJkqBF;AACA;AACA;AACA;AACA;AACA;AIlqBI;AACA;AACD;AAED;AJmqBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AInqBI;AACA;AACD;AAED;AJoqBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIpqBI;AJsqBJ;AIpqBI;AACE;AACA;AACD;AJsqBL;AACA;AIrqBI;AACE;AACD;AJuqBL;AItqBI;AACD;AAED;AJuqBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIxqByB;AJ0qBzB;AIzqBI;AAAyB;AAAkB;AJ6qB/C;AI5qBI;AACE;AACA;AACA;AACD;AJ8qBL;AI7qBI;AJ+qBJ;AI9qBI;AACE;AACA;AACD;AACC;AACA;AACA;AACA;AACA;AAUI;AACA;AACA;AJuqBV;AI/pBU;AACD;AACJ;AJiqBL;AIhqBI;AACD;AAED;AJiqBF;AACA;AACA;AACA;AACA;AACA;AACA;AIlqB6B;AJoqB7B;AInqBI;AACA;AACA;AACA;AAKE;AACA;AACA;AACD;AJiqBL;AIhqBI;AACE;AACD;AACF;AAED;AJiqBF;AACA;AACA;AACA;AACA;AACA;AIjqBI;AACE;AACD;AJmqBL;AIlqBI;AJoqBJ;AInqBI;AACE;AACD;AJqqBL;AIpqBI;AACE;AACA;AAAkB;AAAmB;AACrC;AACD;AAED;AJuqBJ;AACA;AIvqBI;AACE;AAGE;AACA;AACA;AACA;AACA;AACA;AAAG;AARC;AASC;AATD;AAYN;AACD;AJwqBL;AIvqBI;AACD;AAED;AJwqBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIxqBI;AACA;AAAU;AAAO;AAClB;AJ4qBH;AACA;AACA;AI3qBA;AJ6qBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI7qBO;AACL;AACA;AJ+qBF;AACA;AACA;AI9qBE;AACE;AACE;AJgrBN;AI/qBM;AACE;AACA;AACD;AACC;AAMA;AAA8B;AAAD;AAC9B;AACF;AACC;AACA;AACD;AACF;AJ8qBH;AI7qBE;AAA8B;AAAD;AAC9B;AJirBD;AACA;AACA;AACA;AACA;AACA;AACA;AK5tCA;AL8tCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK5tCA;AL8tCA;AACA;AACA;AK5tCO;AACL;AL8tCF;AACA;AK5tCE;AL8tCF;AK5tCE;AL8tCF;AACA;AK5tCE;AL8tCF;AK5tCE;AL8tCF;AACA;AACA;AK5tCE;AL8tCF;AK5tCE;AL8tCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK5tCE;AL8tCF;AK5tCE;AL8tCF;AACA;AACA;AACA;AK5tCE;AL8tCF;AK5tCE;AL8tCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK5tCE;AL8tCF;AK5tCE;AL8tCF;AACA;AK5tCE;AArD2B;ALoxC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AM/yCA;ANizCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AM/yCA;ANizCA;AACA;AACA;AACA;AACA;AACA;AM/yCA;AAEA;AAKA;AAKA;ANwyCA;AMvyCO;AACL;AACA;AACA;AACA;ANyyCF;AMxyCE;AN0yCF;AACA;AMxyCE;AAEA;AACA;AAEA;ANwyCF;AMvyCE;ANyyCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMvyCE;AAvBkB;ANi0CpB;AMpyCO;AACL;AADoB;ANwyCtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOr2CA;APu2CA;AOt2CA;APw2CA;AOz3CA;AP23CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOt3CA;APw3CA;AACA;AACA;AACA;AACA;AOt3CO;AACL;AACD;AAED;APu3CA;AACA;AACA;AACA;AOv3CA;AAEA;APw3CA;AACA;AACA;AACA;AOv3CO;AACL;AACD;AAED;APw3CA;AACA;AACA;AACA;AACA;AACA;AOx3CO;AACL;AACE;AACD;AP03CH;AOx3CE;AACD;AAED;APy3CA;AACA;AACA;AACA;AACA;AACA;AOz3CA;AACE;AACE;AACA;AACA;AACA;AAEA;AP03CJ;AOz3CI;AAAmB;AAAO;AAC3B;AACC;AACD;AACF;AAED;AP43CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO53CO;AACL;AACD;AAED;AP63CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO73CO;AACL;AACD;AAED;AP83CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO93CO;AACL;APg4CF;AO93CE;AACA;AACD;APg4CD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQliDA;ARoiDA;AQniDA;ARqiDA;AQhiDA;ARkiDA;AQjiDA;ARmiDA;AQliDA;ARoiDA;AQniDA;ARqiDA;AQ9jDA;ARgkDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQljDA;AACE;AACA;AACA;AACA;AACA;AACA;AANwB;AAQ1B;AAEA;ARmjDA;AQljDO;AAEP;ARmjDA;AACA;AQnjDO;AAEP;ARojDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQrjDO;AACL;AACE;AACA;AACD;AACD;ARujDF;AACA;AQvjDE;ARyjDF;AQxjDE;AACE;AACA;AACE;AACE;AACA;AACD;AACF;AACD;AAA0B;AAAD;AAC1B;AACC;AACA;AACE;AACE;AACA;AACD;AACF;AAAE;AAAmB;AACvB;AACF;AAED;AR6jDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQ7jDO;AACL;AACE;AACD;AACF;AAED;AR8jDA;AACA;AACA;AACA;AACA;AACA;AQ9jDO;AACL;AAAkC;AAAA;AACnC;AAED;ARikDA;AACA;AACA;AACA;AACA;AACA;AQjkDO;AACL;AAA0B;AAAA;AAC3B;AAED;ARokDA;AACA;AACA;AACA;AACA;AQpkDO;AACL;AACE;AACD;AACF;AAED;ARqkDA;AACA;AACA;AACA;AACA;AQrkDO;AACL;AACE;AACD;AACF;AAED;ARskDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQtkDO;AACL;ARwkDF;AQvkDE;AACE;AACD;ARykDH;AQxkDE;AACD;AAED;ARykDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQzkDO;AACL;AACA;AACD;AAED;AR0kDA;AACA;AACA;AACA;AACA;AACA;AACA;AQ1kDO;AACL;AACE;AACD;AR4kDH;AQ3kDE;AACD;AAED;AR4kDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQ5kDO;AACL;AACA;AACD;AAED;AR6kDA;AACA;AACA;AACA;AACA;AACA;AACA;AQ7kDO;AACL;AR+kDF;AQ9kDE;AACE;AACD;ARglDH;AACA;AQ9kDE;ARglDF;AQ/kDE;AACE;ARilDJ;AQhlDI;AACE;AACD;AACC;AACD;AACF;ARklDH;AQjlDE;AACD;AAED;ARklDA;AACA;AACA;AACA;AACA;AACA;AQllDO;AACL;AACE;AACA;AACD;ARolDH;AQnlDE;ARqlDF;AQnlDE;ARqlDF;AQplDE;AACD;AAED;ARqlDA;AACA;AACA;AACA;AACA;AACA;AQrlDO;AACL;AACA;AACE;AACD;AAED;ARslDF;AACA;AQtlDE;AACE;AACD;ARwlDH;AQvlDE;AACoB;AAAwB;AAG7C;AAED;ARulDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQvlDO;AACL;AACE;AACE;AACD;AACF;ARylDH;AQxlDE;AACD;AAED;ARylDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQzlDO;AACL;AACE;AACE;AACD;AACF;AR2lDH;AQ1lDE;AACD;AAED;AR2lDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQ3lDO;AACL;AACE;AACD;AR6lDH;AQ3lDE;AACE;AACD;AACF;AAED;AR4lDA;AACA;AACA;AACA;AACA;AACA;AACA;AQ5lDO;AACL;AR8lDF;AQ7lDE;AAKE;AACE;AACD;AACF;AR2lDH;AQ1lDE;AACD;AAED;AR2lDA;AACA;AACA;AACA;AACA;AACA;AACA;AQ3lDO;AACL;AACA;AACA;AACE;AACD;AACF;AAED;AR4lDA;AACA;AACA;AACA;AACA;AACA;AACA;AQ5lDO;AACL;AAKE;AACE;AACD;AACF;AR0lDH;AQzlDE;AACD;AAED;AR0lDA;AACA;AACA;AACA;AACA;AACA;AACA;AQ1lDO;AACL;AR4lDF;AQ3lDE;AAKE;AACE;AACD;AACF;ARylDH;AQxlDE;AACD;AAED;ARylDA;AACA;AACA;AACA;AACA;AACA;AACA;AQzlDO;AACL;AAKE;AACE;AACD;AACF;ARulDH;AQtlDE;AACD;AAED;ARulDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQvlDO;AACL;ARylDF;AQxlDE;AACE;AACE;AACD;AACF;AR0lDH;AQzlDE;AACD;AAED;AR0lDA;AACA;AACA;AACA;AACA;AACA;AACA;AQ1lDO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AR8lDA;AACA;AACA;AACA;AACA;AACA;AACA;AQ9lDO;AACL;AACA;AACE;AACD;AACF;AAED;AR+lDA;AACA;AACA;AACA;AACA;AACA;AACA;AQ/lDO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;ARmmDA;AACA;AACA;AACA;AACA;AACA;AACA;AQnmDO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;ARumDA;AACA;AACA;AACA;AACA;AACA;AACA;AQvmDO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AR2mDA;AACA;AACA;AACA;AACA;AACA;AACA;AQ3mDO;AACL;AR6mDF;AQvmDE;AACE;AACD;ARymDH;AQxmDE;AACD;AAED;ARymDA;AACA;AACA;AACA;AACA;AACA;AACA;AQzmDO;AACL;AACA;AAAe;AAAO;AACvB;AAED;AR4mDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQ5mDA;AACE;AACA;AACA;AACA;AAAsB;AAAO;AAC7B;AACA;AACD;AAED;AR+mDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQ/mDO;AACL;AACE;AAAY;AAAO;AACpB;ARmnDH;AACA;AQjnDE;AACA;AACD;AAED;ARknDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQlnDO;AACL;AACE;AAAY;AAAO;AAGpB;ARonDH;AACA;AQlnDE;AACD;AAED;ARmnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQnnDO;AAKL;AAA6D;AAAA;ARmnD/D;AQpnDE;AAGA;AACA;ARonDF;AQnnDE;AACE;ARqnDJ;AQpnDI;AACE;ARsnDN;AQrnDM;AACD;AACF;ARunDH;AQtnDE;AACD;AAED;ARunDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQvnDO;AACL;ARynDF;AQxnDE;AACE;AACE;AACD;AACF;AR0nDH;AQtnDE;AACD;AAED;ARunDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQvnDO;AACL;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAED;ARwnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQxnDO;AAAqC;AR2nD5C;AQznDE;AACE;AACD;AACF;AAED;AR0nDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQ1nDO;AACL;AACA;AACA;AACA;AR4nDF;AQ3nDE;AACE;AACD;AACC;AACD;AR6nDH;AACA;AQ3nDE;AACE;AACD;AR6nDH;AQ5nDE;AACD;AAED;AR6nDA;AACA;AACA;AACA;AACA;AACA;AQ7nDO;AACL;AAKD;AAED;AR0nDA;AACA;AACA;AACA;AACA;AACA;AQ1nDO;AACL;AAID;AAED;ARwnDA;AACA;AACA;AACA;AACA;AACA;AQxnDO;AACL;AAIA;AACD;AAED;ARsnDA;AACA;AACA;AACA;AACA;AACA;AQtnDO;AACL;AACE;AACD;ARwnDH;AQvnDE;AACD;AAED;ARwnDA;AACA;AACA;AACA;AACA;AQxnDA;AACE;AACD;AAED;ARynDA;AACA;AACA;AACA;AACA;AACA;AQznDO;AACL;AACE;AAAQ;AAAO;AAChB;AAEA;AACF;AAED;AR2nDA;AACA;AACA;AACA;AACA;AACA;AQ3nDO;AACL;AACD;AAED;AR4nDA;AACA;AACA;AACA;AACA;AACA;AQ5nDO;AACL;AAEA;AR6nDF;AQ5nDE;AAGE;AAEH;AAED;AR0nDA;AACA;AACA;AACA;AACA;AACA;AACA;AQ1nDO;AACL;AR4nDF;AQ3nDE;AACE;AACA;AACD;AAED;AR4nDF;AACA;AQ5nDE;AACE;AACA;AACA;AACD;AR8nDH;AQ5nDE;AACD;AAED;AR6nDA;AACA;AACA;AACA;AACA;AACA;AQ7nDO;AACL;AR+nDF;AQxnDE;AACE;AACD;AACF;AAED;ARynDA;AACA;AACA;AACA;AACA;AACA;AQznDO;AACL;AR2nDF;AQpnDE;AACE;AACA;AACD;ARsnDH;AQjoDwC;ARmoDxC;AQtnDE;AACE;AACD;ARwnDH;AQvnDE;ARynDF;AQlnDE;AACE;AACD;AACF;AAED;ARmnDA;AACA;AACA;AACA;AACA;AACA;AACA;AQnnDO;AAAsC;ARsnD7C;AQpnDE;AACE;AACD;ARsnDH;AQ1nD6C;AR4nD7C;AQtnDE;AACE;AACD;ARwnDH;AQvnDE;AAKA;AACD;AAED;ARonDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQpnDO;AACL;AACD;AAED;ARqnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQrnDO;AACL;AACE;AACD;ARunDH;AQrnDE;AACA;ARunDF;AQnnDE;AACE;AACD;ARqnDH;AACA;AQnnDE;AACD;AAED;ARonDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQpnDO;AACL;AACA;ARsnDF;AQpnDE;AACE;AACE;AACD;AACC;AACD;AACF;ARsnDH;AQpnDE;AACD;AAED;ARqnDA;AACA;AACA;AACA;AACA;AQrnDO;AAAwC;AAE7C;AAAwB;AAAO;AAC/B;AAAsC;AAAO;AAC7C;AACD;AR2nDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASnhFA;ATqhFA;ASphFA;ATshFA;AS5gFA;AT8gFA;AS7gFA;AT+gFA;AACA;AACA;AACA;AACA;AS/iFA;ATijFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASjiFA;ATmiFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASjiFO;AACL;AACS;AAAA;AAEV;AAED;ATkiFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASliFO;AACL;AToiFF;ASniFE;AACE;AAAO;AAAkC;AAAzC;AACD;ATwiFH;ASviFE;AACD;AAED;ATwiFA;AACA;AACA;AACA;AACA;AACA;ASxiFA;AACE;AACA;AACE;AACD;AT0iFH;ASziFE;AACD;AAED;AT0iFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AS1iFO;AACL;AAKc;AAAA;AACf;AAED;ATwiFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASxiFO;AAML;ATqiFF;ASpiFE;AACE;AAAO;AAAkC;AAAzC;AACD;ATyiFH;ASxiFE;AACA;AAEQ;AAAA;AAIJ;AACA;AACA;AACE;AACD;AACC;AACD;ATuiFP;AStiFM;AACD;AACJ;AAED;ATuiFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASviFO;AAKL;ATqiFF;ASpiFE;AACE;AAAO;AAAkC;AAAzC;AACD;ATyiFH;ASxiFE;AACA;AT0iFF;ASxiFE;AACE;AACD;AACC;AACA;AACD;AACF;AAED;ATyiFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASziFA;AACE;AAAO;AAAwB;AAA/B;AAUD;AAED;AToiFA;AACA;AACA;AACA;AACA;AACA;ASpiFO;AACL;AACA;AACE;AACD;ATsiFH;ASriFE;AAEA;ATsiFF;ASriFE;ATuiFF;ASpiFE;AACE;AACA;AAGA;AACD;AToiFH;ASniFE;AACD;AAED;AToiFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASpiFO;AACL;AACE;AACD;AACF;AAED;ATqiFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASriFA;AACE;AACD;AAED;ATsiFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AStiFA;AACE;ATwiFF;AACA;AACA;AACA;AACA;AACA;ASriFE;AACA;AACA;AACE;AACD;ATuiFH;ASriFE;AACA;AAAO;AAAkC;AAAzC;AAID;AAED;ATsiFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AStiFA;AACE;AAEQ;AAAA;AAEJ;AACA;AACA;AACE;AACD;AACC;AACD;ATuiFP;AStiFM;AACD;AACJ;ATwiFD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AU91FA;AVg2FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AU91FA;AVg2FA;AACA;AACA;AACA;AU91FA;AAEA;AV+1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AU91FO;AAML;AACA;AACA;AV21FF;AACA;AACA;AU11FE;AV41FF;AU11FE;AACE;AACE;AACD;AACC;AACA;AV41FN;AU31FM;AACD;AACF;AV61FH;AU51FE;AACA;AV81FF;AU71FE;AACE;AACD;AV+1FH;AU91FE;AAKA;AACE;AACE;AAKD;AVw1FL;AACA;AUv1FI;AACA;AACA;AACD;AACF;AAED;AVw1FA;AACA;AACA;AACA;AACA;AACA;AACA;AUx1FO;AACL;AACA;AACE;AACD;AV01FH;AUx1FE;AV01FF;AUz1FE;AACE;AACA;AACE;AACE;AACD;AV21FP;AU91FoB;AAKhB;AACA;AACD;AAEA;AV21FH;AU11FE;AACD;AAED;AV21FA;AACA;AACA;AACA;AU31FO;AACL;AACD;AV61FD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWh9FA;AXk9FA;AWj9FA;AXm9FA;AWl9FA;AXo9FA;AWt+FA;AXw+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWl+FA;AACA;AAEA;AXm+FA;AWl+FO;AAEP;AXm+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWp+FO;AACL;AAAkB;AAAiC;AAAC;AAAD;AACnD;AAEA;AXy+FF;AWx+FE;AACE;AACD;AACC;AACA;AACA;AAMA;AACD;AACF;AAED;AXo+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWp+FO;AACL;AAMD;AAED;AXg+FA;AACA;AACA;AACA;AACA;AACA;AWh+FO;AACL;AAAO;AAA6C;AAApD;AACD;AAED;AXo+FA;AACA;AACA;AACA;AACA;AACA;AWp+FO;AACL;AAAO;AAA6C;AAApD;AACD;AAED;AXw+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWx+FO;AACL;AACA;AAII;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAGH;AACD;AAED;AXo+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWp+FO;AAML;AACA;AACE;AACD;AACD;AXi+FF;AWh+FE;AACE;AACD;AXk+FH;AWj+FE;AACD;AAED;AXk+FA;AACA;AACA;AACA;AACA;AACA;AWl+FO;AACL;AAKE;AACC;AAEJ;AAED;AX89FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AW99FO;AACL;AACA;AXg+FF;AW/9FE;AACE;AACD;AXi+FH;AWh+FE;AXk+FF;AWj+FE;AAIE;AACD;AXg+FH;AW/9FE;AACE;AACA;AACA;AACE;AACA;AACA;AACE;AADgE;AAGnE;AACC;AACD;AXi+FL;AACA;AWh+FI;AACE;AACD;AXk+FL;AWj+FI;AAEA;AACA;AXk+FJ;AWj+FI;AACE;AAEO;AAAA;AXm+Fb;AWj+FM;AACE;AACD;AACF;AXm+FL;AWl+FI;AACD;AAED;AAEI;AACE;AACD;AXk+FP;AWj+FM;AACD;AAEC;AACE;AACD;AXk+FP;AWj+FM;AACD;AAEJ;AAED;AXi+FA;AACA;AACA;AACA;AACA;AACA;AWj+FA;AACE;AACA;AACA;AACA;AACE;AAED;AAGD;AXg+FF;AACA;AWh+FE;AXk+FF;AWj+FE;AACE;AACD;AXm+FH;AWl+FE;AACD;AAED;AXm+FA;AACA;AACA;AACA;AACA;AACA;AWn+FA;AACE;AACD;AAED;AXo+FA;AACA;AACA;AACA;AACA;AACA;AWp+FO;AACL;AACD;AXs+FD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY7uGA;AZ+uGA;AY9uGA;AZgvGA;AY/uGA;AZivGA;AYhvGA;AZkvGA;AY5wGA;AZ8wGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY5wGA;AZ8wGA;AACA;AACA;AACA;AACA;AACA;AYvwGA;AACA;AAEA;AZwwGA;AYvwGA;AAEA;AZwwGA;AYvwGA;AAEA;AZwwGA;AACA;AACA;AACA;AACA;AACA;AYvwGO;AAEP;AZwwGA;AACA;AACA;AACA;AACA;AACA;AACA;AYzwGO;AACL;AACD;AAED;AZ0wGA;AACA;AACA;AACA;AACA;AACA;AY1wGO;AACL;AAGD;AAED;AZywGA;AACA;AACA;AACA;AACA;AACA;AACA;AYzwGO;AACL;AACA;AACD;AAED;AZ0wGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY1wGO;AAML;AAAwC;AAAO;AAC/C;AZywGF;AYxwGE;AACE;AACA;AZ0wGJ;AYxwGI;AACE;AACA;AACA;AZ0wGN;AYxwGM;AACE;AAOD;AACF;AACF;AZowGH;AYnwGE;AACD;AAED;AZowGA;AACA;AACA;AACA;AACA;AACA;AACA;AYpwGO;AACL;AACE;AACD;AZswGH;AYrwGE;AACA;AZuwGF;AYpwGE;AACE;AACE;AZswGN;AYrwGM;AACE;AACD;AACF;AACF;AZuwGH;AACA;AYtwGE;AAKE;AACA;AZowGJ;AYjwGI;AACE;AZmwGN;AYlwGM;AACE;AACE;AACD;AACF;AACF;AACF;AZowGH;AYlwGE;AZowGF;AYlwGE;AAKE;AACA;AACA;AZgwGJ;AY/vGI;AACE;AZiwGN;AYhwGM;AACE;AACD;AZkwGP;AYjwGM;AACE;AACD;AACF;AACF;AZmwGH;AYlwGE;AACD;AAED;AZmwGA;AACA;AACA;AACA;AACA;AACA;AACA;AYnwGO;AACL;AACD;AAED;AZowGA;AACA;AACA;AACA;AACA;AACA;AYpwGA;AACE;AZswGF;AYrwGE;AACE;AACE;AACD;AACF;AACC;AACD;AZuwGH;AYtwGE;AAEA;AZuwGF;AYtwGE;AACE;AACE;AACD;AZwwGL;AYvwGI;AACE;AACD;AACC;AACD;AACF;AZywGH;AYxwGE;AACD;AAED;AZywGA;AACA;AACA;AACA;AACA;AACA;AYzwGA;AACE;AZ2wGF;AY1wGE;AACE;AACD;AZ4wGH;AY3wGE;AACE;AACE;AACD;AACF;AACC;AACD;AACF;AAED;AZ4wGA;AACA;AACA;AACA;AACA;AACA;AACA;AY5wGO;AACL;AACD;AAED;AZ6wGA;AACA;AACA;AACA;AACA;AACA;AY7wGO;AACL;AACA;AACD;AAED;AZ8wGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY9wGA;AACE;AACA;AACD;AAED;AZ+wGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY/wGO;AACL;AADsC;AAIxC;AZgxGA;AACA;AACA;AACA;AACA;AACA;AACA;AYjxGA;AACE;AACA;AACD;AAED;AZkxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYlxGO;AACL;AACA;AZoxGF;AYnxGE;AACE;AACA;AACA;AACE;AACD;AZqxGL;AYpxGI;AACE;AAEA;AACD;AZqxGL;AYnxGI;AAIE;AACA;AACD;AAGD;AACA;AZgxGJ;AACA;AYhxGI;AAEsB;AAAO;AAC3B;AAEA;AAGA;AAED;AACF;AZ8wGH;AY7wGE;AACD;AAED;AZ8wGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY9wGO;AACL;AAGD;AAED;AZ6wGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY7wGO;AACL;AACA;AACA;AACD;AZ+wGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AaxpHA;Ab0pHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AaxpHA;Ab0pHA;AACA;AACA;AACA;AACA;AaxpHA;AACE;AACA;AAAwC;AAAA;AACxC;AACD;AAED;Ab2pHA;AACA;AACA;AACA;AACA;Aa3pHO;AACL;AACD;AAED;Ab4pHA;AACA;AACA;AACA;AACA;Aa5pHO;AACL;AACD;Ab8pHD;AACA;AACA;AACA;AACA;AACA;AACA;Ac9sHA;AdgtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac9sHA;AdgtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac9sHO;AACL;AACD;AdgtHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AepuHA;AfsuHA;AeruHA;AfuuHA;Ae7vHA;Af+vHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ae7vHA;Af+vHA;AACA;AACA;AezvHA;AACA;Af2vHA;AezvHA;Af2vHA;AACA;AACA;AezvHA;AAEA;Af0vHA;AACA;AACA;AACA;AezvHA;AAEA;Af0vHA;AACA;AACA;AACA;AezvHA;AAEA;Af0vHA;AACA;AACA;AACA;AezvHA;AAEA;Af0vHA;AACA;AACA;AACA;AACA;AezvHO;AACL;Af2vHF;Ae1vHE;AACE;AACE;AACD;Af4vHL;Ae3vHI;AACA;AACD;Af6vHH;Ae5vHE;AAAO;AAA4B;AAAnC;AACD;AAED;AfgwHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AehwHO;AACL;AACA;AACE;AACD;AfkwHH;AACA;AejwHE;AACA;AfmwHF;AelwHE;AACE;AfowHJ;AenwHI;AAME;AACA;AACD;AfgwHL;Ae/vHI;AACA;AACD;AfiwHH;AehwHE;AACD;AAED;AfiwHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AejwHO;AACL;AAAO;AAA4B;AAAW;AAAuB;AAArE;AACD;AAED;AfuwHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AevwHO;AACL;AACE;AACD;AACC;AACE;AACD;AfywHL;AexwHI;AACD;AACF;AAED;AfywHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AezwHO;AACL;AACA;Af2wHF;Ae1wHE;AACE;AACD;Af4wHH;Ae3wHE;Af6wHF;Ae5wHE;AACE;AACD;Af8wHH;Ae7wHE;AACE;AACD;AACC;AACD;AACF;AAED;Af8wHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ae9wHO;AAAqC;AAAX;AAAW;AfmxH5C;AelxHE;AACE;AACD;AfoxHH;AenxHE;AACE;AACD;AACD;AfqxHF;AACA;AerxHE;AAAgB;AAAG;AAAG;AAAP;Af2xHjB;Ae1xHE;AAAyB;AAAA;AAAA;AAAA;AfgyH3B;AACA;Ae9xHI;AACE;AACE;AACD;AACC;AACE;AACD;AfgyHT;Ae/xHQ;AACE;AAAY;AAAS;AAAS;AAAnB;AACZ;AfqyHT;AepyHQ;AACD;AACC;AAA0B;AAAwB;AAClD;AAA0B;AAAwB;Af0yH1D;AezyHQ;AACE;AACD;Af2yHT;Ae1yHQ;AACE;AACA;AAAY;AAAS;AAAS;AAAnB;AACZ;AfgzHT;Ae/yHQ;AACD;AACF;AfizHL;AACA;AehzHI;AACE;AACD;AACF;AfkzHH;AejzHE;AACD;AAED;AfkzHA;AACA;AACA;AACA;AACA;AACA;AelzHA;AACE;AACE;AACD;AfozHH;AenzHE;AACE;AAAwB;AAG3B;AAED;AfmzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AenzHO;AACL;AAAO;AAA4B;AAAnC;AACD;AAED;AfuzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AevzHO;AACL;AAAO;AAA4C;AAAnD;AACD;AAED;Af2zHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ae3zHO;AACL;AACD;Af6zHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBtkIA;AhBwkIA;AgBvkIA;AhBykIA;AgBxkIA;AhB0kIA;AgBzkIA;AhB2kIA;AgB1kIA;AhB4kIA;AgB3kIA;AhB6kIA;AgBlmIA;AhBomIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB1lIA;AAEA;AhB2lIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB3lIO;AAEP;AhB4lIA;AACA;AACA;AACA;AACA;AACA;AgB5lIO;AAEP;AhB6lIA;AACA;AACA;AACA;AACA;AACA;AgB9lIO;AACL;AACD;AAED;AhB+lIA;AACA;AACA;AACA;AACA;AgB/lIO;AACL;AACD;AAED;AhBgmIA;AACA;AACA;AACA;AACA;AgBhmIO;AACL;AACA;AACA;AACA;AACA;AALsB;AAQxB;AhBimIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBlmIO;AACL;AACD;AAED;AhBmmIA;AACA;AACA;AACA;AACA;AgBnmIA;AAEA;AhBomIA;AACA;AACA;AgBnmIO;AACL;AACD;AAED;AhBomIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBpmIA;AAAsB;AAAA;AAEtB;AhBumIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBvmIA;AAA2B;AAEvB;AAAA;AAFuB;AAM3B;AhBwmIA;AACA;AACA;AACA;AACA;AACA;AgBxmIA;AAAuC;AAAA;AAGvC;AhB0mIA;AACA;AACA;AACA;AACA;AgB1mIA;AAAwC;AAAA;AAGxC;AhB4mIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB9mIE;AhBgnIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB9mIE;AAA6C;AhBinI/C;AgBjnI+C;AAAjB;AAAiB;AhBqnI/C;AgBpnII;AhBsnIJ;AACA;AACA;AACA;AgBpnII;AAEA;AhBqnIJ;AgBpnII;AAEA;AhBqnIJ;AgBpnII;AAEA;AhBqnIJ;AgBpnII;AAEA;AhBqnIJ;AgBpnII;AAEA;AACE;AAEgB;AAAA;AAEZ;AACE;AAAiB;AAA4B;AAC9C;AACF;AACJ;AACF;AAED;AhBqnIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBvnII;AACD;AAED;AhBwnIF;AACA;AACA;AACA;AACA;AACA;AgBxnII;AACA;AACE;AACD;AhB0nIL;AACA;AgBxnII;AACE;AACD;AhB0nIL;AACA;AgBxnII;AACE;AACD;AhB0nIL;AACA;AgBxnII;AACE;AACD;AhB0nIL;AACA;AgBxnII;AACD;AAED;AhBynIF;AACA;AACA;AACA;AACA;AACA;AACA;AgBznII;AACE;AhB2nIN;AgB1nIM;AACE;AACD;AACC;AACD;AACC;AACD;AhB4nIP;AgB3nIM;AhB6nIN;AgB3nIM;AhB6nIN;AgB5nIM;AACE;AACA;AACD;AACC;AACD;AhB8nIP;AgB7nIM;AACD;AACF;AAED;AhB8nIF;AACA;AACA;AACA;AACA;AACA;AgB9nII;AACD;AAED;AhB+nIF;AACA;AACA;AACA;AACA;AACA;AACA;AgB/nII;AACE;AACD;AACF;AAED;AhBgoIF;AACA;AACA;AACA;AACA;AACA;AACA;AgBhoII;AACE;AACD;AACF;AAED;AhBioIF;AACA;AACA;AACA;AACA;AACA;AACA;AgBjoII;AACE;AACD;AACF;AAED;AhBkoIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBloII;AACE;AACD;AACC;AAIA;AACA;AACD;AACF;AAED;AhBgoIF;AACA;AACA;AACA;AACA;AACA;AACA;AgBhoII;AhBkoIJ;AgBjoII;AACE;AhBmoIN;AgBjoIM;AACD;AACF;AAED;AhBkoIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBloII;AhBooIJ;AgBnoII;AACE;AhBqoIN;AgBnoIM;AACD;AACF;AAED;AhBooIF;AACA;AACA;AACA;AACA;AACA;AACA;AgBpoII;AACA;AACA;AACD;AAED;AhBqoIF;AACA;AACA;AACA;AACA;AACA;AACA;AgBroII;AACA;AACA;AACA;AACD;AAED;AhBsoIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBtoII;AhBwoIJ;AgBvoII;AACE;AAG4B;AAAuB;AAGpD;AhBsoIL;AgBroII;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AhBuoIN;AgBtoIM;AACE;AACA;AhBwoIR;AgBvoIQ;AACE;AACD;AhByoIT;AgBxoIQ;AACA;AACA;AACD;AhB0oIP;AgBzoIM;AACA;AACA;AACA;AACA;AhB2oIN;AgBzoIM;AhB2oIN;AgB1oIM;AACD;AhB4oIL;AgB3oII;AACD;AAED;AhB4oIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB5oII;AACA;AAMA;AAAO;AAAyB;AAAhC;AACD;AAED;AhB2oIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB3oII;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;AhB0oIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB1oII;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;AhByoIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBzoII;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;AhBwoIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBxoII;AAMA;AAAO;AAAwB;AAA/B;AACD;AAED;AhBuoIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBvoII;AACE;AACD;AhByoIL;AgBxoII;AACD;AAED;AhByoIF;AACA;AACA;AACA;AACA;AACA;AgBzoII;AhB2oIJ;AgB1oII;AACE;AACE;AACD;AACC;AACD;AACF;AACC;AACD;AACF;AAED;AhB2oIF;AACA;AACA;AACA;AACA;AACA;AACA;AgB3oII;AACE;AAA+B;AAAuB;AACvD;AhB+oIL;AgB9oII;AACD;AAED;AhB+oIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB/oII;AACA;AAEA;AACA;AACA;AhBgpIJ;AgB/oII;AACE;AACD;AhBipIL;AgBhpII;AACE;AACD;AhBkpIL;AgBjpII;AACD;AAED;AhBkpIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBlpII;AACE;AACD;AACC;AACD;AACF;AhBopIH;AACA;AACA;AgBnpIA;AhBqpIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBvpIA;AAAiC;AAC/B;AAAuB;AADQ;AAAA;AAGjC;AhB4pIA;AACA;AACA;AACA;AACA;AgB5pIA;AACE;AACA;AACE;AACD;AhB8pIH;AgB7pIE;AACD;AAED;AhB8pIA;AACA;AACA;AACA;AACA;AgB9pIA;AACE;AACE;AACD;AACF;AAED;AhB+pIA;AACA;AACA;AACA;AACA;AACA;AgB/pIO;AACL;AhBiqIF;AgBhqIE;AACE;AACD;AhBkqIH;AgBtqIiD;AAAA;AAO/C;AhBmqIF;AgBjqIE;AACE;AACD;AhBmqIH;AACA;AgBlqIE;AACA;AACD;AAED;AhBmqIA;AACA;AACA;AACA;AACA;AACA;AgBnqIO;AACL;AACA;AhBqqIF;AgBpqIE;AACE;AhBsqIJ;AgBrqII;AACE;AACD;AACC;AACE;AACD;AhBuqIP;AgBtqIM;AACD;AACF;AhBwqIH;AgBtqIE;AACE;AACD;AACC;AACD;AhBwqIH;AgBvqIE;AACD;AAED;AhBwqIA;AACA;AACA;AACA;AACA;AACA;AgBxqIO;AACL;AACA;AACE;AACA;AhB0qIJ;AgBzqII;AACD;AACF;AAED;AhB0qIA;AACA;AACA;AACA;AACA;AACA;AgB1qIA;AACE;AACA;AACA;AAHiC;AAMnC;AAEA;AhB0qIA;AACA;AACA;AACA;AACA;AACA;AgBzqIA;AAEA;AhB0qIA;AACA;AACA;AgBzqIO;AACL;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AhB0qIF;AgBzqIE;AACA;AACD;AAED;AhB0qIA;AACA;AACA;AACA;AgB1qIO;AACL;AACD;AAED;AhB2qIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB3qIO;AACL;AACE;AACD;AhB6qIH;AgB5qIE;AACE;AACD;AACC;AACE;AACD;AhB8qIL;AgB7qII;AACD;AACF;AAED;AhB8qIA;AACA;AACA;AACA;AACA;AACA;AgB9qIA;AACE;AACE;AACD;AhBgrIH;AgB/qIE;AAGI;AhB+qIN;AgB9qIM;AACE;AACD;AhBgrIP;AgB/qIM;AACD;AAGJ;AAED;AhB8qIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB9qIO;AACL;AACE;AACD;AhBgrIH;AgB/qIE;AACE;AACD;AhBirIH;AgBhrIE;AACE;AhBkrIJ;AgBjrII;AACE;AACD;AhBmrIL;AgBlrII;AACE;AACD;AhBorIL;AgBnrII;AACD;AACF;AAED;AhBorIA;AACA;AACA;AACA;AACA;AACA;AgBprIO;AACL;AACE;AACD;AhBsrIH;AgBrrIE;AACD;AAED;AhBsrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBtrIO;AAaL;AACE;AACD;AhB4qIH;AgB3qIE;AAAa;AAAc;AAa5B;AAED;AhBkqIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBlqIO;AAaL;AAAc;AAAc;AAa7B;AhB8oID;AACA;AACA;AACA;AACA;AACA;AACA;AiB5mKA;AjB8mKA;AiB9nKA;AjBgoKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiB5nKA;AjB8nKA;AACA;AACA;AACA;AACA;AiB5nKO;AACL;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVK;AAYR;AjB8nKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB5pKA;AlB8pKA;AkB7pKA;AlB+pKA;AkBhrKA;AlBkrKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB7qKA;AlB+qKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB7qKO;AAEP;AlB8qKA;AACA;AACA;AACA;AACA;AACA;AkB9qKA;AAEA;AlB+qKA;AACA;AACA;AACA;AACA;AkB9qKO;AACL;AlBgrKF;AkB/qKE;AACE;AACD;AlBirKH;AkBhrKE;AACD;AAED;AlBirKA;AACA;AACA;AACA;AACA;AACA;AkBjrKA;AACE;AACA;AAGA;AACA;AACA;AlBirKF;AkBhrKE;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEE;AACA;AAEF;AAEA;AlB6qKF;AkB3qKE;AACE;AACD;AAGD;AACA;AACA;AlB2qKF;AACA;AkB3qKE;AACE;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BK;AA8BR;AAED;AlBwqKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBxqKA;AACE;AACA;AACA;AACE;AACD;AlB0qKH;AkBxqKE;AACE;AACD;AAGD;AACA;AACA;AACA;AlBwqKF;AACA;AkBxqKE;AACD;AAED;AlByqKA;AACA;AACA;AACA;AACA;AACA;AACA;AkBzqKO;AACL;AACD;AAED;AlB0qKA;AACA;AkB1qKO;AACL;AACD;AlB4qKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB70KA;AnB+0KA;AmB90KA;AnBg1KA;AmB/0KA;AnBi1KA;AmBn2KA;AnBq2KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB/1KA;AnBi2KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB/1KA;AACE;AACA;AACA;AAHe;AAMjB;AnBg2KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBr2KE;AnBu2KF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBt2KA;AnBw2KA;AACA;AACA;AACA;AACA;AACA;AmBz2KA;AAEA;AnB02KA;AACA;AACA;AACA;AACA;AACA;AACA;AmBz2KO;AACL;AACE;AAEI;AACE;AACE;AACD;AACF;AnB02KT;AmBz2KQ;AACD;AAGH;AAKD;AACD;AACD;AAED;AnBo2KA;AACA;AACA;AACA;AACA;AACA;AmBp2KO;AACL;AACD;AAED;AnBq2KA;AACA;AACA;AACA;AACA;AACA;AACA;AmBr2KO;AACL;AAAmC;AAAsC;AACzE;AACD;AAED;AnBw2KA;AACA;AACA;AACA;AACA;AACA;AmBx2KO;AACL;AACA;AACA;AAEA;AACE;AACD;AACF;AnBy2KD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBp/KA;ApBs/KA;AoBr/KA;ApBu/KA;AoBt/KA;ApBw/KA;AoBv/KA;ApBy/KA;AoBlhLA;ApBohLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBlhLA;ApBohLA;AACA;AACA;AACA;AACA;AoB7gLA;ApB+gLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoB7gLA;AAEA;ApB8gLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBnhLE;ApBqhLF;AACA;AACA;AACA;AACA;AACA;AACA;AoBphLA;ApBshLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoB5hLE;ApB8hLF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoB7hLA;ApB+hLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBjiLO;AACL;AACA;AACA;AACA;ApBmiLF;AoBjiLE;AACA;ApBmiLF;AoBliLE;AACE;AACE;AACD;ApBoiLL;AACA;AoBniLI;AACD;AACC;AACA;AACD;AACF;AAED;ApBoiLA;AACA;AACA;AACA;AACA;AACA;AACA;AoBpiLO;AACL;AACA;AAKA;AAKA;ApB8hLF;AoB7hLE;AACE;AACA;AAIE;AAAA;AACA;AAAe;AAElB;AACC;AAAgD;AAAA;AAChD;AACD;AACF;AAED;ApB8hLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoB9hLO;AACL;AACA;ApBgiLF;AoB/hLE;AACE;AACD;AACF;AAED;ApBgiLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBhiLO;AAML;AACA;AACA;ApB6hLF;AoB5hLE;AACE;AACD;AACF;AAED;ApB6hLA;AACA;AACA;AACA;AACA;AACA;AACA;AoB7hLO;AACL;AACA;AACA;AACD;AAED;ApB8hLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoB9hLO;AACL;AACA;AACD;AAED;ApB+hLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoB/hLO;AACL;AACD;AAED;ApBgiLA;AACA;AACA;AACA;AACA;AACA;AACA;AoBhiLO;AACL;ApBkiLF;AoBjiLE;AACE;AACD;AACC;AACD;AACF;AAED;ApBkiLA;AACA;AACA;AACA;AACA;AACA;AACA;AoBliLO;AACL;AACD;AAED;ApBmiLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBniLO;AACL;AACA;AACA;AACD;AAED;ApBoiLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBpiLA;AACE;AACA;ApBsiLF;AoBriLE;AACE;AACD;AACC;AACD;AACF;AAED;ApBsiLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBtiLO;AACL;AACD;AAED;ApBuiLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBviLO;AACL;AAID;AAED;ApBqiLA;AACA;AACA;AACA;AACA;AACA;AoBriLO;AACL;AACA;AACD;AAED;ApBsiLA;AACA;AACA;AACA;AACA;AACA;AoBtiLO;AACL;AACD;AAED;ApBuiLA;AACA;AACA;AACA;AACA;AACA;AACA;AoBviLO;AACL;AACD;AAED;ApBwiLA;AACA;AACA;AACA;AACA;AACA;AACA;AoBxiLO;AACL;AACA;ApB0iLF;AoBziLE;AACE;AACE;AAAO;AAAmC;AAA1C;AACD;AAEA;AACF;ApB6iLH;AoB5iLE;AACD;AAED;ApB6iLA;AACA;AACA;AACA;AACA;AoB7iLO;AACL;AACE;AACE;AAAyB;AAG3B;AAAuC;AAAsB;AAC9D;ApBgjLH;AoB/iLE;AAAO;AAA8C;AAArD;AACD;AAED;ApBmjLA;AACA;AACA;AACA;AACA;AoBnjLA;AACE;AACA;AACD;AAED;ApBojLA;AACA;AACA;AACA;AACA;AACA;AACA;AoBpjLA;AACE;AAAO;AAAqD;AAA5D;AAID;AAED;ApBqjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBrjLA;AACE;AAIA;AACA;ApBojLF;AoBnjLE;AACE;AACA;AACA;AACA;AACA;AACA;AAEA;ApBojLJ;AoBnjLI;AACE;AACD;AACF;ApBqjLH;AoBpjLE;AACD;AAED;ApBqjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBrjLA;AACE;AACA;ApBujLF;AoBrjLE;AACE;AACE;AACA;AACA;AACA;AACA;AACA;AANiB;AAQpB;ApBujLH;AoBrjLE;AACE;AACA;AACD;ApBujLH;AoBrjLE;AACA;AAGA;ApBqjLF;AoBpjLE;AACE;AACA;AACD;AACF;AAED;ApBqjLA;AACA;AACA;AACA;AACA;AACA;AoBrjLA;AACE;ApBujLF;AoBtjLE;AACE;AACD;AAGD;AACA;ApBsjLF;AACA;AoBtjLE;AACA;AACA;AAAO;AAAkC;AAAzC;AACD;AAED;ApB0jLA;AACA;AACA;AACA;AACA;AACA;AoB1jLA;AACE;AACA;ApB4jLF;AoB3jLE;AACE;AACE;AACD;ApB6jLL;AoB5jLI;AACD;ApB8jLH;AoB5jLE;AACA;AACD;AAED;ApB6jLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoB7jLA;AACE;AACA;ApB+jLF;AoB9jLE;AACE;AACE;AACD;AACC;AACA;AACA;AAAoC;AAAwB;AAC7D;AACF;ApBkkLH;AoBjkLE;AACD;AAED;ApBkkLA;AACA;AACA;AACA;AACA;AACA;AoBlkLA;AACE;ApBokLF;AoBnkLE;AACE;AACD;ApBqkLH;AoBpkLE;AACD;AAED;ApBqkLA;AACA;AACA;AACA;AACA;AACA;AoBrkLO;AACL;AACD;AAED;ApBskLA;AACA;AACA;AACA;AACA;AACA;AACA;AoBtkLO;AACL;AACA;AAAO;AAA4B;AAAnC;AACD;AAED;ApB0kLA;AACA;AACA;AACA;AACA;AACA;AoB1kLO;AACL;AACD;AAED;ApB2kLA;AACA;AACA;AACA;AACA;AACA;AoB3kLO;AACL;AACD;AAED;ApB4kLA;AACA;AACA;AACA;AoB5kLA;AACE;AACA;AACA;ApB8kLF;AoBjlLyC;AAKrC;AACE;AACD;ApB+kLL;AoB9kLI;ApBglLJ;AoB/kLI;AACE;AACD;AACC;AAAmC;AAAA;AAGpC;AAfoC;ApBimLzC;AoB7lLE;AAA2B;ApBgmL7B;AoBhmL6B;AAY1B;AACF;AAED;ApBslLA;AACA;AACA;AACA;AACA;AoBtlLA;AACE;AACE;AACD;ApBwlLH;AoBvlLE;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAED;ApBwlLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBxlLO;AACL;ApB0lLF;AoBxlLE;AACE;AACD;ApB0lLH;AoBzlLE;AAIA;AACA;AACA;AACD;AAED;ApBulLA;AACA;AACA;AACA;AACA;AoBvlLO;AACL;AAIA;AAIE;AAAA;AAEH;AAED;ApBklLA;AACA;AACA;AACA;AACA;AACA;AoBllLO;AACL;AACE;AACD;AACF;AAED;ApBmlLA;AACA;AACA;AACA;AACA;AACA;AoBnlLA;AACE;ApBqlLF;AoBnlLE;AACD;AAED;ApBolLA;AACA;AoBplLA;AACE;AADuC;AAAA;AAAA;AAGvC;ApBwlLF;AoBvlLE;AACE;AACA;AACA;AACA;AACA;AACA;AANK;AAQR;ApBylLD;AACA;AACA;AACA;AACA;AACA;AACA;AqBhvMA;ArBkvMA;AqB1uMA;ArB4uMA;AqBpwMA;ArBswMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBrvMA;AACO;ArBuvMP;AACA;AACA;AACA;AACA;AACA;AACA;AqB1vME;ArB4vMF;AACA;AACA;AACA;AqB1vME;ArB4vMF;AACA;AACA;AACA;AACA;AqB1vMI;AAAO;AAAiF;AAAxF;AAKD;AAED;ArB0vMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB1vMI;AAAO;AAAiF;AAAxF;AAKD;AAED;ArB0vMF;AACA;AACA;AACA;AACA;AACA;AACA;AqB1vMI;AAAO;AAA+C;AAAtD;AAKD;AAED;ArB0vMF;AACA;AACA;AACA;AACA;AACA;AACA;AqB1vMI;AAAO;AAA+C;AAAtD;AAKD;AAED;ArB0vMF;AACA;AACA;AACA;AACA;AACA;AqB1vMI;AAAO;AAAqD;AAA5D;AAID;AAED;ArB2vMF;AACA;AACA;AACA;AACA;AACA;AqB3vMI;AAAO;AAAiE;AAAxE;AAID;AAED;ArB4vMF;AACA;AACA;AACA;AACA;AACA;AqB5vMI;AAAO;AAAkF;AAAzF;AAKD;AAED;ArB4vMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB5vMI;AAAO;AAAqD;AAA5D;AAID;AAED;ArB6vMF;AACA;AACA;AACA;AACA;AACA;AACA;AqB7vMI;AACD;AAED;ArB8vMF;AACA;AACA;AACA;AACA;AACA;AACA;AqB/vMyD;AAAvB;AAAuB;ArBmwMzD;AqBlwMI;AACE;AACA;AACA;AAAmC;AAAO;AAI3C;ArBmwML;AqBlwMI;AAAO;AAAkG;AAAzG;AAKD;AAED;ArBkwMF;AACA;AACA;AACA;AACA;AACA;AqBlwMI;AAAO;AAAkG;AAAzG;AAKD;AAED;ArBkwMF;AACA;AACA;AACA;AACA;AACA;AqBlwMI;AAAO;AAAuD;AAA9D;AAID;AAED;ArBmwMF;AACA;AACA;AACA;AACA;AACA;AqBnwMI;AAAO;AAAqE;AAA5E;AAKD;AAED;ArBmwMF;AACA;AACA;AACA;AACA;AACA;AqBnwMI;AAAO;AAAqD;AAA5D;AAID;AAED;ArBowMF;AACA;AACA;AACA;AACA;AACA;AqBpwMI;AAAO;AAAiD;AAAxD;AAID;AAED;ArBqwMF;AACA;AACA;AACA;AACA;AACA;AqBrwMI;AAAO;AAAiF;AAAxF;AAKD;AAED;ArBqwMF;AACA;AACA;AACA;AACA;AACA;AqBrwMI;AAAO;AAA6F;AAApG;AAKD;AAED;ArBqwMF;AACA;AACA;AACA;AACA;AACA;AqBrwMI;AAAO;AAA8C;AAArD;AAID;AAED;ArBswMF;AACA;AACA;AACA;AACA;AACA;AqBtwMI;AAAO;AAAsD;AAA7D;AAID;AAED;ArBuwMF;AACA;AACA;AACA;AACA;AACA;AqBvwMI;AAAO;AAAsD;AAA7D;AAID;AAED;ArBwwMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBxwMI;AAAO;AAA2F;AAAlG;AAID;AAED;ArBywMF;AACA;AACA;AACA;AACA;AACA;AACA;AqBzwMI;AAAO;AAA+D;AAAtE;AAID;AAED;ArB0wMF;AACA;AACA;AACA;AACA;AACA;AACA;AqB1wMI;AAAO;AAAgD;AAAvD;AAID;AAED;ArB2wMF;AACA;AACA;AACA;AACA;AACA;AqB3wMI;AACD;AAED;ArB4wMF;AACA;AACA;AACA;AACA;AACA;AACA;AqB5wMI;AAAO;AAA6F;AAApG;AAKD;AAED;ArB4wMF;AACA;AACA;AACA;AACA;AACA;AqB5wMI;AAAO;AAA4D;AAAnE;AAID;AAED;ArB6wMF;AACA;AACA;AACA;AACA;AACA;AqB7wMI;AAAO;AAAuD;AAA9D;AAID;AAED;ArB8wMF;AACA;AACA;AACA;AACA;AACA;AqB9wMI;AAAO;AAAuD;AAA9D;AAID;AAED;ArB+wMF;AACA;AACA;AACA;AACA;AACA;AqB/wMI;AAAO;AAAkD;AAAzD;AAID;AAED;ArBgxMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBhxMI;AAAO;AAAqF;AAA5F;AAID;AAED;ArBixMF;AACA;AACA;AACA;AACA;AACA;AqBjxMI;AAAO;AAAkE;AAAzE;AAID;AAED;ArBkxMF;AACA;AACA;AACA;AACA;AACA;AqBlxMI;AAAO;AAA4E;AAAnF;AAID;AAED;ArBmxMF;AACA;AACA;AACA;AACA;AACA;AqBnxMI;AAAO;AAAgF;AAAvF;AAMD;AAED;ArBkxMF;AACA;AACA;AACA;AACA;AACA;AACA;AqBlxMI;AACE;AACC;AAFH;AAID;AAED;ArBmxMF;AACA;AACA;AACA;AACA;AACA;AqBnxMI;AACE;AACC;AAFH;AAID;AAED;ArBoxMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBpxMI;AACE;AACC;AAFH;AAID;AAED;ArBqxMF;AACA;AACA;AACA;AACA;AACA;AqBrxMI;AACE;AACC;AAFH;AAID;AAED;ArBsxMF;AACA;AACA;AACA;AACA;AACA;AqBtxMI;AACE;AACC;AAFH;AAID;AAED;ArBuxMF;AACA;AACA;AACA;AACA;AACA;AqBvxMI;AACE;AACC;AAFH;AAID;AAED;ArBwxMF;AACA;AACA;AACA;AACA;AACA;AqBxxMI;AACE;AACC;AAFH;AAID;AAED;ArByxMF;AACA;AACA;AACA;AACA;AACA;AqBzxMI;AACE;AACC;AAFH;AAID;AAED;ArB0xMF;AACA;AACA;AACA;AACA;AACA;AqB1xMI;AACD;AAED;ArB2xMF;AACA;AACA;AACA;AACA;AACA;AACA;AqB3xMI;AACE;AACC;AAFH;AAID;AAED;ArB4xMF;AACA;AACA;AACA;AACA;AACA;AqB5xMI;AACE;AACC;AAFH;AAID;AAED;ArB6xMF;AACA;AACA;AACA;AACA;AACA;AACA;AqB7xMI;AACD;AAED;ArB8xMF;AACA;AACA;AACA;AACA;AACA;AACA;AqB9xMI;AACD;AAED;ArB+xMF;AACA;AACA;AACA;AACA;AACA;AACA;AqB/xMI;AACE;AACC;AAFH;AAID;AAED;ArBgyMF;AACA;AACA;AACA;AACA;AACA;AACA;AqBhyMI;AACD;AAED;ArBiyMF;AACA;AACA;AACA;AACA;AACA;AqBjyMI;AACE;AACC;AAFH;AASD;AAED;ArB6xMF;AACA;AACA;AACA;AACA;AACA;AqB7xMI;AACE;AACC;AAFH;AAID;AAED;ArB8xMF;AACA;AACA;AACA;AACA;AACA;AqB9xMI;AAAO;AAA0D;AAAjE;AAID;AAED;ArB+xMF;AACA;AACA;AACA;AACA;AACA;AqB/xMI;AAAO;AAAmD;AAA1D;AAID;AAED;ArBgyMF;AACA;AACA;AACA;AACA;AACA;AqBhyMI;AACA;AAAO;AAA4C;AAAnD;AAID;AAED;ArBiyMF;AACA;AACA;AACA;AACA;AACA;AqBjyMI;AAAO;AAAiE;AAAxE;AAID;AAED;ArBkyMF;AACA;AACA;AACA;AACA;AACA;AqBlyMI;AACE;AACC;AAFH;AAQD;AAED;ArB+xMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB/xMI;AACE;AACC;AAFH;AAQD;AAED;ArB4xMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB5xMI;AAAO;AAAoE;AAA3E;AAMD;AAED;ArB2xMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB3xMI;AAAO;AAAyG;AAAhH;AAMD;AAED;ArB0xMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB1xMI;AAAO;AAAwC;AAA/C;AAID;AAED;ArB2xMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB3xMI;AAAO;AAA6E;AAApF;AAMD;AAED;ArB0xMF;AACA;AACA;AACA;AACA;AACA;AqB1xMI;AAAO;AAA2D;AAAlE;AAID;AAED;ArB2xMF;AACA;AACA;AACA;AACA;AACA;AqB3xMI;AACE;AACC;AAFH;AAQD;AAED;ArBwxMF;AACA;AACA;AACA;AACA;AACA;AqBxxMI;AAAO;AAA4D;AAAnE;AAID;AAED;ArByxMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBzxMI;AAAO;AAAsE;AAA7E;AAID;AAED;ArB0xMF;AACA;AACA;AACA;AACA;AACA;AqB1xMI;AAAO;AAA4C;AAAnD;AAID;AAED;ArB2xMF;AACA;AACA;AACA;AACA;AACA;AqB3xMI;AAAO;AAAyE;AAAhF;AAID;AAED;ArB4xMF;AACA;AACA;AACA;AACA;AACA;AqB5xMI;AAAO;AAAwC;AAA/C;AACD;ArBiyMH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB3nOA;AtB6nOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB3nOA;AtB6nOA;AACA;AACA;AACA;AsB3nOA;AACE;AACD;AAED;AtB4nOA;AACA;AACA;AACA;AACA;AsB5nOA;AACE;AACD;AAED;AtB6nOA;AACA;AACA;AACA;AACA;AACA;AsB7nOO;AACL;AACD;AAED;AtB8nOA;AACA;AACA;AACA;AACA;AACA;AACA;AsB9nOO;AACL;AACD;AAED;AtB+nOA;AACA;AACA;AACA;AACA;AsB/nOO;AACL;AACD;AAED;AtBgoOA;AACA;AACA;AACA;AACA;AACA;AACA;AsBhoOO;AACL;AACA;AACD;AAED;AtBioOA;AACA;AACA;AACA;AACA;AACA;AACA;AsBjoOO;AACL;AACE;AACD;AtBmoOH;AsBloOE;AACD;AAED;AtBmoOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBnoOO;AACL;AACE;AACD;AtBqoOH;AsBpoOE;AACE;AACD;AtBsoOH;AsBroOE;AACD;AAED;AtBsoOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBtoOO;AACL;AtBwoOF;AsBzoOoE;AAGhE;AACA;AACE;AACA;AACD;AtByoOL;AsBxoOI;AACE;AACD;AAV+D;AtBqpOpE;AsBnpOE;AAAwC;AtBspO1C;AsBtpO0C;AASvC;AtBgpOH;AsB/oOE;AACD;AAED;AtBgpOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBhpOO;AAA2B;AAEhC;AtBkpOF;AsBjpOE;AACE;AACD;AtBmpOH;AACA;AsBlpOE;AACD;AAED;AtBmpOA;AACA;AACA;AACA;AACA;AACA;AsBnpOO;AACL;AACA;AACE;AACD;AtBqpOH;AsBnpOE;AACD;AAED;AtBopOA;AACA;AACA;AACA;AACA;AACA;AsBppOO;AACL;AACE;AACD;AtBspOH;AsBppOE;AACD;AAED;AtBqpOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBrpOO;AACL;AACE;AACD;AtBupOH;AsBtpOE;AACA;AtBwpOF;AsBvpOE;AACE;AACD;AtBypOH;AsBxpOE;AACD;AtB0pOD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBt1OA;AvBw1OA;AuBv1OA;AvBy1OA;AuBx1OA;AvB01OA;AuBz1OA;AvB21OA;AuB11OA;AvB41OA;AuB31OA;AvB61OA;AuB51OA;AvB81OA;AuB71OA;AvB+1OA;AuBt3OA;AvBw3OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB52OA;AACA;AAEA;AvB62OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB52OO;AAOL;AACA;AvBw2OF;AuBj2OE;AACE;AAEA;AACA;AACA;AACA;AvBk2OJ;AuBj2OI;AACE;AACA;AACD;AvBm2OL;AACA;AuBl2OI;AACE;AACE;AACA;AACD;AACF;AACF;AvBo2OH;AuBn2OE;AACD;AAED;AvBo2OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBp2OO;AAOL;AvBg2OF;AuBz1OE;AACE;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACD;AvB21OL;AACA;AuB11OI;AACE;AACE;AACA;AACD;AACF;AACF;AvB41OH;AuB31OE;AACD;AAED;AvB41OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB51OA;AACE;AvB81OF;AuB71OE;AACE;AACD;AvB+1OH;AuB71OE;AAEA;AvB81OF;AuBv1OE;AACE;AvBy1OJ;AuBx1OI;AACE;AACE;AACD;AvB01OP;AuBz1OM;AACD;AACF;AvB21OH;AACA;AuBz1OE;AACA;AACA;AAAM;AAAO;AACb;AAEA;AvB41OF;AuB31OE;AACE;AACD;AACC;AACA;AAGD;AACC;AACE;AACD;AvB21OL;AuB11OI;AACD;AvB41OH;AuB31OE;AvB61OF;AuB51OE;AACE;AACD;AvB81OH;AuB71OE;AACD;AAED;AvB81OA;AACA;AACA;AACA;AACA;AACA;AACA;AuB91OA;AACE;AACA;AACE;AACD;AvBg2OH;AACA;AuB/1OE;AAAyB;AAAO;AvBm2OlC;AuBl2OE;AACE;AACA;AACD;AvBo2OH;AACA;AuBn2OE;AACD;AAED;AvBo2OA;AACA;AACA;AACA;AACA;AACA;AuBp2OO;AACL;AACD;AAED;AvBq2OA;AACA;AACA;AACA;AACA;AACA;AACA;AuBr2OA;AACE;AACA;AACD;AAED;AvBs2OA;AACA;AuBt2OA;AAEA;AvBu2OA;AACA;AACA;AACA;AuBt2OO;AACL;AACD;AAED;AvBu2OA;AACA;AACA;AACA;AACA;AACA;AACA;AuBv2OO;AACL;AACA;AAAY;AAAwB;AACpC;AAEI;AACD;AAEC;AACA;AACD;AAEC;AACA;AACA;AACA;AvBw2ON;AuBv2OM;AACE;AvBy2OR;AuBx2OQ;AAAU;AAAO;AAAgB;AAAkB;AACpD;AvB82OP;AuB72OM;AACE;AvB+2OR;AuB92OQ;AACA;AACD;AACF;AACJ;AAED;AvB+2OA;AACA;AACA;AACA;AACA;AuB/2OO;AACL;AvBi3OF;AuBh3OE;AACE;AACD;AvBk3OH;AuBj3OE;AACA;AACD;AAED;AvBk3OA;AACA;AACA;AACA;AACA;AuBl3OA;AACE;AACE;AACA;AACA;AAHuC;AAK1C;AAED;AvBm3OA;AACA;AACA;AACA;AACA;AACA;AACA;AuBn3OO;AACL;AACD;AAED;AvBo3OA;AACA;AACA;AACA;AACA;AACA;AACA;AuBp3OA;AACE;AvBs3OF;AuBr3OE;AACE;AvBu3OJ;AuBt3OI;AACE;AACD;AACF;AvBw3OH;AuBv3OE;AACD;AvBy3OD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwB3sPA;AxB6sPA;AwB5sPA;AxB8sPA;AwB7sPA;AxB+sPA;AwBluPA;AxBouPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBjuPA;AxBmuPA;AwB9tPA;AACA;AAEA;AxB+tPA;AwB9tPA;AAEA;AxB+tPA;AACA;AACA;AACA;AACA;AwB9tPO;AACL;AACD;AAED;AxB+tPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwB/tPA;AACE;AACE;AxBiuPJ;AwBhuPI;AACE;AACD;AACF;AxBkuPH;AwBjuPE;AACD;AAED;AxBkuPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBluPO;AACL;AACE;AACA;AACD;AxBouPH;AwBnuPE;AACE;AACD;AxBquPH;AwBpuPE;AxBsuPF;AwBruPE;AACE;AxBuuPJ;AwBtuPI;AACE;AACA;AxBwuPN;AwBtuPM;AACE;AACD;AACF;AxBwuPL;AwBvuPI;AACE;AACD;AACF;AxByuPH;AwBxuPE;AACD;AAED;AxByuPA;AACA;AACA;AACA;AACA;AACA;AACA;AwBzuPO;AAA6C;AxB4uPpD;AwB1uPE;AACE;AAKD;AACF;AAED;AxBuuPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBvuPO;AACL;AxByuPF;AwBpuPE;AACE;AAA8B;AAAuB;AAGtD;AACF;AAED;AxBquPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBruPO;AACL;AxBuuPF;AwBluPE;AACE;AACD;AxBouPH;AwBnuPE;AACD;AAED;AxBouPA;AACA;AACA;AACA;AACA;AACA;AACA;AwBpuPO;AACL;AACE;AACD;AACF;AAED;AxBquPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBruPO;AACL;AACE;AAID;AxBouPH;AwBnuPE;AACD;AAED;AxBouPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBpuPO;AACL;AACE;AAID;AxBmuPH;AwBluPE;AACD;AAED;AxBmuPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBnuPO;AAAsC;AAE3C;AAIA;AAMA;AACD;AAED;AxB4tPA;AACA;AACA;AACA;AACA;AACA;AwB5tPO;AACL;AACE;AACD;AxB8tPH;AwB7tPE;AACE;AACD;AACC;AACD;AACF;AAED;AxB8tPA;AACA;AACA;AACA;AACA;AACA;AwB9tPO;AACL;AACD;AAED;AxB+tPA;AACA;AACA;AACA;AACA;AACA;AwB/tPO;AACL;AACD;AAED;AxBguPA;AACA;AACA;AACA;AACA;AACA;AwBhuPO;AACL;AACE;AACD;AxBkuPH;AwBjuPE;AACD;AAED;AxBkuPA;AACA;AACA;AACA;AACA;AACA;AACA;AwBluPO;AACL;AACE;AACD;AxBouPH;AwBnuPE;AACE;AACD;AxBquPH;AwBpuPE;AACE;AACD;AxBsuPH;AwBruPE;AACD;AAED;AxBsuPA;AACA;AACA;AACA;AACA;AACA;AwBtuPO;AACL;AACD;AAED;AxBuuPA;AACA;AACA;AACA;AACA;AACA;AwBvuPO;AACL;AACE;AACD;AxByuPH;AwBxuPE;AACD;AAED;AxByuPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBzuPO;AACL;AAID;AAED;AxBuuPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBvuPO;AACL;AAAc;AAAqC;AACnD;AAAO;AAAwC;AAA/C;AACD;AAED;AxB6uPA;AACA;AACA;AACA;AACA;AACA;AwB7uPO;AACL;AACE;AACD;AACF;AAED;AxB8uPA;AACA;AACA;AACA;AACA;AACA;AwB9uPO;AACL;AACE;AACD;AxBgvPH;AwB9uPE;AACE;AACD;AACF;AxBgvPD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBpmQA;AzBsmQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBpmQA;AACA;AAEA;AzBqmQA;AACA;AACA;AACA;AACA;AyBpmQA;AACE;AACD;AAED;AzBqmQA;AACA;AACA;AACA;AACA;AACA;AyBrmQO;AACL;AACD;AAED;AzBsmQA;AACA;AACA;AACA;AACA;AACA;AACA;AyBtmQO;AACL;AACD;AAED;AzBumQA;AACA;AACA;AACA;AACA;AACA;AyBvmQO;AACL;AACD;AAED;AzBwmQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBxmQO;AACL;AACD;AAED;AzBymQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBzmQO;AACL;AACE;AACE;AACD;AACF;AzB2mQH;AyB1mQE;AACD;AAED;AzB2mQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyB3mQO;AACL;AAAO;AAAwB;AAA/B;AACD;AzBgnQD;AACA;AACA;AACA;AACA;AACA;AACA;A0BtsQA;A1BwsQA;A0BxtQA;A1B0tQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BrtQA;AAEA;A1BstQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BrtQO;AACL;AAAe;AAA4B;A1BytQ7C;A0BxtQE;AACE;AACD;A1B0tQH;A0BxtQE;A1B0tQF;A0BztQE;AACE;AACA;AAGA;AACD;A1BytQH;A0BxtQE;AACD;A1B0tQD;AACA;AACA;AACA;AACA;AACA;AACA;A2B7wQA;A3B+wQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2B7wQA;A3B+wQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2B7wQO;AAA0D;AAAf;AAAe;A3BkxQjE;A2BjxQE;AACE;AACD;AACC;AACD;AACF;A3BmxQD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Bt0QA;A5Bw0QA;A4Bv0QA;A5By0QA;A4Bx0QA;A5B00QA;A4Bz0QA;A5B20QA;A4B10QA;A5B40QA;A4B30QA;A5B60QA;A4B50QA;A5B80QA;A4B70QA;A5B+0QA;A4B90QA;A5Bg1QA;A4Bx2QA;A5B02QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4B91QA;A5Bg2QA;AACA;A4B91QA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAV+B;AAajC;A5B+1QA;AACA;AACA;AACA;A4B91QA;AAEA;A5B+1QA;AACA;AACA;AACA;AACA;AACA;A4B91QA;AAEA;A5B+1QA;A4B91QA;AAEA;A5B+1QA;A4B91QA;AAEA;A5B+1QA;A4B91QA;AAEA;A5B+1QA;A4B91QA;AAEA;A5B+1QA;A4B91QA;AAEA;AACE;AAA4B;AAC5B;AAA4B;AAC5B;AAA4B;AAG9B;A5Bg2QA;A4B/1QO;AAEP;A5Bg2QA;AACA;AACA;AACA;AACA;AACA;AACA;A4Bj2QO;AACL;AACD;AAED;A5Bk2QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Bl2QO;AACL;AACE;AAAI;AAAmC;AACvC;AACD;A5Bs2QH;A4Bp2QE;AACD;AAED;A5Bq2QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Br2QO;AACL;AACE;AACD;A5Bu2QH;A4Br2QE;AAGA;A5Bq2QF;A4Bp2QE;AACE;AACD;A5Bs2QH;A4Bp2QE;AAAa;AAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A5Bw2QJ;A4Bj3QyC;AAavC;A5Bu2QF;A4Bt2QE;AACE;AACD;AAGD;A5Bs2QF;AACA;A4Bt2QE;AAIE;AACA;AACD;AAGD;A5Bm2QF;AACA;A4Bn2QE;A5Bq2QF;A4Bp2QE;AACE;AACD;AACC;AACD;AACC;AACD;A5Bs2QH;A4Br2QE;A5Bu2QF;A4Bp2QE;A5Bs2QF;A4Bp2QE;AACE;AACD;A5Bs2QH;A4Bp2QE;AACD;AAED;A5Bq2QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Br2QO;AAKL;AACE;AACD;A5Bm2QH;A4Bl2QE;AACA;AAEA;AAOA;AACA;AACD;AACD;A5B61QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4B71QO;AACL;AACA;AACD;AAED;A5B81QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4B91QO;AACL;AACD;AAED;A5B+1QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4B/1QO;AACL;AACA;AACA;AACA;A5Bi2QF;A4Bh2QE;AACE;AACE;AACD;AACF;A5Bk2QH;A4Bj2QE;AACD;AAED;A5Bk2QA;AACA;AACA;AACA;AACA;AACA;AACA;A4Bl2QO;AACL;A5Bo2QF;A4Bn2QE;AACE;A5Bq2QJ;A4Bp2QI;AACE;AACD;AACC;AACE;AAAW;AAAuB;AAClC;AACD;AACF;AACC;AAAW;AAAuB;AAClC;AACD;AACF;A5B02QH;A4Bz2QE;AACD;AAED;A5B02QA;AACA;AACA;AACA;AACA;AACA;A4B12QO;AACL;AACE;AACD;A5B42QH;A4B32QE;AAMD;AAED;A5Bu2QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Bv2QO;AAIL;AADA;AACA;A5Bw2QF;A4Bv2QE;A5By2QF;A4Bl2QE;AAAqB;AAAuB;AAC5C;AASA;AACD;AAED;A5B61QA;AACA;AACA;AACA;AACA;AACA;A4B71QO;AACL;AAKA;AACD;AAED;A5B01QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4B11QO;AACL;AACD;AAED;A5B21QA;AACA;AACA;AACA;AACA;AACA;AACA;A4B31QO;AACL;A5B61QF;A4B51QE;AACE;AACD;A5B81QH;A4B71QE;AACD;AAED;A5B81QA;AACA;AACA;AACA;AACA;AACA;AACA;A4B91QO;AACL;A5Bg2QF;A4B/1QE;AACE;AACD;A5Bi2QH;A4Bh2QE;AACD;AAED;A5Bi2QA;AACA;AACA;AACA;AACA;AACA;A4Bj2QO;AACL;AACE;AACD;A5Bm2QH;A4Bl2QE;AACD;AAED;A5Bm2QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Bn2QO;AACL;AACE;AACD;A5Bq2QH;A4Bp2QE;AACE;AACD;A5Bs2QH;A4Br2QE;AACA;AACD;AAED;A5Bs2QA;AACA;AACA;AACA;AACA;AACA;A4Bt2QO;AACL;AACE;AACD;A5Bw2QH;A4Bv2QE;AACD;AAED;A5Bw2QA;AACA;AACA;AACA;AACA;AACA;AACA;A4Bx2QO;AACL;AACE;AACD;A5B02QH;A4Bz2QE;AACE;AACD;A5B22QH;A4B12QE;AACD;AAED;A5B22QA;AACA;AACA;AACA;AACA;AACA;A4B32QO;AACL;AACA;AACA;AACD;AAED;A5B42QA;AACA;AACA;AACA;AACA;AACA;A4B52QO;AACL;A5B82QF;A4B72QE;AACE;AACD;A5B+2QH;A4B92QE;AACA;AACD;AAED;A5B+2QA;AACA;AACA;AACA;AACA;AACA;AACA;A4B/2QA;AACE;AACE;AACD;A5Bi3QH;A4Bh3QE;A5Bk3QF;A4B32QE;AACD;AAED;A5B42QA;AACA;AACA;AACA;AACA;AACA;AACA;A4B52QO;AACL;AACA;AACA;AACE;AACD;A5B82QH;A4B72QE;AACA;AACA;AACD;AAED;A5B82QA;AACA;AACA;AACA;AACA;AACA;AACA;A4B92QO;AACL;AACE;AACD;A5Bg3QH;AACA;A4B92QE;AACE;AACD;AAGD;AACA;AACA;A5B82QF;AACA;A4B92QE;AACA;AACA;AAKA;AACA;A5B42QF;A4Bv2QE;AACA;AACA;AAMD;AAED;A5Bm2QA;AACA;AACA;AACA;AACA;AACA;AACA;A4Bn2QO;AACL;AACD;AAED;A5Bo2QA;AACA;AACA;AACA;AACA;AACA;AACA;A4Bp2QO;AACL;AACE;AACD;A5Bs2QH;A4Br2QE;AACE;AACD;A5Bu2QH;A4Bt2QE;AACD;AAED;A5Bu2QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Bv2QO;AACL;AACE;AACD;A5By2QH;A4Bx2QE;AACA;A5B02QF;A4Bv2QE;AACE;AACD;A5By2QH;AACA;A4Bv2QE;AACE;AACD;A5By2QH;AACA;A4Bv2QE;AACE;AACD;A5By2QH;AACA;A4Bv2QE;AAKD;AAED;A5Bo2QA;AACA;AACA;AACA;AACA;AACA;AACA;A4Bp2QO;AACL;AACA;AACA;AACD;AAED;A5Bq2QA;AACA;AACA;AACA;AACA;A4Br2QO;AACL;AACA;AACA;AAKD;AAED;A5Bk2QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Bl2QO;AACL;AACD;A5Bo2QD;AACA;AACA;AACA;AACA;AACA;AACA;A6Br/RA;A7Bu/RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bp/RA;A7Bs/RA;A6Br/RA;A7Bu/RA;A6Br/RA;A7Bu/RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Br/RO;AACL;AACA;AACA;AACA;AACE;AAAgB;AADP;AACO;A7B0/RpB;A6Bz/RM;AACA;AACA;AACD;A7B2/RL;A6B1/RI;AACD;AACF;A7B4/RD;AACA;AACA;AACA;AACA;AACA;AACA;A8B7hSA;A9B+hSA;A8B/iSA;A9BijSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8B7iSA;AACA;AAEA;A9B8iSA;AACA;AACA;AACA;AACA;AACA;A8B/iSE;A9BijSF;AACA;A8B/iSE;AACE;AACA;AAEA;A9BgjSJ;A8B/iSI;AAEA;A9BgjSJ;AACA;AACA;AACA;A8B/iSI;AAEA;A9BgjSJ;A8B/iSI;AACD;AAED;A9BgjSF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BljSI;AACD;AAED;A9BmjSF;AACA;AACA;AACA;AACA;AACA;A8BnjSI;A9BqjSJ;A8BpjSI;AACE;AACA;AACD;A9BsjSL;A8BrjSI;AACD;AAED;A9BsjSF;AACA;AACA;AACA;AACA;AACA;A8BtjSI;AACE;AACD;A9BwjSL;A8BvjSI;AAAoB;AAAS;AAAV;AACnB;AACD;AAED;A9B2jSF;AACA;AACA;AACA;AACA;A8B3jSI;AACE;AACD;A9B6jSL;A8B3jSI;AACA;AACA;AACA;A9B6jSJ;A8B5jSI;AAAyB;A9B+jS7B;A8B7jSM;AACE;AACA;AACD;AACF;A9B+jSL;A8B7jSI;AACE;AACA;AACD;AACF;A9B+jSH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BvqSA;A/ByqSA;A+BzrSA;A/B2rSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BvrSA;AACA;AAEA;A/BwrSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BvrSO;AACL;A/ByrSF;A+BxrSE;AACE;AACD;A/B0rSH;A+BzrSE;AACD;AAED;A/B0rSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B1rSO;AACL;AACA;AACA;AAAO;AAA4B;AAAnC;AACD;AAED;A/B8rSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B9rSO;AACL;AACD;AAED;A/B+rSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B/rSO;AACL;AACE;AACD;AACC;AACD;AACF;AAED;A/BgsSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BhsSO;AAA+C;AAAZ;AAAY;A/BqsStD;A+BpsSE;AACA;AAEA;A/BqsSF;A+BpsSE;AACA;AAAY;AAAW;AAAW;AAAvB;A/B0sSb;A+BhtSsD;AAAA;AAAA;AAAA;AAAA;A/BstStD;A+B3sSI;AACE;AACD;A/B6sSL;A+B5sSI;A/B8sSJ;A+B7sSI;AACE;AACD;A/B+sSL;A+B9sSI;AACE;AACA;AACD;A/BgtSL;A+B/sSI;AACE;AAEA;A/BgtSN;A+B/sSM;AACE;A/BitSR;A+BhtSQ;AACE;AAAY;AAAa;AAAa;AAA3B;AACX;AACD;AACF;A/BstSP;A+BrtSM;AACD;AAlCiD;A/B0vStD;A+BjvSE;AAAyB;A/BovS3B;A+BpvS2B;AA0BxB;A/B6tSH;A+B5tSE;AACD;AAED;A/B6tSA;AACA;AACA;AACA;AACA;AACA;A+B7tSO;AACL;AACE;AACE;AACD;A/B+tSL;A+B9tSI;AACD;AACF;A/BguSD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgC13SA;AhC43SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgC13SA;AhC43SA;AACA;AACA;AACA;AACA;AACA;AgC53SE;AhC83SF;AACA;AgC53SE;AACE;AACA;AACD;AAED;AhC63SF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgC/3SI;AhCi4SJ;AgCh4SI;AACE;AACD;AhCk4SL;AgCj4SI;AACD;AAED;AhCk4SF;AACA;AACA;AACA;AACA;AACA;AACA;AgCl4SI;AACE;AACD;AhCo4SL;AgCn4SI;AACA;AAA0B;AAAM;AAAP;AAC1B;AAED;AhCu4SF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCv4SI;AACA;AACA;AhCy4SJ;AgCx4SI;AACE;AhC04SN;AgCx4SM;AACE;AACD;AAED;AACA;AhCy4SN;AACA;AgCz4SM;AACE;AACD;AACC;AACD;AACC;AACD;AACF;AhC24SL;AgC14SI;AACD;AAED;AhC24SF;AACA;AACA;AACA;AACA;AgC34SI;AhC64SJ;AgC54SI;AACE;AACD;AACF;AAED;AhC64SF;AACA;AACA;AACA;AACA;AACA;AACA;AgC74SI;AACE;AACD;AhC+4SL;AgC94SI;AACD;AAED;AhC+4SF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCj5SI;AACD;AhCm5SH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCjhTA;AjCmhTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCjhTA;AjCmhTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCjhTE;AjCmhTF;AACA;AiCjhTE;AACE;AAEA;AjCkhTJ;AACA;AACA;AiCjhTI;AAAmB;AAAO;AACxB;AACA;AACD;AAED;AjCohTJ;AACA;AACA;AiCnhTI;AAEA;AjCohTJ;AACA;AACA;AiCnhTI;AACD;AAGH;AjCmhTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCrhTO;AACL;AACE;AACD;AACF;AAED;AjCshTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCthTO;AAAmC;AAAX;AAAW;AjC2hT1C;AiC1hTE;AACE;AACA;AjC4hTJ;AiC3hTI;AACE;AACD;AjC6hTL;AiC5hTI;AACE;AACD;AjC8hTL;AiC7hTI;AACA;AjC+hTJ;AiC7hTI;AACE;AACE;AACD;AjC+hTP;AiC9hTM;AACE;AACD;AACF;AjCgiTL;AiC/hTI;AACE;AACE;AACD;AjCiiTP;AiChiTM;AACE;AACD;AACF;AjCkiTL;AiCjiTI;AACE;AACD;AACF;AACF;AAED;AjCkiTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCpiTE;AjCsiTF;AACA;AiCpiTE;AACE;AACA;AjCsiTJ;AiCriTI;AACE;AACA;AACD;AAED;AjCsiTJ;AiCriTI;AAEA;AjCsiTJ;AiCriTI;AAEA;AjCsiTJ;AiCriTI;AjCuiTJ;AiCriTI;AACE;AACE;AACD;AACF;AACF;AAED;AjCsiTF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCziTe;AjC2iTf;AiC1iTI;AACA;AAEI;AACE;AACD;AACF;AAEC;AACA;AACA;AACE;AACD;AACF;AAEH;AACD;AAED;AjCwiTF;AACA;AACA;AiCxiTI;AACD;AjC0iTH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkC1uTA;AlC4uTA;AkCzuTA;AlC2uTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCzuTA;AlC2uTA;AkCzuTA;AACE;AACA;AACE;AACD;AlC2uTH;AACA;AkC1uTE;AACE;AACD;AAED;AACA;AlC2uTF;AACA;AkC3uTE;AACE;AACD;AAED;AlC4uTF;AACA;AkC5uTE;AACD;AAED;AlC6uTA;AACA;AACA;AACA;AACA;AACA;AkC7uTO;AACL;AACD;AlC+uTD;AACA;AACA;AFjyTA;AACA","file":"amp-auto-lightbox-0.1.max.js","sourcesContent":["(self.AMP=self.AMP||[]).push({n:\"amp-auto-lightbox\",v:\"1910151804560\",f:(function(AMP,_){\n$1\n})});","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.meetsSizingCriteria = _meetsSizingCriteria;\nexports.isEnabledForDoc = isEnabledForDoc;\nexports.apply = apply;\nexports.runCandidates = runCandidates;\nexports.scan = scan;\nexports.Mutation = exports.DocMetaAnnotations = exports.Scanner = exports.Criteria = exports.VIEWPORT_AREA_RATIO = exports.RENDER_AREA_RATIO = exports.ENABLED_OG_TYPE_ARTICLE = exports.ENABLED_LD_JSON_TYPES = exports.VISITED_ATTR = exports.LIGHTBOXABLE_ATTR = exports.REQUIRED_EXTENSION = void 0;\n\nvar _ampEvents = require(\"../../../src/amp-events\");\n\nvar _autoLightbox = require(\"../../../src/auto-lightbox\");\n\nvar _commonSignals = require(\"../../../src/common-signals\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _dom = require(\"../../../src/dom\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _types = require(\"../../../src/types\");\n\nvar _json = require(\"../../../src/json\");\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Detects <amp-img> elements to set the `lightbox` attribute\n * automatically.\n *\n * This extension is not meant to be included explicitly, e.g. as a script tag.\n * Instead, the runtime loads it when encountering an <amp-img>.\n */\nvar TAG = 'amp-auto-lightbox';\nvar REQUIRED_EXTENSION = 'amp-lightbox-gallery';\nexports.REQUIRED_EXTENSION = REQUIRED_EXTENSION;\nvar LIGHTBOXABLE_ATTR = 'lightbox';\n/** Attribute to mark scanned lightbox candidates as not to revisit. */\n\nexports.LIGHTBOXABLE_ATTR = LIGHTBOXABLE_ATTR;\nvar VISITED_ATTR = 'i-amphtml-auto-lightbox-visited';\n/**\n * Types of document by LD+JSON schema `@type` field where auto-lightbox should\n * be enabled.\n * @private @const {!Object<string|undefined, boolean>}\n */\n\nexports.VISITED_ATTR = VISITED_ATTR;\nvar ENABLED_LD_JSON_TYPES = {\n  'Article': true,\n  'NewsArticle': true,\n  'BlogPosting': true,\n  'LiveBlogPosting': true,\n  'DiscussionForumPosting': true\n};\n/**\n * Only of document type by Open Graph `<meta property=\"og:type\">` where\n * auto-lightbox should be enabled. Top-level og:type set is tiny, and `article`\n * covers all required types.\n */\n\nexports.ENABLED_LD_JSON_TYPES = ENABLED_LD_JSON_TYPES;\nvar ENABLED_OG_TYPE_ARTICLE = 'article';\n/** Factor of naturalArea vs renderArea to lightbox. */\n\nexports.ENABLED_OG_TYPE_ARTICLE = ENABLED_OG_TYPE_ARTICLE;\nvar RENDER_AREA_RATIO = 1.2;\n/** Factor of renderArea vs viewportArea to lightbox. */\n\nexports.RENDER_AREA_RATIO = RENDER_AREA_RATIO;\nvar VIEWPORT_AREA_RATIO = 0.25;\n/**\n * Selector for subnodes by attribute for which the auto-lightbox treatment\n * does not apply. These can be set directly on the candidate or on an ancestor.\n */\n\nexports.VIEWPORT_AREA_RATIO = VIEWPORT_AREA_RATIO;\nvar DISABLED_BY_ATTR = [// Runtime-specific.\n'[placeholder]', // Explicitly opted out.\n'[data-amp-auto-lightbox-disable]', // Considered \"actionable\", i.e. that are bound to a default\n// onclick action(e.g. `button`) or where it cannot be determined whether\n// they're actionable or not (e.g. `amp-script`).\n'amp-selector [option]', // amp-subscriptions actions\n'[subscriptions-action]'].join(',');\n/**\n * Selector for subnodes for which the auto-lightbox treatment does not apply.\n */\n\nvar DISABLED_ANCESTORS = [// Ancestors considered \"actionable\", i.e. that are bound to a default\n// onclick action(e.g. `button`) or where it cannot be determined whether\n// they're actionable or not (e.g. `amp-script`).\n'a[href]', 'amp-script', 'amp-story', 'button', // No nested lightboxes.\n'amp-lightbox', // Already actionable in vast majority of cases, explicit API.\n'amp-carousel'].join(',');\nvar SCRIPT_LD_JSON = 'script[type=\"application/ld+json\"]';\nvar META_OG_TYPE = 'meta[property=\"og:type\"]';\n\nvar NOOP = function NOOP() {};\n/**\n * For better minification.\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @return {!Document|!ShadowRoot}\n */\n\n\nvar getRootNode = function getRootNode(ampdoc) {\n  return ampdoc.getRootNode();\n};\n/** @visibleForTesting */\n\n\nvar Criteria =\n/*#__PURE__*/\nfunction () {\n  function Criteria() {}\n\n  /**\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  Criteria.meetsAll = function meetsAll(element) {\n    return Criteria.meetsSizingCriteria(element) && Criteria.meetsTreeShapeCriteria(element);\n  }\n  /**\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  ;\n\n  Criteria.meetsTreeShapeCriteria = function meetsTreeShapeCriteria(element) {\n    var disabledSelector = DISABLED_ANCESTORS + \",\" + DISABLED_BY_ATTR;\n    var disabledAncestor = (0, _dom.closestAncestorElementBySelector)(element, disabledSelector);\n\n    if (disabledAncestor) {\n      return false;\n    }\n\n    var actions = _services.Services.actionServiceForDoc(element);\n\n    return !actions.hasResolvableAction(element, 'tap');\n  }\n  /**\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  ;\n\n  Criteria.meetsSizingCriteria = function meetsSizingCriteria(element) {\n    var _dev$assertElement = (0, _log.dev)().assertElement(element.querySelector('img')),\n        naturalWidth = _dev$assertElement.naturalWidth,\n        naturalHeight = _dev$assertElement.naturalHeight;\n\n    var _element$getLayoutBox = element.getLayoutBox(),\n        renderWidth = _element$getLayoutBox.width,\n        renderHeight = _element$getLayoutBox.height;\n\n    var viewport = _services.Services.viewportForDoc(element);\n\n    var _viewport$getSize = viewport.getSize(),\n        vw = _viewport$getSize.width,\n        vh = _viewport$getSize.height;\n\n    return _meetsSizingCriteria(renderWidth, renderHeight, naturalWidth, naturalHeight, vw, vh);\n  };\n\n  return Criteria;\n}();\n/**\n * @param {number} renderWidth\n * @param {number} renderHeight\n * @param {number} naturalWidth\n * @param {number} naturalHeight\n * @param {number} vw\n * @param {number} vh\n * @return {boolean}\n * @visibleForTesting\n */\n\n\nexports.Criteria = Criteria;\n\nfunction _meetsSizingCriteria(renderWidth, renderHeight, naturalWidth, naturalHeight, vw, vh) {\n  var viewportArea = vw * vh;\n  var naturalArea = naturalWidth * naturalHeight;\n  var renderArea = renderWidth * renderHeight;\n  var isShrunk = naturalArea / renderArea >= RENDER_AREA_RATIO;\n  var isCoveringSignificantArea = renderArea / viewportArea >= VIEWPORT_AREA_RATIO;\n  var isLargerThanViewport = naturalWidth > vw || naturalHeight > vh;\n  return isShrunk || isLargerThanViewport || isCoveringSignificantArea;\n}\n/**\n * Marks a lightbox candidate as visited as not to rescan on DOM update.\n * @param {!Element} candidate\n * @return {!Promise}\n */\n\n\nfunction markAsVisited(candidate) {\n  return Mutation.mutate(candidate, function () {\n    candidate.setAttribute(VISITED_ATTR, '');\n  });\n}\n/**\n * @param {string} tagName\n * @return {string}\n */\n\n\nfunction candidateSelector(tagName) {\n  return tagName + \":not([\" + LIGHTBOXABLE_ATTR + \"]):not([\" + VISITED_ATTR + \"])\";\n}\n/**\n * @param {!Element} element\n * @return {!Promise}\n */\n\n\nfunction whenLoaded(element) {\n  return (0, _dom.whenUpgradedToCustomElement)(element).then(function (element) {\n    return element.signals().whenSignal(_commonSignals.CommonSignals.LOAD_END);\n  });\n}\n/** @visibleForTesting */\n\n\nvar Scanner =\n/*#__PURE__*/\nfunction () {\n  function Scanner() {}\n\n  /**\n   * Gets all unvisited lightbox candidates.\n   * @param {!Document|!Element} root\n   * @return {!Array<!Element>}\n   */\n  Scanner.getCandidates = function getCandidates(root) {\n    var selector = candidateSelector('amp-img');\n    var candidates = (0, _types.toArray)(root.querySelectorAll(selector));\n    candidates.forEach(markAsVisited);\n    return candidates;\n  };\n\n  return Scanner;\n}();\n/**\n * Parses document metadata annotations as defined by either LD+JSON schema or\n * Open Graph <meta> tags.\n * @visibleForTesting\n */\n\n\nexports.Scanner = Scanner;\n\nvar DocMetaAnnotations =\n/*#__PURE__*/\nfunction () {\n  function DocMetaAnnotations() {}\n\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @return {string|undefined}\n   */\n  DocMetaAnnotations.getOgType = function getOgType(ampdoc) {\n    var tag = getRootNode(ampdoc).querySelector(META_OG_TYPE);\n\n    if (tag) {\n      return tag.getAttribute('content');\n    }\n  }\n  /**\n   * Determines wheter the document type as defined by Open Graph meta tag\n   * e.g. `<meta property=\"og:type\">` is valid.\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @return {boolean}\n   */\n  ;\n\n  DocMetaAnnotations.hasValidOgType = function hasValidOgType(ampdoc) {\n    return DocMetaAnnotations.getOgType(ampdoc) == ENABLED_OG_TYPE_ARTICLE;\n  }\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @return {!Array<string>}\n   */\n  ;\n\n  DocMetaAnnotations.getAllLdJsonTypes = function getAllLdJsonTypes(ampdoc) {\n    return (0, _types.toArray)(getRootNode(ampdoc).querySelectorAll(SCRIPT_LD_JSON)).map(function (_ref) {\n      var textContent = _ref.textContent;\n      return ((0, _json.tryParseJson)(textContent) || {})['@type'];\n    }).filter(function (typeOrUndefined) {\n      return typeOrUndefined;\n    });\n  }\n  /**\n   * Determines wheter one of the document types (field `@type`) defined in\n   * LD+JSON schema is in ENABLED_LD_JSON_TYPES.\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @return {boolean}\n   */\n  ;\n\n  DocMetaAnnotations.hasValidLdJsonType = function hasValidLdJsonType(ampdoc) {\n    return DocMetaAnnotations.getAllLdJsonTypes(ampdoc).some(function (type) {\n      return ENABLED_LD_JSON_TYPES[type];\n    });\n  };\n\n  return DocMetaAnnotations;\n}();\n/**\n * Wrapper for an element-implementation-mutate sequence for readability and\n * mocking in tests.\n * @visibleForTesting\n */\n\n\nexports.DocMetaAnnotations = DocMetaAnnotations;\n\nvar Mutation =\n/*#__PURE__*/\nfunction () {\n  function Mutation() {}\n\n  /**\n   * @param {!Element} ampEl\n   * @param {function()} mutator\n   * @return {!Promise}\n   */\n  Mutation.mutate = function mutate(ampEl, mutator) {\n    return (0, _dom.whenUpgradedToCustomElement)(ampEl).then(function (ampEl) {\n      return ampEl.getResources().mutateElement(ampEl, mutator);\n    });\n  };\n\n  return Mutation;\n}();\n/**\n * Determines whether a document uses `amp-lightbox-gallery` explicitly by\n * including the extension and explicitly lightboxing at least one element.\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @return {boolean}\n */\n\n\nexports.Mutation = Mutation;\n\nfunction usesLightboxExplicitly(ampdoc) {\n  // TODO(alanorozco): Backport into Extensions service.\n  var requiredExtensionSelector = \"script[custom-element=\\\"\" + REQUIRED_EXTENSION + \"\\\"]\";\n  var lightboxedElementsSelector = \"[\" + LIGHTBOXABLE_ATTR + \"]:not([\" + VISITED_ATTR + \"])\";\n\n  var exists = function exists(selector) {\n    return !!getRootNode(ampdoc).querySelector(selector);\n  };\n\n  return exists(requiredExtensionSelector) && exists(lightboxedElementsSelector);\n}\n/**\n * Determines whether auto-lightbox is enabled for a document.\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @return {boolean}\n * @visibleForTesting\n */\n\n\nfunction isEnabledForDoc(ampdoc) {\n  if (usesLightboxExplicitly(ampdoc)) {\n    return false;\n  }\n\n  return DocMetaAnnotations.hasValidOgType(ampdoc) || DocMetaAnnotations.hasValidLdJsonType(ampdoc);\n}\n/** @private {number} */\n\n\nvar uid = 0;\n/**\n * Generates a unique id for lightbox grouping.\n * @return {string}\n */\n\nfunction generateLightboxUid() {\n  return \"i-amphtml-auto-lightbox-\" + uid++;\n}\n/**\n * Lightboxes an element.\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @param {!Element} element\n * @return {!Promise<!Element>}\n * @visibleForTesting\n */\n\n\nfunction apply(ampdoc, element) {\n  return Mutation.mutate(element, function () {\n    element.setAttribute(LIGHTBOXABLE_ATTR, generateLightboxUid());\n  }).then(function () {\n    _services.Services.extensionsFor(ampdoc.win).installExtensionForDoc(ampdoc, REQUIRED_EXTENSION);\n\n    element.dispatchCustomEvent(_autoLightbox.AutoLightboxEvents.NEWLY_SET);\n    return element;\n  });\n}\n/**\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @param {!Array<!Element>} candidates\n * @return {!Array<!Promise<!Element|undefined>>}\n */\n\n\nfunction runCandidates(ampdoc, candidates) {\n  return candidates.map(function (candidate) {\n    return whenLoaded(candidate).then(function () {\n      if (!Criteria.meetsAll(candidate)) {\n        return;\n      }\n\n      (0, _log.dev)().info(TAG, 'apply', candidate);\n      return apply(ampdoc, candidate);\n    }, NOOP);\n  });\n}\n/**\n * Scans a document on initialization to lightbox elements that meet criteria.\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @param {!Element=} opt_root\n * @return {!Array<!Promise>|undefined}\n */\n\n\nfunction scan(ampdoc, opt_root) {\n  if (!isEnabledForDoc(ampdoc)) {\n    (0, _log.dev)().info(TAG, 'disabled');\n    return;\n  }\n\n  var root = opt_root || ampdoc.win.document;\n  return runCandidates(ampdoc, Scanner.getCandidates(root));\n}\n\nAMP.extension(TAG, '0.1', function (_ref2) {\n  var ampdoc = _ref2.ampdoc;\n  ampdoc.whenReady().then(function () {\n    getRootNode(ampdoc).addEventListener(_ampEvents.AmpEvents.DOM_UPDATE, function (_ref3) {\n      var target = _ref3.target;\n      scan(ampdoc, (0, _log.dev)().assertElement(target));\n    });\n    scan(ampdoc);\n  });\n});\n\n},{\"../../../src/amp-events\":2,\"../../../src/auto-lightbox\":3,\"../../../src/common-signals\":5,\"../../../src/dom\":8,\"../../../src/json\":15,\"../../../src/log\":16,\"../../../src/services\":21,\"../../../src/types\":25}],2:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.AmpEvents = void 0;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common AMP events.\n * @enum {string}\n */\nvar AmpEvents = {\n  DOM_UPDATE: 'amp:dom-update',\n  FORM_DIRTINESS_CHANGE: 'amp:form-dirtiness-change',\n  FORM_VALUE_CHANGE: 'amp:form-value-change',\n  VISIBILITY_CHANGE: 'amp:visibilitychange',\n  // https://github.com/ampproject/amphtml/blob/master/ads/README.md#page-visibility\n  // The following codes are only used for testing.\n  // TODO(choumx): Move these to a separate enum so they can be DCE'd.\n  ATTACHED: 'amp:attached',\n  STUBBED: 'amp:stubbed',\n  LOAD_START: 'amp:load:start',\n  LOAD_END: 'amp:load:end',\n  ERROR: 'amp:error',\n  SIZE_CHANGED: 'amp:size-changed'\n};\nexports.AmpEvents = AmpEvents;\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.installAutoLightboxExtension = installAutoLightboxExtension;\nexports.isActionableByTap = isActionableByTap;\nexports.AutoLightboxEvents = void 0;\n\nvar _chunk = require(\"./chunk\");\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\nvar _format = require(\"./format\");\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const @enum {string} */\nvar AutoLightboxEvents = {\n  // Triggered when the lightbox attribute is newly set on an item in order to\n  // process by the renderer extension (e.g. amp-lightbox-gallery).\n  NEWLY_SET: 'amp-auto-lightbox:newly-set'\n};\n/**\n * Installs the amp-auto-lightbox extension.\n *\n * This extension conditionally loads amp-lightbox-gallery for images and videos\n * that fulfill a set criteria on certain documents.\n *\n * Further information on spec/auto-lightbox.md and the amp-auto-lightbox extension\n * code.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\n\nexports.AutoLightboxEvents = AutoLightboxEvents;\n\nfunction installAutoLightboxExtension(ampdoc) {\n  var win = ampdoc.win; // Only enabled on single documents tagged as <html amp> or <html ⚡>.\n\n  if (!(0, _format.isAmphtml)(win.document) || !ampdoc.isSingleDoc()) {\n    return;\n  }\n\n  (0, _chunk.chunk)(ampdoc, function () {\n    _services.Services.extensionsFor(win).installExtensionForDoc(ampdoc, 'amp-auto-lightbox');\n  }, _chunk.ChunkPriority.LOW);\n}\n/**\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isActionableByTap(element) {\n  if (element.tagName.toLowerCase() == 'a' && element.hasAttribute('href')) {\n    return true;\n  }\n\n  if (element.querySelector('a[href]')) {\n    return true;\n  }\n\n  var action = _services.Services.actionServiceForDoc(element);\n\n  var hasTapAction = action.hasResolvableAction(element, 'tap', (0, _log.dev)().assertElement(element.parentElement));\n\n  if (hasTapAction) {\n    return true;\n  }\n\n  var actionables = element.querySelectorAll('[on]');\n\n  for (var i = 0; i < actionables.length; i++) {\n    var actionable = actionables[i];\n\n    var _hasTapAction = action.hasResolvableAction(actionable, 'tap', (0, _log.dev)().assertElement(actionable.parentElement));\n\n    if (_hasTapAction) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n},{\"./chunk\":4,\"./format\":13,\"./log\":16,\"./services\":21}],4:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.startupChunk = startupChunk;\nexports.chunk = chunk;\nexports.chunkInstanceForTesting = chunkInstanceForTesting;\nexports.deactivateChunking = deactivateChunking;\nexports.activateChunkingForTesting = activateChunkingForTesting;\nexports.runChunksForTesting = runChunksForTesting;\nexports.onIdle = onIdle;\nexports.ChunkPriority = void 0;\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\nvar _eventHelper = require(\"./event-helper\");\n\nvar _service = require(\"./service\");\n\nvar _experiments = require(\"./experiments\");\n\nvar _styleInstaller = require(\"./style-installer\");\n\nvar _priorityQueue = _interopRequireDefault(require(\"./utils/priority-queue\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @const {string}\n */\nvar TAG = 'CHUNK';\n/**\n * @type {boolean}\n */\n\nvar deactivated = /nochunking=1/.test(self.location.hash);\n/**\n * @const {!Promise}\n */\n\nvar resolved = Promise.resolve();\n/**\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!Chunks}\n * @private\n */\n\nfunction chunkServiceForDoc(elementOrAmpDoc) {\n  (0, _service.registerServiceBuilderForDoc)(elementOrAmpDoc, 'chunk', Chunks);\n  return (0, _service.getServiceForDoc)(elementOrAmpDoc, 'chunk');\n}\n/**\n * Run the given function. For visible documents the function will be\n * called in a micro task (Essentially ASAP). If the document is\n * not visible, tasks will yield to the event loop (to give the browser\n * time to do other things) and may even be further delayed until\n * there is time.\n *\n * @param {!Document|!./service/ampdoc-impl.AmpDoc} doc\n * @param {function(?IdleDeadline)} fn\n * @param {boolean=} opt_makesBodyVisible Pass true if this service makes\n *     the body visible. This is relevant because it may influence the\n *     task scheduling strategy.\n */\n\n\nfunction startupChunk(doc, fn, opt_makesBodyVisible) {\n  if (deactivated) {\n    resolved.then(fn);\n    return;\n  }\n\n  var service = chunkServiceForDoc(doc.documentElement || doc);\n  service.runForStartup(fn);\n\n  if (opt_makesBodyVisible) {\n    service.runForStartup(function () {\n      service.bodyIsVisible_ = true;\n    });\n  }\n}\n/**\n * Run the given function sometime in the future without blocking UI.\n *\n * Higher priority tasks are executed before lower priority tasks.\n * Tasks with the same priority are executed in FIFO order.\n *\n * Uses `requestIdleCallback` if available and passes the `IdleDeadline`\n * object to the function, which can be used to perform a variable amount\n * of work depending on the remaining amount of idle time.\n *\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {function(?IdleDeadline)} fn\n * @param {ChunkPriority} priority\n */\n\n\nfunction chunk(elementOrAmpDoc, fn, priority) {\n  if (deactivated) {\n    resolved.then(fn);\n    return;\n  }\n\n  var service = chunkServiceForDoc(elementOrAmpDoc);\n  service.run(fn, priority);\n}\n/**\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!Chunks}\n */\n\n\nfunction chunkInstanceForTesting(elementOrAmpDoc) {\n  return chunkServiceForDoc(elementOrAmpDoc);\n}\n/**\n * Use a standard micro task for every invocation. This should only\n * be called from the AMP bootstrap script if it is known that\n * chunking makes no sense. In particular this is the case when\n * AMP runs in the `amp-shadow` multi document mode.\n */\n\n\nfunction deactivateChunking() {\n  deactivated = true;\n}\n/**\n * @visibleForTesting\n */\n\n\nfunction activateChunkingForTesting() {\n  deactivated = false;\n}\n/**\n * Runs all currently scheduled chunks.\n * Independent of errors it will unwind the queue. Will afterwards\n * throw the first encountered error.\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n */\n\n\nfunction runChunksForTesting(elementOrAmpDoc) {\n  var service = chunkInstanceForTesting(elementOrAmpDoc);\n  var errors = [];\n\n  while (true) {\n    try {\n      if (!service.execute_(\n      /* idleDeadline */\n      null)) {\n        break;\n      }\n    } catch (e) {\n      errors.push(e);\n    }\n  }\n\n  if (errors.length) {\n    throw errors[0];\n  }\n}\n/**\n * The priority of a chunk task. Higher priority tasks have higher values.\n * @enum {number}\n */\n\n\nvar ChunkPriority = {\n  HIGH: 20,\n  LOW: 10,\n  BACKGROUND: 0\n};\n/** @enum {string} */\n\nexports.ChunkPriority = ChunkPriority;\nvar TaskState = {\n  NOT_RUN: 'not_run',\n  RUN: 'run'\n};\n/**\n * A default chunkable task.\n * @private\n */\n\nvar Task =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {function(?IdleDeadline)} fn\n   */\n  function Task(fn) {\n    /** @public {TaskState} */\n    this.state = TaskState.NOT_RUN;\n    /** @private @const {!function(?IdleDeadline)} */\n\n    this.fn_ = fn;\n  }\n  /**\n   * Executes the wrapped function.\n   * @param {?IdleDeadline} idleDeadline\n   * @throws {Error}\n   * @protected\n   */\n\n\n  var _proto = Task.prototype;\n\n  _proto.runTask_ = function runTask_(idleDeadline) {\n    if (this.state == TaskState.RUN) {\n      return;\n    }\n\n    this.state = TaskState.RUN;\n\n    try {\n      this.fn_(idleDeadline);\n    } catch (e) {\n      this.onTaskError_(e);\n      throw e;\n    }\n  }\n  /**\n   * @return {string}\n   * @protected\n   */\n  ;\n\n  _proto.getName_ = function getName_() {\n    return this.fn_.displayName || this.fn_.name;\n  }\n  /**\n   * Optional handling when a task run throws an error.\n   * @param {Error} unusedError\n   * @private\n   */\n  ;\n\n  _proto.onTaskError_ = function onTaskError_(unusedError) {} // By default, no-op.\n\n  /**\n   * Returns true if this task should be run without delay.\n   * @return {boolean}\n   * @protected\n   */\n  ;\n\n  _proto.immediateTriggerCondition_ = function immediateTriggerCondition_() {\n    // By default, there are no immediate trigger conditions.\n    return false;\n  }\n  /**\n   * Returns true if this task should be scheduled using `requestIdleCallback`.\n   * Otherwise, task is scheduled as macro-task on next event loop.\n   * @return {boolean}\n   * @protected\n   */\n  ;\n\n  _proto.useRequestIdleCallback_ = function useRequestIdleCallback_() {\n    // By default, never use requestIdleCallback.\n    return false;\n  };\n\n  return Task;\n}();\n/**\n * A task that's run as part of AMP's startup sequence.\n * @private\n */\n\n\nvar StartupTask =\n/*#__PURE__*/\nfunction (_Task) {\n  _inheritsLoose(StartupTask, _Task);\n\n  /**\n   * @param {function(?IdleDeadline)} fn\n   * @param {!Window} win\n   * @param {!Chunks} chunks\n   */\n  function StartupTask(fn, win, chunks) {\n    var _this;\n\n    _this = _Task.call(this, fn) || this;\n    /** @private @const */\n\n    _this.chunks_ = chunks;\n    return _this;\n  }\n  /** @override */\n\n\n  var _proto2 = StartupTask.prototype;\n\n  _proto2.onTaskError_ = function onTaskError_(unusedError) {\n    // Startup tasks run early in init. All errors should show the doc.\n    (0, _styleInstaller.makeBodyVisibleRecovery)(self.document);\n  }\n  /** @override */\n  ;\n\n  _proto2.immediateTriggerCondition_ = function immediateTriggerCondition_() {\n    // Run in a micro task when the doc is visible. Otherwise, run after\n    // having yielded to the event queue once.\n    return this.isVisible_();\n  }\n  /** @override */\n  ;\n\n  _proto2.useRequestIdleCallback_ = function useRequestIdleCallback_() {\n    // We only start using requestIdleCallback when the core runtime has\n    // been initialized. Otherwise we risk starving ourselves\n    // before the render-critical work is done.\n    return this.chunks_.coreReady_;\n  }\n  /**\n   * @return {boolean}\n   * @private\n   */\n  ;\n\n  _proto2.isVisible_ = function isVisible_() {\n    return this.chunks_.ampdoc.isVisible();\n  };\n\n  return StartupTask;\n}(Task);\n/**\n * Handles queueing, scheduling and executing tasks.\n */\n\n\nvar Chunks =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!./service/ampdoc-impl.AmpDoc} ampDoc\n   */\n  function Chunks(ampDoc) {\n    var _this2 = this;\n\n    /** @protected @const {!./service/ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampDoc;\n    /** @private @const {!Window} */\n\n    this.win_ = ampDoc.win;\n    /** @private @const {!PriorityQueue<Task>} */\n\n    this.tasks_ = new _priorityQueue.default();\n    /** @private @const {function(?IdleDeadline)} */\n\n    this.boundExecute_ = this.execute_.bind(this);\n    /** @private {number} */\n\n    this.durationOfLastExecution_ = 0;\n    /** @private {boolean} */\n\n    this.macroAfterLongTask_ = (0, _experiments.isExperimentOn)(this.win_, 'macro-after-long-task');\n    /**\n     * Set to true if we scheduled a macro or micro task to execute the next\n     * task. If true, we don't schedule another one.\n     * Not set to true if we use rIC, because we always want to transition\n     * to immeditate invocation from that state.\n     * @private {boolean}\n     */\n\n    this.scheduledImmediateInvocation_ = false;\n    /** @private {boolean} Whether the document can actually be painted. */\n\n    this.bodyIsVisible_ = this.win_.document.documentElement.hasAttribute('i-amphtml-no-boilerplate');\n    this.win_.addEventListener('message', function (e) {\n      if ((0, _eventHelper.getData)(e) == 'amp-macro-task') {\n        _this2.execute_(\n        /* idleDeadline */\n        null);\n      }\n    });\n    /** @protected {boolean} */\n\n    this.coreReady_ = false;\n\n    _services.Services.viewerPromiseForDoc(ampDoc).then(function () {\n      // Once the viewer has been resolved, most of core runtime has been\n      // initialized as well.\n      _this2.coreReady_ = true;\n    });\n\n    ampDoc.onVisibilityChanged(function () {\n      if (ampDoc.isVisible()) {\n        _this2.schedule_();\n      }\n    });\n  }\n  /**\n   * Run fn as a \"chunk\".\n   * @param {function(?IdleDeadline)} fn\n   * @param {number} priority\n   */\n\n\n  var _proto3 = Chunks.prototype;\n\n  _proto3.run = function run(fn, priority) {\n    var t = new Task(fn);\n    this.enqueueTask_(t, priority);\n  }\n  /**\n   * Run a fn that's part of AMP's startup sequence as a \"chunk\".\n   * @param {function(?IdleDeadline)} fn\n   */\n  ;\n\n  _proto3.runForStartup = function runForStartup(fn) {\n    var t = new StartupTask(fn, this.win_, this);\n    this.enqueueTask_(t, Number.POSITIVE_INFINITY);\n  }\n  /**\n   * Queues a task to be executed later with given priority.\n   * @param {!Task} task\n   * @param {number} priority\n   * @private\n   */\n  ;\n\n  _proto3.enqueueTask_ = function enqueueTask_(task, priority) {\n    this.tasks_.enqueue(task, priority);\n    this.schedule_();\n  }\n  /**\n   * Returns the next task that hasn't been run yet.\n   * If `opt_dequeue` is true, remove the returned task from the queue.\n   * @param {boolean=} opt_dequeue\n   * @return {?Task}\n   * @private\n   */\n  ;\n\n  _proto3.nextTask_ = function nextTask_(opt_dequeue) {\n    var t = this.tasks_.peek(); // Dequeue tasks until we find one that hasn't been run yet.\n\n    while (t && t.state !== TaskState.NOT_RUN) {\n      this.tasks_.dequeue();\n      t = this.tasks_.peek();\n    } // If `opt_dequeue` is true, remove this task from the queue.\n\n\n    if (t && opt_dequeue) {\n      this.tasks_.dequeue();\n    }\n\n    return t;\n  }\n  /**\n   * Run a task.\n   * Schedule the next round if there are more tasks.\n   * @param {?IdleDeadline} idleDeadline\n   * @return {boolean} Whether anything was executed.\n   * @private\n   */\n  ;\n\n  _proto3.execute_ = function execute_(idleDeadline) {\n    var _this3 = this;\n\n    var t = this.nextTask_(\n    /* opt_dequeue */\n    true);\n\n    if (!t) {\n      this.scheduledImmediateInvocation_ = false;\n      this.durationOfLastExecution_ = 0;\n      return false;\n    }\n\n    var before;\n\n    try {\n      before = Date.now();\n      t.runTask_(idleDeadline);\n    } finally {\n      // We want to capture the time of the entire task duration including\n      // scheduled immediate (from resolved promises) micro tasks.\n      // Lacking a better way to do this we just scheduled 10 nested\n      // micro tasks.\n      resolved.then().then().then().then().then().then().then().then().then(function () {\n        _this3.scheduledImmediateInvocation_ = false;\n        _this3.durationOfLastExecution_ += Date.now() - before;\n        (0, _log.dev)().fine(TAG, t.getName_(), 'Chunk duration', Date.now() - before, _this3.durationOfLastExecution_);\n\n        _this3.schedule_();\n      });\n    }\n\n    return true;\n  }\n  /**\n   * Calls `execute_()` asynchronously.\n   * @param {?IdleDeadline} idleDeadline\n   * @private\n   */\n  ;\n\n  _proto3.executeAsap_ = function executeAsap_(idleDeadline) {\n    var _this4 = this;\n\n    // If we've spent over 5 millseconds executing the\n    // last instruction yeild back to the main thread.\n    // 5 milliseconds is a magic number.\n    if (this.macroAfterLongTask_ && this.bodyIsVisible_ && this.durationOfLastExecution_ > 5) {\n      this.durationOfLastExecution_ = 0;\n      this.requestMacroTask_();\n      return;\n    }\n\n    resolved.then(function () {\n      _this4.boundExecute_(idleDeadline);\n    });\n  }\n  /**\n   * Schedule running the next queued task.\n   * @private\n   */\n  ;\n\n  _proto3.schedule_ = function schedule_() {\n    if (this.scheduledImmediateInvocation_) {\n      return;\n    }\n\n    var nextTask = this.nextTask_();\n\n    if (!nextTask) {\n      return;\n    }\n\n    if (nextTask.immediateTriggerCondition_()) {\n      this.scheduledImmediateInvocation_ = true;\n      this.executeAsap_(\n      /* idleDeadline */\n      null);\n      return;\n    } // If requestIdleCallback exists, schedule a task with it, but\n    // do not wait longer than two seconds.\n\n\n    if (nextTask.useRequestIdleCallback_() && this.win_.requestIdleCallback) {\n      onIdle(this.win_, // Wait until we have a budget of at least 15ms.\n      // 15ms is a magic number. Budgets are higher when the user\n      // is completely idle (around 40), but that occurs too\n      // rarely to be usable. 15ms budgets can happen during scrolling\n      // but only if the device is doing super, super well, and no\n      // real processing is done between frames.\n      15\n      /* minimumTimeRemaining */\n      , 2000\n      /* timeout */\n      , this.boundExecute_);\n      return;\n    }\n\n    this.requestMacroTask_();\n  }\n  /**\n   * Requests executing of a macro task. Yields to the event queue\n   * before executing the task.\n   * Places task on browser message queue which then respectively\n   * triggers dequeuing and execution of a chunk.\n   */\n  ;\n\n  _proto3.requestMacroTask_ = function requestMacroTask_() {\n    // The message doesn't actually matter.\n    this.win_.\n    /*OK*/\n    postMessage('amp-macro-task', '*');\n  };\n\n  return Chunks;\n}();\n/**\n * Delays calling the given function until the browser is notifying us\n * about a certain minimum budget or the timeout is reached.\n * @param {!Window} win\n * @param {number} minimumTimeRemaining Minimum number of millis idle\n *     budget for callback to fire.\n * @param {number} timeout in millis for callback to fire.\n * @param {function(?IdleDeadline)} fn Callback.\n * @visibleForTesting\n */\n\n\nfunction onIdle(win, minimumTimeRemaining, timeout, fn) {\n  var startTime = Date.now();\n  /**\n   * @param {!IdleDeadline} info\n   */\n\n  function rIC(info) {\n    if (info.timeRemaining() < minimumTimeRemaining) {\n      var remainingTimeout = timeout - (Date.now() - startTime);\n\n      if (remainingTimeout <= 0 || info.didTimeout) {\n        (0, _log.dev)().fine(TAG, 'Timed out', timeout, info.didTimeout);\n        fn(info);\n      } else {\n        (0, _log.dev)().fine(TAG, 'Rescheduling with', remainingTimeout, info.timeRemaining());\n        win.requestIdleCallback(rIC, {\n          timeout: remainingTimeout\n        });\n      }\n    } else {\n      (0, _log.dev)().fine(TAG, 'Running idle callback with ', minimumTimeRemaining);\n      fn(info);\n    }\n  }\n\n  win.requestIdleCallback(rIC, {\n    timeout: timeout\n  });\n}\n\n},{\"./event-helper\":11,\"./experiments\":12,\"./log\":16,\"./service\":20,\"./services\":21,\"./style-installer\":23,\"./utils/priority-queue\":32}],5:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.CommonSignals = void 0;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Commonly used signals across different elements and documents.\n * @enum {string}\n */\nvar CommonSignals = {\n  /**\n   * The element has been upgraded from ElementStub to its real implementation.\n   */\n  UPGRADED: 'upgraded',\n\n  /**\n   * The element has been built.\n   */\n  BUILT: 'built',\n\n  /**\n   * The element has started loading.\n   * LOAD_START triggers at the start of the layoutCallback.\n   */\n  LOAD_START: 'load-start',\n\n  /**\n   * Rendering has been confirmed to have been started.\n   * It is a signal to indicate meaningful display (e.g. text could be displayed\n   * CSS is correctly installed/applied).\n   *\n   * Elements can optionally implement RENDER_START signal. (e.g. ad, shadowdoc)\n   * if it want to define its own meaningful display time and toggle visibility.\n   *\n   * Simpler elements's RENDER_START can be equal to the start of the\n   * buildCallback\n   */\n  RENDER_START: 'render-start',\n\n  /**\n   * The element has been loaded.\n   * LOAD_END triggers at the end of the layoutCallback.\n   *\n   */\n  LOAD_END: 'load-end',\n\n  /**\n   * The initial contents of an element/document/embed have been loaded.\n   * INI_LOAD is an optional signal, implemented by ads, story, and elements\n   * that consist of other resources.\n   * It instructs that all critical resources has been loaded, and can be used\n   * for more accurate visibility measurement.\n   * When an element doesn't consist multiple child resources, LOAD_END signal\n   * can be used to indicate resource load completion.\n   * Note: Based on the implementation, INI_LOAD can trigger before or after\n   * LOAD_END.\n   */\n  INI_LOAD: 'ini-load',\n\n  /**\n   * The element has been unlaid out.\n   */\n  UNLOAD: 'unload'\n};\nexports.CommonSignals = CommonSignals;\n\n},{}],6:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.config = exports.urls = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nvar env = self.AMP_CONFIG || {};\nvar thirdPartyFrameRegex = typeof env['thirdPartyFrameRegex'] == 'string' ? new RegExp(env['thirdPartyFrameRegex']) : env['thirdPartyFrameRegex'];\nvar cdnProxyRegex = typeof env['cdnProxyRegex'] == 'string' ? new RegExp(env['cdnProxyRegex']) : env['cdnProxyRegex'];\n/** @type {!Object<string, string|boolean|RegExp|Array<RegExp>>} */\n\nvar urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex: thirdPartyFrameRegex || /^d-\\d+\\.ampproject\\.net$/,\n  cdn: env['cdnUrl'] || 'https://cdn.ampproject.org',\n\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex: cdnProxyRegex || /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting: env['errorReportingUrl'] || 'https://amp-error-reporting.appspot.com/r',\n  localDev: env['localDev'] || false,\n\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/master/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [/(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/, /(^|\\.)gmail\\.dev$/]\n};\nexports.urls = urls;\nvar config = {\n  urls: urls\n};\nexports.config = config;\n\n},{}],7:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.assertIsName = assertIsName;\nexports.setScopeSelectorSupportedForTesting = setScopeSelectorSupportedForTesting;\nexports.isScopeSelectorSupported = isScopeSelectorSupported;\nexports.prependSelectorsWith = prependSelectorsWith;\nexports.escapeCssSelectorIdent = escapeCssSelectorIdent;\nexports.escapeCssSelectorNth = escapeCssSelectorNth;\n\nvar _cssEscape = require(\"../third_party/css-escape/css-escape\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nfunction assertIsName(name) {\n  (0, _log.devAssert)(/^[\\w-]+$/.test(name));\n}\n/**\n * @type {boolean|undefined}\n */\n\n\nvar scopeSelectorSupported;\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\n\nfunction setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\n\n\nfunction isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return scopeSelectorSupported = testScopeSelector(el);\n}\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\n\n\nfunction testScopeSelector(el) {\n  try {\n    var doc = el.ownerDocument;\n    var testElement = doc.createElement('div');\n    var testChild = doc.createElement('div');\n    testElement.appendChild(testChild); // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n\n    return testElement.\n    /*OK*/\n    querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\n\n\nfunction prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, \"$&\" + distribute + \" \");\n}\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n */\n\n\nfunction escapeCssSelectorIdent(ident) {\n  return (0, _cssEscape.cssEscape)(ident);\n}\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\n\n\nfunction escapeCssSelectorNth(ident) {\n  var escaped = String(ident); // Ensure it doesn't close the nth-child psuedo class.\n\n  (0, _log.devAssert)(escaped.indexOf(')') === -1);\n  return escaped;\n}\n\n},{\"../third_party/css-escape/css-escape\":34,\"./log\":16}],8:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.waitForChild = waitForChild;\nexports.waitForChildPromise = waitForChildPromise;\nexports.waitForBodyOpen = waitForBodyOpen;\nexports.waitForBodyOpenPromise = waitForBodyOpenPromise;\nexports.removeElement = removeElement;\nexports.removeChildren = removeChildren;\nexports.copyChildren = copyChildren;\nexports.insertAfterOrAtStart = insertAfterOrAtStart;\nexports.addAttributesToElement = addAttributesToElement;\nexports.createElementWithAttributes = createElementWithAttributes;\nexports.isConnectedNode = isConnectedNode;\nexports.rootNodeFor = rootNodeFor;\nexports.isShadowRoot = isShadowRoot;\nexports.closest = closest;\nexports.closestNode = closestNode;\nexports.closestAncestorElementBySelector = closestAncestorElementBySelector;\nexports.ancestorElements = ancestorElements;\nexports.ancestorElementsByTag = ancestorElementsByTag;\nexports.childElement = childElement;\nexports.childElements = childElements;\nexports.lastChildElement = lastChildElement;\nexports.childNodes = childNodes;\nexports.childElementByAttr = childElementByAttr;\nexports.lastChildElementByAttr = lastChildElementByAttr;\nexports.childElementsByAttr = childElementsByAttr;\nexports.childElementByTag = childElementByTag;\nexports.childElementsByTag = childElementsByTag;\nexports.matches = matches;\nexports.elementByTag = elementByTag;\nexports.scopedQuerySelector = scopedQuerySelector;\nexports.scopedQuerySelectorAll = scopedQuerySelectorAll;\nexports.getDataParamsFromAttributes = getDataParamsFromAttributes;\nexports.hasNextNodeInDocumentOrder = hasNextNodeInDocumentOrder;\nexports.templateContentClone = templateContentClone;\nexports.iterateCursor = iterateCursor;\nexports.openWindowDialog = openWindowDialog;\nexports.isJsonScriptTag = isJsonScriptTag;\nexports.isJsonLdScriptTag = isJsonLdScriptTag;\nexports.isRTL = isRTL;\nexports.escapeHtml = escapeHtml;\nexports.tryFocus = tryFocus;\nexports.isIframed = isIframed;\nexports.isAmpElement = isAmpElement;\nexports.whenUpgradedToCustomElement = whenUpgradedToCustomElement;\nexports.fullscreenEnter = fullscreenEnter;\nexports.fullscreenExit = fullscreenExit;\nexports.isFullscreenElement = isFullscreenElement;\nexports.isEnabled = isEnabled;\nexports.domOrderComparator = domOrderComparator;\nexports.toggleAttribute = toggleAttribute;\nexports.getVerticalScrollbarWidth = getVerticalScrollbarWidth;\nexports.UPGRADE_TO_CUSTOMELEMENT_RESOLVER = exports.UPGRADE_TO_CUSTOMELEMENT_PROMISE = void 0;\n\nvar _promise = require(\"./utils/promise\");\n\nvar _css = require(\"./css\");\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object\");\n\nvar _string = require(\"./string\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;'\n};\nvar HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n/** @const {string} */\n\nvar UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n/** @const {string} */\n\nexports.UPGRADE_TO_CUSTOMELEMENT_PROMISE = UPGRADE_TO_CUSTOMELEMENT_PROMISE;\nvar UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\n\nexports.UPGRADE_TO_CUSTOMELEMENT_RESOLVER = UPGRADE_TO_CUSTOMELEMENT_RESOLVER;\n\nfunction waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n\n\n  var win = (0, _types.toWin)(parent.ownerDocument.defaultView);\n\n  if (win.MutationObserver) {\n    /** @const {MutationObserver} */\n    var observer = new win.MutationObserver(function () {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {\n      childList: true\n    });\n  } else {\n    /** @const {number} */\n    var interval = win.setInterval(function () {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    },\n    /* milliseconds */\n    5);\n  }\n}\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\n\n\nfunction waitForChildPromise(parent, checkFunc) {\n  return new Promise(function (resolve) {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\n\n\nfunction waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, function () {\n    return !!doc.body;\n  }, callback);\n}\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\n\n\nfunction waitForBodyOpenPromise(doc) {\n  return new Promise(function (resolve) {\n    return waitForBodyOpen(doc, resolve);\n  });\n}\n/**\n * Removes the element.\n * @param {!Element} element\n */\n\n\nfunction removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element} parent\n */\n\n\nfunction removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\n\n\nfunction copyChildren(from, to) {\n  var frag = to.ownerDocument.createDocumentFragment();\n\n  for (var n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n\n  to.appendChild(frag);\n}\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node} after\n */\n\n\nfunction insertAfterOrAtStart(root, element, after) {\n  var before = after ? after.nextSibling : root.firstChild;\n  root.insertBefore(element, before);\n}\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\n\n\nfunction addAttributesToElement(element, attributes) {\n  for (var attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n\n  return element;\n}\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\n\n\nfunction createElementWithAttributes(doc, tagName, attributes) {\n  var element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\n\n\nfunction isConnectedNode(node) {\n  var connected = node.isConnected;\n\n  if (connected !== undefined) {\n    return connected;\n  } // \"An element is connected if its shadow-including root is a document.\"\n\n\n  var n = node;\n\n  do {\n    n = rootNodeFor(n);\n\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\n\n\nfunction rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n\n  var n; // Check isShadowRoot() is only needed for the polyfill case.\n\n  for (n = node; !!n.parentNode && !isShadowRoot(n); n = n.parentNode) {}\n\n  return n;\n}\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isShadowRoot(value) {\n  // TODO(#22733): remove in preference to dom's `rootNodeFor`.\n  if (!value) {\n    return false;\n  } // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n\n\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n\n  return value.nodeType ==\n  /* DOCUMENT_FRAGMENT */\n  11 && Object.prototype.toString.call(value) === '[object ShadowRoot]';\n}\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\n\n\nfunction closest(element, callback, opt_stopAt) {\n  for (var el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\n\n\nfunction closestNode(node, callback) {\n  for (var n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\n\n\nfunction closestAncestorElementBySelector(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  return closest(element, function (el) {\n    return matches(el, selector);\n  });\n}\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\n\n\nfunction ancestorElements(child, predicate) {\n  var ancestors = [];\n\n  for (var ancestor = child.parentElement; ancestor; ancestor = ancestor.parentElement) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n\n  return ancestors;\n}\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\n\n\nfunction ancestorElementsByTag(child, tagName) {\n  (0, _css.assertIsName)(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, function (el) {\n    return el.tagName == tagName;\n  });\n}\n/**\n * Finds the first child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\n\n\nfunction childElement(parent, callback) {\n  for (var child = parent.firstElementChild; child; child = child.nextElementSibling) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\n\n\nfunction childElements(parent, callback) {\n  var children = [];\n\n  for (var child = parent.firstElementChild; child; child = child.nextElementSibling) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n\n  return children;\n}\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\n\n\nfunction lastChildElement(parent, callback) {\n  for (var child = parent.lastElementChild; child; child = child.previousElementSibling) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\n\n\nfunction childNodes(parent, callback) {\n  var nodes = [];\n\n  for (var child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n\n  return nodes;\n}\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\n\n\nfunction childElementByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return (\n    /*OK*/\n    scopedQuerySelector(parent, \"> [\" + attr + \"]\")\n  );\n}\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\n\n\nfunction lastChildElementByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return lastChildElement(parent, function (el) {\n    return el.hasAttribute(attr);\n  });\n}\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\n\n\nfunction childElementsByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return (\n    /*OK*/\n    scopedQuerySelectorAll(parent, \"> [\" + attr + \"]\")\n  );\n}\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {?Element}\n */\n\n\nfunction childElementByTag(parent, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return (\n    /*OK*/\n    scopedQuerySelector(parent, \"> \" + tagName)\n  );\n}\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\n\n\nfunction childElementsByTag(parent, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return (\n    /*OK*/\n    scopedQuerySelectorAll(parent, \"> \" + tagName)\n  );\n}\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\n\n\nfunction matches(el, selector) {\n  var matcher = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector || el.oMatchesSelector;\n\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n\n  return false; // IE8 always returns false.\n}\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\n\n\nfunction elementByTag(element, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return element.\n  /*OK*/\n  querySelector(tagName);\n}\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\n\n\nfunction scopedQuerySelectionFallback(root, selector) {\n  var unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  var scopedSelector = (0, _css.prependSelectorsWith)(selector, \".\" + unique);\n  var elements = root.\n  /*OK*/\n  querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {?Element}\n */\n\n\nfunction scopedQuerySelector(root, selector) {\n  if ((0, _css.isScopeSelectorSupported)(root)) {\n    return root.\n    /*OK*/\n    querySelector((0, _css.prependSelectorsWith)(selector, ':scope'));\n  } // Only IE.\n\n\n  var fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\n\n\nfunction scopedQuerySelectorAll(root, selector) {\n  if ((0, _css.isScopeSelectorSupported)(root)) {\n    return root.\n    /*OK*/\n    querySelectorAll((0, _css.prependSelectorsWith)(selector, ':scope'));\n  } // Only IE.\n\n\n  return scopedQuerySelectionFallback(root, selector);\n}\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!Element} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\n\n\nfunction getDataParamsFromAttributes(element, opt_computeParamNameFunc, opt_paramPattern) {\n  var computeParamNameFunc = opt_computeParamNameFunc || function (key) {\n    return key;\n  };\n\n  var dataset = element.dataset;\n  var params = (0, _object.dict)();\n  var paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n\n  for (var key in dataset) {\n    var _matches = key.match(paramPattern);\n\n    if (_matches) {\n      var param = _matches[1][0].toLowerCase() + _matches[1].substr(1);\n\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n\n  return params;\n}\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\n\n\nfunction hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  var currentElement = element;\n\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while ((currentElement = currentElement.parentNode) && currentElement != opt_stopNode);\n\n  return false;\n}\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\n\n\nfunction templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    var content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\n\n\nfunction iterateCursor(iterable, cb) {\n  var length = iterable.length;\n\n  for (var i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\n\n\nfunction openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  var res;\n\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    (0, _log.dev)().error('DOM', 'Failed to open url on target: ', target, e);\n  } // Then try with `_top` target.\n\n\n  if (!res && target != '_top' && !(0, _string.includes)(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n\n  return res;\n}\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isJsonScriptTag(element) {\n  return element.tagName == 'SCRIPT' && element.hasAttribute('type') && element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON';\n}\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isJsonLdScriptTag(element) {\n  return element.tagName == 'SCRIPT' && element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON';\n}\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\n\n\nfunction isRTL(doc) {\n  var dir = doc.body.getAttribute('dir') || doc.documentElement.getAttribute('dir') || 'ltr';\n  return dir == 'rtl';\n}\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\n\n\nfunction escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n/**\n * @param {string} c\n * @return {string}\n */\n\n\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\n\n\nfunction tryFocus(element) {\n  try {\n    element.\n    /*OK*/\n    focus();\n  } catch (e) {// IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nfunction isIframed(win) {\n  return win.parent && win.parent != win;\n}\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isAmpElement(element) {\n  var tag = element.tagName; // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n\n  return (0, _string.startsWith)(tag, 'AMP-') && // Some \"amp-*\" elements are not really AMP elements. :smh:\n  !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY');\n}\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!Element} element\n * @return {!Promise<!Element>}\n */\n\n\nfunction whenUpgradedToCustomElement(element) {\n  (0, _log.devAssert)(isAmpElement(element), 'element is not AmpElement');\n\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(element);\n  } // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n\n\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    var deferred = new _promise.Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n/**\n * Replacement for `Element.requestFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n * @param {!Element} element\n */\n\n\nfunction fullscreenEnter(element) {\n  var requestFs = element.requestFullscreen || element.requestFullScreen || element.webkitRequestFullscreen || element.webkitEnterFullscreen || element.msRequestFullscreen || element.mozRequestFullScreen;\n\n  if (requestFs) {\n    requestFs.call(element);\n  }\n}\n/**\n * Replacement for `Document.exitFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/exitFullscreen\n * @param {!Element} element\n */\n\n\nfunction fullscreenExit(element) {\n  var elementBoundExit = element.cancelFullScreen || element.exitFullscreen || element.webkitExitFullscreen || element.webkitCancelFullScreen || element.mozCancelFullScreen || element.msExitFullscreen;\n\n  if (elementBoundExit) {\n    elementBoundExit.call(element);\n    return;\n  }\n\n  var ownerDocument = element.ownerDocument;\n\n  if (!ownerDocument) {\n    return;\n  }\n\n  var docBoundExit = ownerDocument.cancelFullScreen || ownerDocument.exitFullscreencancelFullScreen || ownerDocument.webkitExitFullscreencancelFullScreen || ownerDocument.webkitCancelFullScreencancelFullScreen || ownerDocument.mozCancelFullScreencancelFullScreen || ownerDocument.msExitFullscreen;\n\n  if (docBoundExit) {\n    docBoundExit.call(ownerDocument);\n  }\n}\n/**\n * Replacement for `Document.fullscreenElement`.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenElement\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isFullscreenElement(element) {\n  var webkitDisplayingFullscreen = element.webkitDisplayingFullscreen;\n\n  if (webkitDisplayingFullscreen !== undefined) {\n    return webkitDisplayingFullscreen;\n  }\n\n  var ownerDocument = element.ownerDocument;\n\n  if (!ownerDocument) {\n    return false;\n  }\n\n  var fullscreenElement = ownerDocument.fullscreenElement || ownerDocument.webkitFullscreenElement || ownerDocument.mozFullScreenElement || ownerDocument.webkitCurrentFullScreenElement;\n  return fullscreenElement == element;\n}\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!Element} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\n\n\nfunction isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\n\n\nfunction domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  var pos = element1.compareDocumentPosition(element2);\n  var precedingOrContains = Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS; // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n\n  if (pos & precedingOrContains) {\n    return 1;\n  } // if fe2 is following or contained by fe1, then fe1 is before fe2\n\n\n  return -1;\n}\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\n\n\nfunction toggleAttribute(element, name, forced) {\n  var hasAttribute = element.hasAttribute(name);\n  var enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\n\n\nfunction getVerticalScrollbarWidth(win) {\n  var documentElement = win.document.documentElement;\n  var windowWidth = win.\n  /*OK*/\n  innerWidth;\n  var documentWidth = documentElement.\n  /*OK*/\n  clientWidth;\n  return windowWidth - documentWidth;\n}\n\n},{\"./css\":7,\"./log\":16,\"./string\":22,\"./types\":25,\"./utils/object\":31,\"./utils/promise\":33}],9:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getElementService = getElementService;\nexports.getElementServiceIfAvailable = getElementServiceIfAvailable;\nexports.getElementServiceForDoc = getElementServiceForDoc;\nexports.getElementServiceIfAvailableForDoc = getElementServiceIfAvailableForDoc;\nexports.getElementServiceIfAvailableForDocInEmbedScope = getElementServiceIfAvailableForDocInEmbedScope;\nexports.extensionScriptsInNode = extensionScriptsInNode;\nexports.isExtensionScriptInNode = isExtensionScriptInNode;\n\nvar dom = _interopRequireWildcard(require(\"./dom\"));\n\nvar _service = require(\"./service\");\n\nvar _types = require(\"./types\");\n\nvar _log = require(\"./log\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nfunction getElementService(win, id, extension, opt_element) {\n  return getElementServiceIfAvailable(win, id, extension, opt_element).then(function (service) {\n    return assertService(service, id, extension);\n  });\n}\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailable(win, id, extension, opt_element) {\n  var s = (0, _service.getServicePromiseOrNull)(win, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      s\n    );\n  }\n\n  return getElementServicePromiseOrNull(win, id, extension, opt_element);\n}\n/**\n * @param {!Window} win\n * @param {string} elementName Name of an extended custom element.\n * @return {boolean} Whether this element is scheduled to be loaded.\n */\n\n\nfunction isElementScheduled(win, elementName) {\n  // Set in custom-element.js\n  if (!win.__AMP_EXTENDED_ELEMENTS) {\n    return false;\n  }\n\n  return !!win.__AMP_EXTENDED_ELEMENTS[elementName];\n}\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\n\n\nfunction getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(element, id, extension, opt_element).then(function (service) {\n    return assertService(service, id, extension);\n  });\n}\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailableForDoc(element, id, extension, opt_element) {\n  var s = (0, _service.getServicePromiseOrNullForDoc)(element, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      s\n    );\n  }\n\n  var ampdoc = (0, _service.getAmpdoc)(element);\n  return ampdoc.waitForBodyOpen().then(function () {\n    return waitForExtensionIfPresent(ampdoc.win, extension, ampdoc.win.document.head);\n  }).then(function () {\n    // If this service is provided by an element, then we can't depend on\n    // the service (they may not use the element).\n    if (opt_element) {\n      return (0, _service.getServicePromiseOrNullForDoc)(element, id);\n    } else if (isElementScheduled(ampdoc.win, extension)) {\n      return (0, _service.getServicePromiseForDoc)(element, id);\n    }\n\n    return null;\n  });\n}\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailableForDocInEmbedScope(element, id, extension) {\n  var s = (0, _service.getExistingServiceForDocInEmbedScope)(element, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      Promise.resolve(s)\n    );\n  }\n\n  var win = (0, _types.toWin)(element.ownerDocument.defaultView);\n  var topWin = (0, _service.getTopWindow)(win); // In embeds, doc services are stored on the embed window.\n\n  if (win !== topWin) {\n    return getElementServicePromiseOrNull(win, id, extension);\n  } else {\n    // Only fallback to element's ampdoc (top-level) if not embedded.\n    return getElementServiceIfAvailableForDoc(element, id, extension);\n  }\n}\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction assertService(service, id, extension) {\n  return (\n    /** @type {!Object} */\n    (0, _log.userAssert)(service, 'Service %s was requested to be provided through %s, ' + 'but %s is not loaded in the current page. To fix this ' + 'problem load the JavaScript file for %s in this page.', id, extension, extension, extension)\n  );\n}\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Array<string>}\n */\n\n\nfunction extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n\n  var scripts = {}; // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n\n  var list = head.querySelectorAll('script[custom-element],script[custom-template]');\n\n  for (var i = 0; i < list.length; i++) {\n    var script = list[i];\n    var name = script.getAttribute('custom-element') || script.getAttribute('custom-template');\n    scripts[name] = true;\n  }\n\n  return Object.keys(scripts);\n}\n/**\n * Waits for body to be present then verifies that an extension script is\n * present in head for installation.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} extensionId\n * @return {!Promise<boolean>}\n */\n\n\nfunction isExtensionScriptInNode(ampdoc, extensionId) {\n  return ampdoc.waitForBodyOpen().then(function () {\n    return extensionScriptInNode(ampdoc.getHeadNode(), extensionId);\n  });\n}\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @param {string} extensionId\n * @return {boolean}\n * @private\n */\n\n\nfunction extensionScriptInNode(head, extensionId) {\n  return extensionScriptsInNode(head).includes(extensionId);\n}\n/**\n * Waits for an extension if its script is present\n * @param {!Window} win\n * @param {string} extension\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Promise}\n * @private\n */\n\n\nfunction waitForExtensionIfPresent(win, extension, head) {\n  /**\n   * If there is an extension script wait for it to load before trying\n   * to get the service. Prevents a race condition when everything but\n   * the extensions is in cache. If there is no script then it's either\n   * not present, or the service was defined by a test. In those cases\n   * we don't wait around for an extension that does not exist.\n   */\n  // TODO(jpettitt) investigate registerExtension to short circuit\n  // the dom call in extensionScriptsInNode()\n  if (!extensionScriptInNode(head, extension)) {\n    return Promise.resolve();\n  }\n\n  var extensions = (0, _service.getService)(win, 'extensions');\n  return (\n    /** @type {!Promise<?Object>} */\n    extensions.waitForExtension(win, extension)\n  );\n}\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\n\n\nfunction getElementServicePromiseOrNull(win, id, extension, opt_element) {\n  return dom.waitForBodyOpenPromise(win.document).then(function () {\n    return waitForExtensionIfPresent(win, extension, win.document.head);\n  }).then(function () {\n    // If this service is provided by an element, then we can't depend on\n    // the service (they may not use the element).\n    if (opt_element) {\n      return (0, _service.getServicePromiseOrNull)(win, id);\n    } else if (isElementScheduled(win, extension)) {\n      return (0, _service.getServicePromise)(win, id);\n    }\n\n    return null;\n  });\n}\n\n},{\"./dom\":8,\"./log\":16,\"./service\":20,\"./types\":25}],10:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.internalListenImplementation = internalListenImplementation;\nexports.detectEvtListenerOptsSupport = detectEvtListenerOptsSupport;\nexports.resetEvtListenerOptsSupportForTesting = resetEvtListenerOptsSupportForTesting;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nvar optsSupported;\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\nfunction internalListenImplementation(element, eventType, listener, opt_evtListenerOpts) {\n  var localElement = element;\n  var localListener = listener;\n  /**\n   * @type {?Function}\n   */\n\n  var wrapped;\n\n  wrapped = function wrapped(event) {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n\n      throw e;\n    }\n  };\n\n  var optsSupported = detectEvtListenerOptsSupport();\n  var capture = false;\n\n  if (opt_evtListenerOpts) {\n    capture = opt_evtListenerOpts.capture;\n  }\n\n  localElement.addEventListener(eventType, wrapped, optsSupported ? opt_evtListenerOpts : capture);\n  return function () {\n    if (localElement) {\n      localElement.removeEventListener(eventType, wrapped, optsSupported ? opt_evtListenerOpts : capture);\n    } // Ensure these are GC'd\n\n\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\n\n\nfunction detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    var options = {\n      get capture() {\n        optsSupported = true;\n      }\n\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {// EventListenerOptions are not supported\n  }\n\n  return optsSupported;\n}\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\n\n\nfunction resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n\n},{}],11:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.createCustomEvent = createCustomEvent;\nexports.listen = listen;\nexports.getData = getData;\nexports.getDetail = getDetail;\nexports.listenOnce = listenOnce;\nexports.listenOncePromise = listenOncePromise;\nexports.isLoaded = isLoaded;\nexports.loadPromise = loadPromise;\nexports.isLoadErrorMessage = isLoadErrorMessage;\nexports.MEDIA_LOAD_FAILURE_SRC_PROPERTY = void 0;\n\nvar _eventHelperListen = require(\"./event-helper-listen\");\n\nvar _dom = require(\"./dom\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string}  */\nvar LOAD_FAILURE_PREFIX = 'Failed to load:';\n/** @const {string} */\n\nvar MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\n\nexports.MEDIA_LOAD_FAILURE_SRC_PROPERTY = MEDIA_LOAD_FAILURE_SRC_PROPERTY;\n\nfunction createCustomEvent(win, type, detail, opt_eventInit) {\n  var eventInit =\n  /** @type {!CustomEventInit} */\n  {\n    detail: detail\n  };\n  Object.assign(eventInit, opt_eventInit); // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n\n  if (typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    var e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(type, !!eventInit.bubbles, !!eventInit.cancelable, detail);\n    return e;\n  }\n}\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\n\nfunction listen(element, eventType, listener, opt_evtListenerOpts) {\n  return (0, _eventHelperListen.internalListenImplementation)(element, eventType, listener, opt_evtListenerOpts);\n}\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\n\n\nfunction getData(event) {\n  return (\n    /** @type {?JsonObject|string|undefined} */\n    event.data\n  );\n}\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\n\n\nfunction getDetail(event) {\n  return (\n    /** @type {?JsonObject|string|undefined} */\n    event.detail\n  );\n}\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\n\nfunction listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  var localListener = listener;\n  var unlisten = (0, _eventHelperListen.internalListenImplementation)(element, eventType, function (event) {\n    try {\n      localListener(event);\n    } finally {\n      // Ensure listener is GC'd\n      localListener = null;\n      unlisten();\n    }\n  }, opt_evtListenerOpts);\n  return unlisten;\n}\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\n\n\nfunction listenOncePromise(element, eventType, opt_evtListenerOpts, opt_cancel) {\n  var unlisten;\n  var eventPromise = new Promise(function (resolve) {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n\n  return eventPromise;\n}\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\n\n\nfunction isLoaded(eleOrWindow) {\n  return !!(eleOrWindow.complete || eleOrWindow.readyState == 'complete' || isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0 || // If the passed in thing is a Window, infer loaded state from\n  //\n  eleOrWindow.document && eleOrWindow.document.readyState == 'complete');\n}\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\n\n\nfunction loadPromise(eleOrWindow) {\n  var unlistenLoad;\n  var unlistenError;\n\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n\n  var isMediaElement = isHTMLMediaElement(eleOrWindow);\n\n  if (isMediaElement && eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc) {\n    return Promise.reject(eleOrWindow);\n  }\n\n  var loadingPromise = new Promise(function (resolve, reject) {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    } // Don't unlisten on error for Windows.\n\n\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n\n    var errorTarget = eleOrWindow; // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = (0, _dom.lastChildElement)(eleOrWindow, function (child) {\n        return child.tagName === 'SOURCE';\n      });\n\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n  return loadingPromise.then(function () {\n    if (unlistenError) {\n      unlistenError();\n    }\n\n    return eleOrWindow;\n  }, function () {\n    if (unlistenLoad) {\n      unlistenLoad();\n    }\n\n    failedToLoad(eleOrWindow);\n  });\n}\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\n\n\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] = eleOrWindow.currentSrc || true;\n  } // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n\n\n  var target = eleOrWindow;\n\n  if (target && target.src) {\n    target = target.src;\n  }\n\n  throw (0, _log.user)().createError(LOAD_FAILURE_PREFIX, target);\n}\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\n\n\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\n\n\nfunction isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n\n},{\"./dom\":8,\"./event-helper-listen\":10,\"./log\":16}],12:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isCanary = isCanary;\nexports.getBinaryType = getBinaryType;\nexports.isExperimentOn = isExperimentOn;\nexports.toggleExperiment = toggleExperiment;\nexports.experimentToggles = experimentToggles;\nexports.experimentTogglesOrNull = experimentTogglesOrNull;\nexports.getExperimentTogglesForTesting = getExperimentTogglesForTesting;\nexports.resetExperimentTogglesForTesting = resetExperimentTogglesForTesting;\nexports.randomlySelectUnsetExperiments = randomlySelectUnsetExperiments;\nexports.getExperimentBranch = getExperimentBranch;\nexports.forceExperimentBranch = forceExperimentBranch;\nexports.RANDOM_NUMBER_GENERATORS = exports.ExperimentInfo = void 0;\n\nvar _log = require(\"./log\");\n\nvar _mode = require(\"./mode\");\n\nvar _object = require(\"./utils/object\");\n\nvar _url = require(\"./url\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\n/** @const {string} */\nvar TAG = 'EXPERIMENTS';\n/** @const {string} */\n\nvar LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n/** @const {string} */\n\nvar TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n/**\n * @typedef {{\n *   isTrafficEligible: function(!Window):boolean,\n *   branches: !Array<string>\n * }}\n */\n\nvar ExperimentInfo;\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\n\nexports.ExperimentInfo = ExperimentInfo;\n\nfunction isCanary(win) {\n  return !!(win.AMP_CONFIG && win.AMP_CONFIG.canary);\n}\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\n\n\nfunction getBinaryType(win) {\n  return win.AMP_CONFIG && win.AMP_CONFIG.type ? win.AMP_CONFIG.type : 'unknown';\n}\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\n\n\nfunction isExperimentOn(win, experimentId) {\n  var toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\n\n\nfunction toggleExperiment(win, experimentId, opt_on, opt_transientExperiment) {\n  var currentlyOn = isExperimentOn(win,\n  /*OK*/\n  experimentId);\n  var on = !!(opt_on !== undefined ? opt_on : !currentlyOn);\n\n  if (on != currentlyOn) {\n    var toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      var storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles); // Avoid affecting tests that spy/stub warn().\n\n      if (!(0, _mode.getMode)().test) {\n        (0, _log.user)().warn(TAG, '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental', experimentId, on ? 'enabled' : 'disabled', win.location.hostname);\n      }\n    }\n  }\n\n  return on;\n}\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\n\n\nfunction experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n\n  win[TOGGLES_WINDOW_PROPERTY] = Object.create(null);\n  var toggles = win[TOGGLES_WINDOW_PROPERTY]; // Read the default config of this build.\n\n  if (win.AMP_CONFIG) {\n    for (var experimentId in win.AMP_CONFIG) {\n      var frequency = win.AMP_CONFIG[experimentId];\n\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  } // Read document level override from meta tag.\n\n\n  if (win.AMP_CONFIG && Array.isArray(win.AMP_CONFIG['allow-doc-opt-in']) && win.AMP_CONFIG['allow-doc-opt-in'].length > 0) {\n    var allowed = win.AMP_CONFIG['allow-doc-opt-in'];\n    var meta = win.document.head.querySelector('meta[name=\"amp-experiments-opt-in\"]');\n\n    if (meta) {\n      var optedInExperiments = meta.getAttribute('content').split(',');\n\n      for (var i = 0; i < optedInExperiments.length; i++) {\n        if (allowed.indexOf(optedInExperiments[i]) != -1) {\n          toggles[optedInExperiments[i]] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  if (win.AMP_CONFIG && Array.isArray(win.AMP_CONFIG['allow-url-opt-in']) && win.AMP_CONFIG['allow-url-opt-in'].length > 0) {\n    var _allowed = win.AMP_CONFIG['allow-url-opt-in'];\n    var hash = win.location.originalHash || win.location.hash;\n    var params = (0, _url.parseQueryString)(hash);\n\n    for (var _i = 0; _i < _allowed.length; _i++) {\n      var param = params[\"e-\" + _allowed[_i]];\n\n      if (param == '1') {\n        toggles[_allowed[_i]] = true;\n      }\n\n      if (param == '0') {\n        toggles[_allowed[_i]] = false;\n      }\n    }\n  }\n\n  return toggles;\n}\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {Object<string, boolean>}\n */\n\n\nfunction experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\n\n\nfunction getExperimentToggles(win) {\n  var experimentsString = '';\n\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch (e) {\n    (0, _log.dev)().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n\n  var tokens = experimentsString ? experimentsString.split(/\\s*,\\s*/g) : [];\n  var toggles = Object.create(null);\n\n  for (var i = 0; i < tokens.length; i++) {\n    if (tokens[i].length == 0) {\n      continue;\n    }\n\n    if (tokens[i][0] == '-') {\n      toggles[tokens[i].substr(1)] = false;\n    } else {\n      toggles[tokens[i]] = true;\n    }\n  }\n\n  return toggles;\n}\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\n\n\nfunction saveExperimentToggles(win, toggles) {\n  var experimentIds = [];\n\n  for (var experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n\n  try {\n    if ('localStorage' in win) {\n      win.localStorage.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n    }\n  } catch (e) {\n    (0, _log.user)().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\n\n\nfunction getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\n\n\nfunction resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\n\n\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\n\n\nvar RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng\n};\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\n\nexports.RANDOM_NUMBER_GENERATORS = RANDOM_NUMBER_GENERATORS;\n\nfunction selectRandomItem(arr) {\n  var rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return arr[Math.floor(rn * arr.length)] || null;\n}\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Object<string, !ExperimentInfo>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\n\n\nfunction randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  var selectedExperiments = {};\n\n  for (var experimentName in experiments) {\n    // Skip experimentName if it is not a key of experiments object or if it\n    // has already been populated by some other property.\n    if (!(0, _object.hasOwn)(experiments, experimentName)) {\n      continue;\n    }\n\n    if ((0, _object.hasOwn)(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] = win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (!experiments[experimentName].isTrafficEligible || !experiments[experimentName].isTrafficEligible(win)) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    } // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n\n\n    if (!win.__AMP_EXPERIMENT_BRANCHES[experimentName] && isExperimentOn(win,\n    /*OK*/\n    experimentName)) {\n      var branches = experiments[experimentName].branches;\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(branches);\n      selectedExperiments[experimentName] = win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n\n  return selectedExperiments;\n}\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\n\n\nfunction getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES ? win.__AMP_EXPERIMENT_BRANCHES[experimentName] : null;\n}\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\n\n\nfunction forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n\n},{\"./log\":16,\"./mode\":18,\"./url\":28,\"./utils/object\":31}],13:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isAmp4Email = isAmp4Email;\nexports.isAmphtml = isAmphtml;\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Checks that the document is of an AMP format type.\n * @param {!Array<string>} formats\n * @param {!Document} doc\n * @return {boolean}\n */\nfunction isAmpFormatType(formats, doc) {\n  var html = doc.documentElement;\n  var isFormatType = formats.some(function (format) {\n    return html.hasAttribute(format);\n  });\n  return isFormatType;\n}\n/**\n * @param {!Document} doc\n * @return {boolean}\n */\n\n\nfunction isAmp4Email(doc) {\n  return isAmpFormatType(['⚡4email', 'amp4email'], doc);\n}\n/**\n * @param {!Document} doc\n * @return {boolean}\n */\n\n\nfunction isAmphtml(doc) {\n  return isAmpFormatType(['⚡', 'amp'], doc);\n}\n\n},{}],14:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.internalRuntimeVersion = internalRuntimeVersion;\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nfunction internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n\n},{}],15:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.recreateNonProtoObject = recreateNonProtoObject;\nexports.getValueForExpr = getValueForExpr;\nexports.parseJson = parseJson;\nexports.tryParseJson = tryParseJson;\nexports.getChildJsonConfig = getChildJsonConfig;\nexports.deepEquals = deepEquals;\nexports.jsonConfiguration = jsonConfiguration;\nexports.jsonLiteral = jsonLiteral;\nexports.includeJsonLiteral = includeJsonLiteral;\n\nvar _dom = require(\"./dom\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {*} should be string|number|boolean|null\n */\nvar JSONScalarDef;\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {*} should be !Object<string, ?JSONValueDef>\n */\n\nvar JSONObjectDef;\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {*} should be !Array<?JSONValueDef>\n */\n\nvar JSONArrayDef;\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {*} should be !JSONScalarDef|!JSONObjectDef|!JSONArrayDef\n */\n\nvar JSONValueDef;\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\n\nfunction recreateNonProtoObject(obj) {\n  var copy = Object.create(null);\n\n  for (var k in obj) {\n    if (!hasOwnProperty(obj, k)) {\n      continue;\n    }\n\n    var v = obj[k];\n    copy[k] = (0, _types.isObject)(v) ? recreateNonProtoObject(v) : v;\n  }\n\n  return (\n    /** @type {!JsonObject} */\n    copy\n  );\n}\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\n\n\nfunction getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  } // Otherwise, navigate via properties.\n\n\n  var parts = expr.split('.');\n  var value = obj;\n\n  for (var i = 0; i < parts.length; i++) {\n    var part = parts[i];\n\n    if (part && value && value[part] !== undefined && hasOwnProperty(value, part)) {\n      value = value[part];\n      continue;\n    }\n\n    value = undefined;\n    break;\n  }\n\n  return value;\n}\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {*} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\n\n\nfunction parseJson(json) {\n  return (\n    /** @type {?JsonObject} */\n    JSON.parse(\n    /** @type {string} */\n    json)\n  );\n}\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {*} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\n\n\nfunction tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    if (opt_onFailed) {\n      opt_onFailed(e);\n    }\n\n    return null;\n  }\n}\n/**\n * Helper method to get the json config from an element <script> tag\n * @param {!Element} element\n * @return {?JsonObject}\n * @throws {!Error} If element does not have exactly one <script> child\n * with type=\"application/json\", or if the <script> contents are not valid JSON.\n */\n\n\nfunction getChildJsonConfig(element) {\n  var scripts = (0, _dom.childElementsByTag)(element, 'script');\n  var n = scripts.length;\n\n  if (n !== 1) {\n    throw new Error(\"Found \" + scripts.length + \" <script> children. Expected 1.\");\n  }\n\n  var script = scripts[0];\n\n  if (!(0, _dom.isJsonScriptTag)(script)) {\n    throw new Error('<script> child must have type=\"application/json\"');\n  }\n\n  try {\n    return parseJson(script.textContent);\n  } catch (unusedError) {\n    throw new Error('Failed to parse <script> contents. Is it valid JSON?');\n  }\n}\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\n\n\nfunction deepEquals(a, b, depth) {\n  if (depth === void 0) {\n    depth = 5;\n  }\n\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n\n\n  var queue = [{\n    a: a,\n    b: b,\n    depth: depth\n  }];\n\n  while (queue.length > 0) {\n    var _queue$shift = queue.shift(),\n        _a = _queue$shift.a,\n        _b = _queue$shift.b,\n        _depth = _queue$shift.depth; // Only check deep equality if depth > 0.\n\n\n    if (_depth > 0) {\n      if (typeof _a !== typeof _b) {\n        return false;\n      } else if (Array.isArray(_a) && Array.isArray(_b)) {\n        if (_a.length !== _b.length) {\n          return false;\n        }\n\n        for (var i = 0; i < _a.length; i++) {\n          queue.push({\n            a: _a[i],\n            b: _b[i],\n            depth: _depth - 1\n          });\n        }\n\n        continue;\n      } else if (_a && _b && typeof _a === 'object' && typeof _b === 'object') {\n        var keysA = Object.keys(\n        /** @type {!Object} */\n        _a);\n        var keysB = Object.keys(\n        /** @type {!Object} */\n        _b);\n\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n\n        for (var _i = 0; _i < keysA.length; _i++) {\n          var k = keysA[_i];\n          queue.push({\n            a: _a[k],\n            b: _b[k],\n            depth: _depth - 1\n          });\n        }\n\n        continue;\n      }\n    } // If we get here, then depth == 0 or (a, b) are primitives.\n\n\n    if (_a !== _b) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @param {*} obj\n * @param {string} key\n * @return {boolean}\n */\n\n\nfunction hasOwnProperty(obj, key) {\n  if (obj == null || typeof obj != 'object') {\n    return false;\n  }\n\n  return Object.prototype.hasOwnProperty.call(\n  /** @type {!Object} */\n  obj, key);\n}\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\n\n\nfunction jsonConfiguration(obj) {\n  return (\n    /** @type {!JsonObject} */\n    obj\n  );\n}\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {!Object|!Array|string|number|boolean|null} value\n * @return {!InternalJsonLiteralTypeDef}\n */\n\n\nfunction jsonLiteral(value) {\n  return (\n    /** @type {!InternalJsonLiteralTypeDef} */\n    value\n  );\n}\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\n\n\nfunction includeJsonLiteral(value) {\n  return value;\n}\n\n},{\"./dom\":8,\"./types\":25}],16:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isUserErrorMessage = isUserErrorMessage;\nexports.isUserErrorEmbed = isUserErrorEmbed;\nexports.setReportError = setReportError;\nexports.overrideLogLevel = overrideLogLevel;\nexports.duplicateErrorIfNecessary = duplicateErrorIfNecessary;\nexports.createErrorVargs = createErrorVargs;\nexports.rethrowAsync = rethrowAsync;\nexports.initLogConstructor = initLogConstructor;\nexports.resetLogConstructorForTesting = resetLogConstructorForTesting;\nexports.user = user;\nexports.dev = dev;\nexports.isFromEmbed = isFromEmbed;\nexports.devAssert = devAssert;\nexports.userAssert = userAssert;\nexports.Log = exports.LogLevel = exports.USER_ERROR_EMBED_SENTINEL = exports.USER_ERROR_SENTINEL = void 0;\n\nvar _mode = require(\"./mode\");\n\nvar _modeObject = require(\"./mode-object\");\n\nvar _internalVersion = require(\"./internal-version\");\n\nvar _types = require(\"./types\");\n\nvar _function = require(\"./utils/function\");\n\nvar _config = require(\"./config\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar noop = function noop() {};\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\n\n\nvar USER_ERROR_SENTINEL = \"\\u200B\\u200B\\u200B\";\n/**\n * Four zero width space.\n *\n * @const {string}\n */\n\nexports.USER_ERROR_SENTINEL = USER_ERROR_SENTINEL;\nvar USER_ERROR_EMBED_SENTINEL = \"\\u200B\\u200B\\u200B\\u200B\";\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\n\nexports.USER_ERROR_EMBED_SENTINEL = USER_ERROR_EMBED_SENTINEL;\n\nfunction isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\n\n\nfunction isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n/**\n * @enum {number}\n * @private Visible for testing only.\n */\n\n\nvar LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4\n};\n/**\n * Sets reportError function. Called from error.js to break cyclic\n * dependency.\n * @param {function(*, !Element=)|undefined} fn\n */\n\nexports.LogLevel = LogLevel;\n\nfunction setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\n\n\nvar levelOverride_ = undefined;\n/**\n * @param {!LogLevel} level\n */\n\nfunction overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\n\n\nvar messageUrlRtv = function messageUrlRtv() {\n  return \"01\" + (0, _internalVersion.internalRuntimeVersion)();\n};\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\n\n\nvar externalMessageUrl = function externalMessageUrl(id, interpolatedParts) {\n  return interpolatedParts.reduce(function (prefix, arg) {\n    return prefix + \"&s[]=\" + messageArgToEncodedComponent(arg);\n  }, \"https://log.amp.dev/?v=\" + messageUrlRtv() + \"&id=\" + encodeURIComponent(id));\n};\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\n\n\nvar externalMessagesSimpleTableUrl = function externalMessagesSimpleTableUrl() {\n  return _config.urls.cdn + \"/rtv/\" + messageUrlRtv() + \"/log-messages.simple.json\";\n};\n/**\n * @param {*} arg\n * @return {string}\n */\n\n\nvar messageArgToEncodedComponent = function messageArgToEncodedComponent(arg) {\n  return encodeURIComponent(String(elementStringOrPassthru(arg)));\n};\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don’t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\n\n\nvar Log =\n/*#__PURE__*/\nfunction () {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(!./mode.ModeDef):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  function Log(win, levelFunc, opt_suffix) {\n    var _this = this;\n\n    if (opt_suffix === void 0) {\n      opt_suffix = '';\n    }\n\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = (0, _mode.getMode)().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n    /** @private @const {function(!./mode.ModeDef):!LogLevel} */\n\n    this.levelFunc_ = levelFunc;\n    /** @private @const {!LogLevel} */\n\n    this.level_ = this.defaultLevel_();\n    /** @private @const {string} */\n\n    this.suffix_ = opt_suffix;\n    /** @private {?JsonObject} */\n\n    this.messages_ = null;\n    this.fetchExternalMessagesOnce_ = (0, _function.once)(function () {\n      win.fetch(externalMessagesSimpleTableUrl()).then(function (response) {\n        return response.json();\n      }, noop).then(function (opt_messages) {\n        if (opt_messages) {\n          _this.messages_ =\n          /** @type {!JsonObject} */\n          opt_messages;\n        }\n      });\n    });\n  }\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n\n\n  var _proto = Log.prototype;\n\n  _proto.getLevel_ = function getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  ;\n\n  _proto.defaultLevel_ = function defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    } // Logging has been explicitly disabled.\n\n\n    if ((0, _mode.getMode)().log == '0') {\n      return LogLevel.OFF;\n    } // Logging is enabled for tests directly.\n\n\n    if ((0, _mode.getMode)().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    } // LocalDev by default allows INFO level, unless overriden by `#log`.\n\n\n    if ((0, _mode.getMode)().localDev && !(0, _mode.getMode)().log) {\n      return LogLevel.INFO;\n    } // Delegate to the specific resolver.\n\n\n    return this.levelFunc_((0, _modeObject.getModeObject)());\n  }\n  /**\n   * @param {string} tag\n   * @param {string} level\n   * @param {!Array} messages\n   */\n  ;\n\n  _proto.msg_ = function msg_(tag, level, messages) {\n    if (this.getLevel_() != LogLevel.OFF) {\n      var fn = this.win.console.log;\n\n      if (level == 'ERROR') {\n        fn = this.win.console.error || fn;\n      } else if (level == 'INFO') {\n        fn = this.win.console.info || fn;\n      } else if (level == 'WARN') {\n        fn = this.win.console.warn || fn;\n      }\n\n      var args = this.maybeExpandMessageArgs_(messages); // Prefix console message with \"[tag]\".\n\n      var prefix = \"[\" + tag + \"]\";\n\n      if (typeof args[0] === 'string') {\n        // Prepend string to avoid breaking string substitutions e.g. %s.\n        args[0] = prefix + ' ' + args[0];\n      } else {\n        args.unshift(prefix);\n      }\n\n      fn.apply(this.win.console, args);\n    }\n  }\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isEnabled = function isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.fine = function fine(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.FINE) {\n      this.msg_(tag, 'FINE', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.info = function info(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.INFO) {\n      this.msg_(tag, 'INFO', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.warn = function warn(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.WARN) {\n      this.msg_(tag, 'WARN', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} var_args\n   * @return {!Error|undefined}\n   * @private\n   */\n  ;\n\n  _proto.error_ = function error_(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.ERROR) {\n      this.msg_(tag, 'ERROR', Array.prototype.slice.call(arguments, 1));\n    } else {\n      var error = createErrorVargs.apply(null, Array.prototype.slice.call(arguments, 1));\n      this.prepareError_(error);\n      return error;\n    }\n  }\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.error = function error(tag, var_args) {\n    var error = this.error_.apply(this, arguments);\n\n    if (error) {\n      error.name = tag || error.name; // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.expectedError = function expectedError(unusedTag, var_args) {\n    var error = this.error_.apply(this, arguments);\n\n    if (error) {\n      error.expected = true; // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  ;\n\n  _proto.createError = function createError(var_args) {\n    var error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  ;\n\n  _proto.createExpectedError = function createExpectedError(var_args) {\n    var error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * NOTE: for an explanation of the tempate R implementation see\n   * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {R} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is `null` or `undefined`.\n   * @template T\n   * @template R :=\n   *     mapunion(T, (V) =>\n   *         cond(eq(V, 'null'),\n   *             none(),\n   *             cond(eq(V, 'undefined'),\n   *                 none(),\n   *                 V)))\n   *  =:\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assert = function assert(shouldBeTrueish, opt_message, var_args) {\n    var firstElement;\n\n    if ((0, _types.isArray)(opt_message)) {\n      return this.assert.apply(this, [shouldBeTrueish].concat(this.expandMessageArgs_(\n      /** @type {!Array} */\n      opt_message)));\n    }\n\n    if (!shouldBeTrueish) {\n      var message = opt_message || 'Assertion failed';\n      var splitMessage = message.split('%s');\n      var first = splitMessage.shift();\n      var formatted = first;\n      var messageArray = [];\n      var i = 2;\n      pushIfNonEmpty(messageArray, first);\n\n      while (splitMessage.length > 0) {\n        var nextConstant = splitMessage.shift();\n        var val = arguments[i++];\n\n        if (val && val.tagName) {\n          firstElement = val;\n        }\n\n        messageArray.push(val);\n        pushIfNonEmpty(messageArray, nextConstant.trim());\n        formatted += stringOrElementString(val) + nextConstant;\n      }\n\n      var e = new Error(formatted);\n      e.fromAssert = true;\n      e.associatedElement = firstElement;\n      e.messageArray = messageArray;\n      this.prepareError_(e); // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(e);\n\n      throw e;\n    }\n\n    return shouldBeTrueish;\n  }\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertElement = function assertElement(shouldBeElement, opt_message) {\n    var shouldBeTrueish = shouldBeElement && shouldBeElement.nodeType == 1;\n    this.assertType_(shouldBeElement, shouldBeTrueish, 'Element expected', opt_message);\n    return (\n      /** @type {!Element} */\n      shouldBeElement\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertString = function assertString(shouldBeString, opt_message) {\n    this.assertType_(shouldBeString, typeof shouldBeString == 'string', 'String expected', opt_message);\n    return (\n      /** @type {string} */\n      shouldBeString\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertNumber = function assertNumber(shouldBeNumber, opt_message) {\n    this.assertType_(shouldBeNumber, typeof shouldBeNumber == 'number', 'Number expected', opt_message);\n    return (\n      /** @type {number} */\n      shouldBeNumber\n    );\n  }\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertArray = function assertArray(shouldBeArray, opt_message) {\n    this.assertType_(shouldBeArray, (0, _types.isArray)(shouldBeArray), 'Array expected', opt_message);\n    return (\n      /** @type {!Array} */\n      shouldBeArray\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertBoolean = function assertBoolean(shouldBeBoolean, opt_message) {\n    this.assertType_(shouldBeBoolean, !!shouldBeBoolean === shouldBeBoolean, 'Boolean expected', opt_message);\n    return (\n      /** @type {boolean} */\n      shouldBeBoolean\n    );\n  }\n  /**\n   * Asserts and returns the enum value. If the enum doesn't contain such a\n   * value, the error is thrown.\n   *\n   * @param {!Object<T>} enumObj\n   * @param {string} s\n   * @param {string=} opt_enumName\n   * @return {T}\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertEnumValue = function assertEnumValue(enumObj, s, opt_enumName) {\n    if ((0, _types.isEnumValue)(enumObj, s)) {\n      return s;\n    }\n\n    this.assert(false, 'Unknown %s value: \"%s\"', opt_enumName || 'enum', s);\n  }\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  ;\n\n  _proto.prepareError_ = function prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  ;\n\n  _proto.maybeExpandMessageArgs_ = function maybeExpandMessageArgs_(args) {\n    if ((0, _types.isArray)(args[0])) {\n      return this.expandMessageArgs_(\n      /** @type {!Array} */\n      args[0]);\n    }\n\n    return args;\n  }\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  ;\n\n  _proto.expandMessageArgs_ = function expandMessageArgs_(parts) {\n    // First value should exist.\n    var id = parts.shift(); // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n\n    if ((0, _mode.getMode)(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n\n    return [\"More info at \" + externalMessageUrl(id, parts)];\n  }\n  /**\n   * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n   *\n   * It understands array-based \"id\"-contracted messages.\n   *\n   * Otherwise creates a sprintf syntax string containing the optional message or the\n   * default. An interpolation token is added at the end to include the `subject`.\n   * @param {*} subject\n   * @param {*} assertion\n   * @param {string} defaultMessage\n   * @param {!Array|string=} opt_message\n   * @private\n   */\n  ;\n\n  _proto.assertType_ = function assertType_(subject, assertion, defaultMessage, opt_message) {\n    if ((0, _types.isArray)(opt_message)) {\n      this.assert(assertion, opt_message.concat(subject));\n    } else {\n      this.assert(assertion, (opt_message || defaultMessage) + \": %s\", subject);\n    }\n  };\n\n  return Log;\n}();\n/**\n * @param {string|!Element} val\n * @return {string}\n */\n\n\nexports.Log = Log;\n\nvar stringOrElementString = function stringOrElementString(val) {\n  return (\n    /** @type {string} */\n    elementStringOrPassthru(val)\n  );\n};\n/**\n * @param {*} val\n * @return {*}\n */\n\n\nfunction elementStringOrPassthru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (val && val.nodeType == 1) {\n    return val.tagName.toLowerCase() + (val.id ? '#' + val.id : '');\n  }\n\n  return val;\n}\n/**\n * @param {!Array} array\n * @param {*} val\n */\n\n\nfunction pushIfNonEmpty(array, val) {\n  if (val != '') {\n    array.push(val);\n  }\n}\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\n\n\nfunction duplicateErrorIfNecessary(error) {\n  var messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n\n  if (messageProperty && messageProperty.writable) {\n    return error;\n  }\n\n  var message = error.message,\n      stack = error.stack;\n  var e = new Error(message); // Copy all the extraneous things we attach.\n\n  for (var prop in error) {\n    e[prop] = error[prop];\n  } // Ensure these are copied.\n\n\n  e.stack = stack;\n  return e;\n}\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\n\n\nfunction createErrorVargs(var_args) {\n  var error = null;\n  var message = '';\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n\n  return error;\n}\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\n\n\nfunction rethrowAsync(var_args) {\n  var error = createErrorVargs.apply(null, arguments);\n  setTimeout(function () {\n    // reportError is installed globally per window in the entry point.\n    self.__AMP_REPORT_ERROR(error);\n\n    throw error;\n  });\n}\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\n\n\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null\n};\nvar logs = self.__AMP_LOG;\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?Function}\n */\n\nvar logConstructor = null;\n/**\n * Initializes log contructor.\n */\n\nfunction initLogConstructor() {\n  logConstructor = Log; // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n\n  dev();\n  user();\n}\n/**\n * Resets log contructor for testing.\n */\n\n\nfunction resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\n\n\nfunction user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n\n    return logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL);\n  }\n}\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\n\n\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n\n  return new logConstructor(self, function (mode) {\n    var logNum = parseInt(mode.log, 10);\n\n    if (mode.development || logNum >= 1) {\n      return LogLevel.FINE;\n    }\n\n    return LogLevel.WARN;\n  }, suffix);\n}\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\n\n\nfunction dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n\n  return logs.dev = new logConstructor(self, function (mode) {\n    var logNum = parseInt(mode.log, 10);\n\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n\n    return LogLevel.OFF;\n  });\n}\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\n\n\nfunction isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n\n  return opt_element.ownerDocument.defaultView != win;\n}\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction devAssert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9) {\n  if ((0, _mode.getMode)().minified) {\n    return shouldBeTrueish;\n  }\n\n  return dev().\n  /*Orig call*/\n  assert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9);\n}\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction userAssert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9) {\n  return user().\n  /*Orig call*/\n  assert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9);\n}\n\n},{\"./config\":6,\"./internal-version\":14,\"./mode\":18,\"./mode-object\":17,\"./types\":25,\"./utils/function\":29}],17:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getModeObject = getModeObject;\n\nvar _mode = require(\"./mode\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides info about the current app. This return value may be cached and\n * passed around as it will always be DCE'd.\n * @param {?Window=} opt_win\n * @return {!./mode.ModeDef}\n */\nfunction getModeObject(opt_win) {\n  return {\n    localDev: (0, _mode.getMode)(opt_win).localDev,\n    development: (0, _mode.getMode)(opt_win).development,\n    filter: (0, _mode.getMode)(opt_win).filter,\n    minified: (0, _mode.getMode)(opt_win).minified,\n    lite: (0, _mode.getMode)(opt_win).lite,\n    test: (0, _mode.getMode)(opt_win).test,\n    log: (0, _mode.getMode)(opt_win).log,\n    version: (0, _mode.getMode)(opt_win).version,\n    rtvVersion: (0, _mode.getMode)(opt_win).rtvVersion,\n    singlePassType: (0, _mode.getMode)(opt_win).singlePassType\n  };\n}\n\n},{\"./mode\":18}],18:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getMode = getMode;\nexports.getRtvVersionForTesting = getRtvVersionForTesting;\nexports.resetRtvVersionForTesting = resetRtvVersionForTesting;\nexports.ModeDef = void 0;\n\nvar _internalVersion = require(\"./internal-version\");\n\nvar _urlParseQueryString = require(\"./url-parse-query-string\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   filter: (string|undefined),\n *   minified: boolean,\n *   lite: boolean,\n *   test: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   singlePassType: (string|undefined)\n * }}\n */\nvar ModeDef;\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\n\nexports.ModeDef = ModeDef;\nvar rtvVersion = '';\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\n\nfunction getMode(opt_win) {\n  var win = opt_win || self;\n\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n\n  return win.__AMP_MODE = getMode_(win);\n}\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\n\n\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  var AMP_CONFIG = self.AMP_CONFIG || {}; // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_DEV is only replaced when `gulp dist` is called without the\n  // --fortesting flag.\n\n  var IS_DEV = true;\n  var IS_MINIFIED = false;\n  var localDevEnabled = !!AMP_CONFIG.localDev;\n  var runningTests = !!AMP_CONFIG.test || IS_DEV && !!(win.__AMP_TEST || win.__karma__);\n  var runningTestsOnIe = win.__karma__ && win.__karma__.config.amp.testOnIe;\n  var isLocalDev = IS_DEV && (localDevEnabled || runningTests);\n  var hashQuery = (0, _urlParseQueryString.parseQueryString_)( // location.originalHash is set by the viewer when it removes the fragment\n  // from the URL.\n  win.location.originalHash || win.location.hash);\n  var singlePassType = AMP_CONFIG.spt;\n  var searchQuery = (0, _urlParseQueryString.parseQueryString_)(win.location.search);\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win, isLocalDev);\n  } // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `gulp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n\n\n  return {\n    localDev: isLocalDev,\n    // Triggers validation or enable pub level logging. Validation can be\n    // bypassed via #validate=0.\n    // Note that AMP_DEV_MODE flag is used for testing purposes.\n    // Use Array.indexOf instead of Array.includes because of #24219\n    development: !!(['1', 'actions', 'amp', 'amp4ads', 'amp4email'].indexOf(hashQuery['development']) >= 0 || win.AMP_DEV_MODE),\n    examiner: hashQuery['development'] == '2',\n    // Allows filtering validation errors by error category. For the\n    // available categories, see ErrorCategory in validator/validator.proto.\n    filter: hashQuery['filter'],\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    // amp-user-location override\n    userLocationOverride: hashQuery['amp-user-location'],\n    minified: IS_MINIFIED,\n    // Whether document is in an amp-lite viewer. It signal that the user\n    // would prefer to use less bandwidth.\n    lite: searchQuery['amp_lite'] != undefined,\n    test: runningTests,\n    testIe: runningTestsOnIe,\n    log: hashQuery['log'],\n    version: (0, _internalVersion.internalRuntimeVersion)(),\n    rtvVersion: rtvVersion,\n    singlePassType: singlePassType\n  };\n}\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n */\n\n\nfunction getRtvVersion(win, isLocalDev) {\n  // If it's local dev then we won't actually have a full version so\n  // just use the version.\n  if (isLocalDev) {\n    return (0, _internalVersion.internalRuntimeVersion)();\n  }\n\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  } // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n\n\n  return \"01\" + (0, _internalVersion.internalRuntimeVersion)();\n}\n/**\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n * @visibleForTesting\n */\n\n\nfunction getRtvVersionForTesting(win, isLocalDev) {\n  return getRtvVersion(win, isLocalDev);\n}\n/** @visibleForTesting */\n\n\nfunction resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n\n},{\"./internal-version\":14,\"./url-parse-query-string\":26}],19:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.waitForServices = waitForServices;\nexports.hasRenderDelayingServices = hasRenderDelayingServices;\nexports.isRenderDelayingService = isRenderDelayingService;\nexports.includedServices = includedServices;\nexports.RenderDelayingService = void 0;\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\nvar _service = require(\"./service\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A map of services that delay rendering. The key is the name of the service\n * and the value is a DOM query which is used to check if the service is needed\n * in the current document.\n * Do not add a service unless absolutely necessary.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this list is used for server-side rendering (SSR) and any\n * changes made to it must be made in coordination with caches that implement\n * SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @const {!Object<string, string>}\n */\nvar SERVICES = {\n  'amp-dynamic-css-classes': '[custom-element=amp-dynamic-css-classes]',\n  'variant': 'amp-experiment',\n  'amp-story-render': 'amp-story[standalone]'\n};\n/**\n * Base class for render delaying services.\n * This should be extended to ensure the service\n * is properly handled\n *\n * @interface\n */\n\nvar RenderDelayingService =\n/*#__PURE__*/\nfunction () {\n  function RenderDelayingService() {}\n\n  var _proto = RenderDelayingService.prototype;\n\n  /**\n   * Function to return a promise for when\n   * it is finished delaying render, and is ready.\n   * NOTE: This should simply return Promise.resolve,\n   * if your service does not need to perform any logic\n   * after being registered.\n   * @return {!Promise}\n   */\n  _proto.whenReady = function whenReady() {};\n\n  return RenderDelayingService;\n}();\n/**\n * Maximum milliseconds to wait for all extensions to load before erroring.\n * @const\n */\n\n\nexports.RenderDelayingService = RenderDelayingService;\nvar LOAD_TIMEOUT = 3000;\n/**\n * Detects any render delaying services that are required on the page, and\n * returns a promise with a timeout.\n * @param {!Window} win\n * @return {!Promise<!Array<*>>} resolves to an Array that has the same length\n *     as the detected render delaying services\n */\n\nfunction waitForServices(win) {\n  var promises = includedServices(win).map(function (serviceId) {\n    var serviceReadyPromise = (0, _service.getServicePromise)(win, serviceId).then(function (service) {\n      if (service && isRenderDelayingService(service)) {\n        return service.whenReady().then(function () {\n          return service;\n        });\n      }\n\n      return service;\n    });\n    return _services.Services.timerFor(win).timeoutPromise(LOAD_TIMEOUT, serviceReadyPromise, \"Render timeout waiting for service \" + serviceId + \" to be ready.\");\n  });\n  return Promise.all(promises);\n}\n/**\n * Returns true if the page has a render delaying service.\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nfunction hasRenderDelayingServices(win) {\n  return includedServices(win).length > 0;\n}\n/**\n * Function to determine if the passed\n * Object is a Render Delaying Service\n * @param {!Object} service\n * @return {boolean}\n */\n\n\nfunction isRenderDelayingService(service) {\n  var maybeRenderDelayingService =\n  /** @type {!RenderDelayingService}*/\n  service;\n  return typeof maybeRenderDelayingService.whenReady == 'function';\n}\n/**\n * Detects which, if any, render-delaying extensions are included on the page.\n * @param {!Window} win\n * @return {!Array<string>}\n */\n\n\nfunction includedServices(win) {\n  /** @const {!Document} */\n  var doc = win.document;\n  (0, _log.devAssert)(doc.body);\n  return Object.keys(SERVICES).filter(function (service) {\n    return doc.querySelector(SERVICES[service]);\n  });\n}\n\n},{\"./log\":16,\"./service\":20,\"./services\":21}],20:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getExistingServiceForDocInEmbedScope = getExistingServiceForDocInEmbedScope;\nexports.installServiceInEmbedScope = installServiceInEmbedScope;\nexports.registerServiceBuilder = registerServiceBuilder;\nexports.registerServiceBuilderForDoc = registerServiceBuilderForDoc;\nexports.rejectServicePromiseForDoc = rejectServicePromiseForDoc;\nexports.getService = getService;\nexports.getServicePromise = getServicePromise;\nexports.getExistingServiceOrNull = getExistingServiceOrNull;\nexports.getServicePromiseOrNull = getServicePromiseOrNull;\nexports.getServiceForDoc = getServiceForDoc;\nexports.getServicePromiseForDoc = getServicePromiseForDoc;\nexports.getServicePromiseOrNullForDoc = getServicePromiseOrNullForDoc;\nexports.setParentWindow = setParentWindow;\nexports.getParentWindow = getParentWindow;\nexports.getTopWindow = getTopWindow;\nexports.getParentWindowFrameElement = getParentWindowFrameElement;\nexports.getAmpdoc = getAmpdoc;\nexports.isDisposable = isDisposable;\nexports.assertDisposable = assertDisposable;\nexports.disposeServicesForDoc = disposeServicesForDoc;\nexports.disposeServicesForEmbed = disposeServicesForEmbed;\nexports.installServiceInEmbedIfEmbeddable = installServiceInEmbedIfEmbeddable;\nexports.adoptServiceForEmbedDoc = adoptServiceForEmbedDoc;\nexports.resetServiceForTesting = resetServiceForTesting;\nexports.EmbeddableService = exports.Disposable = void 0;\n\nvar _promise = require(\"./utils/promise\");\n\nvar _log = require(\"./log\");\n\nvar _experiments = require(\"./experiments\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (?function(new:Object, !Window)|\n *          ?function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nvar ServiceHolderDef;\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\n\nvar Disposable =\n/*#__PURE__*/\nfunction () {\n  function Disposable() {}\n\n  var _proto = Disposable.prototype;\n\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  _proto.dispose = function dispose() {};\n\n  return Disposable;\n}();\n/**\n * Services must implement this interface to be embeddable in FIEs.\n * @interface\n */\n\n\nexports.Disposable = Disposable;\n\nvar EmbeddableService =\n/*#__PURE__*/\nfunction () {\n  function EmbeddableService() {}\n\n  /**\n   * Installs a new instance of the service in the given FIE window.\n   * @param {!Window} unusedEmbedWin\n   * @param {!./service/ampdoc-impl.AmpDoc} unusedAmpDoc\n   */\n  EmbeddableService.installInEmbedWindow = function installInEmbedWindow(unusedEmbedWin, unusedAmpDoc) {};\n\n  return EmbeddableService;\n}();\n/**\n * Returns a service with the given id. Assumes that it has been constructed\n * already.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\n\n\nexports.EmbeddableService = EmbeddableService;\n\nfunction getExistingServiceForDocInEmbedScope(element, id) {\n  // TODO(#22733): completely remove this method once ampdoc-fie launches.\n  var document = element.ownerDocument;\n  var win = (0, _types.toWin)(document.defaultView);\n  var topWin = getTopWindow(win); // First, try to resolve via local embed window (if applicable).\n\n  var isEmbed = win != topWin;\n  var ampdocFieExperimentOn = (0, _experiments.isExperimentOn)(topWin, 'ampdoc-fie');\n\n  if (isEmbed && !ampdocFieExperimentOn) {\n    if (isServiceRegistered(win, id)) {\n      return getServiceInternal(win, id);\n    } // Fallback from FIE to parent is intentionally unsupported for safety.\n\n\n    return null;\n  } else {\n    // Resolve via the element's ampdoc.\n    return getServiceForDocOrNullInternal(element, id);\n  }\n}\n/**\n * Installs a service override on amp-doc level.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {!Object} service The service.\n */\n\n\nfunction installServiceInEmbedScope(embedWin, id, service) {\n  var topWin = getTopWindow(embedWin);\n  (0, _log.devAssert)(embedWin != topWin, 'Service override can only be installed in embed window: %s', id);\n  (0, _log.devAssert)(!isServiceRegistered(embedWin, id), 'Service override has already been installed: %s', id);\n  var ampdocFieExperimentOn = (0, _experiments.isExperimentOn)(topWin, 'ampdoc-fie');\n\n  if (ampdocFieExperimentOn) {\n    var ampdoc = getAmpdoc(embedWin.document);\n    registerServiceInternal(getAmpdocServiceHolder(ampdoc), ampdoc, id, function () {\n      return service;\n    },\n    /* override */\n    true);\n  } else {\n    registerServiceInternal(embedWin, embedWin, id, function () {\n      return service;\n    });\n    getServiceInternal(embedWin, id); // Force service to build.\n  }\n}\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\n\n\nfunction registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\n\n\nfunction registerServiceBuilderForDoc(nodeOrDoc, id, constructor, opt_instantiate) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\n\n\nfunction rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\n\n\nfunction getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\n\n\nfunction getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\n\n\nfunction getServiceForDoc(elementOrAmpDoc, id) {\n  var ampdoc = getAmpdoc(elementOrAmpDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\n\n\nfunction getServiceForDocOrNullInternal(element, id) {\n  var ampdoc = getAmpdoc(element);\n  var holder = getAmpdocServiceHolder(ampdoc);\n\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\n\n\nfunction setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\n\n\nfunction getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\n\n\nfunction getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\n\n\nfunction getParentWindowFrameElement(node, opt_topWin) {\n  var childWin = (node.ownerDocument || node).defaultView;\n  var topWin = opt_topWin || getTopWindow(childWin);\n\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return (\n        /** @type {?HTMLIFrameElement} */\n        childWin.frameElement\n      );\n    } catch (e) {// Ignore the error.\n    }\n  }\n\n  return null;\n}\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\n\n\nfunction getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    var win = (0, _types.toWin)(\n    /** @type {!Document} */\n    (nodeOrDoc.ownerDocument || nodeOrDoc).defaultView);\n    return getAmpdocService(win).getAmpDoc(\n    /** @type {!Node} */\n    nodeOrDoc);\n  }\n\n  return (\n    /** @type {!./service/ampdoc-impl.AmpDoc} */\n    nodeOrDoc\n  );\n}\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\n\n\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\n\n\nfunction getAmpdocService(win) {\n  return (\n    /** @type {!./service/ampdoc-impl.AmpDocService} */\n    getService(win, 'ampdoc')\n  );\n}\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n * @template T\n */\n\n\nfunction getServiceInternal(holder, id) {\n  (0, _log.devAssert)(isServiceRegistered(holder, id), \"Expected service \" + id + \" to be registered\");\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (!s.obj) {\n    (0, _log.devAssert)(s.ctor, \"Service \" + id + \" registered without ctor nor impl.\");\n    (0, _log.devAssert)(s.context, \"Service \" + id + \" registered without context.\");\n    s.obj = new s.ctor(s.context);\n    (0, _log.devAssert)(s.obj, \"Service \" + id + \" constructed to null.\");\n    s.ctor = null;\n    s.context = null; // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n\n  return s.obj;\n}\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n */\n\n\nfunction registerServiceInternal(holder, context, id, ctor, opt_override) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null\n    };\n  }\n\n  if (!opt_override && (s.ctor || s.obj)) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context; // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromiseInternal(holder, id) {\n  var cached = getServicePromiseOrNullInternal(holder, id);\n\n  if (cached) {\n    return cached;\n  } // Service is not registered.\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n\n\n  var services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return (\n    /** @type {!Promise<!Object>} */\n    services[id].promise\n  );\n}\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\n\n\nfunction rejectServicePromiseInternal(holder, id, error) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNullInternal(holder, id) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return s.promise = Promise.resolve(\n      /** @type {!Object} */\n      s.obj);\n    }\n  }\n\n  return null;\n}\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\n\n\nfunction getServices(holder) {\n  var services = holder.__AMP_SERVICES;\n\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n\n  return services;\n}\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\n\n\nfunction isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\n\n\nfunction assertDisposable(service) {\n  (0, _log.devAssert)(isDisposable(service), 'required to implement Disposable');\n  return (\n    /** @type {!Disposable} */\n    service\n  );\n}\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\n\n\nfunction disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\n\n\nfunction disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n/**\n * @param {!Object} holder Object holding the service instances.\n */\n\n\nfunction disposeServicesInternal(holder) {\n  // TODO(dvoytenko): Consider marking holder as destroyed for later-arriving\n  // service to be canceled automatically.\n  var services = getServices(holder);\n\n  var _loop = function _loop(id) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      return \"continue\";\n    }\n\n    var serviceHolder = services[id];\n\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then(function (instance) {\n        return disposeServiceInternal(id, instance);\n      });\n    }\n  };\n\n  for (var id in services) {\n    var _ret = _loop(id);\n\n    if (_ret === \"continue\") continue;\n  }\n}\n/**\n * @param {string} id\n * @param {!Object} service\n */\n\n\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    (0, _log.dev)().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n/**\n * Adopts an embeddable (implements `EmbeddableService` interface) service\n * in embed scope.\n * @param {!Window} embedWin\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} serviceClass\n * @suppress {missingProperties}\n * @return {boolean}\n */\n\n\nfunction installServiceInEmbedIfEmbeddable(embedWin, serviceClass) {\n  var isEmbeddableService = typeof serviceClass.installInEmbedWindow === 'function';\n\n  if (!isEmbeddableService) {\n    return false;\n  }\n\n  var frameElement = (0, _log.dev)().assertElement(embedWin.frameElement, 'frameElement not found for embed');\n  var ampdoc = getAmpdoc(frameElement);\n  serviceClass.installInEmbedWindow(embedWin, ampdoc);\n  return true;\n}\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\n\n\nfunction adoptServiceForEmbedDoc(ampdoc, id) {\n  var service = getServiceInternal(getAmpdocServiceHolder((0, _log.devAssert)(ampdoc.getParent())), id);\n  registerServiceInternal(getAmpdocServiceHolder(ampdoc), ampdoc, id, function () {\n    return service;\n  });\n}\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\n\n\nfunction resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\n\n\nfunction isServiceRegistered(holder, id) {\n  var service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id]; // All registered services must have an implementation or a constructor.\n\n  return !!(service && (service.ctor || service.obj));\n}\n/** @return {!ServiceHolderDef} */\n\n\nfunction emptyServiceHolderWithPromise() {\n  var deferred = new _promise.Deferred();\n  var promise = deferred.promise,\n      resolve = deferred.resolve,\n      reject = deferred.reject;\n  promise.catch(function () {}); // avoid uncaught exception when service gets rejected\n\n  return {\n    obj: null,\n    promise: promise,\n    resolve: resolve,\n    reject: reject,\n    context: null,\n    ctor: null\n  };\n}\n\n},{\"./experiments\":12,\"./log\":16,\"./types\":25,\"./utils/promise\":33}],21:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.Services = exports.SubscriptionService = void 0;\n\nvar _service = require(\"./service\");\n\nvar _elementService = require(\"./element-service\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nvar SubscriptionService;\nexports.SubscriptionService = SubscriptionService;\n\nvar Services =\n/*#__PURE__*/\nfunction () {\n  function Services() {}\n\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  Services.accessServiceForDoc = function accessServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'access', 'amp-access')\n    );\n  }\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  ;\n\n  Services.accessServiceForDocOrNull = function accessServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'access', 'amp-access')\n    );\n  }\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  ;\n\n  Services.subscriptionsServiceForDoc = function subscriptionsServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!SubscriptionService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  ;\n\n  Services.subscriptionsServiceForDocOrNull = function subscriptionsServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?SubscriptionService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  ;\n\n  Services.actionServiceForDoc = function actionServiceForDoc(element) {\n    return (\n      /** @type {!./service/action-impl.ActionService} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'action')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  ;\n\n  Services.standardActionsForDoc = function standardActionsForDoc(element) {\n    return (\n      /** @type {!./service/standard-actions-impl.StandardActions} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'standard-actions')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  ;\n\n  Services.activityForDoc = function activityForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'activity', 'amp-analytics')\n    );\n  }\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  ;\n\n  Services.ampdocServiceFor = function ampdocServiceFor(window) {\n    return (\n      /** @type {!./service/ampdoc-impl.AmpDocService} */\n      (0, _service.getService)(window, 'ampdoc')\n    );\n  }\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  ;\n\n  Services.ampdoc = function ampdoc(nodeOrAmpDoc) {\n    return (0, _service.getAmpdoc)(nodeOrAmpDoc);\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  ;\n\n  Services.analyticsForDoc = function analyticsForDoc(element, loadAnalytics) {\n    if (loadAnalytics === void 0) {\n      loadAnalytics = false;\n    }\n\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      var ampdoc = (0, _service.getAmpdoc)(element);\n      Services.extensionsFor(ampdoc.win).\n      /*OK*/\n      installExtensionForDoc(ampdoc, 'amp-analytics');\n    }\n\n    return (\n      /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'amp-analytics-instrumentation', 'amp-analytics')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  ;\n\n  Services.analyticsForDocOrNull = function analyticsForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'amp-analytics-instrumentation', 'amp-analytics')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  ;\n\n  Services.batchedXhrFor = function batchedXhrFor(window) {\n    return (\n      /** @type {!./service/batched-xhr-impl.BatchedXhr} */\n      (0, _service.getService)(window, 'batched-xhr')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  ;\n\n  Services.bindForDocOrNull = function bindForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */\n      (0, _elementService.getElementServiceIfAvailableForDocInEmbedScope)(element, 'bind', 'amp-bind')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  ;\n\n  Services.cidForDoc = function cidForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/cid-impl.CidDef>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'cid')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  ;\n\n  Services.navigationForDoc = function navigationForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/navigation.Navigation} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'navigation')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  ;\n\n  Services.loaderServiceForDoc = function loaderServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'loader', 'amp-loader')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  ;\n\n  Services.standaloneServiceForDoc = function standaloneServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'standalone', 'amp-standalone')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  ;\n\n  Services.cryptoFor = function cryptoFor(window) {\n    return (\n      /** @type {!./service/crypto-impl.Crypto} */\n      (0, _service.getService)(window, 'crypto')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  ;\n\n  Services.documentInfoForDoc = function documentInfoForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/document-info-impl.DocInfo} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'documentInfo').get()\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  ;\n\n  Services.extensionsFor = function extensionsFor(window) {\n    return (\n      /** @type {!./service/extensions-impl.Extensions} */\n      (0, _service.getService)(window, 'extensions')\n    );\n  }\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  ;\n\n  Services.formSubmitForDoc = function formSubmitForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  ;\n\n  Services.hiddenObserverForDoc = function hiddenObserverForDoc(element) {\n    return (\n      /** @type {!./service/hidden-observer-impl.HiddenObserver} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'hidden-observer')\n    );\n  }\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  ;\n\n  Services.historyForDoc = function historyForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/history-impl.History} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'history')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  ;\n\n  Services.inputFor = function inputFor(win) {\n    return (0, _service.getService)(win, 'input');\n  }\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  ;\n\n  Services.inputmaskServiceForDocOrNull = function inputmaskServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  ;\n\n  Services.ownersForDoc = function ownersForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/owners-interface.OwnersInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'owners')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  ;\n\n  Services.performanceFor = function performanceFor(window) {\n    return (\n      /** @type {!./service/performance-impl.Performance}*/\n      (0, _service.getService)(window, 'performance')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  ;\n\n  Services.performanceForOrNull = function performanceForOrNull(window) {\n    return (\n      /** @type {!./service/performance-impl.Performance}*/\n      (0, _service.getExistingServiceOrNull)(window, 'performance')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  ;\n\n  Services.platformFor = function platformFor(window) {\n    return (\n      /** @type {!./service/platform-impl.Platform} */\n      (0, _service.getService)(window, 'platform')\n    );\n  }\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  ;\n\n  Services.positionObserverForDoc = function positionObserverForDoc(element) {\n    return (\n      /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */\n      (0, _service.getServiceForDoc)(element, 'position-observer')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  ;\n\n  Services.resourcesForDoc = function resourcesForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/resources-interface.ResourcesInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'resources')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  ;\n\n  Services.resourcesPromiseForDoc = function resourcesPromiseForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'resources')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?{incomingFragment: string, outgoingFragment: string}>}\n   */\n  ;\n\n  Services.shareTrackingForOrNull = function shareTrackingForOrNull(win) {\n    return (\n      /** @type {!Promise<?{incomingFragment: string, outgoingFragment: string}>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'share-tracking', 'amp-share-tracking', true)\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>}\n   */\n  ;\n\n  Services.storyVariableServiceForOrNull = function storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-variable', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  ;\n\n  Services.storyVariableService = function storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-variable')\n    );\n  }\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>}\n   */\n  ;\n\n  Services.storyStoreServiceForOrNull = function storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-store', 'amp-story')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  ;\n\n  Services.storyStoreService = function storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-store')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  ;\n\n  Services.storyMediaQueryService = function storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-media-query')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  ;\n\n  Services.storyRequestService = function storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-request')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  ;\n\n  Services.mediaPerformanceMetricsService = function mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (0, _service.getExistingServiceOrNull)(win, 'media-performance-metrics')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  ;\n\n  Services.localizationServiceForOrNull = function localizationServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'localization', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  ;\n\n  Services.localizationService = function localizationService(win) {\n    return (0, _service.getService)(win, 'localization');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  ;\n\n  Services.storyAnalyticsServiceForOrNull = function storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-analytics', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  ;\n\n  Services.storyAnalyticsService = function storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-analytics')\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService}\n   */\n  ;\n\n  Services.storyStoreServiceV01 = function storyStoreServiceV01(win) {\n    return (0, _service.getService)(win, 'story-store');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-request-service.AmpStoryRequestService}\n   */\n  ;\n\n  Services.storyRequestServiceV01 = function storyRequestServiceV01(win) {\n    return (0, _service.getService)(win, 'story-request-v01');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  ;\n\n  Services.localizationServiceForOrNullV01 = function localizationServiceForOrNullV01(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'localization-v01', 'amp-story', true)\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  ;\n\n  Services.localizationServiceV01 = function localizationServiceV01(win) {\n    return (0, _service.getService)(win, 'localization-v01');\n  }\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>}\n   */\n  ;\n\n  Services.viewerIntegrationVariableServiceForOrNull = function viewerIntegrationVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'viewer-integration-variable', 'amp-viewer-integration', true)\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  ;\n\n  Services.webAnimationServiceFor = function webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'web-animation', 'amp-animation')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  ;\n\n  Services.storageForDoc = function storageForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/storage-impl.Storage>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'storage')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/template-impl.Templates}\n   */\n  ;\n\n  Services.templatesFor = function templatesFor(window) {\n    return (\n      /** @type {!./service/template-impl.Templates} */\n      (0, _service.getService)(window, 'templates')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  ;\n\n  Services.timerFor = function timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return (\n      /** @type {!./service/timer-impl.Timer} */\n      (0, _service.getService)(window, 'timer')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  ;\n\n  Services.urlReplacementsForDoc = function urlReplacementsForDoc(element) {\n    return (\n      /** @type {!./service/url-replacements-impl.UrlReplacements} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'url-replace')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  ;\n\n  Services.userNotificationManagerForDoc = function userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'userNotificationManager', 'amp-user-notification')\n    );\n  }\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  ;\n\n  Services.consentPolicyServiceForDocOrNull = function consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'consentPolicyManager', 'amp-consent')\n    );\n  }\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  ;\n\n  Services.geoForDocOrNull = function geoForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'geo', 'amp-geo', true)\n    );\n  }\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>}\n   */\n  ;\n\n  Services.userLocationForDocOrNull = function userLocationForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'user-location', 'amp-user-location', true)\n    );\n  }\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  ;\n\n  Services.urlForDoc = function urlForDoc(element) {\n    return (\n      /** @type {!./service/url-impl.Url} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'url')\n    );\n  }\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  ;\n\n  Services.variantsForDocOrNull = function variantsForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'variant', 'amp-experiment', true)\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  ;\n\n  Services.videoManagerForDoc = function videoManagerForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/video-manager-impl.VideoManager} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'video-manager')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>}\n   */\n  ;\n\n  Services.viewerAssistanceForDocOrNull = function viewerAssistanceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'amp-viewer-assistance', 'amp-viewer-assistance')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  ;\n\n  Services.viewerForDoc = function viewerForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/viewer-interface.ViewerInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'viewer')\n    );\n  }\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  ;\n\n  Services.viewerPromiseForDoc = function viewerPromiseForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'viewer')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  ;\n\n  Services.vsyncFor = function vsyncFor(window) {\n    return (\n      /** @type {!./service/vsync-impl.Vsync} */\n      (0, _service.getService)(window, 'vsync')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  ;\n\n  Services.viewportForDoc = function viewportForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/viewport/viewport-interface.ViewportInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'viewport')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  ;\n\n  Services.xhrFor = function xhrFor(window) {\n    return (\n      /** @type {!./service/xhr-impl.Xhr} */\n      (0, _service.getService)(window, 'xhr')\n    );\n  };\n\n  return Services;\n}();\n\nexports.Services = Services;\n\n},{\"./element-service\":9,\"./service\":20}],22:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.dashToCamelCase = dashToCamelCase;\nexports.camelCaseToDash = camelCaseToDash;\nexports.dashToUnderline = dashToUnderline;\nexports.endsWith = endsWith;\nexports.startsWith = startsWith;\nexports.includes = includes;\nexports.expandTemplate = expandTemplate;\nexports.stringHash32 = stringHash32;\nexports.trimEnd = trimEnd;\nexports.trimStart = trimStart;\nexports.padStart = padStart;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n/**\n * @param {string} match\n * @return {string}\n */\n\n\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\n\n\nfunction dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\n\n\nfunction camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\n\n\nfunction dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\n\n\nfunction endsWith(string, suffix) {\n  var index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n/**\n * Polyfill for String.prototype.startsWith.\n * @param {string} string\n * @param {string} prefix\n * @return {boolean}\n */\n\n\nfunction startsWith(string, prefix) {\n  if (prefix.length > string.length) {\n    return false;\n  }\n\n  return string.lastIndexOf(prefix, 0) == 0;\n}\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\n\n\nfunction includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + substring.length > string.length) {\n    return false;\n  }\n\n  return string.indexOf(substring, start) !== -1;\n}\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\n\n\nfunction expandTemplate(template, getter, opt_maxIterations) {\n  var maxIterations = opt_maxIterations || 1;\n\n  var _loop = function _loop(i) {\n    var matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, function (_a, b) {\n      matches++;\n      return getter(b);\n    });\n\n    if (!matches) {\n      return \"break\";\n    }\n  };\n\n  for (var i = 0; i < maxIterations; i++) {\n    var _ret = _loop(i);\n\n    if (_ret === \"break\") break;\n  }\n\n  return template;\n}\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\n\n\nfunction stringHash32(str) {\n  var length = str.length;\n  var hash = 5381;\n\n  for (var i = 0; i < length; i++) {\n    hash = hash * 33 ^ str.charCodeAt(i);\n  } // Convert from 32-bit signed to unsigned.\n\n\n  return String(hash >>> 0);\n}\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\n\n\nfunction trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\n\n\nfunction trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {*} TODO(#23582): Specify return type\n */\n\n\nfunction padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n\n  targetLength = targetLength - s.length;\n  var padding = padString;\n\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n\n  return padding.slice(0, targetLength) + s;\n}\n\n},{}],23:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.installStylesForDoc = installStylesForDoc;\nexports.installStylesLegacy = installStylesLegacy;\nexports.installCssTransformer = installCssTransformer;\nexports.setBodyMadeVisibleForTesting = setBodyMadeVisibleForTesting;\nexports.makeBodyVisible = makeBodyVisible;\nexports.makeBodyVisibleRecovery = makeBodyVisibleRecovery;\nexports.bodyAlwaysVisible = bodyAlwaysVisible;\n\nvar _commonSignals = require(\"./common-signals\");\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\nvar _service = require(\"./service\");\n\nvar _dom = require(\"./dom\");\n\nvar _object = require(\"./utils/object\");\n\nvar _style = require(\"./style\");\n\nvar _renderDelayingServices = require(\"./render-delaying-services\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TRANSFORMER_PROP = '__AMP_CSS_TR';\nvar STYLE_MAP_PROP = '__AMP_CSS_SM';\n/**\n * Adds the given css text to the given ampdoc.\n *\n * The style tags will be at the beginning of the head before all author\n * styles. One element can be the main runtime CSS. This is guaranteed\n * to always be the first stylesheet in the doc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc The ampdoc that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are available.\n *     Not using a promise, because this is synchronous when possible.\n *     for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\n\nfunction installStylesForDoc(ampdoc, cssText, cb, opt_isRuntimeCss, opt_ext) {\n  var cssRoot = ampdoc.getHeadNode();\n  var style = insertStyleElement(cssRoot, maybeTransform(cssRoot, cssText), opt_isRuntimeCss || false, opt_ext || null);\n\n  if (cb) {\n    var rootNode = ampdoc.getRootNode(); // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n\n    if (styleLoaded(rootNode, style)) {\n      cb(style);\n      return style;\n    } // Poll until styles are available.\n\n\n    var interval = setInterval(function () {\n      if (styleLoaded(rootNode, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n\n  return style;\n}\n/**\n * Adds the given css text to the given document.\n * TODO(dvoytenko, #22733): Remove this method once FIE/ampdoc migration is\n * done.\n *\n * @param {!Document} doc The document that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are\n *     available. Not using a promise, because this is synchronous when\n *     possible. for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\n\n\nfunction installStylesLegacy(doc, cssText, cb, opt_isRuntimeCss, opt_ext) {\n  var style = insertStyleElement((0, _log.dev)().assertElement(doc.head), cssText, opt_isRuntimeCss || false, opt_ext || null);\n\n  if (cb) {\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(doc, style)) {\n      cb(style);\n      return style;\n    } // Poll until styles are available.\n\n\n    var interval = setInterval(function () {\n      if (styleLoaded(doc, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n\n  return style;\n}\n/**\n * Creates the properly configured style element.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @param {boolean} isRuntimeCss\n * @param {?string} ext\n * @return {!Element}\n */\n\n\nfunction insertStyleElement(cssRoot, cssText, isRuntimeCss, ext) {\n  var styleMap = cssRoot[STYLE_MAP_PROP];\n\n  if (!styleMap) {\n    styleMap = cssRoot[STYLE_MAP_PROP] = (0, _object.map)();\n  }\n\n  var isExtCss = !isRuntimeCss && ext && ext != 'amp-custom' && ext != 'amp-keyframes';\n  var key = isRuntimeCss ? 'amp-runtime' : isExtCss ? \"amp-extension=\" + ext : null; // Check if it has already been created or discovered.\n\n  if (key) {\n    var existing = getExistingStyleElement(cssRoot, styleMap, key);\n\n    if (existing) {\n      if (existing.textContent !== cssText) {\n        existing.textContent = cssText;\n      }\n\n      return existing;\n    }\n  } // Create the new style element and append to cssRoot.\n\n\n  var doc = cssRoot.ownerDocument || cssRoot;\n  var style = doc.createElement('style');\n  style.\n  /*OK*/\n  textContent = cssText;\n  var afterElement = null; // Make sure that we place style tags after the main runtime CSS. Otherwise\n  // the order is random.\n\n  if (isRuntimeCss) {\n    style.setAttribute('amp-runtime', '');\n  } else if (isExtCss) {\n    style.setAttribute('amp-extension', ext || '');\n    afterElement = (0, _log.dev)().assertElement(getExistingStyleElement(cssRoot, styleMap, 'amp-runtime'));\n  } else {\n    if (ext) {\n      style.setAttribute(ext, '');\n    }\n\n    afterElement = cssRoot.lastChild;\n  }\n\n  (0, _dom.insertAfterOrAtStart)(cssRoot, style, afterElement);\n\n  if (key) {\n    styleMap[key] = style;\n  }\n\n  return style;\n}\n/**\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {!Object<string, !Element>} styleMap\n * @param {string} key\n * @return {?Element}\n */\n\n\nfunction getExistingStyleElement(cssRoot, styleMap, key) {\n  // Already cached.\n  if (styleMap[key]) {\n    return styleMap[key];\n  } // Check if the style has already been added by the server layout.\n\n\n  var existing = cssRoot.\n  /*OK*/\n  querySelector(\"style[\" + key + \"]\");\n\n  if (existing) {\n    styleMap[key] = existing;\n    return existing;\n  } // Nothing found.\n\n\n  return null;\n}\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {function(string):string} transformer\n */\n\n\nfunction installCssTransformer(cssRoot, transformer) {\n  cssRoot[TRANSFORMER_PROP] = transformer;\n}\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @return {string}\n */\n\n\nfunction maybeTransform(cssRoot, cssText) {\n  var transformer = cssRoot[TRANSFORMER_PROP];\n  return transformer ? transformer(cssText) : cssText;\n}\n/** @private {boolean} */\n\n\nvar bodyMadeVisible = false;\n/**\n * @param {boolean} value\n * @visibleForTesting\n */\n\nfunction setBodyMadeVisibleForTesting(value) {\n  bodyMadeVisible = value;\n}\n/**\n * Sets the document's body opacity to 1.\n * If the body is not yet available (because our script was loaded\n * synchronously), polls until it is.\n * @param {!Document} doc The document who's body we should make visible.\n */\n\n\nfunction makeBodyVisible(doc) {\n  (0, _log.devAssert)(doc.defaultView, 'Passed in document must have a defaultView');\n  var win =\n  /** @type {!Window} */\n  doc.defaultView;\n  (0, _dom.waitForBodyOpenPromise)(doc).then(function () {\n    return (0, _renderDelayingServices.waitForServices)(win);\n  }).catch(function (reason) {\n    (0, _log.rethrowAsync)(reason);\n    return [];\n  }).then(function (services) {\n    bodyMadeVisible = true;\n    setBodyVisibleStyles(doc);\n    var ampdoc = (0, _service.getAmpdoc)(doc);\n    ampdoc.signals().signal(_commonSignals.CommonSignals.RENDER_START);\n\n    if (services.length > 0) {\n      var resources = _services.Services.resourcesForDoc(doc.documentElement);\n\n      resources.\n      /*OK*/\n      schedulePass(1,\n      /* relayoutAll */\n      true);\n    }\n\n    try {\n      var perf = _services.Services.performanceFor(win);\n\n      perf.tick('mbv');\n      perf.flush();\n    } catch (e) {}\n  });\n}\n/**\n * Set the document's body opacity to 1. Called in error cases.\n * @param {!Document} doc The document who's body we should make visible.\n */\n\n\nfunction makeBodyVisibleRecovery(doc) {\n  (0, _log.devAssert)(doc.defaultView, 'Passed in document must have a defaultView');\n\n  if (bodyMadeVisible) {\n    return;\n  }\n\n  bodyMadeVisible = true;\n  setBodyVisibleStyles(doc);\n}\n/**\n * Make sure that body exists, and make it visible.\n * @param {!Document} doc\n */\n\n\nfunction setBodyVisibleStyles(doc) {\n  (0, _style.setStyles)((0, _log.dev)().assertElement(doc.body), {\n    opacity: 1,\n    visibility: 'visible',\n    'animation': 'none'\n  });\n}\n/**\n * Indicates that the body is always visible. For instance, in case of PWA.\n * This check is on a module level variable, and could be problematic if you are\n * relying on this function across different binaries.\n * @param {!Window} unusedWin\n */\n\n\nfunction bodyAlwaysVisible(unusedWin) {\n  bodyMadeVisible = true;\n}\n/**\n * Checks whether a style element was registered in the DOM.\n * @param {!Document|!ShadowRoot} doc\n * @param {!Element} style\n * @return {boolean}\n */\n\n\nfunction styleLoaded(doc, style) {\n  var sheets = doc.styleSheets;\n\n  for (var i = 0; i < sheets.length; i++) {\n    var sheet = sheets[i];\n\n    if (sheet.ownerNode == style) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n},{\"./common-signals\":5,\"./dom\":8,\"./log\":16,\"./render-delaying-services\":19,\"./service\":20,\"./services\":21,\"./style\":24,\"./utils/object\":31}],24:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.camelCaseToTitleCase = camelCaseToTitleCase;\nexports.getVendorJsPropertyName = getVendorJsPropertyName;\nexports.setImportantStyles = setImportantStyles;\nexports.setStyle = setStyle;\nexports.getStyle = getStyle;\nexports.setStyles = setStyles;\nexports.assertNotDisplay = assertNotDisplay;\nexports.assertDoesNotContainDisplay = assertDoesNotContainDisplay;\nexports.setInitialDisplay = setInitialDisplay;\nexports.toggle = toggle;\nexports.px = px;\nexports.deg = deg;\nexports.translateX = translateX;\nexports.translate = translate;\nexports.scale = scale;\nexports.rotate = rotate;\nexports.removeAlphaFromColor = removeAlphaFromColor;\nexports.computedStyle = computedStyle;\nexports.resetStyles = resetStyles;\nexports.propagateObjectFitStyles = propagateObjectFitStyles;\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object.js\");\n\nvar _string = require(\"./string\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\n\n/** @type {Object<string, string>} */\nvar propertyNameCache;\n/** @const {!Array<string>} */\n\nvar vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n/**\n * @export\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\n\nfunction camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\n\n\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (var i = 0; i < vendorPrefixes.length; i++) {\n    var propertyName = vendorPrefixes[i] + titleCase;\n\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n\n  return '';\n}\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @export\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\n\n\nfunction getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if ((0, _string.startsWith)(camelCase, '--')) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n\n  if (!propertyNameCache) {\n    propertyNameCache = (0, _object.map)();\n  }\n\n  var propertyName = propertyNameCache[camelCase];\n\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n\n    if (style[camelCase] === undefined) {\n      var titleCase = camelCaseToTitleCase(camelCase);\n      var prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n\n  return propertyName;\n}\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\n\n\nfunction setImportantStyles(element, styles) {\n  var style = element.style;\n\n  for (var k in styles) {\n    style.setProperty(getVendorJsPropertyName(style, k), styles[k].toString(), 'important');\n  }\n}\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\n\n\nfunction setStyle(element, property, value, opt_units, opt_bypassCache) {\n  var propertyName = getVendorJsPropertyName(element.style, property, opt_bypassCache);\n\n  if (propertyName) {\n    element.style[propertyName] =\n    /** @type {string} */\n    opt_units ? value + opt_units : value;\n  }\n}\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\n\n\nfunction getStyle(element, property, opt_bypassCache) {\n  var propertyName = getVendorJsPropertyName(element.style, property, opt_bypassCache);\n\n  if (!propertyName) {\n    return undefined;\n  }\n\n  return element.style[propertyName];\n}\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\n\n\nfunction setStyles(element, styles) {\n  for (var k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\n\n\nfunction assertNotDisplay(style) {\n  if (style === 'display') {\n    (0, _log.dev)().error('STYLE', '`display` style detected. You must use toggle instead.');\n  }\n\n  return style;\n}\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\n\n\nfunction assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    (0, _log.dev)().error('STYLE', '`display` style detected in styles. You must use toggle instead.');\n  }\n\n  return styles;\n}\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\n\n\nfunction setInitialDisplay(el, value) {\n  var style = el.style;\n  (0, _log.devAssert)(value !== '' && value !== 'none', 'Initial display value must not be \"none\". Use toggle instead.');\n  (0, _log.devAssert)(!style['display'], 'setInitialDisplay MUST NOT be used for ' + 'resetting the display style. If you are looking for display:none ' + 'toggling, use toggle instead.');\n  style['display'] = value;\n}\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\n\n\nfunction toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\n\n\nfunction px(value) {\n  return value + \"px\";\n}\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\n\n\nfunction deg(value) {\n  return value + \"deg\";\n}\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction translateX(value) {\n  if (typeof value == 'string') {\n    return \"translateX(\" + value + \")\";\n  }\n\n  return \"translateX(\" + px(value) + \")\";\n}\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\n\n\nfunction translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n\n  if (opt_y === undefined) {\n    return \"translate(\" + x + \")\";\n  }\n\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n\n  return \"translate(\" + x + \", \" + opt_y + \")\";\n}\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction scale(value) {\n  return \"scale(\" + value + \")\";\n}\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n\n  return \"rotate(\" + value + \")\";\n}\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\n\n\nfunction removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(/\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g, '($1,$2,$3, 1)');\n}\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!Object<string, string>}\n */\n\n\nfunction computedStyle(win, el) {\n  var style =\n  /** @type {?CSSStyleDeclaration} */\n  win.getComputedStyle(el);\n  return (\n    /** @type {!Object<string, string>} */\n    style || (0, _object.map)()\n  );\n}\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\n\n\nfunction resetStyles(element, properties) {\n  for (var i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\n\n\nfunction propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n},{\"./log\":16,\"./string\":22,\"./utils/object.js\":31}],25:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isArray = isArray;\nexports.toArray = toArray;\nexports.isObject = isObject;\nexports.isFiniteNumber = isFiniteNumber;\nexports.isEnumValue = isEnumValue;\nexports.toWin = toWin;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nvar toString_ = Object.prototype.toString;\n/**\n * Returns the ECMA [[Class]] of a value\n * @param {*} value\n * @return {string}\n */\n\nfunction toString(value) {\n  return toString_.call(value);\n}\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\n\n\nfunction toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  return toString(value) === '[object Object]';\n}\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n/**\n * Checks whether `s` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} s\n * @return {boolean}\n * @template T\n */\n\n\nfunction isEnumValue(enumObj, s) {\n  for (var k in enumObj) {\n    if (enumObj[k] === s) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {!Window|null} winOrNull\n * @return {!Window}\n */\n\n\nfunction toWin(winOrNull) {\n  return (\n    /** @type {!Window} */\n    winOrNull\n  );\n}\n\n},{}],26:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.parseQueryString_ = parseQueryString_;\n\nvar _urlTryDecodeUriComponent = require(\"./url-try-decode-uri-component\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar regex = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * DO NOT import the function from this file. Instead, import parseQueryString\n * from `src/url.js`.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\n\nfunction parseQueryString_(queryString) {\n  var params =\n  /** @type {!JsonObject} */\n  Object.create(null);\n\n  if (!queryString) {\n    return params;\n  }\n\n  var match;\n\n  while (match = regex.exec(queryString)) {\n    var name = (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(match[1], match[1]);\n    var value = match[2] ? (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(match[2].replace(/\\+/g, ' '), match[2]) : '';\n    params[name] = value;\n  }\n\n  return params;\n}\n\n},{\"./url-try-decode-uri-component\":27}],27:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.tryDecodeUriComponent_ = tryDecodeUriComponent_;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * DO NOT import the function from this file. Instead, import\n * tryDecodeUriComponent from `src/url.js`.\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nfunction tryDecodeUriComponent_(component, fallback) {\n  if (fallback === void 0) {\n    fallback = '';\n  }\n\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n},{}],28:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getWinOrigin = getWinOrigin;\nexports.parseUrlDeprecated = parseUrlDeprecated;\nexports.parseUrlWithA = parseUrlWithA;\nexports.appendEncodedParamStringToUrl = appendEncodedParamStringToUrl;\nexports.addParamToUrl = addParamToUrl;\nexports.addParamsToUrl = addParamsToUrl;\nexports.addMissingParamsToUrl = addMissingParamsToUrl;\nexports.serializeQueryString = serializeQueryString;\nexports.isSecureUrlDeprecated = isSecureUrlDeprecated;\nexports.assertHttpsUrl = assertHttpsUrl;\nexports.assertAbsoluteHttpOrHttpsUrl = assertAbsoluteHttpOrHttpsUrl;\nexports.parseQueryString = parseQueryString;\nexports.removeFragment = removeFragment;\nexports.getFragment = getFragment;\nexports.isProxyOrigin = isProxyOrigin;\nexports.getProxyServingType = getProxyServingType;\nexports.isLocalhostOrigin = isLocalhostOrigin;\nexports.isProtocolValid = isProtocolValid;\nexports.removeAmpJsParamsFromUrl = removeAmpJsParamsFromUrl;\nexports.removeSearch = removeSearch;\nexports.removeParamsFromSearch = removeParamsFromSearch;\nexports.getSourceUrl = getSourceUrl;\nexports.getSourceOrigin = getSourceOrigin;\nexports.resolveRelativeUrl = resolveRelativeUrl;\nexports.resolveRelativeUrlFallback_ = resolveRelativeUrlFallback_;\nexports.getCorsUrl = getCorsUrl;\nexports.checkCorsUrl = checkCorsUrl;\nexports.tryDecodeUriComponent = tryDecodeUriComponent;\nexports.SOURCE_ORIGIN_PARAM = void 0;\n\nvar _lruCache = require(\"./utils/lru-cache\");\n\nvar _object = require(\"./utils/object\");\n\nvar _string = require(\"./string\");\n\nvar _mode = require(\"./mode\");\n\nvar _types = require(\"./types\");\n\nvar _urlParseQueryString = require(\"./url-parse-query-string\");\n\nvar _urlTryDecodeUriComponent = require(\"./url-try-decode-uri-component\");\n\nvar _config = require(\"./config\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @type {!JsonObject}\n */\nvar SERVING_TYPE_PREFIX = (0, _object.dict)({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n  // Actions viewer\n  'action': true\n});\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\n\nvar a;\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\n\nvar cache;\n/** @private @const Matches amp_js_* parameters in query string. */\n\nvar AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n/** @private @const Matches amp_gsa parameters in query string. */\n\nvar AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n/** @private @const Matches amp_r parameters in query string. */\n\nvar AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n/** @private @const Matches amp_kit parameters in query string. */\n\nvar AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n/** @private @const Matches usqp parameters from goog experiment in query string. */\n\nvar GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\nvar INVALID_PROTOCOLS = [\n/*eslint no-script-url: 0*/\n'javascript:',\n/*eslint no-script-url: 0*/\n'data:',\n/*eslint no-script-url: 0*/\n'vbscript:'];\n/** @const {string} */\n\nvar SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\n\nexports.SOURCE_ORIGIN_PARAM = SOURCE_ORIGIN_PARAM;\n\nfunction getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n * @return {!Location}\n */\n\n\nfunction parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a =\n    /** @type {!HTMLAnchorElement} */\n    self.document.createElement('a');\n    cache = self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new _lruCache.LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, opt_nocache ? null : cache);\n}\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n * @return {!Location}\n * @restricted\n */\n\n\nfunction parseUrlWithA(a, url, opt_cache) {\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url; // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  var info =\n  /** @type {!Location} */\n  {\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null // Set below.\n\n  }; // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  } // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n\n\n  if (info.protocol == 'http:' && info.port == 80 || info.protocol == 'https:' && info.port == 443) {\n    info.port = '';\n    info.host = info.hostname;\n  } // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n\n\n  var origin;\n\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n\n  info.origin = origin; // Freeze during testing to avoid accidental mutation.\n\n  var frozen = (0, _mode.getMode)().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\n\n\nfunction appendEncodedParamStringToUrl(url, paramString, opt_addToFront) {\n  if (!paramString) {\n    return url;\n  }\n\n  var mainAndFragment = url.split('#', 2);\n  var mainAndQuery = mainAndFragment[0].split('?', 2);\n  var newUrl = mainAndQuery[0] + (mainAndQuery[1] ? opt_addToFront ? \"?\" + paramString + \"&\" + mainAndQuery[1] : \"?\" + mainAndQuery[1] + \"&\" + paramString : \"?\" + paramString);\n  newUrl += mainAndFragment[1] ? \"#\" + mainAndFragment[1] : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\n\n\nfunction addParamToUrl(url, key, value, opt_addToFront) {\n  var field = encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction addMissingParamsToUrl(url, params) {\n  var location = parseUrlDeprecated(url);\n  var existingParams = parseQueryString(location.search);\n  var paramsToAdd = (0, _object.dict)({});\n  var keys = Object.keys(params);\n\n  for (var i = 0; i < keys.length; i++) {\n    if (!(0, _object.hasOwn)(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n\n  return addParamsToUrl(url, paramsToAdd);\n}\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction serializeQueryString(params) {\n  var s = [];\n\n  for (var k in params) {\n    var v = params[k];\n\n    if (v == null) {\n      continue;\n    } else if ((0, _types.isArray)(v)) {\n      for (var i = 0; i < v.length; i++) {\n        var sv =\n        /** @type {string} */\n        v[i];\n        s.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(sv));\n      }\n    } else {\n      var _sv =\n      /** @type {string} */\n      v;\n      s.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(_sv));\n    }\n  }\n\n  return s.join('&');\n}\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\n\n\nfunction isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return url.protocol == 'https:' || url.hostname == 'localhost' || url.hostname == '127.0.0.1' || (0, _string.endsWith)(url.hostname, '.localhost');\n}\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\n\n\nfunction assertHttpsUrl(urlString, elementContext, sourceName) {\n  if (sourceName === void 0) {\n    sourceName = 'source';\n  }\n\n  (0, _log.userAssert)(urlString != null, '%s %s must be available', elementContext, sourceName); // (erwinm, #4560): type cast necessary until #4560 is fixed.\n\n  var theUrlString =\n  /** @type {string} */\n  urlString;\n  (0, _log.userAssert)(isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString), '%s %s must start with ' + '\"https://\" or \"//\" or be relative and served from ' + 'either https or from localhost. Invalid value: %s', elementContext, sourceName, theUrlString);\n  return theUrlString;\n}\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\n\n\nfunction assertAbsoluteHttpOrHttpsUrl(urlString) {\n  (0, _log.userAssert)(/^https?\\:/i.test(urlString), 'URL must start with \"http://\" or \"https://\". Invalid value: %s', urlString);\n  return parseUrlDeprecated(urlString).href;\n}\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * This function is implemented in a separate file to avoid a circular\n * dependency.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\n\n\nfunction parseQueryString(queryString) {\n  return (0, _urlParseQueryString.parseQueryString_)(queryString);\n}\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeFragment(url) {\n  var index = url.indexOf('#');\n\n  if (index == -1) {\n    return url;\n  }\n\n  return url.substring(0, index);\n}\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction getFragment(url) {\n  var index = url.indexOf('#');\n\n  if (index == -1) {\n    return '';\n  }\n\n  return url.substring(index);\n}\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\n\n\nfunction isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return _config.urls.cdnProxyRegex.test(url.origin);\n}\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\n\n\nfunction getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n\n  var path = url.pathname.split('/', 2);\n  return path[1];\n}\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\n\n\nfunction isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return _config.urls.localhostRegex.test(url.origin);\n}\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\n\n\nfunction isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeAmpJsParamsFromUrl(url) {\n  var parsed = parseUrlDeprecated(url);\n  var search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeSearch(url) {\n  var index = url.indexOf('?');\n\n  if (index == -1) {\n    return url;\n  }\n\n  var fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\n\n\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n\n  var search = urlSearch.replace(AMP_JS_PARAMS_REGEX, '').replace(AMP_GSA_PARAMS_REGEX, '').replace(AMP_R_PARAMS_REGEX, '').replace(AMP_KIT_PARAMS_REGEX, '').replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '').replace(/^[?&]/, ''); // Removes first ? or &.\n\n  return search ? '?' + search : '';\n}\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\n\n\nfunction removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n\n  var paramRegex = new RegExp(\"[?&]\" + paramName + \"=[^&]*\", 'g');\n  var search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\n\n\nfunction getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  } // Not a proxy URL - return the URL itself.\n\n\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  } // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n\n\n  var path = url.pathname.split('/');\n  var prefix = path[1];\n  (0, _log.userAssert)(SERVING_TYPE_PREFIX[prefix], 'Unknown path prefix in url %s', url.href);\n  var domainOrHttpsSignal = path[2];\n  var origin = domainOrHttpsSignal == 's' ? 'https://' + decodeURIComponent(path[3]) : 'http://' + decodeURIComponent(domainOrHttpsSignal); // Sanity test that what we found looks like a domain.\n\n  (0, _log.userAssert)(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return origin + path.join('/') + removeAmpJsParamsFromSearch(url.search) + (url.hash || '');\n}\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\n\n\nfunction getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\n\n\nfunction resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n\n  if (typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private Visible for testing.\n */\n\n\nfunction resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  var relativeUrl = parseUrlDeprecated(relativeUrlString); // Absolute URL.\n\n  if ((0, _string.startsWith)(relativeUrlString.toLowerCase(), relativeUrl.protocol)) {\n    return relativeUrl.href;\n  } // Protocol-relative URL.\n\n\n  if ((0, _string.startsWith)(relativeUrlString, '//')) {\n    return baseUrl.protocol + relativeUrlString;\n  } // Absolute path.\n\n\n  if ((0, _string.startsWith)(relativeUrlString, '/')) {\n    return baseUrl.origin + relativeUrlString;\n  } // Relative path.\n\n\n  return baseUrl.origin + baseUrl.pathname.replace(/\\/[^/]*$/, '/') + relativeUrlString;\n}\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\n\n\nfunction getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  var sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\n\n\nfunction checkCorsUrl(url) {\n  var parsedUrl = parseUrlDeprecated(url);\n  var query = parseQueryString(parsedUrl.search);\n  (0, _log.userAssert)(!(SOURCE_ORIGIN_PARAM in query), 'Source origin is not allowed in %s', url);\n}\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} opt_fallback\n * @return {string}\n */\n\n\nfunction tryDecodeUriComponent(component, opt_fallback) {\n  return (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(component, opt_fallback);\n}\n\n},{\"./config\":6,\"./log\":16,\"./mode\":18,\"./string\":22,\"./types\":25,\"./url-parse-query-string\":26,\"./url-try-decode-uri-component\":27,\"./utils/lru-cache\":30,\"./utils/object\":31}],29:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.once = once;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// TODO(rsimha, #15334): Enable this rule.\n\n/* eslint jsdoc/check-types: 0 */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nfunction once(fn) {\n  var evaluated = false;\n  var retValue = null;\n  var callback = fn;\n  return function () {\n    if (!evaluated) {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n\n    return retValue;\n  };\n}\n\n},{}],30:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.LruCache = void 0;\n\nvar _log = require(\"../log\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nvar TAG = 'lru-cache';\n/**\n * @template T\n */\n\nvar LruCache =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {number} capacity\n   */\n  function LruCache(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n    /** @private {number} */\n\n    this.size_ = 0;\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n\n    this.access_ = 0;\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n\n    this.cache_ = Object.create(null);\n  }\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n\n\n  var _proto = LruCache.prototype;\n\n  _proto.has = function has(key) {\n    return !!this.cache_[key];\n  }\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  ;\n\n  _proto.get = function get(key) {\n    var cacheable = this.cache_[key];\n\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n\n    return undefined;\n  }\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  ;\n\n  _proto.put = function put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n\n    this.cache_[key] = {\n      payload: payload,\n      access: this.access_\n    };\n    this.evict_();\n  }\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  ;\n\n  _proto.evict_ = function evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    (0, _log.dev)().warn(TAG, 'Trimming LRU cache');\n    var cache = this.cache_;\n    var oldest = this.access_ + 1;\n    var oldestKey;\n\n    for (var key in cache) {\n      var access = cache[key].access;\n\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  };\n\n  return LruCache;\n}();\n\nexports.LruCache = LruCache;\n\n},{\"../log\":16}],31:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.map = map;\nexports.dict = dict;\nexports.hasOwn = hasOwn;\nexports.ownProperty = ownProperty;\nexports.deepMerge = deepMerge;\nexports.omit = omit;\n\nvar _types = require(\"../types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nvar hasOwn_ = Object.prototype.hasOwnProperty;\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\n\nfunction map(opt_initial) {\n  var obj = Object.create(null);\n\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n\n  return obj;\n}\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\n\n\nfunction dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return (\n    /** @type {!JsonObject} */\n    opt_initial || {}\n  );\n}\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\n\n\nfunction hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\n\n\nfunction ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\n\n\nfunction deepMerge(target, source, depth) {\n  if (depth === void 0) {\n    depth = 10;\n  }\n\n  // Keep track of seen objects to detect recursive references.\n  var seen = [];\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n\n  var queue = [];\n  queue.push({\n    t: target,\n    s: source,\n    d: 0\n  }); // BFS to ensure objects don't have recursive references at shallower depths.\n\n  var _loop = function _loop() {\n    var _queue$shift = queue.shift(),\n        t = _queue$shift.t,\n        s = _queue$shift.s,\n        d = _queue$shift.d;\n\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n\n    seen.push(s);\n\n    if (t === s) {\n      return \"continue\";\n    }\n\n    if (d > depth) {\n      Object.assign(t, s);\n      return \"continue\";\n    }\n\n    Object.keys(s).forEach(function (key) {\n      var newValue = s[key]; // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n\n      if (hasOwn(t, key)) {\n        var oldValue = t[key];\n\n        if ((0, _types.isObject)(newValue) && (0, _types.isObject)(oldValue)) {\n          queue.push({\n            t: oldValue,\n            s: newValue,\n            d: d + 1\n          });\n          return;\n        }\n      }\n\n      t[key] = newValue;\n    });\n  };\n\n  while (queue.length > 0) {\n    var _ret = _loop();\n\n    if (_ret === \"continue\") continue;\n  }\n\n  return target;\n}\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\n\n\nfunction omit(o, props) {\n  return Object.keys(o).reduce(function (acc, key) {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n\n    return acc;\n  }, {});\n}\n\n},{\"../types\":25}],32:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A priority queue backed with sorted array.\n * @template T\n */\nvar PriorityQueue =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of PriorityQueue.\n   */\n  function PriorityQueue() {\n    /** @private @const {Array<{item: T, priority: number}>} */\n    this.queue_ = [];\n  }\n  /**\n   * Returns the max priority item without dequeueing it.\n   * @return {T}\n   */\n\n\n  var _proto = PriorityQueue.prototype;\n\n  _proto.peek = function peek() {\n    var l = this.queue_.length;\n\n    if (!l) {\n      return null;\n    }\n\n    return this.queue_[l - 1].item;\n  }\n  /**\n   * Enqueues an item with the given priority.\n   * @param {T} item\n   * @param {number} priority\n   */\n  ;\n\n  _proto.enqueue = function enqueue(item, priority) {\n    if (isNaN(priority)) {\n      throw new Error('Priority must not be NaN.');\n    }\n\n    var i = this.binarySearch_(priority);\n    this.queue_.splice(i, 0, {\n      item: item,\n      priority: priority\n    });\n  }\n  /**\n   * Returns index at which item with `target` priority should be inserted.\n   * @param {number} target\n   * @return {number}\n   * @private\n   */\n  ;\n\n  _proto.binarySearch_ = function binarySearch_(target) {\n    var i = -1;\n    var lo = 0;\n    var hi = this.queue_.length;\n\n    while (lo <= hi) {\n      i = Math.floor((lo + hi) / 2); // This means `target` is the new max priority in the queue.\n\n      if (i === this.queue_.length) {\n        break;\n      } // Stop searching once p[i] >= target AND p[i-1] < target.\n      // This way, we'll return the index of the first occurence of `target`\n      // priority (if any), which preserves FIFO order of same-priority items.\n\n\n      if (this.queue_[i].priority < target) {\n        lo = i + 1;\n      } else if (i > 0 && this.queue_[i - 1].priority >= target) {\n        hi = i - 1;\n      } else {\n        break;\n      }\n    }\n\n    return i;\n  }\n  /**\n   * @param {function(T)} callback\n   */\n  ;\n\n  _proto.forEach = function forEach(callback) {\n    var index = this.queue_.length;\n\n    while (index--) {\n      callback(this.queue_[index].item);\n    }\n  }\n  /**\n   * Dequeues the max priority item.\n   * Items with the same priority are dequeued in FIFO order.\n   * @return {T}\n   */\n  ;\n\n  _proto.dequeue = function dequeue() {\n    if (!this.queue_.length) {\n      return null;\n    }\n\n    return this.queue_.pop().item;\n  }\n  /**\n   * The number of items in the queue.\n   * @return {number}\n   */\n  ;\n\n  _createClass(PriorityQueue, [{\n    key: \"length\",\n    get: function get() {\n      return this.queue_.length;\n    }\n  }]);\n\n  return PriorityQueue;\n}();\n\nexports.default = PriorityQueue;\n\n},{}],33:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.tryResolve = tryResolve;\nexports.some = some;\nexports.LastAddedResolver = exports.Deferred = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nvar Deferred =\n/**\n * Creates an instance of Deferred.\n */\nfunction Deferred() {\n  var resolve, reject;\n  /**\n   * @const {!Promise<T>}\n   */\n\n  this.promise = new\n  /*OK*/\n  Promise(function (res, rej) {\n    resolve = res;\n    reject = rej;\n  });\n  /**\n   * @const {function(T=)}\n   */\n\n  this.resolve = resolve;\n  /**\n   * @const {function(*=)}\n   */\n\n  this.reject = reject;\n};\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\n\n\nexports.Deferred = Deferred;\n\nfunction tryResolve(fn) {\n  return new Promise(function (resolve) {\n    resolve(fn());\n  });\n}\n/**\n * Returns a promise which resolves if a threshold amount of the given promises\n * resolve, and rejects otherwise.\n * @param {!Array<!Promise>} promises The array of promises to test.\n * @param {number} count The number of promises that must resolve for the\n *     returned promise to resolve.\n * @return {!Promise} A promise that resolves if any of the given promises\n *     resolve, and which rejects otherwise.\n */\n\n\nfunction some(promises, count) {\n  if (count === void 0) {\n    count = 1;\n  }\n\n  return new Promise(function (resolve, reject) {\n    count = Math.max(count, 0);\n    var extra = promises.length - count;\n\n    if (extra < 0) {\n      reject(new Error('not enough promises to resolve'));\n    }\n\n    if (promises.length == 0) {\n      resolve([]);\n    }\n\n    var values = [];\n    var reasons = [];\n\n    var onFulfilled = function onFulfilled(value) {\n      if (values.length < count) {\n        values.push(value);\n      }\n\n      if (values.length == count) {\n        resolve(values);\n      }\n    };\n\n    var onRejected = function onRejected(reason) {\n      if (reasons.length <= extra) {\n        reasons.push(reason);\n      }\n\n      if (reasons.length > extra) {\n        reject(reasons);\n      }\n    };\n\n    for (var i = 0; i < promises.length; i++) {\n      Promise.resolve(promises[i]).then(onFulfilled, onRejected);\n    }\n  });\n}\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\n\n\nvar LastAddedResolver =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Array<!Promise>=} opt_promises\n   */\n  function LastAddedResolver(opt_promises) {\n    var resolve_, reject_;\n    /** @private @const {!Promise} */\n\n    this.promise_ = new Promise(function (resolve, reject) {\n      resolve_ = resolve;\n      reject_ = reject;\n    });\n    /** @private */\n\n    this.resolve_ = resolve_;\n    /** @private */\n\n    this.reject_ = reject_;\n    /** @private */\n\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (var i = 0; i < opt_promises.length; i++) {\n        this.add(opt_promises[i]);\n      }\n    }\n  }\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!Promise} promise\n   * @return {!Promise}\n   */\n\n\n  var _proto = LastAddedResolver.prototype;\n\n  _proto.add = function add(promise) {\n    var _this = this;\n\n    var countAtAdd = ++this.count_;\n    Promise.resolve(promise).then(function (result) {\n      if (_this.count_ === countAtAdd) {\n        _this.resolve_(result);\n      }\n    }, function (error) {\n      // Don't follow behavior of Promise.all and Promise.race error so that\n      // this will only reject when most recently added promise fails.\n      if (_this.count_ === countAtAdd) {\n        _this.reject_(error);\n      }\n    });\n    return this.promise_;\n  }\n  /** @override */\n  ;\n\n  _proto.then = function then(opt_resolve, opt_reject) {\n    return this.promise_.then(opt_resolve, opt_reject);\n  };\n\n  return LastAddedResolver;\n}();\n\nexports.LastAddedResolver = LastAddedResolver;\n\n},{}],34:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.cssEscape = cssEscape;\n\n/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  } // Nil is the null terminator (group 1) capture\n\n\n  if (nil) {\n    return \"\\uFFFD\";\n  } // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n\n\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' ';\n  } // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n\n\n  return '\\\\' + match;\n}\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\n\n\nfunction cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n\n},{}]},{},[1])\n\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Detects <amp-img> elements to set the `lightbox` attribute\n * automatically.\n *\n * This extension is not meant to be included explicitly, e.g. as a script tag.\n * Instead, the runtime loads it when encountering an <amp-img>.\n */\n\nimport {AmpEvents} from '../../../src/amp-events';\nimport {AutoLightboxEvents} from '../../../src/auto-lightbox';\nimport {CommonSignals} from '../../../src/common-signals';\nimport {Services} from '../../../src/services';\nimport {\n  closestAncestorElementBySelector,\n  whenUpgradedToCustomElement,\n} from '../../../src/dom';\nimport {dev} from '../../../src/log';\nimport {toArray} from '../../../src/types';\nimport {tryParseJson} from '../../../src/json';\n\nconst TAG = 'amp-auto-lightbox';\n\nexport const REQUIRED_EXTENSION = 'amp-lightbox-gallery';\nexport const LIGHTBOXABLE_ATTR = 'lightbox';\n\n/** Attribute to mark scanned lightbox candidates as not to revisit. */\nexport const VISITED_ATTR = 'i-amphtml-auto-lightbox-visited';\n\n/**\n * Types of document by LD+JSON schema `@type` field where auto-lightbox should\n * be enabled.\n * @private @const {!Object<string|undefined, boolean>}\n */\nexport const ENABLED_LD_JSON_TYPES = {\n  'Article': true,\n  'NewsArticle': true,\n  'BlogPosting': true,\n  'LiveBlogPosting': true,\n  'DiscussionForumPosting': true,\n};\n\n/**\n * Only of document type by Open Graph `<meta property=\"og:type\">` where\n * auto-lightbox should be enabled. Top-level og:type set is tiny, and `article`\n * covers all required types.\n */\nexport const ENABLED_OG_TYPE_ARTICLE = 'article';\n\n/** Factor of naturalArea vs renderArea to lightbox. */\nexport const RENDER_AREA_RATIO = 1.2;\n\n/** Factor of renderArea vs viewportArea to lightbox. */\nexport const VIEWPORT_AREA_RATIO = 0.25;\n\n/**\n * Selector for subnodes by attribute for which the auto-lightbox treatment\n * does not apply. These can be set directly on the candidate or on an ancestor.\n */\nconst DISABLED_BY_ATTR = [\n  // Runtime-specific.\n  '[placeholder]',\n\n  // Explicitly opted out.\n  '[data-amp-auto-lightbox-disable]',\n\n  // Considered \"actionable\", i.e. that are bound to a default\n  // onclick action(e.g. `button`) or where it cannot be determined whether\n  // they're actionable or not (e.g. `amp-script`).\n  'amp-selector [option]',\n\n  // amp-subscriptions actions\n  '[subscriptions-action]',\n].join(',');\n\n/**\n * Selector for subnodes for which the auto-lightbox treatment does not apply.\n */\nconst DISABLED_ANCESTORS = [\n  // Ancestors considered \"actionable\", i.e. that are bound to a default\n  // onclick action(e.g. `button`) or where it cannot be determined whether\n  // they're actionable or not (e.g. `amp-script`).\n  'a[href]',\n  'amp-script',\n  'amp-story',\n  'button',\n\n  // No nested lightboxes.\n  'amp-lightbox',\n\n  // Already actionable in vast majority of cases, explicit API.\n  'amp-carousel',\n].join(',');\n\nconst SCRIPT_LD_JSON = 'script[type=\"application/ld+json\"]';\nconst META_OG_TYPE = 'meta[property=\"og:type\"]';\n\nconst NOOP = () => {};\n\n/**\n * For better minification.\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @return {!Document|!ShadowRoot}\n */\nconst getRootNode = ampdoc => ampdoc.getRootNode();\n\n/** @visibleForTesting */\nexport class Criteria {\n  /**\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  static meetsAll(element) {\n    return (\n      Criteria.meetsSizingCriteria(element) &&\n      Criteria.meetsTreeShapeCriteria(element)\n    );\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  static meetsTreeShapeCriteria(element) {\n    const disabledSelector = `${DISABLED_ANCESTORS},${DISABLED_BY_ATTR}`;\n    const disabledAncestor = closestAncestorElementBySelector(\n      element,\n      disabledSelector\n    );\n    if (disabledAncestor) {\n      return false;\n    }\n    const actions = Services.actionServiceForDoc(element);\n    return !actions.hasResolvableAction(element, 'tap');\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  static meetsSizingCriteria(element) {\n    const {naturalWidth, naturalHeight} = dev().assertElement(\n      element.querySelector('img')\n    );\n\n    const {width: renderWidth, height: renderHeight} = element.getLayoutBox();\n\n    const viewport = Services.viewportForDoc(element);\n    const {width: vw, height: vh} = viewport.getSize();\n\n    return meetsSizingCriteria(\n      renderWidth,\n      renderHeight,\n      naturalWidth,\n      naturalHeight,\n      vw,\n      vh\n    );\n  }\n}\n\n/**\n * @param {number} renderWidth\n * @param {number} renderHeight\n * @param {number} naturalWidth\n * @param {number} naturalHeight\n * @param {number} vw\n * @param {number} vh\n * @return {boolean}\n * @visibleForTesting\n */\nexport function meetsSizingCriteria(\n  renderWidth,\n  renderHeight,\n  naturalWidth,\n  naturalHeight,\n  vw,\n  vh\n) {\n  const viewportArea = vw * vh;\n  const naturalArea = naturalWidth * naturalHeight;\n  const renderArea = renderWidth * renderHeight;\n\n  const isShrunk = naturalArea / renderArea >= RENDER_AREA_RATIO;\n\n  const isCoveringSignificantArea =\n    renderArea / viewportArea >= VIEWPORT_AREA_RATIO;\n\n  const isLargerThanViewport = naturalWidth > vw || naturalHeight > vh;\n\n  return isShrunk || isLargerThanViewport || isCoveringSignificantArea;\n}\n\n/**\n * Marks a lightbox candidate as visited as not to rescan on DOM update.\n * @param {!Element} candidate\n * @return {!Promise}\n */\nfunction markAsVisited(candidate) {\n  return Mutation.mutate(candidate, () => {\n    candidate.setAttribute(VISITED_ATTR, '');\n  });\n}\n\n/**\n * @param {string} tagName\n * @return {string}\n */\nfunction candidateSelector(tagName) {\n  return `${tagName}:not([${LIGHTBOXABLE_ATTR}]):not([${VISITED_ATTR}])`;\n}\n\n/**\n * @param {!Element} element\n * @return {!Promise}\n */\nfunction whenLoaded(element) {\n  return whenUpgradedToCustomElement(element).then(element =>\n    element.signals().whenSignal(CommonSignals.LOAD_END)\n  );\n}\n\n/** @visibleForTesting */\nexport class Scanner {\n  /**\n   * Gets all unvisited lightbox candidates.\n   * @param {!Document|!Element} root\n   * @return {!Array<!Element>}\n   */\n  static getCandidates(root) {\n    const selector = candidateSelector('amp-img');\n    const candidates = toArray(root.querySelectorAll(selector));\n    candidates.forEach(markAsVisited);\n    return candidates;\n  }\n}\n\n/**\n * Parses document metadata annotations as defined by either LD+JSON schema or\n * Open Graph <meta> tags.\n * @visibleForTesting\n */\nexport class DocMetaAnnotations {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @return {string|undefined}\n   */\n  static getOgType(ampdoc) {\n    const tag = getRootNode(ampdoc).querySelector(META_OG_TYPE);\n    if (tag) {\n      return tag.getAttribute('content');\n    }\n  }\n\n  /**\n   * Determines wheter the document type as defined by Open Graph meta tag\n   * e.g. `<meta property=\"og:type\">` is valid.\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @return {boolean}\n   */\n  static hasValidOgType(ampdoc) {\n    return DocMetaAnnotations.getOgType(ampdoc) == ENABLED_OG_TYPE_ARTICLE;\n  }\n\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @return {!Array<string>}\n   */\n  static getAllLdJsonTypes(ampdoc) {\n    return toArray(getRootNode(ampdoc).querySelectorAll(SCRIPT_LD_JSON))\n      .map(({textContent}) => (tryParseJson(textContent) || {})['@type'])\n      .filter(typeOrUndefined => typeOrUndefined);\n  }\n\n  /**\n   * Determines wheter one of the document types (field `@type`) defined in\n   * LD+JSON schema is in ENABLED_LD_JSON_TYPES.\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @return {boolean}\n   */\n  static hasValidLdJsonType(ampdoc) {\n    return DocMetaAnnotations.getAllLdJsonTypes(ampdoc).some(\n      type => ENABLED_LD_JSON_TYPES[type]\n    );\n  }\n}\n\n/**\n * Wrapper for an element-implementation-mutate sequence for readability and\n * mocking in tests.\n * @visibleForTesting\n */\nexport class Mutation {\n  /**\n   * @param {!Element} ampEl\n   * @param {function()} mutator\n   * @return {!Promise}\n   */\n  static mutate(ampEl, mutator) {\n    return whenUpgradedToCustomElement(ampEl).then(ampEl =>\n      ampEl.getResources().mutateElement(ampEl, mutator)\n    );\n  }\n}\n\n/**\n * Determines whether a document uses `amp-lightbox-gallery` explicitly by\n * including the extension and explicitly lightboxing at least one element.\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @return {boolean}\n */\nfunction usesLightboxExplicitly(ampdoc) {\n  // TODO(alanorozco): Backport into Extensions service.\n  const requiredExtensionSelector = `script[custom-element=\"${REQUIRED_EXTENSION}\"]`;\n\n  const lightboxedElementsSelector = `[${LIGHTBOXABLE_ATTR}]:not([${VISITED_ATTR}])`;\n\n  const exists = selector => !!getRootNode(ampdoc).querySelector(selector);\n\n  return (\n    exists(requiredExtensionSelector) && exists(lightboxedElementsSelector)\n  );\n}\n\n/**\n * Determines whether auto-lightbox is enabled for a document.\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @return {boolean}\n * @visibleForTesting\n */\nexport function isEnabledForDoc(ampdoc) {\n  if (usesLightboxExplicitly(ampdoc)) {\n    return false;\n  }\n  return (\n    DocMetaAnnotations.hasValidOgType(ampdoc) ||\n    DocMetaAnnotations.hasValidLdJsonType(ampdoc)\n  );\n}\n\n/** @private {number} */\nlet uid = 0;\n\n/**\n * Generates a unique id for lightbox grouping.\n * @return {string}\n */\nfunction generateLightboxUid() {\n  return `i-amphtml-auto-lightbox-${uid++}`;\n}\n\n/**\n * Lightboxes an element.\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @param {!Element} element\n * @return {!Promise<!Element>}\n * @visibleForTesting\n */\nexport function apply(ampdoc, element) {\n  return Mutation.mutate(element, () => {\n    element.setAttribute(LIGHTBOXABLE_ATTR, generateLightboxUid());\n  }).then(() => {\n    Services.extensionsFor(ampdoc.win).installExtensionForDoc(\n      ampdoc,\n      REQUIRED_EXTENSION\n    );\n\n    element.dispatchCustomEvent(AutoLightboxEvents.NEWLY_SET);\n\n    return element;\n  });\n}\n\n/**\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @param {!Array<!Element>} candidates\n * @return {!Array<!Promise<!Element|undefined>>}\n */\nexport function runCandidates(ampdoc, candidates) {\n  return candidates.map(candidate =>\n    whenLoaded(candidate).then(() => {\n      if (!Criteria.meetsAll(candidate)) {\n        return;\n      }\n      dev().info(TAG, 'apply', candidate);\n      return apply(ampdoc, candidate);\n    }, NOOP)\n  );\n}\n\n/**\n * Scans a document on initialization to lightbox elements that meet criteria.\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @param {!Element=} opt_root\n * @return {!Array<!Promise>|undefined}\n */\nexport function scan(ampdoc, opt_root) {\n  if (!isEnabledForDoc(ampdoc)) {\n    dev().info(TAG, 'disabled');\n    return;\n  }\n  const root = opt_root || ampdoc.win.document;\n  return runCandidates(ampdoc, Scanner.getCandidates(root));\n}\n\nAMP.extension(TAG, '0.1', ({ampdoc}) => {\n  ampdoc.whenReady().then(() => {\n    getRootNode(ampdoc).addEventListener(AmpEvents.DOM_UPDATE, ({target}) => {\n      scan(ampdoc, dev().assertElement(target));\n    });\n    scan(ampdoc);\n  });\n});\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common AMP events.\n * @enum {string}\n */\nexport const AmpEvents = {\n  DOM_UPDATE: 'amp:dom-update',\n  FORM_DIRTINESS_CHANGE: 'amp:form-dirtiness-change',\n  FORM_VALUE_CHANGE: 'amp:form-value-change',\n  VISIBILITY_CHANGE: 'amp:visibilitychange', // https://github.com/ampproject/amphtml/blob/master/ads/README.md#page-visibility\n  // The following codes are only used for testing.\n  // TODO(choumx): Move these to a separate enum so they can be DCE'd.\n  ATTACHED: 'amp:attached',\n  STUBBED: 'amp:stubbed',\n  LOAD_START: 'amp:load:start',\n  LOAD_END: 'amp:load:end',\n  ERROR: 'amp:error',\n  SIZE_CHANGED: 'amp:size-changed',\n};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChunkPriority, chunk} from './chunk';\nimport {Services} from './services';\nimport {dev} from './log';\nimport {isAmphtml} from './format';\n\n/** @const @enum {string} */\nexport const AutoLightboxEvents = {\n  // Triggered when the lightbox attribute is newly set on an item in order to\n  // process by the renderer extension (e.g. amp-lightbox-gallery).\n  NEWLY_SET: 'amp-auto-lightbox:newly-set',\n};\n\n/**\n * Installs the amp-auto-lightbox extension.\n *\n * This extension conditionally loads amp-lightbox-gallery for images and videos\n * that fulfill a set criteria on certain documents.\n *\n * Further information on spec/auto-lightbox.md and the amp-auto-lightbox extension\n * code.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installAutoLightboxExtension(ampdoc) {\n  const {win} = ampdoc;\n  // Only enabled on single documents tagged as <html amp> or <html ⚡>.\n  if (!isAmphtml(win.document) || !ampdoc.isSingleDoc()) {\n    return;\n  }\n  chunk(\n    ampdoc,\n    () => {\n      Services.extensionsFor(win).installExtensionForDoc(\n        ampdoc,\n        'amp-auto-lightbox'\n      );\n    },\n    ChunkPriority.LOW\n  );\n}\n\n/**\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isActionableByTap(element) {\n  if (element.tagName.toLowerCase() == 'a' && element.hasAttribute('href')) {\n    return true;\n  }\n  if (element.querySelector('a[href]')) {\n    return true;\n  }\n  const action = Services.actionServiceForDoc(element);\n  const hasTapAction = action.hasResolvableAction(\n    element,\n    'tap',\n    dev().assertElement(element.parentElement)\n  );\n  if (hasTapAction) {\n    return true;\n  }\n  const actionables = element.querySelectorAll('[on]');\n  for (let i = 0; i < actionables.length; i++) {\n    const actionable = actionables[i];\n    const hasTapAction = action.hasResolvableAction(\n      actionable,\n      'tap',\n      dev().assertElement(actionable.parentElement)\n    );\n    if (hasTapAction) {\n      return true;\n    }\n  }\n  return false;\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\nimport {dev} from './log';\nimport {getData} from './event-helper';\nimport {getServiceForDoc, registerServiceBuilderForDoc} from './service';\nimport {isExperimentOn} from './experiments';\nimport {makeBodyVisibleRecovery} from './style-installer';\nimport PriorityQueue from './utils/priority-queue';\n\n/**\n * @const {string}\n */\nconst TAG = 'CHUNK';\n\n/**\n * @type {boolean}\n */\nlet deactivated = /nochunking=1/.test(self.location.hash);\n\n/**\n * @const {!Promise}\n */\nconst resolved = Promise.resolve();\n\n/**\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!Chunks}\n * @private\n */\nfunction chunkServiceForDoc(elementOrAmpDoc) {\n  registerServiceBuilderForDoc(elementOrAmpDoc, 'chunk', Chunks);\n  return getServiceForDoc(elementOrAmpDoc, 'chunk');\n}\n\n/**\n * Run the given function. For visible documents the function will be\n * called in a micro task (Essentially ASAP). If the document is\n * not visible, tasks will yield to the event loop (to give the browser\n * time to do other things) and may even be further delayed until\n * there is time.\n *\n * @param {!Document|!./service/ampdoc-impl.AmpDoc} doc\n * @param {function(?IdleDeadline)} fn\n * @param {boolean=} opt_makesBodyVisible Pass true if this service makes\n *     the body visible. This is relevant because it may influence the\n *     task scheduling strategy.\n */\nexport function startupChunk(doc, fn, opt_makesBodyVisible) {\n  if (deactivated) {\n    resolved.then(fn);\n    return;\n  }\n  const service = chunkServiceForDoc(doc.documentElement || doc);\n  service.runForStartup(fn);\n  if (opt_makesBodyVisible) {\n    service.runForStartup(() => {\n      service.bodyIsVisible_ = true;\n    });\n  }\n}\n\n/**\n * Run the given function sometime in the future without blocking UI.\n *\n * Higher priority tasks are executed before lower priority tasks.\n * Tasks with the same priority are executed in FIFO order.\n *\n * Uses `requestIdleCallback` if available and passes the `IdleDeadline`\n * object to the function, which can be used to perform a variable amount\n * of work depending on the remaining amount of idle time.\n *\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {function(?IdleDeadline)} fn\n * @param {ChunkPriority} priority\n */\nexport function chunk(elementOrAmpDoc, fn, priority) {\n  if (deactivated) {\n    resolved.then(fn);\n    return;\n  }\n  const service = chunkServiceForDoc(elementOrAmpDoc);\n  service.run(fn, priority);\n}\n\n/**\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!Chunks}\n */\nexport function chunkInstanceForTesting(elementOrAmpDoc) {\n  return chunkServiceForDoc(elementOrAmpDoc);\n}\n\n/**\n * Use a standard micro task for every invocation. This should only\n * be called from the AMP bootstrap script if it is known that\n * chunking makes no sense. In particular this is the case when\n * AMP runs in the `amp-shadow` multi document mode.\n */\nexport function deactivateChunking() {\n  deactivated = true;\n}\n\n/**\n * @visibleForTesting\n */\nexport function activateChunkingForTesting() {\n  deactivated = false;\n}\n\n/**\n * Runs all currently scheduled chunks.\n * Independent of errors it will unwind the queue. Will afterwards\n * throw the first encountered error.\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n */\nexport function runChunksForTesting(elementOrAmpDoc) {\n  const service = chunkInstanceForTesting(elementOrAmpDoc);\n  const errors = [];\n  while (true) {\n    try {\n      if (!service.execute_(/* idleDeadline */ null)) {\n        break;\n      }\n    } catch (e) {\n      errors.push(e);\n    }\n  }\n  if (errors.length) {\n    throw errors[0];\n  }\n}\n\n/**\n * The priority of a chunk task. Higher priority tasks have higher values.\n * @enum {number}\n */\nexport const ChunkPriority = {\n  HIGH: 20,\n  LOW: 10,\n  BACKGROUND: 0,\n};\n\n/** @enum {string} */\nconst TaskState = {\n  NOT_RUN: 'not_run',\n  RUN: 'run',\n};\n\n/**\n * A default chunkable task.\n * @private\n */\nclass Task {\n  /**\n   * @param {function(?IdleDeadline)} fn\n   */\n  constructor(fn) {\n    /** @public {TaskState} */\n    this.state = TaskState.NOT_RUN;\n\n    /** @private @const {!function(?IdleDeadline)} */\n    this.fn_ = fn;\n  }\n\n  /**\n   * Executes the wrapped function.\n   * @param {?IdleDeadline} idleDeadline\n   * @throws {Error}\n   * @protected\n   */\n  runTask_(idleDeadline) {\n    if (this.state == TaskState.RUN) {\n      return;\n    }\n    this.state = TaskState.RUN;\n    try {\n      this.fn_(idleDeadline);\n    } catch (e) {\n      this.onTaskError_(e);\n      throw e;\n    }\n  }\n\n  /**\n   * @return {string}\n   * @protected\n   */\n  getName_() {\n    return this.fn_.displayName || this.fn_.name;\n  }\n\n  /**\n   * Optional handling when a task run throws an error.\n   * @param {Error} unusedError\n   * @private\n   */\n  onTaskError_(unusedError) {\n    // By default, no-op.\n  }\n\n  /**\n   * Returns true if this task should be run without delay.\n   * @return {boolean}\n   * @protected\n   */\n  immediateTriggerCondition_() {\n    // By default, there are no immediate trigger conditions.\n    return false;\n  }\n\n  /**\n   * Returns true if this task should be scheduled using `requestIdleCallback`.\n   * Otherwise, task is scheduled as macro-task on next event loop.\n   * @return {boolean}\n   * @protected\n   */\n  useRequestIdleCallback_() {\n    // By default, never use requestIdleCallback.\n    return false;\n  }\n}\n\n/**\n * A task that's run as part of AMP's startup sequence.\n * @private\n */\nclass StartupTask extends Task {\n  /**\n   * @param {function(?IdleDeadline)} fn\n   * @param {!Window} win\n   * @param {!Chunks} chunks\n   */\n  constructor(fn, win, chunks) {\n    super(fn);\n\n    /** @private @const */\n    this.chunks_ = chunks;\n  }\n\n  /** @override */\n  onTaskError_(unusedError) {\n    // Startup tasks run early in init. All errors should show the doc.\n    makeBodyVisibleRecovery(self.document);\n  }\n\n  /** @override */\n  immediateTriggerCondition_() {\n    // Run in a micro task when the doc is visible. Otherwise, run after\n    // having yielded to the event queue once.\n    return this.isVisible_();\n  }\n\n  /** @override */\n  useRequestIdleCallback_() {\n    // We only start using requestIdleCallback when the core runtime has\n    // been initialized. Otherwise we risk starving ourselves\n    // before the render-critical work is done.\n    return this.chunks_.coreReady_;\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  isVisible_() {\n    return this.chunks_.ampdoc.isVisible();\n  }\n}\n\n/**\n * Handles queueing, scheduling and executing tasks.\n */\nclass Chunks {\n  /**\n   * @param {!./service/ampdoc-impl.AmpDoc} ampDoc\n   */\n  constructor(ampDoc) {\n    /** @protected @const {!./service/ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampDoc;\n    /** @private @const {!Window} */\n    this.win_ = ampDoc.win;\n    /** @private @const {!PriorityQueue<Task>} */\n    this.tasks_ = new PriorityQueue();\n    /** @private @const {function(?IdleDeadline)} */\n    this.boundExecute_ = this.execute_.bind(this);\n    /** @private {number} */\n    this.durationOfLastExecution_ = 0;\n    /** @private {boolean} */\n    this.macroAfterLongTask_ = isExperimentOn(\n      this.win_,\n      'macro-after-long-task'\n    );\n    /**\n     * Set to true if we scheduled a macro or micro task to execute the next\n     * task. If true, we don't schedule another one.\n     * Not set to true if we use rIC, because we always want to transition\n     * to immeditate invocation from that state.\n     * @private {boolean}\n     */\n    this.scheduledImmediateInvocation_ = false;\n    /** @private {boolean} Whether the document can actually be painted. */\n    this.bodyIsVisible_ = this.win_.document.documentElement.hasAttribute(\n      'i-amphtml-no-boilerplate'\n    );\n\n    this.win_.addEventListener('message', e => {\n      if (getData(e) == 'amp-macro-task') {\n        this.execute_(/* idleDeadline */ null);\n      }\n    });\n\n    /** @protected {boolean} */\n    this.coreReady_ = false;\n    Services.viewerPromiseForDoc(ampDoc).then(() => {\n      // Once the viewer has been resolved, most of core runtime has been\n      // initialized as well.\n      this.coreReady_ = true;\n    });\n\n    ampDoc.onVisibilityChanged(() => {\n      if (ampDoc.isVisible()) {\n        this.schedule_();\n      }\n    });\n  }\n\n  /**\n   * Run fn as a \"chunk\".\n   * @param {function(?IdleDeadline)} fn\n   * @param {number} priority\n   */\n  run(fn, priority) {\n    const t = new Task(fn);\n    this.enqueueTask_(t, priority);\n  }\n\n  /**\n   * Run a fn that's part of AMP's startup sequence as a \"chunk\".\n   * @param {function(?IdleDeadline)} fn\n   */\n  runForStartup(fn) {\n    const t = new StartupTask(fn, this.win_, this);\n    this.enqueueTask_(t, Number.POSITIVE_INFINITY);\n  }\n\n  /**\n   * Queues a task to be executed later with given priority.\n   * @param {!Task} task\n   * @param {number} priority\n   * @private\n   */\n  enqueueTask_(task, priority) {\n    this.tasks_.enqueue(task, priority);\n    this.schedule_();\n  }\n\n  /**\n   * Returns the next task that hasn't been run yet.\n   * If `opt_dequeue` is true, remove the returned task from the queue.\n   * @param {boolean=} opt_dequeue\n   * @return {?Task}\n   * @private\n   */\n  nextTask_(opt_dequeue) {\n    let t = this.tasks_.peek();\n    // Dequeue tasks until we find one that hasn't been run yet.\n    while (t && t.state !== TaskState.NOT_RUN) {\n      this.tasks_.dequeue();\n      t = this.tasks_.peek();\n    }\n    // If `opt_dequeue` is true, remove this task from the queue.\n    if (t && opt_dequeue) {\n      this.tasks_.dequeue();\n    }\n    return t;\n  }\n\n  /**\n   * Run a task.\n   * Schedule the next round if there are more tasks.\n   * @param {?IdleDeadline} idleDeadline\n   * @return {boolean} Whether anything was executed.\n   * @private\n   */\n  execute_(idleDeadline) {\n    const t = this.nextTask_(/* opt_dequeue */ true);\n    if (!t) {\n      this.scheduledImmediateInvocation_ = false;\n      this.durationOfLastExecution_ = 0;\n      return false;\n    }\n    let before;\n    try {\n      before = Date.now();\n      t.runTask_(idleDeadline);\n    } finally {\n      // We want to capture the time of the entire task duration including\n      // scheduled immediate (from resolved promises) micro tasks.\n      // Lacking a better way to do this we just scheduled 10 nested\n      // micro tasks.\n      resolved\n        .then()\n        .then()\n        .then()\n        .then()\n        .then()\n        .then()\n        .then()\n        .then()\n        .then(() => {\n          this.scheduledImmediateInvocation_ = false;\n          this.durationOfLastExecution_ += Date.now() - before;\n          dev().fine(\n            TAG,\n            t.getName_(),\n            'Chunk duration',\n            Date.now() - before,\n            this.durationOfLastExecution_\n          );\n\n          this.schedule_();\n        });\n    }\n    return true;\n  }\n\n  /**\n   * Calls `execute_()` asynchronously.\n   * @param {?IdleDeadline} idleDeadline\n   * @private\n   */\n  executeAsap_(idleDeadline) {\n    // If we've spent over 5 millseconds executing the\n    // last instruction yeild back to the main thread.\n    // 5 milliseconds is a magic number.\n    if (\n      this.macroAfterLongTask_ &&\n      this.bodyIsVisible_ &&\n      this.durationOfLastExecution_ > 5\n    ) {\n      this.durationOfLastExecution_ = 0;\n      this.requestMacroTask_();\n      return;\n    }\n    resolved.then(() => {\n      this.boundExecute_(idleDeadline);\n    });\n  }\n\n  /**\n   * Schedule running the next queued task.\n   * @private\n   */\n  schedule_() {\n    if (this.scheduledImmediateInvocation_) {\n      return;\n    }\n    const nextTask = this.nextTask_();\n    if (!nextTask) {\n      return;\n    }\n    if (nextTask.immediateTriggerCondition_()) {\n      this.scheduledImmediateInvocation_ = true;\n      this.executeAsap_(/* idleDeadline */ null);\n      return;\n    }\n    // If requestIdleCallback exists, schedule a task with it, but\n    // do not wait longer than two seconds.\n    if (nextTask.useRequestIdleCallback_() && this.win_.requestIdleCallback) {\n      onIdle(\n        this.win_,\n        // Wait until we have a budget of at least 15ms.\n        // 15ms is a magic number. Budgets are higher when the user\n        // is completely idle (around 40), but that occurs too\n        // rarely to be usable. 15ms budgets can happen during scrolling\n        // but only if the device is doing super, super well, and no\n        // real processing is done between frames.\n        15 /* minimumTimeRemaining */,\n        2000 /* timeout */,\n        this.boundExecute_\n      );\n      return;\n    }\n    this.requestMacroTask_();\n  }\n\n  /**\n   * Requests executing of a macro task. Yields to the event queue\n   * before executing the task.\n   * Places task on browser message queue which then respectively\n   * triggers dequeuing and execution of a chunk.\n   */\n  requestMacroTask_() {\n    // The message doesn't actually matter.\n    this.win_./*OK*/ postMessage('amp-macro-task', '*');\n  }\n}\n\n/**\n * Delays calling the given function until the browser is notifying us\n * about a certain minimum budget or the timeout is reached.\n * @param {!Window} win\n * @param {number} minimumTimeRemaining Minimum number of millis idle\n *     budget for callback to fire.\n * @param {number} timeout in millis for callback to fire.\n * @param {function(?IdleDeadline)} fn Callback.\n * @visibleForTesting\n */\nexport function onIdle(win, minimumTimeRemaining, timeout, fn) {\n  const startTime = Date.now();\n  /**\n   * @param {!IdleDeadline} info\n   */\n  function rIC(info) {\n    if (info.timeRemaining() < minimumTimeRemaining) {\n      const remainingTimeout = timeout - (Date.now() - startTime);\n      if (remainingTimeout <= 0 || info.didTimeout) {\n        dev().fine(TAG, 'Timed out', timeout, info.didTimeout);\n        fn(info);\n      } else {\n        dev().fine(\n          TAG,\n          'Rescheduling with',\n          remainingTimeout,\n          info.timeRemaining()\n        );\n        win.requestIdleCallback(rIC, {timeout: remainingTimeout});\n      }\n    } else {\n      dev().fine(TAG, 'Running idle callback with ', minimumTimeRemaining);\n      fn(info);\n    }\n  }\n  win.requestIdleCallback(rIC, {timeout});\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Commonly used signals across different elements and documents.\n * @enum {string}\n */\nexport const CommonSignals = {\n  /**\n   * The element has been upgraded from ElementStub to its real implementation.\n   */\n  UPGRADED: 'upgraded',\n\n  /**\n   * The element has been built.\n   */\n  BUILT: 'built',\n\n  /**\n   * The element has started loading.\n   * LOAD_START triggers at the start of the layoutCallback.\n   */\n  LOAD_START: 'load-start',\n\n  /**\n   * Rendering has been confirmed to have been started.\n   * It is a signal to indicate meaningful display (e.g. text could be displayed\n   * CSS is correctly installed/applied).\n   *\n   * Elements can optionally implement RENDER_START signal. (e.g. ad, shadowdoc)\n   * if it want to define its own meaningful display time and toggle visibility.\n   *\n   * Simpler elements's RENDER_START can be equal to the start of the\n   * buildCallback\n   */\n  RENDER_START: 'render-start',\n\n  /**\n   * The element has been loaded.\n   * LOAD_END triggers at the end of the layoutCallback.\n   *\n   */\n  LOAD_END: 'load-end',\n\n  /**\n   * The initial contents of an element/document/embed have been loaded.\n   * INI_LOAD is an optional signal, implemented by ads, story, and elements\n   * that consist of other resources.\n   * It instructs that all critical resources has been loaded, and can be used\n   * for more accurate visibility measurement.\n   * When an element doesn't consist multiple child resources, LOAD_END signal\n   * can be used to indicate resource load completion.\n   * Note: Based on the implementation, INI_LOAD can trigger before or after\n   * LOAD_END.\n   */\n  INI_LOAD: 'ini-load',\n\n  /**\n   * The element has been unlaid out.\n   */\n  UNLOAD: 'unload',\n};\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex'];\n\nconst cdnProxyRegex =\n  typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex'];\n\n/** @type {!Object<string, string|boolean|RegExp|Array<RegExp>>} */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex: thirdPartyFrameRegex || /^d-\\d+\\.ampproject\\.net$/,\n  cdn: env['cdnUrl'] || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex:\n    cdnProxyRegex || /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] || 'https://amp-error-reporting.appspot.com/r',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/master/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.dev$/,\n  ],\n};\n\nexport const config = {\n  urls,\n};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssEscape} from '../third_party/css-escape/css-escape';\nimport {devAssert} from './log';\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nexport function assertIsName(name) {\n  devAssert(/^[\\w-]+$/.test(name));\n}\n\n/**\n * @type {boolean|undefined}\n */\nlet scopeSelectorSupported;\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\nexport function isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return (scopeSelectorSupported = testScopeSelector(el));\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\nfunction testScopeSelector(el) {\n  try {\n    const doc = el.ownerDocument;\n    const testElement = doc.createElement('div');\n    const testChild = doc.createElement('div');\n    testElement.appendChild(testChild);\n    // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n    return testElement./*OK*/ querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\nexport function prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, `$&${distribute} `);\n}\n\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n */\nexport function escapeCssSelectorIdent(ident) {\n  return cssEscape(ident);\n}\n\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\nexport function escapeCssSelectorNth(ident) {\n  const escaped = String(ident);\n  // Ensure it doesn't close the nth-child psuedo class.\n  devAssert(escaped.indexOf(')') === -1);\n  return escaped;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './utils/promise';\nimport {\n  assertIsName,\n  isScopeSelectorSupported,\n  prependSelectorsWith,\n} from './css';\nimport {dev, devAssert} from './log';\nimport {dict} from './utils/object';\nimport {includes, startsWith} from './string';\nimport {toWin} from './types';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise(resolve => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise(resolve => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node} after\n */\nexport function insertAfterOrAtStart(root, element, after) {\n  const before = after ? after.nextSibling : root.firstChild;\n  root.insertBefore(element, before);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (n = node; !!n.parentNode && !isShadowRoot(n); n = n.parentNode) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {*} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  // TODO(#22733): remove in preference to dom's `rootNodeFor`.\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\nexport function closest(element, callback, opt_stopAt) {\n  for (let el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\nexport function closestNode(node, callback) {\n  for (let n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\nexport function closestAncestorElementBySelector(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  return closest(element, el => {\n    return matches(el, selector);\n  });\n}\n\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\nexport function ancestorElements(child, predicate) {\n  const ancestors = [];\n  for (\n    let ancestor = child.parentElement;\n    ancestor;\n    ancestor = ancestor.parentElement\n  ) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n  return ancestors;\n}\n\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\nexport function ancestorElementsByTag(child, tagName) {\n  assertIsName(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, el => {\n    return el.tagName == tagName;\n  });\n}\n\n/**\n * Finds the first child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function childElement(parent, callback) {\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\nexport function childElements(parent, callback) {\n  const children = [];\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function lastChildElement(parent, callback) {\n  for (\n    let child = parent.lastElementChild;\n    child;\n    child = child.previousElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\nexport function childNodes(parent, callback) {\n  const nodes = [];\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function childElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelector(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function lastChildElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return lastChildElement(parent, el => {\n    return el.hasAttribute(attr);\n  });\n}\n\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {?Element}\n */\nexport function childElementByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelector(parent, `> ${tagName}`);\n}\n\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> ${tagName}`);\n}\n\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\nexport function matches(el, selector) {\n  const matcher =\n    el.matches ||\n    el.webkitMatchesSelector ||\n    el.mozMatchesSelector ||\n    el.msMatchesSelector ||\n    el.oMatchesSelector;\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n  return false; // IE8 always returns false.\n}\n\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\nexport function elementByTag(element, tagName) {\n  assertIsName(tagName);\n  return element./*OK*/ querySelector(tagName);\n}\n\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nfunction scopedQuerySelectionFallback(root, selector) {\n  const unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  const scopedSelector = prependSelectorsWith(selector, `.${unique}`);\n  const elements = root./*OK*/ querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {?Element}\n */\nexport function scopedQuerySelector(root, selector) {\n  if (isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelector(prependSelectorsWith(selector, ':scope'));\n  }\n\n  // Only IE.\n  const fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nexport function scopedQuerySelectorAll(root, selector) {\n  if (isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelectorAll(\n      prependSelectorsWith(selector, ':scope')\n    );\n  }\n\n  // Only IE.\n  return scopedQuerySelectionFallback(root, selector);\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!Element} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || (key => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    startsWith(tag, 'AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!Element} element\n * @return {!Promise<!Element>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(element);\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Replacement for `Element.requestFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n * @param {!Element} element\n */\nexport function fullscreenEnter(element) {\n  const requestFs =\n    element.requestFullscreen ||\n    element.requestFullScreen ||\n    element.webkitRequestFullscreen ||\n    element.webkitEnterFullscreen ||\n    element.msRequestFullscreen ||\n    element.mozRequestFullScreen;\n  if (requestFs) {\n    requestFs.call(element);\n  }\n}\n\n/**\n * Replacement for `Document.exitFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/exitFullscreen\n * @param {!Element} element\n */\nexport function fullscreenExit(element) {\n  const elementBoundExit =\n    element.cancelFullScreen ||\n    element.exitFullscreen ||\n    element.webkitExitFullscreen ||\n    element.webkitCancelFullScreen ||\n    element.mozCancelFullScreen ||\n    element.msExitFullscreen;\n  if (elementBoundExit) {\n    elementBoundExit.call(element);\n    return;\n  }\n  const {ownerDocument} = element;\n  if (!ownerDocument) {\n    return;\n  }\n  const docBoundExit =\n    ownerDocument.cancelFullScreen ||\n    ownerDocument.exitFullscreencancelFullScreen ||\n    ownerDocument.webkitExitFullscreencancelFullScreen ||\n    ownerDocument.webkitCancelFullScreencancelFullScreen ||\n    ownerDocument.mozCancelFullScreencancelFullScreen ||\n    ownerDocument.msExitFullscreen;\n  if (docBoundExit) {\n    docBoundExit.call(ownerDocument);\n  }\n}\n\n/**\n * Replacement for `Document.fullscreenElement`.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenElement\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isFullscreenElement(element) {\n  const {webkitDisplayingFullscreen} = element;\n  if (webkitDisplayingFullscreen !== undefined) {\n    return webkitDisplayingFullscreen;\n  }\n  const {ownerDocument} = element;\n  if (!ownerDocument) {\n    return false;\n  }\n  const fullscreenElement =\n    ownerDocument.fullscreenElement ||\n    ownerDocument.webkitFullscreenElement ||\n    ownerDocument.mozFullScreenElement ||\n    ownerDocument.webkitCurrentFullScreenElement;\n  return fullscreenElement == element;\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!Element} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport {\n  getAmpdoc,\n  getExistingServiceForDocInEmbedScope,\n  getService,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n  getTopWindow,\n} from './service';\nimport {toWin} from './types';\nimport {userAssert} from './log';\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementService(win, id, extension, opt_element) {\n  return getElementServiceIfAvailable(win, id, extension, opt_element).then(\n    service => assertService(service, id, extension)\n  );\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(win, id, extension, opt_element) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(win, id, extension, opt_element);\n}\n\n/**\n * @param {!Window} win\n * @param {string} elementName Name of an extended custom element.\n * @return {boolean} Whether this element is scheduled to be loaded.\n */\nfunction isElementScheduled(win, elementName) {\n  // Set in custom-element.js\n  if (!win.__AMP_EXTENDED_ELEMENTS) {\n    return false;\n  }\n  return !!win.__AMP_EXTENDED_ELEMENTS[elementName];\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then(service => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .waitForBodyOpen()\n    .then(() =>\n      waitForExtensionIfPresent(ampdoc.win, extension, ampdoc.win.document.head)\n    )\n    .then(() => {\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      } else if (isElementScheduled(ampdoc.win, extension)) {\n        return getServicePromiseForDoc(element, id);\n      }\n      return null;\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getExistingServiceForDocInEmbedScope(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  const win = toWin(element.ownerDocument.defaultView);\n  const topWin = getTopWindow(win);\n  // In embeds, doc services are stored on the embed window.\n  if (win !== topWin) {\n    return getElementServicePromiseOrNull(win, id, extension);\n  } else {\n    // Only fallback to element's ampdoc (top-level) if not embedded.\n    return getElementServiceIfAvailableForDoc(element, id, extension);\n  }\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (userAssert(\n    service,\n    'Service %s was requested to be provided through %s, ' +\n      'but %s is not loaded in the current page. To fix this ' +\n      'problem load the JavaScript file for %s in this page.',\n    id,\n    extension,\n    extension,\n    extension\n  ));\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Array<string>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  const scripts = {};\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const name =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    scripts[name] = true;\n  }\n  return Object.keys(scripts);\n}\n\n/**\n * Waits for body to be present then verifies that an extension script is\n * present in head for installation.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} extensionId\n * @return {!Promise<boolean>}\n */\nexport function isExtensionScriptInNode(ampdoc, extensionId) {\n  return ampdoc.waitForBodyOpen().then(() => {\n    return extensionScriptInNode(ampdoc.getHeadNode(), extensionId);\n  });\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @param {string} extensionId\n * @return {boolean}\n * @private\n */\nfunction extensionScriptInNode(head, extensionId) {\n  return extensionScriptsInNode(head).includes(extensionId);\n}\n\n/**\n * Waits for an extension if its script is present\n * @param {!Window} win\n * @param {string} extension\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Promise}\n * @private\n */\nfunction waitForExtensionIfPresent(win, extension, head) {\n  /**\n   * If there is an extension script wait for it to load before trying\n   * to get the service. Prevents a race condition when everything but\n   * the extensions is in cache. If there is no script then it's either\n   * not present, or the service was defined by a test. In those cases\n   * we don't wait around for an extension that does not exist.\n   */\n\n  // TODO(jpettitt) investigate registerExtension to short circuit\n  // the dom call in extensionScriptsInNode()\n  if (!extensionScriptInNode(head, extension)) {\n    return Promise.resolve();\n  }\n\n  const extensions = getService(win, 'extensions');\n  return /** @type {!Promise<?Object>} */ (extensions.waitForExtension(\n    win,\n    extension\n  ));\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(win, id, extension, opt_element) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => waitForExtensionIfPresent(win, extension, win.document.head))\n    .then(() => {\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      } else if (isElementScheduled(win, extension)) {\n        return getServicePromise(win, id);\n      }\n      return null;\n    });\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet optsSupported;\n\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function internalListenImplementation(\n  element,\n  eventType,\n  listener,\n  opt_evtListenerOpts\n) {\n  let localElement = element;\n  let localListener = listener;\n  /**\n   * @type {?Function}\n   */\n  let wrapped;\n\n  wrapped = event => {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n      throw e;\n    }\n  };\n  const optsSupported = detectEvtListenerOptsSupport();\n  let capture = false;\n  if (opt_evtListenerOpts) {\n    capture = opt_evtListenerOpts.capture;\n  }\n  localElement.addEventListener(\n    eventType,\n    wrapped,\n    optsSupported ? opt_evtListenerOpts : capture\n  );\n  return () => {\n    if (localElement) {\n      localElement.removeEventListener(\n        eventType,\n        wrapped,\n        optsSupported ? opt_evtListenerOpts : capture\n      );\n    }\n    // Ensure these are GC'd\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\nexport function detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    const options = {\n      get capture() {\n        optsSupported = true;\n      },\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return optsSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\nexport function resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalListenImplementation} from './event-helper-listen';\nimport {lastChildElement} from './dom';\nimport {user} from './log';\n\n/** @const {string}  */\nconst LOAD_FAILURE_PREFIX = 'Failed to load:';\n\n/** @const {string} */\nexport const MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\nexport function createCustomEvent(win, type, detail, opt_eventInit) {\n  const eventInit = /** @type {!CustomEventInit} */ ({detail});\n  Object.assign(eventInit, opt_eventInit);\n  // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n  if (typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    const e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(\n      type,\n      !!eventInit.bubbles,\n      !!eventInit.cancelable,\n      detail\n    );\n    return e;\n  }\n}\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getData(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.data);\n}\n\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getDetail(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.detail);\n}\n\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  let localListener = listener;\n  const unlisten = internalListenImplementation(\n    element,\n    eventType,\n    event => {\n      try {\n        localListener(event);\n      } finally {\n        // Ensure listener is GC'd\n        localListener = null;\n        unlisten();\n      }\n    },\n    opt_evtListenerOpts\n  );\n  return unlisten;\n}\n\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\nexport function listenOncePromise(\n  element,\n  eventType,\n  opt_evtListenerOpts,\n  opt_cancel\n) {\n  let unlisten;\n  const eventPromise = new Promise(resolve => {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n  return eventPromise;\n}\n\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nexport function isLoaded(eleOrWindow) {\n  return !!(\n    eleOrWindow.complete ||\n    eleOrWindow.readyState == 'complete' ||\n    (isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0) ||\n    // If the passed in thing is a Window, infer loaded state from\n    //\n    (eleOrWindow.document && eleOrWindow.document.readyState == 'complete')\n  );\n}\n\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\nexport function loadPromise(eleOrWindow) {\n  let unlistenLoad;\n  let unlistenError;\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n  const isMediaElement = isHTMLMediaElement(eleOrWindow);\n  if (\n    isMediaElement &&\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc\n  ) {\n    return Promise.reject(eleOrWindow);\n  }\n  const loadingPromise = new Promise((resolve, reject) => {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true,\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    }\n    // Don't unlisten on error for Windows.\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n    let errorTarget = eleOrWindow;\n    // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = lastChildElement(\n        eleOrWindow,\n        child => child.tagName === 'SOURCE'\n      );\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n\n  return loadingPromise.then(\n    () => {\n      if (unlistenError) {\n        unlistenError();\n      }\n      return eleOrWindow;\n    },\n    () => {\n      if (unlistenLoad) {\n        unlistenLoad();\n      }\n      failedToLoad(eleOrWindow);\n    }\n  );\n}\n\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] =\n      eleOrWindow.currentSrc || true;\n  }\n\n  // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n  let target = eleOrWindow;\n  if (target && target.src) {\n    target = target.src;\n  }\n  throw user().createError(LOAD_FAILURE_PREFIX, target);\n}\n\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\nexport function isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\nimport {dev, user} from './log';\nimport {getMode} from './mode';\nimport {hasOwn} from './utils/object';\nimport {parseQueryString} from './url';\n\n/** @const {string} */\nconst TAG = 'EXPERIMENTS';\n\n/** @const {string} */\nconst LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n\n/** @const {string} */\nconst TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n\n/**\n * @typedef {{\n *   isTrafficEligible: function(!Window):boolean,\n *   branches: !Array<string>\n * }}\n */\nexport let ExperimentInfo;\n\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCanary(win) {\n  return !!(win.AMP_CONFIG && win.AMP_CONFIG.canary);\n}\n\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\nexport function getBinaryType(win) {\n  return win.AMP_CONFIG && win.AMP_CONFIG.type\n    ? win.AMP_CONFIG.type\n    : 'unknown';\n}\n\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\nexport function isExperimentOn(win, experimentId) {\n  const toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\nexport function toggleExperiment(\n  win,\n  experimentId,\n  opt_on,\n  opt_transientExperiment\n) {\n  const currentlyOn = isExperimentOn(win, /*OK*/ experimentId);\n  const on = !!(opt_on !== undefined ? opt_on : !currentlyOn);\n  if (on != currentlyOn) {\n    const toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      const storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles);\n      // Avoid affecting tests that spy/stub warn().\n      if (!getMode().test) {\n        user().warn(\n          TAG,\n          '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental',\n          experimentId,\n          on ? 'enabled' : 'disabled',\n          win.location.hostname\n        );\n      }\n    }\n  }\n  return on;\n}\n\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nexport function experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n  win[TOGGLES_WINDOW_PROPERTY] = Object.create(null);\n  const toggles = win[TOGGLES_WINDOW_PROPERTY];\n\n  // Read the default config of this build.\n  if (win.AMP_CONFIG) {\n    for (const experimentId in win.AMP_CONFIG) {\n      const frequency = win.AMP_CONFIG[experimentId];\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  }\n  // Read document level override from meta tag.\n  if (\n    win.AMP_CONFIG &&\n    Array.isArray(win.AMP_CONFIG['allow-doc-opt-in']) &&\n    win.AMP_CONFIG['allow-doc-opt-in'].length > 0\n  ) {\n    const allowed = win.AMP_CONFIG['allow-doc-opt-in'];\n    const meta = win.document.head.querySelector(\n      'meta[name=\"amp-experiments-opt-in\"]'\n    );\n    if (meta) {\n      const optedInExperiments = meta.getAttribute('content').split(',');\n      for (let i = 0; i < optedInExperiments.length; i++) {\n        if (allowed.indexOf(optedInExperiments[i]) != -1) {\n          toggles[optedInExperiments[i]] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  if (\n    win.AMP_CONFIG &&\n    Array.isArray(win.AMP_CONFIG['allow-url-opt-in']) &&\n    win.AMP_CONFIG['allow-url-opt-in'].length > 0\n  ) {\n    const allowed = win.AMP_CONFIG['allow-url-opt-in'];\n    const hash = win.location.originalHash || win.location.hash;\n    const params = parseQueryString(hash);\n    for (let i = 0; i < allowed.length; i++) {\n      const param = params[`e-${allowed[i]}`];\n      if (param == '1') {\n        toggles[allowed[i]] = true;\n      }\n      if (param == '0') {\n        toggles[allowed[i]] = false;\n      }\n    }\n  }\n  return toggles;\n}\n\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {Object<string, boolean>}\n */\nexport function experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nfunction getExperimentToggles(win) {\n  let experimentsString = '';\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch (e) {\n    dev().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n  const tokens = experimentsString ? experimentsString.split(/\\s*,\\s*/g) : [];\n\n  const toggles = Object.create(null);\n  for (let i = 0; i < tokens.length; i++) {\n    if (tokens[i].length == 0) {\n      continue;\n    }\n    if (tokens[i][0] == '-') {\n      toggles[tokens[i].substr(1)] = false;\n    } else {\n      toggles[tokens[i]] = true;\n    }\n  }\n  return toggles;\n}\n\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\nfunction saveExperimentToggles(win, toggles) {\n  const experimentIds = [];\n  for (const experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n  try {\n    if ('localStorage' in win) {\n      win.localStorage.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n    }\n  } catch (e) {\n    user().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\nexport function getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\nexport const RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng,\n};\n\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\nfunction selectRandomItem(arr) {\n  const rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return arr[Math.floor(rn * arr.length)] || null;\n}\n\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Object<string, !ExperimentInfo>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\nexport function randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  const selectedExperiments = {};\n  for (const experimentName in experiments) {\n    // Skip experimentName if it is not a key of experiments object or if it\n    // has already been populated by some other property.\n    if (!hasOwn(experiments, experimentName)) {\n      continue;\n    }\n    if (hasOwn(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (\n      !experiments[experimentName].isTrafficEligible ||\n      !experiments[experimentName].isTrafficEligible(win)\n    ) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    }\n\n    // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n    if (\n      !win.__AMP_EXPERIMENT_BRANCHES[experimentName] &&\n      isExperimentOn(win, /*OK*/ experimentName)\n    ) {\n      const {branches} = experiments[experimentName];\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(\n        branches\n      );\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n  return selectedExperiments;\n}\n\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\nexport function getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES\n    ? win.__AMP_EXPERIMENT_BRANCHES[experimentName]\n    : null;\n}\n\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\nexport function forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Checks that the document is of an AMP format type.\n * @param {!Array<string>} formats\n * @param {!Document} doc\n * @return {boolean}\n */\nfunction isAmpFormatType(formats, doc) {\n  const html = doc.documentElement;\n  const isFormatType = formats.some(format => html.hasAttribute(format));\n  return isFormatType;\n}\n\n/**\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isAmp4Email(doc) {\n  return isAmpFormatType(['⚡4email', 'amp4email'], doc);\n}\n\n/**\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isAmphtml(doc) {\n  return isAmpFormatType(['⚡', 'amp'], doc);\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n\nimport {childElementsByTag, isJsonScriptTag} from './dom';\nimport {isObject} from './types';\n\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {*} should be string|number|boolean|null\n */\nlet JSONScalarDef;\n\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {*} should be !Object<string, ?JSONValueDef>\n */\nlet JSONObjectDef;\n\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {*} should be !Array<?JSONValueDef>\n */\nlet JSONArrayDef;\n\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {*} should be !JSONScalarDef|!JSONObjectDef|!JSONArrayDef\n */\nlet JSONValueDef;\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = Object.create(null);\n  for (const k in obj) {\n    if (!hasOwnProperty(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (let i = 0; i < parts.length; i++) {\n    const part = parts[i];\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      hasOwnProperty(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {*} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function parseJson(json) {\n  return /** @type {?JsonObject} */ (JSON.parse(/** @type {string} */ (json)));\n}\n\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {*} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    if (opt_onFailed) {\n      opt_onFailed(e);\n    }\n    return null;\n  }\n}\n\n/**\n * Helper method to get the json config from an element <script> tag\n * @param {!Element} element\n * @return {?JsonObject}\n * @throws {!Error} If element does not have exactly one <script> child\n * with type=\"application/json\", or if the <script> contents are not valid JSON.\n */\nexport function getChildJsonConfig(element) {\n  const scripts = childElementsByTag(element, 'script');\n  const n = scripts.length;\n  if (n !== 1) {\n    throw new Error(`Found ${scripts.length} <script> children. Expected 1.`);\n  }\n  const script = scripts[0];\n  if (!isJsonScriptTag(script)) {\n    throw new Error('<script> child must have type=\"application/json\"');\n  }\n  try {\n    return parseJson(script.textContent);\n  } catch (unusedError) {\n    throw new Error('Failed to parse <script> contents. Is it valid JSON?');\n  }\n}\n\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\nexport function deepEquals(a, b, depth = 5) {\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n  const queue = [{a, b, depth}];\n  while (queue.length > 0) {\n    const {a, b, depth} = queue.shift();\n    // Only check deep equality if depth > 0.\n    if (depth > 0) {\n      if (typeof a !== typeof b) {\n        return false;\n      } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          queue.push({a: a[i], b: b[i], depth: depth - 1});\n        }\n        continue;\n      } else if (a && b && typeof a === 'object' && typeof b === 'object') {\n        const keysA = Object.keys(/** @type {!Object} */ (a));\n        const keysB = Object.keys(/** @type {!Object} */ (b));\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n        for (let i = 0; i < keysA.length; i++) {\n          const k = keysA[i];\n          queue.push({a: a[k], b: b[k], depth: depth - 1});\n        }\n        continue;\n      }\n    }\n    // If we get here, then depth == 0 or (a, b) are primitives.\n    if (a !== b) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {*} obj\n * @param {string} key\n * @return {boolean}\n */\nfunction hasOwnProperty(obj, key) {\n  if (obj == null || typeof obj != 'object') {\n    return false;\n  }\n  return Object.prototype.hasOwnProperty.call(\n    /** @type {!Object} */ (obj),\n    key\n  );\n}\n\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\nexport function jsonConfiguration(obj) {\n  return /** @type {!JsonObject} */ (obj);\n}\n\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {!Object|!Array|string|number|boolean|null} value\n * @return {!InternalJsonLiteralTypeDef}\n */\nexport function jsonLiteral(value) {\n  return /** @type {!InternalJsonLiteralTypeDef} */ (value);\n}\n\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\nexport function includeJsonLiteral(value) {\n  return value;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\nimport {getModeObject} from './mode-object';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray, isEnumValue} from './types';\nimport {once} from './utils/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n * @private Visible for testing only.\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error.js to break cyclic\n * dependency.\n * @param {function(*, !Element=)|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = arg =>\n  encodeURIComponent(String(elementStringOrPassthru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don’t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(!./mode.ModeDef):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(!./mode.ModeDef):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then(response => response.json(), noop)\n        .then(opt_messages => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    // Delegate to the specific resolver.\n    return this.levelFunc_(getModeObject());\n  }\n\n  /**\n   * @param {string} tag\n   * @param {string} level\n   * @param {!Array} messages\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() != LogLevel.OFF) {\n      let fn = this.win.console.log;\n      if (level == 'ERROR') {\n        fn = this.win.console.error || fn;\n      } else if (level == 'INFO') {\n        fn = this.win.console.info || fn;\n      } else if (level == 'WARN') {\n        fn = this.win.console.warn || fn;\n      }\n      const args = this.maybeExpandMessageArgs_(messages);\n      // Prefix console message with \"[tag]\".\n      const prefix = `[${tag}]`;\n      if (typeof args[0] === 'string') {\n        // Prepend string to avoid breaking string substitutions e.g. %s.\n        args[0] = prefix + ' ' + args[0];\n      } else {\n        args.unshift(prefix);\n      }\n      fn.apply(this.win.console, args);\n    }\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  fine(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.FINE) {\n      this.msg_(tag, 'FINE', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  info(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.INFO) {\n      this.msg_(tag, 'INFO', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  warn(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.WARN) {\n      this.msg_(tag, 'WARN', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} var_args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.ERROR) {\n      this.msg_(tag, 'ERROR', Array.prototype.slice.call(arguments, 1));\n    } else {\n      const error = createErrorVargs.apply(\n        null,\n        Array.prototype.slice.call(arguments, 1)\n      );\n      this.prepareError_(error);\n      return error;\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * NOTE: for an explanation of the tempate R implementation see\n   * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {R} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is `null` or `undefined`.\n   * @template T\n   * @template R :=\n   *     mapunion(T, (V) =>\n   *         cond(eq(V, 'null'),\n   *             none(),\n   *             cond(eq(V, 'undefined'),\n   *                 none(),\n   *                 V)))\n   *  =:\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    let firstElement;\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n    if (!shouldBeTrueish) {\n      const message = opt_message || 'Assertion failed';\n      const splitMessage = message.split('%s');\n      const first = splitMessage.shift();\n      let formatted = first;\n      const messageArray = [];\n      let i = 2;\n      pushIfNonEmpty(messageArray, first);\n      while (splitMessage.length > 0) {\n        const nextConstant = splitMessage.shift();\n        const val = arguments[i++];\n        if (val && val.tagName) {\n          firstElement = val;\n        }\n        messageArray.push(val);\n        pushIfNonEmpty(messageArray, nextConstant.trim());\n        formatted += stringOrElementString(val) + nextConstant;\n      }\n      const e = new Error(formatted);\n      e.fromAssert = true;\n      e.associatedElement = firstElement;\n      e.messageArray = messageArray;\n      this.prepareError_(e);\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n      throw e;\n    }\n    return shouldBeTrueish;\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    const shouldBeTrueish = shouldBeElement && shouldBeElement.nodeType == 1;\n    this.assertType_(\n      shouldBeElement,\n      shouldBeTrueish,\n      'Element expected',\n      opt_message\n    );\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    this.assertType_(\n      shouldBeString,\n      typeof shouldBeString == 'string',\n      'String expected',\n      opt_message\n    );\n    return /** @type {string} */ (shouldBeString);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    this.assertType_(\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    );\n    return /** @type {number} */ (shouldBeNumber);\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    this.assertType_(\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    );\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    this.assertType_(\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    );\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n\n  /**\n   * Asserts and returns the enum value. If the enum doesn't contain such a\n   * value, the error is thrown.\n   *\n   * @param {!Object<T>} enumObj\n   * @param {string} s\n   * @param {string=} opt_enumName\n   * @return {T}\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertEnumValue(enumObj, s, opt_enumName) {\n    if (isEnumValue(enumObj, s)) {\n      return s;\n    }\n    this.assert(false, 'Unknown %s value: \"%s\"', opt_enumName || 'enum', s);\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n\n  /**\n   * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n   *\n   * It understands array-based \"id\"-contracted messages.\n   *\n   * Otherwise creates a sprintf syntax string containing the optional message or the\n   * default. An interpolation token is added at the end to include the `subject`.\n   * @param {*} subject\n   * @param {*} assertion\n   * @param {string} defaultMessage\n   * @param {!Array|string=} opt_message\n   * @private\n   */\n  assertType_(subject, assertion, defaultMessage, opt_message) {\n    if (isArray(opt_message)) {\n      this.assert(assertion, opt_message.concat(subject));\n    } else {\n      this.assert(assertion, `${opt_message || defaultMessage}: %s`, subject);\n    }\n  }\n}\n\n/**\n * @param {string|!Element} val\n * @return {string}\n */\nconst stringOrElementString = val =>\n  /** @type {string} */ (elementStringOrPassthru(val));\n\n/**\n * @param {*} val\n * @return {*}\n */\nfunction elementStringOrPassthru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (val && val.nodeType == 1) {\n    return val.tagName.toLowerCase() + (val.id ? '#' + val.id : '');\n  }\n  return val;\n}\n\n/**\n * @param {!Array} array\n * @param {*} val\n */\nfunction pushIfNonEmpty(array, val) {\n  if (val != '') {\n    array.push(val);\n  }\n}\n\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\nexport function duplicateErrorIfNecessary(error) {\n  const messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n  if (messageProperty && messageProperty.writable) {\n    return error;\n  }\n\n  const {message, stack} = error;\n  const e = new Error(message);\n  // Copy all the extraneous things we attach.\n  for (const prop in error) {\n    e[prop] = error[prop];\n  }\n  // Ensure these are copied.\n  e.stack = stack;\n  return e;\n}\n\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\nexport function createErrorVargs(var_args) {\n  let error = null;\n  let message = '';\n  for (let i = 0; i < arguments.length; i++) {\n    const arg = arguments[i];\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n  return error;\n}\n\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\nexport function rethrowAsync(var_args) {\n  const error = createErrorVargs.apply(null, arguments);\n  setTimeout(() => {\n    // reportError is installed globally per window in the entry point.\n    self.__AMP_REPORT_ERROR(error);\n    throw error;\n  });\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?Function}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log contructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log contructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    mode => {\n      const logNum = parseInt(mode.log, 10);\n      if (mode.development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, mode => {\n    const logNum = parseInt(mode.log, 10);\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\n\n/**\n * Provides info about the current app. This return value may be cached and\n * passed around as it will always be DCE'd.\n * @param {?Window=} opt_win\n * @return {!./mode.ModeDef}\n */\nexport function getModeObject(opt_win) {\n  return {\n    localDev: getMode(opt_win).localDev,\n    development: getMode(opt_win).development,\n    filter: getMode(opt_win).filter,\n    minified: getMode(opt_win).minified,\n    lite: getMode(opt_win).lite,\n    test: getMode(opt_win).test,\n    log: getMode(opt_win).log,\n    version: getMode(opt_win).version,\n    rtvVersion: getMode(opt_win).rtvVersion,\n    singlePassType: getMode(opt_win).singlePassType,\n  };\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString_} from './url-parse-query-string';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   filter: (string|undefined),\n *   minified: boolean,\n *   lite: boolean,\n *   test: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   singlePassType: (string|undefined)\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_DEV is only replaced when `gulp dist` is called without the\n  // --fortesting flag.\n  const IS_DEV = true;\n  const IS_MINIFIED = false;\n\n  const localDevEnabled = !!AMP_CONFIG.localDev;\n  const runningTests =\n    !!AMP_CONFIG.test || (IS_DEV && !!(win.__AMP_TEST || win.__karma__));\n  const runningTestsOnIe = win.__karma__ && win.__karma__.config.amp.testOnIe;\n  const isLocalDev = IS_DEV && (localDevEnabled || runningTests);\n  const hashQuery = parseQueryString_(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location.originalHash || win.location.hash\n  );\n  const singlePassType = AMP_CONFIG.spt;\n\n  const searchQuery = parseQueryString_(win.location.search);\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win, isLocalDev);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `gulp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    // Triggers validation or enable pub level logging. Validation can be\n    // bypassed via #validate=0.\n    // Note that AMP_DEV_MODE flag is used for testing purposes.\n    // Use Array.indexOf instead of Array.includes because of #24219\n    development: !!(\n      ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].indexOf(\n        hashQuery['development']\n      ) >= 0 || win.AMP_DEV_MODE\n    ),\n    examiner: hashQuery['development'] == '2',\n    // Allows filtering validation errors by error category. For the\n    // available categories, see ErrorCategory in validator/validator.proto.\n    filter: hashQuery['filter'],\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    // amp-user-location override\n    userLocationOverride: hashQuery['amp-user-location'],\n    minified: IS_MINIFIED,\n    // Whether document is in an amp-lite viewer. It signal that the user\n    // would prefer to use less bandwidth.\n    lite: searchQuery['amp_lite'] != undefined,\n    test: runningTests,\n    testIe: runningTestsOnIe,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n    singlePassType,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n */\nfunction getRtvVersion(win, isLocalDev) {\n  // If it's local dev then we won't actually have a full version so\n  // just use the version.\n  if (isLocalDev) {\n    return internalRuntimeVersion();\n  }\n\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win, isLocalDev) {\n  return getRtvVersion(win, isLocalDev);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\nimport {devAssert} from './log';\nimport {getServicePromise} from './service';\n\n/**\n * A map of services that delay rendering. The key is the name of the service\n * and the value is a DOM query which is used to check if the service is needed\n * in the current document.\n * Do not add a service unless absolutely necessary.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this list is used for server-side rendering (SSR) and any\n * changes made to it must be made in coordination with caches that implement\n * SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @const {!Object<string, string>}\n */\nconst SERVICES = {\n  'amp-dynamic-css-classes': '[custom-element=amp-dynamic-css-classes]',\n  'variant': 'amp-experiment',\n  'amp-story-render': 'amp-story[standalone]',\n};\n\n/**\n * Base class for render delaying services.\n * This should be extended to ensure the service\n * is properly handled\n *\n * @interface\n */\nexport class RenderDelayingService {\n  /**\n   * Function to return a promise for when\n   * it is finished delaying render, and is ready.\n   * NOTE: This should simply return Promise.resolve,\n   * if your service does not need to perform any logic\n   * after being registered.\n   * @return {!Promise}\n   */\n  whenReady() {}\n}\n\n/**\n * Maximum milliseconds to wait for all extensions to load before erroring.\n * @const\n */\nconst LOAD_TIMEOUT = 3000;\n\n/**\n * Detects any render delaying services that are required on the page, and\n * returns a promise with a timeout.\n * @param {!Window} win\n * @return {!Promise<!Array<*>>} resolves to an Array that has the same length\n *     as the detected render delaying services\n */\nexport function waitForServices(win) {\n  const promises = includedServices(win).map(serviceId => {\n    const serviceReadyPromise = getServicePromise(win, serviceId).then(\n      service => {\n        if (service && isRenderDelayingService(service)) {\n          return service.whenReady().then(() => {\n            return service;\n          });\n        }\n        return service;\n      }\n    );\n\n    return Services.timerFor(win).timeoutPromise(\n      LOAD_TIMEOUT,\n      serviceReadyPromise,\n      `Render timeout waiting for service ${serviceId} to be ready.`\n    );\n  });\n  return Promise.all(promises);\n}\n\n/**\n * Returns true if the page has a render delaying service.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function hasRenderDelayingServices(win) {\n  return includedServices(win).length > 0;\n}\n\n/**\n * Function to determine if the passed\n * Object is a Render Delaying Service\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isRenderDelayingService(service) {\n  const maybeRenderDelayingService = /** @type {!RenderDelayingService}*/ (service);\n  return typeof maybeRenderDelayingService.whenReady == 'function';\n}\n\n/**\n * Detects which, if any, render-delaying extensions are included on the page.\n * @param {!Window} win\n * @return {!Array<string>}\n */\nexport function includedServices(win) {\n  /** @const {!Document} */\n  const doc = win.document;\n  devAssert(doc.body);\n\n  return Object.keys(SERVICES).filter(service => {\n    return doc.querySelector(SERVICES[service]);\n  });\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from './utils/promise';\nimport {dev, devAssert} from './log';\nimport {isExperimentOn} from './experiments';\nimport {toWin} from './types';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (?function(new:Object, !Window)|\n *          ?function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Services must implement this interface to be embeddable in FIEs.\n * @interface\n */\nexport class EmbeddableService {\n  /**\n   * Installs a new instance of the service in the given FIE window.\n   * @param {!Window} unusedEmbedWin\n   * @param {!./service/ampdoc-impl.AmpDoc} unusedAmpDoc\n   */\n  static installInEmbedWindow(unusedEmbedWin, unusedAmpDoc) {}\n}\n\n/**\n * Returns a service with the given id. Assumes that it has been constructed\n * already.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\nexport function getExistingServiceForDocInEmbedScope(element, id) {\n  // TODO(#22733): completely remove this method once ampdoc-fie launches.\n  const document = element.ownerDocument;\n  const win = toWin(document.defaultView);\n  const topWin = getTopWindow(win);\n  // First, try to resolve via local embed window (if applicable).\n  const isEmbed = win != topWin;\n  const ampdocFieExperimentOn = isExperimentOn(topWin, 'ampdoc-fie');\n  if (isEmbed && !ampdocFieExperimentOn) {\n    if (isServiceRegistered(win, id)) {\n      return getServiceInternal(win, id);\n    }\n    // Fallback from FIE to parent is intentionally unsupported for safety.\n    return null;\n  } else {\n    // Resolve via the element's ampdoc.\n    return getServiceForDocOrNullInternal(element, id);\n  }\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedScope(embedWin, id, service) {\n  const topWin = getTopWindow(embedWin);\n  devAssert(\n    embedWin != topWin,\n    'Service override can only be installed in embed window: %s',\n    id\n  );\n  devAssert(\n    !isServiceRegistered(embedWin, id),\n    'Service override has already been installed: %s',\n    id\n  );\n  const ampdocFieExperimentOn = isExperimentOn(topWin, 'ampdoc-fie');\n  if (ampdocFieExperimentOn) {\n    const ampdoc = getAmpdoc(embedWin.document);\n    registerServiceInternal(\n      getAmpdocServiceHolder(ampdoc),\n      ampdoc,\n      id,\n      () => service,\n      /* override */ true\n    );\n  } else {\n    registerServiceInternal(embedWin, embedWin, id, () => service);\n    getServiceInternal(embedWin, id); // Force service to build.\n  }\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\nfunction getServiceForDocOrNullInternal(element, id) {\n  const ampdoc = getAmpdoc(element);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = toWin(\n      /** @type {!Document} */ (nodeOrDoc.ownerDocument || nodeOrDoc)\n        .defaultView\n    );\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (getService(\n    win,\n    'ampdoc'\n  ));\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n * @template T\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.ctor = null;\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n */\nfunction registerServiceInternal(holder, context, id, ctor, opt_override) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n    };\n  }\n\n  if (!opt_override && (s.ctor || s.obj)) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  // TODO(dvoytenko): Consider marking holder as destroyed for later-arriving\n  // service to be canceled automatically.\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then(instance =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * Adopts an embeddable (implements `EmbeddableService` interface) service\n * in embed scope.\n * @param {!Window} embedWin\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} serviceClass\n * @suppress {missingProperties}\n * @return {boolean}\n */\nexport function installServiceInEmbedIfEmbeddable(embedWin, serviceClass) {\n  const isEmbeddableService =\n    typeof serviceClass.installInEmbedWindow === 'function';\n  if (!isEmbeddableService) {\n    return false;\n  }\n  const frameElement = dev().assertElement(\n    embedWin.frameElement,\n    'frameElement not found for embed'\n  );\n  const ampdoc = getAmpdoc(frameElement);\n  serviceClass.installInEmbedWindow(embedWin, ampdoc);\n  return true;\n}\n\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    () => service\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have an implementation or a constructor.\n  return !!(service && (service.ctor || service.obj));\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, resolve, reject} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getAmpdoc,\n  getExistingServiceForDocInEmbedScope,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServicePromiseForDoc,\n} from './service';\nimport {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from './element-service';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (getElementServiceForDoc(\n      element,\n      'access',\n      'amp-access'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'access',\n      'amp-access'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (getElementServiceForDoc(\n      element,\n      'subscriptions',\n      'amp-subscriptions'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'subscriptions',\n      'amp-subscriptions'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'action'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'standard-actions'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (getElementServiceForDoc(\n      element,\n      'activity',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (getService(\n      window,\n      'ampdoc'\n    ));\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (getElementServiceForDoc(\n      element,\n      'amp-analytics-instrumentation',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'amp-analytics-instrumentation',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (getService(\n      window,\n      'batched-xhr'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (getElementServiceIfAvailableForDocInEmbedScope(\n      element,\n      'bind',\n      'amp-bind'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'cid'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'navigation'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (getElementServiceForDoc(\n      element,\n      'loader',\n      'amp-loader'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (getElementServiceForDoc(\n      element,\n      'standalone',\n      'amp-standalone'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (getService(\n      window,\n      'crypto'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'documentInfo'\n    )).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (getService(\n      window,\n      'extensions'\n    ));\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'form-submit-service'\n    ));\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'hidden-observer'\n    ));\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'history'\n    ));\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'inputmask',\n      'amp-inputmask'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'owners'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (getService(\n      window,\n      'performance'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (getExistingServiceOrNull(\n      window,\n      'performance'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (getService(\n      window,\n      'platform'\n    ));\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (getServiceForDoc(\n      element,\n      'position-observer'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'resources'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'resources'\n    ));\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?{incomingFragment: string, outgoingFragment: string}>}\n   */\n  static shareTrackingForOrNull(win) {\n    return /** @type {!Promise<?{incomingFragment: string, outgoingFragment: string}>} */ (getElementServiceIfAvailable(\n      win,\n      'share-tracking',\n      'amp-share-tracking',\n      true\n    ));\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (getElementServiceIfAvailable(win, 'localization', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  static localizationService(win) {\n    return getService(win, 'localization');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (getElementServiceIfAvailable(win, 'story-analytics', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreServiceV01(win) {\n    return getService(win, 'story-store');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestServiceV01(win) {\n    return getService(win, 'story-request-v01');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNullV01(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (getElementServiceIfAvailable(win, 'localization-v01', 'amp-story', true))\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  static localizationServiceV01(win) {\n    return getService(win, 'localization-v01');\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>}\n   */\n  static viewerIntegrationVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>} */\n      (getElementServiceIfAvailable(\n        win,\n        'viewer-integration-variable',\n        'amp-viewer-integration',\n        true\n      ))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'storage'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesFor(window) {\n    return /** @type {!./service/template-impl.Templates} */ (getService(\n      window,\n      'templates'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (getService(\n      window,\n      'timer'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'url-replace'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (getElementServiceForDoc(\n        element,\n        'userNotificationManager',\n        'amp-user-notification'\n      ))\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (getElementServiceIfAvailableForDoc(\n        element,\n        'consentPolicyManager',\n        'amp-consent'\n      ))\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'geo',\n      'amp-geo',\n      true\n    ));\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>}\n   */\n  static userLocationForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'user-location',\n      'amp-user-location',\n      true\n    ));\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'url'\n    ));\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'variant',\n      'amp-experiment',\n      true\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'video-manager'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>}\n   */\n  static viewerAssistanceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>} */\n      (getElementServiceIfAvailableForDoc(\n        element,\n        'amp-viewer-assistance',\n        'amp-viewer-assistance'\n      ))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'viewer'\n    ));\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'viewer'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (getService(\n      window,\n      'vsync'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'viewport'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.startsWith.\n * @param {string} string\n * @param {string} prefix\n * @return {boolean}\n */\nexport function startsWith(string, prefix) {\n  if (prefix.length > string.length) {\n    return false;\n  }\n  return string.lastIndexOf(prefix, 0) == 0;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {*} TODO(#23582): Specify return type\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CommonSignals} from './common-signals';\nimport {Services} from './services';\nimport {dev, devAssert, rethrowAsync} from './log';\nimport {getAmpdoc} from './service';\nimport {insertAfterOrAtStart, waitForBodyOpenPromise} from './dom';\nimport {map} from './utils/object';\nimport {setStyles} from './style';\nimport {waitForServices} from './render-delaying-services';\n\nconst TRANSFORMER_PROP = '__AMP_CSS_TR';\nconst STYLE_MAP_PROP = '__AMP_CSS_SM';\n\n/**\n * Adds the given css text to the given ampdoc.\n *\n * The style tags will be at the beginning of the head before all author\n * styles. One element can be the main runtime CSS. This is guaranteed\n * to always be the first stylesheet in the doc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc The ampdoc that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are available.\n *     Not using a promise, because this is synchronous when possible.\n *     for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\nexport function installStylesForDoc(\n  ampdoc,\n  cssText,\n  cb,\n  opt_isRuntimeCss,\n  opt_ext\n) {\n  const cssRoot = ampdoc.getHeadNode();\n  const style = insertStyleElement(\n    cssRoot,\n    maybeTransform(cssRoot, cssText),\n    opt_isRuntimeCss || false,\n    opt_ext || null\n  );\n\n  if (cb) {\n    const rootNode = ampdoc.getRootNode();\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(rootNode, style)) {\n      cb(style);\n      return style;\n    }\n    // Poll until styles are available.\n    const interval = setInterval(() => {\n      if (styleLoaded(rootNode, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n  return style;\n}\n\n/**\n * Adds the given css text to the given document.\n * TODO(dvoytenko, #22733): Remove this method once FIE/ampdoc migration is\n * done.\n *\n * @param {!Document} doc The document that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are\n *     available. Not using a promise, because this is synchronous when\n *     possible. for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\nexport function installStylesLegacy(\n  doc,\n  cssText,\n  cb,\n  opt_isRuntimeCss,\n  opt_ext\n) {\n  const style = insertStyleElement(\n    dev().assertElement(doc.head),\n    cssText,\n    opt_isRuntimeCss || false,\n    opt_ext || null\n  );\n\n  if (cb) {\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(doc, style)) {\n      cb(style);\n      return style;\n    }\n    // Poll until styles are available.\n    const interval = setInterval(() => {\n      if (styleLoaded(doc, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n  return style;\n}\n\n/**\n * Creates the properly configured style element.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @param {boolean} isRuntimeCss\n * @param {?string} ext\n * @return {!Element}\n */\nfunction insertStyleElement(cssRoot, cssText, isRuntimeCss, ext) {\n  let styleMap = cssRoot[STYLE_MAP_PROP];\n  if (!styleMap) {\n    styleMap = cssRoot[STYLE_MAP_PROP] = map();\n  }\n\n  const isExtCss =\n    !isRuntimeCss && (ext && ext != 'amp-custom' && ext != 'amp-keyframes');\n  const key = isRuntimeCss\n    ? 'amp-runtime'\n    : isExtCss\n    ? `amp-extension=${ext}`\n    : null;\n\n  // Check if it has already been created or discovered.\n  if (key) {\n    const existing = getExistingStyleElement(cssRoot, styleMap, key);\n    if (existing) {\n      if (existing.textContent !== cssText) {\n        existing.textContent = cssText;\n      }\n      return existing;\n    }\n  }\n\n  // Create the new style element and append to cssRoot.\n  const doc = cssRoot.ownerDocument || cssRoot;\n  const style = doc.createElement('style');\n  style./*OK*/ textContent = cssText;\n  let afterElement = null;\n  // Make sure that we place style tags after the main runtime CSS. Otherwise\n  // the order is random.\n  if (isRuntimeCss) {\n    style.setAttribute('amp-runtime', '');\n  } else if (isExtCss) {\n    style.setAttribute('amp-extension', ext || '');\n    afterElement = dev().assertElement(\n      getExistingStyleElement(cssRoot, styleMap, 'amp-runtime')\n    );\n  } else {\n    if (ext) {\n      style.setAttribute(ext, '');\n    }\n    afterElement = cssRoot.lastChild;\n  }\n  insertAfterOrAtStart(cssRoot, style, afterElement);\n  if (key) {\n    styleMap[key] = style;\n  }\n  return style;\n}\n\n/**\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {!Object<string, !Element>} styleMap\n * @param {string} key\n * @return {?Element}\n */\nfunction getExistingStyleElement(cssRoot, styleMap, key) {\n  // Already cached.\n  if (styleMap[key]) {\n    return styleMap[key];\n  }\n  // Check if the style has already been added by the server layout.\n  const existing = cssRoot./*OK*/ querySelector(`style[${key}]`);\n  if (existing) {\n    styleMap[key] = existing;\n    return existing;\n  }\n  // Nothing found.\n  return null;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {function(string):string} transformer\n */\nexport function installCssTransformer(cssRoot, transformer) {\n  cssRoot[TRANSFORMER_PROP] = transformer;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @return {string}\n */\nfunction maybeTransform(cssRoot, cssText) {\n  const transformer = cssRoot[TRANSFORMER_PROP];\n  return transformer ? transformer(cssText) : cssText;\n}\n\n/** @private {boolean} */\nlet bodyMadeVisible = false;\n\n/**\n * @param {boolean} value\n * @visibleForTesting\n */\nexport function setBodyMadeVisibleForTesting(value) {\n  bodyMadeVisible = value;\n}\n\n/**\n * Sets the document's body opacity to 1.\n * If the body is not yet available (because our script was loaded\n * synchronously), polls until it is.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisible(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  const win = /** @type {!Window} */ (doc.defaultView);\n  waitForBodyOpenPromise(doc)\n    .then(() => {\n      return waitForServices(win);\n    })\n    .catch(reason => {\n      rethrowAsync(reason);\n      return [];\n    })\n    .then(services => {\n      bodyMadeVisible = true;\n      setBodyVisibleStyles(doc);\n      const ampdoc = getAmpdoc(doc);\n      ampdoc.signals().signal(CommonSignals.RENDER_START);\n      if (services.length > 0) {\n        const resources = Services.resourcesForDoc(doc.documentElement);\n        resources./*OK*/ schedulePass(1, /* relayoutAll */ true);\n      }\n      try {\n        const perf = Services.performanceFor(win);\n        perf.tick('mbv');\n        perf.flush();\n      } catch (e) {}\n    });\n}\n\n/**\n * Set the document's body opacity to 1. Called in error cases.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisibleRecovery(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  if (bodyMadeVisible) {\n    return;\n  }\n  bodyMadeVisible = true;\n  setBodyVisibleStyles(doc);\n}\n\n/**\n * Make sure that body exists, and make it visible.\n * @param {!Document} doc\n */\nfunction setBodyVisibleStyles(doc) {\n  setStyles(dev().assertElement(doc.body), {\n    opacity: 1,\n    visibility: 'visible',\n    'animation': 'none',\n  });\n}\n\n/**\n * Indicates that the body is always visible. For instance, in case of PWA.\n * This check is on a module level variable, and could be problematic if you are\n * relying on this function across different binaries.\n * @param {!Window} unusedWin\n */\nexport function bodyAlwaysVisible(unusedWin) {\n  bodyMadeVisible = true;\n}\n\n/**\n * Checks whether a style element was registered in the DOM.\n * @param {!Document|!ShadowRoot} doc\n * @param {!Element} style\n * @return {boolean}\n */\nfunction styleLoaded(doc, style) {\n  const sheets = doc.styleSheets;\n  for (let i = 0; i < sheets.length; i++) {\n    const sheet = sheets[i];\n    if (sheet.ownerNode == style) {\n      return true;\n    }\n  }\n  return false;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {dev, devAssert} from './log';\nimport {map} from './utils/object.js';\nimport {startsWith} from './string';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\n/**\n * @export\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @export\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (startsWith(camelCase, '--')) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      styles[k].toString(),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (propertyName) {\n    element.style[propertyName] = /** @type {string} */ (opt_units\n      ? value + opt_units\n      : value);\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  if (style === 'display') {\n    dev().error(\n      'STYLE',\n      '`display` style detected. You must use toggle instead.'\n    );\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    dev().error(\n      'STYLE',\n      '`display` style detected in styles. You must use toggle instead.'\n    );\n  }\n  return styles;\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x}, ${opt_y})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n  return `rotate(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!Object<string, string>}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return /** @type {!Object<string, string>} */ (style) || map();\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst toString_ = Object.prototype.toString;\n\n/**\n * Returns the ECMA [[Class]] of a value\n * @param {*} value\n * @return {string}\n */\nfunction toString(value) {\n  return toString_.call(value);\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport function isArray(value) {\n  return Array.isArray(value);\n}\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString(value) === '[object Object]';\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Checks whether `s` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} s\n * @return {boolean}\n * @template T\n */\nexport function isEnumValue(enumObj, s) {\n  for (const k in enumObj) {\n    if (enumObj[k] === s) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {!Window|null} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {tryDecodeUriComponent_} from './url-try-decode-uri-component';\n\nconst regex = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * DO NOT import the function from this file. Instead, import parseQueryString\n * from `src/url.js`.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString_(queryString) {\n  const params = /** @type {!JsonObject} */ (Object.create(null));\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = regex.exec(queryString))) {\n    const name = tryDecodeUriComponent_(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent_(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * DO NOT import the function from this file. Instead, import\n * tryDecodeUriComponent from `src/url.js`.\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent_(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LruCache} from './utils/lru-cache';\nimport {dict, hasOwn} from './utils/object';\nimport {endsWith, startsWith} from './string';\nimport {getMode} from './mode';\nimport {isArray} from './types';\nimport {parseQueryString_} from './url-parse-query-string';\nimport {tryDecodeUriComponent_} from './url-try-decode-uri-component';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\n/**\n * @type {!JsonObject}\n */\nconst SERVING_TYPE_PREFIX = dict({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n  // Actions viewer\n  'action': true,\n});\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet a;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet cache;\n\n/** @private @const Matches amp_js_* parameters in query string. */\nconst AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n\n/** @private @const Matches amp_gsa parameters in query string. */\nconst AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n\n/** @private @const Matches amp_r parameters in query string. */\nconst AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n\n/** @private @const Matches amp_kit parameters in query string. */\nconst AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n\n/** @private @const Matches usqp parameters from goog experiment in query string. */\nconst GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\n\nconst INVALID_PROTOCOLS = [\n  /*eslint no-script-url: 0*/ 'javascript:',\n  /*eslint no-script-url: 0*/ 'data:',\n  /*eslint no-script-url: 0*/ 'vbscript:',\n];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a = /** @type {!HTMLAnchorElement} */ (self.document.createElement('a'));\n    cache = self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, opt_nocache ? null : cache);\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(a, url, opt_cache) {\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = getMode().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  const field = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    const v = params[k];\n    if (v == null) {\n      continue;\n    } else if (isArray(v)) {\n      for (let i = 0; i < v.length; i++) {\n        const sv = /** @type {string} */ (v[i]);\n        s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n      }\n    } else {\n      const sv = /** @type {string} */ (v);\n      s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  // (erwinm, #4560): type cast necessary until #4560 is fixed.\n  const theUrlString = /** @type {string} */ (urlString);\n  userAssert(\n    isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    theUrlString\n  );\n  return theUrlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * This function is implemented in a separate file to avoid a circular\n * dependency.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  return parseQueryString_(queryString);\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.cdnProxyRegex.test(url.origin);\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.localhostRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const parsed = parseUrlDeprecated(url);\n  const search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const search = urlSearch\n    .replace(AMP_JS_PARAMS_REGEX, '')\n    .replace(AMP_GSA_PARAMS_REGEX, '')\n    .replace(AMP_R_PARAMS_REGEX, '')\n    .replace(AMP_KIT_PARAMS_REGEX, '')\n    .replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '')\n    .replace(/^[?&]/, ''); // Removes first ? or &.\n  return search ? '?' + search : '';\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}=[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX[prefix],\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  if (typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private Visible for testing.\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (startsWith(relativeUrlString.toLowerCase(), relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (startsWith(relativeUrlString, '//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (startsWith(relativeUrlString, '/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} opt_fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, opt_fallback) {\n  return tryDecodeUriComponent_(component, opt_fallback);\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// TODO(rsimha, #15334): Enable this rule.\n/* eslint jsdoc/check-types: 0 */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nexport function once(fn) {\n  let evaluated = false;\n  let retValue = null;\n  let callback = fn;\n  return (...args) => {\n    if (!evaluated) {\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n    return retValue;\n  };\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dev} from '../log';\n\n/** @const {string} */\nconst TAG = 'lru-cache';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = Object.create(null);\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    dev().warn(TAG, 'Trimming LRU cache');\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isObject} from '../types';\n\n/* @const */\nconst hasOwn_ = Object.prototype.hasOwnProperty;\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {t, s, d} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    Object.keys(s).forEach(key => {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          return;\n        }\n      }\n      t[key] = newValue;\n    });\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A priority queue backed with sorted array.\n * @template T\n */\nexport default class PriorityQueue {\n  /**\n   * Creates an instance of PriorityQueue.\n   */\n  constructor() {\n    /** @private @const {Array<{item: T, priority: number}>} */\n    this.queue_ = [];\n  }\n\n  /**\n   * Returns the max priority item without dequeueing it.\n   * @return {T}\n   */\n  peek() {\n    const l = this.queue_.length;\n    if (!l) {\n      return null;\n    }\n    return this.queue_[l - 1].item;\n  }\n\n  /**\n   * Enqueues an item with the given priority.\n   * @param {T} item\n   * @param {number} priority\n   */\n  enqueue(item, priority) {\n    if (isNaN(priority)) {\n      throw new Error('Priority must not be NaN.');\n    }\n    const i = this.binarySearch_(priority);\n    this.queue_.splice(i, 0, {item, priority});\n  }\n\n  /**\n   * Returns index at which item with `target` priority should be inserted.\n   * @param {number} target\n   * @return {number}\n   * @private\n   */\n  binarySearch_(target) {\n    let i = -1;\n    let lo = 0;\n    let hi = this.queue_.length;\n    while (lo <= hi) {\n      i = Math.floor((lo + hi) / 2);\n      // This means `target` is the new max priority in the queue.\n      if (i === this.queue_.length) {\n        break;\n      }\n      // Stop searching once p[i] >= target AND p[i-1] < target.\n      // This way, we'll return the index of the first occurence of `target`\n      // priority (if any), which preserves FIFO order of same-priority items.\n      if (this.queue_[i].priority < target) {\n        lo = i + 1;\n      } else if (i > 0 && this.queue_[i - 1].priority >= target) {\n        hi = i - 1;\n      } else {\n        break;\n      }\n    }\n    return i;\n  }\n\n  /**\n   * @param {function(T)} callback\n   */\n  forEach(callback) {\n    let index = this.queue_.length;\n    while (index--) {\n      callback(this.queue_[index].item);\n    }\n  }\n\n  /**\n   * Dequeues the max priority item.\n   * Items with the same priority are dequeued in FIFO order.\n   * @return {T}\n   */\n  dequeue() {\n    if (!this.queue_.length) {\n      return null;\n    }\n    return this.queue_.pop().item;\n  }\n\n  /**\n   * The number of items in the queue.\n   * @return {number}\n   */\n  get length() {\n    return this.queue_.length;\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /**\n   * Creates an instance of Deferred.\n   */\n  constructor() {\n    let resolve, reject;\n\n    /**\n     * @const {!Promise<T>}\n     */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n\n    /**\n     * @const {function(T=)}\n     */\n    this.resolve = resolve;\n\n    /**\n     * @const {function(*=)}\n     */\n    this.reject = reject;\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise(resolve => {\n    resolve(fn());\n  });\n}\n\n/**\n * Returns a promise which resolves if a threshold amount of the given promises\n * resolve, and rejects otherwise.\n * @param {!Array<!Promise>} promises The array of promises to test.\n * @param {number} count The number of promises that must resolve for the\n *     returned promise to resolve.\n * @return {!Promise} A promise that resolves if any of the given promises\n *     resolve, and which rejects otherwise.\n */\nexport function some(promises, count = 1) {\n  return new Promise((resolve, reject) => {\n    count = Math.max(count, 0);\n    const extra = promises.length - count;\n    if (extra < 0) {\n      reject(new Error('not enough promises to resolve'));\n    }\n    if (promises.length == 0) {\n      resolve([]);\n    }\n    const values = [];\n    const reasons = [];\n\n    const onFulfilled = value => {\n      if (values.length < count) {\n        values.push(value);\n      }\n      if (values.length == count) {\n        resolve(values);\n      }\n    };\n    const onRejected = reason => {\n      if (reasons.length <= extra) {\n        reasons.push(reason);\n      }\n      if (reasons.length > extra) {\n        reject(reasons);\n      }\n    };\n    for (let i = 0; i < promises.length; i++) {\n      Promise.resolve(promises[i]).then(onFulfilled, onRejected);\n    }\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!Promise>=} opt_promises\n   */\n  constructor(opt_promises) {\n    let resolve_, reject_;\n    /** @private @const {!Promise} */\n    this.promise_ = new Promise((resolve, reject) => {\n      resolve_ = resolve;\n      reject_ = reject;\n    });\n\n    /** @private */\n    this.resolve_ = resolve_;\n\n    /** @private */\n    this.reject_ = reject_;\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (let i = 0; i < opt_promises.length; i++) {\n        this.add(opt_promises[i]);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!Promise} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    Promise.resolve(promise).then(\n      result => {\n        if (this.count_ === countAtAdd) {\n          this.resolve_(result);\n        }\n      },\n      error => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.reject_(error);\n        }\n      }\n    );\n    return this.promise_;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.promise_.then(opt_resolve, opt_reject);\n  }\n}\n","/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n"]}