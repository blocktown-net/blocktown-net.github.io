{"version":3,"sources":["regexp/wrapper","node_modules/browser-pack/_prelude.js","amp-analytics.js","extensions/amp-analytics/0.1/activity-impl.js","extensions/amp-analytics/0.1/amp-analytics.js","extensions/amp-analytics/0.1/analytics-group.js","extensions/amp-analytics/0.1/analytics-root.js","extensions/amp-analytics/0.1/config.js","extensions/amp-analytics/0.1/cookie-reader.js","extensions/amp-analytics/0.1/cookie-writer.js","extensions/amp-analytics/0.1/crc32.js","extensions/amp-analytics/0.1/events.js","extensions/amp-analytics/0.1/iframe-transport-message-queue.js","extensions/amp-analytics/0.1/iframe-transport-vendors.js","extensions/amp-analytics/0.1/iframe-transport.js","extensions/amp-analytics/0.1/instrumentation.js","extensions/amp-analytics/0.1/linker-manager.js","extensions/amp-analytics/0.1/linker-reader.js","extensions/amp-analytics/0.1/linker.js","extensions/amp-analytics/0.1/opacity.js","extensions/amp-analytics/0.1/requests.js","extensions/amp-analytics/0.1/resource-timing.js","extensions/amp-analytics/0.1/sandbox-vars-whitelist.js","extensions/amp-analytics/0.1/scroll-manager.js","extensions/amp-analytics/0.1/transport-serializer.js","extensions/amp-analytics/0.1/transport.js","extensions/amp-analytics/0.1/variables.js","extensions/amp-analytics/0.1/vendors.js","extensions/amp-analytics/0.1/vendors/_fake_.js","extensions/amp-analytics/0.1/vendors/acquialift.js","extensions/amp-analytics/0.1/vendors/adobeanalytics.js","extensions/amp-analytics/0.1/vendors/adobeanalytics_nativeConfig.js","extensions/amp-analytics/0.1/vendors/afsanalytics.js","extensions/amp-analytics/0.1/vendors/alexametrics.js","extensions/amp-analytics/0.1/vendors/amplitude.js","extensions/amp-analytics/0.1/vendors/atinternet.js","extensions/amp-analytics/0.1/vendors/baiduanalytics.js","extensions/amp-analytics/0.1/vendors/bg.js","extensions/amp-analytics/0.1/vendors/burt.js","extensions/amp-analytics/0.1/vendors/byside.js","extensions/amp-analytics/0.1/vendors/chartbeat.js","extensions/amp-analytics/0.1/vendors/clicky.js","extensions/amp-analytics/0.1/vendors/colanalytics.js","extensions/amp-analytics/0.1/vendors/comscore.js","extensions/amp-analytics/0.1/vendors/cxense.js","extensions/amp-analytics/0.1/vendors/dynatrace.js","extensions/amp-analytics/0.1/vendors/epica.js","extensions/amp-analytics/0.1/vendors/euleriananalytics.js","extensions/amp-analytics/0.1/vendors/facebookpixel.js","extensions/amp-analytics/0.1/vendors/gemius.js","extensions/amp-analytics/0.1/vendors/googleadwords.js","extensions/amp-analytics/0.1/vendors/googleanalytics.js","extensions/amp-analytics/0.1/vendors/gtag.js","extensions/amp-analytics/0.1/vendors/ibeatanalytics.js","extensions/amp-analytics/0.1/vendors/infonline.js","extensions/amp-analytics/0.1/vendors/iplabel.js","extensions/amp-analytics/0.1/vendors/keen.js","extensions/amp-analytics/0.1/vendors/kenshoo.js","extensions/amp-analytics/0.1/vendors/krux.js","extensions/amp-analytics/0.1/vendors/linkpulse.js","extensions/amp-analytics/0.1/vendors/lotame.js","extensions/amp-analytics/0.1/vendors/marinsoftware.js","extensions/amp-analytics/0.1/vendors/mediametrie.js","extensions/amp-analytics/0.1/vendors/mediarithmics.js","extensions/amp-analytics/0.1/vendors/mediator.js","extensions/amp-analytics/0.1/vendors/metrika.js","extensions/amp-analytics/0.1/vendors/moat.js","extensions/amp-analytics/0.1/vendors/mobify.js","extensions/amp-analytics/0.1/vendors/mparticle.js","extensions/amp-analytics/0.1/vendors/mpulse.js","extensions/amp-analytics/0.1/vendors/navegg.js","extensions/amp-analytics/0.1/vendors/newrelic.js","extensions/amp-analytics/0.1/vendors/nielsen-marketing-cloud.js","extensions/amp-analytics/0.1/vendors/nielsen.js","extensions/amp-analytics/0.1/vendors/oewa.js","extensions/amp-analytics/0.1/vendors/oewadirect.js","extensions/amp-analytics/0.1/vendors/oracleInfinityAnalytics.js","extensions/amp-analytics/0.1/vendors/parsely.js","extensions/amp-analytics/0.1/vendors/permutive.js","extensions/amp-analytics/0.1/vendors/piStats.js","extensions/amp-analytics/0.1/vendors/piano.js","extensions/amp-analytics/0.1/vendors/pinpoll.js","extensions/amp-analytics/0.1/vendors/pressboard.js","extensions/amp-analytics/0.1/vendors/quantcast.js","extensions/amp-analytics/0.1/vendors/rakam.js","extensions/amp-analytics/0.1/vendors/reppublika.js","extensions/amp-analytics/0.1/vendors/retargetly.js","extensions/amp-analytics/0.1/vendors/segment.js","extensions/amp-analytics/0.1/vendors/shinystat.js","extensions/amp-analytics/0.1/vendors/simplereach.js","extensions/amp-analytics/0.1/vendors/snowplow.js","extensions/amp-analytics/0.1/vendors/teaanalytics.js","extensions/amp-analytics/0.1/vendors/tealiumcollect.js","extensions/amp-analytics/0.1/vendors/top100.js","extensions/amp-analytics/0.1/vendors/topmailru.js","extensions/amp-analytics/0.1/vendors/treasuredata.js","extensions/amp-analytics/0.1/vendors/umenganalytics.js","extensions/amp-analytics/0.1/vendors/upscore.js","extensions/amp-analytics/0.1/vendors/vponanalytics.js","extensions/amp-analytics/0.1/vendors/webengage.js","extensions/amp-analytics/0.1/vendors/webtrekk.js","extensions/amp-analytics/0.1/vendors/webtrekk_v2.js","extensions/amp-analytics/0.1/visibility-manager-for-mapp.js","extensions/amp-analytics/0.1/visibility-manager.js","extensions/amp-analytics/0.1/visibility-model.js","src/3p-frame-messaging.js","src/ad-helper.js","src/common-signals.js","src/config.js","src/consent-state.js","src/consent.js","src/cookies.js","src/css.js","src/dom.js","src/element-service.js","src/event-helper-listen.js","src/event-helper.js","src/experiments.js","src/iframe-helper.js","src/impression.js","src/inabox/host-services.js","src/ini-load.js","src/internal-version.js","src/intersection-observer-polyfill.js","src/json.js","src/layout-rect.js","src/layout.js","src/log.js","src/mode-object.js","src/mode.js","src/observable.js","src/pass.js","src/pixel.js","src/service.js","src/service/cache-cid-api.js","src/service/cid-api.js","src/service/cid-impl.js","src/service/extension-location.js","src/service/jank-meter.js","src/service/mutator-interface.js","src/service/navigation.js","src/service/resources-interface.js","src/service/viewer-cid-api.js","src/services.js","src/static-template.js","src/string.js","src/style.js","src/types.js","src/url-parse-query-string.js","src/url-try-decode-uri-component.js","src/url.js","src/utils/array.js","src/utils/base64.js","src/utils/bytes.js","src/utils/function.js","src/utils/lru-cache.js","src/utils/object.js","src/utils/priority-queue.js","src/utils/promise.js","src/video-interface.js","src/window-interface.js","third_party/css-escape/css-escape.js"],"names":[],"mappings":"AAAA;ACAA;ACCA;AACA;AACA;AACA;AACA;AACA;ACeA;ADbA;ACcA;ADZA;ACaA;ADXA;ACYA;ADVA;ACdA;ADgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;ADgBA;AACA;AACA;AACA;ACTA;ADWA;AACA;AACA;ACTA;AAEA;ADUA;AACA;AACA;ACTA;AACE;AACA;AAFwB;AAK1B;ADUA;AACA;AACA;AACA;AACA;AACA;ACTA;AAEA;ADUA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACE;ADWF;ACTE;AACE;AACD;ADWH;ACTE;AACD;ADWD;AACA;AACA;AACA;ACXE;ADaF;AACA;ACXE;AACE;AACA;AAEA;ADYJ;AACA;AACA;AACA;ACXI;AACD;AAED;ADYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdI;AACE;AACD;ADgBL;ACdI;AACE;AAIA;AACD;AACF;AAED;ADYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZI;ADcJ;ACbI;AACE;AAGD;ADaL;ACZI;AACD;ADcH;AACA;AACA;ACbA;ADeA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AAQA;ADUA;AACA;AACA;ACTO;AACL;AACD;ADWD;AACA;AACA;AACA;ACXE;ADaF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXE;AACE;AACA;AAEA;ADYJ;ACXI;AAEA;ADYJ;ACXI;AAEA;ADYJ;ACXI;AAEA;ADYJ;AACA;AACA;AACA;ACXI;AACE;ADaN;AACA;ACfsC;AAMlC;ADYJ;ACXI;AAEA;ADYJ;ACXI;AAEA;ADYJ;ACXI;AAEA;ADYJ;ACXI;AAEA;ADYJ;ACXI;AAEA;AACD;AAED;ADWF;AACA;AACA;AACA;AACA;ACbI;AACA;ADeJ;ACbI;AACA;AACD;AAED;ADcF;AACA;AACA;AACA;AACA;AACA;ACdI;AAEA;AACA;ADeJ;ACdI;AACD;AAED;ADeF;AACA;AACA;AACA;AACA;AACA;AACA;ACfI;AACA;AACD;AAED;ADgBF;AACA;AACA;AChBI;AACE;AAOD;ADYL;ACVI;AAKA;AACA;ADQJ;ACPI;AACD;AAED;ADQF;AACA;AACA;ACRI;AACE;AACD;ADUL;ACTI;AACA;AAEA;AACD;AAED;ADSF;AACA;AACA;ACTI;AACE;AACD;ADWL;ACVI;AACA;AAEA;AACD;AAED;ADUF;AACA;AACA;AACA;AACA;AACA;ACVI;AACA;AACA;ADYJ;ACTI;AAEA;AACE;AACA;AAFyB;AAI5B;AAED;ADSF;AACA;AACA;ACTI;AACE;AACD;AACC;AACD;AACF;AAED;ADUF;AACA;AACA;AACA;AACA;AACA;ACVI;AACE;AAEA;ADWN;ACVM;AACE;AACD;AACF;ADYL;ACXI;AACD;AAED;ADYF;AACA;AACA;AACA;AACA;AACA;ACZI;AACD;AAED;ADaF;AACA;AACA;AACA;AACA;AACA;ACbI;AACA;AACD;AAED;ADcF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfgD;AAAd;AAAc;ADmBhD;AClBI;AACE;AACE;AACD;ADoBP;ACnBM;AACD;ADqBL;ACpBI;ADsBJ;ACrBI;AACE;AACD;ADuBL;ACtBI;AACA;AAGD;ADsBH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AElXA;AFoXA;AEnXA;AFqXA;AEpXA;AFsXA;AErXA;AFuXA;AEtXA;AFwXA;AElXA;AFoXA;AEhXA;AFkXA;AEjXA;AFmXA;AElXA;AFoXA;AEnXA;AFqXA;AEpXA;AFsXA;AErXA;AFuXA;AEtXA;AFwXA;AEvXA;AFyXA;AExXA;AF0XA;AEzXA;AF2XA;AE1XA;AF4XA;AE3XA;AF6XA;AE5XA;AF8XA;AE7XA;AF+XA;AACA;AACA;AE/XA;AAEA;AFgYA;AE9XA;AFgYA;AACA;AACA;AACA;AACA;AACA;AE/XE;AACA;AAAqB;AFkYvB;AEjYI;AAEA;AFkYJ;AEjYI;AAEA;AFkYJ;AACA;AACA;AACA;AEjYI;AAEA;AFkYJ;AEjYI;AAEA;AFkYJ;AACA;AACA;AEjYI;AAEA;AFkYJ;AACA;AACA;AEjYI;AAEA;AFkYJ;AEjYI;AAEA;AFkYJ;AEjYI;AAEA;AFkYJ;AEjYI;AAEA;AFkYJ;AEjYI;AAEA;AFkYJ;AEjYI;AAEA;AFkYJ;AEjYI;AAEA;AFkYJ;AEjYI;AAEA;AFkYJ;AEjYI;AA/CmB;AAgDpB;AAED;AFmYF;AACA;AACA;AACA;AACA;AErYI;AACA;AACD;AAED;AFsYF;AACA;AACA;AEtYI;AACD;AAED;AFuYF;AACA;AACA;AEvYI;AACD;AAED;AFwYF;AACA;AACA;AEzYkB;AF2YlB;AE1YI;AAEA;AAEA;AF0YJ;AEtYI;AACE;AAEc;AAAA;AAGf;AFsYL;AEpYI;AACE;AACD;AACF;AAED;AFqYF;AACA;AACA;AErYI;AACA;AACA;AACD;AAED;AFsYF;AACA;AACA;AEtYI;AACE;AACA;AACD;AFwYL;AEtYI;AACE;AACA;AACD;AFwYL;AEtYI;AACE;AACA;AACD;AACF;AAED;AFuYF;AACA;AACA;AExYmB;AF0YnB;AEzYI;AACE;AACE;AAID;AACF;AACF;AAED;AFuYF;AACA;AACA;AExYqB;AF0YrB;AEzYI;AACE;AACA;AACD;AF2YL;AEzYI;AACE;AACE;AACA;AACD;AACF;AF2YL;AEzYI;AACD;AAED;AF0YF;AACA;AACA;AACA;AACA;AACA;AE3YuB;AF6YvB;AE5YI;AACE;AACD;AF8YL;AE7YI;AAEA;AAAmB;AAGX;AAAA;AACA;AAAA;AACA;AAAA;AACa;AAAA;AACP;AAAA;AAOV;AACA;AACA;AACD;AAEC;AAAe;AAA4B;AAC3C;AACD;AAEC;AAID;AAGH;AACD;AAED;AFsYF;AACA;AACA;AACA;AACA;AACA;AACA;AEvYsB;AFyYtB;AExYI;AACE;AACA;AF0YN;AEzYM;AACA;AACD;AF2YL;AEzYI;AF2YJ;AEzYI;AACE;AF2YN;AE1YM;AAKA;AACD;AFwYL;AEtYI;AAKA;AAIA;AAMA;AF4XJ;AE1XI;AACE;AAAyC;AACvC;AF6XR;AE5XQ;AF8XR;AExXQ;AF0XR;AEzXQ;AACE;AF2XV;AE1XU;AACD;AF4XT;AE3XQ;AF6XR;AE1XQ;AACE;AF4XV;AE3XU;AF6XV;AEvXU;AACD;AFyXT;AACA;AExXQ;AACE;AF0XV;AEzXU;AAIE;AFwXZ;AEpXY;AACD;AACF;AFsXT;AEpXQ;AFsXR;AElXQ;AAEI;AACE;AACD;AFmXb;AACA;AElXY;AACE;AACA;AACE;AACA;AACD;AFoXf;AEnXc;AACA;AFqXd;AEpXc;AACD;AACC;AACA;AAGI;AFoXlB;AEnXkB;AACD;AACJ;AACC;AACD;AACF;AAvEoC;AF6b/C;AE7b+C;AAyExC;AACF;AFuXL;AEtXI;AACD;AAED;AFuXF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEvXI;AACD;AAED;AFwXF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AExXI;AACE;AACA;AACA;AACD;AF0XL;AEzXI;AACE;AAID;AACC;AFwXN;AEvXM;AACA;AACD;AACF;AAED;AFwXF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AExXI;AACE;AACA;AACA;AACA;AF0XN;AEzXM;AACE;AACE;AF2XV;AE1XU;AAOA;AACD;AFsXT;AEpXQ;AACE;AFsXV;AElXU;AACE;AACA;AACA;AACD;AACF;AACF;AACF;AACF;AAED;AFmXF;AACA;AACA;AACA;AACA;AEnXI;AFqXJ;AEpXI;AACE;AACD;AFsXL;AEpXI;AACE;AACD;AFsXL;AEpXI;AACA;AFsXJ;AErXI;AACE;AACE;AACD;AFuXP;AEtXM;AACD;AAED;AACA;AFuXJ;AACA;AEvXI;AACD;AAED;AFwXF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEzXsB;AF2XtB;AE1XI;AACE;AACE;AF4XR;AE3XQ;AAKD;AFyXP;AExXM;AACD;AF0XL;AExXI;AACE;AACE;AACE;AF0XV;AEzXU;AACE;AACA;AACD;AACF;AACF;AAGD;AACA;AFyXN;AACA;AEzXM;AACE;AAGI;AACA;AACD;AAGJ;AFuXP;AErXM;AFuXN;AEtXM;AACE;AACE;AACA;AAOD;AACF;AFkXP;AEjXM;AACD;AACF;AAED;AFkXF;AACA;AACA;AACA;AACA;AACA;AElXI;AACA;AAMA;AACD;AAED;AF8WF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AE9WI;AFgXJ;AE7WI;AACE;AACA;AACD;AACF;AAED;AF8WF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AE/WsD;AFiXtD;AEhXI;AACE;AFkXN;AEjXM;AACD;AFmXL;AEjXI;AACA;AFmXJ;AEjXI;AACE;AFmXN;AElXM;AFoXN;AE/WM;AACE;AACD;AACF;AFiXL;AEhXI;AACE;AACE;AACD;AFkXP;AEjXM;AFmXN;AElXM;AACD;AACF;AAED;AFmXF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEnXI;AACE;AACD;AFqXL;AEpXI;AACA;AACA;AACD;AAED;AFqXF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEtXwC;AFwXxC;AEvXI;AFyXJ;AExXI;AACE;AACA;AACD;AF0XL;AEzXI;AACA;AAQE;AACE;AACA;AAAgB;AAAO;AACxB;AACF;AACF;AAED;AFqXF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEtXwB;AFwXxB;AEvXI;AACA;AACA;AACA;AFyXJ;AExXI;AACE;AACD;AF0XL;AEzXI;AF2XJ;AE1XI;AACE;AACA;AACD;AF4XL;AE3XI;AF6XJ;AE5XI;AACE;AACA;AACW;AAAA;AACG;AAAA;AACf;AFgYL;AE/XI;AAAO;AAAO;AACd;AACD;AAED;AFkYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AElYI;AACA;AAIA;AAKA;AAEI;AACA;AACD;AAEJ;AAED;AF0XF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AE1XI;AACA;AACE;AACD;AF4XL;AE1XI;AACE;AACD;AF4XL;AE1XI;AAAyE;AAAA;AAG1E;AAED;AF2XF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AE5XuD;AF8XvD;AE7XI;AAEW;AAAA;AAMZ;AAED;AFyXF;AACA;AACA;AACA;AACA;AACA;AACA;AEzXI;AAGD;AAED;AFwXF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AExXI;AACA;AACA;AACA;AACA;AACD;AF0XH;AACA;AACA;AACA;AACA;AE3XA;AACE;AACA;AAIA;AACA;AACA;AF0XF;AExXE;AACD;AF0XD;AACA;AACA;AACA;AACA;AACA;AACA;AG9nCA;AHgoCA;AG/nCA;AHioCA;AGlpCA;AHopCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG/oCA;AHipCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGjpCE;AHmpCF;AACA;AACA;AGjpCE;AACE;AACA;AACA;AHmpCJ;AGlpCI;AAEA;AHmpCJ;AGlpCI;AACD;AAED;AHmpCF;AACA;AACA;AACA;AACA;AGrpCI;AACE;AACD;AACF;AAED;AHspCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGtpCI;AACA;AACA;AAEA;AAIA;AAMA;AAMA;AACD;AH0oCH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIptCA;AJstCA;AIrtCA;AJutCA;AIttCA;AJwtCA;AIvtCA;AJytCA;AIxtCA;AJ0tCA;AIrtCA;AJutCA;AIttCA;AJwtCA;AIvtCA;AJytCA;AIxtCA;AJ0tCA;AIztCA;AJ2tCA;AI1tCA;AJ4tCA;AI3tCA;AJ6tCA;AACA;AACA;AI7tCA;AAEA;AJ8tCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI/tCE;AJiuCF;AACA;AI/tCE;AACE;AACA;AAEA;AJguCJ;AI/tCI;AAEA;AJguCJ;AI/tCI;AAEA;AJguCJ;AI/tCI;AAEA;AJguCJ;AI/tCI;AAEA;AJguCJ;AI/tCI;AACD;AAED;AJguCF;AACA;AACA;AACA;AACA;AACA;AACA;AInuCmB;AJquCnB;AIpuCI;AACE;AACD;AJsuCL;AIruCI;AACE;AACD;AACC;AACA;AJuuCN;AItuCM;AAEI;AACA;AACD;AAEC;AJsuCV;AIluCU;AACE;AACA;AACD;AJouCX;AACA;AInuCU;AACD;AACJ;AJquCL;AIpuCI;AACD;AAED;AJquCF;AACA;AACA;AIruCI;AACE;AACA;AACD;AJuuCL;AItuCI;AACE;AACD;AJwuCL;AIvuCI;AACE;AACD;AACF;AAED;AJwuCF;AACA;AACA;AACA;AACA;AACA;AACA;AIvuCE;AJyuCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIxuCE;AJ0uCF;AACA;AACA;AACA;AACA;AACA;AI1uCI;AACD;AAED;AJ2uCF;AACA;AACA;AACA;AACA;AACA;AACA;AI3uCI;AACA;AACD;AAED;AJ4uCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI3uCE;AJ6uCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI5uCE;AJ8uCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI9uCI;AACD;AAED;AJ+uCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI9uCE;AJgvCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIhvCI;AJkvCJ;AIjvCI;AACE;AACD;AJmvCL;AIlvCI;AACD;AAED;AJmvCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AInvCI;AJqvCJ;AIpvCI;AACE;AACA;AACD;AJsvCL;AIrvCI;AACD;AAED;AJsvCF;AACA;AACA;AACA;AACA;AACA;AACA;AItvCI;AACD;AAED;AJuvCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIxvCwD;AJ0vCxD;AI1vCwD;AAAxB;AAAwB;AJ8vCxD;AI7vCI;AACA;AACA;AACE;AAAkB;AAAA;AACnB;AJiwCL;AIhwCI;AACE;AACE;AAMD;AACF;AJ6vCL;AACA;AI3vCI;AACE;AACA;AJ6vCN;AI3vCM;AACE;AACE;AACD;AACC;AACD;AACC;AACD;AACF;AACC;AACD;AAGD;AJ2vCN;AACA;AI3vCM;AACE;AACD;AJ6vCP;AI5vCM;AACD;AACF;AAED;AJ6vCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI7vCI;AACE;AAKA;AACD;AACF;AAED;AJ0vCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI3vC+E;AJ6vC/E;AI7vC+E;AAAxB;AAAwB;AJiwC/E;AIhwCI;AACE;AACE;AACA;AACA;AACD;AJkwCP;AACA;AIhwCM;AJkwCN;AIjwCM;AACA;AAVc;AJ8wCpB;AIlwCM;AACE;AACA;AACE;AACD;AJowCT;AACA;AInwCQ;AAKE;AACD;AJiwCT;AACA;AIhwCQ;AACE;AACA;AACA;AACD;AJkwCT;AACA;AIhwCQ;AAKE;AAEA;AJ6vCV;AI5vCU;AACD;AJ8vCT;AI5vCQ;AACD;AACF;AACF;AAED;AJ6vCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI5vCE;AJ8vCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI9vCI;AACE;AACE;AACA;AAID;AACC;AACD;AACF;AJ6vCL;AI5vCI;AACD;AAED;AJ6vCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI7vCI;AACA;AACE;AACD;AJ+vCL;AI7vCI;AACD;AJ+vCH;AACA;AACA;AI9vCA;AJgwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AItwCE;AJwwCF;AACA;AItwCE;AAAoB;AAEnB;AAED;AJuwCF;AACA;AACA;AACA;AACA;AIzwCI;AACD;AAED;AJ0wCF;AACA;AACA;AI1wCI;AACD;AAED;AJ2wCF;AACA;AACA;AI3wCI;AACA;AACD;AAED;AJ4wCF;AACA;AACA;AI5wCI;AACD;AAED;AJ6wCF;AACA;AACA;AI7wCI;AACD;AAED;AJ8wCF;AACA;AACA;AI9wCI;AJgxCJ;AI/wCI;AJixCJ;AIhxCI;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACC;AACA;AACD;AJkxCL;AIjxCI;AACD;AJmxCH;AACA;AACA;AIlxCA;AJoxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI1xCE;AJ4xCF;AACA;AACA;AI1xCE;AAA2B;AJ6xC7B;AI5xCI;AACA;AJ8xCJ;AI7xCI;AAHyB;AAI1B;AAED;AJ+xCF;AACA;AACA;AACA;AACA;AIjyCI;AACD;AAED;AJkyCF;AACA;AACA;AIlyCI;AACD;AAED;AJmyCF;AACA;AACA;AInyCI;AACD;AAED;AJoyCF;AACA;AACA;AIpyCI;AACD;AAED;AJqyCF;AACA;AACA;AIryCI;AACD;AAED;AJsyCF;AACA;AACA;AItyCI;AACD;AJwyCH;AACA;AACA;AIvyCA;AJyyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI3yCA;AACE;AACE;AACD;AACC;AACA;AACD;AACF;AJ6yCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKlzDA;ALozDA;AKnzDA;ALqzDA;AKpzDA;ALszDA;AKrzDA;ALuzDA;AKtzDA;ALwzDA;AKvzDA;ALyzDA;AKxzDA;AL0zDA;AKzzDA;AL2zDA;AK1zDA;AL4zDA;AK3zDA;AL6zDA;AK5zDA;AL8zDA;AKx1DA;AL01DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK30DA;AL60DA;AACA;AACA;AACA;AK70DE;AL+0DF;AACA;AK70DE;AACE;AACA;AAEA;AL80DJ;AK70DI;AAEA;AL80DJ;AACA;AACA;AACA;AK70DI;AAEA;AL80DJ;AACA;AACA;AK70DI;AAEA;AL80DJ;AACA;AACA;AK70DI;AAEA;AL80DJ;AK70DI;AACD;AAED;AL80DF;AACA;AACA;AACA;AACA;AACA;AACA;AKj1De;ALm1Df;AKl1DI;AACA;AAEA;AAIQ;AAAA;AACT;AAED;ALg1DF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKh1DI;ALk1DJ;AK70DI;AACA;AAGD;AAED;AL40DF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK70DuB;AL+0DvB;AK90DI;AACA;AACE;AACD;ALg1DL;AK90DI;ALg1DJ;AK/0DI;AACE;AACD;ALi1DL;AK/0DI;AAEA;AACA;AAEA;AAEW;AAAA;AAGL;AACA;AACD;AAEC;AACD;AAEN;AAED;AL00DF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK10DI;AACA;AACA;AL40DJ;AK10DI;AL40DJ;AK10DI;AAKE;AACE;AAGD;ALs0DP;AKr0DM;AACE;AACD;AACF;AACF;AAED;ALs0DF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKv0DuB;ALy0DvB;AKx0DI;AL00DJ;AKz0DI;AACE;AACD;AL20DL;AK10DI;AACA;AACA;AACA;AL40DJ;AK30DI;AACE;AACD;AL60DL;AK50DI;AAGI;AACA;AAID;AACQ;AAAA;AAGL;AACA;AACD;AAEC;AAMD;AAEN;AAED;ALg0DF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKh0DI;AAEA;AACA;AACA;AACA;AACA;ALi0DJ;AK/zDI;AACE;ALi0DN;AK/zDM;AACD;ALi0DL;AK/zDI;AACD;AAED;ALg0DF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKj0DmD;ALm0DnD;AKl0DI;AACA;AACA;AAEA;AACE;AACE;AACA;AAFkB;ALs0D1B;AKl0DM;AACE;AAGD;ALk0DP;AKj0DM;AAGI;AAID;AACQ;AAAA;AAGL;AACA;AACD;AAEC;AAMD;AAEN;AACF;AAED;ALqzDF;AACA;AACA;AACA;AACA;AACA;AACA;AKrzDI;AACE;ALuzDN;AKtzDM;AACA;AAEA;AAOA;AACD;AACF;AAED;ALgzDF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKjzD8B;ALmzD9B;AKlzDI;AACA;AACA;ALozDJ;AKlzDI;AACE;AACD;ALozDL;AKlzDI;AACE;ALozDN;AKnzDM;AAIA;AACD;AAGD;ALgzDJ;AACA;AKhzDI;AACA;AACA;AAEA;ALizDJ;AK/yDI;AACA;AAEA;AACE;ALgzDN;AK/yDM;AACE;AACA;AACD;ALizDP;AK/yDM;AAEI;AACA;ALgzDV;AK9yDU;AACD;ALgzDT;AK9yDM;AACD;AAED;AACE;AACA;AACE;AACD;AL+yDP;AACA;AK9yDM;AACD;AACF;AAED;AL+yDF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK/yDI;AACA;AACE;AACE;AADM;AADU;AAKpB;AACA;AACA;AAGE;AAAiB;AAEnB;AAGE;AAAiB;AAEnB;AACD;AAED;AL4yDF;AACA;AACA;AACA;AACA;AACA;AK5yDI;AACD;AAED;AL6yDF;AACA;AACA;AACA;AACA;AACA;AK7yDI;AACA;AACD;AAED;AL8yDF;AACA;AACA;AACA;AACA;AACA;AACA;AK9yDI;AACE;AACA;AACD;ALgzDL;AK/yDI;AACA;ALizDJ;AKhzDI;AAAI;ALmzDR;AKjzDM;AACE;AACD;AACC;AACD;AACF;AACC;AACD;ALmzDL;AKlzDI;AAAO;AAA4B;AAAnC;AACD;AAED;ALszDF;AACA;AACA;AACA;AACA;AACA;AKtzDI;ALwzDJ;AKvzDI;AACE;AACA;AACA;AACE;ALyzDR;AKxzDQ;AAKD;AACF;ALszDL;AACA;AKpzDI;AACE;ALszDN;AKlzDM;AACE;AACD;AACF;ALozDL;AKlzDI;AAIE;AAIA;AACD;AACF;AAED;AL6yDF;AACA;AACA;AACA;AACA;AACA;AACA;AK7yDI;AAGD;AAED;AL4yDF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK5yDI;AACA;AACA;AL8yDJ;AK5yDI;AL8yDJ;AK7yDI;AAEA;AACE;AACA;AACA;AACD;AAED;AACE;AAAa;AAAA;AACb;AACD;AACF;AL+yDH;AACA;AACA;AK9yDA;ALgzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKlzDO;AACL;AACE;AACD;AAGD;AACA;ALkzDF;AACA;AKlzDE;ALozDF;AK3yDE;AACE;AL6yDJ;AKxyDI;AACE;AACE;AACE;AACD;AL0yDT;AKzyDQ;AAKD;AACC;AACE;AACD;ALuyDT;AKtyDQ;AAKD;AACC;AACD;AACF;AACF;ALoyDH;AKnyDE;AACD;AAED;ALoyDA;AACA;AACA;AACA;AACA;AACA;AACA;AKpyDO;AACL;AACE;AACD;ALsyDH;AKryDE;AACE;AACE;AACD;AACF;ALuyDH;AKryDE;AACD;AAED;ALsyDA;AACA;AACA;AACA;AACA;AACA;AKtyDA;AACE;AACE;AACD;ALwyDH;AKvyDE;AACE;AADK;AAGR;AAED;ALwyDA;AACA;AACA;AACA;AACA;AACA;AKxyDA;AACE;AACA;AACE;AL0yDJ;AKxyDI;AACE;AACA;AACE;AACD;AACF;AACF;AL0yDH;AKxyDE;AACD;AL0yDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMp5EA;ANs5EA;AMr5EA;ANu5EA;AMt5EA;ANw5EA;AMv5EA;ANy5EA;AM56EA;AN86EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMv6EA;ANy6EA;AACA;AACA;AACA;AACA;AACA;AMv6EO;AACL;AACE;AACD;ANy6EH;AMx6EE;AACD;AAED;ANy6EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMz6EO;AACL;AAKD;ANu6ED;AACA;AACA;AACA;AACA;AACA;AACA;AO98EA;APg9EA;AO/8EA;APi9EA;AOh9EA;APk9EA;AOj9EA;APm9EA;AOl9EA;APo9EA;AOn9EA;APq9EA;AOp9EA;APs9EA;AOr9EA;APu9EA;AO9+EA;APg/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOp+EA;AAEA;AACE;AACA;AACA;AACA;AACA;AACA;AANoB;AP4+EtB;AACA;AACA;AACA;AOr+EE;APu+EF;AACA;AACA;AACA;AOr+EE;AACE;AACA;AAEA;APs+EJ;AOr+EI;AAEA;APs+EJ;AOr+EI;AAEA;APs+EJ;AOr+EI;AAEA;APs+EJ;AOr+EI;AAEA;APs+EJ;AOr+EI;AACD;AAED;APs+EF;AACA;AACA;AACA;AACA;AACA;AACA;AOx+EI;AACE;AACD;AP0+EL;AOx+EI;AACD;AAED;APy+EF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOz+EI;AACA;AACE;AACA;AACA;AACD;AP2+EL;AOz+EI;AACE;AACD;AP2+EL;AOz+EI;AACE;AACA;AACD;AP2+EL;AOz+EI;AP2+EJ;AOz+EI;AACE;AACA;AACA;AACD;AP2+EL;AOz+EI;AAEA;AACA;AP0+EJ;AOz+EI;AACE;AACA;AP2+EN;AO1+EM;AACE;AAOD;AACF;APs+EL;AOp+EI;AACD;AAED;APq+EF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOr+EI;AACE;AACD;APu+EL;AOr+EI;APu+EJ;AOp+EI;AACE;AAKA;AACD;APk+EL;AOh+EI;AACE;AAKD;AP89EL;AACA;AO59EI;AACD;AAED;AP69EF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO79EI;AACE;AACD;AP+9EL;AO79EI;AACE;AACA;AACD;AP+9EL;AO79EI;AACE;AACA;AACD;AP+9EL;AO79EI;AACD;AAED;AP89EF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO/9E+D;APi+E/D;AOh+EI;AACA;AACA;AAGI;AACA;AACA;AACE;AACA;AACE;AADkD;AAGrD;AACF;AAEC;AACD;AACJ;AP+9EH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQ1rFA;AR4rFA;AQ5sFA;AR8sFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQ1sFA;AR4sFA;AACA;AACA;AACA;AQ1sFA;AAEA;AR2sFA;AQ1sFA;AAEA;AR2sFA;AACA;AACA;AACA;AACA;AQ1sFO;AACL;AACE;AACD;AR4sFH;AQ1sFE;AR4sFF;AQzsFE;AR2sFF;AQ1sFE;AACE;AACA;AACD;AR4sFH;AQ3sFE;AACD;AAED;AR4sFA;AACA;AACA;AACA;AACA;AQ5sFA;AACE;AR8sFF;AQ7sFE;AACE;AR+sFJ;AQ9sFI;AACE;AACE;AACD;AACC;AACD;AACF;ARgtFL;AQ/sFI;AACD;ARitFH;AQhtFE;AACD;ARktFD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AS7wFA;AT+wFA;AS9wFA;ATgxFA;AS/wFA;ATixFA;AShxFA;ATkxFA;AS7wFA;AT+wFA;AS9wFA;ATgxFA;AS/wFA;ATixFA;AShxFA;ATkxFA;ASjxFA;ATmxFA;ASlxFA;AToxFA;AACA;AACA;AACA;AACA;AStxFA;AACA;AACA;AACA;AACA;AACA;ATwxFA;ASvxFA;ATyxFA;ASxxFA;AAEA;ATyxFA;AACA;AACA;AACA;AACA;ASxxFO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVgC;ATqyFlC;ASxxFA;AAEA;ATyxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASxxFA;AAEI;AACA;AACA;AACA;AACE;AACD;AANyB;AAS1B;AACA;AACA;AACE;AACD;AAL0B;AAQ3B;AAAkC;AAClC;AACA;AACE;AACD;AAL0B;AAQ3B;AACA;AACA;AACE;AACD;AAL4B;AAQ7B;AACA;AACA;AACE;AACD;AALgC;AAQjC;AACA;AACA;AACE;AACD;AAL0B;AAQ3B;AACA;AACA;AACE;AACD;AALyB;AAQ1B;AACA;AACA;AACE;AACD;AALyB;AAQ1B;AACA;AACA;AACE;AACD;AALyB;AAQ1B;AACA;AACA;AACE;AACD;AAL2B;AAShC;AT+wFA;AS9wFO;AAEP;AT+wFA;AACA;AACA;AACA;AACA;AACA;AShxFA;AACE;AACD;AAED;ATixFA;AACA;AACA;AACA;AACA;ASjxFA;AACE;AACD;AAED;ATkxFA;AACA;AACA;AACA;AACA;ASlxFA;AACE;AACD;AAED;ATmxFA;AACA;AACA;AACA;AACA;ASnxFO;AACL;AACE;AACD;ATqxFH;ASpxFE;AACE;AACD;ATsxFH;ASrxFE;AACE;AACD;ATuxFH;AStxFE;AAGD;AAED;ATqxFA;AACA;AACA;AACA;AACA;ASrxFO;AACL;AACA;AACE;AAIE;AACD;AACF;AACD;AACD;AAED;ATmxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASzxFE;AT2xFF;AACA;AACA;AACA;ASxxFE;AT0xFF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AS3xFA;AT6xFA;AACA;AACA;AACA;AACA;AACA;AS7xFE;AT+xFF;AACA;AACA;AACA;AS7xFE;AACE;AACA;AACA;AT+xFJ;AS9xFI;AACA;ATgyFJ;AS/xFI;AACD;AAGH;AT+xFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASnyFE;ATqyFF;AACA;ASnyFE;AACE;AACA;AACD;AAED;AToyFF;AACA;AACA;AACA;AACA;ASryFE;ATuyFF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASxyFA;AT0yFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AShzFE;ATkzFF;AACA;AShzFE;AAAkB;ATmzFpB;ASlzFI;AAEA;ATmzFJ;ASlzFI;AAEA;ATmzFJ;AACA;AACA;AACA;AACA;ASlzFI;AAEA;ATmzFJ;AACA;AACA;AACA;AACA;AACA;AACA;ASlzFI;AAGA;ATkzFJ;ASjzFI;AACE;AACD;AA1Be;AA2BjB;AAED;ATmzFF;AACA;AACA;AACA;AACA;ASrzFI;AACA;ATuzFJ;AStzFI;AACE;AACD;AACF;AAED;ATuzFF;AACA;AACA;ASxzF4C;AT0zF5C;ASzzFI;AT2zFJ;AS1zFI;AACE;AACD;AT4zFL;AS3zFI;AAEA;AAMA;ATuzFJ;ASpzFI;ATszFJ;ASlzFI;AACE;AACA;AACE;AACE;AACE;ATozFZ;ASnzFY;AACE;AACD;AACF;ATqzFX;ASpzFU;AACE;AACA;AACA;AACD;AACF;AACF;AACF;ATszFL;ASpzFI;ATszFJ;ASrzFI;AACE;AACA;AACD;ATuzFL;ASrzFI;AACE;AACA;AACE;AACE;AACD;AACF;AACF;AACF;AAED;ATszFF;AACA;AACA;AACA;AACA;AACA;AStzFI;AACA;AACA;ATwzFJ;ASrzFI;AACE;ATuzFN;AStzFM;AACE;AACA;AACD;AACF;ATwzFL;AACA;AStzFI;AACE;AACA;AACD;AACC;AACA;AACE;AACA;AACD;AACF;AACF;ATwzFH;AACA;AACA;AStzFA;ATwzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AS9zFE;ATg0FF;AACA;AS9zFE;AAAkB;AAEjB;AAED;AT+zFF;AACA;AACA;AACA;AACA;ASl0F4C;ATo0F5C;ASn0FI;AACA;ATq0FJ;ASl0FI;ATo0FJ;ASn0FI;AACE;ATq0FN;ASn0FM;AACE;AACA;AACD;AACF;ATq0FL;ASn0FI;ATq0FJ;ASp0FI;AACE;AACA;AACD;ATs0FL;ASp0FI;AACE;AACD;AACF;AAED;ATq0FF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASp0FI;AACA;AAEA;AACD;AAED;ATo0FF;AACA;AACA;AACA;AACA;AACA;AACA;ASp0FI;AACA;ATs0FJ;ASn0FI;AACE;AACD;ATq0FL;AACA;ASn0FI;AACE;AACA;AACD;AACF;ATq0FH;AACA;AACA;ASp0FA;ATs0FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AS50FE;AT80FF;AACA;AS50FE;AAAkB;AT+0FpB;AS90FI;AAEA;AT+0FJ;AS90FI;AAEA;AT+0FJ;AS90FI;ATg1FJ;AS/0FI;ATi1FJ;ASz1FoB;AASjB;AAED;ATk1FF;AACA;AACA;AACA;AACA;ASp1FI;AACA;AACD;AAED;ATq1FF;AACA;AACA;ASr1FI;AAIA;AACA;AAQD;AAED;AT40FF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AS50FI;AAEE;AAA2B;AAG7B;AACD;AT40FH;AACA;AACA;AS30FA;AT60FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASn1FE;ATq1FF;AACA;ASn1FE;AAAkB;ATs1FpB;ASr1FI;AAEA;ATs1FJ;ASr1FI;AAEA;ATs1FJ;ASr1FI;AAPgB;AAQjB;AAED;ATu1FF;AACA;AACA;AACA;AACA;ASz1FI;AACE;AAGA;AACD;AACF;AAED;ATw1FF;AACA;AACA;ASx1FI;AACE;AACA;AACD;AT01FL;ASx1FI;AAIE;AAIA;AACD;ATo1FL;ASl1FI;AAGA;AAIA;AAOA;AAGD;AAED;ATs0FF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASt0FI;AACA;AACA;AAEiC;AAAO;AAIxC;AAEiC;AAAO;AAIzC;AAED;ATi0FF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASj0FI;ATm0FJ;ASl0FI;AACE;AACD;ATo0FL;ASl0FI;AACE;ATo0FN;ASn0FM;AACE;AACA;AACD;ATq0FP;ASn0FM;AAIA;AACD;ATk0FL;ASj0FI;AACD;AAED;ATk0FF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASl0FI;AACE;AACD;AAGD;ATk0FJ;AACA;ASl0FI;AACE;AACE;AACD;ATo0FP;ASn0FM;ATq0FN;ASp0FM;AACE;AACD;ATs0FP;ASr0FM;AACA;AACA;AACA;AAOD;AACF;ATi0FH;AACA;AACA;ASh0FA;ATk0FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASx0FE;AT00FF;AACA;ASx0FE;AAAkB;AAEjB;AAED;ATy0FF;AACA;AACA;AACA;AACA;AS10FE;AT40FF;AACA;AACA;AS70F4C;AT+0F5C;AS90FI;AACA;AACA;ATg1FJ;AS/0FI;AACE;AACA;AACA;AACD;AACC;AACA;AACA;AACA;AAOI;AACA;AACD;AACJ;AT20FL;AACA;ASz0FI;AACE;AACD;AACD;AACD;AAED;AT00FF;AACA;AACA;AS10FI;AACD;AAED;AT20FF;AACA;AACA;AS30FI;AACE;AACD;AT60FL;AS50FI;AACD;AT80FH;AACA;AACA;AS70FA;AT+0FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASr1FE;ATu1FF;AACA;ASr1FE;AAAkB;AAEjB;AAED;ATs1FF;AACA;AACA;AACA;AACA;ASv1FE;ATy1FF;AACA;AACA;AS11F4C;AT41F5C;AS31FI;AACA;AACA;AT61FJ;AS51FI;AACE;AACA;AACA;AACD;AACC;AACA;AACA;AACA;AAOI;AACA;AACD;AACJ;ATw1FL;AACA;ASv1FI;AACE;AACD;AACD;AACD;AAED;ATw1FF;AACA;AACA;ASx1FI;AACD;AAED;ATy1FF;AACA;AACA;ASz1FI;AACE;AACD;AT21FL;AS11FI;AACA;AAID;ATy1FH;AACA;AACA;ASx1FA;AT01FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AS91FE;ATg2FF;AACA;AACA;AACA;AACA;AACA;AS91FE;AACE;AACA;AAEA;AAIA;AT41FJ;AS31FI;AACA;AAKA;ATy1FJ;ASx1FI;AAIA;AAEA;ATs1FJ;ASr1FI;AAEA;ATs1FJ;ASr1FI;AAGA;ATq1FJ;ASp1FI;AAEA;ATq1FJ;ASp1FI;AAEA;ATq1FJ;ASp1FI;AAEA;ATq1FJ;ASp1FI;AAEA;ATq1FJ;ASp1FI;AAEA;ATq1FJ;ASp1FI;ATs1FJ;ASp1FI;ATs1FJ;ASr1FI;AACD;AAED;ATs1FF;AACA;AACA;AACA;AACA;AACA;AACA;ASx1FI;AACE;AACA;AACD;AACC;AACA;AACD;AACF;AAED;ATy1FF;AACA;AACA;AACA;AACA;ASz1FI;AACA;AACD;AAED;AT01FF;AACA;AACA;AS11FI;AACE;AACD;AACF;AAED;AT21FF;AACA;AACA;AS31FI;AACE;AACA;AACD;AACF;AAED;AT41FF;AACA;AACA;AS51FI;AACE;AACE;AACD;AACC;AT81FR;AS71FQ;AACD;AACF;AACF;AAED;AT81FF;AACA;AACA;AS91FI;AACE;AACA;AACD;AACF;AAED;AT+1FF;AACA;AACA;AS/1FI;AACD;AAED;ATg2FF;AACA;AACA;AACA;AACA;AACA;AACA;ASh2FI;AACE;AACD;ATk2FL;ASj2FI;AACA;AACA;AACA;AACE;AACD;ATm2FL;ASh2FI;AACE;AACE;AACD;AACF;ATk2FL;ASh2FI;ATk2FJ;ASj2FI;AACE;AACD;ATm2FL;ASl2FI;AACD;AAED;ATm2FF;AACA;AACA;AACA;AACA;AACA;ASn2FI;AACE;AACD;ATq2FL;ASp2FI;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAED;ATq2FF;AACA;AACA;AACA;AACA;AACA;ASr2FI;AACE;AACD;ATu2FL;ASt2FI;AACD;AAED;ATu2FF;AACA;AACA;ASv2FI;ATy2FJ;ASx2FI;AACE;AACA;AACD;AT02FL;ASz2FI;AACE;AACA;AAFU;AAIb;AT22FH;AACA;AACA;AS12FA;AT42FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASh3FE;ATk3FF;AACA;ASh3FE;AAAkB;ATm3FpB;ASl3FI;AACA;ATo3FJ;ASn3FI;AAEA;ATo3FJ;ASn3FI;AANgB;AAOjB;AAED;ATq3FF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASv3FI;AAAO;AAA+B;AAAtC;AACD;AAED;AT23FF;AACA;AACA;AS53FY;AT83FZ;AS73FI;AACE;AACD;AACF;AAED;AT83FF;AACA;AACA;AS/3F4C;ATi4F5C;ASh4FI;AACA;AAIA;AACA;AAIA;AACA;AAKA;AACA;AACA;ATw3FJ;ASv3FI;AACE;AACA;AACA;AAOD;ATm3FL;ASl3FI;AACE;AACA;AACA;AAOD;AT82FL;AS52FI;AAKA;AAEA;AAGA;AACE;AACD;AACF;AAED;ATs2FF;AACA;AACA;AACA;AACA;AACA;ASt2FI;AACD;AAED;ATu2FF;AACA;AACA;AACA;AACA;AACA;AACA;ASv2FI;AACA;AAEA;AAID;AAED;ATo2FF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASp2FI;ATs2FJ;ASr2FI;AACE;AACD;ATu2FL;ASt2FI;AACE;AACD;AACC;AACD;AACF;AAED;ATu2FF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASx2F4C;AT02F5C;ASz2FI;AT22FJ;AS12FI;AACE;AACD;AT42FL;AS32FI;AAKD;AAED;ATw2FF;AACA;AACA;AACA;AACA;AACA;ASx2FI;AACD;AAED;ATy2FF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASz2FI;AAKD;AAED;ATs2FF;AACA;AACA;AACA;AACA;AACA;ASt2FI;AACE;AACA;AACA;AACD;AACF;ATw2FH;AACA;AACA;ASv2FA;ATy2FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AS/2FE;ATi3FF;AACA;AS/2FE;AAAkB;ATk3FpB;ASj3FI;AAEA;ATk3FJ;ASj3FI;AAEA;ATk3FJ;ASj3FI;AAIA;AACE;AAGD;AAfe;AAgBjB;AAED;AT82FF;AACA;AACA;AACA;AACA;ASj3FY;ATm3FZ;ASl3FI;AACA;AACE;AACD;AACD;AACA;AACD;AAED;ATm3FF;AACA;AACA;ASn3FI;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AAA4C;AAE1C;AAAgB;AAAsC;AACtD;AT82FN;AS52FM;AACE;AACD;AT82FP;AS52FM;AACE;AAIA;AACD;AT22FP;ASz2FM;AACE;AT22FR;AS12FQ;AACE;AACD;AACF;AT42FP;AS12FM;AACE;AACE;AAIA;AACD;ATy2FT;ASv2FQ;AACE;ATy2FV;ASv2FU;AACE;AAOA;AACD;AACF;ATm2FT;ASj2FQ;AACA;AAEA;AACA;ATk2FR;ASh2FQ;AACE;AACD;ATk2FT;ASh2FQ;AACE;AACD;ATk2FT;ASh2FQ;AACD;ATk2FP;ASh2FM;AAIE;AACD;AT+1FP;AS71FM;AACE;AACD;AT+1FP;AS71FM;AAIA;AACE;AACE;AACD;AT41FT;AS31FQ;AACA;AACD;AACF;AACF;AT61FH;AACA;AACA;AS51FA;AT81FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASh2FA;AACE;AACE;AACD;AAGD;ATg2FF;AACA;ASh2FE;AACE;AACD;ATk2FH;ASh2FE;AACD;AAED;ATi2FA;AACA;AACA;AACA;AACA;ASj2FA;AACE;AACE;AACD;ATm2FH;ASl2FE;AACA;AACA;AAAO;AAA4B;AAAnC;AACD;AAED;ATs2FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AS12FE;AT42FF;AACA;AS12FE;AAAkB;AT62FpB;AS52FI;AAEA;AT62FJ;AS52FI;AAJgB;AAKjB;AAED;AT82FF;AACA;AACA;AACA;AACA;AS/2FE;ATi3FF;AACA;AACA;ASl3F4C;ATo3F5C;ASn3FI;AACA;AACA;AACA;AACA;ATq3FJ;ASn3FI;AACE;AAID;ATk3FL;ASh3FI;AACE;AACE;AAID;AT+2FP;AACA;AS92FM;AACD;ATg3FL;AS92FI;AAGI;AACE;AACD;AT82FT;AS72FQ;AACD;AT+2FP;AS72FI;AACE;AAGD;AACC;AAGD;AACC;AAKD;ATu2FL;ASr2FI;ATu2FJ;ASr2FI;AACE;AACA;AACA;AAEI;AAWD;AAGJ;AACC;AACA;AACA;AAEA;AAOI;AAEI;AAOD;AAGJ;AACJ;AT00FL;ASx0FI;AACE;AACE;AACD;AACF;AACF;AAED;ATy0FF;AACA;AACA;AACA;AACA;AACA;AACA;ASz0FI;AAMA;AAID;AAED;ATk0FF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASn0F+C;ATq0F/C;ASl0FI;AACE;AACD;ATo0FL;ASl0FI;AACE;AACE;AACE;AACD;AACF;AACF;AACF;AAED;ATm0FF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASn0FI;AADyC;ATu0F7C;ASp0FI;AAGA;AACA;AACA;AACA;AACA;AACA;ATo0FJ;AACA;ASp0FI;AACE;AACE;AAAO;AAEL;AACA;AACD;AAEJ;AAGD;AACA;AACA;AACA;AACA;AACA;ATm0FJ;AACA;ASn0FI;AAGI;AACA;AACD;AAEH;AACD;AAED;ATi0FF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASj0FI;AACD;AAED;ATk0FF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASl0FI;AACE;AACA;AACE;AACA;AACD;AACC;AACA;AACD;AACF;ATo0FL;ASl0FI;AACA;AAMA;AT+zFJ;AS5zFI;AACE;AACD;AACC;AACD;AT8zFL;AACA;AS5zFI;AAGD;AAED;AT2zFF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AS3zFI;AAEE;AAA2B;AT6zFjC;AS1zFI;AACE;AACD;AT4zFL;AS3zFI;AACD;AT6zFH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AUv7IA;AVy7IA;AUx7IA;AV07IA;AUz7IA;AV27IA;AU78IA;AV+8IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AUz8IA;AACA;AAEA;AV08IA;AUz8IA;AAEA;AV08IA;AACA;AACA;AACA;AACA;AACA;AU38IE;AV68IF;AACA;AACA;AACA;AACA;AU38IE;AAAwB;AV88I1B;AU78II;AACA;AAEA;AV88IJ;AU78II;AAEA;AV88IJ;AACA;AACA;AACA;AU78II;AAEA;AV88IJ;AU78II;AAKI;AACD;AAEJ;AAED;AVy8IF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AU38II;AACD;AAED;AV48IF;AACA;AACA;AACA;AACA;AACA;AACA;AU58II;AACA;AACD;AAED;AV68IF;AACA;AACA;AACA;AACA;AACA;AACA;AU78II;AACD;AAED;AV88IF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AU98II;AAIA;AV68IJ;AU58II;AACE;AAIA;AACD;AV28IL;AU18II;AACD;AAED;AV28IF;AACA;AACA;AACA;AACA;AACA;AU38II;AACE;AAEE;AACC;AAAC;AAAD;AAEH;AACD;AACF;AV68IH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWnlJA;AXqlJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWnlJA;AXqlJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWnlJA;AACE;AACA;AAFiB;AAInB;AXqlJA;AACA;AACA;AACA;AACA;AWplJA;AACE;AADiD;AAI5C;AAA0B;AAA4B;AXulJ7D;AWtlJO;AAAiC;AAA4B;AX0lJpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY1nJA;AZ4nJA;AY3nJA;AZ6nJA;AY5nJA;AZ8nJA;AY7nJA;AZ+nJA;AY9nJA;AZgoJA;AY/nJA;AZioJA;AYhoJA;AZkoJA;AYjoJA;AZmoJA;AYloJA;AZooJA;AY5pJA;AZ8pJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYlpJA;AACA;AAEA;AZmpJA;AYlpJA;AAEA;AZmpJA;AACA;AACA;AACA;AACA;AACA;AYlpJO;AAEP;AZmpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYppJO;AACL;AAME;AACA;AACD;AZipJH;AYhpJE;AAID;AAED;AZ8oJA;AACA;AACA;AACA;AACA;AACA;AACA;AYhpJE;AZkpJF;AACA;AACA;AACA;AACA;AACA;AACA;AYhpJE;AACE;AACA;AAEA;AZipJJ;AYhpJI;AAEA;AZipJJ;AYhpJI;AAEA;AAIA;AAEA;AZ6oJJ;AY5oJI;AAEA;AACD;AAED;AZ4oJF;AACA;AACA;AACA;AACA;AACA;AACA;AY9oJI;AAID;AAED;AZ4oJF;AACA;AACA;AACA;AACA;AACA;AY5oJI;AZ8oJJ;AY7oJI;AACE;AACA;AACD;AACC;AACA;AACA;AACD;AZ+oJL;AY9oJI;AACD;AAED;AZ+oJF;AACA;AACA;AACA;AACA;AACA;AACA;AY/oJI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AAA2B;AACzB;AACA;AACA;AAHyB;AAM7B;AAGE;AAA4B;AAC1B;AACA;AACA;AAH0B;AAM9B;AACA;AACA;AACA;AAAkB;AAA0B;AAC1C;AACA;AACA;AAEE;AACC;AANuC;AAS5C;AACA;AACD;AAED;AZ8oJF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY/oJ+B;AZipJ/B;AYhpJI;AACE;AACD;AZkpJL;AACA;AYjpJI;AAGE;AACE;AACD;AZipJP;AYhpJM;AACE;AAME;AACE;AAIE;AACD;AACF;AACF;AACF;AACF;AACD;AACE;AADwD;AAG3D;AAED;AZyoJF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYzoJI;AACA;AZ2oJJ;AYpoJI;AACE;AACA;AACD;AZsoJL;AYroJI;AACA;AZuoJJ;AYtoJI;AACE;AACA;AACD;AACF;AAED;AZuoJF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYvoJI;AACD;AAED;AZwoJF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYxoJI;AACD;AAED;AZyoJF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYzoJI;AACA;AACA;AAOA;AACE;AZqoJN;AACA;AYnoJO;AAAC;AAA8B;AAA/B;AAEJ;AAED;AZsoJF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYtoJI;AACD;AAED;AZuoJF;AACA;AACA;AACA;AACA;AACA;AACA;AYvoJI;AACD;AAED;AZwoJF;AACA;AACA;AACA;AACA;AACA;AYxoJI;AACD;AAED;AZyoJF;AACA;AACA;AACA;AACA;AACA;AYzoJI;AACD;AZ2oJH;AACA;AACA;AY1oJA;AZ4oJA;AACA;AACA;AY7oJA;AAEA;AZ8oJA;AY7oJA;AAEA;AZ8oJA;AY7oJA;AZ+oJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aat9JA;Abw9JA;Aaj9JA;Abm9JA;Aal9JA;Abo9JA;Aan9JA;Abq9JA;Aap9JA;Abs9JA;Aar9JA;Abu9JA;Aal/JA;Abo/JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa/9JA;AAEA;Abg+JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aaj+JE;Abm+JF;AACA;Aaj+JE;AACE;AACA;AAEA;Abk+JJ;Aaj+JI;AACD;AAED;Abk+JF;AACA;AACA;AACA;AACA;Aap+JI;AACD;AAED;Abq+JF;AACA;AACA;AACA;AACA;AACA;Aar+JI;AACD;AAED;Abs+JF;AACA;AACA;AACA;AACA;AACA;Aat+JI;AACA;AACD;AAED;Abu+JF;AACA;AACA;AACA;AACA;AACA;Aav+JI;AACE;AACE;Aby+JR;Aax+JM;AACE;AAJJ;AAMD;AAED;Aby+JF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aaz+JI;AACA;AACA;AACA;AAAgB;AAA0D;AAI1E;AACD;AAED;Aby+JF;AACA;AACA;AACA;AACA;AACA;Aaz+JI;AACA;AACA;Ab2+JJ;Aa1+JI;AACA;Ab4+JJ;Aa3+JI;AACE;AACA;AACD;Ab6+JL;Aa5+JI;AACE;AACE;AACD;Ab8+JP;Aa7+JM;AACD;AACF;AAED;Ab8+JF;AACA;AACA;AACA;AACA;AACA;AACA;Aa9+JI;AAAW;AAAgD;Abk/J/D;Aaj/JI;AACE;AACA;AACD;Abm/JL;Aal/JI;AACD;Abo/JH;AACA;AACA;Aan/JA;Abq/JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aav/JO;AACL;AAAO;AAAiD;AAAxD;AAID;AAED;Abw/JA;AACA;AACA;AACA;AACA;Aax/JO;AACL;AAKA;AACD;Abs/JD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcvpKA;AdypKA;AcxpKA;Ad0pKA;AczpKA;Ad2pKA;Ac1pKA;Ad4pKA;Ac3pKA;Ad6pKA;Ac5pKA;Ad8pKA;Ac7pKA;Ad+pKA;Ac9pKA;AdgqKA;Ac/pKA;AdiqKA;AchqKA;AdkqKA;AcjqKA;AdmqKA;Ac7rKA;Ad+rKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcjrKA;AACA;AAEA;AdkrKA;AcjrKA;AdmrKA;AACA;AACA;AACA;AcnrKE;AdqrKF;AACA;AACA;AACA;AACA;AcnrKE;AACE;AACA;AAEA;AdorKJ;AcnrKI;AAEA;AdorKJ;AcnrKI;AAEA;AdorKJ;AcnrKI;AAEA;AdorKJ;AcnrKI;AAEA;AdorKJ;AcnrKI;AAEA;AdorKJ;AcnrKI;AAEA;AdorKJ;AcnrKI;AAEA;AdorKJ;AcnrKI;AAEA;AdorKJ;AcnrKI;AAEA;AdorKJ;AcnrKI;AAEA;AdorKJ;AcnrKI;AACD;AAED;AdorKF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcvrKS;AdyrKT;AcxrKI;AACE;AACD;Ad0rKL;AcxrKI;AAEA;AACE;AAA4B;Ad0rKlC;AcvrKI;AACE;AdyrKN;AcvrKM;AdyrKN;AcvrKM;AACE;AAEE;AAAqB;AACrB;AAAmB;AAErB;AACD;AAED;AACE;AACA;AACA;AACE;AACA;AACE;AACD;AACF;AACD;AACA;AACD;AACF;AdwrKL;ActrKI;AACE;AdwrKN;AcvrKM;AACE;AACE;AACD;AdyrKT;AcxrKQ;AACD;AACD;AACK;AAAA;AAGN;AdyrKL;AcvrKI;AAEA;AACD;AAED;AdurKF;AACA;AACA;AACA;AACA;AcvrKI;AACE;AACD;AACF;AAED;AdwrKF;AACA;AACA;AACA;AACA;AACA;AACA;AcxrKI;AACA;AACE;AADoB;AAGtB;AACE;AACA;Ad0rKN;AczrKM;AACE;AACD;Ad2rKP;Ac1rKM;AACD;Ad4rKL;Ac1rKI;Ad4rKJ;Ac3rKI;AACA;AACE;Ad6rKN;Ac3rKM;AACE;AAKA;AACD;AdyrKP;AcvrKM;AACE;AACD;AdyrKP;AcvrKM;AACE;AACA;AACD;AdyrKP;AcvrKM;AACD;AACD;AACD;AAED;AdwrKF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AczrK2D;Ad2rK3D;Ac1rKI;AACA;AAGI;Ad0rKR;AczrKQ;AACD;AACJ;AAED;Ad0rKF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac1rKI;AAAiD;AAAO;Ad8rK5D;Ac3rKI;AAKE;AACD;AdyrKL;AcvrKI;AACA;AACD;AAED;AdwrKF;AACA;AACA;AACA;AACA;AACA;AACA;AcxrKI;Ad0rKJ;AczrKI;AACD;AAED;Ad0rKF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac1rKI;Ad4rKJ;Ac3rKI;AACE;AACA;AACA;AACE;AAKD;AACF;AdyrKL;AcxrKI;AACD;AAED;AdyrKF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AczrKI;AAAM;AAAqB;Ad6rK/B;Ac5rKI;AACE;AACE;AAAc;Ad+rKtB;Ac5rKM;AACE;AACA;AACA;AACD;AACF;Ad8rKL;Ac7rKI;AACD;AAED;Ad8rKF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac/rKqC;AAAA;AdksKrC;AACA;AchsKI;AACE;AACA;AACD;AdksKL;AACA;AchsKI;AACE;AACD;AAID;AACA;Ad+rKJ;AACA;Ac/rKI;AdisKJ;AchsKI;AACE;AACD;AdksKL;ActtKqC;AAAA;AAAA;Ad0tKrC;AcnsKI;AACA;AdqsKJ;Ac/rKI;AACE;AAIA;AAID;AAGD;AACA;AdyrKJ;AACA;AczrKI;AACA;AAGD;AAED;AdwrKF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcxrKI;AACE;Ad0rKN;AcxrKM;AACE;AACD;Ad0rKP;AACA;AczrKM;AACE;AACD;AACF;Ad2rKL;Ac1rKI;AACD;AAED;Ad2rKF;AACA;AACA;AACA;AACA;Ac5rKuB;Ad8rKvB;Ac7rKI;AACE;AACD;Ad+rKL;Ac7rKI;AACE;AAGD;AACF;AAED;Ad4rKF;AACA;AACA;AACA;AACA;AACA;AACA;Ac7rK2B;AAAA;AdgsK3B;Ac7rKI;AACE;AACA;AAAM;AAAqB;AAE3B;AdgsKN;Ac7rKM;AACE;AACD;AACF;AACF;AAED;Ad8rKF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac9rKI;AdgsKJ;Ac/rKI;AACE;AACA;AACD;AdisKL;Ac/rKI;AAAiC;AAAc;AAG/C;AdisKJ;AchsKI;AdksKJ;AcjsKI;AACE;AACA;AACD;AAGD;AACA;AdisKJ;AACA;AcjsKI;AACD;AAED;AdksKF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AclsKI;AACE;AACA;AACA;AAHiB;AAMnB;AACE;AAA0B;AAI5B;AACD;AdisKH;AACA;AACA;AchsKA;AdksKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcpsKO;AACL;AACD;AAED;AdqsKA;AACA;AACA;AACA;AACA;AACA;AcrsKA;AACE;AACD;AAED;AdssKA;AACA;AACA;AACA;AACA;AACA;ActsKA;AACE;AACD;AAED;AdusKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcvsKO;AACL;AACA;AACA;AACD;AdysKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AersLA;AfusLA;AetsLA;AfwsLA;AevsLA;AfysLA;AexsLA;Af0sLA;AepsLA;AfssLA;Ae/tLA;AfiuLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AentLA;AfqtLA;AACA;AACA;AACA;AertLE;AfutLF;AACA;AertLE;AACE;AACA;AAEA;AfstLJ;AertLI;AACD;AAED;AfstLF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AextLI;AACE;AACA;AACD;Af0tLL;AextLI;AACE;AACD;Af0tLL;AextLI;AACE;AACD;Af0tLL;AextLI;AACD;AAED;AfytLF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AeztLI;AACA;Af2tLJ;Ae1tLI;AACE;AACA;AACD;Af4tLL;Ae3tLI;AAEA;AACA;AACD;AAED;Af2tLF;AACA;AACA;AACA;AACA;AACA;AACA;Ae3tLI;AACE;AACA;AACD;Af6tLL;Ae5tLI;AACA;AACA;AAKA;AACD;Af0tLH;AACA;AACA;AeztLA;Af2tLA;AACA;AACA;AACA;AACA;AACA;Ae7tLO;AACL;AACD;AAED;Af8tLA;AACA;AACA;AACA;AACA;Ae9tLO;AACL;AACD;AfguLD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB50LA;AhB80LA;AgB70LA;AhB+0LA;AgB30LA;AhB60LA;AgB50LA;AhB80LA;AgBp2LA;AhBs2LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB51LA;AACA;AACA;AACA;AACA;AACA;AAEA;AhB61LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB51LO;AACL;AhB81LF;AgB71LE;AACE;AACD;AhB+1LH;AgB91LE;AACA;AACD;AAED;AhB+1LA;AACA;AACA;AACA;AACA;AACA;AgB/1LO;AACL;AhBi2LF;AgBh2LE;AACE;AACD;AhBk2LH;AgBt2LmC;AAAA;AhBy2LnC;AgBn2LE;AACE;AACA;AACD;AhBq2LH;AgBp2LE;AACD;AAED;AhBq2LA;AACA;AACA;AACA;AACA;AACA;AgBr2LA;AACE;AACA;AhBu2LF;AgBr2LE;AACE;AACA;AACA;AACA;AACA;AACD;AhBu2LH;AgBr2LE;AhBu2LF;AgBt2LE;AACE;AACA;AACD;AhBw2LH;AgBt2LE;AACA;AACA;AACE;AACA;AAFK;AAIR;AAED;AhBu2LA;AACA;AACA;AACA;AACA;AACA;AACA;AgBv2LA;AACE;AACE;AhBy2LJ;AgBx2LI;AACE;AACD;AACF;AhB02LH;AgBz2LE;AACD;AAED;AhB02LA;AACA;AACA;AACA;AACA;AACA;AACA;AgB12LA;AACE;AACA;AACA;AACA;AhB42LF;AgB12LE;AACD;AAED;AhB22LA;AACA;AACA;AACA;AACA;AgB32LA;AACE;AACA;AhB62LF;AgB32LE;AhB62LF;AgB52LE;AAGD;AAED;AhB22LA;AACA;AACA;AACA;AACA;AACA;AgB32LA;AACE;AACE;AACD;AhB62LH;AgB52LE;AAEI;AhB62LN;AgB52LM;AACE;AACD;AhB82LP;AgB72LM;AACD;AACO;AAAA;AAEX;AAED;AhB82LA;AACA;AACA;AACA;AACA;AACA;AgB92LA;AACE;AACA;AhBg3LF;AgB/2LE;AACE;AACA;AhBi3LJ;AgBh3LI;AACE;AACA;AACD;AhBk3LL;AgBj3LI;AACA;AACD;AhBm3LH;AgBl3LE;AACD;AAED;AhBm3LA;AACA;AACA;AACA;AACA;AgBn3LA;AACE;AACA;AACD;AAED;AhBo3LA;AACA;AACA;AACA;AACA;AACA;AACA;AgBp3LA;AACE;AACD;AAED;AhBq3LA;AACA;AACA;AACA;AACA;AgBr3LA;AACE;AACD;AhBu3LD;AACA;AACA;AACA;AACA;AACA;AACA;AiBpkMA;AjBskMA;AiBtlMA;AjBwlMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBplMA;AjBslMA;AACA;AACA;AACA;AiBplMO;AACL;AACA;AACA;AACA;AjBslMF;AiBplME;AACE;AACA;AjBslMJ;AiBplMI;AACE;AACD;AjBslML;AiBplMI;AACE;AACD;AACF;AjBslMH;AiBplME;AACD;AAED;AjBqlMA;AACA;AACA;AACA;AACA;AACA;AiBrlMA;AACE;AACA;AACA;AjBulMF;AiBrlME;AACE;AACD;AjBulMH;AiB9lM+B;AAAA;AAAA;AjBkmM/B;AiBxlME;AACE;AACD;AjB0lMH;AiBzlME;AjB2lMF;AiBzlME;AACE;AACD;AjB2lMH;AiBzlME;AACD;AAED;AjB0lMA;AACA;AACA;AACA;AACA;AACA;AACA;AiB1lMA;AACE;AjB4lMF;AiB3lME;AACE;AACD;AjB6lMH;AiB3lME;AACA;AACA;AACA;AACA;AACA;AjB6lMF;AiB3lME;AACE;AjB6lMJ;AiB3lMI;AACE;AACA;AACD;AACC;AjB6lMN;AiB3lMM;AACE;AACA;AACD;AACC;AACD;AACF;AACC;AACD;AACF;AjB6lMH;AiB3lME;AACD;AjB6lMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBpsMA;AlBssMA;AkBrsMA;AlBusMA;AkBtsMA;AlBwsMA;AkBvsMA;AlBysMA;AkBxsMA;AlB0sMA;AkBzsMA;AlB2sMA;AkB1sMA;AlB4sMA;AkB3sMA;AlB6sMA;AkB5sMA;AlB8sMA;AkBtuMA;AlBwuMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB3tMA;AlB6tMA;AACA;AACA;AACA;AkB7tME;AlB+tMF;AACA;AACA;AACA;AACA;AACA;AkB7tME;AACE;AACA;AAEA;AlB8tMJ;AkB7tMI;AAEA;AlB8tMJ;AkB7tMI;AAEA;AlB8tMJ;AkB7tMI;AAEA;AlB8tMJ;AkB7tMI;AAEA;AlB8tMJ;AkB7tMI;AlB+tMJ;AkB7tMI;AlB+tMJ;AkB9tMI;AlBguMJ;AkB9tMI;AlBguMJ;AkB/tMI;AAEA;AlBguMJ;AkB/tMI;AAEA;AlBguMJ;AkB/tMI;AAEA;AlBguMJ;AkB/tMI;AAEA;AlBguMJ;AkB/tMI;AAEA;AlBguMJ;AkB/tMI;AAEA;AlBguMJ;AkB/tMI;AAEA;AlBguMJ;AkB/tMI;AAEA;AlBguMJ;AkB/tMI;AAEA;AlBguMJ;AkB/tMI;AAEA;AlBguMJ;AkB/tMI;AAEA;AlBguMJ;AkB/tMI;AAEA;AlBguMJ;AkB/tMI;AAEA;AlBguMJ;AkB/tMI;AAEA;AlBguMJ;AkB/tMI;AAEA;AlBguMJ;AkB/tMI;AAEA;AlBguMJ;AkB/tMI;AAEA;AACA;AACD;AAED;AlB+tMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBluM+C;AlBouM/C;AkBnuMI;AlBquMJ;AkBpuMI;AACE;AACA;AACD;AlBsuML;AkBpuMI;AACA;AACA;AACA;AlBsuMJ;AkBhuMI;AACE;AAEA;AAKA;AACE;AAKD;AACF;AlBytML;AACA;AkBvtMI;AACE;AACA;AAAkC;AAMlC;AAA6B;AAAA;AAKzB;AAAO;AAMR;AACJ;AlB+sML;AkB7sMI;AACA;AACA;AAQE;AACE;AACA;AACA;AAHU;AAKb;AACD;AACA;AACD;AAED;AlBusMF;AACA;AACA;AACA;AACA;AkBvsMI;AlBysMJ;AkBtsMI;AACE;AACA;AACD;AlBwsML;AkBtsMI;AACE;AACA;AACD;AACF;AAED;AlBusMF;AACA;AACA;AACA;AACA;AACA;AACA;AkBvsMI;AACE;AACA;AACD;AlBysML;AkBvsMI;AACE;AACA;AACD;AACF;AAED;AlBwsMF;AACA;AACA;AACA;AACA;AACA;AkBzsMU;AlB2sMV;AkB3sMU;AAAA;AAAA;AAAA;AAON;AAAgB;AAA4B;AAC5C;AlB4sMJ;AkBzsMI;AAIA;AACE;AACD;AAED;AAKE;AlBmsMN;AkBjsMM;AlBmsMN;AkBlsMM;AACE;AACD;AlBosMP;AACA;AkBnsMM;AACE;AlBqsMR;AkBjsMQ;AACD;AACC;AAKD;AACF;AACF;AAED;AlB8rMF;AACA;AACA;AACA;AACA;AACA;AkB9rMI;AACA;AACA;AACA;AACA;AACD;AAED;AlB+rMF;AACA;AACA;AACA;AACA;AkB/rMI;AACE;AACD;AlBisML;AkB/rMI;AlBisMJ;AkB7rMI;AACE;AACA;AAKA;AACA;AAOA;AACD;AlBqrML;AkBnrMI;AAEA;AACD;AAED;AlBmrMF;AACA;AACA;AACA;AACA;AkBprMsB;AlBsrMtB;AkBrrMI;AACE;AACE;AACA;AlBurMR;AkBtrMQ;AlBwrMR;AkBtrMQ;AACE;AlBwrMV;AkBvrMU;AACD;AACF;AACF;AACF;AAED;AlBwrMF;AACA;AACA;AACA;AACA;AkBzrM0B;AlB2rM1B;AkB1rMI;AAIA;AAKA;AACE;AlBqrMN;AkBprMM;AACD;AACF;AAED;AlBqrMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBrrMI;AACE;AACA;AACA;AACA;AACA;AACA;AACD;AlBurML;AkBrrMI;AACD;AlBurMH;AACA;AACA;AkBtrMA;AlBwrMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB1rMO;AAQL;AlBqrMF;AkBprME;AlBsrMF;AkBprME;AACA;AAEA;AAGI;AACD;AlBmrML;AkBlrME;AACE;AACA;AACD;AlBorMH;AkBlrME;AACE;AlBorMJ;AkBlrMI;AAOE;AACQ;AAAD;AAER;AACF;AACF;AAED;AlB6qMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB7qMA;AAQE;AAEA;AlBuqMF;AkBtqME;AAGO;AAHQ;AlB0qMjB;AkBpqME;AACE;AlBsqMJ;AkBpqMI;AACE;AAEa;AAAA;AAGA;AAAA;AACb;AACD;AACC;AAAc;AAAA;AACf;AACC;AAA8B;AAAA;AAC/B;AACF;AlByqMH;AkBvqME;AAA+B;AAAA;AAE/B;AAAyC;AAAA;AAC1C;AlB4qMD;AACA;AACA;AACA;AACA;AACA;AACA;AmBzoNA;AnB2oNA;AmB1oNA;AnB4oNA;AmB3oNA;AnB6oNA;AmB5oNA;AnB8oNA;AmB7oNA;AnB+oNA;AmBnqNA;AnBqqNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB7pNA;AnB+pNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB7pNA;AAEA;AnB8pNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB7pNA;AAEA;AnB8pNA;AACA;AACA;AACA;AACA;AACA;AmB7pNA;AAEA;AnB8pNA;AACA;AACA;AACA;AACA;AACA;AACA;AmB7pNA;AACE;AACE;AAAW;AAAA;AACZ;AACF;AAED;AnBgqNA;AACA;AACA;AACA;AACA;AACA;AmBhqNA;AACE;AACE;AACA;AACD;AnBkqNH;AmBjqNE;AAKE;AAIA;AACD;AnB4pNH;AmB3pNE;AACE;AAIA;AACD;AnB0pNH;AmBzpNE;AAIE;AAIA;AACD;AnBqpNH;AmBppNE;AACD;AAED;AnBqpNA;AACA;AACA;AACA;AACA;AACA;AmBrpNA;AACE;AAAO;AAAmD;AAA1D;AAGD;AAED;AnBupNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBvpNA;AACE;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfW;AAiBb;AAAoC;AAA7B;AACR;AAED;AnB0pNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB1pNA;AACE;AnB4pNF;AmB3pNE;AAAiD;AAAA;AAAA;AnBgqNnD;AmB9pNI;AACE;AACD;AnBgqNL;AmB/pNI;AAEK;AAAA;AnBiqNT;AmB9pNI;AACE;AACD;AACF;AnBgqNH;AmB/pNE;AACD;AAED;AnBgqNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBhqNA;AACE;AnBkqNF;AmBjqNE;AACE;AACA;AACA;AACA;AACE;AACA;AACA;AAHc;AnBuqNpB;AmBlqNI;AACE;AACD;AACC;AACE;AACA;AAFa;AAIhB;AACF;AnBoqNH;AmBnqNE;AnBqqNF;AmBpqNE;AACE;AACD;AnBsqNH;AmBrqNE;AACD;AAED;AnBsqNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBtqNA;AACE;AACA;AACA;AACA;AACA;AACE;AnBwqNJ;AmBvqNI;AACE;AAAc;AAAO;AAAR;AACd;AACF;AACD;AACD;AAED;AnB2qNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB3qNA;AACE;AACA;AAEA;AnB4qNF;AmB3qNE;AAAe;AAAM;AAAN;AnBgrNjB;AmBhrNiB;AAAA;AnBmrNjB;AmBhrNE;AACO;AAAA;AAAA;AAAA;AACS;AAAA;AAGhB;AAAsC;AAAA;AACvC;AAED;AnBqrNA;AACA;AACA;AACA;AACA;AACA;AACA;AmBrrNA;AAA6D;AAG3D;AnBsrNF;AmBrrNE;AAOE;AACA;AACD;AnBirNH;AmBhrNE;AnBkrNF;AmBjrNE;AACE;AACA;AACA;AACD;AnBmrNH;AmBjrNE;AAEA;AnBkrNF;AmBjrNE;AnBmrNF;AmB7qNE;AAA0B;AAAA;AnBirN5B;AmBhrNE;AACE;AACD;AnBkrNH;AACA;AmBjrNE;AAAmB;AAAA;AACpB;AAED;AnBorNA;AACA;AACA;AACA;AACA;AACA;AACA;AmBprNO;AACL;AACA;AACE;AACD;AACC;AACD;AACF;AnBsrND;AACA;AACA;AACA;AACA;AACA;AACA;AoB9/NA;ApBggOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoB9/NA;ApBggOA;AACA;AACA;AoB9/NO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BoC;ApB+hOtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB1iOA;ArB4iOA;AqB3iOA;ArB6iOA;AqB9jOA;ArBgkOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB3jOA;ArB6jOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB3jOO;AAEP;ArB4jOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB/jOE;ArBikOF;AACA;AqB/jOE;AACE;AACA;AAEA;ArBgkOJ;AqB/jOI;AAEA;ArBgkOJ;AqB/jOI;AACD;AAED;ArBgkOF;AACA;AACA;AACA;AACA;AACA;AACA;AqBlkOI;AACA;AACD;AAED;ArBmkOF;AACA;AACA;AACA;AACA;AqBnkOI;ArBqkOJ;AqBnkOI;AACE;AACD;AACF;AAED;ArBokOF;AACA;AACA;AACA;AACA;AACA;AqBpkOI;AACA;AACA;ArBskOJ;AqBrkOI;AACE;AACA;AACA;AACA;AACA;AACA;AANkB;AAQpB;ArBukOJ;AqBrkOI;AACE;AACD;ArBukOL;AqBrkOI;AACD;AAED;ArBskOF;AACA;AACA;AACA;AACA;AACA;AqBtkOI;AACA;AACE;AACA;AACA;AACA;AACA;AACA;AANkB;ArB+kOxB;AqBtkOI;AACD;AAED;ArBukOF;AACA;AACA;AACA;AACA;AACA;AqBvkOI;AACE;AACA;AACD;AACF;AAED;ArBwkOF;AACA;AACA;AACA;AACA;AACA;AqBxkOI;AAGD;ArBwkOH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBzsOA;AtB2sOA;AsB3tOA;AtB6tOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBrtOA;AAEA;AtBstOA;AACA;AACA;AACA;AACA;AACA;AACA;AsBrtOO;AAEP;AtBstOA;AACA;AACA;AACA;AACA;AACA;AACA;AsBttOO;AAEP;AtButOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB9tOE;AtBguOF;AACA;AACA;AACA;AACA;AACA;AsB7tOE;AtB+tOF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBhuOA;AtBkuOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB1uOE;AtB4uOF;AsB3uOyD;AAArB;AAAqB;AtB+uOzD;AsB9uOI;AACE;AACE;AACA;AAFK;AAIR;AtBgvOL;AsB/uOI;AACE;AADK;AAGR;AAED;AtBgvOF;AACA;AACA;AsBjvO+D;AAArB;AAAqB;AtBqvO/D;AsBpvOI;AACE;AACE;AACA;AACsB;AAAA;AAHjB;AAMR;AtBsvOL;AsBrvOI;AACE;AADK;AAGR;AtBuvOH;AACA;AACA;AsBtvOA;AtBwvOA;AACA;AACA;AACA;AACA;AACA;AACA;AsBxvOO;AACL;AADkC;AAIpC;AtByvOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB1vOO;AACL;AACW;AAAA;AACU;AAAA;AAErB;AtB6vOF;AsB5vOE;AACE;AACD;AACC;AACD;AtB8vOH;AsB7vOE;AACD;AtB+vOD;AACA;AACA;AACA;AACA;AACA;AACA;AuBn3OA;AvBq3OA;AuB92OA;AvBg3OA;AuB/2OA;AvBi3OA;AuBh3OA;AvBk3OA;AuBj3OA;AvBm3OA;AuB92OA;AvBg3OA;AuB/2OA;AvBi3OA;AuBh3OA;AvBk3OA;AuBj3OA;AvBm3OA;AuBl3OA;AvBo3OA;AuBn3OA;AvBq3OA;AuBp3OA;AvBs3OA;AuBr3OA;AvBu3OA;AuB75OA;AvB+5OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBr4OA;AACA;AAEA;AvBs4OA;AACA;AACA;AACA;AACA;AACA;AuBv4OE;AvBy4OF;AACA;AACA;AuBv4OE;AAA4D;AAA3C;AAAU;AAA4B;AAAK;AvB84O9D;AuB74OI;AACA;AAEA;AvB84OJ;AuB74OI;AAEA;AvB84OJ;AuB74OI;AAAuB;AAAiC;AvBi5O5D;AuB54OI;AACE;AACA;AACD;AAED;AvB64OJ;AACA;AuB74OI;AAEA;AvB84OJ;AuB74OI;AAEA;AvB84OJ;AuB74OI;AACD;AAED;AvB84OF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBh5OI;AACE;AACA;AACD;AvBk5OL;AuBj5OI;AACA;AvBm5OJ;AACA;AACA;AACA;AuBl5OI;AACE;AAGA;AACA;AACA;AACD;AvBk5OL;AuBh5OI;AvBk5OJ;AuBh5OI;AACE;AACE;AACA;AACD;AvBk5OP;AuBj5OM;AACA;AACD;AvBm5OL;AuBj5OI;AAIE;AACD;AvBg5OL;AuB/4OI;AAIE;AACD;AvB84OL;AuB74OI;AvB+4OJ;AuB94OI;AACE;AAEA;AAIE;AAAiC;AAEnC;AACD;AvB44OL;AuB34OI;AACD;AAED;AvB44OF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB54OI;AACE;AACD;AvB84OL;AuB74OI;AACE;AACD;AvB+4OL;AuB74OI;AvB+4OJ;AuB74OI;AAQA;AAMD;AAED;AvBk4OF;AACA;AACA;AACA;AACA;AuBl4OI;AACE;AACA;AACD;AACF;AAED;AvBm4OF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBp4OuC;AvBs4OvC;AuBr4OI;AvBu4OJ;AuBt4OI;AACE;AACA;AACD;AvBw4OL;AuBt4OI;AACA;AAQA;AvBi4OJ;AuBh4OI;AACA;AvBk4OJ;AuBj4OI;AACE;AACE;AACD;AACF;AvBm4OL;AuBj4OI;AACA;AACA;AACA;AACD;AAED;AvBk4OF;AACA;AACA;AACA;AACA;AuBl4OI;AAAO;AAAwC;AAA/C;AAGD;AAED;AvBo4OF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBp4OI;AACA;AAEI;AACD;AAEC;AACE;AAKD;AACF;AACJ;AAED;AvB+3OF;AACA;AACA;AACA;AACA;AACA;AACA;AuB/3OI;AvBi4OJ;AuBh4OI;AACE;AACD;AvBk4OL;AuBj4OI;AvBm4OJ;AuBl4OI;AACE;AACD;AvBo4OL;AuBn4OI;AACD;AAED;AvBo4OF;AACA;AACA;AACA;AACA;AACA;AACA;AuBp4OI;AvBs4OJ;AuBr4OI;AACE;AACD;AvBu4OL;AuBt4OI;AvBw4OJ;AuBv4OI;AACE;AACD;AvBy4OL;AuBx4OI;AACA;AvB04OJ;AuBv4OI;AvBy4OJ;AuBv4OI;AACE;AACE;AACD;AACF;AvBy4OL;AuBv4OI;AACA;AACD;AvBy4OH;AACA;AACA;AuBx4OA;AvB04OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB54OA;AACE;AACA;AACE;AvB84OJ;AuB74OI;AACE;AACD;AvB+4OL;AuB94OI;AACD;AACF;AvBg5OD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBjtPA;AxBmtPA;AwBltPA;AxBotPA;AwBntPA;AxBqtPA;AwBptPA;AxBstPA;AwBrtPA;AxButPA;AwBttPA;AxBwtPA;AwBvtPA;AxBytPA;AwBptPA;AxBstPA;AwBrtPA;AxButPA;AwBttPA;AxBwtPA;AwBrvPA;AxBuvPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBtuPA;AACA;AAEA;AxBuuPA;AwBtuPA;AAEA;AACE;AACA;AACA;AACA;AAJ2C;AAO7C;AxBsuPA;AwBruPA;AAEA;AxBsuPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBvuPE;AxByuPF;AACA;AACA;AACA;AwBvuPE;AACE;AACA;AACA;AxByuPJ;AwBxuPI;AACA;AxB0uPJ;AwBzuPI;AACA;AACD;AAED;AxB0uPF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwB5uPI;AACD;AAED;AxB6uPF;AACA;AACA;AACA;AACA;AACA;AwB7uPI;AxB+uPJ;AwB9uPI;AACE;AACD;AxBgvPL;AwB/uPI;AACD;AxBivPH;AACA;AACA;AwBhvPA;AxBkvPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBpvPA;AACE;AADoC;AAGpC;AxBsvPF;AwBlvPE;AACE;AACA;AAID;AxBivPH;AwB/uPE;AACD;AAED;AxBgvPA;AACA;AACA;AACA;AACA;AACA;AwBhvPA;AACE;AACE;AACD;AxBkvPH;AwBjvPE;AACD;AAED;AxBkvPA;AACA;AACA;AACA;AACA;AACA;AACA;AwBlvPA;AACE;AACE;AACD;AxBovPH;AwBnvPE;AACE;AACD;AxBqvPH;AwBpvPE;AACA;AACD;AAED;AxBqvPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBrvPA;AACE;AACE;AACD;AxBuvPH;AwBrvPE;AxBuvPF;AwBtvPE;AACE;AxBwvPJ;AwBrvPI;AACE;AACA;AACD;AACF;AxBuvPH;AwBrvPE;AACA;AACA;AACD;AAED;AxBsvPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBxvPE;AxB0vPF;AACA;AwBxvPE;AAAoB;AxB2vPtB;AwB1vPI;AACA;AAEA;AxB2vPJ;AwB1vPI;AAEA;AxB2vPJ;AwB1vPI;AAEA;AACA;AACA;AAA6B;AAAA;AAC7B;AAAoC;AAAA;AACpC;AAAoC;AAAA;AACpC;AAA4B;AAAA;AAC5B;AAA+B;AAAA;AAC/B;AACA;AAAsB;AAAA;AAGtB;AACA;AACA;AAEE;AAAA;AAGF;AxBmwPJ;AwBlwPI;AAA+B;AAAA;AAGhC;AAED;AxBmwPF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBtwPqB;AxBwwPrB;AwBvwPI;AACE;AAAc;AAAA;AAEd;AAHoB;AAKtB;AACA;AAAO;AAA4B;AAAnC;AACD;AAED;AxB4wPF;AACA;AACA;AACA;AACA;AACA;AwB5wPI;AACA;AACD;AAED;AxB6wPF;AACA;AACA;AACA;AACA;AACA;AACA;AwB7wPI;AACD;AAED;AxB8wPF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwB/wPwC;AxBixPxC;AwBhxPI;AACE;AACE;AAKA;AACD;AxB8wPP;AwB5wPM;AACE;AACD;AAGD;AxB4wPN;AACA;AwB5xP4D;AAAA;AAAA;AxBgyP5D;AwB/wPM;AACE;AACA;AACD;AxBixPP;AwB/wPM;AxBixPN;AwB/wPM;AACE;AAKS;AAHP;AAMH;AxB4wPP;AwB1wPM;AACE;AAAmB;AAAsC;AAC1D;AxB8wPP;AwB7wPM;AACE;AACD;AxB+wPP;AwB9wPM;AACD;AACF;AAED;AxB+wPF;AACA;AACA;AACA;AACA;AACA;AwB/wPI;AACD;AxBixPH;AACA;AACA;AwBhxPA;AxBkxPA;AACA;AACA;AACA;AACA;AACA;AACA;AwBpxPO;AACL;AACE;AACD;AxBsxPH;AwBpxPE;AACE;AACD;AxBsxPH;AACA;AwB9xPgC;AAAA;AAAA;AxBkyPhC;AwBxxPE;AACD;AAED;AxByxPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBzxPO;AACL;AACE;AAAQ;AAAU;AAAX;AACR;AxB8xPH;AwB7xPE;AACA;AAEA;AAAQ;AAA4B;AAA7B;AACR;AAED;AxBgyPA;AACA;AACA;AACA;AwBhyPO;AACL;AAKD;AAED;AxB6xPA;AACA;AACA;AACA;AACA;AwB7xPO;AACL;AACD;AAED;AxB8xPA;AACA;AACA;AACA;AACA;AwB9xPO;AACL;AAAO;AAA2C;AAAlD;AAID;AAED;AxB+xPA;AACA;AACA;AACA;AACA;AACA;AwB/xPO;AACL;AACD;AAED;AxBgyPA;AACA;AACA;AACA;AACA;AACA;AwBhyPA;AACE;AACE;AACE;AACD;AxBkyPL;AwBjyPI;AACD;AACF;AAED;AxBkyPA;AACA;AACA;AACA;AACA;AACA;AwBlyPO;AACL;AAQD;AxB6xPD;AACA;AACA;AACA;AACA;AACA;AACA;AyB7qQA;AzB+qQA;AyB3qQA;AzB6qQA;AyB5qQA;AzB8qQA;AyB7qQA;AzB+qQA;AyB1qQA;AzB4qQA;AyB1qQA;AzB4qQA;AyB3qQA;AzB6qQA;AyB5qQA;AzB8qQA;AyB7qQA;AzB+qQA;AyB9qQA;AzBgrQA;AyB/qQA;AzBirQA;AyBhrQA;AzBkrQA;AyBjrQA;AzBmrQA;AyBlrQA;AzBorQA;AyBnrQA;AzBqrQA;AyBprQA;AzBsrQA;AyBrrQA;AzBurQA;AyBtrQA;AzBwrQA;AyBvrQA;AzByrQA;AyBxrQA;AzB0rQA;AyBzrQA;AzB2rQA;AyB1rQA;AzB4rQA;AyB3rQA;AzB6rQA;AyB5rQA;AzB8rQA;AyB7rQA;AzB+rQA;AyB9rQA;AzBgsQA;AyB/rQA;AzBisQA;AyBhsQA;AzBksQA;AyBjsQA;AzBmsQA;AyBlsQA;AzBosQA;AyBnsQA;AzBqsQA;AyBpsQA;AzBssQA;AyBrsQA;AzBusQA;AyBtsQA;AzBwsQA;AyBvsQA;AzBysQA;AyBxsQA;AzB0sQA;AyBzsQA;AzB2sQA;AyB1sQA;AzB4sQA;AyB3sQA;AzB6sQA;AyB5sQA;AzB8sQA;AyB7sQA;AzB+sQA;AyB9sQA;AzBgtQA;AyB/sQA;AzBitQA;AyBhtQA;AzBktQA;AyBjtQA;AzBmtQA;AyBltQA;AzBotQA;AyBntQA;AzBqtQA;AyBptQA;AzBstQA;AyBrtQA;AzButQA;AyBttQA;AzBwtQA;AyBvtQA;AzBytQA;AyBxtQA;AzB0tQA;AyBztQA;AzB2tQA;AyB1tQA;AzB4tQA;AyB3tQA;AzB6tQA;AyB5tQA;AzB8tQA;AyB7tQA;AzB+tQA;AyB9tQA;AzBguQA;AyB/tQA;AzBiuQA;AyBhuQA;AzBkuQA;AyBjuQA;AzBmuQA;AyBluQA;AzBouQA;AyBnuQA;AzBquQA;AyBpuQA;AzBsuQA;AyBruQA;AzBuuQA;AyBtuQA;AzBwuQA;AyBvuQA;AzByuQA;AyBxuQA;AzB0uQA;AyBzuQA;AzB2uQA;AyB1uQA;AzB4uQA;AyB3uQA;AzB6uQA;AyB5uQA;AzB8uQA;AyB7uQA;AzB+uQA;AyB9uQA;AzBgvQA;AyB/uQA;AzBivQA;AyBhvQA;AzBkvQA;AyBjvQA;AzBmvQA;AyBlvQA;AzBovQA;AyBnvQA;AzBqvQA;AyB31QA;AzB61QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBlwQA;AAyEA;AzB4rQA;AACA;AACA;AyB3rQO;AAEL;AzB4rQF;AACA;AACA;AyBvmQA;AACE;AACE;AACD;AzBymQH;AyBvmQE;AAEA;AAIA;AAEA;AAID;AAED;AzBgmQA;AACA;AACA;AACA;AACA;AACA;AACA;AyBhmQA;AACE;AACE;AACE;AACA;AAGG;AAAD;AAEH;AACF;AACF;AzBgmQD;AACA;AACA;AACA;AACA;AACA;AACA;A0Bv5QA;A1By5QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Bt5QO;AAAe;AAA4B;AAChD;AACE;AADU;AAGZ;AACE;AADW;AAGb;AACE;AACE;AACA;AAFM;AADE;AAMZ;AACE;AACA;AACE;AACE;AACA;AAFU;AAIZ;AACE;AACA;AAFU;AAIZ;AACE;AACA;AAFiB;AATR;AAFG;AAiBlB;AACE;AACA;AAFM;AA9BwC;A1B47QlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Bn8QA;A3Bq8QA;A2Br9QA;A3Bu9QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Bl9QA;A3Bo9QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4B79QA;A5B+9QA;A4B/+QA;A5Bi/QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4B5+QA;A5B8+QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bv/QA;A7By/QA;A6BzgRA;A7B2gRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BtgRA;A7BwgRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BjhRA;A9BmhRA;A8BniRA;A9BqiRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BhiRA;A9BkiRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B3iRA;A/B6iRA;A+B7jRA;A/B+jRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B1jRA;A/B4jRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCrkRA;AhCukRA;AgCvlRA;AhCylRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCplRA;AhCslRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiC/lRA;AjCimRA;AiCjnRA;AjCmnRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiC9mRA;AjCgnRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCznRA;AlC2nRA;AkC3oRA;AlC6oRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCxoRA;AlC0oRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCnpRA;AnCqpRA;AmCrqRA;AnCuqRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmClqRA;AnCoqRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoC7qRA;ApC+qRA;AoC/rRA;ApCisRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoC5rRA;ApC8rRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqCvsRA;ArCysRA;AqCztRA;ArC2tRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqCttRA;ArCwtRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCjuRA;AtCmuRA;AsCnvRA;AtCqvRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsChvRA;AtCkvRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuC3vRA;AvC6vRA;AuC7wRA;AvC+wRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuC1wRA;AvC4wRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCrxRA;AxCuxRA;AwCvyRA;AxCyyRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCpyRA;AxCsyRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyC/yRA;AzCizRA;AyCj0RA;AzCm0RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyC9zRA;AzCg0RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Cz0RA;A1C20RA;A0C31RA;A1C61RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Cx1RA;A1C01RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Cn2RA;A3Cq2RA;A2Cr3RA;A3Cu3RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Cl3RA;A3Co3RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4C73RA;A5C+3RA;A4C/4RA;A5Ci5RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4C54RA;A5C84RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Cv5RA;A7Cy5RA;A6Cz6RA;A7C26RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Ct6RA;A7Cw6RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8Cj7RA;A9Cm7RA;A8Cn8RA;A9Cq8RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8Ch8RA;A9Ck8RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+C38RA;A/C68RA;A+C79RA;A/C+9RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+C19RA;A/C49RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgDr+RA;AhDu+RA;AgDv/RA;AhDy/RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgDp/RA;AhDs/RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiD//RA;AjDigSA;AiDjhSA;AjDmhSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiD9gSA;AjDghSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkDzhSA;AlD2hSA;AkD3iSA;AlD6iSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkDxiSA;AlD0iSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmDnjSA;AnDqjSA;AmDrkSA;AnDukSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmDlkSA;AnDokSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoD7kSA;ApD+kSA;AoD/lSA;ApDimSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoD5lSA;ApD8lSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqDvmSA;ArDymSA;AqDznSA;ArD2nSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqDtnSA;ArDwnSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsDjoSA;AtDmoSA;AsDnpSA;AtDqpSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsDhpSA;AtDkpSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuD3pSA;AvD6pSA;AuD7qSA;AvD+qSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuD1qSA;AvD4qSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwDrrSA;AxDurSA;AwDvsSA;AxDysSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwDpsSA;AxDssSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyD/sSA;AzDitSA;AyDjuSA;AzDmuSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyD9tSA;AzDguSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0DzuSA;A1D2uSA;A0D3vSA;A1D6vSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0DxvSA;A1D0vSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2DnwSA;A3DqwSA;A2DrxSA;A3DuxSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2DlxSA;A3DoxSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4D7xSA;A5D+xSA;A4D/ySA;A5DizSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4D5ySA;A5D8ySA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6DvzSA;A7DyzSA;A6Dz0SA;A7D20SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Dt0SA;A7Dw0SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8Dj1SA;A9Dm1SA;A8Dn2SA;A9Dq2SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8Dh2SA;A9Dk2SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+D32SA;A/D62SA;A+D73SA;A/D+3SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+D13SA;A/D43SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgEr4SA;AhEu4SA;AgEv5SA;AhEy5SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgEp5SA;AAoDA;AAYA;AAYA;AAwBA;AAcA;AhEyySA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiEp6SA;AjEs6SA;AiEt7SA;AjEw7SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiEn7SA;AjEq7SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkE97SA;AlEg8SA;AkEh9SA;AlEk9SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkE78SA;AlE+8SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmEx9SA;AnE09SA;AmE1+SA;AnE4+SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmEv+SA;AnEy+SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoEl/SA;ApEo/SA;AoEpgTA;ApEsgTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoEjgTA;ApEmgTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqE5gTA;ArE8gTA;AqE9hTA;ArEgiTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqE3hTA;ArE6hTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsEtiTA;AtEwiTA;AsExjTA;AtE0jTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsErjTA;AtEujTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuEhkTA;AvEkkTA;AuEllTA;AvEolTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuE/kTA;AvEilTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwE1lTA;AxE4lTA;AwE5mTA;AxE8mTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwEzmTA;AxE2mTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyEpnTA;AzEsnTA;AyEtoTA;AzEwoTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyEnoTA;AzEqoTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0E9oTA;A1EgpTA;A0EhqTA;A1EkqTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0E7pTA;A1E+pTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2ExqTA;A3E0qTA;A2E1rTA;A3E4rTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2EvrTA;A3EyrTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4ElsTA;A5EosTA;A4EptTA;A5EstTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4EjtTA;A5EmtTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6E5tTA;A7E8tTA;A6E9uTA;A7EgvTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6E3uTA;A7E6uTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8EtvTA;A9EwvTA;A8ExwTA;A9E0wTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8ErwTA;A9EuwTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+EhxTA;A/EkxTA;A+ElyTA;A/EoyTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+E/xTA;A/EiyTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgF1yTA;AhF4yTA;AgF5zTA;AhF8zTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgFzzTA;AhF2zTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiFp0TA;AjFs0TA;AiFt1TA;AjFw1TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiFn1TA;AjFq1TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkF91TA;AlFg2TA;AkFh3TA;AlFk3TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkF72TA;AlF+2TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmFx3TA;AnF03TA;AmF14TA;AnF44TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmFv4TA;AnFy4TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoFl5TA;ApFo5TA;AoFp6TA;ApFs6TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoFj6TA;ApFm6TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqF56TA;ArF86TA;AqF97TA;ArFg8TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqF37TA;ArF67TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsFt8TA;AtFw8TA;AsFx9TA;AtF09TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsFr9TA;AtFu9TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuFh+TA;AvFk+TA;AuFl/TA;AvFo/TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuF/+TA;AvFi/TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwF1/TA;AxF4/TA;AwF5gUA;AxF8gUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwFzgUA;AxF2gUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyFphUA;AzFshUA;AyFtiUA;AzFwiUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyFniUA;AzFqiUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0F9iUA;A1FgjUA;A0FhkUA;A1FkkUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0F7jUA;A1F+jUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2FxkUA;A3F0kUA;A2F1lUA;A3F4lUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2FvlUA;A3FylUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4FlmUA;A5FomUA;A4FpnUA;A5FsnUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4FjnUA;A5FmnUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6F5nUA;A7F8nUA;A6F9oUA;A7FgpUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6F3oUA;A7F6oUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8FtpUA;A9FwpUA;A8FxqUA;A9F0qUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8FrqUA;A9FuqUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+FhrUA;A/FkrUA;A+FlsUA;A/FosUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+F/rUA;A/FisUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgG1sUA;AhG4sUA;AgG5tUA;AhG8tUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgGztUA;AhG2tUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiGpuUA;AjGsuUA;AiGtvUA;AjGwvUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiGnvUA;AjGqvUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkG9vUA;AlGgwUA;AkGhxUA;AlGkxUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkG7wUA;AlG+wUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmGxxUA;AnG0xUA;AmG1yUA;AnG4yUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmGvyUA;AnGyyUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoGlzUA;ApGozUA;AoGnzUA;ApGqzUA;AoGpzUA;ApGszUA;AoGrzUA;ApGuzUA;AACA;AACA;AACA;AACA;AoGzzUA;ApG2zUA;AACA;AACA;AACA;AACA;AACA;AoG7zUE;ApG+zUF;AACA;AACA;AACA;AoG7zUE;AAAyC;ApGg0U3C;AoG/zUI;AAAM;AAAa;AAEnB;ApGk0UJ;AACA;AACA;AoGh0UI;ApGk0UJ;AoGj0UI;AAEA;ApGk0UJ;AoGj0UI;AAEA;ApGk0UJ;AoGj0UI;AAEA;ApGk0UJ;AoGj0UI;ApGm0UJ;AoGh0UI;ApGk0UJ;AoGt1U2C;AAuBxC;AAED;ApGi0UF;AACA;AACA;AACA;AACA;AoGn0UI;ApGq0UJ;AoGp0UI;AACD;AAED;ApGq0UF;AACA;AACA;AoGr0UI;AACA;AACA;AACA;AACD;AAED;ApGs0UF;AACA;AACA;AoGt0UI;AACA;AACD;AAED;ApGu0UF;AACA;AACA;AoGv0UI;AACA;AACD;AAED;ApGw0UF;AACA;AACA;AoGx0UI;AACA;AACA;AACA;AAGA;AACD;AAED;ApGu0UF;AACA;AACA;AoGv0UI;AACA;AAOA;AACD;AAED;ApGk0UF;AACA;AACA;AACA;AACA;AoGl0UI;AACA;AACA;AAAO;AAAwD;AAA/D;AAGD;AAED;ApGo0UF;AACA;AACA;AACA;AACA;AACA;AoGp0UI;AACE;AACD;AAED;ApGq0UJ;AACA;AoGr0UI;ApGu0UJ;AoGr0UI;AACA;AACA;AACD;AAED;ApGs0UF;AACA;AACA;AACA;AACA;AoGt0UI;AAOA;AACD;AAED;ApGi0UF;AACA;AACA;AACA;AACA;AoGj0UI;AAOA;AACD;AAED;ApG4zUF;AACA;AACA;AACA;AACA;AACA;AoG5zUI;AAMA;AACD;ApGyzUH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqGj+UA;ArGm+UA;AqG99UA;ArGg+UA;AqG/9UA;ArGi+UA;AqGh+UA;ArGk+UA;AqGj+UA;ArGm+UA;AqGl+UA;ArGo+UA;AqGn+UA;ArGq+UA;AqGp+UA;ArGs+UA;AqGr+UA;ArGu+UA;AqGt+UA;ArGw+UA;AqGv+UA;ArGy+UA;AACA;AACA;AACA;AACA;AqGx+UA;AAEA;AACA;AAEA;ArGw+UA;AqGv+UA;AAEA;ArGw+UA;AACA;AACA;AACA;AqGv+UA;AACE;ArGy+UF;AqGx+UE;AACE;AACA;AACD;ArG0+UH;AqGz+UE;AACD;AAED;ArG0+UA;AACA;AACA;AACA;AACA;AqG1+UO;AACL;AACE;AACD;ArG4+UH;AqG3+UE;AACD;AAED;ArG4+UA;AACA;AACA;AACA;AACA;AqG5+UA;AACE;AACA;ArG8+UF;AqG7+UE;AACA;ArG++UF;AqG9+UE;AACE;AAID;ArG6+UH;AqG5+UE;AACD;AAED;ArG6+UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqG/+UE;ArGi/UF;AACA;AACA;AqG/+UE;AAA4B;ArGk/U9B;AqGj/UI;AACA;AAEA;ArGk/UJ;AqGj/UI;AAEA;ArGk/UJ;AqGj/UI;AAEA;ArGk/UJ;AqGj/UI;AAEA;ArGk/UJ;AqGj/UI;AAEA;ArGk/UJ;AqGj/UI;AAEA;ArGk/UJ;AqGj/UI;AAEA;ArGk/UJ;AqGj/UI;ArGm/UJ;AqGj/UI;AACE;AACD;ArGm/UL;AqGj/UI;ArGm/UJ;AqGl/UI;AACE;AACD;AACF;AAED;ArGm/UF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqGr/UI;AACE;AACD;ArGu/UL;AqGt/UI;AACD;AAED;ArGu/UF;AACA;AACA;AACA;AACA;AACA;AqGv/UI;AACE;ArGy/UN;AqGx/UM;AACE;AACD;AACF;AACF;AAED;ArGy/UF;AACA;AACA;AqGz/UI;AACA;ArG2/UJ;AqGx/UI;AACE;AACD;ArG0/UL;AACA;AqGx/UI;AACE;AACD;AACD;ArG0/UJ;AqGx/UI;AACE;AACD;ArG0/UL;AqGz/UI;AACE;AACE;AACD;AACF;AACF;AAED;ArG0/UF;AACA;AACA;AACA;AACA;AqG1/UI;AACD;AAED;ArG2/UF;AACA;AACA;AACA;AACA;AACA;AACA;AqG1/UE;ArG4/UF;AACA;AACA;AACA;AACA;AACA;AACA;AqG3/UE;ArG6/UF;AACA;AACA;AACA;AACA;AACA;AACA;AqG5/UE;ArG8/UF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqG7/UE;ArG+/UF;AACA;AACA;AACA;AACA;AACA;AACA;AqG9/UE;ArGggVF;AACA;AACA;AACA;AACA;AqGhgVI;AACE;AACD;ArGkgVL;AqGjgVI;AACD;AAED;ArGkgVF;AACA;AACA;AACA;AACA;AqGlgVI;AACA;ArGogVJ;AqGngVI;AACE;AACE;AACD;AACF;AACF;AAED;ArGogVF;AACA;AACA;AACA;AACA;AACA;AqGpgVI;AACE;AACD;AACF;AAED;ArGqgVF;AACA;AACA;AACA;AACA;AACA;AqGrgVI;AACD;AAED;ArGsgVF;AACA;AACA;AqGtgVI;AACE;AACD;AACF;AAED;ArGugVF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqGvgVI;AACA;AAOD;AAED;ArGkgVF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqG5/UI;AACA;AAQD;AAED;ArGs/UF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqG/+UI;AAKE;AACA;ArG6+UN;AqG5+UM;AACE;AACA;AACD;ArG8+UP;AqG7+UM;AACE;ArG++UR;AqG9+UQ;AACE;AAIA;AACD;ArG6+UT;AqG5+UQ;AACE;AACA;AAIA;AACD;ArG2+UT;AqG1+UQ;AACA;AAEA;AACA;AACA;AACA;ArG2+UR;AqG1+UQ;AAME;AAIA;AACD;ArGo+UT;AqGn+UQ;AACA;AACA;ArGq+UR;AqGp+UQ;ArGs+UR;AqGr+UQ;AAUD;ArG89UP;AqG79UM;AACE;AAA8B;AAAA;AAC/B;AACF;ArGi+UL;AqGh+UI;AACA;AAQD;AAED;ArG09UF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqGp9UI;ArGs9UJ;AqGr9UI;AACE;AACD;ArGu9UL;AqGr9UI;ArGu9UJ;AqGt9UI;AACA;ArGw9UJ;AqGr9UI;AACE;AACA;AACE;AACA;AACD;AACF;AACC;AACD;ArGu9UL;AACA;AqGr9UI;AACE;ArGu9UN;AqGt9UM;ArGw9UN;AqGr9UM;AACA;AACA;ArGu9UN;AqGp9UM;ArGs9UN;AqGr9UM;AACE;ArGu9UR;AqGt9UQ;ArGw9UR;AqGr9UQ;ArGu9UR;AqGp9UQ;ArGs9UR;AqGr9UQ;ArGu9UR;AqGt9UQ;AAGI;AACA;AAFG;AAKR;AACC;AACA;AACA;AACD;ArGq9UP;AqGp9UM;ArGs9UN;AqGp9UM;AACE;AAGI;AACA;AACA;AACA;AAJG;AAOP;AAKA;AAKD;ArG28UP;AqG18UM;AACD;AAED;AACA;AACE;ArG28UN;AqG18UM;AACE;AACD;AACF;ArG48UL;AqGz8UI;AACE;AACA;AACA;AACA;AACA;AAA4C;AAAA;AAC7C;ArG68UL;AACA;AqG38UI;AACA;AACE;AACD;AACF;AAED;ArG48UF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqG38UE;ArG68UF;AACA;AACA;AACA;AACA;AACA;AACA;AqG58UE;ArG88UF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqG/8UA;ArGi9UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqGv9UE;ArGy9UF;AACA;AqGv9UE;AAAoB;ArG09UtB;AqGz9UI;AAAM;AAAa;AAEnB;ArG49UJ;AqG39UI;AAEA;ArG49UJ;AqG39UI;AAEA;ArG49UJ;AqG39UI;AAEA;ArG49UJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqG39UI;AAEA;ArG49UJ;AqG39UI;ArG69UJ;AqG39UI;AACE;AACA;ArG69UN;AqG59UM;ArG89UN;AqG39UM;AAGD;AACC;AACA;ArG29UN;AqG19UM;AAEI;ArG29UV;AqG19UU;AACE;AACD;ArG49UX;AqG39UU;AACD;AAEJ;ArG49UL;AqG1gVsB;AA+CnB;AAED;ArG69UF;AACA;AACA;AACA;AACA;AqG/9UI;ArGi+UJ;AqGh+UI;AACE;AACA;AACD;AACF;AAED;ArGi+UF;AACA;AACA;AqGj+UI;AACD;AAED;ArGk+UF;AACA;AACA;AqGl+UI;AACD;AAED;ArGm+UF;AACA;AACA;AqGn+UI;AACD;AAED;ArGo+UF;AACA;AACA;AqGp+UI;AACA;AAGA;AACD;AAED;ArGm+UF;AACA;AACA;AqGn+UI;AACA;AACA;AAGA;AACD;AAED;ArGk+UF;AACA;AACA;AqGn+U6B;ArGq+U7B;AqGp+UI;AAEA;AACA;ArGq+UJ;AqGp+UI;AACE;AACE;AACA;AACA;AACA;AAJe;AAMjB;AACD;AACC;AACA;AACD;ArGs+UL;AqGr+UI;AACA;AACA;AACE;ArGu+UN;AqGt+UM;AACE;ArGw+UR;AqGv+UQ;AACE;AACD;ArGy+UT;AqGx+UQ;AACE;ArG0+UV;AqGz+UU;AACD;AACF;AACF;AACF;AAED;ArG0+UF;AACA;AACA;AqG1+UI;AACE;AACD;ArG4+UL;AqG3+UI;AACA;AACA;AACD;AAED;ArG4+UF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqG5+UI;AACE;AACD;ArG8+UL;AqG7+UI;AACA;ArG++UJ;AqG9+UI;AACE;AAAO;AAA4B;AAAnC;AACD;ArGm/UL;AqGl/UI;AACD;AAED;ArGm/UF;AACA;AACA;AACA;AACA;AACA;AqGn/UI;AACE;AACD;ArGq/UL;AqGp/UI;AACD;AAED;ArGq/UF;AACA;AACA;AACA;AACA;AACA;AqGt/UgC;ArGw/UhC;AqGv/UI;AAD4B;ArG2/UhC;AqGx/UI;AACE;AAEG;AAAD;AAEH;ArGy/UL;AACA;AqGv/UI;AAEG;AAAD;ArGy/UN;AqGv/UI;AACE;AACD;ArGy/UL;AqGx/UI;AACA;ArG0/UJ;AqGx/UI;AACA;AACD;AAED;ArGy/UF;AACA;AACA;AACA;AACA;AACA;AqG1/UuC;ArG4/UvC;AqG5/UuC;ArG8/UvC;AqG5/UI;AACE;AACD;ArG8/UL;AACA;AqG5/UI;AACE;AACD;ArG8/UL;AqG7/UI;AACE;AACD;ArG+/UL;AqG9/UI;AAAmB;AAAA;AACpB;AAED;ArGigVF;AACA;AACA;AACA;AACA;AACA;AqGlgVkC;ArGogVlC;AqGngVI;AACE;AAEA;ArGogVN;AqGngVM;ArGqgVN;AqG//UM;AAKD;AACF;AAED;ArG4/UF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqG5/UI;AACA;AACA;ArG8/UJ;AqG7/UI;AACE;AACA;ArG+/UN;AqG9/UM;AACE;AACD;AACF;AACF;ArGggVH;AACA;AACA;AqG//UA;ArGigVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqGvgVE;ArGygVF;AACA;AACA;AqGvgVE;AAA2B;ArG0gV7B;AqGzgVI;AAEA;ArG0gVJ;AqGzgVI;AAEA;ArG0gVJ;AqGzgVI;ArG2gVJ;AqGzgVI;ArG2gVJ;AqGphV6B;AAe1B;AAED;ArGugVF;AACA;AACA;AACA;AACA;AqGzgVI;AACD;AAED;ArG0gVF;AACA;AACA;AqG1gVI;AACD;AAED;ArG2gVF;AACA;AACA;AqG3gVI;AACD;AAED;ArG4gVF;AACA;AACA;AqG5gVI;AACA;AACD;AAED;ArG6gVF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqG7gVI;AACA;AACD;AAED;ArG8gVF;AACA;AACA;AqG9gVI;AACD;AAED;ArG+gVF;AACA;AACA;AqG/gVI;AACE;AACD;ArGihVL;AqGhhVI;AACD;AAED;ArGihVF;AACA;AACA;AACA;AACA;AACA;AqGjhVI;AACE;AACD;ArGmhVL;AqGlhVI;AACD;ArGohVH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsGp6WA;AtGs6WA;AsGr6WA;AtGu6WA;AsGt6WA;AtGw6WA;AsGv6WA;AtGy6WA;AsG57WA;AtG87WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsGv7WA;AtGy7WA;AACA;AACA;AACA;AACA;AACA;AACA;AsGz7WE;AtG27WF;AACA;AACA;AsGz7WE;AAAkC;AtG47WpC;AsG37WI;AACA;AAEA;AtG47WJ;AACA;AACA;AACA;AsG37WI;AACE;AACA;AACA;AACA;AACA;AACA;AANgB;AASlB;AtG47WJ;AsG37WI;AACE;AACD;AAED;AtG47WJ;AACA;AACA;AACA;AACA;AACA;AsG57WI;AAEA;AtG67WJ;AsG57WI;AAEA;AtG67WJ;AsG57WI;AAEA;AAEA;AtG47WJ;AsG37WI;AAEA;AtG47WJ;AsG37WI;AAEA;AACE;AACD;AAED;AtG27WJ;AsG17WI;AAEA;AtG27WJ;AsG17WI;AAGA;AtG07WJ;AsGx7WI;AtG07WJ;AsGz7WI;AAEA;AtG07WJ;AsGz7WI;AAEA;AtG07WJ;AsGz7WI;AAEA;AtG07WJ;AsGz7WI;AAEA;AtG07WJ;AsGz7WI;AAEA;AtG07WJ;AsGz7WI;AAEA;AtG07WJ;AsGz7WI;AAEA;AtG07WJ;AsGz7WI;AAEA;AtG07WJ;AsGz7WI;AAEA;AtG07WJ;AsGz7WI;AAEA;AtG07WJ;AsGz7WI;AAEA;AtG07WJ;AsGz7WI;AAEA;AtG07WJ;AsGz7WI;AAEA;AtG07WJ;AsGz7WI;AAEA;AtG07WJ;AsGz7WI;AAEA;AtG07WJ;AsGz7WI;AAEA;AtG07WJ;AsGz7WI;AAEA;AtG07WJ;AsGz7WI;AAEA;AtG07WJ;AACA;AACA;AACA;AsGz7WI;AAEA;AtG07WJ;AsGz7WI;AAEA;AtG07WJ;AsGz7WI;AACD;AAED;AtG07WF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsG77WW;AtG+7WX;AsG97WI;AAIA;AACA;AACA;AAEA;AACE;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAED;AtG27WF;AACA;AACA;AACA;AACA;AsG37WI;AACE;AACD;AACF;AAED;AtG47WF;AACA;AACA;AsG57WI;AACE;AACA;AACD;AtG87WL;AsG77WI;AACE;AACA;AACD;AtG+7WL;AsG97WI;AACE;AACD;AACD;AACA;AtGg8WJ;AsG/7WI;AACE;AACA;AACD;AACF;AAED;AtGg8WF;AACA;AACA;AACA;AACA;AACA;AACA;AsGh8WI;AACD;AAED;AtGi8WF;AACA;AACA;AACA;AACA;AACA;AACA;AsGj8WI;AACE;AACD;AtGm8WL;AsGl8WI;AACE;AACA;AACD;AACF;AAED;AtGm8WF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsGn8WI;AACA;AACD;AAED;AtGo8WF;AACA;AACA;AACA;AACA;AACA;AACA;AsGp8WI;AACA;AACD;AAED;AtGq8WF;AACA;AACA;AACA;AACA;AACA;AsGr8WI;AACD;AAED;AtGs8WF;AACA;AACA;AACA;AACA;AsGt8WI;AACD;AAED;AtGu8WF;AACA;AACA;AACA;AACA;AACA;AACA;AsGv8WI;AACE;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAdU;AAgBb;AAED;AtGs8WF;AACA;AACA;AACA;AACA;AACA;AsGv8WsB;AtGy8WtB;AsGx8WI;AACA;AACE;AACE;AACA;AACD;AtG08WP;AsGz8WM;AACD;AtG28WL;AsG18WI;AACE;AACD;AAGD;AtG08WJ;AACA;AsG18WI;AtG48WJ;AsG18WI;AACE;AACE;AACA;AACD;AtG48WP;AsG38WM;AACE;AACA;AACA;AtG68WR;AsG58WQ;AACE;AACA;AACD;AACF;AACC;AACA;AACA;AACA;AACE;AAEA;AtG68WV;AsG58WU;AACD;AACF;AACF;AACC;AACA;AtG88WN;AsG78WM;AACE;AACE;AtG+8WV;AsG98WU;AACD;AACF;AACF;AACC;AACA;AACD;AACF;AAED;AtG+8WF;AACA;AACA;AACA;AACA;AACA;AACA;AsG/8WI;AAMA;AtG48WJ;AsG38WI;AACE;AACD;AAED;AtG48WJ;AACA;AsG58WI;AACE;AACD;AtG88WL;AsG78WI;AAID;AAED;AtG28WF;AACA;AACA;AACA;AACA;AACA;AACA;AsG38WI;AAKA;AtGy8WJ;AsGv8WI;AACE;AACA;AAEA;AtGw8WN;AsGv8WM;AACE;AACD;AACF;AtGy8WL;AsGv8WI;AACA;AAGA;AtGu8WJ;AsGt8WI;AACE;AtGw8WN;AsGv8WM;AACE;AACA;AACA;AACA;AAID;AACC;AACA;AACA;AACD;AtGs8WP;AsGr8WM;AACA;AAIA;AAIA;AACD;AACC;AACA;AAEA;AtGg8WN;AsG17WM;AACA;AACA;AtG47WN;AsG37WM;AACD;AtG67WL;AsG37WI;AAOD;AAED;AtGs7WF;AACA;AACA;AACA;AACA;AACA;AACA;AsGt7WI;AACE;AACA;AACD;AACF;AAED;AtGu7WF;AACA;AACA;AACA;AACA;AACA;AACA;AsGv7WI;AACD;AAED;AtGw7WF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsGx7WI;AAIA;AAIA;AACA;AAKD;AtGg7WH;AACA;AACA;AsG/6WA;AtGi7WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsGn7WA;AACE;AACD;AtGq7WD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuGz7XA;AvG27XA;AuG17XA;AvG47XA;AuG37XA;AvG67XA;AuG57XA;AvG87XA;AuGj9XA;AvGm9XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuG58XA;AACA;AACO;AACL;AACA;AACA;AACA;AAJuB;AAOzB;AvG68XA;AACA;AuG78XO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AA/ByB;AAkC3B;AvG08XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuG38XO;AACL;AAMD;AAED;AvGu8XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuGv8XO;AAKL;AAFA;AAEA;AvGu8XF;AuGv8XE;AADA;AACA;AvG28XF;AuG18XE;AACA;AACA;AACA;AACA;AACD;AAED;AvG28XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuG38XO;AACL;AACE;AACD;AvG68XH;AuG58XE;AACA;AvG88XF;AuG78XE;AACE;AACD;AACC;AACA;AACD;AACF;AAED;AvG88XA;AACA;AACA;AACA;AACA;AACA;AuG98XO;AACL;AAKD;AAED;AvG28XA;AACA;AuG38XO;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AvG48XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwG7lYA;AxG+lYA;AwG9lYA;AxGgmYA;AwG/lYA;AxGimYA;AwGnnYA;AxGqnYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwG9mYA;AAEA;AxG+mYA;AACA;AACA;AACA;AwG9mYA;AACE;AACA;AACA;AACA;AAJiB;AAOnB;AxG+mYA;AACA;AACA;AACA;AACA;AACA;AACA;AwG9mYA;AAAkC;AAAA;AxGknYlC;AACA;AwGhnYE;AACD;AAED;AxGinYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwGjnYO;AACL;AACA;AACA;AxGmnYF;AwGlnYE;AACE;AACE;AACA;AACA;AACA;AACD;AACC;AACA;AACA;AACA;AACD;AxGonYL;AwGnnYI;AACD;AxGqnYH;AwGpnYE;AACD;AAED;AxGqnYA;AACA;AACA;AACA;AACA;AACA;AACA;AwGrnYO;AACL;AACE;AxGunYJ;AwGtnYI;AACE;AACE;AACD;AxGwnYP;AwGvnYM;AACD;AxGynYL;AwGxnYI;AACD;AxG0nYH;AwGznYE;AACD;AAED;AxG0nYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwG1nYO;AACL;AACE;AxG4nYJ;AwG3nYI;AACE;AACD;AACF;AAED;AACA;AACA;AxG4nYF;AACA;AwG5nYE;AACD;AxG8nYD;AACA;AACA;AACA;AACA;AACA;AACA;AyGxvYA;AzG0vYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyGxvYA;AzG0vYA;AACA;AACA;AyGxvYO;AACL;AzG0vYF;AACA;AyGxvYE;AzG0vYF;AyGxvYE;AzG0vYF;AACA;AyGxvYE;AzG0vYF;AyGxvYE;AzG0vYF;AACA;AACA;AyGxvYE;AzG0vYF;AyGxvYE;AzG0vYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyGxvYE;AzG0vYF;AyGxvYE;AzG0vYF;AACA;AACA;AACA;AyGxvYE;AzG0vYF;AyGxvYE;AzG0vYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyGxvYE;AzG0vYF;AyGxvYE;AzG0vYF;AACA;AyGxvYE;AArD2B;AzGgzY7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0G30YA;A1G60YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0G30YA;A1G60YA;AACA;AACA;AACA;AACA;AACA;A0G30YA;AAEA;AAKA;AAKA;A1Go0YA;A0Gn0YO;AACL;AACA;AACA;AACA;A1Gq0YF;A0Gp0YE;A1Gs0YF;AACA;A0Gp0YE;AAEA;AACA;AAEA;A1Go0YF;A0Gn0YE;A1Gq0YF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Gn0YE;AAvBkB;A1G61YpB;A0Gh0YO;AACL;AADoB;A1Go0YtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2G54YA;A3G84YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2G34YA;A3G64YA;A2G34YA;A3G64YA;AACA;AACA;A2G34YO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AAPkC;A3Gq5YpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Gr6YA;A5Gu6YA;A4Gp6YA;A5Gs6YA;A4Gr6YA;A5Gu6YA;A4G37YA;A5G67YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Gr7YA;A5Gu7YA;AACA;AACA;AACA;AACA;AACA;A4Gr7YO;AAA8D;AAAtB;AAAsB;A5G07YrE;A4Gz7YE;AAEI;AACE;AACD;A5G07YP;A4Gz7YM;AAAwC;AAAuB;AAChE;AAEJ;AAED;A5G27YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4G37YO;AACL;AAEI;AACE;AACD;A5G47YP;A4G37YM;AACE;AAAuB;AAE1B;AAEJ;AAED;A5G27YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4G37YO;AACL;AACA;AAEI;AACE;AACD;A5G47YP;A4G37YM;AACE;AAAuB;AAE1B;AAEJ;AAED;A5G27YA;AACA;AACA;AACA;AACA;AACA;A4G37YO;AACL;A5G67YF;A4G57YE;A5G87YF;A4G17YE;AACE;AACD;AAGD;A5G07YF;AACA;A4G17YE;AACE;AAIA;AACD;A5Gy7YH;AACA;A4Gv7YE;A5Gy7YF;A4Gp7YE;AACE;AACD;A5Gs7YH;A4Gr7YE;AACD;A5Gu7YD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6GpiZA;A7GsiZA;A6GriZA;A7GuiZA;A6GjiZA;A7GmiZA;A6GliZA;A7GoiZA;A6G5jZA;A7G8jZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6GjjZA;AAEA;A7GkjZA;A6GjjZO;AACL;AACA;AACA;AAHsB;AAMxB;A7GkjZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6GnjZO;AACL;A7GqjZF;A6GpjZE;AACE;AACD;A7GsjZH;A6GrjZE;A7GujZF;A6GtjZE;AACE;AACA;A7GwjZJ;A6GvjZI;AACE;AACD;A7GyjZL;A6GxjZI;AACE;AACA;AACD;AACF;A7G0jZH;A6GzjZE;AACD;AAED;A7G0jZA;AACA;AACA;AACA;AACA;AACA;AACA;A6G1jZA;AACE;AACE;AACD;AACC;AACA;AACA;AACA;AACD;AACF;AAED;A7G2jZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6G3jZO;AAAmE;AAAd;AAAc;A7GgkZ1E;A6G/jZE;AACA;A7GikZF;A6G/jZE;AACE;AACD;AACC;AAAS;AAAuB;AACjC;A7GmkZH;A6GlkZE;AACD;AAED;A7GmkZA;AACA;AACA;AACA;AACA;AACA;A6GnkZO;AACL;AAEA;AACA;AACA;AACA;A7GokZF;A6GhkZE;AACE;AACA;A7GkkZJ;A6GhkZI;A7GkkZJ;A6GhkZI;AACE;AACD;AACC;AACA;AACA;AACA;AACD;AACF;A7GkkZH;A6GhkZE;AACE;AACA;AACA;A7GkkZJ;A6GjkZI;AACE;A7GmkZN;A6GjkZM;A7GmkZN;A6GlkZM;AACE;AACA;AACA;AACD;AACF;AACF;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;A7GkkZF;AACA;A6GlkZE;AACD;AAED;A7GmkZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6GnkZA;AACE;AACA;AACA;AACA;AACE;AACA;AACA;AACD;A7GqkZH;A6GpkZE;A7GskZF;A6G7jZE;AACE;AACD;AAEC;AACA;AACD;AACF;AAED;A7G6jZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6G7jZA;AACE;AACE;AACD;A7G+jZH;A6G7jZE;AACD;AAED;A7G8jZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6G9jZA;AACE;AACE;AAKA;AACD;A7G4jZH;A6G3jZE;AAIA;AACA;AACA;AAKD;AAED;A7GqjZA;AACA;AACA;AACA;AACA;AACA;A6GrjZA;AACE;AACA;A7GujZF;A6GtjZE;AACE;AACA;AACD;A7GwjZH;A6GvjZE;AACD;A7GyjZD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8Gt0ZA;A9Gw0ZA;A8Gv0ZA;A9Gy0ZA;A8G11ZA;A9G41ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8Gv1ZA;A9Gy1ZA;AACA;AACA;AACA;AACA;A8Gv1ZO;AACL;AACD;AAED;A9Gw1ZA;AACA;AACA;AACA;A8Gx1ZA;AAEA;A9Gy1ZA;AACA;AACA;AACA;A8Gx1ZO;AACL;AACD;AAED;A9Gy1ZA;AACA;AACA;AACA;AACA;AACA;A8Gz1ZO;AACL;AACE;AACD;A9G21ZH;A8Gz1ZE;AACD;AAED;A9G01ZA;AACA;AACA;AACA;AACA;AACA;A8G11ZA;AACE;AACE;AACA;AACA;AACA;AAEA;A9G21ZJ;A8G11ZI;AAAmB;AAAO;AAC3B;AACC;AACD;AACF;AAED;A9G61ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8G71ZO;AACL;AACD;AAED;A9G81ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8G91ZO;AACL;AACD;AAED;A9G+1ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8G/1ZO;AACL;A9Gi2ZF;A8G/1ZE;AACA;AACD;A9Gi2ZD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+GngaA;A/GqgaA;A+GpgaA;A/GsgaA;A+GjgaA;A/GmgaA;A+GlgaA;A/GogaA;A+GngaA;A/GqgaA;A+GpgaA;A/GsgaA;A+G/haA;A/GiiaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+GnhaA;AACE;AACA;AACA;AACA;AACA;AACA;AANwB;AAQ1B;AAEA;A/GohaA;A+GnhaO;AAEP;A/GohaA;AACA;A+GphaO;AAEP;A/GqhaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+GthaO;AACL;AACE;AACA;AACD;AACD;A/GwhaF;AACA;A+GxhaE;A/G0haF;A+GzhaE;AACE;AACA;AACE;AACE;AACA;AACD;AACF;AACD;AAA0B;AAAD;AAC1B;AACC;AACA;AACE;AACE;AACA;AACD;AACF;AAAE;AAAmB;AACvB;AACF;AAED;A/G8haA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+G9haO;AACL;AACE;AACD;AACF;AAED;A/G+haA;AACA;AACA;AACA;AACA;AACA;A+G/haO;AACL;AAAkC;AAAA;AACnC;AAED;A/GkiaA;AACA;AACA;AACA;AACA;AACA;A+GliaO;AACL;AAA0B;AAAA;AAC3B;AAED;A/GqiaA;AACA;AACA;AACA;AACA;A+GriaO;AACL;AACE;AACD;AACF;AAED;A/GsiaA;AACA;AACA;AACA;AACA;A+GtiaO;AACL;AACE;AACD;AACF;AAED;A/GuiaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+GviaO;AACL;A/GyiaF;A+GxiaE;AACE;AACD;A/G0iaH;A+GziaE;AACD;AAED;A/G0iaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+G1iaO;AACL;AACA;AACD;AAED;A/G2iaA;AACA;AACA;AACA;AACA;AACA;AACA;A+G3iaO;AACL;AACE;AACD;A/G6iaH;A+G5iaE;AACD;AAED;A/G6iaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+G7iaO;AACL;AACA;AACD;AAED;A/G8iaA;AACA;AACA;AACA;AACA;AACA;AACA;A+G9iaO;AACL;A/GgjaF;A+G/iaE;AACE;AACD;A/GijaH;AACA;A+G/iaE;A/GijaF;A+GhjaE;AACE;A/GkjaJ;A+GjjaI;AACE;AACD;AACC;AACD;AACF;A/GmjaH;A+GljaE;AACD;AAED;A/GmjaA;AACA;AACA;AACA;AACA;AACA;A+GnjaO;AACL;AACE;AACA;AACD;A/GqjaH;A+GpjaE;A/GsjaF;A+GpjaE;A/GsjaF;A+GrjaE;AACD;AAED;A/GsjaA;AACA;AACA;AACA;AACA;AACA;A+GtjaO;AACL;AACA;AACE;AACD;AAED;A/GujaF;AACA;A+GvjaE;AACE;AACD;A/GyjaH;A+GxjaE;AACoB;AAAwB;AAG7C;AAED;A/GwjaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+GxjaO;AACL;AACE;AACE;AACD;AACF;A/G0jaH;A+GzjaE;AACD;AAED;A/G0jaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+G1jaO;AACL;AACE;AACE;AACD;AACF;A/G4jaH;A+G3jaE;AACD;AAED;A/G4jaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+G5jaO;AACL;AACE;AACD;A/G8jaH;A+G5jaE;AACE;AACD;AACF;AAED;A/G6jaA;AACA;AACA;AACA;AACA;AACA;AACA;A+G7jaO;AACL;A/G+jaF;A+G9jaE;AAKE;AACE;AACD;AACF;A/G4jaH;A+G3jaE;AACD;AAED;A/G4jaA;AACA;AACA;AACA;AACA;AACA;AACA;A+G5jaO;AACL;AACA;AACA;AACE;AACD;AACF;AAED;A/G6jaA;AACA;AACA;AACA;AACA;AACA;AACA;A+G7jaO;AACL;AAKE;AACE;AACD;AACF;A/G2jaH;A+G1jaE;AACD;AAED;A/G2jaA;AACA;AACA;AACA;AACA;AACA;AACA;A+G3jaO;AACL;A/G6jaF;A+G5jaE;AAKE;AACE;AACD;AACF;A/G0jaH;A+GzjaE;AACD;AAED;A/G0jaA;AACA;AACA;AACA;AACA;AACA;AACA;A+G1jaO;AACL;AAKE;AACE;AACD;AACF;A/GwjaH;A+GvjaE;AACD;AAED;A/GwjaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+GxjaO;AACL;A/G0jaF;A+GzjaE;AACE;AACE;AACD;AACF;A/G2jaH;A+G1jaE;AACD;AAED;A/G2jaA;AACA;AACA;AACA;AACA;AACA;AACA;A+G3jaO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;A/G+jaA;AACA;AACA;AACA;AACA;AACA;AACA;A+G/jaO;AACL;AACA;AACE;AACD;AACF;AAED;A/GgkaA;AACA;AACA;AACA;AACA;AACA;AACA;A+GhkaO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;A/GokaA;AACA;AACA;AACA;AACA;AACA;AACA;A+GpkaO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;A/GwkaA;AACA;AACA;AACA;AACA;AACA;AACA;A+GxkaO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;A/G4kaA;AACA;AACA;AACA;AACA;AACA;AACA;A+G5kaO;AACL;A/G8kaF;A+GxkaE;AACE;AACD;A/G0kaH;A+GzkaE;AACD;AAED;A/G0kaA;AACA;AACA;AACA;AACA;AACA;AACA;A+G1kaO;AACL;AACA;AAAe;AAAO;AACvB;AAED;A/G6kaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+G7kaA;AACE;AACA;AACA;AACA;AAAsB;AAAO;AAC7B;AACA;AACD;AAED;A/GglaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+GhlaO;AACL;AACE;AAAY;AAAO;AACpB;A/GolaH;AACA;A+GllaE;AACA;AACD;AAED;A/GmlaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+GnlaO;AACL;AACE;AAAY;AAAO;AAGpB;A/GqlaH;AACA;A+GnlaE;AACD;AAED;A/GolaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+GplaO;AAKL;AAA6D;AAAA;A/Gola/D;A+GrlaE;AAGA;AACA;A/GqlaF;A+GplaE;AACE;A/GslaJ;A+GrlaI;AACE;A/GulaN;A+GtlaM;AACD;AACF;A/GwlaH;A+GvlaE;AACD;AAED;A/GwlaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+GxlaO;AACL;A/G0laF;A+GzlaE;AACE;AACE;AACD;AACF;A/G2laH;A+GvlaE;AACD;AAED;A/GwlaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+GxlaO;AACL;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAED;A/GylaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+GzlaO;AAAqC;A/G4la5C;A+G1laE;AACE;AACD;AACF;AAED;A/G2laA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+G3laO;AACL;AACA;AACA;AACA;A/G6laF;A+G5laE;AACE;AACD;AACC;AACD;A/G8laH;AACA;A+G5laE;AACE;AACD;A/G8laH;A+G7laE;AACD;AAED;A/G8laA;AACA;AACA;AACA;AACA;AACA;A+G9laO;AACL;AAKD;AAED;A/G2laA;AACA;AACA;AACA;AACA;AACA;A+G3laO;AACL;AAID;AAED;A/GylaA;AACA;AACA;AACA;AACA;AACA;A+GzlaO;AACL;AAIA;AACD;AAED;A/GulaA;AACA;AACA;AACA;AACA;AACA;A+GvlaO;AACL;AACE;AACD;A/GylaH;A+GxlaE;AACD;AAED;A/GylaA;AACA;AACA;AACA;AACA;A+GzlaA;AACE;AACD;AAED;A/G0laA;AACA;AACA;AACA;AACA;AACA;A+G1laO;AACL;AACE;AAAQ;AAAO;AAChB;AAEA;AACF;AAED;A/G4laA;AACA;AACA;AACA;AACA;AACA;A+G5laO;AACL;AACD;AAED;A/G6laA;AACA;AACA;AACA;AACA;AACA;A+G7laO;AACL;AAEA;A/G8laF;A+G7laE;AAGE;AAEH;AAED;A/G2laA;AACA;AACA;AACA;AACA;AACA;AACA;A+G3laO;AACL;A/G6laF;A+G5laE;AACE;AACA;AACD;AAED;A/G6laF;AACA;A+G7laE;AACE;AACA;AACA;AACD;A/G+laH;A+G7laE;AACD;AAED;A/G8laA;AACA;AACA;AACA;AACA;AACA;A+G9laO;AACL;A/GgmaF;A+GzlaE;AACE;AACD;AACF;AAED;A/G0laA;AACA;AACA;AACA;AACA;AACA;A+G1laO;AACL;A/G4laF;A+GrlaE;AACE;AACA;AACD;A/GulaH;A+GlmawC;A/GomaxC;A+GvlaE;AACE;AACD;A/GylaH;A+GxlaE;A/G0laF;A+GnlaE;AACE;AACD;AACF;AAED;A/GolaA;AACA;AACA;AACA;AACA;AACA;AACA;A+GplaO;AAAsC;A/Gula7C;A+GrlaE;AACE;AACD;A/GulaH;A+G3la6C;A/G6la7C;A+GvlaE;AACE;AACD;A/GylaH;A+GxlaE;AAKA;AACD;AAED;A/GqlaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+GrlaO;AACL;AACD;AAED;A/GslaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+GtlaO;AACL;AACE;AACD;A/GwlaH;A+GtlaE;AACA;A/GwlaF;A+GplaE;AACE;AACD;A/GslaH;AACA;A+GplaE;AACD;AAED;A/GqlaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+GrlaO;AACL;AACA;A/GulaF;A+GrlaE;AACE;AACE;AACD;AACC;AACD;AACF;A/GulaH;A+GrlaE;AACD;AAED;A/GslaA;AACA;AACA;AACA;AACA;A+GtlaO;AAAwC;AAE7C;AAAwB;AAAO;AAC/B;AAAsC;AAAO;AAC7C;AACD;A/G4laD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgHp/bA;AhHs/bA;AgHr/bA;AhHu/bA;AgH7+bA;AhH++bA;AgH9+bA;AhHg/bA;AACA;AACA;AACA;AACA;AgHhhcA;AhHkhcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgHlgcA;AhHogcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgHlgcO;AACL;AACS;AAAA;AAEV;AAED;AhHmgcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgHngcO;AACL;AhHqgcF;AgHpgcE;AACE;AAAO;AAAkC;AAAzC;AACD;AhHygcH;AgHxgcE;AACD;AAED;AhHygcA;AACA;AACA;AACA;AACA;AACA;AgHzgcA;AACE;AACA;AACE;AACD;AhH2gcH;AgH1gcE;AACD;AAED;AhH2gcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgH3gcO;AACL;AAKc;AAAA;AACf;AAED;AhHygcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgHzgcO;AAML;AhHsgcF;AgHrgcE;AACE;AAAO;AAAkC;AAAzC;AACD;AhH0gcH;AgHzgcE;AACA;AAEQ;AAAA;AAIJ;AACA;AACA;AACE;AACD;AACC;AACD;AhHwgcP;AgHvgcM;AACD;AACJ;AAED;AhHwgcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgHxgcO;AAKL;AhHsgcF;AgHrgcE;AACE;AAAO;AAAkC;AAAzC;AACD;AhH0gcH;AgHzgcE;AACA;AhH2gcF;AgHzgcE;AACE;AACD;AACC;AACA;AACD;AACF;AAED;AhH0gcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgH1gcA;AACE;AAAO;AAAwB;AAA/B;AAUD;AAED;AhHqgcA;AACA;AACA;AACA;AACA;AACA;AgHrgcO;AACL;AACA;AACE;AACD;AhHugcH;AgHtgcE;AAEA;AhHugcF;AgHtgcE;AhHwgcF;AgHrgcE;AACE;AACA;AAGA;AACD;AhHqgcH;AgHpgcE;AACD;AAED;AhHqgcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgHrgcO;AACL;AACE;AACD;AACF;AAED;AhHsgcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgHtgcA;AACE;AACD;AAED;AhHugcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgHvgcA;AACE;AhHygcF;AACA;AACA;AACA;AACA;AACA;AgHtgcE;AACA;AACA;AACE;AACD;AhHwgcH;AgHtgcE;AACA;AAAO;AAAkC;AAAzC;AAID;AAED;AhHugcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgHvgcA;AACE;AAEQ;AAAA;AAEJ;AACA;AACA;AACE;AACD;AACC;AACD;AhHwgcP;AgHvgcM;AACD;AACJ;AhHygcD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiH/zcA;AjHi0cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiH/zcA;AjHi0cA;AACA;AACA;AACA;AiH/zcA;AAEA;AjHg0cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiH/zcO;AAML;AACA;AACA;AjH4zcF;AACA;AACA;AiH3zcE;AjH6zcF;AiH3zcE;AACE;AACE;AACD;AACC;AACA;AjH6zcN;AiH5zcM;AACD;AACF;AjH8zcH;AiH7zcE;AACA;AjH+zcF;AiH9zcE;AACE;AACD;AjHg0cH;AiH/zcE;AAKA;AACE;AACE;AAKD;AjHyzcL;AACA;AiHxzcI;AACA;AACA;AACD;AACF;AAED;AjHyzcA;AACA;AACA;AACA;AACA;AACA;AACA;AiHzzcO;AACL;AACA;AACE;AACD;AjH2zcH;AiHzzcE;AjH2zcF;AiH1zcE;AACE;AACA;AACE;AACE;AACD;AjH4zcP;AiH/zcoB;AAKhB;AACA;AACD;AAEA;AjH4zcH;AiH3zcE;AACD;AAED;AjH4zcA;AACA;AACA;AACA;AiH5zcO;AACL;AACD;AjH8zcD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkHj7cA;AlHm7cA;AkHl7cA;AlHo7cA;AkHn7cA;AlHq7cA;AkHv8cA;AlHy8cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkHn8cA;AACA;AAEA;AlHo8cA;AkHn8cO;AAEP;AlHo8cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkHr8cO;AACL;AAAkB;AAAiC;AAAC;AAAD;AACnD;AAEA;AlH08cF;AkHz8cE;AACE;AACD;AACC;AACA;AACA;AAMA;AACD;AACF;AAED;AlHq8cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkHr8cO;AACL;AAMD;AAED;AlHi8cA;AACA;AACA;AACA;AACA;AACA;AkHj8cO;AACL;AAAO;AAA6C;AAApD;AACD;AAED;AlHq8cA;AACA;AACA;AACA;AACA;AACA;AkHr8cO;AACL;AAAO;AAA6C;AAApD;AACD;AAED;AlHy8cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkHz8cO;AACL;AACA;AAII;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAGH;AACD;AAED;AlHq8cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkHr8cO;AAML;AACA;AACE;AACD;AACD;AlHk8cF;AkHj8cE;AACE;AACD;AlHm8cH;AkHl8cE;AACD;AAED;AlHm8cA;AACA;AACA;AACA;AACA;AACA;AkHn8cO;AACL;AAKE;AACC;AAEJ;AAED;AlH+7cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkH/7cO;AACL;AACA;AlHi8cF;AkHh8cE;AACE;AACD;AlHk8cH;AkHj8cE;AlHm8cF;AkHl8cE;AAIE;AACD;AlHi8cH;AkHh8cE;AACE;AACA;AACA;AACE;AACA;AACA;AACE;AADgE;AAGnE;AACC;AACD;AlHk8cL;AACA;AkHj8cI;AACE;AACD;AlHm8cL;AkHl8cI;AAEA;AACA;AlHm8cJ;AkHl8cI;AACE;AAEO;AAAA;AlHo8cb;AkHl8cM;AACE;AACD;AACF;AlHo8cL;AkHn8cI;AACD;AAED;AAEI;AACE;AACD;AlHm8cP;AkHl8cM;AACD;AAEC;AACE;AACD;AlHm8cP;AkHl8cM;AACD;AAEJ;AAED;AlHk8cA;AACA;AACA;AACA;AACA;AACA;AkHl8cA;AACE;AACA;AACA;AACA;AACE;AAED;AAGD;AlHi8cF;AACA;AkHj8cE;AlHm8cF;AkHl8cE;AACE;AACD;AlHo8cH;AkHn8cE;AACD;AAED;AlHo8cA;AACA;AACA;AACA;AACA;AACA;AkHp8cA;AACE;AACD;AAED;AlHq8cA;AACA;AACA;AACA;AACA;AACA;AkHr8cO;AACL;AACD;AlHu8cD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmH9sdA;AnHgtdA;AmH/sdA;AnHitdA;AmHhtdA;AnHktdA;AmHjtdA;AnHmtdA;AmH7udA;AnH+udA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmH7udA;AnH+udA;AACA;AACA;AACA;AACA;AACA;AmHxudA;AACA;AAEA;AnHyudA;AmHxudA;AAEA;AnHyudA;AmHxudA;AAEA;AnHyudA;AACA;AACA;AACA;AACA;AACA;AmHxudO;AAEP;AnHyudA;AACA;AACA;AACA;AACA;AACA;AACA;AmH1udO;AACL;AACD;AAED;AnH2udA;AACA;AACA;AACA;AACA;AACA;AmH3udO;AACL;AAGD;AAED;AnH0udA;AACA;AACA;AACA;AACA;AACA;AACA;AmH1udO;AACL;AACA;AACD;AAED;AnH2udA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmH3udO;AAML;AAAwC;AAAO;AAC/C;AnH0udF;AmHzudE;AACE;AACA;AnH2udJ;AmHzudI;AACE;AACA;AACA;AnH2udN;AmHzudM;AACE;AAOD;AACF;AACF;AnHqudH;AmHpudE;AACD;AAED;AnHqudA;AACA;AACA;AACA;AACA;AACA;AACA;AmHrudO;AACL;AACE;AACD;AnHuudH;AmHtudE;AACA;AnHwudF;AmHrudE;AACE;AACE;AnHuudN;AmHtudM;AACE;AACD;AACF;AACF;AnHwudH;AACA;AmHvudE;AAKE;AACA;AnHqudJ;AmHludI;AACE;AnHoudN;AmHnudM;AACE;AACE;AACD;AACF;AACF;AACF;AnHqudH;AmHnudE;AnHqudF;AmHnudE;AAKE;AACA;AACA;AnHiudJ;AmHhudI;AACE;AnHkudN;AmHjudM;AACE;AACD;AnHmudP;AmHludM;AACE;AACD;AACF;AACF;AnHoudH;AmHnudE;AACD;AAED;AnHoudA;AACA;AACA;AACA;AACA;AACA;AACA;AmHpudO;AACL;AACD;AAED;AnHqudA;AACA;AACA;AACA;AACA;AACA;AmHrudA;AACE;AnHuudF;AmHtudE;AACE;AACE;AACD;AACF;AACC;AACD;AnHwudH;AmHvudE;AAEA;AnHwudF;AmHvudE;AACE;AACE;AACD;AnHyudL;AmHxudI;AACE;AACD;AACC;AACD;AACF;AnH0udH;AmHzudE;AACD;AAED;AnH0udA;AACA;AACA;AACA;AACA;AACA;AmH1udA;AACE;AnH4udF;AmH3udE;AACE;AACD;AnH6udH;AmH5udE;AACE;AACE;AACD;AACF;AACC;AACD;AACF;AAED;AnH6udA;AACA;AACA;AACA;AACA;AACA;AACA;AmH7udO;AACL;AACD;AAED;AnH8udA;AACA;AACA;AACA;AACA;AACA;AmH9udO;AACL;AACA;AACD;AAED;AnH+udA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmH/udA;AACE;AACA;AACD;AAED;AnHgvdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmHhvdO;AACL;AADsC;AAIxC;AnHivdA;AACA;AACA;AACA;AACA;AACA;AACA;AmHlvdA;AACE;AACA;AACD;AAED;AnHmvdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmHnvdO;AACL;AACA;AnHqvdF;AmHpvdE;AACE;AACA;AACA;AACE;AACD;AnHsvdL;AmHrvdI;AACE;AAEA;AACD;AnHsvdL;AmHpvdI;AAIE;AACA;AACD;AAGD;AACA;AnHivdJ;AACA;AmHjvdI;AAEsB;AAAO;AAC3B;AAEA;AAGA;AAED;AACF;AnH+udH;AmH9udE;AACD;AAED;AnH+udA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmH/udO;AACL;AAGD;AAED;AnH8udA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmH9udO;AACL;AACA;AACA;AACD;AnHgvdD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoHtneA;ApHwneA;AoHvneA;ApHyneA;AoHxneA;ApH0neA;AoHzneA;ApH2neA;AoH1neA;ApH4neA;AoH3neA;ApH6neA;AoH5neA;ApH8neA;AoH7neA;ApH+neA;AoH9neA;ApHgoeA;AoHxpeA;ApH0peA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoH9oeA;ApHgpeA;AACA;AACA;AoH9oeA;AAEA;ApH+oeA;AACA;AACA;AACA;AACA;AoH9oeA;AAEA;ApH+oeA;AACA;AACA;AACA;AACA;AACA;AoH9oeA;AAEA;ApH+oeA;AACA;AACA;AACA;AACA;AACA;AACA;AoH9oeA;AAA8C;ApHipe9C;AoH9oeE;AACE;AACD;ApHgpeH;AoH/oeE;AACD;AAED;ApHgpeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoHhpeA;AACE;ApHkpeF;AoHjpeE;AACE;AACD;ApHmpeH;AoHjpeE;ApHmpeF;AoHlpeE;AACE;AACD;ApHopeH;AoHnpeE;AACD;AAED;ApHopeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoHppeA;AACE;AACA;AAEA;ApHqpeF;AoHppeE;AACE;ApHspeJ;AoHrpeI;AACE;AACA;AACD;AACF;ApHupeH;AoHrpeE;AACE;AACE;AACA;AAFa;AAIf;AACD;ApHupeH;AoHrpeE;AACD;AAED;ApHspeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoHtpeA;AACE;ApHwpeF;AoHtpeE;AACE;AACD;AAGD;AACA;ApHspeF;AACA;AoHtpeE;ApHwpeF;AoHvpeE;AACE;AAD8C;ApH2pelD;AoHxpeI;AACE;AACD;AAIC;AACA;AACA;AACD;AACF;ApHupeH;AoHrpeE;AACD;AAED;ApHspeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoHtpeA;AACE;AACE;AACE;AACD;AACF;ApHwpeH;AoHvpeE;AACD;AAED;ApHwpeA;AACA;AACA;AACA;AACA;AACA;AoHxpeA;AACE;AAAuB;AAAD;ApH4pexB;AoH1peE;AACE;ApH4peJ;AoH1peI;AACE;AADqC;ApH8pe3C;AoH1peM;AACE;AACA;AACE;AACD;AACF;AACF;AACF;AACF;AAED;ApH2peA;AACA;AACA;AACA;AACA;AoH3peA;AACE;AACE;AACD;ApH6peH;AoH5peE;AACE;AACE;AACD;ApH8peL;AoH7peI;ApH+peJ;AoH7peI;AACE;AACD;ApH+peL;AoH7peI;ApH+peJ;AoHzpeI;AACE;AACD;ApH2peL;AoHzpeI;ApH2peJ;AoH1peI;AACE;AACD;AAGD;AACA;ApH0peJ;AACA;AoH1peI;ApH4peJ;AoH3peI;AACE;AACA;AACD;AACF;ApH6peH;AoH3peE;AACD;AAED;ApH4peA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoH5peO;AAQL;AACA;AAKA;AACA;AAEA;AAEA;AAMA;AACA;AAGA;ApH0oeF;AoHzoeE;AACE;ApH2oeJ;AoHxoeI;AACE;AACA;AACE;AACD;ApH0oeP;AACA;AoHxoeM;ApH0oeN;AoHzoeM;AACE;AACD;AACF;AAGD;AACA;ApHyoeJ;AACA;AoHzoeI;AACE;AACD;ApH2oeL;AoHzoeI;AACE;AACA;AACD;ApH2oeL;AoH1oeI;AACD;ApH4oeH;AoH1oeE;AAEA;AACE;AACE;ApH2oeN;AoH1oeM;AACE;AACD;AAED;ApH2oeN;AACA;AoH3oeM;AACA;AACA;AACD;AACF;AACF;AAED;ApH4oeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoH5oeO;AACL;ApH8oeF;AoH7oeE;AACE;AACD;ApH+oeH;AoH9oeE;AACE;AACE;AACA;AAII;AACE;AACD;ApH6oeX;AoH5oeU;AAAS;AAAM;AAAQ;AAAQ;AAAvB;AACT;AAGH;AACD;AACF;AACF;AAED;ApHgpeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoHhpeO;AACL;AAEI;AAA2B;AAA5B;AAKJ;AAED;ApH8oeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoH9oeO;AACL;AACE;AACD;ApHgpeH;AoH/oeE;AACA;AACA;ApHipeF;AoHhpeE;AACE;AACA;AACD;ApHkpeH;AoHjpeE;AACE;AACA;AAAW;AAAO;AACnB;AACF;AAED;ApHopeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoHppeA;AACE;AACD;AAED;ApHqpeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoHrpeO;AACL;AACE;AACE;AAEI;AAMD;AACJ;AACC;AACD;AACC;AACD;AACF;ApHipeH;AoHhpeE;AAAO;AAA4B;AAAnC;AACD;AAED;ApHopeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoHtpeE;ApHwpeF;AACA;AACA;AACA;AACA;AACA;AoHtpeE;AAAiD;ApHypenD;AoHxpeI;AACA;AACA;ApH0peJ;AoHzpeI;AACA;ApH2peJ;AoH1peI;AAEA;ApH2peJ;AoH1peI;AAII;AACA;AACA;AAAmC;AAAA;AACjC;AAA0B;AAAa;AAAd;AAC1B;ApH8peT;AoH7peQ;AACD;AAGD;AAAW;AAba;AAe3B;AAED;ApH6peF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoH/peI;AACA;AAAkC;AAAA;AAClC;AAOD;AAED;ApH4peF;AACA;AACA;AACA;AACA;AoH5peI;AACA;AACD;ApH8peH;AACA;AACA;AoH7peA;ApH+peA;AACA;AACA;AACA;AACA;AACA;AACA;AoHjqeO;AACL;ApHmqeF;AoHjqeE;AACE;AACD;ApHmqeH;AACA;AoHlqeE;AACD;AAGD;ApHkqeA;AACA;AoHlqeA;AAEA;ApHmqeA;AACA;AACA;AACA;AACA;AACA;AoHlqeO;AACL;AADgC;AAAA;ApHuqelC;AoHpqeE;AACE;AACA;ApHsqeJ;AoHrqeI;AACE;AACD;ApHuqeL;AoHtqeI;AACE;AACD;ApHwqeL;AACA;AoHvqeI;AACE;AACD;AACF;ApHyqeH;AoHxqeE;AACD;AAED;ApHyqeA;AACA;AACA;AACA;AACA;AACA;AoHzqeO;AACL;AAAqC;AAAD;AAGpC;ApH2qeF;AoH1qeE;AAEA;AACD;AAED;ApH0qeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoH1qeO;AACL;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AACD;AACC;AACA;AACD;AACF;AAED;ApH2qeA;AACA;AoH3qeO;AAEP;ApH4qeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoH7qeO;AACL;AAAO;AAA6D;AAApE;AAGD;AAED;ApH+qeA;AACA;AACA;AACA;AACA;AoH/qeO;AACL;AAID;AAED;ApH6qeA;AACA;AACA;AACA;AoH7qeO;AACL;AACA;AAID;AAED;ApH2qeA;AACA;AACA;AACA;AACA;AoH3qeO;AACL;AAMD;AAED;ApHuqeA;AACA;AACA;AACA;AACA;AoHvqeO;AACL;AACD;ApHyqeD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqHpzfA;ArHszfA;AqHrzfA;ArHuzfA;AqHtzfA;ArHwzfA;AqHlzfA;ArHozfA;AqHnzfA;ArHqzfA;AqHpzfA;ArHszfA;AqHh1fA;ArHk1fA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqHn0fA;AAEA;AAEA;AAEA;ArHk0fA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqHj0fA;AACE;ArHm0fF;AACA;AACA;AqHj0fE;AAGF;ArHi0fA;AACA;AACA;AACA;AqHh0fO;AACL;AACD;AAED;ArHi0fA;AACA;AACA;AACA;AACA;AqHj0fO;AACL;AACD;AAED;ArHk0fA;AACA;AACA;AACA;AACA;AACA;AqHl0fO;AACL;AADwC;AAAA;AAIxC;AAGI;AACD;ArHk0fL;AqHh0fE;ArHk0fF;AqHj0fE;AACA;AAEgB;AAAA;AAChB;AAEI;AACA;AAEA;AACA;ArHi0fN;AqHh0fM;AAKE;AACA;AACD;ArH8zfP;AqH5zfM;AACA;AAEA;AAEI;AACD;AAGJ;AAEJ;AAED;ArHwzfA;AACA;AACA;AACA;AqHxzfO;AACL;AACD;AAED;ArHyzfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqHzzfA;AACE;ArH2zfF;AACA;AqHzzfE;AACE;AACA;AACA;AACD;ArH2zfH;AqHzzfE;AACE;AACA;AACA;AACA;AACD;ArH2zfH;AACA;AqHzzfE;AAC6C;AAAW;AAGlD;AACE;AACA;AACD;ArH0zfT;AqHzzfQ;AACD;AAEC;AACD;AAEN;AAED;ArHwzfA;AACA;AACA;AACA;AACA;AACA;AqHxzfO;AACL;ArH0zfF;AqHzzfE;AACE;AACD;ArH2zfH;AqH1zfE;AAAqC;AAAA;AACtC;AAED;ArH6zfA;AACA;AACA;AACA;AACA;AACA;AACA;AqH7zfA;AACE;ArH+zfF;AqH9zfE;AAEA;ArH+zfF;AACA;AqH/zfE;ArHi0fF;AqHh0fE;AACE;AACD;ArHk0fH;AqHh0fE;AACE;AAKA;AACD;ArH8zfH;AqH5zfE;AACE;AACA;AACA;AACA;AACD;ArH8zfH;AACA;AqH5zfE;AAGI;AACD;AAEC;AACD;AAEC;AACD;AACJ;AAED;ArHyzfA;AACA;AACA;AACA;AACA;AACA;AACA;AqHzzfA;AACE;AACE;AACD;ArH2zfH;AqH1zfE;AAEI;AADmB;AAInB;AACA;AACE;AACD;ArH0zfP;AqHzzfM;AACD;AACJ;AAED;ArH0zfA;AACA;AACA;AACA;AACA;AACA;AACA;AqH1zfA;AACE;AACE;AACD;ArH4zfH;AqH1zfE;AACA;AAGA;ArH0zfF;AqHzzfE;ArH2zfF;AqHzzfE;AACE;AACA;AACD;ArH2zfH;AACA;AqHzzfE;AACE;AACE;AACD;ArH2zfL;AqHzzfI;ArH2zfJ;AqH1zfI;AACA;AACA;AACA;ArH4zfJ;AqH1zfI;AACA;AACD;AACF;AAED;ArH2zfA;AACA;AACA;AACA;AACA;AACA;AACA;AqH3zfO;AACL;AACE;AAGD;AACF;AAED;ArH0zfA;AACA;AACA;AACA;AACA;AACA;AACA;AqH1zfO;AACL;AACA;AACA;AACA;ArH4zfF;AqH3zfE;AACE;ArH6zfJ;AqH5zfI;AACE;AACD;AACF;ArH8zfH;AACA;AqH5zfE;AAb6C;ArH40f/C;AqH7zfE;AACE;AACD;ArH+zfH;AqH9zfE;AACA;ArHg0fF;AqH/zfE;AACE;ArHi0fJ;AqHh0fI;AACE;AACD;AACF;ArHk0fH;AqHj0fE;AACD;AAED;ArHk0fA;AACA;AACA;AACA;AACA;AACA;AqHl0fA;AACE;ArHo0fF;AqHn0fE;AACE;AACA;AAID;ArHk0fH;AqHj0fE;AACD;ArHm0fD;AACA;AACA;AACA;AACA;AACA;AACA;AsH3pgBA;AtH6pgBA;AsH5pgBA;AtH8pgBA;AsH/qgBA;AtHirgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsHvqgBA;AACE;AACA;AACA;AAHmB;AAMrB;AtHwqgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsHvqgBO;AAEP;AtHwqgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsH7qgBE;AtH+qgBF;AACA;AACA;AACA;AsH7qgBI;AtH+qgBJ;AsH9qgBI;AACD;AAED;AtH+qgBF;AACA;AACA;AACA;AACA;AACA;AsH/qgBI;AAAO;AAA+C;AAAtD;AAID;AAED;AtHgrgBF;AACA;AACA;AACA;AACA;AACA;AsHhrgBI;AAIE;AAAsB;AAEzB;AAED;AtH8qgBF;AACA;AACA;AACA;AACA;AACA;AsH9qgBI;AACD;AAED;AtH+qgBF;AACA;AACA;AACA;AACA;AACA;AsH/qgBI;AAAO;AAA+C;AAAtD;AAID;AAED;AtHgrgBF;AACA;AACA;AACA;AACA;AACA;AsHhrgBI;AAIE;AAAsB;AAEzB;AAED;AtH8qgBF;AACA;AACA;AACA;AACA;AACA;AsH9qgBI;AACD;AAED;AtH+qgBF;AACA;AACA;AACA;AACA;AACA;AsH/qgBI;AAAO;AAAyC;AAAhD;AAID;AAED;AtHgrgBF;AACA;AACA;AACA;AACA;AACA;AsHhrgBI;AAIE;AAAsB;AAEzB;AAED;AtH8qgBF;AACA;AACA;AACA;AACA;AACA;AsH9qgBI;AACD;AtHgrgBH;AACA;AACA;AsH/qgBA;AtHirgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsHzrgBE;AtH2rgBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsH1rgBA;AtH4rgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsH7rgBO;AAEP;AtH8rgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsHrsgBE;AtHusgBF;AACA;AACA;AACA;AACA;AACA;AACA;AsHpsgBE;AtHssgBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsHvsgBA;AtHysgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsHjtgBE;AtHmtgBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuHn7gBA;AvHq7gBA;AuHp7gBA;AvHs7gBA;AuHv8gBA;AvHy8gBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuHp8gBA;AACA;AAOA;AvHg8gBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuH/7gBO;AAML;AvH47gBF;AuH37gBE;AACE;AACA;AACA;AAKE;AACD;AvHy7gBL;AuHx7gBI;AACD;AACC;AACA;AACE;AACE;AACD;AACF;AACD;AACD;AACF;AAED;AvHy7gBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuHz7gBO;AACL;AACA;AACA;AACA;AACA;AACA;AAII;AACA;AvHw7gBN;AuHv7gBM;AvHy7gBN;AuHx7gBM;AACE;AACE;AACD;AACF;AACD;AACD;AAEC;AvHy7gBN;AuHx7gBM;AACE;AAMD;AACF;AACJ;AvHq7gBD;AACA;AACA;AACA;AACA;AACA;AACA;AwHpihBA;AxHsihBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwHpihBA;AxHsihBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwHpihBO;AACL;AACD;AxHsihBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyH3jhBA;AzH6jhBA;AyH5jhBA;AzH8jhBA;AyH7jhBA;AzH+jhBA;AyH9jhBA;AzHgkhBA;AyH/jhBA;AzHikhBA;AyHhkhBA;AzHkkhBA;AyHjkhBA;AzHmkhBA;AyHzlhBA;AzH2lhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyHjlhBA;AzHmlhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyHjlhBO;AzHmlhBP;AyHjlhBO;AAwBP;AzH4jhBA;AACA;AACA;AACA;AACA;AACA;AyH5jhBA;AAEA;AzH6jhBA;AyH5jhBA;AAEA;AzH6jhBA;AyH5jhBA;AAEA;AzH6jhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyH5jhBO;AACL;AAGA;AACA;AACD;AAED;AzH2jhBA;AACA;AACA;AACA;AACA;AyH3jhBO;AACL;AAKD;AAED;AzHwjhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyH1jhBE;AzH4jhBF;AACA;AACA;AACA;AyH1jhBE;AAA2C;AzH6jhB7C;AyH5jhBI;AACA;AAEA;AzH6jhBJ;AyH5jhBI;AAEA;AzH6jhBJ;AyH5jhBI;AAEA;AzH6jhBJ;AyH5jhBI;AAEA;AzH6jhBJ;AyH5jhBI;AAEA;AzH6jhBJ;AyH5jhBI;AAEA;AzH6jhBJ;AyH5jhBI;AAKI;AACD;AAGH;AAEI;AACA;AACE;AACD;AzHujhBT;AyHtjhBQ;AAAiD;AAAD;AACjD;AACA;AAAD;AAEF;AAEA;AzHyjhBJ;AyHxjhBI;AACE;AACE;AACD;AzH0jhBP;AyHzjhBM;AACD;AACF;AAED;AzH0jhBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyH7jhB8B;AzH+jhB9B;AyH9jhBI;AACA;AACA;AACE;AzHgkhBN;AyH/jhBM;AACD;AAED;AACA;AzHgkhBJ;AyH/jhBI;AACE;AACA;AACD;AACF;AAED;AzHgkhBF;AACA;AACA;AACA;AACA;AACA;AyHhkhBI;AACD;AAED;AzHikhBF;AACA;AACA;AACA;AACA;AyHjkhBI;AACA;AACA;AzHmkhBJ;AyHlkhBI;AACE;AACA;AACD;AzHokhBL;AyHnkhBI;AACA;AACD;AzHqkhBH;AACA;AACA;AyHpkhBA;AzHskhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyH1khBE;AzH4khBF;AACA;AACA;AyH1khBE;AACE;AACA;AzH4khBJ;AyHzkhBI;AzH2khBJ;AyH1khBI;AACE;AACD;AACC;AACD;AzH4khBL;AyH1khBI;AACE;AAID;AAED;AzHwkhBJ;AACA;AACA;AACA;AACA;AyHxkhBI;AACA;AAMA;AzHqkhBJ;AyHpkhBI;AAEA;AzHqkhBJ;AyHpkhBI;AAEA;AzHqkhBJ;AACA;AACA;AACA;AACA;AyHpkhBI;AAEA;AzHqkhBJ;AACA;AACA;AACA;AyHpkhBI;AAEA;AzHqkhBJ;AyHpkhBI;AACD;AAED;AzHqkhBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyHvkhBI;AACA;AACD;AAED;AzHwkhBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyHxkhBI;AACA;AzH0khBJ;AyHvkhBI;AACE;AACE;AACA;AACD;AACF;AzHykhBL;AyHvkhBI;AACE;AACA;AAFe;AzH4khBrB;AyHtkhBI;AACE;AzHwkhBN;AyHnkhBM;AACE;AACD;AACF;AAGD;AACA;AzHmkhBJ;AACA;AyHnkhBI;AzHqkhBJ;AyHpkhBI;AACE;AzHskhBN;AyHlkhBM;AzHokhBN;AyHnkhBM;AAGD;AzHmkhBL;AACA;AyHjkhBI;AACD;AAED;AzHkkhBF;AACA;AACA;AACA;AACA;AACA;AyHlkhBI;AACA;AACE;AACE;AzHokhBR;AyHnkhBQ;AACE;AACD;AzHqkhBT;AyHpkhBQ;AACD;AACF;AzHskhBL;AyHrkhBI;AACD;AAED;AzHskhBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyHtkhBI;AACE;AACA;AAKA;AAKD;AzHgkhBL;AyH9jhBI;AACA;AAEA;AzH+jhBJ;AyH7jhBI;AACE;AzH+jhBN;AyH1jhBM;AACE;AACD;AACF;AzH4jhBL;AyH1jhBI;AACE;AACD;AACF;AAED;AzH2jhBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyH5jhBoE;AAGhE;AACA;AACA;AAGA;AzH0jhBJ;AyHzjhBI;AzH2jhBJ;AyHvjhBI;AACA;AzHyjhBJ;AyHvjhBI;AACE;AACD;AzHyjhBL;AyHxjhBI;AAGA;AzHwjhBJ;AyHvjhBI;AAMA;AACA;AACD;AAED;AzHmjhBF;AACA;AACA;AACA;AACA;AACA;AyHnjhBI;AACE;AACD;AzHqjhBL;AACA;AyHnjhBI;AACD;AAED;AzHojhBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyHrjhBuC;AzHujhBvC;AyHtjhBI;AzHwjhBJ;AyHvjhBI;AzHyjhBJ;AyHxjhBI;AACE;AACD;AACF;AAED;AzHyjhBF;AACA;AACA;AACA;AACA;AACA;AyHzjhBI;AACE;AACD;AzH2jhBL;AyH1jhBI;AzH4jhBJ;AyH3jhBI;AACE;AACD;AzH6jhBL;AyH5jhBI;AACD;AzH8jhBH;AACA;AACA;AyH7jhBA;AzH+jhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyHjkhBO;AACL;AACA;AzHmkhBF;AyHhkhBE;AACD;AAED;AzHikhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyHjkhBO;AACL;AACA;AzHmkhBF;AyHjkhBE;AACE;AACD;AzHmkhBH;AyHlkhBE;AzHokhBF;AyHnkhBE;AACE;AzHqkhBJ;AyHnkhBI;AACE;AACD;AACC;AACD;AzHqkhBL;AyHpkhBI;AACD;AzHskhBH;AyHrkhBE;AACD;AAED;AzHskhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyHtkhBA;AACE;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AzHukhBF;AyHrkhBE;AACE;AACA;AACA;AAAa;AAA6C;AAC1D;AAMA;AzHokhBJ;AyHnkhBI;AzHqkhBJ;AyH/jhBI;AAKD;AzH6jhBH;AyH3jhBE;AAAO;AAA2C;AAChD;AAIA;AACA;AACA;AACA;AARgD;AAAlD;AAUD;AzH6jhBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0HtoiBA;A1HwoiBA;A0HvoiBA;A1HyoiBA;A0H/piBA;A1HiqiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0H/piBA;A1HiqiBA;AACA;AACA;A0H3piBA;AACA;A1H6piBA;A0H3piBA;A1H6piBA;AACA;AACA;A0H3piBA;AAEA;A1H4piBA;AACA;AACA;AACA;A0H3piBA;AAEA;A1H4piBA;AACA;AACA;AACA;A0H3piBA;AAEA;A1H4piBA;AACA;AACA;AACA;A0H3piBA;AAEA;A1H4piBA;AACA;AACA;AACA;AACA;A0H3piBO;AACL;A1H6piBF;A0H5piBE;AACE;AACE;AACD;A1H8piBL;A0H7piBI;AACA;AACD;A1H+piBH;A0H9piBE;AAAO;AAA4B;AAAnC;AACD;AAED;A1HkqiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0HlqiBO;AACL;AACA;AACE;AACD;A1HoqiBH;AACA;A0HnqiBE;AACA;A1HqqiBF;A0HpqiBE;AACE;A1HsqiBJ;A0HrqiBI;AAME;AACA;AACD;A1HkqiBL;A0HjqiBI;AACA;AACD;A1HmqiBH;A0HlqiBE;AACD;AAED;A1HmqiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0HnqiBO;AACL;AAAO;AAA4B;AAAW;AAAuB;AAArE;AACD;AAED;A1HyqiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0HzqiBO;AACL;AACE;AACD;AACC;AACE;AACD;A1H2qiBL;A0H1qiBI;AACD;AACF;AAED;A1H2qiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0H3qiBO;AACL;AACA;A1H6qiBF;A0H5qiBE;AACE;AACD;A1H8qiBH;A0H7qiBE;A1H+qiBF;A0H9qiBE;AACE;AACD;A1HgriBH;A0H/qiBE;AACE;AACD;AACC;AACD;AACF;AAED;A1HgriBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0HhriBO;AAAqC;AAAX;AAAW;A1HqriB5C;A0HpriBE;AACE;AACD;A1HsriBH;A0HrriBE;AACE;AACD;AACD;A1HuriBF;AACA;A0HvriBE;AAAgB;AAAG;AAAG;AAAP;A1H6riBjB;A0H5riBE;AAAyB;AAAA;AAAA;AAAA;A1HksiB3B;AACA;A0HhsiBI;AACE;AACE;AACD;AACC;AACE;AACD;A1HksiBT;A0HjsiBQ;AACE;AAAY;AAAS;AAAS;AAAnB;AACZ;A1HusiBT;A0HtsiBQ;AACD;AACC;AAA0B;AAAwB;AAClD;AAA0B;AAAwB;A1H4siB1D;A0H3siBQ;AACE;AACD;A1H6siBT;A0H5siBQ;AACE;AACA;AAAY;AAAS;AAAS;AAAnB;AACZ;A1HktiBT;A0HjtiBQ;AACD;AACF;A1HmtiBL;AACA;A0HltiBI;AACE;AACD;AACF;A1HotiBH;A0HntiBE;AACD;AAED;A1HotiBA;AACA;AACA;AACA;AACA;AACA;A0HptiBA;AACE;AACE;AACD;A1HstiBH;A0HrtiBE;AACE;AAAwB;AAG3B;AAED;A1HqtiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0HrtiBO;AACL;AAAO;AAA4B;AAAnC;AACD;AAED;A1HytiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0HztiBO;AACL;AAAO;AAA4C;AAAnD;AACD;AAED;A1H6tiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0H7tiBO;AACL;AACD;A1H+tiBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Ht/iBA;A3Hw/iBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Ht/iBA;A3Hw/iBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Ht/iBO;AAEP;A3Hu/iBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Hv/iBO;AAEP;A3Hw/iBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Hx/iBO;AAEP;A3Hy/iBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Hz/iBO;AACL;AACA;AACA;AAH+B;AAMjC;A3H0/iBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2H3/iBO;AACL;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARK;AAUR;AAED;A3H4/iBA;AACA;AACA;AACA;AACA;AACA;AACA;A2H5/iBO;AACL;AAMD;AAED;A3Hw/iBA;AACA;AACA;AACA;AACA;AACA;AACA;A2Hx/iBO;AACL;AAMD;AAED;A3Ho/iBA;AACA;AACA;AACA;AACA;AACA;A2Hp/iBO;AACL;AACA;AACA;AACA;A3Hs/iBF;A2Hr/iBE;AACE;A3Hu/iBJ;A2Ht/iBI;AACE;AACD;A3Hw/iBL;A2Hv/iBI;AACA;AACA;AACA;A3Hy/iBJ;A2Hx/iBI;AACE;AACD;AACF;A3H0/iBH;A2Hz/iBE;AACE;AACD;A3H2/iBH;A2H1/iBE;AACD;AAED;A3H2/iBA;AACA;AACA;AACA;AACA;AACA;AACA;A2H3/iBO;AACL;AACE;AACD;AACC;AACD;AACC;AACD;AACF;AAED;A3H4/iBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2H5/iBO;AAKL;AACE;AAA4B;AAC1B;AACA;AACA;AACA;AAJ0B;A3HggjBhC;A2Hz/iBE;AACE;AACD;AACC;AACD;AACF;AAED;A3H0/iBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2H1/iBO;AACL;AAMD;AAED;A3Hs/iBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Ht/iBO;AACL;AACE;AACD;A3Hw/iBH;A2Hv/iBE;AACD;AAED;A3Hw/iBA;AACA;AACA;AACA;AACA;AACA;A2Hx/iBO;AACL;AAMD;AAED;A3Ho/iBA;AACA;AACA;AACA;AACA;AACA;A2Hp/iBO;AACL;AACD;AAED;A3Hq/iBA;AACA;AACA;AACA;AACA;AACA;A2Hr/iBO;AACL;AACE;AACD;A3Hu/iBH;A2Ht/iBE;AAMD;AAED;A3Hk/iBA;AACA;AACA;AACA;AACA;A2Hl/iBO;AACL;AACE;AACD;A3Ho/iBH;A2Hn/iBE;AACE;AACA;AACA;AACA;AAJK;AAMR;A3Hq/iBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4H9wjBA;A5HgxjBA;A4H/wjBA;A5HixjBA;A4HhxjBA;A5HkxjBA;A4HjxjBA;A5HmxjBA;A4HlxjBA;A5HoxjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4H9xjBA;A5HgyjBA;AACA;A4H9xjBO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAToB;AAYtB;A5H+xjBA;AACA;AACA;AACA;AACA;AACA;A4H/xjBO;AACL;AACA;AACA;AACA;AAJ4B;AAO9B;A5HgyjBA;AACA;AACA;AACA;AACA;A4HhyjBO;AAEP;A5HiyjBA;AACA;AACA;AACA;AACA;AACA;AACA;A4HjyjBA;AAEA;A5HkyjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4HjyjBO;AACL;AAAc;AAAc;AAAf;AACb;AAAkB;AAAc;AAAf;AACjB;AACA;AACA;AAAqB;AAAe;AAAhB;AALY;AAQlC;A5H2yjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4H3yjBO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAd+B;AAgBjC;A5H6yjBA;AACA;AACA;AACA;AACA;AACA;AACA;A4H7yjBA;AAEA;A5H8yjBA;AACA;AACA;AACA;AACA;A4H7yjBO;AACL;AACE;AACE;AACD;AACF;A5H+yjBH;A4H9yjBE;AACD;AAED;A5H+yjBA;AACA;AACA;AACA;AACA;A4H/yjBO;AACL;AACD;AAED;A5HgzjBA;AACA;AACA;AACA;AACA;AACA;A4HhzjBO;AACL;AASD;AAED;A5HyyjBA;AACA;AACA;AACA;AACA;AACA;A4HzyjBO;AACL;AACD;AAED;A5H0yjBA;AACA;AACA;AACA;AACA;AACA;A4H1yjBO;AACL;AACA;AACD;AAED;A5H2yjBA;AACA;AACA;AACA;AACA;AACA;AACA;A4H3yjBO;AACL;AACE;AACD;A5H6yjBH;A4H5yjBE;AACE;AACD;A5H8yjBH;A4H7yjBE;AACE;AACD;A5H+yjBH;A4H9yjBE;AACE;AACD;A5HgzjBH;A4H/yjBE;AACD;AAED;A5HgzjBA;AACA;AACA;AACA;AACA;AACA;AACA;A4HhzjBO;AACL;AAKA;AAAO;AAA2B;AAAlC;AACD;AAED;A5HgzjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4HhzjBO;AACL;AAKA;AACD;AAED;A5H6yjBA;AACA;AACA;AACA;AACA;AACA;A4H7yjBO;AACL;AACA;AACA;AAKA;AACD;AAED;A5H0yjBA;AACA;AACA;AACA;AACA;AACA;A4H1yjBO;AACL;AACA;AACD;AAED;A5H2yjBA;AACA;AACA;AACA;AACA;AACA;AACA;A4H3yjBO;AACL;AACA;AACD;AAED;A5H4yjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4H5yjBO;AACL;AACA;A5H8yjBF;A4H7yjBE;AACE;AACA;AACA;A5H+yjBJ;A4H7yjBI;AACA;AACE;AACA;AAFc;AAIhB;AACA;AACE;AAAa;AAAO;AACpB;AAAc;AAAO;AAFO;AAI9B;AACD;A5HmzjBH;A4HlzjBE;AAAO;AAA8B;AAArC;AACD;AAED;A5HszjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4HtzjBO;AACL;AACA;AACD;AAED;A5HuzjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4HvzjBO;AACL;AACE;AACD;A5HyzjBH;A4HxzjBE;AACD;AAED;A5HyzjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4HzzjBO;AACL;AACA;AACA;AACA;AACA;A5H2zjBF;A4H1zjBE;AACE;AAAe;AAAwB;A5H8zjB3C;A4H3zjBI;AAIE;AACA;AAED;AACC;AAEA;A5HwzjBN;A4HvzjBM;AACD;A5HyzjBL;A4HxzjBI;AACD;AAGD;AACA;AAEA;A5HuzjBF;AACA;A4HvzjBE;AACA;AACA;AACA;AACA;A5HyzjBF;A4HtzjBE;AACA;AACA;A5HwzjBF;A4HvzjBE;AAEA;AACA;A5HwzjBF;A4HvzjBE;AAEA;A5HwzjBF;A4HrzjBE;AACA;AACA;A5HuzjBF;A4HpzjBE;AAOE;AACA;AACA;AACA;AAIA;AACD;AACC;AACA;AACD;A5H6yjBH;AACA;A4H3yjBE;AACE;AACD;AACC;AACD;AACC;AACD;AACC;AACD;AACC;AACD;AACC;AACD;A5H6yjBH;AACA;A4H3yjBE;AAME;AACD;A5HwyjBH;A4HvyjBE;AACE;AAMD;A5HoyjBH;A4HnyjBE;AAKE;AAKD;A5H6xjBH;A4H3xjBE;AACE;AAMD;AACC;AAID;A5HqxjBH;AACA;A4HnxjBE;A5HqxjBF;A4HpxjBE;AACE;AACD;A5HsxjBH;A4HrxjBE;AACE;AACA;AACA;AAEA;A5HsxjBJ;A4HrxjBI;AACD;AACC;AACE;AACA;AAFiB;AAIpB;AACC;AACD;AACC;AACA;AACE;AADe;AAIjB;AACA;AACD;AACC;AACA;AACA;AACA;A5HsxjBJ;A4HjxjBI;AACA;AAIA;AACA;AACD;AAEA;AAEC;AACA;AACD;AACC;AACA;AACA;AACE;AACD;A5H8wjBL;A4H7wjBI;AACE;AACD;AACF;AACC;A5H+wjBJ;A4H9wjBI;AACE;AACD;A5HgxjBL;A4H/wjBI;AACD;AAED;A5HgxjBF;AACA;A4HhxjBE;AACA;AACD;A5HkxjBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6HlzkBA;A7HozkBA;A6HnzkBA;A7HqzkBA;A6HpzkBA;A7HszkBA;A6HrzkBA;A7HuzkBA;A6HtzkBA;A7HwzkBA;A6HvzkBA;A7HyzkBA;A6H90kBA;A7Hg1kBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Ht0kBA;AAEA;A7Hu0kBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Hv0kBO;AAEP;A7Hw0kBA;AACA;AACA;AACA;AACA;AACA;A6Hx0kBO;AAEP;A7Hy0kBA;AACA;AACA;AACA;AACA;AACA;A6H10kBO;AACL;AACD;AAED;A7H20kBA;AACA;AACA;AACA;AACA;A6H30kBO;AACL;AACD;AAED;A7H40kBA;AACA;AACA;AACA;AACA;A6H50kBO;AACL;AACA;AACA;AACA;AACA;AALsB;AAQxB;A7H60kBA;AACA;AACA;AACA;AACA;AACA;AACA;A6H90kBO;AACL;AACD;AAED;A7H+0kBA;AACA;AACA;AACA;AACA;A6H/0kBA;AAEA;A7Hg1kBA;AACA;AACA;A6H/0kBO;AACL;AACD;AAED;A7Hg1kBA;AACA;AACA;AACA;AACA;AACA;AACA;A6Hh1kBA;AAAsB;AAAA;AAEtB;A7Hm1kBA;AACA;AACA;AACA;AACA;AACA;AACA;A6Hn1kBA;AAA2B;AAEvB;AAAA;AAFuB;AAM3B;A7Ho1kBA;AACA;AACA;AACA;AACA;AACA;A6Hp1kBA;AAAuC;AAAA;AAGvC;A7Hs1kBA;AACA;AACA;AACA;AACA;A6Ht1kBA;AAAwC;AAAA;AAGxC;A7Hw1kBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6H11kBE;A7H41kBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6H11kBE;AAA6C;A7H61kB/C;A6H71kB+C;AAAjB;AAAiB;A7Hi2kB/C;A6Hh2kBI;A7Hk2kBJ;AACA;AACA;AACA;A6Hh2kBI;AAEA;A7Hi2kBJ;A6Hh2kBI;AAEA;A7Hi2kBJ;A6Hh2kBI;AAEA;A7Hi2kBJ;A6Hh2kBI;AAEA;A7Hi2kBJ;A6Hh2kBI;AAEA;AACE;AAEgB;AAAA;AAEZ;AACE;AAAiB;AAA4B;AAC9C;AACF;AACJ;AACF;AAED;A7Hi2kBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Hn2kBI;AACD;AAED;A7Ho2kBF;AACA;AACA;AACA;AACA;AACA;A6Hp2kBI;AACA;AACE;AACD;A7Hs2kBL;AACA;A6Hp2kBI;AACE;AACD;A7Hs2kBL;AACA;A6Hp2kBI;AACE;AACD;A7Hs2kBL;AACA;A6Hp2kBI;AACE;AACD;A7Hs2kBL;AACA;A6Hp2kBI;AACD;AAED;A7Hq2kBF;AACA;AACA;AACA;AACA;AACA;AACA;A6Hr2kBI;AACE;A7Hu2kBN;A6Ht2kBM;AACE;AACD;AACC;AACD;AACC;AACD;A7Hw2kBP;A6Hv2kBM;A7Hy2kBN;A6Hv2kBM;A7Hy2kBN;A6Hx2kBM;AACE;AACA;AACD;AACC;AACD;A7H02kBP;A6Hz2kBM;AACD;AACF;AAED;A7H02kBF;AACA;AACA;AACA;AACA;AACA;A6H12kBI;AACD;AAED;A7H22kBF;AACA;AACA;AACA;AACA;AACA;AACA;A6H32kBI;AACE;AACD;AACF;AAED;A7H42kBF;AACA;AACA;AACA;AACA;AACA;AACA;A6H52kBI;AACE;AACD;AACF;AAED;A7H62kBF;AACA;AACA;AACA;AACA;AACA;AACA;A6H72kBI;AACE;AACD;AACF;AAED;A7H82kBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6H92kBI;AACE;AACD;AACC;AAIA;AACA;AACD;AACF;AAED;A7H42kBF;AACA;AACA;AACA;AACA;AACA;AACA;A6H52kBI;A7H82kBJ;A6H72kBI;AACE;A7H+2kBN;A6H72kBM;AACD;AACF;AAED;A7H82kBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6H92kBI;A7Hg3kBJ;A6H/2kBI;AACE;A7Hi3kBN;A6H/2kBM;AACD;AACF;AAED;A7Hg3kBF;AACA;AACA;AACA;AACA;AACA;AACA;A6Hh3kBI;AACA;AACA;AACD;AAED;A7Hi3kBF;AACA;AACA;AACA;AACA;AACA;AACA;A6Hj3kBI;AACA;AACA;AACA;AACD;AAED;A7Hk3kBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Hl3kBI;A7Ho3kBJ;A6Hn3kBI;AACE;AAG4B;AAAuB;AAGpD;A7Hk3kBL;A6Hj3kBI;AACE;AACA;AACA;AACA;AACA;AACA;AACA;A7Hm3kBN;A6Hl3kBM;AACE;AACA;A7Ho3kBR;A6Hn3kBQ;AACE;AACD;A7Hq3kBT;A6Hp3kBQ;AACA;AACA;AACD;A7Hs3kBP;A6Hr3kBM;AACA;AACA;AACA;AACA;A7Hu3kBN;A6Hr3kBM;A7Hu3kBN;A6Ht3kBM;AACD;A7Hw3kBL;A6Hv3kBI;AACD;AAED;A7Hw3kBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Hx3kBI;AACA;AAMA;AAAO;AAAyB;AAAhC;AACD;AAED;A7Hu3kBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Hv3kBI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;A7Hs3kBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Ht3kBI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;A7Hq3kBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Hr3kBI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;A7Ho3kBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Hp3kBI;AAMA;AAAO;AAAwB;AAA/B;AACD;AAED;A7Hm3kBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Hn3kBI;AACE;AACD;A7Hq3kBL;A6Hp3kBI;AACD;AAED;A7Hq3kBF;AACA;AACA;AACA;AACA;AACA;A6Hr3kBI;A7Hu3kBJ;A6Ht3kBI;AACE;AACE;AACD;AACC;AACD;AACF;AACC;AACD;AACF;AAED;A7Hu3kBF;AACA;AACA;AACA;AACA;AACA;AACA;A6Hv3kBI;AACE;AAA+B;AAAuB;AACvD;A7H23kBL;A6H13kBI;AACD;AAED;A7H23kBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6H33kBI;AACA;AAEA;AACA;AACA;A7H43kBJ;A6H33kBI;AACE;AACD;A7H63kBL;A6H53kBI;AACE;AACD;A7H83kBL;A6H73kBI;AACD;AAED;A7H83kBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6H93kBI;AACE;AACD;AACC;AACD;AACF;A7Hg4kBH;AACA;AACA;A6H/3kBA;A7Hi4kBA;AACA;AACA;AACA;AACA;AACA;AACA;A6Hn4kBA;AAAiC;AAC/B;AAAuB;AADQ;AAAA;AAGjC;A7Hw4kBA;AACA;AACA;AACA;AACA;A6Hx4kBA;AACE;AACA;AACE;AACD;A7H04kBH;A6Hz4kBE;AACD;AAED;A7H04kBA;AACA;AACA;AACA;AACA;A6H14kBA;AACE;AACE;AACD;AACF;AAED;A7H24kBA;AACA;AACA;AACA;AACA;AACA;A6H34kBO;AACL;A7H64kBF;A6H54kBE;AACE;AACD;A7H84kBH;A6Hl5kBiD;AAAA;AAO/C;A7H+4kBF;A6H74kBE;AACE;AACD;A7H+4kBH;AACA;A6H94kBE;AACA;AACD;AAED;A7H+4kBA;AACA;AACA;AACA;AACA;AACA;A6H/4kBO;AACL;AACA;A7Hi5kBF;A6Hh5kBE;AACE;A7Hk5kBJ;A6Hj5kBI;AACE;AACD;AACC;AACE;AACD;A7Hm5kBP;A6Hl5kBM;AACD;AACF;A7Ho5kBH;A6Hl5kBE;AACE;AACD;AACC;AACD;A7Ho5kBH;A6Hn5kBE;AACD;AAED;A7Ho5kBA;AACA;AACA;AACA;AACA;AACA;A6Hp5kBO;AACL;AACA;AACE;AACA;A7Hs5kBJ;A6Hr5kBI;AACD;AACF;AAED;A7Hs5kBA;AACA;AACA;AACA;AACA;AACA;A6Ht5kBA;AACE;AACA;AACA;AAHiC;AAMnC;AAEA;A7Hs5kBA;AACA;AACA;AACA;AACA;AACA;A6Hr5kBA;AAEA;A7Hs5kBA;AACA;AACA;A6Hr5kBO;AACL;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;A7Hs5kBF;A6Hr5kBE;AACA;AACD;AAED;A7Hs5kBA;AACA;AACA;AACA;A6Ht5kBO;AACL;AACD;AAED;A7Hu5kBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Hv5kBO;AACL;AACE;AACD;A7Hy5kBH;A6Hx5kBE;AACE;AACD;AACC;AACE;AACD;A7H05kBL;A6Hz5kBI;AACD;AACF;AAED;A7H05kBA;AACA;AACA;AACA;AACA;AACA;A6H15kBA;AACE;AACE;AACD;A7H45kBH;A6H35kBE;AAGI;A7H25kBN;A6H15kBM;AACE;AACD;A7H45kBP;A6H35kBM;AACD;AAGJ;AAED;A7H05kBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6H15kBO;AACL;AACE;AACD;A7H45kBH;A6H35kBE;AACE;AACD;A7H65kBH;A6H55kBE;AACE;A7H85kBJ;A6H75kBI;AACE;AACD;A7H+5kBL;A6H95kBI;AACE;AACD;A7Hg6kBL;A6H/5kBI;AACD;AACF;AAED;A7Hg6kBA;AACA;AACA;AACA;AACA;AACA;A6Hh6kBO;AACL;AACE;AACD;A7Hk6kBH;A6Hj6kBE;AACD;AAED;A7Hk6kBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Hl6kBO;AAaL;AACE;AACD;A7Hw5kBH;A6Hv5kBE;AAAa;AAAc;AAa5B;AAED;A7H84kBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6H94kBO;AAaL;AAAc;AAAc;AAa7B;A7H03kBD;AACA;AACA;AACA;AACA;AACA;AACA;A8Hx1mBA;A9H01mBA;A8H12mBA;A9H42mBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8Hx2mBA;A9H02mBA;AACA;AACA;AACA;AACA;A8Hx2mBO;AACL;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVK;AAYR;A9H02mBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Hx4mBA;A/H04mBA;A+Hz4mBA;A/H24mBA;A+H55mBA;A/H85mBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Hz5mBA;A/H25mBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Hz5mBO;AAEP;A/H05mBA;AACA;AACA;AACA;AACA;AACA;A+H15mBA;AAEA;A/H25mBA;AACA;AACA;AACA;AACA;A+H15mBO;AACL;A/H45mBF;A+H35mBE;AACE;AACD;A/H65mBH;A+H55mBE;AACD;AAED;A/H65mBA;AACA;AACA;AACA;AACA;AACA;A+H75mBA;AACE;AACA;AAGA;AACA;AACA;A/H65mBF;A+H55mBE;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEE;AACA;AAEF;AAEA;A/Hy5mBF;A+Hv5mBE;AACE;AACD;AAGD;AACA;AACA;A/Hu5mBF;AACA;A+Hv5mBE;AACE;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BK;AA8BR;AAED;A/Ho5mBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Hp5mBA;AACE;AACA;AACA;AACE;AACD;A/Hs5mBH;A+Hp5mBE;AACE;AACD;AAGD;AACA;AACA;AACA;A/Ho5mBF;AACA;A+Hp5mBE;AACD;AAED;A/Hq5mBA;AACA;AACA;AACA;AACA;AACA;AACA;A+Hr5mBO;AACL;AACD;AAED;A/Hs5mBA;AACA;A+Ht5mBO;AACL;AACD;A/Hw5mBD;AACA;AACA;AACA;AACA;AACA;AACA;AgIrknBA;AhIuknBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgIrknBA;AhIuknBA;AACA;AACA;AACA;AACA;AACA;AACA;AgIvknBE;AhIyknBF;AACA;AgIvknBE;AACE;AACA;AACD;AAED;AhIwknBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgI3knBe;AhI6knBf;AgI5knBI;AACE;AACD;AhI8knBL;AgI7knBI;AACA;AACE;AACD;AACF;AAED;AhI8knBF;AACA;AACA;AACA;AACA;AACA;AgI9knBI;AACE;AACD;AhIglnBL;AgI/knBI;AhIilnBJ;AgIhlnBI;AACE;AACD;AACF;AAED;AhIilnBF;AACA;AACA;AACA;AACA;AgIjlnBI;AACE;AACD;AhImlnBL;AgIllnBI;AACD;AAED;AhImlnBF;AACA;AACA;AACA;AACA;AACA;AgInlnBI;AACE;AACD;AhIqlnBL;AgIplnBI;AhIslnBJ;AgIrlnBI;AACE;AACA;AACD;AACF;AAED;AhIslnBF;AACA;AACA;AACA;AACA;AACA;AgItlnBI;AACE;AACD;AhIwlnBL;AgIvlnBI;AACD;AhIylnBH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiIjrnBA;AjImrnBA;AiInsnBA;AjIqsnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiIjsnBA;AjImsnBA;AACA;AACA;AACA;AACA;AACA;AACA;AiInsnBE;AjIqsnBF;AACA;AACA;AACA;AACA;AACA;AiInsnBE;AAA4C;AjIssnB9C;AiIrsnBI;AAEA;AjIssnBJ;AiIrsnBI;AAEA;AjIssnBJ;AiIrsnBI;AAEA;AjIssnBJ;AiIrsnBI;AAEA;AjIssnBJ;AiIrsnBI;AAEA;AjIssnBJ;AiIrsnBI;AAEA;AjIssnBJ;AACA;AACA;AACA;AiIrsnBI;AACE;AACD;AACF;AAED;AjIssnBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiIxsnBI;AACD;AAED;AjIysnBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiIzsnBI;AjI2snBJ;AiI1snBI;AACE;AACA;AACA;AACD;AjI4snBL;AiI1snBI;AAEA;AjI2snBJ;AiI1snBI;AACE;AACA;AACA;AAEA;AACD;AjI2snBL;AiIzsnBI;AACD;AAED;AjI0snBF;AACA;AACA;AACA;AACA;AiI1snBI;AACA;AACA;AACA;AACA;AACD;AAED;AjI2snBF;AACA;AACA;AACA;AACA;AiI3snBI;AACE;AACA;AACD;AACF;AjI6snBH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkIh0nBA;AlIk0nBA;AkIj0nBA;AlIm0nBA;AkIl0nBA;AlIo0nBA;AkIn0nBA;AlIq0nBA;AkIx1nBA;AlI01nBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkIn1nBA;AACA;AAEA;AlIo1nBA;AACA;AACA;AACA;AACA;AACA;AkIn1nBO;AACL;AACE;AACD;AlIq1nBH;AkIn1nBE;AAGD;AAED;AlIk1nBA;AACA;AACA;AACA;AACA;AACA;AkIl1nBA;AACE;AACE;AACD;AACC;AACA;AACA;AACE;AAA0B;AAGxB;AACA;AAFG;AAKP;AACA;AACA;AACD;AACF;AAED;AlIi1nBA;AACA;AACA;AACA;AACA;AACA;AACA;AkIj1nBA;AAAwD;AAApB;AAAoB;AlIs1nBxD;AkIr1nBE;AlIu1nBF;AkIt1nBE;AlIw1nBF;AkIv1nBE;AACE;AACD;AlIy1nBH;AkIx1nBE;AACA;AACD;AAED;AlIy1nBA;AACA;AACA;AACA;AACA;AACA;AACA;AkIz1nBA;AACE;AACD;AlI21nBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmI57nBA;AnI87nBA;AmI77nBA;AnI+7nBA;AmI97nBA;AnIg8nBA;AmI/7nBA;AnIi8nBA;AmI19nBA;AnI49nBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmI19nBA;AnI49nBA;AACA;AACA;AACA;AACA;AmIr9nBA;AnIu9nBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmIr9nBA;AAEA;AnIs9nBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmI39nBE;AnI69nBF;AACA;AACA;AACA;AACA;AACA;AACA;AmI59nBA;AnI89nBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmIp+nBE;AnIs+nBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmIr+nBA;AnIu+nBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmIz+nBO;AACL;AACA;AACA;AACA;AnI2+nBF;AmIz+nBE;AACA;AnI2+nBF;AmI1+nBE;AACE;AACE;AACD;AnI4+nBL;AACA;AmI3+nBI;AACD;AACC;AACA;AACD;AACF;AAED;AnI4+nBA;AACA;AACA;AACA;AACA;AACA;AACA;AmI5+nBO;AACL;AACA;AAKA;AAKA;AnIs+nBF;AmIr+nBE;AACE;AACA;AAIE;AAAA;AACA;AAAe;AAElB;AACC;AAAgD;AAAA;AAChD;AACD;AACF;AAED;AnIs+nBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmIt+nBO;AACL;AACA;AnIw+nBF;AmIv+nBE;AACE;AACD;AACF;AAED;AnIw+nBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmIx+nBO;AAML;AACA;AACA;AnIq+nBF;AmIp+nBE;AACE;AACD;AACF;AAED;AnIq+nBA;AACA;AACA;AACA;AACA;AACA;AACA;AmIr+nBO;AACL;AACA;AACA;AACD;AAED;AnIs+nBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmIt+nBO;AACL;AACA;AACD;AAED;AnIu+nBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmIv+nBO;AACL;AACD;AAED;AnIw+nBA;AACA;AACA;AACA;AACA;AACA;AACA;AmIx+nBO;AACL;AnI0+nBF;AmIz+nBE;AACE;AACD;AACC;AACD;AACF;AAED;AnI0+nBA;AACA;AACA;AACA;AACA;AACA;AACA;AmI1+nBO;AACL;AACD;AAED;AnI2+nBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmI3+nBO;AACL;AACA;AACA;AACD;AAED;AnI4+nBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmI5+nBA;AACE;AACA;AnI8+nBF;AmI7+nBE;AACE;AACD;AACC;AACD;AACF;AAED;AnI8+nBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmI9+nBO;AACL;AACD;AAED;AnI++nBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmI/+nBO;AACL;AAID;AAED;AnI6+nBA;AACA;AACA;AACA;AACA;AACA;AmI7+nBO;AACL;AACA;AACD;AAED;AnI8+nBA;AACA;AACA;AACA;AACA;AACA;AmI9+nBO;AACL;AACD;AAED;AnI++nBA;AACA;AACA;AACA;AACA;AACA;AACA;AmI/+nBO;AACL;AACD;AAED;AnIg/nBA;AACA;AACA;AACA;AACA;AACA;AACA;AmIh/nBO;AACL;AACA;AnIk/nBF;AmIj/nBE;AACE;AACE;AAAO;AAAmC;AAA1C;AACD;AAEA;AACF;AnIq/nBH;AmIp/nBE;AACD;AAED;AnIq/nBA;AACA;AACA;AACA;AACA;AmIr/nBO;AACL;AACE;AACE;AAAyB;AAG3B;AAAuC;AAAsB;AAC9D;AnIw/nBH;AmIv/nBE;AAAO;AAA8C;AAArD;AACD;AAED;AnI2/nBA;AACA;AACA;AACA;AACA;AmI3/nBA;AACE;AACA;AACD;AAED;AnI4/nBA;AACA;AACA;AACA;AACA;AACA;AACA;AmI5/nBA;AACE;AAAO;AAAqD;AAA5D;AAID;AAED;AnI6/nBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmI7/nBA;AACE;AAIA;AACA;AnI4/nBF;AmI3/nBE;AACE;AACA;AACA;AACA;AACA;AACA;AAEA;AnI4/nBJ;AmI3/nBI;AACE;AACD;AACF;AnI6/nBH;AmI5/nBE;AACD;AAED;AnI6/nBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmI7/nBA;AACE;AACA;AnI+/nBF;AmI7/nBE;AACE;AACE;AACA;AACA;AACA;AACA;AACA;AANiB;AAQpB;AnI+/nBH;AmI7/nBE;AACE;AACA;AACD;AnI+/nBH;AmI7/nBE;AACA;AAGA;AnI6/nBF;AmI5/nBE;AACE;AACA;AACD;AACF;AAED;AnI6/nBA;AACA;AACA;AACA;AACA;AACA;AmI7/nBA;AACE;AnI+/nBF;AmI9/nBE;AACE;AACD;AAGD;AACA;AnI8/nBF;AACA;AmI9/nBE;AACA;AACA;AAAO;AAAkC;AAAzC;AACD;AAED;AnIkgoBA;AACA;AACA;AACA;AACA;AACA;AmIlgoBA;AACE;AACA;AnIogoBF;AmIngoBE;AACE;AACE;AACD;AnIqgoBL;AmIpgoBI;AACD;AnIsgoBH;AmIpgoBE;AACA;AACD;AAED;AnIqgoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmIrgoBA;AACE;AACA;AnIugoBF;AmItgoBE;AACE;AACE;AACD;AACC;AACA;AACA;AAAoC;AAAwB;AAC7D;AACF;AnI0goBH;AmIzgoBE;AACD;AAED;AnI0goBA;AACA;AACA;AACA;AACA;AACA;AmI1goBA;AACE;AnI4goBF;AmI3goBE;AACE;AACD;AnI6goBH;AmI5goBE;AACD;AAED;AnI6goBA;AACA;AACA;AACA;AACA;AACA;AmI7goBO;AACL;AACD;AAED;AnI8goBA;AACA;AACA;AACA;AACA;AACA;AACA;AmI9goBO;AACL;AACA;AAAO;AAA4B;AAAnC;AACD;AAED;AnIkhoBA;AACA;AACA;AACA;AACA;AACA;AmIlhoBO;AACL;AACD;AAED;AnImhoBA;AACA;AACA;AACA;AACA;AACA;AmInhoBO;AACL;AACD;AAED;AnIohoBA;AACA;AACA;AACA;AmIphoBA;AACE;AACA;AACA;AnIshoBF;AmIzhoByC;AAKrC;AACE;AACD;AnIuhoBL;AmIthoBI;AnIwhoBJ;AmIvhoBI;AACE;AACD;AACC;AAAmC;AAAA;AAGpC;AAfoC;AnIyioBzC;AmIrioBE;AAA2B;AnIwioB7B;AmIxioB6B;AAY1B;AACF;AAED;AnI8hoBA;AACA;AACA;AACA;AACA;AmI9hoBA;AACE;AACE;AACD;AnIgioBH;AmI/hoBE;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAED;AnIgioBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmIhioBO;AACL;AnIkioBF;AmIhioBE;AACE;AACD;AnIkioBH;AmIjioBE;AAIA;AACA;AACA;AACD;AAED;AnI+hoBA;AACA;AACA;AACA;AACA;AmI/hoBO;AACL;AAIA;AAIE;AAAA;AAEH;AAED;AnI0hoBA;AACA;AACA;AACA;AACA;AACA;AmI1hoBO;AACL;AACE;AACD;AACF;AAED;AnI2hoBA;AACA;AACA;AACA;AACA;AACA;AmI3hoBA;AACE;AnI6hoBF;AmI3hoBE;AACD;AAED;AnI4hoBA;AACA;AmI5hoBA;AACE;AADuC;AAAA;AAAA;AAGvC;AnIgioBF;AmI/hoBE;AACE;AACA;AACA;AACA;AACA;AACA;AANK;AAQR;AnIiioBD;AACA;AACA;AACA;AACA;AACA;AACA;AoIxrpBA;ApI0rpBA;AoIzrpBA;ApI2rpBA;AoI1rpBA;ApI4rpBA;AoI3rpBA;ApI6rpBA;AoIhtpBA;ApIktpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoI3spBA;ApI6spBA;AACA;AACA;AoI3spBA;AAEA;ApI4spBA;AACA;AACA;AACA;AoI3spBA;AAEA;ApI4spBA;AACA;AACA;AACA;AoI3spBA;AAEA;ApI4spBA;AACA;AACA;AACA;AoI3spBA;AAEA;ApI4spBA;AACA;AACA;AACA;AACA;AACA;AoI7spBE;AACA;AACE;AACA;AAEA;ApI8spBJ;AoI7spBI;AAEA;ApI8spBJ;AoI7spBI;AAEA;ApI8spBJ;AoI7spBI;AACD;AAED;ApI8spBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoIhtpBI;AACD;AAED;ApIitpBF;AACA;AACA;AACA;AACA;AACA;AACA;AoIltpBsB;ApIotpBtB;AoIntpBI;AACE;AAAO;AAAkC;AAAzC;AACD;ApIwtpBL;AoIttpBI;AACE;AACA;AACD;ApIwtpBL;AoIttpBI;AACE;AACD;AACF;AAED;ApIutpBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoIxtpBsC;ApI0tpBtC;AoI1tpBsC;AAArB;AAAqB;ApI8tpBtC;AoI7tpBI;AACE;AADmB;ApIiupBzB;AoI5tpBI;AACA;AAIM;AACA;AACA;AACA;AACA;AAL+C;AAUjD;AACE;AACE;AACD;ApIwtpBX;AoIvtpBU;ApIytpBV;AoIxtpBU;AACE;AACA;AACA;AACA;AACD;ApI0tpBX;AoIztpBU;AACD;AACF;AAEC;AACE;AACE;AACD;AACF;AACC;ApI0tpBV;AoIztpBU;AACE;AACD;AACC;AACD;AACF;ApI2tpBT;AoI1tpBQ;AACD;AACJ;AAED;ApI2tpBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoI3tpBI;AACA;AAGI;AACD;AACJ;ApI2tpBH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqIx3pBA;ArI03pBA;AqIz3pBA;ArI23pBA;AqI13pBA;ArI43pBA;AqI33pBA;ArI63pBA;AqI53pBA;ArI83pBA;AqI73pBA;ArI+3pBA;AqIp5pBA;ArIs5pBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqI54pBA;AAGA;AACA;AAEA;ArI24pBA;AqI14pBO;AACL;AACA;AACA;AACA;AAJyB;ArIi5pB3B;AqI14pBA;AACA;AACA;AACA;AAEA;ArI24pBA;AACA;AACA;AACA;AACA;AACA;AqI54pBE;AACA;AACE;ArI84pBJ;AACA;AqI54pBI;AACA;ArI84pBJ;AACA;AACA;AqI74pBI;AAEA;ArI84pBJ;AACA;AACA;AqI74pBI;ArI+4pBJ;AqI55pBsB;AAAA;AAiBlB;ArI+4pBJ;AACA;AqI/4pBI;AAGD;AAED;ArI84pBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqIj5pB8B;ArIm5pB9B;AqIl5pBI;AACE;AACD;ArIo5pBL;AqIn5pBI;AAEA;ArIo5pBJ;AqIn5pBI;AAEI;AACA;AACD;AAEC;AACE;AACD;AAED;ArIk5pBR;AACA;AqIl5pBQ;ArIo5pBR;AACA;AqIj5pBQ;AACE;AACD;ArIm5pBT;AqIj5pBQ;AACE;AACD;ArIm5pBT;AqIj5pBQ;AACA;AAEI;ArIk5pBZ;AqIj5pBY;AACE;AACA;AACA;AACA;AACA;AAKD;ArI+4pBb;AqI94pBY;AACD;AAEC;ArI+4pBZ;AqI94pBY;AACE;AACE;AACD;AACF;AACC;AACD;ArIg5pBb;AqI/4pBY;AACD;AACJ;AACJ;AAED;ArIg5pBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqIh5pBI;AACE;AACA;AAFmB;ArIq5pBzB;AqIj5pBI;AACE;AACD;ArIm5pBL;AqIl5pBI;AAIM;AACA;AACA;AACA;AACA;AALc;AAOP;AAAA;AAEd;AAED;ArIg5pBF;AACA;AACA;AACA;AACA;AACA;AqIh5pBI;AACE;AACA;AACD;ArIk5pBL;AqIj5pBI;AACE;AACA;AACD;ArIm5pBL;AqIl5pBI;AACE;AACD;ArIo5pBL;AqIn5pBI;AACA;AACD;AAED;ArIo5pBF;AACA;AACA;AACA;AACA;AACA;AqIp5pBI;AACE;AACE;AADoE;AAGvE;AACF;AAED;ArIq5pBF;AACA;AACA;AACA;AACA;AACA;AqIr5pBI;AACD;AAED;ArIs5pBF;AACA;AACA;AACA;AACA;AqIt5pBI;AACD;AAED;ArIu5pBF;AACA;AACA;AACA;AACA;AACA;AqIv5pBI;AAAO;AAAwB;AAA/B;AACD;ArI45pBH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsI/mqBA;AtIinqBA;AsIhnqBA;AtIknqBA;AsIjnqBA;AtImnqBA;AsIlnqBA;AtIonqBA;AsInnqBA;AtIqnqBA;AsIpnqBA;AtIsnqBA;AsIpnqBA;AtIsnqBA;AsIrnqBA;AtIunqBA;AsItnqBA;AtIwnqBA;AsIvnqBA;AtIynqBA;AsIxnqBA;AtI0nqBA;AsIznqBA;AtI2nqBA;AsI1nqBA;AtI4nqBA;AsI3nqBA;AtI6nqBA;AsInqqBA;AtIqqqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsInqqBA;AtIqqqBA;AACA;AACA;AACA;AACA;AACA;AsIlpqBA;AAEA;AtImpqBA;AACA;AACA;AsIlpqBO;AtIopqBP;AsIlpqBA;AAEA;AAEA;AAEA;AtIipqBA;AACA;AACA;AACA;AsIhpqBA;AAEA;AtIipqBA;AACA;AACA;AACA;AsIhpqBA;AAEA;AtIipqBA;AACA;AACA;AACA;AsIhpqBA;AACE;AAD8B;AAIhC;AtIipqBA;AACA;AACA;AACA;AsIhpqBA;AACE;AADe;AAIjB;AtIipqBA;AACA;AACA;AACA;AsIhpqBA;AAEA;AtIipqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsIhpqBA;AAEA;AtIipqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsItpqBE;AtIwpqBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsIrpqBE;AtIupqBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsIxpqBA;AtI0pqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsI9pqBE;AACA;AACE;AACA;AAEA;AtI+pqBJ;AACA;AACA;AACA;AACA;AACA;AsI9pqBI;AAEA;AtI+pqBJ;AACA;AACA;AACA;AACA;AACA;AsI9pqBI;AAEA;AtI+pqBJ;AACA;AACA;AsI9pqBI;AAEA;AtI+pqBJ;AACA;AACA;AsI9pqBI;AAEA;AAEA;AtI8pqBJ;AsI7pqBI;AACD;AAED;AtI8pqBF;AACA;AACA;AACA;AACA;AsIjqqBqD;AtImqqBrD;AsIlqqBI;AAOA;AAEI;AACD;AAEC;AACA;AACA;AACD;AAEC;AACE;AACD;AtI2pqBT;AsI1pqBQ;AtI4pqBR;AACA;AsIxpqBQ;AAOI;AACD;AACJ;AACJ;AAED;AtImpqBF;AACA;AACA;AsInpqBI;AACD;AAED;AtIopqBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsIrpqBoD;AtIupqBpD;AsIvpqBoD;AAEhD;AtIwpqBJ;AsIvpqBI;AtIypqBJ;AsIxpqBI;AACE;AtI0pqBN;AsIzpqBM;AACE;AACE;AACE;AACD;AtI2pqBX;AsI1pqBU;AACE;AACA;AACA;AACD;AtI4pqBX;AsI3pqBU;AACD;AACF;AtI6pqBP;AsI5pqBM;AACD;AtI8pqBL;AsI5pqBI;AACE;AACE;AtI8pqBR;AsI7pqBQ;AACD;AtI+pqBP;AsI7pqBM;AACE;AACE;AACE;AACD;AtI+pqBX;AsI9pqBU;AACD;AACF;AtIgqqBP;AsI/pqBM;AACD;AACF;AAED;AtIgqqBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsIjqqBgD;AtImqqBhD;AsIlqqBI;AACE;AAGD;AACF;AAED;AtIiqqBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsIjqqBI;AACE;AACD;AtImqqBL;AsIlqqBI;AACD;AAED;AtImqqBF;AACA;AACA;AACA;AACA;AACA;AACA;AsInqqBI;AACA;AAAgD;AAAO;AtIuqqB3D;AsIpqqBI;AACE;AACA;AACE;AtIsqqBR;AsIrqqBQ;AACE;AACA;AACA;AACD;AACC;AACA;AtIuqqBV;AsItqqBU;AACE;AACD;AACC;AAG0C;AAAO;AAElD;AACF;AACF;AACF;AtIsqqBL;AsIrqqBI;AACD;AtIuqqBH;AACA;AACA;AsItqqBA;AtIwqqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsIxqqBO;AACL;AACA;AAA8B;AAAO;AtI4qqBvC;AACA;AsIvqqBE;AACE;AACD;AACF;AAED;AtIwqqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsIxqqBO;AACL;AAEI;AAAmD;AAAA;AACpD;AAEC;AACA;AACD;AACJ;AAED;AtIyqqBA;AACA;AACA;AACA;AACA;AACA;AACA;AsIzqqBA;AACE;AACA;AACE;AADwC;AAG3C;AAED;AtI0qqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsI1qqBA;AAAkE;AAAA;AAGhE;AACA;AtI4qqBF;AsI1qqBE;AACE;AAAO;AAAkC;AAAzC;AACD;AtI+qqBH;AsI7qqBE;AACE;AAAO;AAAkC;AAAzC;AACD;AtIkrqBH;AsIhrqBE;AACE;AACA;AACE;AACD;AtIkrqBL;AsIjrqBI;AAAO;AAAkC;AAAzC;AACD;AtIsrqBH;AsIprqBE;AAEE;AAFuB;AAGR;AAAA;AtIurqBnB;AsIprqBE;AACE;AACA;AACA;AACA;AtIsrqBJ;AsIrrqBI;AACE;AACD;AACF;AACD;AACD;AAED;AtIsrqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsItrqBO;AACL;AACA;AACD;AAED;AtIurqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsIvrqBA;AACE;AACE;AACD;AtIyrqBH;AsI5rqB6C;AAM3C;AACE;AACA;AAGA;AtIurqBJ;AsItrqBI;AACE;AtIwrqBN;AsIvrqBM;AACE;AACD;AACF;AACC;AACA;AACA;AACD;AtIyrqBL;AsIvrqBI;AACE;AACE;AACD;AACF;AtIyrqBL;AsIvrqBI;AACD;AACF;AAED;AtIwrqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsIxrqBA;AAAsD;AtI2rqBtD;AsIzrqBE;AACE;AACA;AACD;AACC;AACA;AACE;AACE;AACD;AAEC;AACA;AACA;AACD;AACF;AACF;AACF;AAED;AtIyrqBA;AACA;AACA;AACA;AACA;AACA;AACA;AsIzrqBO;AACL;AtI2rqBF;AsI1rqBE;AACE;AACE;AACD;AtI4rqBL;AACA;AsI3rqBI;AACA;AACE;AACA;AACE;AACA;AACA;AAEI;AAAoB;AACpB;AAFG;AAKR;AtI4rqBP;AsI3rqBM;AACD;AACF;AACF;AAED;AtI4rqBA;AACA;AACA;AACA;AACA;AACA;AACA;AsI5rqBA;AACE;AAEI;AACA;AAFG;AAKR;AAED;AtI2rqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsI3rqBA;AAAsB;AAEpB;AtI6rqBF;AsI5rqBE;AACE;AACD;AAEA;AtI6rqBH;AsI5rqBE;AtI8rqBF;AsI7rqBE;AACE;AACA;AACD;AtI+rqBH;AsI9rqBE;AACE;AACE;AACD;AtIgsqBL;AsI/rqBI;AACA;AACE;AACA;AAFK;AAIR;AACF;AAED;AtIgsqBA;AACA;AACA;AACA;AACA;AACA;AsIhsqBA;AACE;AACA;AACA;AACD;AAED;AtIisqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsIjsqBA;AACE;AACA;AACA;AACD;AAED;AtIksqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsIlsqBA;AACE;AACA;AtIosqBF;AsInsqBE;AACE;AACD;AtIqsqBH;AACA;AsInsqBE;AAOD;AAED;AtI8rqBA;AACA;AACA;AACA;AACA;AACA;AsI9rqBO;AACL;AtIgsqBF;AsI/rqBE;AACE;AACD;AACC;AACA;AACA;AAAa;AAA4B;AACzC;AAAkB;AAChB;AADgB;AAKnB;AACF;AAED;AtIisqBA;AACA;AACA;AACA;AACA;AsIjsqBO;AACL;AACD;AAED;AtIksqBA;AACA;AACA;AACA;AACA;AACA;AsIlsqBO;AACL;AACA;AACD;AtIosqBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuIx2rBA;AvI02rBA;AuIz2rBA;AvI22rBA;AuI53rBA;AvI83rBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuIz3rBA;AvI23rBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuIz3rBA;AAEA;AvI03rBA;AACA;AACA;AACA;AACA;AACA;AuIz3rBO;AACL;AACE;AvI23rBJ;AuI13rBI;AACE;AACD;AvI43rBL;AuI33rBI;AACD;AvI63rBH;AuI53rBE;AACD;AAED;AvI63rBA;AACA;AACA;AACA;AACA;AACA;AuI73rBA;AACE;AACD;AAED;AvI83rBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuI93rBO;AAML;AACA;AvI23rBF;AuI13rBE;AACE;AACD;AvI43rBH;AuI33rBE;AAGA;AACA;AACD;AAED;AvI03rBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuI13rBO;AAML;AvIu3rBF;AuIt3rBE;AACE;AACA;AACD;AvIw3rBH;AuIv3rBE;AACD;AAED;AvIw3rBA;AACA;AACA;AACA;AACA;AACA;AuIx3rBO;AACL;AACA;AAEA;AACE;AACA;AAFK;AAIR;AvIy3rBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwIt+rBA;AxIw+rBA;AwIv+rBA;AxIy+rBA;AwIx+rBA;AxI0+rBA;AwIz+rBA;AxI2+rBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwIr/rBA;AACA;AxIu/rBA;AACA;AACA;AACA;AwIv/rBE;AxIy/rBF;AACA;AwIv/rBE;AACE;AACA;AACA;AxIy/rBJ;AwIx/rBI;AACA;AxI0/rBJ;AwIz/rBI;AACA;AxI2/rBJ;AwI1/rBI;AACA;AxI4/rBJ;AwI3/rBI;AACA;AxI6/rBJ;AwI5/rBI;AACA;AxI8/rBJ;AwI7/rBI;AAEA;AxI8/rBJ;AwI7/rBI;AACA;AxI+/rBJ;AwI9/rBI;AACA;AAEA;AxI+/rBJ;AwI9/rBI;AACA;AACD;AAED;AxI+/rBF;AACA;AACA;AACA;AACA;AACA;AACA;AwIjgsBI;AACE;AACD;AxImgsBL;AACA;AwIlgsBI;AACE;AACD;AACF;AAED;AxImgsBF;AACA;AACA;AACA;AACA;AwIngsBI;AACE;AACD;AxIqgsBL;AwIpgsBI;AACA;AACA;AxIsgsBJ;AwIrgsBI;AACE;AACA;AACD;AxIugsBL;AACA;AwIrgsBI;AACE;AACA;AACA;AxIugsBN;AwIrgsBM;AxIugsBN;AwItgsBM;AACE;AACA;AxIwgsBR;AwItgsBQ;AACA;AACA;AACD;AxIwgsBP;AwIvgsBM;AxIygsBN;AwIxgsBM;AACE;AxI0gsBR;AwIngsBQ;AACD;AxIqgsBP;AwIpgsBM;AxIsgsBN;AwIrgsBM;AACE;AACD;AACF;AACF;AAED;AxIsgsBF;AACA;AACA;AACA;AACA;AACA;AACA;AwItgsBI;AAMD;AAED;AxIkgsBF;AACA;AACA;AACA;AACA;AACA;AwIlgsBI;AACA;AAEA;AAGA;AACD;AAED;AxIggsBF;AACA;AACA;AACA;AACA;AACA;AACA;AwIhgsBI;AAGD;AAED;AxI+/rBF;AACA;AACA;AACA;AACA;AwIhgsBgC;AxIkgsBhC;AwIjgsBI;AACE;AACD;AxImgsBL;AwIlgsBI;AACE;AxIogsBN;AwIngsBM;AACE;AACE;AACA;AACA;AxIqgsBV;AwIpgsBU;AACE;AACA;AAID;AACC;AACA;AACD;AACF;AACF;AACF;AACD;AAAgC;AAAD;AAChC;AAED;AxIogsBF;AACA;AACA;AACA;AACA;AwIrgsB8B;AxIugsB9B;AwItgsBI;AACE;AACE;AACA;AACD;AACF;AACF;AxIwgsBH;AACA;AACA;AwIvgsBA;AxIygsBA;AACA;AACA;AACA;AACA;AACA;AACA;AwI3gsBA;AACE;AACD;AAED;AxI4gsBA;AACA;AACA;AACA;AACA;AwI5gsBO;AACL;AAKD;AAED;AxIygsBA;AACA;AACA;AACA;AACA;AwIzgsBA;AACE;AACA;AACD;AxI2gsBD;AACA;AACA;AACA;AACA;AACA;AACA;AyIlvsBA;AzIovsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyIlvsBA;AzIovsBA;AyInvsBA;AzIqvsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyIzvsBE;AzI2vsBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyIxvsBE;AzI0vsBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyIzvsBE;AzI2vsBF;AACA;AACA;AACA;AACA;AACA;AyI1vsBE;AzI4vsBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyI3vsBE;AzI6vsBF;AACA;AACA;AACA;AACA;AACA;AACA;AyI5vsBE;AzI8vsBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyI7vsBE;AzI+vsBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyI9vsBE;AzIgwsBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyIlwsBA;AzIowsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Ir3sBA;A1Iu3sBA;A0It3sBA;A1Iw3sBA;A0Il3sBA;A1Io3sBA;A0In3sBA;A1Iq3sBA;A0Ip3sBA;A1Is3sBA;A0Ir3sBA;A1Iu3sBA;A0It3sBA;A1Iw3sBA;A0Iv3sBA;A1Iy3sBA;A0Ir3sBA;A1Iu3sBA;A0It3sBA;A1Iw3sBA;AACA;AACA;A0I35sBA;A1I65sBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Iv4sBA;AACA;A1Iy4sBA;A0Ix4sBA;AACA;A1I04sBA;A0Iz4sBA;AACA;AAEA;A1I04sBA;A0Iz4sBA;AAEA;A1I04sBA;AACA;AACA;AACA;A0Iz4sBA;AAEA;A1I04sBA;AACA;AACA;AACA;A0Iz4sBO;AACL;AACA;AAFsB;AAKxB;A1I04sBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0I34sBO;AACL;AAIE;AAAsB;AAEzB;AAED;A1Iy4sBA;AACA;AACA;AACA;AACA;AACA;A0Iz4sBO;AACL;AACD;AAED;A1I04sBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0I54sBE;A1I84sBF;AACA;AACA;A0I54sBE;AAAkC;A1I+4sBpC;A0I94sBI;A1Ig5sBJ;A0I94sBI;AACA;AAEA;A1I+4sBJ;A0I94sBI;AAEA;A1I+4sBJ;A0I94sBI;AAEA;A1I+4sBJ;A0I94sBI;AAEA;A1I+4sBJ;A0I94sBI;AAEA;A1I+4sBJ;A0I94sBI;AAEA;A1I+4sBJ;A0I94sBI;AAEA;A1I+4sBJ;A0I94sBI;AAGA;A1I84sBJ;A0I74sBI;AAGA;A1I64sBJ;A0I54sBI;AAEA;A1I64sBJ;AACA;AACA;AACA;A0I54sBI;AACE;AAAqC;AAKvC;A1I24sBJ;A0I14sBI;AACA;AACA;AACA;A1I44sBJ;A0I34sBI;AACA;AACE;AACD;AAED;A1I44sBJ;AACA;AACA;AACA;A0I34sBI;AAEA;A1I44sBJ;AACA;AACA;AACA;AACA;A0I34sBI;AAEA;A1I44sBJ;AACA;AACA;AACA;AACA;A0I34sBI;AACD;AAED;A1I44sBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0I54sBI;AAGE;AAAc;AAEjB;AAED;A1I24sBF;AACA;AACA;AACA;AACA;AACA;AACA;A0I34sBI;AAKD;AAED;A1Iw4sBF;AACA;AACA;AACA;AACA;AACA;AACA;A0I14sBI;AACE;AACA;AAID;AACF;AAED;A1Iw4sBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Ix4sBI;AAEA;AACA;AACA;AACA;A1Iy4sBJ;A0Ix4sBI;AACE;AACD;A1I04sBL;A0Ix4sBI;A1I04sBJ;A0Ix4sBI;AACE;AACD;AACF;AAED;A1Iy4sBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Ir4sBI;AAAA;AAAA;AAAA;AAAA;A1I24sBJ;A0I14sBI;A1I44sBJ;A0I34sBI;A1I64sBJ;A0I54sBI;AACE;AACA;AACD;A1I84sBL;A0I54sBI;A1I84sBJ;A0Ix4sBI;AAGA;AACA;A1Iw4sBJ;A0Iv4sBI;AACE;AACA;AACD;AAGD;A1Iu4sBJ;AACA;A0Iv4sBI;AACE;AACE;AACD;A1Iy4sBP;A0Ix4sBM;AACE;AACE;AACD;AACF;AACF;A1I04sBL;AACA;A0Ix4sBI;AACD;AAED;A1Iy4sBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Iz4sBI;AACE;AAGI;AACA;AAFG;AAKP;AACD;A1Iw4sBL;A0Iv4sBI;AACD;AAED;A1Iw4sBF;AACA;AACA;AACA;AACA;AACA;A0Ix4sBI;A1I04sBJ;A0Iv4sBI;AACE;AAGQ;AAAA;AACT;A1Iw4sBL;A0Iv4sBI;AACD;AAED;A1Iw4sBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Ix4sBI;AACE;AACD;A1I04sBL;A0Iz4sBI;AAGA;A1Iy4sBJ;A0Ix4sBI;AACE;AACD;A1I04sBL;A0Ix4sBI;AACE;AACD;AACC;AACD;AACF;AAED;A1Iy4sBF;AACA;AACA;AACA;AACA;AACA;AACA;A0Iz4sBI;AAEA;A1I04sBJ;A0Iv4sBI;AACE;AACD;A1Iy4sBL;AACA;A0Iv4sBI;AACE;AACD;AAGD;A1Iu4sBJ;AACA;A0Iv4sBI;AAEA;AACA;AACA;A1Iw4sBJ;A0It4sBI;AACE;AACA;AACA;AACD;A1Iw4sBL;AACA;A0It4sBI;AACD;AAED;A1Iu4sBF;AACA;AACA;AACA;AACA;AACA;AACA;A0Iv4sBI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAED;A1Iw4sBF;AACA;AACA;AACA;AACA;AACA;AACA;A0Ix4sBI;AACE;AACD;AACF;AAED;A1Iy4sBF;AACA;AACA;AACA;AACA;AACA;AACA;A0Iz4sBI;AACE;AACD;AACD;AACD;AAED;A1I04sBF;AACA;AACA;AACA;AACA;AACA;A0I14sBI;AACA;A1I44sBJ;A0I34sBI;AACE;AACA;AACD;A1I64sBL;A0I34sBI;A1I64sBJ;A0I54sBI;AACD;AAED;A1I64sBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0I74sBI;AACA;AACE;AACD;AAED;A1I84sBJ;AACA;A0I94sBI;AACA;AAR8C;AAY9C;AACA;A1I84sBJ;A0I74sBI;A1I+4sBJ;A0I54sBI;AACE;AACA;AACA;AACD;A1I84sBL;A0I54sBI;A1I84sBJ;A0I74sBI;AACE;AAEA;A1I84sBN;A0I74sBM;AACA;AACD;A1I+4sBL;A0I74sBI;AACD;AAED;A1I84sBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0I94sBI;AACE;AACD;A1Ig5sBL;A0I/4sBI;AAGQ;AAAA;A1Ig5sBZ;A0I/4sBI;AACE;AACD;A1Ii5sBL;AACA;A0Ih5sBI;AACE;AACA;AACD;A1Ik5sBL;A0Ij5sBI;AACD;AAED;A1Ik5sBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Il5sBI;AACA;AAGA;AACA;A1Ik5sBJ;A0Ij5sBI;AACE;AACE;AACA;AACA;A1Im5sBR;A0Il5sBQ;AACE;AACD;A1Io5sBT;A0In5sBQ;AACD;AAGD;AACA;AACA;AACA;AACA;A1Im5sBN;AACA;A0In5sBM;AACE;AACA;A1Iq5sBR;A0Ip5sBQ;AACE;AAGE;AACD;A1Io5sBX;A0In5sBU;AACD;AACF;A1Iq5sBP;A0Ip5sBM;AACD;A1Is5sBL;A0Ip5sBI;AACD;AAED;A1Iq5sBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0It5sB+C;A1Iw5sB/C;A0Iv5sBI;AACA;AACA;AACA;AAGA;A1Iu5sBJ;A0It5sBI;AACE;AACD;A1Iw5sBL;AACA;A0It5sBI;AACA;A1Iw5sBJ;A0Iv5sBI;AACE;AACA;AAGE;AACA;AAAe;AAAO;AACzB;AAGD;A1Iu5sBJ;AACA;A0Iv5sBI;AACE;AACE;AACD;AACF;AACC;AACA;AACD;AACF;AAED;A1Iw5sBF;AACA;AACA;AACA;AACA;AACA;A0Ix5sBI;AACD;AAED;A1Iy5sBF;AACA;AACA;AACA;AACA;AACA;A0Iz5sBI;AACD;AAED;A1I05sBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0I35sB+B;A1I65sB/B;A0I55sBI;AACA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAe;AAAO;A1Ig6sB5B;A0I/5sBM;AACE;AAAqB;AAAO;AAA5B;AAGH;AACC;AAID;AACF;AAED;A1I85sBF;AACA;AACA;AACA;AACA;AACA;AACA;A0I95sBI;AACD;A1Ig6sBH;AACA;AACA;A0I/5sBA;A1Ii6sBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0In6sBA;AACE;A1Iq6sBF;A0Ij6sBE;AACE;AACA;AACD;A1Im6sBH;A0Il6sBE;A1Io6sBF;A0Il6sBE;AACE;AACD;A1Io6sBH;A0In6sBE;AACE;AACE;AACD;AACD;AACE;AACD;AANU;A1I46sBf;A0Ip6sBE;AAIE;AAAoB;AAClB;AACA;AACA;AACA;AACA;AALkB;A1I06sBxB;A0Il6sBE;AACE;AACA;AACA;AACE;AACD;A1Io6sBL;A0In6sBI;AACD;AACF;AAED;A1Io6sBA;AACA;AACA;AACA;AACA;AACA;A0Ip6sBA;AACE;AACD;A1Is6sBD;AACA;AACA;AACA;AACA;AACA;AACA;A2InouBA;A3IqouBA;AACA;AACA;A2IrouBA;AACO;AAEP;A3IsouBA;A2IrouBA;A3IuouBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2IlpuBE;A3IopuBF;AACA;AACA;AACA;AACA;A2IjpuBE;A3ImpuBF;AACA;AACA;AACA;AACA;A2IlpuBE;A3IopuBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2InpuBE;A3IqpuBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2IppuBE;A3IspuBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2IrpuBE;A3IupuBF;AACA;AACA;AACA;AACA;AACA;AACA;A2ItpuBE;A3IwpuBF;AACA;AACA;AACA;AACA;AACA;AACA;A2IvpuBE;A3IypuBF;AACA;AACA;AACA;AACA;AACA;AACA;A2IxpuBE;A3I0puBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2IppuBE;A3IspuBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2IrpuBE;A3IupuBF;AACA;AACA;AACA;AACA;AACA;A2ItpuBE;A3IwpuBF;AACA;AACA;AACA;AACA;A2IvpuBE;A3IypuBF;AACA;AACA;AACA;AACA;AACA;A2IxpuBE;A3I0puBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2I5puBA;A3I8puBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4I5xuBA;A5I8xuBA;A4I7xuBA;A5I+xuBA;A4I9xuBA;A5IgyuBA;A4IlzuBA;A5IozuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4I9yuBA;A5IgzuBA;AACA;AACA;AACA;AACA;A4IhzuBE;A5IkzuBF;AACA;AACA;A4IhzuBE;AACE;AACA;AAEA;A5IizuBJ;A4IhzuBI;A5IkzuBJ;A4IvzuBsB;AAAA;AASlB;A5IkzuBJ;AACA;A4IlzuBI;AAGD;AAED;A5IizuBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4InzuBI;AACE;AACD;A5IqzuBL;A4IpzuBI;AACD;AAED;A5IqzuBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4IrzuBI;AACE;AACA;AACA;AAHmB;A5I2zuBzB;A4ItzuBI;AACE;AACD;A5IwzuBL;A4IvzuBI;AACD;A5IyzuBH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6I13uBA;A7I43uBA;A6Ip3uBA;A7Is3uBA;A6I94uBA;A7Ig5uBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6I/3uBA;AACO;A7Ii4uBP;AACA;AACA;AACA;AACA;AACA;AACA;A6Ip4uBE;A7Is4uBF;AACA;AACA;AACA;A6Ip4uBE;A7Is4uBF;AACA;AACA;AACA;AACA;A6Ip4uBI;AAAO;AAAiF;AAAxF;AAKD;AAED;A7Io4uBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Ip4uBI;AAAO;AAAiF;AAAxF;AAKD;AAED;A7Io4uBF;AACA;AACA;AACA;AACA;AACA;AACA;A6Ip4uBI;AAAO;AAA+C;AAAtD;AAKD;AAED;A7Io4uBF;AACA;AACA;AACA;AACA;AACA;AACA;A6Ip4uBI;AAAO;AAA+C;AAAtD;AAKD;AAED;A7Io4uBF;AACA;AACA;AACA;AACA;AACA;A6Ip4uBI;AAAO;AAAqD;AAA5D;AAID;AAED;A7Iq4uBF;AACA;AACA;AACA;AACA;AACA;A6Ir4uBI;AAAO;AAAiE;AAAxE;AAID;AAED;A7Is4uBF;AACA;AACA;AACA;AACA;AACA;A6It4uBI;AAAO;AAAkF;AAAzF;AAKD;AAED;A7Is4uBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6It4uBI;AAAO;AAAqD;AAA5D;AAID;AAED;A7Iu4uBF;AACA;AACA;AACA;AACA;AACA;AACA;A6Iv4uBI;AACD;AAED;A7Iw4uBF;AACA;AACA;AACA;AACA;AACA;AACA;A6Iz4uByD;AAAvB;AAAuB;A7I64uBzD;A6I54uBI;AACE;AACA;AACA;AAAmC;AAAO;AAI3C;A7I64uBL;A6I54uBI;AAAO;AAAkG;AAAzG;AAKD;AAED;A7I44uBF;AACA;AACA;AACA;AACA;AACA;A6I54uBI;AAAO;AAAkG;AAAzG;AAKD;AAED;A7I44uBF;AACA;AACA;AACA;AACA;AACA;A6I54uBI;AAAO;AAAuD;AAA9D;AAID;AAED;A7I64uBF;AACA;AACA;AACA;AACA;AACA;A6I74uBI;AAAO;AAAqE;AAA5E;AAKD;AAED;A7I64uBF;AACA;AACA;AACA;AACA;AACA;A6I74uBI;AAAO;AAAqD;AAA5D;AAID;AAED;A7I84uBF;AACA;AACA;AACA;AACA;AACA;A6I94uBI;AAAO;AAAiD;AAAxD;AAID;AAED;A7I+4uBF;AACA;AACA;AACA;AACA;AACA;A6I/4uBI;AAAO;AAAiF;AAAxF;AAKD;AAED;A7I+4uBF;AACA;AACA;AACA;AACA;AACA;A6I/4uBI;AAAO;AAA6F;AAApG;AAKD;AAED;A7I+4uBF;AACA;AACA;AACA;AACA;AACA;A6I/4uBI;AAAO;AAA8C;AAArD;AAID;AAED;A7Ig5uBF;AACA;AACA;AACA;AACA;AACA;A6Ih5uBI;AAAO;AAAsD;AAA7D;AAID;AAED;A7Ii5uBF;AACA;AACA;AACA;AACA;AACA;A6Ij5uBI;AAAO;AAAsD;AAA7D;AAID;AAED;A7Ik5uBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Il5uBI;AAAO;AAA2F;AAAlG;AAID;AAED;A7Im5uBF;AACA;AACA;AACA;AACA;AACA;AACA;A6In5uBI;AAAO;AAA+D;AAAtE;AAID;AAED;A7Io5uBF;AACA;AACA;AACA;AACA;AACA;AACA;A6Ip5uBI;AAAO;AAAgD;AAAvD;AAID;AAED;A7Iq5uBF;AACA;AACA;AACA;AACA;AACA;A6Ir5uBI;AACD;AAED;A7Is5uBF;AACA;AACA;AACA;AACA;AACA;AACA;A6It5uBI;AAAO;AAA6F;AAApG;AAKD;AAED;A7Is5uBF;AACA;AACA;AACA;AACA;AACA;A6It5uBI;AAAO;AAA4D;AAAnE;AAID;AAED;A7Iu5uBF;AACA;AACA;AACA;AACA;AACA;A6Iv5uBI;AAAO;AAAuD;AAA9D;AAID;AAED;A7Iw5uBF;AACA;AACA;AACA;AACA;AACA;A6Ix5uBI;AAAO;AAAuD;AAA9D;AAID;AAED;A7Iy5uBF;AACA;AACA;AACA;AACA;AACA;A6Iz5uBI;AAAO;AAAkD;AAAzD;AAID;AAED;A7I05uBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6I15uBI;AAAO;AAAqF;AAA5F;AAID;AAED;A7I25uBF;AACA;AACA;AACA;AACA;AACA;A6I35uBI;AAAO;AAAkE;AAAzE;AAID;AAED;A7I45uBF;AACA;AACA;AACA;AACA;AACA;A6I55uBI;AAAO;AAA4E;AAAnF;AAID;AAED;A7I65uBF;AACA;AACA;AACA;AACA;AACA;A6I75uBI;AAAO;AAAgF;AAAvF;AAMD;AAED;A7I45uBF;AACA;AACA;AACA;AACA;AACA;AACA;A6I55uBI;AACE;AACC;AAFH;AAID;AAED;A7I65uBF;AACA;AACA;AACA;AACA;AACA;A6I75uBI;AACE;AACC;AAFH;AAID;AAED;A7I85uBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6I95uBI;AACE;AACC;AAFH;AAID;AAED;A7I+5uBF;AACA;AACA;AACA;AACA;AACA;A6I/5uBI;AACE;AACC;AAFH;AAID;AAED;A7Ig6uBF;AACA;AACA;AACA;AACA;AACA;A6Ih6uBI;AACE;AACC;AAFH;AAID;AAED;A7Ii6uBF;AACA;AACA;AACA;AACA;AACA;A6Ij6uBI;AACE;AACC;AAFH;AAID;AAED;A7Ik6uBF;AACA;AACA;AACA;AACA;AACA;A6Il6uBI;AACE;AACC;AAFH;AAID;AAED;A7Im6uBF;AACA;AACA;AACA;AACA;AACA;A6In6uBI;AACE;AACC;AAFH;AAID;AAED;A7Io6uBF;AACA;AACA;AACA;AACA;AACA;A6Ip6uBI;AACD;AAED;A7Iq6uBF;AACA;AACA;AACA;AACA;AACA;AACA;A6Ir6uBI;AACE;AACC;AAFH;AAID;AAED;A7Is6uBF;AACA;AACA;AACA;AACA;AACA;A6It6uBI;AACE;AACC;AAFH;AAID;AAED;A7Iu6uBF;AACA;AACA;AACA;AACA;AACA;AACA;A6Iv6uBI;AACD;AAED;A7Iw6uBF;AACA;AACA;AACA;AACA;AACA;AACA;A6Ix6uBI;AACD;AAED;A7Iy6uBF;AACA;AACA;AACA;AACA;AACA;AACA;A6Iz6uBI;AACE;AACC;AAFH;AAID;AAED;A7I06uBF;AACA;AACA;AACA;AACA;AACA;AACA;A6I16uBI;AACD;AAED;A7I26uBF;AACA;AACA;AACA;AACA;AACA;A6I36uBI;AACE;AACC;AAFH;AASD;AAED;A7Iu6uBF;AACA;AACA;AACA;AACA;AACA;A6Iv6uBI;AACE;AACC;AAFH;AAID;AAED;A7Iw6uBF;AACA;AACA;AACA;AACA;AACA;A6Ix6uBI;AAAO;AAA0D;AAAjE;AAID;AAED;A7Iy6uBF;AACA;AACA;AACA;AACA;AACA;A6Iz6uBI;AAAO;AAAmD;AAA1D;AAID;AAED;A7I06uBF;AACA;AACA;AACA;AACA;AACA;A6I16uBI;AACA;AAAO;AAA4C;AAAnD;AAID;AAED;A7I26uBF;AACA;AACA;AACA;AACA;AACA;A6I36uBI;AAAO;AAAiE;AAAxE;AAID;AAED;A7I46uBF;AACA;AACA;AACA;AACA;AACA;A6I56uBI;AACE;AACC;AAFH;AAQD;AAED;A7Iy6uBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Iz6uBI;AACE;AACC;AAFH;AAQD;AAED;A7Is6uBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6It6uBI;AAAO;AAAoE;AAA3E;AAMD;AAED;A7Iq6uBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Ir6uBI;AAAO;AAAyG;AAAhH;AAMD;AAED;A7Io6uBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Ip6uBI;AAAO;AAAwC;AAA/C;AAID;AAED;A7Iq6uBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Ir6uBI;AAAO;AAA6E;AAApF;AAMD;AAED;A7Io6uBF;AACA;AACA;AACA;AACA;AACA;A6Ip6uBI;AAAO;AAA2D;AAAlE;AAID;AAED;A7Iq6uBF;AACA;AACA;AACA;AACA;AACA;A6Ir6uBI;AACE;AACC;AAFH;AAQD;AAED;A7Ik6uBF;AACA;AACA;AACA;AACA;AACA;A6Il6uBI;AAAO;AAA4D;AAAnE;AAID;AAED;A7Im6uBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6In6uBI;AAAO;AAAsE;AAA7E;AAID;AAED;A7Io6uBF;AACA;AACA;AACA;AACA;AACA;A6Ip6uBI;AAAO;AAA4C;AAAnD;AAID;AAED;A7Iq6uBF;AACA;AACA;AACA;AACA;AACA;A6Ir6uBI;AAAO;AAAyE;AAAhF;AAID;AAED;A7Is6uBF;AACA;AACA;AACA;AACA;AACA;A6It6uBI;AAAO;AAAwC;AAA/C;AACD;A7I26uBH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8I7uwBA;A9I+uwBA;A8I9uwBA;A9IgvwBA;A8IjwwBA;A9ImwwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8I7vwBA;AACA;AAEA;A9I8vwBA;AACA;AACA;AACA;AACA;AACA;A8I7vwBO;AACL;A9I+vwBF;A8I9vwBE;AACE;AACD;A9IgwwBH;A8I9vwBE;AACD;AAED;A9I+vwBA;AACA;AACA;AACA;AACA;AACA;AACA;A8I/vwBO;AACL;A9IiwwBF;A8IhwwBE;AACE;AACD;A9IkwwBH;A8IhwwBE;AACD;AAED;A9IiwwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8IjwwBA;AACE;AACD;AAED;A9IkwwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8IlwwBA;AACE;AACD;AAED;A9ImwwBA;AACA;AACA;AACA;AACA;AACA;AACA;A8InwwBA;AACE;AACA;AAAU;AAAO;AAEjB;AACA;AACA;A9IswwBF;A8InwwBE;AAEA;AACD;AAED;A9ImwwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8InwwBO;AACL;AACA;A9IqwwBF;A8InwwBE;AACE;AACA;AACA;AACA;AACA;AACD;A9IqwwBH;A8InwwBE;AACD;A9IqwwBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+It5wBA;A/Iw5wBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+It5wBA;A/Iw5wBA;AACA;AACA;AACA;A+It5wBA;AACE;AACD;AAED;A/Iu5wBA;AACA;AACA;AACA;AACA;A+Iv5wBA;AACE;AACD;AAED;A/Iw5wBA;AACA;AACA;AACA;AACA;AACA;A+Ix5wBO;AACL;AACD;AAED;A/Iy5wBA;AACA;AACA;AACA;AACA;AACA;AACA;A+Iz5wBO;AACL;AACD;AAED;A/I05wBA;AACA;AACA;AACA;AACA;A+I15wBO;AACL;AACD;AAED;A/I25wBA;AACA;AACA;AACA;AACA;AACA;AACA;A+I35wBO;AACL;AACA;AACD;AAED;A/I45wBA;AACA;AACA;AACA;AACA;AACA;AACA;A+I55wBO;AACL;AACE;AACD;A/I85wBH;A+I75wBE;AACD;AAED;A/I85wBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+I95wBO;AACL;AACE;AACD;A/Ig6wBH;A+I/5wBE;AACE;AACD;A/Ii6wBH;A+Ih6wBE;AACD;AAED;A/Ii6wBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Ij6wBO;AACL;A/Im6wBF;A+Ip6wBoE;AAGhE;AACA;AACE;AACA;AACD;A/Io6wBL;A+In6wBI;AACE;AACD;AAV+D;A/Ig7wBpE;A+I96wBE;AAAwC;A/Ii7wB1C;A+Ij7wB0C;AASvC;A/I26wBH;A+I16wBE;AACD;AAED;A/I26wBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+I36wBO;AAA2B;AAEhC;A/I66wBF;A+I56wBE;AACE;AACD;A/I86wBH;AACA;A+I76wBE;AACD;AAED;A/I86wBA;AACA;AACA;AACA;AACA;AACA;A+I96wBO;AACL;AACA;AACE;AACD;A/Ig7wBH;A+I96wBE;AACD;AAED;A/I+6wBA;AACA;AACA;AACA;AACA;AACA;A+I/6wBO;AACL;AACE;AACD;A/Ii7wBH;A+I/6wBE;AACD;AAED;A/Ig7wBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Ih7wBO;AACL;AACE;AACD;A/Ik7wBH;A+Ij7wBE;AACA;A/Im7wBF;A+Il7wBE;AACE;AACD;A/Io7wBH;A+In7wBE;AACD;A/Iq7wBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgJ7nxBA;AhJ+nxBA;AgJ9nxBA;AhJgoxBA;AgJ/nxBA;AhJioxBA;AgJppxBA;AhJspxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgJnpxBA;AhJqpxBA;AgJhpxBA;AACA;AAEA;AhJipxBA;AgJhpxBA;AAEA;AhJipxBA;AACA;AACA;AACA;AACA;AgJhpxBO;AACL;AACD;AAED;AhJipxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgJjpxBA;AACE;AACE;AhJmpxBJ;AgJlpxBI;AACE;AACD;AACF;AhJopxBH;AgJnpxBE;AACD;AAED;AhJopxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgJppxBO;AACL;AACE;AACA;AACD;AhJspxBH;AgJrpxBE;AACE;AACD;AhJupxBH;AgJtpxBE;AhJwpxBF;AgJvpxBE;AACE;AhJypxBJ;AgJxpxBI;AACE;AACA;AhJ0pxBN;AgJxpxBM;AACE;AACD;AACF;AhJ0pxBL;AgJzpxBI;AACE;AACD;AACF;AhJ2pxBH;AgJ1pxBE;AACD;AAED;AhJ2pxBA;AACA;AACA;AACA;AACA;AACA;AACA;AgJ3pxBO;AAA6C;AhJ8pxBpD;AgJ5pxBE;AACE;AAKD;AACF;AAED;AhJypxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgJzpxBO;AACL;AhJ2pxBF;AgJtpxBE;AACE;AAA8B;AAAuB;AAGtD;AACF;AAED;AhJupxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgJvpxBO;AACL;AhJypxBF;AgJppxBE;AACE;AACD;AhJspxBH;AgJrpxBE;AACD;AAED;AhJspxBA;AACA;AACA;AACA;AACA;AACA;AACA;AgJtpxBO;AACL;AACE;AACD;AACF;AAED;AhJupxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgJvpxBO;AACL;AACE;AAID;AhJspxBH;AgJrpxBE;AACD;AAED;AhJspxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgJtpxBO;AACL;AACE;AAID;AhJqpxBH;AgJppxBE;AACD;AAED;AhJqpxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgJrpxBO;AAAsC;AAE3C;AAIA;AAMA;AACD;AAED;AhJ8oxBA;AACA;AACA;AACA;AACA;AACA;AgJ9oxBO;AACL;AACE;AACD;AhJgpxBH;AgJ/oxBE;AACE;AACD;AACC;AACD;AACF;AAED;AhJgpxBA;AACA;AACA;AACA;AACA;AACA;AgJhpxBO;AACL;AACD;AAED;AhJipxBA;AACA;AACA;AACA;AACA;AACA;AgJjpxBO;AACL;AACD;AAED;AhJkpxBA;AACA;AACA;AACA;AACA;AACA;AgJlpxBO;AACL;AACE;AACD;AhJopxBH;AgJnpxBE;AACD;AAED;AhJopxBA;AACA;AACA;AACA;AACA;AACA;AACA;AgJppxBO;AACL;AACE;AACD;AhJspxBH;AgJrpxBE;AACE;AACD;AhJupxBH;AgJtpxBE;AACE;AACD;AhJwpxBH;AgJvpxBE;AACD;AAED;AhJwpxBA;AACA;AACA;AACA;AACA;AACA;AgJxpxBO;AACL;AACD;AAED;AhJypxBA;AACA;AACA;AACA;AACA;AACA;AgJzpxBO;AACL;AACE;AACD;AhJ2pxBH;AgJ1pxBE;AACD;AAED;AhJ2pxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgJ3pxBO;AACL;AAID;AAED;AhJypxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgJzpxBO;AACL;AAAc;AAAqC;AACnD;AAAO;AAAwC;AAA/C;AACD;AAED;AhJ+pxBA;AACA;AACA;AACA;AACA;AACA;AgJ/pxBO;AACL;AACE;AACD;AACF;AAED;AhJgqxBA;AACA;AACA;AACA;AACA;AACA;AgJhqxBO;AACL;AACE;AACD;AhJkqxBH;AgJhqxBE;AACE;AACD;AACF;AhJkqxBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiJthyBA;AjJwhyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiJthyBA;AACA;AAEA;AjJuhyBA;AACA;AACA;AACA;AACA;AiJthyBA;AACE;AACD;AAED;AjJuhyBA;AACA;AACA;AACA;AACA;AACA;AiJvhyBO;AACL;AACD;AAED;AjJwhyBA;AACA;AACA;AACA;AACA;AACA;AACA;AiJxhyBO;AACL;AACD;AAED;AjJyhyBA;AACA;AACA;AACA;AACA;AACA;AiJzhyBO;AACL;AACD;AAED;AjJ0hyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiJ1hyBO;AACL;AACD;AAED;AjJ2hyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiJ3hyBO;AACL;AACE;AACE;AACD;AACF;AjJ6hyBH;AiJ5hyBE;AACD;AAED;AjJ6hyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiJ7hyBO;AACL;AAAO;AAAwB;AAA/B;AACD;AjJkiyBD;AACA;AACA;AACA;AACA;AACA;AACA;AkJxnyBA;AlJ0nyBA;AkJ1oyBA;AlJ4oyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkJvoyBA;AAEA;AlJwoyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkJvoyBO;AACL;AAAe;AAA4B;AlJ2oyB7C;AkJ1oyBE;AACE;AACD;AlJ4oyBH;AkJ1oyBE;AlJ4oyBF;AkJ3oyBE;AACE;AACA;AAGA;AACD;AlJ2oyBH;AkJ1oyBE;AACD;AlJ4oyBD;AACA;AACA;AACA;AACA;AACA;AACA;AmJ/ryBA;AnJisyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmJ/ryBA;AnJisyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmJ/ryBO;AAA0D;AAAf;AAAe;AnJosyBjE;AmJnsyBE;AACE;AACD;AACC;AACD;AACF;AnJqsyBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoJxvyBA;ApJ0vyBA;AoJzvyBA;ApJ2vyBA;AoJ1vyBA;ApJ4vyBA;AoJ3vyBA;ApJ6vyBA;AoJ5vyBA;ApJ8vyBA;AoJ7vyBA;ApJ+vyBA;AoJ9vyBA;ApJgwyBA;AoJ/vyBA;ApJiwyBA;AoJhwyBA;ApJkwyBA;AoJ1xyBA;ApJ4xyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoJhxyBA;ApJkxyBA;AACA;AoJhxyBA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAV+B;AAajC;ApJixyBA;AACA;AACA;AACA;AoJhxyBA;AAEA;ApJixyBA;AACA;AACA;AACA;AACA;AACA;AoJhxyBA;AAEA;ApJixyBA;AoJhxyBA;AAEA;ApJixyBA;AoJhxyBA;AAEA;ApJixyBA;AoJhxyBA;AAEA;ApJixyBA;AoJhxyBA;AAEA;ApJixyBA;AoJhxyBA;AAEA;AACE;AAA4B;AAC5B;AAA4B;AAC5B;AAA4B;AAG9B;ApJkxyBA;AoJjxyBO;AAEP;ApJkxyBA;AACA;AACA;AACA;AACA;AACA;AACA;AoJnxyBO;AACL;AACD;AAED;ApJoxyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoJpxyBO;AACL;AACE;AAAI;AAAmC;AACvC;AACD;ApJwxyBH;AoJtxyBE;AACD;AAED;ApJuxyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoJvxyBO;AACL;AACE;AACD;ApJyxyBH;AoJvxyBE;AAGA;ApJuxyBF;AoJtxyBE;AACE;AACD;ApJwxyBH;AoJtxyBE;AAAa;AAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ApJ0xyBJ;AoJnyyByC;AAavC;ApJyxyBF;AoJxxyBE;AACE;AACD;AAGD;ApJwxyBF;AACA;AoJxxyBE;AAIE;AACA;AACD;AAGD;ApJqxyBF;AACA;AoJrxyBE;ApJuxyBF;AoJtxyBE;AACE;AACD;AACC;AACD;AACC;AACD;ApJwxyBH;AoJvxyBE;ApJyxyBF;AoJtxyBE;ApJwxyBF;AoJtxyBE;AACE;AACD;ApJwxyBH;AoJtxyBE;AACD;AAED;ApJuxyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoJvxyBO;AAKL;AACE;AACD;ApJqxyBH;AoJpxyBE;AACA;AAEA;AAOA;AACA;AACD;AACD;ApJ+wyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoJ/wyBO;AACL;AACA;AACD;AAED;ApJgxyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoJhxyBO;AACL;AACD;AAED;ApJixyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoJjxyBO;AACL;AACA;AACA;AACA;ApJmxyBF;AoJlxyBE;AACE;AACE;AACD;AACF;ApJoxyBH;AoJnxyBE;AACD;AAED;ApJoxyBA;AACA;AACA;AACA;AACA;AACA;AACA;AoJpxyBO;AACL;ApJsxyBF;AoJrxyBE;AACE;ApJuxyBJ;AoJtxyBI;AACE;AACD;AACC;AACE;AAAW;AAAuB;AAClC;AACD;AACF;AACC;AAAW;AAAuB;AAClC;AACD;AACF;ApJ4xyBH;AoJ3xyBE;AACD;AAED;ApJ4xyBA;AACA;AACA;AACA;AACA;AACA;AoJ5xyBO;AACL;AACE;AACD;ApJ8xyBH;AoJ7xyBE;AAMD;AAED;ApJyxyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoJzxyBO;AAIL;AADA;AACA;ApJ0xyBF;AoJzxyBE;ApJ2xyBF;AoJpxyBE;AAAqB;AAAuB;AAC5C;AASA;AACD;AAED;ApJ+wyBA;AACA;AACA;AACA;AACA;AACA;AoJ/wyBO;AACL;AAKA;AACD;AAED;ApJ4wyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoJ5wyBO;AACL;AACD;AAED;ApJ6wyBA;AACA;AACA;AACA;AACA;AACA;AACA;AoJ7wyBO;AACL;ApJ+wyBF;AoJ9wyBE;AACE;AACD;ApJgxyBH;AoJ/wyBE;AACD;AAED;ApJgxyBA;AACA;AACA;AACA;AACA;AACA;AACA;AoJhxyBO;AACL;ApJkxyBF;AoJjxyBE;AACE;AACD;ApJmxyBH;AoJlxyBE;AACD;AAED;ApJmxyBA;AACA;AACA;AACA;AACA;AACA;AoJnxyBO;AACL;AACE;AACD;ApJqxyBH;AoJpxyBE;AACD;AAED;ApJqxyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoJrxyBO;AACL;AACE;AACD;ApJuxyBH;AoJtxyBE;AACE;AACD;ApJwxyBH;AoJvxyBE;AACA;AACD;AAED;ApJwxyBA;AACA;AACA;AACA;AACA;AACA;AoJxxyBO;AACL;AACE;AACD;ApJ0xyBH;AoJzxyBE;AACD;AAED;ApJ0xyBA;AACA;AACA;AACA;AACA;AACA;AACA;AoJ1xyBO;AACL;AACE;AACD;ApJ4xyBH;AoJ3xyBE;AACE;AACD;ApJ6xyBH;AoJ5xyBE;AACD;AAED;ApJ6xyBA;AACA;AACA;AACA;AACA;AACA;AoJ7xyBO;AACL;AACA;AACA;AACD;AAED;ApJ8xyBA;AACA;AACA;AACA;AACA;AACA;AoJ9xyBO;AACL;ApJgyyBF;AoJ/xyBE;AACE;AACD;ApJiyyBH;AoJhyyBE;AACA;AACD;AAED;ApJiyyBA;AACA;AACA;AACA;AACA;AACA;AACA;AoJjyyBA;AACE;AACE;AACD;ApJmyyBH;AoJlyyBE;ApJoyyBF;AoJ7xyBE;AACD;AAED;ApJ8xyBA;AACA;AACA;AACA;AACA;AACA;AACA;AoJ9xyBO;AACL;AACA;AACA;AACE;AACD;ApJgyyBH;AoJ/xyBE;AACA;AACA;AACD;AAED;ApJgyyBA;AACA;AACA;AACA;AACA;AACA;AACA;AoJhyyBO;AACL;AACE;AACD;ApJkyyBH;AACA;AoJhyyBE;AACE;AACD;AAGD;AACA;AACA;ApJgyyBF;AACA;AoJhyyBE;AACA;AACA;AAKA;AACA;ApJ8xyBF;AoJzxyBE;AACA;AACA;AAMD;AAED;ApJqxyBA;AACA;AACA;AACA;AACA;AACA;AACA;AoJrxyBO;AACL;AACD;AAED;ApJsxyBA;AACA;AACA;AACA;AACA;AACA;AACA;AoJtxyBO;AACL;AACE;AACD;ApJwxyBH;AoJvxyBE;AACE;AACD;ApJyxyBH;AoJxxyBE;AACD;AAED;ApJyxyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoJzxyBO;AACL;AACE;AACD;ApJ2xyBH;AoJ1xyBE;AACA;ApJ4xyBF;AoJzxyBE;AACE;AACD;ApJ2xyBH;AACA;AoJzxyBE;AACE;AACD;ApJ2xyBH;AACA;AoJzxyBE;AACE;AACD;ApJ2xyBH;AACA;AoJzxyBE;AAKD;AAED;ApJsxyBA;AACA;AACA;AACA;AACA;AACA;AACA;AoJtxyBO;AACL;AACA;AACA;AACD;AAED;ApJuxyBA;AACA;AACA;AACA;AACA;AoJvxyBO;AACL;AACA;AACA;AAKD;AAED;ApJoxyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoJpxyBO;AACL;AACD;ApJsxyBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqJ56zBA;ArJ86zBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqJ56zBA;ArJ86zBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqJ56zBO;AACL;AACE;AACD;ArJ86zBH;AqJ76zBE;AACE;AACE;AACD;AACF;ArJ+6zBH;AqJ96zBE;AACD;AAED;ArJ+6zBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqJ/6zBO;AACL;AACA;ArJi7zBF;AqJh7zBE;AACE;ArJk7zBJ;AqJj7zBI;AACE;AACD;AACC;AACE;AACD;ArJm7zBP;AqJl7zBM;AACD;AACF;ArJo7zBH;AqJn7zBE;AACE;AACD;ArJq7zBH;AqJp7zBE;AACD;AAED;ArJq7zBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqJr7zBO;AACL;AACE;AACE;AACD;AACF;ArJu7zBH;AqJt7zBE;AACD;AAED;ArJu7zBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqJv7zBO;AACL;ArJy7zBF;AqJx7zBE;AACE;AACD;ArJ07zBH;AqJz7zBE;AACD;AAED;ArJ07zBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqJ17zBO;AACL;AACE;AACD;AACF;AAED;ArJ27zBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqJ37zBO;AACL;AACD;ArJ67zBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsJhj0BA;AtJkj0BA;AsJlk0BA;AtJok0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsJhk0BA;AtJkk0BA;AACA;AACA;AsJhk0BA;AAA6B;AAAU;AAAU;AAArB;AAE5B;AtJqk0BA;AACA;AACA;AACA;AsJpk0BA;AAA6B;AAAU;AAAU;AAArB;AAE5B;AtJyk0BA;AACA;AACA;AACA;AACA;AACA;AsJxk0BO;AACL;AAA6C;AAAA;AAC7C;AACD;AAED;AtJ2k0BA;AACA;AACA;AACA;AACA;AACA;AACA;AsJ3k0BO;AACL;AACD;AAED;AtJ4k0BA;AACA;AACA;AACA;AACA;AACA;AACA;AsJ5k0BO;AACL;AACA;AAAqC;AAAA;AACtC;AAED;AtJ+k0BA;AACA;AACA;AACA;AACA;AACA;AACA;AsJ/k0BO;AACL;AACA;AACD;AAED;AtJgl0BA;AACA;AACA;AACA;AACA;AACA;AsJhl0BO;AACL;AACA;AACD;AAED;AtJil0BA;AACA;AACA;AACA;AACA;AACA;AsJjl0BO;AACL;AACD;AtJml0BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuJxq0BA;AvJ0q0BA;AuJ1r0BA;AvJ4r0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuJxr0BA;AvJ0r0BA;AACA;AACA;AACA;AuJxr0BO;AACL;AACE;AACD;AvJ0r0BH;AuJzr0BE;AACA;AACD;AAED;AvJ0r0BA;AACA;AACA;AACA;AACA;AACA;AuJ1r0BO;AACL;AACE;AACD;AvJ4r0BH;AuJ3r0BE;AACD;AAED;AvJ4r0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuJ5r0BO;AACL;AvJ8r0BF;AuJ7r0BE;AACE;AACA;AACA;AACD;AvJ+r0BH;AuJ9r0BE;AACD;AAED;AvJ+r0BA;AACA;AACA;AACA;AACA;AACA;AuJ/r0BO;AACL;AACA;AACA;AvJis0BF;AuJhs0BE;AACE;AACD;AvJks0BH;AuJjs0BE;AACD;AAED;AvJks0BA;AACA;AACA;AACA;AACA;AACA;AACA;AuJls0BO;AACL;AACE;AACD;AvJos0BH;AuJns0BE;AvJqs0BF;AuJ/r0BE;AACD;AAED;AvJgs0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuJhs0BO;AACL;AACE;AACD;AAGD;AvJgs0BF;AACA;AuJhs0BE;AACA;AACA;AACD;AvJks0BD;AACA;AACA;AACA;AACA;AACA;AACA;AwJvz0BA;AxJyz0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwJtz0BA;AxJwz0BA;AwJvz0BA;AxJyz0BA;AwJvz0BA;AxJyz0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwJvz0BO;AACL;AACA;AACA;AACA;AACE;AAAgB;AADP;AACO;AxJ4z0BpB;AwJ3z0BM;AACA;AACA;AACD;AxJ6z0BL;AwJ5z0BI;AACD;AACF;AxJ8z0BD;AACA;AACA;AACA;AACA;AACA;AACA;AyJ/10BA;AzJi20BA;AyJj30BA;AzJm30BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyJ/20BA;AACA;AAEA;AzJg30BA;AACA;AACA;AACA;AACA;AACA;AyJj30BE;AzJm30BF;AACA;AyJj30BE;AACE;AACA;AAEA;AzJk30BJ;AyJj30BI;AAEA;AzJk30BJ;AACA;AACA;AACA;AyJj30BI;AAEA;AzJk30BJ;AyJj30BI;AACD;AAED;AzJk30BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyJp30BI;AACD;AAED;AzJq30BF;AACA;AACA;AACA;AACA;AACA;AyJr30BI;AzJu30BJ;AyJt30BI;AACE;AACA;AACD;AzJw30BL;AyJv30BI;AACD;AAED;AzJw30BF;AACA;AACA;AACA;AACA;AACA;AyJx30BI;AACE;AACD;AzJ030BL;AyJz30BI;AAAoB;AAAS;AAAV;AACnB;AACD;AAED;AzJ630BF;AACA;AACA;AACA;AACA;AyJ730BI;AACE;AACD;AzJ+30BL;AyJ730BI;AACA;AACA;AACA;AzJ+30BJ;AyJ930BI;AAAyB;AzJi40B7B;AyJ/30BM;AACE;AACA;AACD;AACF;AzJi40BL;AyJ/30BI;AACE;AACA;AACD;AACF;AzJi40BH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Jz+0BA;A1J2+0BA;A0J3/0BA;A1J6/0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Jz/0BA;AACA;AAEA;A1J0/0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Jz/0BO;AACL;A1J2/0BF;A0J1/0BE;AACE;AACD;A1J4/0BH;A0J3/0BE;AACD;AAED;A1J4/0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0J5/0BO;AACL;AACA;AACA;AAAO;AAA4B;AAAnC;AACD;AAED;A1Jgg1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Jhg1BO;AACL;AACD;AAED;A1Jig1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Jjg1BO;AACL;AACE;AACD;AACC;AACD;AACF;AAED;A1Jkg1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Jlg1BO;AAA+C;AAAZ;AAAY;A1Jug1BtD;A0Jtg1BE;AACA;AAEA;A1Jug1BF;A0Jtg1BE;AACA;AAAY;AAAW;AAAW;AAAvB;A1J4g1Bb;A0Jlh1BsD;AAAA;AAAA;AAAA;AAAA;A1Jwh1BtD;A0J7g1BI;AACE;AACD;A1J+g1BL;A0J9g1BI;A1Jgh1BJ;A0J/g1BI;AACE;AACD;A1Jih1BL;A0Jhh1BI;AACE;AACA;AACD;A1Jkh1BL;A0Jjh1BI;AACE;AAEA;A1Jkh1BN;A0Jjh1BM;AACE;A1Jmh1BR;A0Jlh1BQ;AACE;AAAY;AAAa;AAAa;AAA3B;AACX;AACD;AACF;A1Jwh1BP;A0Jvh1BM;AACD;AAlCiD;A1J4j1BtD;A0Jnj1BE;AAAyB;A1Jsj1B3B;A0Jtj1B2B;AA0BxB;A1J+h1BH;A0J9h1BE;AACD;AAED;A1J+h1BA;AACA;AACA;AACA;AACA;AACA;A0J/h1BO;AACL;AACE;AACE;AACD;A1Jii1BL;A0Jhi1BI;AACD;AACF;A1Jki1BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2J5r1BA;A3J8r1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2J5r1BA;A3J8r1BA;AACA;AACA;AACA;AACA;AACA;A2J9r1BE;A3Jgs1BF;AACA;A2J9r1BE;AACE;AACA;AACD;AAED;A3J+r1BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Jjs1BI;A3Jms1BJ;A2Jls1BI;AACE;AACD;A3Jos1BL;A2Jns1BI;AACD;AAED;A3Jos1BF;AACA;AACA;AACA;AACA;AACA;AACA;A2Jps1BI;AACE;AACD;A3Jss1BL;A2Jrs1BI;AACA;AAA0B;AAAM;AAAP;AAC1B;AAED;A3Jys1BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Jzs1BI;AACA;AACA;A3J2s1BJ;A2J1s1BI;AACE;A3J4s1BN;A2J1s1BM;AACE;AACD;AAED;AACA;A3J2s1BN;AACA;A2J3s1BM;AACE;AACD;AACC;AACD;AACC;AACD;AACF;A3J6s1BL;A2J5s1BI;AACD;AAED;A3J6s1BF;AACA;AACA;AACA;AACA;A2J7s1BI;A3J+s1BJ;A2J9s1BI;AACE;AACD;AACF;AAED;A3J+s1BF;AACA;AACA;AACA;AACA;AACA;AACA;A2J/s1BI;AACE;AACD;A3Jit1BL;A2Jht1BI;AACD;AAED;A3Jit1BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Jnt1BI;AACD;A3Jqt1BH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Jn11BA;A5Jq11BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Jn11BA;A5Jq11BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Jn11BE;A5Jq11BF;AACA;A4Jn11BE;AACE;AAEA;A5Jo11BJ;AACA;AACA;A4Jn11BI;AAAmB;AAAO;AACxB;AACA;AACD;AAED;A5Js11BJ;AACA;AACA;A4Jr11BI;AAEA;A5Js11BJ;AACA;AACA;A4Jr11BI;AACD;AAGH;A5Jq11BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Jv11BO;AACL;AACE;AACD;AACF;AAED;A5Jw11BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Jx11BO;AAAmC;AAAX;AAAW;A5J611B1C;A4J511BE;AACE;AACA;A5J811BJ;A4J711BI;AACE;AACD;A5J+11BL;A4J911BI;AACE;AACD;A5Jg21BL;A4J/11BI;AACA;A5Ji21BJ;A4J/11BI;AACE;AACE;AACD;A5Ji21BP;A4Jh21BM;AACE;AACD;AACF;A5Jk21BL;A4Jj21BI;AACE;AACE;AACD;A5Jm21BP;A4Jl21BM;AACE;AACD;AACF;A5Jo21BL;A4Jn21BI;AACE;AACD;AACF;AACF;AAED;A5Jo21BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Jt21BE;A5Jw21BF;AACA;A4Jt21BE;AACE;AACA;A5Jw21BJ;A4Jv21BI;AACE;AACA;AACD;AAED;A5Jw21BJ;A4Jv21BI;AAEA;A5Jw21BJ;A4Jv21BI;AAEA;A5Jw21BJ;A4Jv21BI;A5Jy21BJ;A4Jv21BI;AACE;AACE;AACD;AACF;AACF;AAED;A5Jw21BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4J321Be;A5J621Bf;A4J521BI;AACA;AAEI;AACE;AACD;AACF;AAEC;AACA;AACA;AACE;AACD;AACF;AAEH;AACD;AAED;A5J021BF;AACA;AACA;A4J121BI;AACD;A5J421BH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6J/i2BA;A7Jij2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6J9i2BO;AAEP;A7J+i2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Jtj2BE;A7Jwj2BF;AACA;AACA;AACA;AACA;A6Jrj2BE;A7Juj2BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Jtj2BE;A7Jwj2BF;AACA;AACA;AACA;AACA;AACA;A6Jvj2BE;A7Jyj2BF;AACA;AACA;AACA;AACA;AACA;A6Jxj2BE;A7J0j2BF;AACA;AACA;AACA;AACA;AACA;A6Jzj2BE;A7J2j2BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6J1j2BE;A7J4j2BF;AACA;AACA;AACA;AACA;A6J3j2BE;A7J6j2BF;AACA;AACA;AACA;AACA;A6J5j2BE;A7J8j2BF;AACA;AACA;AACA;AACA;A6J7j2BE;A7J+j2BF;AACA;AACA;AACA;AACA;AACA;AACA;A6J9j2BE;A7Jgk2BF;AACA;AACA;AACA;AACA;AACA;AACA;A6J/j2BE;A7Jik2BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Jhk2BE;A7Jkk2BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Jjk2BE;A7Jmk2BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Jlk2BE;A7Jok2BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Jnk2BE;A7Jqk2BF;AACA;AACA;AACA;AACA;A6Jpk2BE;A7Jsk2BF;AACA;AACA;AACA;AACA;AACA;A6Jrk2BE;A7Juk2BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Jxk2BA;A7J0k2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6J3k2BO;AACL;A7J6k2BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6J3k2BE;A7J6k2BF;A6J5k2BE;A7J8k2BF;AACA;AACA;AACA;AACA;A6J5k2BE;A7J8k2BF;A6J7k2BE;A7J+k2BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6J7k2BE;A7J+k2BF;A6J9k2BE;A7Jgl2BF;AACA;AACA;AACA;A6J9k2BE;AA/C6B;AAkD/B;A7J+k2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6J/k2BO;AACL;A7Jil2BF;AACA;AACA;AACA;AACA;AACA;AACA;A6J/k2BE;A7Jil2BF;A6J/k2BE;A7Jil2BF;AACA;AACA;AACA;AACA;AACA;AACA;A6J/k2BE;A7Jil2BF;A6J/k2BE;A7Jil2BF;AACA;AACA;AACA;AACA;AACA;A6J/k2BE;A7Jil2BF;A6J/k2BE;A7Jil2BF;AACA;AACA;AACA;AACA;AACA;A6J/k2BE;A7Jil2BF;A6J/k2BE;A7Jil2BF;AACA;AACA;AACA;AACA;AACA;A6J/k2BE;A7Jil2BF;A6J/k2BE;A7Jil2BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6J/k2BE;A7Jil2BF;A6J/k2BE;A7Jil2BF;AACA;AACA;AACA;AACA;AACA;A6J/k2BE;A7Jil2BF;A6J/k2BE;A7Jil2BF;AACA;AACA;AACA;AACA;AACA;A6J/k2BE;A7Jil2BF;A6J/k2BE;A7Jil2BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6J/k2BE;A7Jil2BF;A6J/k2BE;A7Jil2BF;AACA;AACA;AACA;AACA;AACA;A6J/k2BE;A7Jil2BF;A6J/k2BE;A7Jil2BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6J/k2BE;A7Jil2BF;A6J/k2BE;A7Jil2BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6J/k2BE;A7Jil2BF;A6J/k2BE;A7Jil2BF;AACA;AACA;AACA;AACA;AACA;A6J/k2BE;AAhIyB;AAmI3B;A7Jgl2BA;AACA;A6Jhl2BO;AAEP;A7Jil2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Jjl2BO;AACL;A7Jml2BF;AACA;AACA;AACA;AACA;AACA;AACA;A6Jjl2BE;A7Jml2BF;A6Jjl2BE;A7Jml2BF;AACA;AACA;AACA;AACA;AACA;A6Jjl2BE;A7Jml2BF;A6Jjl2BE;A7Jml2BF;AACA;AACA;AACA;AACA;AACA;A6Jjl2BE;AA3B2B;AA8B7B;A7Jkl2BA;AACA;A6Jll2BO;AACL;A7Jol2BF;AACA;AACA;AACA;AACA;AACA;A6Jll2BE;A7Jol2BF;A6Jll2BE;A7Jol2BF;AACA;AACA;AACA;AACA;AACA;A6Jll2BE;A7Jol2BF;A6Jll2BE;A7Jol2BF;AACA;AACA;AACA;AACA;AACA;A6Jll2BE;A7Jol2BF;A6Jll2BE;A7Jol2BF;AACA;AACA;AACA;AACA;AACA;A6Jll2BE;A7Jol2BF;A6Jll2BE;A7Jol2BF;AACA;AACA;AACA;AACA;AACA;A6Jll2BE;A7Jol2BF;A6Jll2BE;A7Jol2BF;AACA;AACA;AACA;AACA;AACA;AACA;A6Jll2BE;A7Jol2BF;A6Jll2BE;A7Jol2BF;AACA;AACA;AACA;AACA;AACA;A6Jll2BE;A7Jol2BF;A6Jll2BE;A7Jol2BF;AACA;AACA;AACA;AACA;AACA;A6Jll2BE;A7Jol2BF;A6Jll2BE;A7Jol2BF;AACA;AACA;AACA;AACA;AACA;A6Jll2BE;A7Jol2BF;A6Jll2BE;A7Jol2BF;AACA;AACA;AACA;AACA;AACA;A6Jll2BE;AA1FkC;AA6FpC;A7Jml2BA;AACA;AACA;AACA;AACA;AACA;A6Jnl2BO;AAEP;A7Jol2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Jpl2BO;AAEP;A7Jql2BA;AACA;AACA;AACA;AACA;AACA;A6Jtl2BO;AACL;AACD;AAED;A7Jul2BA;AACA;A6Jvl2BO;AACL;AACA;AAFiC;AAKnC;A7Jwl2BA;AACA;AACA;A6Jzl2BO;AACL;AACD;AAED;A7J0l2BA;AACA;A6J1l2BO;AACL;AACD;A7J4l2BD;AACA;AACA;AACA;AACA;AACA;AACA;A8J5n3BA;A9J8n3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8J5n3BA;A9J8n3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8Jho3BE;A9Jko3BF;AACA;AACA;AACA;AACA;A8Jho3BI;AACD;AAED;A9Jio3BF;AACA;AACA;AACA;AACA;AACA;AACA;A8Jjo3BI;AACD;AAED;A9Jko3BF;AACA;AACA;AACA;AACA;AACA;AACA;A8Jlo3BI;AACD;AAED;A9Jmo3BF;AACA;AACA;AACA;AACA;AACA;AACA;A8Jno3BI;AACD;AAED;A9Joo3BF;AACA;AACA;AACA;AACA;AACA;AACA;A8Jpo3BI;AACD;AAED;A9Jqo3BF;AACA;AACA;AACA;AACA;AACA;A8Jro3BI;AACA;AACD;AAED;A9Jso3BF;AACA;AACA;AACA;AACA;AACA;AACA;A8Jto3BI;AACE;AACD;A9Jwo3BL;A8Jvo3BI;AACD;AAED;A9Jwo3BF;AACA;AACA;AACA;AACA;AACA;AACA;A8Jxo3BI;AACD;AAED;A9Jyo3BF;AACA;AACA;AACA;AACA;AACA;AACA;A8Jzo3BI;AACD;A9J2o3BH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+J9v3BA;A/Jgw3BA;A+J7v3BA;A/J+v3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+J7v3BA;A/J+v3BA;A+J7v3BA;AACE;AACA;AACE;AACD;A/J+v3BH;AACA;A+J9v3BE;AACE;AACD;AAED;AACA;A/J+v3BF;AACA;A+J/v3BE;AACE;AACD;AAED;A/Jgw3BF;AACA;A+Jhw3BE;AACD;AAED;A/Jiw3BA;AACA;AACA;AACA;AACA;AACA;A+Jjw3BO;AACL;AACD;A/Jmw3BD;AACA;AACA;AFrz3BA;AACA","file":"amp-analytics-0.1.max.js","sourcesContent":["(self.AMP=self.AMP||[]).push({n:\"amp-analytics\",v:\"1910151804560\",f:(function(AMP,_){\n$1\n})});","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.installActivityServiceForTesting = installActivityServiceForTesting;\nexports.Activity = void 0;\n\nvar _services = require(\"../../../src/services\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _eventHelper = require(\"../../../src/event-helper\");\n\nvar _service = require(\"../../../src/service\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides an ability to collect data about activities the user\n * has performed on the page.\n */\n\n/**\n * The amount of time after an activity the user is considered engaged.\n * @private @const {number}\n */\nvar DEFAULT_ENGAGED_SECONDS = 5;\n/**\n * @enum {string}\n */\n\nvar ActivityEventType = {\n  ACTIVE: 'active',\n  INACTIVE: 'inactive'\n};\n/**\n * @typedef {{\n *   type: string,\n *   time: number\n * }}\n */\n\nvar ActivityEventDef;\n/**\n * Find the engaged time between the event and the time (exclusive of the time)\n * @param {ActivityEventDef} activityEvent\n * @param {number} time\n * @return {number}\n * @private\n */\n\nfunction findEngagedTimeBetween(activityEvent, time) {\n  var engagementBonus = 0;\n\n  if (activityEvent.type === ActivityEventType.ACTIVE) {\n    engagementBonus = DEFAULT_ENGAGED_SECONDS;\n  }\n\n  return Math.min(time - activityEvent.time, engagementBonus);\n}\n\nvar ActivityHistory =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of ActivityHistory.\n   */\n  function ActivityHistory() {\n    /** @private {number} */\n    this.totalEngagedTime_ = 0;\n    /**\n     * prevActivityEvent_ remains undefined until the first valid push call.\n     * @private {ActivityEventDef|undefined}\n     */\n\n    this.prevActivityEvent_ = undefined;\n  }\n  /**\n   * Indicate that an activity took place at the given time.\n   * @param {ActivityEventDef} activityEvent\n   */\n\n\n  var _proto = ActivityHistory.prototype;\n\n  _proto.push = function push(activityEvent) {\n    if (!this.prevActivityEvent_) {\n      this.prevActivityEvent_ = activityEvent;\n    }\n\n    if (this.prevActivityEvent_.time < activityEvent.time) {\n      this.totalEngagedTime_ += findEngagedTimeBetween(this.prevActivityEvent_, activityEvent.time);\n      this.prevActivityEvent_ = activityEvent;\n    }\n  }\n  /**\n   * Get the total engaged time up to the given time recorded in\n   * ActivityHistory.\n   * @param {number} time\n   * @return {number}\n   */\n  ;\n\n  _proto.getTotalEngagedTime = function getTotalEngagedTime(time) {\n    var totalEngagedTime = 0;\n\n    if (this.prevActivityEvent_ !== undefined) {\n      totalEngagedTime = this.totalEngagedTime_ + findEngagedTimeBetween(this.prevActivityEvent_, time);\n    }\n\n    return totalEngagedTime;\n  };\n\n  return ActivityHistory;\n}();\n/**\n * Array of event types which will be listened for on the document to indicate\n * activity. Other activities are also observed on the AmpDoc and Viewport\n * objects. See {@link setUpActivityListeners_} for listener implementation.\n * @private @const {Array<string>}\n */\n\n\nvar ACTIVE_EVENT_TYPES = ['mousedown', 'mouseup', 'mousemove', 'keydown', 'keyup'];\n/**\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampDoc\n */\n\nfunction installActivityServiceForTesting(ampDoc) {\n  (0, _service.registerServiceBuilderForDoc)(ampDoc, 'activity', Activity);\n}\n\nvar Activity =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Activity tracks basic user activity on the page.\n   *  - Listeners are not registered on the activity event types until the\n   *    AmpDoc's `whenFirstVisible` is resolved.\n   *  - When the `whenFirstVisible` of AmpDoc is resolved, a first activity\n   *    is recorded.\n   *  - The first activity in any second causes all other activities to be\n   *    ignored. This is similar to debounce functionality since some events\n   *    (e.g. scroll) could occur in rapid succession.\n   *  - In any one second period, active events or inactive events can override\n   *    each other. Whichever type occured last has precedence.\n   *  - Active events give a 5 second \"bonus\" to engaged time.\n   *  - Inactive events cause an immediate stop to the engaged time bonus of\n   *    any previous activity event.\n   *  - At any point after instantiation, `getTotalEngagedTime` can be used\n   *    to get the engage time up to the time the function is called. If\n   *    `whenFirstVisible` has not yet resolved, engaged time is 0.\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  function Activity(ampdoc) {\n    /** @const {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc */\n    this.ampdoc = ampdoc;\n    /** @private @const {function()} */\n\n    this.boundStopIgnore_ = this.stopIgnore_.bind(this);\n    /** @private @const {function()} */\n\n    this.boundHandleActivity_ = this.handleActivity_.bind(this);\n    /** @private @const {function()} */\n\n    this.boundHandleVisibilityChange_ = this.handleVisibilityChange_.bind(this);\n    /**\n     * Contains the incrementalEngagedTime timestamps for named triggers.\n     * @private {Object<string, number>}\n     */\n\n    this.totalEngagedTimeByTrigger_ = {\n      /*\n       * \"$triggerName\" : ${lastRequestTimestamp}\n       */\n    };\n    /** @private {Array<!UnlistenDef>} */\n\n    this.unlistenFuncs_ = [];\n    /** @private {boolean} */\n\n    this.ignoreActivity_ = false;\n    /** @private {boolean} */\n\n    this.ignoreInactive_ = false;\n    /** @private @const {!ActivityHistory} */\n\n    this.activityHistory_ = new ActivityHistory();\n    /** @private @const {!../../../src/service/viewport/viewport-interface.ViewportInterface} */\n\n    this.viewport_ = _services.Services.viewportForDoc(this.ampdoc);\n    this.ampdoc.whenFirstVisible().then(this.start_.bind(this));\n  }\n  /** @private */\n\n\n  var _proto2 = Activity.prototype;\n\n  _proto2.start_ = function start_() {\n    /** @private @const {number} */\n    this.startTime_ = Date.now(); // record an activity since this is when the page became visible\n\n    this.handleActivity_();\n    this.setUpActivityListeners_();\n  }\n  /**\n   * @private\n   * @return {number}\n   */\n  ;\n\n  _proto2.getTimeSinceStart_ = function getTimeSinceStart_() {\n    var timeSinceStart = Date.now() - this.startTime_; // Ensure that a negative time is never returned. This may cause loss of\n    // data if there is a time change during the session but it will decrease\n    // the likelyhood of errors in that situation.\n\n    return timeSinceStart > 0 ? timeSinceStart : 0;\n  }\n  /**\n   * Return to a state where neither activities or inactivity events are\n   * ignored when that event type is fired.\n   * @private\n   */\n  ;\n\n  _proto2.stopIgnore_ = function stopIgnore_() {\n    this.ignoreActivity_ = false;\n    this.ignoreInactive_ = false;\n  }\n  /** @private */\n  ;\n\n  _proto2.setUpActivityListeners_ = function setUpActivityListeners_() {\n    for (var i = 0; i < ACTIVE_EVENT_TYPES.length; i++) {\n      this.unlistenFuncs_.push((0, _eventHelper.listen)(this.ampdoc.getRootNode(), ACTIVE_EVENT_TYPES[i], this.boundHandleActivity_));\n    }\n\n    this.unlistenFuncs_.push(this.ampdoc.onVisibilityChanged(this.boundHandleVisibilityChange_)); // Viewport.onScroll does not return an unlisten function.\n    // TODO(britice): If Viewport is updated to return an unlisten function,\n    // update this to capture the unlisten function.\n\n    this.viewport_.onScroll(this.boundHandleActivity_);\n  }\n  /** @private */\n  ;\n\n  _proto2.handleActivity_ = function handleActivity_() {\n    if (this.ignoreActivity_) {\n      return;\n    }\n\n    this.ignoreActivity_ = true;\n    this.ignoreInactive_ = false;\n    this.handleActivityEvent_(ActivityEventType.ACTIVE);\n  }\n  /** @private */\n  ;\n\n  _proto2.handleInactive_ = function handleInactive_() {\n    if (this.ignoreInactive_) {\n      return;\n    }\n\n    this.ignoreInactive_ = true;\n    this.ignoreActivity_ = false;\n    this.handleActivityEvent_(ActivityEventType.INACTIVE);\n  }\n  /**\n   * @param {ActivityEventType} type\n   * @private\n   */\n  ;\n\n  _proto2.handleActivityEvent_ = function handleActivityEvent_(type) {\n    var timeSinceStart = this.getTimeSinceStart_();\n    var secondKey = Math.floor(timeSinceStart / 1000);\n    var timeToWait = 1000 - timeSinceStart % 1000; // stop ignoring activity at the start of the next activity bucket\n\n    setTimeout(this.boundStopIgnore_, timeToWait);\n    this.activityHistory_.push({\n      type: type,\n      time: secondKey\n    });\n  }\n  /** @private */\n  ;\n\n  _proto2.handleVisibilityChange_ = function handleVisibilityChange_() {\n    if (this.ampdoc.isVisible()) {\n      this.handleActivity_();\n    } else {\n      this.handleInactive_();\n    }\n  }\n  /**\n   * Remove all listeners associated with this Activity instance.\n   * @private\n   */\n  ;\n\n  _proto2.unlisten_ = function unlisten_() {\n    for (var i = 0; i < this.unlistenFuncs_.length; i++) {\n      var unlistenFunc = this.unlistenFuncs_[i]; // TODO(britice): Due to eslint typechecking, this check may not be\n      // necessary.\n\n      if (typeof unlistenFunc === 'function') {\n        unlistenFunc();\n      }\n    }\n\n    this.unlistenFuncs_ = [];\n  }\n  /**\n   * @private\n   * @visibleForTesting\n   */\n  ;\n\n  _proto2.cleanup_ = function cleanup_() {\n    this.unlisten_();\n  }\n  /**\n   * Get total engaged time since the page became visible.\n   * @return {number}\n   */\n  ;\n\n  _proto2.getTotalEngagedTime = function getTotalEngagedTime() {\n    var secondsSinceStart = Math.floor(this.getTimeSinceStart_() / 1000);\n    return this.activityHistory_.getTotalEngagedTime(secondsSinceStart);\n  }\n  /**\n   * Get the incremental engaged time since the last push and reset it if asked.\n   * @param {string} name\n   * @param {boolean=} reset\n   * @return {number}\n   */\n  ;\n\n  _proto2.getIncrementalEngagedTime = function getIncrementalEngagedTime(name, reset) {\n    if (reset === void 0) {\n      reset = true;\n    }\n\n    if (!(0, _object.hasOwn)(this.totalEngagedTimeByTrigger_, name)) {\n      if (reset) {\n        this.totalEngagedTimeByTrigger_[name] = this.getTotalEngagedTime();\n      }\n\n      return this.getTotalEngagedTime();\n    }\n\n    var currentIncrementalEngagedTime = this.totalEngagedTimeByTrigger_[name];\n\n    if (reset === false) {\n      return this.getTotalEngagedTime() - currentIncrementalEngagedTime;\n    }\n\n    this.totalEngagedTimeByTrigger_[name] = this.getTotalEngagedTime();\n    return this.totalEngagedTimeByTrigger_[name] - currentIncrementalEngagedTime;\n  };\n\n  return Activity;\n}();\n\nexports.Activity = Activity;\n\n},{\"../../../src/event-helper\":114,\"../../../src/service\":131,\"../../../src/services\":141,\"../../../src/utils/object\":154}],2:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.AmpAnalytics = void 0;\n\nvar _activityImpl = require(\"./activity-impl\");\n\nvar _config = require(\"./config\");\n\nvar _events = require(\"./events\");\n\nvar _cookieWriter = require(\"./cookie-writer\");\n\nvar _variables = require(\"./variables\");\n\nvar _instrumentation = require(\"./instrumentation\");\n\nvar _layout = require(\"../../../src/layout\");\n\nvar _linkerManager = require(\"./linker-manager\");\n\nvar _requests = require(\"./requests\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _transport = require(\"./transport\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _string = require(\"../../../src/string\");\n\nvar _mode = require(\"../../../src/mode\");\n\nvar _linkerReader = require(\"./linker-reader\");\n\nvar _types = require(\"../../../src/types\");\n\nvar _dom = require(\"../../../src/dom\");\n\nvar _iframeHelper = require(\"../../../src/iframe-helper\");\n\nvar _style = require(\"../../../src/style\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar TAG = 'amp-analytics';\nvar MAX_REPLACES = 16; // The maximum number of entries in a extraUrlParamsReplaceMap\n\nvar WHITELIST_EVENT_IN_SANDBOX = [_events.AnalyticsEventType.VISIBLE, _events.AnalyticsEventType.HIDDEN];\n\nvar AmpAnalytics =\n/*#__PURE__*/\nfunction (_AMP$BaseElement) {\n  _inheritsLoose(AmpAnalytics, _AMP$BaseElement);\n\n  /** @param {!AmpElement} element */\n  function AmpAnalytics(element) {\n    var _this;\n\n    _this = _AMP$BaseElement.call(this, element) || this;\n    /** @private {!Promise} */\n\n    _this.consentPromise_ = Promise.resolve();\n    /**\n     * The html id of the `amp-user-notification` element.\n     * @private {?string}\n     */\n\n    _this.consentNotificationId_ = null;\n    /** @private {boolean} */\n\n    _this.isSandbox_ = false;\n    /**\n     * @private {Object<string, RequestHandler>} A map of request handler with requests\n     */\n\n    _this.requests_ = {};\n    /**\n     * @private {!JsonObject}\n     */\n\n    _this.config_ = (0, _object.dict)();\n    /** @private {?./instrumentation.InstrumentationService} */\n\n    _this.instrumentation_ = null;\n    /** @private {?./analytics-group.AnalyticsGroup} */\n\n    _this.analyticsGroup_ = null;\n    /** @private {?./variables.VariableService} */\n\n    _this.variableService_ = null;\n    /** @private {!../../../src/service/crypto-impl.Crypto} */\n\n    _this.cryptoService_ = _services.Services.cryptoFor(_this.win);\n    /** @private {?Promise} */\n\n    _this.iniPromise_ = null;\n    /** @private {./transport.Transport} */\n\n    _this.transport_ = null;\n    /** @private {boolean} */\n\n    _this.isInabox_ = (0, _mode.getMode)(_this.win).runtime == 'inabox';\n    /** @private {?./linker-manager.LinkerManager} */\n\n    _this.linkerManager_ = null;\n    return _this;\n  }\n  /** @override */\n\n\n  var _proto = AmpAnalytics.prototype;\n\n  _proto.getLayoutPriority = function getLayoutPriority() {\n    // Load immediately if inabox, otherwise after other content.\n    return this.isInabox_ ? _layout.LayoutPriority.CONTENT : _layout.LayoutPriority.METADATA;\n  }\n  /** @override */\n  ;\n\n  _proto.isAlwaysFixed = function isAlwaysFixed() {\n    return !(0, _iframeHelper.isInFie)(this.element);\n  }\n  /** @override */\n  ;\n\n  _proto.isLayoutSupported = function isLayoutSupported(unusedLayout) {\n    return true;\n  }\n  /** @override */\n  ;\n\n  _proto.buildCallback = function buildCallback() {\n    var _this2 = this;\n\n    this.isSandbox_ = this.element.hasAttribute('sandbox');\n    this.element.setAttribute('aria-hidden', 'true');\n    this.consentNotificationId_ = this.element.getAttribute('data-consent-notification-id');\n\n    if (this.consentNotificationId_ != null) {\n      this.consentPromise_ = _services.Services.userNotificationManagerForDoc(this.element).then(function (service) {\n        return service.get((0, _log.dev)().assertString(_this2.consentNotificationId_));\n      });\n    }\n\n    if (this.element.getAttribute('trigger') == 'immediate') {\n      this.ensureInitialized_();\n    }\n  }\n  /** @override */\n  ;\n\n  _proto.layoutCallback = function layoutCallback() {\n    // Now that we are rendered, stop rendering the element to reduce\n    // resource consumption.\n    return this.ensureInitialized_();\n  }\n  /** @override */\n  ;\n\n  _proto.detachedCallback = function detachedCallback() {\n    if (this.analyticsGroup_) {\n      this.analyticsGroup_.dispose();\n      this.analyticsGroup_ = null;\n    }\n\n    if (this.linkerManager_) {\n      this.linkerManager_.dispose();\n      this.linkerManager_ = null;\n    }\n\n    for (var request in this.requests_) {\n      this.requests_[request].dispose();\n      delete this.requests_[request];\n    }\n  }\n  /** @override */\n  ;\n\n  _proto.resumeCallback = function resumeCallback() {\n    var _this3 = this;\n\n    if (this.iniPromise_) {\n      this.iniPromise_.then(function () {\n        _this3.transport_.maybeInitIframeTransport(_this3.getAmpDoc().win, _this3.element);\n      });\n    }\n  }\n  /** @override */\n  ;\n\n  _proto.unlayoutCallback = function unlayoutCallback() {\n    var _this4 = this;\n\n    if (this.getAmpDoc().isVisible()) {\n      // amp-analytics tag was just set to display:none. Page is still loaded.\n      return false;\n    }\n\n    if (this.iniPromise_) {\n      this.iniPromise_.then(function () {\n        // Page was unloaded - free up owned resources.\n        _this4.transport_.deleteIframeTransport();\n      });\n    }\n\n    return _AMP$BaseElement.prototype.unlayoutCallback.call(this);\n  }\n  /**\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto.ensureInitialized_ = function ensureInitialized_() {\n    var _this5 = this;\n\n    if (this.iniPromise_) {\n      return this.iniPromise_;\n    }\n\n    (0, _style.toggle)(this.element, false);\n    this.iniPromise_ = this.getAmpDoc().whenFirstVisible() // Rudimentary \"idle\" signal.\n    .then(function () {\n      return _services.Services.timerFor(_this5.win).promise(1);\n    }).then(function () {\n      return _this5.consentPromise_;\n    }).then(function () {\n      return _services.Services.ampdocServiceFor(_this5.win);\n    }).then(function (ampDocService) {\n      return ampDocService.getAmpDoc(_this5.element);\n    }).then(function (ampdoc) {\n      return Promise.all([(0, _instrumentation.instrumentationServicePromiseForDoc)(ampdoc), (0, _variables.variableServicePromiseForDoc)(ampdoc)]);\n    }).then(function (services) {\n      _this5.instrumentation_ = services[0];\n      _this5.variableService_ = services[1];\n      return new _config.AnalyticsConfig(_this5.element).loadConfig();\n    }).then(function (config) {\n      _this5.config_ =\n      /** @type {!JsonObject} */\n      config;\n      return new _cookieWriter.CookieWriter(_this5.win, _this5.element, _this5.config_).write();\n    }).then(function () {\n      _this5.transport_ = new _transport.Transport(_this5.win, _this5.config_['transport'] || {});\n    }).then(this.registerTriggers_.bind(this)).then(this.initializeLinker_.bind(this));\n    return this.iniPromise_;\n  }\n  /**\n   * Registers triggers.\n   * @return {!Promise|undefined}\n   * @private\n   */\n  ;\n\n  _proto.registerTriggers_ = function registerTriggers_() {\n    var _this6 = this;\n\n    if (this.hasOptedOut_()) {\n      // Nothing to do when the user has opted out.\n      var _TAG = this.getName_();\n\n      (0, _log.user)().fine(_TAG, 'User has opted out. No hits will be sent.');\n      return Promise.resolve();\n    }\n\n    this.generateRequests_();\n\n    if (!this.config_['triggers']) {\n      var _TAG2 = this.getName_();\n\n      this.user().error(_TAG2, 'No triggers were found in the ' + 'config. No analytics data will be sent.');\n      return Promise.resolve();\n    }\n\n    this.processExtraUrlParams_(this.config_['extraUrlParams'], this.config_['extraUrlParamsReplaceMap']);\n    this.analyticsGroup_ = this.instrumentation_.createAnalyticsGroup(this.element);\n    this.transport_.maybeInitIframeTransport(this.getAmpDoc().win, this.element, this.preconnect);\n    var promises = []; // Trigger callback can be synchronous. Do the registration at the end.\n\n    for (var k in this.config_['triggers']) {\n      if ((0, _object.hasOwn)(this.config_['triggers'], k)) {\n        var _ret = function () {\n          var trigger = _this6.config_['triggers'][k];\n\n          var expansionOptions = _this6.expansionOptions_((0, _object.dict)({}), trigger, undefined, true);\n\n          var TAG = _this6.getName_();\n\n          if (!trigger) {\n            _this6.user().error(TAG, 'Trigger should be an object: ', k);\n\n            return \"continue\";\n          }\n\n          var hasRequestOrPostMessage = trigger['request'] || trigger['parentPostMessage'] && _this6.isInabox_;\n\n          if (!trigger['on'] || !hasRequestOrPostMessage) {\n            var errorMsgSeg = _this6.isInabox_ ? '/\"parentPostMessage\"' : '';\n\n            _this6.user().error(TAG, '\"on\" and \"request\"' + errorMsgSeg + ' attributes are required for data to be collected.');\n\n            return \"continue\";\n          } // Check for not supported trigger for sandboxed analytics\n\n\n          if (_this6.isSandbox_) {\n            var eventType = trigger['on'];\n\n            if ((0, _types.isEnumValue)(_events.AnalyticsEventType, eventType) && !WHITELIST_EVENT_IN_SANDBOX.includes(eventType)) {\n              _this6.user().error(TAG, eventType + ' is not supported for amp-analytics in scope');\n\n              return \"continue\";\n            }\n          }\n\n          _this6.processExtraUrlParams_(trigger['extraUrlParams'], _this6.config_['extraUrlParamsReplaceMap']);\n\n          promises.push(_this6.isSampledIn_(trigger).then(function (result) {\n            if (!result) {\n              return;\n            } // replace selector and selectionMethod\n\n\n            if (_this6.isSandbox_) {\n              // Only support selection of parent element for analytics in scope\n              if (!_this6.element.parentElement) {\n                // In case parent element has been removed from DOM, do nothing\n                return;\n              }\n\n              trigger['selector'] = _this6.element.parentElement.tagName;\n              trigger['selectionMethod'] = 'closest';\n\n              _this6.addTrigger_(trigger);\n            } else if (trigger['selector']) {\n              // Expand the selector using variable expansion.\n              return _this6.variableService_.expandTemplate(trigger['selector'], expansionOptions).then(function (selector) {\n                trigger['selector'] = selector;\n\n                _this6.addTrigger_(trigger);\n              });\n            } else {\n              _this6.addTrigger_(trigger);\n            }\n          }));\n        }();\n\n        if (_ret === \"continue\") continue;\n      }\n    }\n\n    return Promise.all(promises);\n  }\n  /**\n   * Asks the browser to preload a URL. Always also does a preconnect\n   * because browser support for that is better.\n   *\n   * @param {string} url\n   * @param {string=} opt_preloadAs\n   * @visibleForTesting\n   */\n  ;\n\n  _proto.preload = function preload(url, opt_preloadAs) {\n    this.preconnect.preload(url, opt_preloadAs);\n  }\n  /**\n   * Calls `AnalyticsGroup.addTrigger` and reports any errors.\n   * @param {!JsonObject} config\n   * @private\n   * @noinline\n   */\n  ;\n\n  _proto.addTrigger_ = function addTrigger_(config) {\n    if (!this.analyticsGroup_) {\n      // No need to handle trigger for component that has already been detached\n      // from DOM\n      return;\n    }\n\n    try {\n      this.analyticsGroup_.addTrigger(config, this.handleEvent_.bind(this, config));\n    } catch (e) {\n      var _TAG3 = this.getName_();\n\n      var eventType = config['on'];\n      (0, _log.rethrowAsync)(_TAG3, 'Failed to process trigger \"' + eventType + '\"', e);\n    }\n  }\n  /**\n   * Replace the names of keys in params object with the values in replace map.\n   *\n   * @param {!Object<string, string>} params The params that need to be renamed.\n   * @param {!Object<string, string>} replaceMap A map of pattern and replacement\n   *    value.\n   * @private\n   */\n  ;\n\n  _proto.processExtraUrlParams_ = function processExtraUrlParams_(params, replaceMap) {\n    if (params && replaceMap) {\n      // If the config includes a extraUrlParamsReplaceMap, apply it as a set\n      // of params to String.replace to allow aliasing of the keys in\n      // extraUrlParams.\n      var count = 0;\n\n      for (var replaceMapKey in replaceMap) {\n        if (++count > MAX_REPLACES) {\n          var _TAG4 = this.getName_();\n\n          this.user().error(_TAG4, 'More than ' + MAX_REPLACES + ' extraUrlParamsReplaceMap rules ' + \"aren't allowed; Skipping the rest\");\n          break;\n        }\n\n        for (var extraUrlParamsKey in params) {\n          var newkey = extraUrlParamsKey.replace(replaceMapKey, replaceMap[replaceMapKey]);\n\n          if (extraUrlParamsKey != newkey) {\n            var value = params[extraUrlParamsKey];\n            delete params[extraUrlParamsKey];\n            params[newkey] = value;\n          }\n        }\n      }\n    }\n  }\n  /**\n   * @return {boolean} true if the user has opted out.\n   */\n  ;\n\n  _proto.hasOptedOut_ = function hasOptedOut_() {\n    var elementId = this.config_['optoutElementId'];\n\n    if (elementId && this.win.document.getElementById(elementId)) {\n      return true;\n    }\n\n    if (!this.config_['optout']) {\n      return false;\n    }\n\n    var props = this.config_['optout'].split('.');\n    var k = this.win;\n\n    for (var i = 0; i < props.length; i++) {\n      if (!k) {\n        return false;\n      }\n\n      k = k[props[i]];\n    } // The actual property being called is controlled by vendor configs only\n    // that are approved in code reviews. User customization of the `optout`\n    // property is not allowed.\n\n\n    return k();\n  }\n  /**\n   * Goes through all the requests in predefined vendor config and tag's config\n   * and creates a map of request name to request template. These requests can\n   * then be used while sending a request to a server.\n   *\n   * @private\n   */\n  ;\n\n  _proto.generateRequests_ = function generateRequests_() {\n    var _this7 = this;\n\n    if (!this.config_['requests']) {\n      if (!this.isInabox_) {\n        var _TAG5 = this.getName_();\n\n        this.user().error(_TAG5, 'No request strings defined. Analytics ' + 'data will not be sent from this page.');\n      }\n\n      return;\n    }\n\n    if (this.config_['requests']) {\n      for (var k in this.config_['requests']) {\n        if ((0, _object.hasOwn)(this.config_['requests'], k)) {\n          var request = this.config_['requests'][k];\n\n          if (!request['baseUrl']) {\n            this.user().error(TAG, 'request must have a baseUrl');\n            delete this.config_['requests'][k];\n          }\n        }\n      } // Expand any placeholders. For requests, we expand each string up to 5\n      // times to support nested requests. Leave any unresolved placeholders.\n      // Expand any requests placeholder.\n\n\n      for (var _k in this.config_['requests']) {\n        this.config_['requests'][_k]['baseUrl'] = (0, _string.expandTemplate)(this.config_['requests'][_k]['baseUrl'], function (key) {\n          var request = _this7.config_['requests'][key];\n          return request && request['baseUrl'] || '${' + key + '}';\n        }, 5);\n      }\n\n      var requests = {};\n\n      for (var _k2 in this.config_['requests']) {\n        if ((0, _object.hasOwn)(this.config_['requests'], _k2)) {\n          var _request = this.config_['requests'][_k2];\n          requests[_k2] = new _requests.RequestHandler(this.element, _request, this.preconnect, this.transport_, this.isSandbox_);\n        }\n      }\n\n      this.requests_ = requests;\n    }\n  }\n  /**\n   * Create the linker-manager that will append linker params as necessary.\n   * @private\n   */\n  ;\n\n  _proto.initializeLinker_ = function initializeLinker_() {\n    var type = this.element.getAttribute('type');\n    this.linkerManager_ = new _linkerManager.LinkerManager(this.getAmpDoc(), this.config_, type, this.element);\n    this.linkerManager_.init();\n  }\n  /**\n   * Callback for events that are registered by the config's triggers. This\n   * method generates requests and sends them out.\n   *\n   * @param {!JsonObject} trigger JSON config block that resulted in this event.\n   * @param {!JsonObject|!./events.AnalyticsEvent} event Object with details about the event.\n   * @private\n   */\n  ;\n\n  _proto.handleEvent_ = function handleEvent_(trigger, event) {\n    var requests = (0, _types.isArray)(trigger['request']) ? trigger['request'] : [trigger['request']];\n\n    for (var r = 0; r < requests.length; r++) {\n      var requestName = requests[r];\n      this.handleRequestForEvent_(requestName, trigger, event);\n    }\n  }\n  /**\n   * Processes a request for an event callback and sends it out.\n   *\n   * @param {string} requestName The requestName to process.\n   * @param {!JsonObject} trigger JSON config block that resulted in this event.\n   * @param {!JsonObject|!./events.AnalyticsEvent} event Object with details about the event.\n   * @private\n   */\n  ;\n\n  _proto.handleRequestForEvent_ = function handleRequestForEvent_(requestName, trigger, event) {\n    var _this8 = this;\n\n    if (!this.element.ownerDocument.defaultView) {\n      var _TAG6 = this.getName_();\n\n      (0, _log.dev)().warn(_TAG6, 'request against destroyed embed: ', trigger['on']);\n    }\n\n    var request = this.requests_[requestName];\n    var hasPostMessage = this.isInabox_ && trigger['parentPostMessage'];\n\n    if (requestName != undefined && !request) {\n      var _TAG7 = this.getName_();\n\n      this.user().error(_TAG7, 'Ignoring request for event. Request string not found: ', trigger['request']);\n\n      if (!hasPostMessage) {\n        return;\n      }\n    }\n\n    this.checkTriggerEnabled_(trigger, event).then(function (enabled) {\n      if (!enabled) {\n        return;\n      }\n\n      _this8.expandAndSendRequest_(request, trigger, event);\n\n      _this8.expandAndPostMessage_(trigger, event);\n    });\n  }\n  /**\n   * @param {RequestHandler} request The request to process.\n   * @param {!JsonObject} trigger JSON config block that resulted in this event.\n   * @param {!JsonObject|!./events.AnalyticsEvent} event Object with details about the event.\n   * @private\n   */\n  ;\n\n  _proto.expandAndSendRequest_ = function expandAndSendRequest_(request, trigger, event) {\n    if (!request) {\n      return;\n    }\n\n    this.config_['vars']['requestCount']++;\n    var expansionOptions = this.expansionOptions_(event, trigger);\n    request.send(this.config_['extraUrlParams'], trigger, expansionOptions);\n  }\n  /**\n   * Expand and post message to parent window if applicable.\n   * @param {!JsonObject} trigger JSON config block that resulted in this event.\n   * @param {!JsonObject|!./events.AnalyticsEvent} event Object with details about the event.\n   * @private\n   */\n  ;\n\n  _proto.expandAndPostMessage_ = function expandAndPostMessage_(trigger, event) {\n    var _this9 = this;\n\n    var msg = trigger['parentPostMessage'];\n\n    if (!msg || !this.isInabox_) {\n      // Only send message in inabox runtime with parentPostMessage specified.\n      return;\n    }\n\n    var expansionOptions = this.expansionOptions_(event, trigger);\n    (0, _requests.expandPostMessage)(this.getAmpDoc(), msg, this.config_['extraUrlParams'], trigger, expansionOptions, this.element).then(function (message) {\n      if ((0, _dom.isIframed)(_this9.win)) {\n        // Only post message with explict `parentPostMessage` to inabox host\n        _this9.win.parent.\n        /*OK*/\n        postMessage(message, '*');\n      }\n    });\n  }\n  /**\n   * @param {!JsonObject} trigger The config to use to determine sampling.\n   * @return {!Promise<boolean>} Whether the request should be sampled in or\n   * not based on sampleSpec.\n   * @private\n   */\n  ;\n\n  _proto.isSampledIn_ = function isSampledIn_(trigger) {\n    var _this10 = this;\n\n    /** @const {!JsonObject} */\n    var spec = trigger['sampleSpec'];\n    var resolve = Promise.resolve(true);\n    var TAG = this.getName_();\n\n    if (!spec) {\n      return resolve;\n    }\n\n    var sampleOn = spec['sampleOn'];\n\n    if (!sampleOn) {\n      this.user().error(TAG, 'Invalid sampleOn value.');\n      return resolve;\n    }\n\n    var threshold = parseFloat(spec['threshold']); // Threshold can be NaN.\n\n    if (threshold >= 0 && threshold <= 100) {\n      var expansionOptions = this.expansionOptions_((0, _object.dict)({}), trigger);\n      return this.expandTemplateWithUrlParams_(sampleOn, expansionOptions).then(function (key) {\n        return _this10.cryptoService_.uniform(key);\n      }).then(function (digest) {\n        return digest * 100 < threshold;\n      });\n    }\n\n    (0, _log.user)().\n    /*OK*/\n    error(TAG, 'Invalid threshold for sampling.');\n    return resolve;\n  }\n  /**\n   * Checks if request for a trigger is enabled.\n   * @param {!JsonObject} trigger The config to use to determine if trigger is\n   * enabled.\n   * @param {!JsonObject|!./events.AnalyticsEvent} event Object with details about the event.\n   * @return {!Promise<boolean>} Whether trigger must be called.\n   * @private\n   */\n  ;\n\n  _proto.checkTriggerEnabled_ = function checkTriggerEnabled_(trigger, event) {\n    var expansionOptions = this.expansionOptions_(event, trigger);\n    var enabledOnTagLevel = this.checkSpecEnabled_(this.config_['enabled'], expansionOptions);\n    var enabledOnTriggerLevel = this.checkSpecEnabled_(trigger['enabled'], expansionOptions);\n    return Promise.all([enabledOnTagLevel, enabledOnTriggerLevel]).then(function (enabled) {\n      (0, _log.devAssert)(enabled.length === 2);\n      return enabled[0] && enabled[1];\n    });\n  }\n  /**\n   * Checks result of 'enabled' spec evaluation. Returns false if spec is\n   * provided and value resolves to a falsey value (empty string, 0, false,\n   * null, NaN or undefined).\n   * @param {string|boolean} spec Expression that will be evaluated.\n   * @param {!ExpansionOptions} expansionOptions Expansion options.\n   * @return {!Promise<boolean>} False only if spec is provided and value is\n   * falsey.\n   * @private\n   */\n  ;\n\n  _proto.checkSpecEnabled_ = function checkSpecEnabled_(spec, expansionOptions) {\n    // Spec absence always resolves to true.\n    if (spec === undefined) {\n      return Promise.resolve(true);\n    }\n\n    if (typeof spec === 'boolean') {\n      return Promise.resolve(spec);\n    }\n\n    return this.expandTemplateWithUrlParams_(spec, expansionOptions).then(function (val) {\n      return (0, _variables.stringToBool)(val);\n    });\n  }\n  /**\n   * Expands spec using provided expansion options and applies url replacement\n   * if necessary.\n   * @param {string} spec Expression that needs to be expanded.\n   * @param {!ExpansionOptions} expansionOptions Expansion options.\n   * @return {!Promise<string>} expanded spec.\n   * @private\n   */\n  ;\n\n  _proto.expandTemplateWithUrlParams_ = function expandTemplateWithUrlParams_(spec, expansionOptions) {\n    var _this11 = this;\n\n    return this.variableService_.expandTemplate(spec, expansionOptions).then(function (key) {\n      return _services.Services.urlReplacementsForDoc(_this11.element).expandUrlAsync(key, _this11.variableService_.getMacros(_this11.element));\n    });\n  }\n  /**\n   * @return {string} Returns a string to identify this tag. May not be unique\n   * if the element id is not unique.\n   * @private\n   */\n  ;\n\n  _proto.getName_ = function getName_() {\n    return 'AmpAnalytics ' + (this.element.getAttribute('id') || '<unknown id>');\n  }\n  /**\n   * @param {!JsonObject|!./events.AnalyticsEvent} source1\n   * @param {!JsonObject} source2\n   * @param {number=} opt_iterations\n   * @param {boolean=} opt_noEncode\n   * @return {!ExpansionOptions}\n   */\n  ;\n\n  _proto.expansionOptions_ = function expansionOptions_(source1, source2, opt_iterations, opt_noEncode) {\n    var vars = (0, _object.dict)();\n    (0, _config.mergeObjects)(this.config_['vars'], vars);\n    (0, _config.mergeObjects)(source2['vars'], vars);\n    (0, _config.mergeObjects)(source1['vars'], vars);\n    return new _variables.ExpansionOptions(vars, opt_iterations, opt_noEncode);\n  };\n\n  return AmpAnalytics;\n}(AMP.BaseElement);\n\nexports.AmpAnalytics = AmpAnalytics;\nAMP.extension(TAG, '0.1', function (AMP) {\n  // Register doc-service factory.\n  AMP.registerServiceForDoc('amp-analytics-instrumentation', _instrumentation.InstrumentationService);\n  AMP.registerServiceForDoc('activity', _activityImpl.Activity);\n  (0, _linkerReader.installLinkerReaderService)(AMP.win);\n  AMP.registerServiceForDoc('amp-analytics-variables', _variables.VariableService); // Register the element.\n\n  AMP.registerElement(TAG, AmpAnalytics);\n});\n\n},{\"../../../src/dom\":111,\"../../../src/iframe-helper\":116,\"../../../src/layout\":124,\"../../../src/log\":125,\"../../../src/mode\":127,\"../../../src/services\":141,\"../../../src/string\":143,\"../../../src/style\":144,\"../../../src/types\":145,\"../../../src/utils/object\":154,\"./activity-impl\":1,\"./config\":5,\"./cookie-writer\":7,\"./events\":9,\"./instrumentation\":13,\"./linker-manager\":14,\"./linker-reader\":15,\"./requests\":18,\"./transport\":23,\"./variables\":24}],3:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.AnalyticsGroup = void 0;\n\nvar _log = require(\"../../../src/log\");\n\nvar _events = require(\"./events\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents the group of analytics triggers for a single config. All triggers\n * are declared and released at the same time.\n *\n * @implements {../../../src/service.Disposable}\n */\nvar AnalyticsGroup =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   * @param {!Element} analyticsElement\n   */\n  function AnalyticsGroup(root, analyticsElement) {\n    /** @const */\n    this.root_ = root;\n    /** @const */\n\n    this.analyticsElement_ = analyticsElement;\n    /** @private @const {!Array<!UnlistenDef>} */\n\n    this.listeners_ = [];\n  }\n  /** @override */\n\n\n  var _proto = AnalyticsGroup.prototype;\n\n  _proto.dispose = function dispose() {\n    this.listeners_.forEach(function (listener) {\n      listener();\n    });\n  }\n  /**\n   * Adds a trigger with the specified config and listener. The config must\n   * contain `on` property specifying the type of the event.\n   *\n   * Triggers registered on a group are automatically released when the\n   * group is disposed.\n   *\n   * @param {!JsonObject} config\n   * @param {function(!./events.AnalyticsEvent)} handler\n   */\n  ;\n\n  _proto.addTrigger = function addTrigger(config, handler) {\n    var eventType = (0, _log.dev)().assertString(config['on']);\n    var trackerKey = (0, _events.getTrackerKeyName)(eventType);\n    var trackerWhitelist = (0, _events.getTrackerTypesForParentType)(this.root_.getType());\n    var tracker = this.root_.getTrackerForWhitelist(trackerKey, trackerWhitelist);\n    (0, _log.userAssert)(!!tracker, 'Trigger type \"%s\" is not allowed in the %s', eventType, this.root_.getType());\n    var unlisten = tracker.add(this.analyticsElement_, eventType, config, handler);\n    this.listeners_.push(unlisten);\n  };\n\n  return AnalyticsGroup;\n}();\n\nexports.AnalyticsGroup = AnalyticsGroup;\n\n},{\"../../../src/log\":125,\"./events\":9}],4:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.EmbedAnalyticsRoot = exports.AmpdocAnalyticsRoot = exports.AnalyticsRoot = void 0;\n\nvar _hostServices = require(\"../../../src/inabox/host-services\");\n\nvar _scrollManager = require(\"./scroll-manager\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _visibilityManagerForMapp = require(\"./visibility-manager-for-mapp\");\n\nvar _dom = require(\"../../../src/dom\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _mode = require(\"../../../src/mode\");\n\nvar _layoutRect = require(\"../../../src/layout-rect\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _visibilityManager = require(\"./visibility-manager\");\n\nvar _promise = require(\"../../../src/utils/promise\");\n\nvar _iniLoad = require(\"../../../src/ini-load\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar TAG = 'amp-analytics/analytics-root';\n/**\n * An analytics root. Analytics can be scoped to either ampdoc, embed or\n * an arbitrary AMP element.\n *\n * TODO(#22733): merge analytics root properties into ampdoc.\n *\n * @implements {../../../src/service.Disposable}\n * @abstract\n */\n\nvar AnalyticsRoot =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  function AnalyticsRoot(ampdoc) {\n    /** @const */\n    this.ampdoc = ampdoc;\n    /** @const */\n\n    this.trackers_ = (0, _object.map)();\n    /** @private {?./visibility-manager.VisibilityManager} */\n\n    this.visibilityManager_ = null;\n    /** @private {?./scroll-manager.ScrollManager} */\n\n    this.scrollManager_ = null;\n    /** @private {?Promise} */\n\n    this.usingHostAPIPromise_ = null;\n    /** @private {?../../../src/inabox/host-services.VisibilityInterface} */\n\n    this.hostVisibilityService_ = null;\n  }\n  /**\n   * @return {!Promise<boolean>}\n   */\n\n\n  var _proto = AnalyticsRoot.prototype;\n\n  _proto.isUsingHostAPI = function isUsingHostAPI() {\n    var _this = this;\n\n    if (this.usingHostAPIPromise_) {\n      return this.usingHostAPIPromise_;\n    }\n\n    if (!_hostServices.HostServices.isAvailable(this.ampdoc)) {\n      this.usingHostAPIPromise_ = Promise.resolve(false);\n    } else {\n      // TODO: Using the visibility service and apply it for all tracking types\n      var promise = _hostServices.HostServices.visibilityForDoc(this.ampdoc);\n\n      this.usingHostAPIPromise_ = promise.then(function (visibilityService) {\n        _this.hostVisibilityService_ = visibilityService;\n        return true;\n      }).catch(function (error) {\n        (0, _log.dev)().fine(TAG, 'VisibilityServiceError - fallback=' + error.fallback);\n\n        if (error.fallback) {\n          // Do not use HostAPI, fallback to original implementation.\n          return false;\n        } // Cannot fallback, service error. Throw user error.\n\n\n        throw (0, _log.user)().createError('Host Visibility Service Error');\n      });\n    }\n\n    return this.usingHostAPIPromise_;\n  }\n  /** @override */\n  ;\n\n  _proto.dispose = function dispose() {\n    for (var k in this.trackers_) {\n      this.trackers_[k].dispose();\n      delete this.trackers_[k];\n    }\n\n    if (this.visibilityManager_) {\n      this.visibilityManager_.dispose();\n    }\n\n    if (this.scrollManager_) {\n      this.scrollManager_.dispose();\n    }\n  }\n  /**\n   * Returns the type of the tracker.\n   * @return {string}\n   * @abstract\n   */\n  ;\n\n  _proto.getType = function getType() {}\n  /**\n   * The root node the analytics is scoped to.\n   *\n   * @return {!Document|!ShadowRoot}\n   * @abstract\n   */\n  ;\n\n  _proto.getRoot = function getRoot() {}\n  /**\n   * The viewer of analytics root\n   * @return {!../../../src/service/viewer-interface.ViewerInterface}\n   */\n  ;\n\n  _proto.getViewer = function getViewer() {\n    return _services.Services.viewerForDoc(this.ampdoc);\n  }\n  /**\n   * The root element within the analytics root.\n   *\n   * @return {!Element}\n   */\n  ;\n\n  _proto.getRootElement = function getRootElement() {\n    var root = this.getRoot();\n    return (0, _log.dev)().assertElement(root.documentElement || root.body || root);\n  }\n  /**\n   * The host element of the analytics root.\n   *\n   * @return {?Element}\n   * @abstract\n   */\n  ;\n\n  _proto.getHostElement = function getHostElement() {}\n  /**\n   * The signals for the root.\n   *\n   * @return {!../../../src/utils/signals.Signals}\n   * @abstract\n   */\n  ;\n\n  _proto.signals = function signals() {}\n  /**\n   * Whether this analytics root contains the specified node.\n   *\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  ;\n\n  _proto.contains = function contains(node) {\n    return this.getRoot().contains(node);\n  }\n  /**\n   * Returns the element with the specified ID in the scope of this root.\n   *\n   * @param {string} unusedId\n   * @return {?Element}\n   * @abstract\n   */\n  ;\n\n  _proto.getElementById = function getElementById(unusedId) {}\n  /**\n   * Returns the tracker for the specified name and list of allowed types.\n   *\n   * @param {string} name\n   * @param {!Object<string, function(new:./events.EventTracker)>} whitelist\n   * @return {?./events.EventTracker}\n   */\n  ;\n\n  _proto.getTrackerForWhitelist = function getTrackerForWhitelist(name, whitelist) {\n    var trackerProfile = whitelist[name];\n\n    if (trackerProfile) {\n      return this.getTracker(name, trackerProfile);\n    }\n\n    return null;\n  }\n  /**\n   * Returns the tracker for the specified name and type. If the tracker\n   * has not been requested before, it will be created.\n   *\n   * @param {string} name\n   * @param {function(new:./events.CustomEventTracker, !AnalyticsRoot)|function(new:./events.ClickEventTracker, !AnalyticsRoot)|function(new:./events.ScrollEventTracker, !AnalyticsRoot)|function(new:./events.SignalTracker, !AnalyticsRoot)|function(new:./events.IniLoadTracker, !AnalyticsRoot)|function(new:./events.VideoEventTracker, !AnalyticsRoot)|function(new:./events.VideoEventTracker, !AnalyticsRoot)|function(new:./events.VisibilityTracker, !AnalyticsRoot)|function(new:./events.AmpStoryEventTracker, !AnalyticsRoot)} klass\n   * @return {!./events.EventTracker}\n   */\n  ;\n\n  _proto.getTracker = function getTracker(name, klass) {\n    var tracker = this.trackers_[name];\n\n    if (!tracker) {\n      tracker = new klass(this);\n      this.trackers_[name] = tracker;\n    }\n\n    return tracker;\n  }\n  /**\n   * Returns the tracker for the specified name or `null`.\n   * @param {string} name\n   * @return {?./events.EventTracker}\n   */\n  ;\n\n  _proto.getTrackerOptional = function getTrackerOptional(name) {\n    return this.trackers_[name] || null;\n  }\n  /**\n   * Searches the element that matches the selector within the scope of the\n   * analytics root in relationship to the specified context node.\n   *\n   * @param {!Element} context\n   * @param {string} selector DOM query selector.\n   * @param {?string=} selectionMethod Allowed values are `null`,\n   *   `'closest'` and `'scope'`.\n   * @return {!Promise<!Element>} Element corresponding to the selector.\n   */\n  ;\n\n  _proto.getElement = function getElement(context, selector, selectionMethod) {\n    var _this2 = this;\n\n    if (selectionMethod === void 0) {\n      selectionMethod = null;\n    }\n\n    // Special case selectors. The selection method is irrelavant.\n    // And no need to wait for document ready.\n    if (selector == ':root') {\n      return (0, _promise.tryResolve)(function () {\n        return _this2.getRootElement();\n      });\n    }\n\n    if (selector == ':host') {\n      return new Promise(function (resolve) {\n        resolve((0, _log.user)().assertElement(_this2.getHostElement(), \"Element \\\"\" + selector + \"\\\" not found\"));\n      });\n    } // Wait for document-ready to avoid false missed searches\n\n\n    return this.ampdoc.whenReady().then(function () {\n      var found;\n      var result = null; // Query search based on the selection method.\n\n      try {\n        if (selectionMethod == 'scope') {\n          found = (0, _dom.scopedQuerySelector)(context, selector);\n        } else if (selectionMethod == 'closest') {\n          found = (0, _dom.closestAncestorElementBySelector)(context, selector);\n        } else {\n          found = _this2.getRoot().querySelector(selector);\n        }\n      } catch (e) {\n        (0, _log.userAssert)(false, \"Invalid query selector \" + selector);\n      } // DOM search can \"look\" outside the boundaries of the root, thus make\n      // sure the result is contained.\n\n\n      if (found && _this2.contains(found)) {\n        result = found;\n      }\n\n      return (0, _log.user)().assertElement(result, \"Element \\\"\" + selector + \"\\\" not found\");\n    });\n  }\n  /**\n   * Searches the AMP element that matches the selector within the scope of the\n   * analytics root in relationship to the specified context node.\n   *\n   * @param {!Element} context\n   * @param {string} selector DOM query selector.\n   * @param {?string=} selectionMethod Allowed values are `null`,\n   *   `'closest'` and `'scope'`.\n   * @return {!Promise<!AmpElement>} AMP element corresponding to the selector if found.\n   */\n  ;\n\n  _proto.getAmpElement = function getAmpElement(context, selector, selectionMethod) {\n    return this.getElement(context, selector, selectionMethod).then(function (element) {\n      (0, _log.userAssert)(element.classList.contains('i-amphtml-element'), 'Element \"%s\" is required to be an AMP element', selector);\n      return element;\n    });\n  }\n  /**\n   * Creates listener-filter for DOM events to check against the specified\n   * selector. If the node (or its ancestors) match the selector the listener\n   * will be called.\n   *\n   * @param {function(!Element, !Event)} listener The first argument is the\n   *   matched target node and the second is the original event.\n   * @param {!Element} context\n   * @param {string} selector DOM query selector.\n   * @param {?string=} selectionMethod Allowed values are `null`,\n   *   `'closest'` and `'scope'`.\n   * @return {function(!Event)}\n   */\n  ;\n\n  _proto.createSelectiveListener = function createSelectiveListener(listener, context, selector, selectionMethod) {\n    var _this3 = this;\n\n    if (selectionMethod === void 0) {\n      selectionMethod = null;\n    }\n\n    return function (event) {\n      if (selector == ':host') {\n        // `:host` is not reachable via selective listener b/c event path\n        // cannot be retargeted across the boundary of the embed.\n        return;\n      } // Navigate up the DOM tree to find the actual target.\n\n\n      var rootElement = _this3.getRootElement();\n\n      var isSelectAny = selector == '*';\n      var isSelectRoot = selector == ':root';\n      var target = event.target;\n\n      while (target) {\n        // Target must be contained by this root.\n        if (!_this3.contains(target)) {\n          break;\n        } // `:scope` context must contain the target.\n\n\n        if (selectionMethod == 'scope' && !isSelectRoot && !context.contains(target)) {\n          break;\n        } // `closest()` target must contain the conext.\n\n\n        if (selectionMethod == 'closest' && !target.contains(context)) {\n          // However, the search must continue!\n          target = target.parentElement;\n          continue;\n        } // Check if the target matches the selector.\n\n\n        if (isSelectAny || isSelectRoot && target == rootElement || tryMatches_(target, selector)) {\n          listener(target, event); // Don't fire the event multiple times even if the more than one\n          // ancestor matches the selector.\n\n          break;\n        }\n\n        target = target.parentElement;\n      }\n    };\n  }\n  /**\n   * Returns the promise that will be resolved as soon as the elements within\n   * the root have been loaded inside the first viewport of the root.\n   * @return {!Promise}\n   * @abstract\n   */\n  ;\n\n  _proto.whenIniLoaded = function whenIniLoaded() {}\n  /**\n   * Returns the visibility root corresponding to this analytics root (ampdoc\n   * or embed). The visibility root is created lazily as needed and takes\n   * care of all visibility tracking functions.\n   *\n   * The caller needs to make sure to call getVisibilityManager after\n   * usingHostAPIPromise has resolved\n   * @return {!./visibility-manager.VisibilityManager}\n   */\n  ;\n\n  _proto.getVisibilityManager = function getVisibilityManager() {\n    if (!this.visibilityManager_) {\n      if (this.hostVisibilityService_) {\n        // If there is hostAPI (hostAPI never exist with the FIE case)\n        this.visibilityManager_ = new _visibilityManagerForMapp.VisibilityManagerForMApp(this.ampdoc, this.hostVisibilityService_);\n      } else {\n        this.visibilityManager_ = (0, _visibilityManager.provideVisibilityManager)(this.getRoot());\n      }\n    }\n\n    return this.visibilityManager_;\n  }\n  /**\n   *  Returns the Scroll Managet corresponding to this analytics root.\n   * The Scroll Manager is created lazily as needed, and will handle\n   * calling all handlers for a scroll event.\n   * @return {!./scroll-manager.ScrollManager}\n   */\n  ;\n\n  _proto.getScrollManager = function getScrollManager() {\n    // TODO (zhouyx@): Disallow scroll trigger with host API\n    if (!this.scrollManager_) {\n      this.scrollManager_ = new _scrollManager.ScrollManager(this.ampdoc);\n    }\n\n    return this.scrollManager_;\n  };\n\n  return AnalyticsRoot;\n}();\n/**\n * The implementation of the analytics root for an ampdoc.\n */\n\n\nexports.AnalyticsRoot = AnalyticsRoot;\n\nvar AmpdocAnalyticsRoot =\n/*#__PURE__*/\nfunction (_AnalyticsRoot) {\n  _inheritsLoose(AmpdocAnalyticsRoot, _AnalyticsRoot);\n\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  function AmpdocAnalyticsRoot(ampdoc) {\n    return _AnalyticsRoot.call(this, ampdoc) || this;\n  }\n  /** @override */\n\n\n  var _proto2 = AmpdocAnalyticsRoot.prototype;\n\n  _proto2.getType = function getType() {\n    return 'ampdoc';\n  }\n  /** @override */\n  ;\n\n  _proto2.getRoot = function getRoot() {\n    return this.ampdoc.getRootNode();\n  }\n  /** @override */\n  ;\n\n  _proto2.getHostElement = function getHostElement() {\n    // ampdoc is always the root of everything - no host.\n    return null;\n  }\n  /** @override */\n  ;\n\n  _proto2.signals = function signals() {\n    return this.ampdoc.signals();\n  }\n  /** @override */\n  ;\n\n  _proto2.getElementById = function getElementById(id) {\n    return this.ampdoc.getElementById(id);\n  }\n  /** @override */\n  ;\n\n  _proto2.whenIniLoaded = function whenIniLoaded() {\n    var viewport = _services.Services.viewportForDoc(this.ampdoc);\n\n    var rect;\n\n    if ((0, _mode.getMode)(this.ampdoc.win).runtime == 'inabox') {\n      // TODO(dvoytenko, #7971): This is currently addresses incorrect position\n      // calculations in a in-a-box viewport where all elements are offset\n      // to the bottom of the embed. The current approach, even if fixed, still\n      // creates a significant probability of risk condition.\n      // Once address, we can simply switch to the 0/0 approach in the `else`\n      // clause.\n      rect = viewport.getLayoutRect(this.getRootElement());\n    } else {\n      var size = viewport.getSize();\n      rect = (0, _layoutRect.layoutRectLtwh)(0, 0, size.width, size.height);\n    }\n\n    return (0, _iniLoad.whenContentIniLoad)(this.ampdoc, this.ampdoc.win, rect);\n  };\n\n  return AmpdocAnalyticsRoot;\n}(AnalyticsRoot);\n/**\n * The implementation of the analytics root for FIE.\n * TODO(#22733): merge into AnalyticsRoot once ampdoc-fie is launched.\n */\n\n\nexports.AmpdocAnalyticsRoot = AmpdocAnalyticsRoot;\n\nvar EmbedAnalyticsRoot =\n/*#__PURE__*/\nfunction (_AnalyticsRoot2) {\n  _inheritsLoose(EmbedAnalyticsRoot, _AnalyticsRoot2);\n\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {!../../../src/friendly-iframe-embed.FriendlyIframeEmbed} embed\n   */\n  function EmbedAnalyticsRoot(ampdoc, embed) {\n    var _this4;\n\n    _this4 = _AnalyticsRoot2.call(this, ampdoc) || this;\n    /** @const */\n\n    _this4.embed = embed;\n    return _this4;\n  }\n  /** @override */\n\n\n  var _proto3 = EmbedAnalyticsRoot.prototype;\n\n  _proto3.getType = function getType() {\n    return 'embed';\n  }\n  /** @override */\n  ;\n\n  _proto3.getRoot = function getRoot() {\n    return this.embed.win.document;\n  }\n  /** @override */\n  ;\n\n  _proto3.getHostElement = function getHostElement() {\n    return this.embed.iframe;\n  }\n  /** @override */\n  ;\n\n  _proto3.signals = function signals() {\n    return this.embed.signals();\n  }\n  /** @override */\n  ;\n\n  _proto3.getElementById = function getElementById(id) {\n    return this.embed.win.document.getElementById(id);\n  }\n  /** @override */\n  ;\n\n  _proto3.whenIniLoaded = function whenIniLoaded() {\n    return this.embed.whenIniLoaded();\n  };\n\n  return EmbedAnalyticsRoot;\n}(AnalyticsRoot);\n/**\n * @param  {!Element} el\n * @param  {string} selector\n * @return {boolean}\n * @noinline\n */\n\n\nexports.EmbedAnalyticsRoot = EmbedAnalyticsRoot;\n\nfunction tryMatches_(el, selector) {\n  try {\n    return (0, _dom.matches)(el, selector);\n  } catch (e) {\n    (0, _log.user)().error(TAG, 'Bad query selector.', selector, e);\n    return false;\n  }\n}\n\n},{\"../../../src/dom\":111,\"../../../src/inabox/host-services\":118,\"../../../src/ini-load\":119,\"../../../src/layout-rect\":123,\"../../../src/log\":125,\"../../../src/mode\":127,\"../../../src/services\":141,\"../../../src/utils/object\":154,\"../../../src/utils/promise\":156,\"./scroll-manager\":21,\"./visibility-manager\":101,\"./visibility-manager-for-mapp\":100}],5:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.mergeObjects = mergeObjects;\nexports.expandConfigRequest = expandConfigRequest;\nexports.AnalyticsConfig = void 0;\n\nvar _vendors = require(\"./vendors\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _url = require(\"../../../src/url\");\n\nvar _extensionLocation = require(\"../../../src/service/extension-location\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _json = require(\"../../../src/json\");\n\nvar _mode = require(\"../../../src/mode\");\n\nvar _types = require(\"../../../src/types\");\n\nvar _experiments = require(\"../../../src/experiments\");\n\nvar _variables = require(\"./variables\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TAG = 'amp-analytics/config';\n\nvar AnalyticsConfig =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Element} element\n   */\n  function AnalyticsConfig(element) {\n    /** @private {!Element} */\n    this.element_ = element;\n    /** @private {?Window} */\n\n    this.win_ = null;\n    /**\n     * @const {!JsonObject} Copied here for tests.\n     * @private\n     */\n\n    this.predefinedConfig_ = _vendors.ANALYTICS_CONFIG;\n    /**\n     * @private {JsonObject}\n     */\n\n    this.config_ = (0, _object.dict)();\n    /**\n     * @private {JsonObject}\n     */\n\n    this.remoteConfig_ = (0, _object.dict)();\n    /** @private {boolean} */\n\n    this.isSandbox_ = false;\n  }\n  /**\n   * @return {!Promise<JsonObject>}\n   */\n\n\n  var _proto = AnalyticsConfig.prototype;\n\n  _proto.loadConfig = function loadConfig() {\n    var _this = this;\n\n    this.win_ = this.element_.ownerDocument.defaultView;\n    this.isSandbox_ = this.element_.hasAttribute('sandbox');\n    return Promise.all([this.fetchRemoteConfig_(), this.fetchVendorConfig_()]).then(this.processConfigs_.bind(this)).then(this.checkWarningMessage_.bind(this)).then(this.addExperimentParams_.bind(this)).then(function () {\n      return _this.config_;\n    });\n  }\n  /**\n   * Constructs the URL where the given vendor config is located\n   * @private\n   * @param {string} vendor the vendor name\n   * @return {string} the URL to request the vendor config file from\n   */\n  ;\n\n  _proto.getVendorUrl_ = function getVendorUrl_(vendor) {\n    var baseUrl = (0, _extensionLocation.calculateScriptBaseUrl)(this.win_.location, (0, _mode.getMode)().localDev); // bg has a special canary config\n\n    var canary = vendor === 'bg' && (0, _experiments.isCanary)(self) ? '.canary' : '';\n    return baseUrl + \"/rtv/\" + (0, _mode.getMode)().rtvVersion + \"/v0/analytics-vendors/\" + vendor + canary + \".json\";\n  }\n  /**\n   * Returns a promise that resolves when vendor config is ready (or\n   * immediately if no vendor config is specified)\n   * @private\n   * @return {!Promise<undefined>}\n   */\n  ;\n\n  _proto.fetchVendorConfig_ = function fetchVendorConfig_() {\n    var _this2 = this;\n\n    // eslint-disable-next-line no-undef\n    if (!false) {\n      return Promise.resolve();\n    }\n\n    var type = this.element_.getAttribute('type');\n\n    if (!type) {\n      return Promise.resolve();\n    }\n\n    var vendorUrl = this.getVendorUrl_(type);\n    var TAG = this.getName_();\n    (0, _log.dev)().fine(TAG, 'Fetching vendor config', vendorUrl);\n    return _services.Services.xhrFor((0, _types.toWin)(this.win_)).fetchJson(vendorUrl).then(function (res) {\n      return res.json();\n    }).then(function (jsonValue) {\n      _this2.predefinedConfig_[type] = jsonValue;\n      (0, _log.dev)().fine(TAG, 'Vendor config loaded for ' + type, jsonValue);\n    }, function (err) {\n      (0, _log.user)().error(TAG, 'Error loading vendor config: ', vendorUrl, err);\n    });\n  }\n  /**\n   * TODO: cleanup #22757 @jonathantyng\n   * Append special param to pageview request for RC and experiment builds\n   * for the googleanalytics component. This is to track pageview changes\n   * in AB experiment\n   */\n  ;\n\n  _proto.addExperimentParams_ = function addExperimentParams_() {\n    var type = this.element_.getAttribute('type');\n    var rtv = (0, _mode.getMode)().rtvVersion;\n    var isRc = rtv ? rtv.substring(0, 2) === '03' : false; // eslint-disable-next-line no-undef\n\n    var isExperiment = false;\n\n    if (type === 'googleanalytics' && (isRc || isExperiment) && this.config_['requests']) {\n      if (this.config_['requests']['pageview']) {\n        this.config_['requests']['pageview']['baseUrl'] += \"&aae=\" + isExperiment;\n      }\n\n      if (this.config_['requests']['timing']) {\n        this.config_['requests']['timing']['baseUrl'] += \"&aae=\" + isExperiment;\n      }\n    }\n  }\n  /**\n   * Returns a promise that resolves when remote config is ready (or\n   * immediately if no remote config is specified.)\n   * @private\n   * @return {!Promise<undefined>}\n   */\n  ;\n\n  _proto.fetchRemoteConfig_ = function fetchRemoteConfig_() {\n    var _this3 = this;\n\n    var remoteConfigUrl = this.element_.getAttribute('config');\n\n    if (!remoteConfigUrl || this.isSandbox_) {\n      return Promise.resolve();\n    }\n\n    (0, _url.assertHttpsUrl)(remoteConfigUrl, this.element_);\n    var TAG = this.getName_();\n    (0, _log.dev)().fine(TAG, 'Fetching remote config', remoteConfigUrl);\n    var fetchConfig = {};\n\n    if (this.element_.hasAttribute('data-credentials')) {\n      fetchConfig.credentials = this.element_.getAttribute('data-credentials');\n    }\n\n    return _services.Services.urlReplacementsForDoc(this.element_).expandUrlAsync(remoteConfigUrl).then(function (expandedUrl) {\n      remoteConfigUrl = expandedUrl;\n      return _services.Services.xhrFor((0, _types.toWin)(_this3.win_)).fetchJson(remoteConfigUrl, fetchConfig);\n    }).then(function (res) {\n      return res.json();\n    }).then(function (jsonValue) {\n      _this3.remoteConfig_ = jsonValue;\n      (0, _log.dev)().fine(TAG, 'Remote config loaded', remoteConfigUrl);\n    }, function (err) {\n      (0, _log.user)().error(TAG, 'Error loading remote config: ', remoteConfigUrl, err);\n    });\n  }\n  /**\n   * Returns a promise that resolves when configuration is re-written if\n   * configRewriter is configured by a vendor.\n   * @private\n   * @return {!Promise<undefined>}\n   */\n  ;\n\n  _proto.processConfigs_ = function processConfigs_() {\n    var configRewriterUrl = this.getConfigRewriter_()['url'];\n    var config = (0, _object.dict)({});\n    var inlineConfig = this.getInlineConfig_();\n    this.validateTransport_(inlineConfig);\n    mergeObjects(inlineConfig, config);\n    mergeObjects(this.remoteConfig_, config);\n\n    if (!configRewriterUrl || this.isSandbox_) {\n      this.config_ = this.mergeConfigs_(config); // use default configuration merge.\n\n      return Promise.resolve();\n    }\n\n    return this.handleConfigRewriter_(config, configRewriterUrl);\n  }\n  /**\n   * Handles logic if configRewriter is enabled.\n   * @param {!JsonObject} config\n   * @param {string} configRewriterUrl\n   * @return {!Promise<undefined>}\n   */\n  ;\n\n  _proto.handleConfigRewriter_ = function handleConfigRewriter_(config, configRewriterUrl) {\n    var _this4 = this;\n\n    (0, _url.assertHttpsUrl)(configRewriterUrl, this.element_);\n    var TAG = this.getName_();\n    (0, _log.dev)().fine(TAG, 'Rewriting config', configRewriterUrl);\n    return this.handleVarGroups_(config).then(function () {\n      var fetchConfig = {\n        method: 'POST',\n        body: config\n      };\n\n      if (_this4.element_.hasAttribute('data-credentials')) {\n        fetchConfig.credentials = _this4.element_.getAttribute('data-credentials');\n      }\n\n      return _services.Services.urlReplacementsForDoc(_this4.element_).expandUrlAsync(configRewriterUrl).then(function (expandedUrl) {\n        return _services.Services.xhrFor((0, _types.toWin)(_this4.win_)).fetchJson(expandedUrl, fetchConfig);\n      }).then(function (res) {\n        return res.json();\n      }).then(function (jsonValue) {\n        _this4.config_ = _this4.mergeConfigs_(jsonValue);\n        (0, _log.dev)().fine(TAG, 'Configuration re-written', configRewriterUrl);\n      }, function (err) {\n        (0, _log.user)().error(TAG, 'Error rewriting configuration: ', configRewriterUrl, err);\n      });\n    });\n  }\n  /**\n   * Check if config has warning, display on console and\n   * remove the property.\n   * @private\n   */\n  ;\n\n  _proto.checkWarningMessage_ = function checkWarningMessage_() {\n    if (this.config_['warningMessage']) {\n      var _TAG = this.getName_();\n\n      var type = this.element_.getAttribute('type');\n      var remoteConfigUrl = this.element_.getAttribute('config');\n      (0, _log.user)().warn(_TAG, 'Warning from analytics vendor%s%s: %s', type ? ' ' + type : '', remoteConfigUrl ? ' with remote config url ' + remoteConfigUrl : '', String(this.config_['warningMessage']));\n      delete this.config_['warningMessage'];\n    }\n  }\n  /**\n   * Check to see which varGroups are enabled, resolve and merge them into\n   * vars object.\n   * @param {!JsonObject} pubConfig\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.handleVarGroups_ = function handleVarGroups_(pubConfig) {\n    var _this5 = this;\n\n    var pubRewriterConfig = pubConfig['configRewriter'];\n    var pubVarGroups = pubRewriterConfig && pubRewriterConfig['varGroups'];\n    var vendorVarGroups = this.getConfigRewriter_()['varGroups'];\n\n    if (!pubVarGroups && !vendorVarGroups) {\n      return Promise.resolve();\n    }\n\n    if (pubVarGroups && !vendorVarGroups) {\n      var _TAG2 = this.getName_();\n\n      (0, _log.user)().warn(_TAG2, 'This analytics provider does not currently support varGroups');\n      return Promise.resolve();\n    } // Create object that will later hold all the resolved variables, and any\n    // intermediary objects as necessary.\n\n\n    pubConfig['configRewriter'] = pubConfig['configRewriter'] || (0, _object.dict)();\n    var rewriterConfig = pubConfig['configRewriter'];\n    rewriterConfig['vars'] = (0, _object.dict)({});\n    var allPromises = []; // Merge publisher && vendor varGroups to see what has been enabled.\n\n    var mergedConfig = pubVarGroups || (0, _object.dict)();\n    (0, _object.deepMerge)(mergedConfig, vendorVarGroups);\n    Object.keys(mergedConfig).forEach(function (groupName) {\n      var group = mergedConfig[groupName];\n\n      if (!group['enabled']) {\n        // Any varGroups must be explicitly enabled.\n        return;\n      }\n\n      var groupPromise = _this5.shallowExpandObject(_this5.element_, group).then(function (expandedGroup) {\n        // This is part of the user config and should not be sent.\n        delete expandedGroup['enabled']; // Merge all groups into single `vars` object.\n\n        Object.assign(rewriterConfig['vars'], expandedGroup);\n      });\n\n      allPromises.push(groupPromise);\n    });\n    return Promise.all(allPromises).then(function () {\n      // Don't send an empty vars payload.\n      if (!Object.keys(rewriterConfig['vars']).length) {\n        return delete pubConfig['configRewriter'];\n      } // Don't send varGroups in payload to configRewriter endpoint.\n\n\n      pubVarGroups && delete rewriterConfig['varGroups'];\n    });\n  }\n  /**\n   * Merges various sources of configs and stores them in a member variable.\n   *\n   * Order of precedence for configs from highest to lowest:\n   * - Remote config: specified through an attribute of the tag.\n   * - Inline config: specified insize the tag.\n   * - Predefined config: Defined as part of the platform.\n   * - Default config: Built-in config shared by all amp-analytics tags.\n   *\n   * @private\n   * @param {!JsonObject} rewrittenConfig\n   * @return {!JsonObject}\n   */\n  ;\n\n  _proto.mergeConfigs_ = function mergeConfigs_(rewrittenConfig) {\n    // Initialize config with analytics related vars.\n    var config = (0, _object.dict)({\n      'vars': {\n        'requestCount': 0\n      }\n    });\n    var defaultConfig = this.predefinedConfig_['default'] || {};\n    mergeObjects(expandConfigRequest(defaultConfig), config);\n    mergeObjects(expandConfigRequest(this.getTypeConfig_()), config,\n    /* predefined */\n    true);\n    mergeObjects(expandConfigRequest(rewrittenConfig), config,\n    /* predefined */\n    true);\n    return config;\n  }\n  /**\n   * Reads configRewriter from a vendor config.\n   * @return {!JsonObject}\n   */\n  ;\n\n  _proto.getConfigRewriter_ = function getConfigRewriter_() {\n    return this.getTypeConfig_()['configRewriter'] || {};\n  }\n  /**\n   * Reads a vendor configuration.\n   * @return {!JsonObject}\n   */\n  ;\n\n  _proto.getTypeConfig_ = function getTypeConfig_() {\n    var type = this.element_.getAttribute('type');\n    return this.predefinedConfig_[type] || {};\n  }\n  /**\n   * @private\n   * @return {!JsonObject}\n   * @noinline\n   */\n  ;\n\n  _proto.getInlineConfig_ = function getInlineConfig_() {\n    if (this.element_.CONFIG) {\n      // If the analytics element is created by runtime, return cached config.\n      return this.element_.CONFIG;\n    }\n\n    var inlineConfig = {};\n    var TAG = this.getName_();\n\n    try {\n      var children = this.element_.children;\n\n      if (children.length == 1) {\n        inlineConfig = (0, _json.getChildJsonConfig)(this.element_);\n      } else if (children.length > 1) {\n        (0, _log.user)().error(TAG, 'The tag should contain only one <script> child.');\n      }\n    } catch (er) {\n      (0, _log.user)().error(TAG, er.message);\n    }\n\n    return (\n      /** @type {!JsonObject} */\n      inlineConfig\n    );\n  }\n  /**\n   * Validates transport configuration.\n   * @param {!JsonObject} inlineConfig\n   */\n  ;\n\n  _proto.validateTransport_ = function validateTransport_(inlineConfig) {\n    var type = this.element_.getAttribute('type');\n\n    if (this.predefinedConfig_[type]) {\n      // TODO(zhouyx, #7096) Track overwrite percentage. Prevent transport\n      // overwriting\n      if (inlineConfig['transport'] || this.remoteConfig_['transport']) {\n        var _TAG3 = this.getName_();\n\n        (0, _log.user)().error(_TAG3, 'Inline or remote config should not ' + 'overwrite vendor transport settings');\n      }\n    } // Do NOT allow inline or remote config to use 'transport: iframe'\n\n\n    if (inlineConfig['transport'] && inlineConfig['transport']['iframe']) {\n      (0, _log.user)().error(TAG, 'Inline configs are not allowed to specify transport iframe');\n\n      if (!(0, _mode.getMode)().localDev || (0, _mode.getMode)().test) {\n        inlineConfig['transport']['iframe'] = undefined;\n      }\n    }\n\n    if (this.remoteConfig_['transport'] && this.remoteConfig_['transport']['iframe']) {\n      (0, _log.user)().error(TAG, 'Remote configs are not allowed to specify transport iframe');\n      this.remoteConfig_['transport']['iframe'] = undefined;\n    }\n  }\n  /**\n   * @return {string} Returns a string to identify this tag. May not be unique\n   * if the element id is not unique.\n   * @private\n   */\n  ;\n\n  _proto.getName_ = function getName_() {\n    return 'AmpAnalytics ' + (this.element_.getAttribute('id') || '<unknown id>');\n  }\n  /**\n   * Expands all key value pairs asynchronously and returns a promise that will\n   * resolve with the expanded object.\n   * @param {!Element} element\n   * @param {!Object} obj\n   * @return {!Promise<!Object>}\n   */\n  ;\n\n  _proto.shallowExpandObject = function shallowExpandObject(element, obj) {\n    var expandedObj = (0, _object.dict)();\n    var keys = [];\n    var expansionPromises = [];\n\n    var urlReplacements = _services.Services.urlReplacementsForDoc(element);\n\n    var bindings = (0, _variables.variableServiceForDoc)(element).getMacros(element);\n    Object.keys(obj).forEach(function (key) {\n      keys.push(key);\n      var expanded = urlReplacements.expandStringAsync(obj[key], bindings);\n      expansionPromises.push(expanded);\n    });\n    return Promise.all(expansionPromises).then(function (expandedValues) {\n      keys.forEach(function (key, i) {\n        return expandedObj[key] = expandedValues[i];\n      });\n      return expandedObj;\n    });\n  };\n\n  return AnalyticsConfig;\n}();\n/**\n * Merges two objects. If the value is array or plain object, the values are\n * merged otherwise the value is overwritten.\n *\n * @param {Object|Array} from Object or array to merge from\n * @param {Object|Array} to Object or Array to merge into\n * @param {boolean=} opt_predefinedConfig\n * @return {*} TODO(#23582): Specify return type\n */\n\n\nexports.AnalyticsConfig = AnalyticsConfig;\n\nfunction mergeObjects(from, to, opt_predefinedConfig) {\n  if (to === null || to === undefined) {\n    to = {};\n  } // Assert that optouts are allowed only in predefined configs.\n  // The last expression adds an exception of known, safe optout function\n  // that is already being used in the wild.\n\n\n  (0, _log.userAssert)(opt_predefinedConfig || !from || !from['optout'] || from['optout'] == '_gaUserPrefs.ioo' || from['optoutElementId'] == '__gaOptOutExtension', 'optout property is only available to vendor config.');\n\n  for (var property in from) {\n    (0, _log.userAssert)(opt_predefinedConfig || property != 'iframePing', 'iframePing config is only available to vendor config.'); // Only deal with own properties.\n\n    if ((0, _object.hasOwn)(from, property)) {\n      if ((0, _types.isArray)(from[property])) {\n        if (!(0, _types.isArray)(to[property])) {\n          to[property] = [];\n        }\n\n        to[property] = mergeObjects(from[property], to[property], opt_predefinedConfig);\n      } else if ((0, _types.isObject)(from[property])) {\n        if (!(0, _types.isObject)(to[property])) {\n          to[property] = {};\n        }\n\n        to[property] = mergeObjects(from[property], to[property], opt_predefinedConfig);\n      } else {\n        to[property] = from[property];\n      }\n    }\n  }\n\n  return to;\n}\n/**\n * Expand config's request to object\n * @param {!JsonObject} config\n * @return {?JsonObject}\n * @visibleForTesting\n */\n\n\nfunction expandConfigRequest(config) {\n  if (!config['requests']) {\n    return config;\n  }\n\n  for (var k in config['requests']) {\n    if ((0, _object.hasOwn)(config['requests'], k)) {\n      config['requests'][k] = expandRequestStr(config['requests'][k]);\n    }\n  }\n\n  return handleTopLevelAttributes_(config);\n}\n/**\n * Expand single request to an object\n * @param {!JsonObject} request\n * @return {*} TODO(#23582): Specify return type\n */\n\n\nfunction expandRequestStr(request) {\n  if ((0, _types.isObject)(request)) {\n    return request;\n  }\n\n  return {\n    'baseUrl': request\n  };\n}\n/**\n * Handles top level fields in the given config\n * @param {!JsonObject} config\n * @return {JsonObject}\n */\n\n\nfunction handleTopLevelAttributes_(config) {\n  // handle a top level requestOrigin\n  if ((0, _object.hasOwn)(config, 'requests') && (0, _object.hasOwn)(config, 'requestOrigin')) {\n    var requestOrigin = config['requestOrigin'];\n\n    for (var requestName in config['requests']) {\n      // only add top level request origin into request if it doesn't have one\n      if (!(0, _object.hasOwn)(config['requests'][requestName], 'origin')) {\n        config['requests'][requestName]['origin'] = requestOrigin;\n      }\n    }\n  }\n\n  return config;\n}\n\n},{\"../../../src/experiments\":115,\"../../../src/json\":122,\"../../../src/log\":125,\"../../../src/mode\":127,\"../../../src/service/extension-location\":135,\"../../../src/services\":141,\"../../../src/types\":145,\"../../../src/url\":148,\"../../../src/utils/object\":154,\"./variables\":24,\"./vendors\":25}],6:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.cookieReader = cookieReader;\nexports.isCookieAllowed = isCookieAllowed;\n\nvar _cookies = require(\"../../../src/cookies\");\n\nvar _mode = require(\"../../../src/mode\");\n\nvar _iframeHelper = require(\"../../../src/iframe-helper\");\n\nvar _url = require(\"../../../src/url\");\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * COOKIE macro resolver\n * @param {!Window} win\n * @param {!Element} element\n * @param {string} name\n * @return {?string}\n */\nfunction cookieReader(win, element, name) {\n  if (!isCookieAllowed(win, element)) {\n    return null;\n  }\n\n  return (0, _cookies.getCookie)(win, name);\n}\n/**\n * Determine if cookie writing/reading feature is supported in current\n * environment.\n * Disable cookie writer in friendly iframe and proxy origin and inabox.\n * @param {!Window} win\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isCookieAllowed(win, element) {\n  return !(0, _iframeHelper.isInFie)(element) && !(0, _url.isProxyOrigin)(win.location) && !((0, _mode.getMode)(win).runtime == 'inabox');\n}\n\n},{\"../../../src/cookies\":109,\"../../../src/iframe-helper\":116,\"../../../src/mode\":127,\"../../../src/url\":148}],7:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.CookieWriter = void 0;\n\nvar _cidImpl = require(\"../../../src/service/cid-impl\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _cookieReader = require(\"./cookie-reader\");\n\nvar _types = require(\"../../../src/types\");\n\nvar _cookies = require(\"../../../src/cookies\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _variables = require(\"./variables\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TAG = 'amp-analytics/cookie-writer';\nvar RESERVED_KEYS = {\n  'referrerDomains': true,\n  'enabled': true,\n  'cookiePath': true,\n  'cookieMaxAge': true,\n  'cookieSecure': true,\n  'cookieDomain': true\n};\n\nvar CookieWriter =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Window} win\n   * @param {!Element} element\n   * @param {!JsonObject} config\n   */\n  function CookieWriter(win, element, config) {\n    /** @private {!Window} */\n    this.win_ = win;\n    /** @private {!Element} */\n\n    this.element_ = element;\n    /** @private {!../../../src/service/url-replacements-impl.UrlReplacements} */\n\n    this.urlReplacementService_ = _services.Services.urlReplacementsForDoc(element);\n    /** @private {?Promise} */\n\n    this.writePromise_ = null;\n    /** @private {!JsonObject} */\n\n    this.config_ = config;\n    /** @const @private {!JsonObject} */\n\n    this.bindings_ = (0, _variables.variableServiceForDoc)(element).getMacros(element);\n  }\n  /**\n   * @return {!Promise}\n   */\n\n\n  var _proto = CookieWriter.prototype;\n\n  _proto.write = function write() {\n    if (!this.writePromise_) {\n      this.writePromise_ = this.init_();\n    }\n\n    return this.writePromise_;\n  }\n  /**\n   * Parse the config and write to cookie\n   * Config looks like\n   * cookies: {\n   *   enabled: true/false, //Default to true\n   *   cookieNameA: {\n   *     value: cookieValueA (QUERY_PARAM/LINKER_PARAM)\n   *   },\n   *   cookieValueB: {\n   *     value: cookieValueB\n   *   }\n   *   ...\n   * }\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.init_ = function init_() {\n    // TODO: Need the consider the case for shadow doc.\n    if (!(0, _cookieReader.isCookieAllowed)(this.win_, this.element_)) {\n      // Note: It's important to check origin here so that setCookie doesn't\n      // throw error \"should not attempt ot set cookie on proxy origin\"\n      return Promise.resolve();\n    }\n\n    if (!(0, _object.hasOwn)(this.config_, 'cookies')) {\n      return Promise.resolve();\n    }\n\n    if (!(0, _types.isObject)(this.config_['cookies'])) {\n      (0, _log.user)().error(TAG, 'cookies config must be an object');\n      return Promise.resolve();\n    }\n\n    var inputConfig = this.config_['cookies'];\n\n    if (inputConfig['enabled'] === false) {\n      // Enabled by default\n      // TODO: Allow indiviual cookie object to override the value\n      return Promise.resolve();\n    }\n\n    var cookieExpireDateMs = this.getCookieMaxAgeMs_(inputConfig);\n    var ids = Object.keys(inputConfig);\n    var promises = [];\n\n    for (var i = 0; i < ids.length; i++) {\n      var cookieName = ids[i];\n      var cookieObj = inputConfig[cookieName];\n\n      if (this.isValidCookieConfig_(cookieName, cookieObj)) {\n        promises.push(this.expandAndWrite_(cookieName, cookieObj['value'], cookieExpireDateMs));\n      }\n    }\n\n    return Promise.all(promises);\n  }\n  /**\n   * Retrieves cookieMaxAge from given config, provides default value if no\n   * value is found or value is invalid\n   * @param {JsonObject} inputConfig\n   * @return {number}\n   */\n  ;\n\n  _proto.getCookieMaxAgeMs_ = function getCookieMaxAgeMs_(inputConfig) {\n    if (!(0, _object.hasOwn)(inputConfig, 'cookieMaxAge')) {\n      return _cidImpl.BASE_CID_MAX_AGE_MILLIS;\n    }\n\n    var cookieMaxAgeNumber = Number(inputConfig['cookieMaxAge']); // 0 is a special case which we allow\n\n    if (!cookieMaxAgeNumber && cookieMaxAgeNumber !== 0) {\n      (0, _log.user)().error(TAG, 'invalid cookieMaxAge %s, falling back to default value (1 year)', inputConfig['cookieMaxAge']);\n      return _cidImpl.BASE_CID_MAX_AGE_MILLIS;\n    }\n\n    if (cookieMaxAgeNumber <= 0) {\n      (0, _log.user)().warn(TAG, 'cookieMaxAge %s less than or equal to 0, cookie will immediately expire', inputConfig['cookieMaxAge']);\n    } // convert cookieMaxAge (sec) to milliseconds\n\n\n    return cookieMaxAgeNumber * 1000;\n  }\n  /**\n   * Check whether the cookie value is supported. Currently only support\n   * QUERY_PARAM(***) and LINKER_PARAM(***, ***)\n   *\n   * CookieObj should looks like\n   * cookieName: {\n   *  value: string (cookieValue),\n   * }\n   * @param {string} cookieName\n   * @param {*} cookieConfig\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isValidCookieConfig_ = function isValidCookieConfig_(cookieName, cookieConfig) {\n    if (RESERVED_KEYS[cookieName]) {\n      return false;\n    }\n\n    if (!(0, _types.isObject)(cookieConfig)) {\n      (0, _log.user)().error(TAG, 'cookieValue must be configured in an object');\n      return false;\n    }\n\n    if (!(0, _object.hasOwn)(cookieConfig, 'value')) {\n      (0, _log.user)().error(TAG, 'value is required in the cookieValue object');\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * Expand the value and write to cookie if necessary\n   * @param {string} cookieName\n   * @param {string} cookieValue\n   * @param {number} cookieExpireDateMs\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.expandAndWrite_ = function expandAndWrite_(cookieName, cookieValue, cookieExpireDateMs) {\n    var _this = this;\n\n    // Note: Have to use `expandStringAsync` because QUERY_PARAM can wait for\n    // trackImpressionPromise and resolve async\n    return this.urlReplacementService_.expandStringAsync(cookieValue, this.bindings_).then(function (value) {\n      // Note: We ignore empty cookieValue, that means currently we don't\n      // provide a way to overwrite or erase existing cookie\n      if (value) {\n        var expireDate = Date.now() + cookieExpireDateMs;\n        (0, _cookies.setCookie)(_this.win_, cookieName, value, expireDate, {\n          highestAvailableDomain: true\n        });\n      }\n    }).catch(function (e) {\n      (0, _log.user)().error(TAG, 'Error expanding cookie string', e);\n    });\n  };\n\n  return CookieWriter;\n}();\n\nexports.CookieWriter = CookieWriter;\n\n},{\"../../../src/cookies\":109,\"../../../src/log\":125,\"../../../src/service/cid-impl\":134,\"../../../src/services\":141,\"../../../src/types\":145,\"../../../src/utils/object\":154,\"./cookie-reader\":6,\"./variables\":24}],8:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.crc32 = crc32;\n\nvar _bytes = require(\"../../../src/utils/bytes\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Standard key for CRC32\n * https://en.wikipedia.org/wiki/Cyclic_redundancy_check#Polynomial_representations_of_cyclic_redundancy_checks\n * @const {number}\n */\nvar CRC32_KEY = 0xedb88320;\n/** @private {?Array<number>} */\n\nvar crcTable = null;\n/**\n * Returns CRC32 checksum for provided string.\n * @param {string} str\n * @return {number}\n */\n\nfunction crc32(str) {\n  if (!crcTable) {\n    crcTable = makeCrcTable();\n  }\n\n  var bytes = (0, _bytes.utf8Encode)(str); // Shrink to 32 bits.\n\n  var crc = -1 >>> 0;\n\n  for (var i = 0; i < bytes.length; i++) {\n    var lookupIndex = (crc ^ bytes[i]) & 0xff;\n    crc = crc >>> 8 ^ crcTable[lookupIndex];\n  }\n\n  return (crc ^ -1) >>> 0;\n}\n/**\n * Generates CRC lookup table.\n * @return {!Array<number>}\n */\n\n\nfunction makeCrcTable() {\n  var crcTable = new Array(256);\n\n  for (var i = 0; i < 256; i++) {\n    var c = i;\n\n    for (var j = 0; j < 8; j++) {\n      if (c & 1) {\n        c = c >>> 1 ^ CRC32_KEY;\n      } else {\n        c = c >>> 1;\n      }\n    }\n\n    crcTable[i] = c;\n  }\n\n  return crcTable;\n}\n\n},{\"../../../src/utils/bytes\":151}],9:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getTrackerKeyName = getTrackerKeyName;\nexports.getTrackerTypesForParentType = getTrackerTypesForParentType;\nexports.VisibilityTracker = exports.VideoEventTracker = exports.TimerEventTracker = exports.IniLoadTracker = exports.SignalTracker = exports.ScrollEventTracker = exports.ClickEventTracker = exports.AmpStoryEventTracker = exports.CustomEventTracker = exports.EventTracker = exports.AnalyticsEvent = exports.trackerTypeForTesting = exports.AnalyticsEventType = void 0;\n\nvar _commonSignals = require(\"../../../src/common-signals\");\n\nvar _promise = require(\"../../../src/utils/promise\");\n\nvar _observable = require(\"../../../src/observable\");\n\nvar _videoInterface = require(\"../../../src/video-interface\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _eventHelper = require(\"../../../src/event-helper\");\n\nvar _dom = require(\"../../../src/dom\");\n\nvar _types = require(\"../../../src/types\");\n\nvar _string = require(\"../../../src/string\");\n\nvar _Object$freeze;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar SCROLL_PRECISION_PERCENT = 5;\nvar VAR_H_SCROLL_BOUNDARY = 'horizontalScrollBoundary';\nvar VAR_V_SCROLL_BOUNDARY = 'verticalScrollBoundary';\nvar MIN_TIMER_INTERVAL_SECONDS = 0.5;\nvar DEFAULT_MAX_TIMER_LENGTH_SECONDS = 7200;\nvar VARIABLE_DATA_ATTRIBUTE_KEY = /^vars(.+)/;\n\nvar NO_UNLISTEN = function NO_UNLISTEN() {};\n\nvar TAG = 'amp-analytics/events';\n/**\n * Events that can result in analytics data to be sent.\n * @const\n * @enum {string}\n */\n\nvar AnalyticsEventType = {\n  CLICK: 'click',\n  CUSTOM: 'custom',\n  HIDDEN: 'hidden',\n  INI_LOAD: 'ini-load',\n  RENDER_START: 'render-start',\n  SCROLL: 'scroll',\n  STORY: 'story',\n  TIMER: 'timer',\n  VIDEO: 'video',\n  VISIBLE: 'visible'\n};\nexports.AnalyticsEventType = AnalyticsEventType;\nvar ALLOWED_FOR_ALL_ROOT_TYPES = ['ampdoc', 'embed'];\n/**\n * Events that can result in analytics data to be sent.\n * @const {!Object<string, {\n *     name: string,\n *     allowedFor: !Array<string>,\n *     klass: function(new:./events.EventTracker)\n *   }>}\n */\n\nvar TRACKER_TYPE = Object.freeze((_Object$freeze = {}, _Object$freeze[AnalyticsEventType.CLICK] = {\n  name: AnalyticsEventType.CLICK,\n  allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer']),\n  // Escape the temporal dead zone by not referencing a class directly.\n  klass: function klass(root) {\n    return new ClickEventTracker(root);\n  }\n}, _Object$freeze[AnalyticsEventType.CUSTOM] = {\n  name: AnalyticsEventType.CUSTOM,\n  allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer']),\n  klass: function klass(root) {\n    return new CustomEventTracker(root);\n  }\n}, _Object$freeze[AnalyticsEventType.HIDDEN] = {\n  name: AnalyticsEventType.VISIBLE,\n  // Reuse tracker with visibility\n  allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer']),\n  klass: function klass(root) {\n    return new VisibilityTracker(root);\n  }\n}, _Object$freeze[AnalyticsEventType.INI_LOAD] = {\n  name: AnalyticsEventType.INI_LOAD,\n  allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer', 'visible']),\n  klass: function klass(root) {\n    return new IniLoadTracker(root);\n  }\n}, _Object$freeze[AnalyticsEventType.RENDER_START] = {\n  name: AnalyticsEventType.RENDER_START,\n  allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer', 'visible']),\n  klass: function klass(root) {\n    return new SignalTracker(root);\n  }\n}, _Object$freeze[AnalyticsEventType.SCROLL] = {\n  name: AnalyticsEventType.SCROLL,\n  allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer']),\n  klass: function klass(root) {\n    return new ScrollEventTracker(root);\n  }\n}, _Object$freeze[AnalyticsEventType.STORY] = {\n  name: AnalyticsEventType.STORY,\n  allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES,\n  klass: function klass(root) {\n    return new AmpStoryEventTracker(root);\n  }\n}, _Object$freeze[AnalyticsEventType.TIMER] = {\n  name: AnalyticsEventType.TIMER,\n  allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES,\n  klass: function klass(root) {\n    return new TimerEventTracker(root);\n  }\n}, _Object$freeze[AnalyticsEventType.VIDEO] = {\n  name: AnalyticsEventType.VIDEO,\n  allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer']),\n  klass: function klass(root) {\n    return new VideoEventTracker(root);\n  }\n}, _Object$freeze[AnalyticsEventType.VISIBLE] = {\n  name: AnalyticsEventType.VISIBLE,\n  allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer']),\n  klass: function klass(root) {\n    return new VisibilityTracker(root);\n  }\n}, _Object$freeze));\n/** @visibleForTesting */\n\nvar trackerTypeForTesting = TRACKER_TYPE;\n/**\n * @param {string} triggerType\n * @return {boolean}\n */\n\nexports.trackerTypeForTesting = trackerTypeForTesting;\n\nfunction isAmpStoryTriggerType(triggerType) {\n  return (0, _string.startsWith)(triggerType, 'story');\n}\n/**\n * @param {string} triggerType\n * @return {boolean}\n */\n\n\nfunction isVideoTriggerType(triggerType) {\n  return (0, _string.startsWith)(triggerType, 'video');\n}\n/**\n * @param {string} triggerType\n * @return {boolean}\n */\n\n\nfunction isReservedTriggerType(triggerType) {\n  return (0, _types.isEnumValue)(AnalyticsEventType, triggerType);\n}\n/**\n * @param {string} eventType\n * @return {string}\n */\n\n\nfunction getTrackerKeyName(eventType) {\n  if (isVideoTriggerType(eventType)) {\n    return AnalyticsEventType.VIDEO;\n  }\n\n  if (isAmpStoryTriggerType(eventType)) {\n    return AnalyticsEventType.STORY;\n  }\n\n  if (!isReservedTriggerType(eventType)) {\n    return AnalyticsEventType.CUSTOM;\n  }\n\n  return (0, _object.hasOwn)(TRACKER_TYPE, eventType) ? TRACKER_TYPE[eventType].name : eventType;\n}\n/**\n * @param {string} parentType\n * @return {!Object<string, function(new:EventTracker)>}\n */\n\n\nfunction getTrackerTypesForParentType(parentType) {\n  var filtered = {};\n  Object.keys(TRACKER_TYPE).forEach(function (key) {\n    if ((0, _object.hasOwn)(TRACKER_TYPE, key) && TRACKER_TYPE[key].allowedFor.indexOf(parentType) != -1) {\n      filtered[key] = TRACKER_TYPE[key].klass;\n    }\n  }, this);\n  return filtered;\n}\n/**\n * @interface\n */\n\n\nvar SignalTrackerDef =\n/*#__PURE__*/\nfunction () {\n  function SignalTrackerDef() {}\n\n  var _proto = SignalTrackerDef.prototype;\n\n  /**\n   * @param {string} unusedEventType\n   * @return {!Promise}\n   */\n  _proto.getRootSignal = function getRootSignal(unusedEventType) {}\n  /**\n   * @param {string} unusedEventType\n   * @param {!Element} unusedElement\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.getElementSignal = function getElementSignal(unusedEventType, unusedElement) {};\n\n  return SignalTrackerDef;\n}();\n/**\n * The analytics event.\n * @dict\n */\n\n\nvar AnalyticsEvent =\n/**\n * @param {!Element} target The most relevant target element.\n * @param {string} type The type of event.\n * @param {?JsonObject=} opt_vars A map of vars and their values.\n */\nfunction AnalyticsEvent(target, type, opt_vars) {\n  /** @const */\n  this['target'] = target;\n  /** @const */\n\n  this['type'] = type;\n  /** @const */\n\n  this['vars'] = opt_vars || (0, _object.dict)();\n};\n/**\n * The base class for all trackers. A tracker tracks all events of the same\n * type for a single analytics root.\n *\n * @implements {../../../src/service.Disposable}\n * @abstract\n * @visibleForTesting\n */\n\n\nexports.AnalyticsEvent = AnalyticsEvent;\n\nvar EventTracker =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  function EventTracker(root) {\n    /** @const */\n    this.root = root;\n  }\n  /** @override @abstract */\n\n\n  var _proto2 = EventTracker.prototype;\n\n  _proto2.dispose = function dispose() {}\n  /**\n   * @param {!Element} unusedContext\n   * @param {string} unusedEventType\n   * @param {!JsonObject} unusedConfig\n   * @param {function(!AnalyticsEvent)} unusedListener\n   * @return {!UnlistenDef}\n   * @abstract\n   */\n  ;\n\n  _proto2.add = function add(unusedContext, unusedEventType, unusedConfig, unusedListener) {};\n\n  return EventTracker;\n}();\n/**\n * Tracks custom events.\n */\n\n\nexports.EventTracker = EventTracker;\n\nvar CustomEventTracker =\n/*#__PURE__*/\nfunction (_EventTracker) {\n  _inheritsLoose(CustomEventTracker, _EventTracker);\n\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  function CustomEventTracker(root) {\n    var _this;\n\n    _this = _EventTracker.call(this, root) || this;\n    /** @const @private {!Object<string, !Observable<!AnalyticsEvent>>} */\n\n    _this.observables_ = {};\n    /**\n     * Early events have to be buffered because there's no way to predict\n     * how fast all `amp-analytics` elements will be instrumented.\n     * @private {!Object<string, !Array<!AnalyticsEvent>>|undefined}\n     */\n\n    _this.buffer_ = {};\n    /**\n     * Sandbox events get their own buffer, because handler to those events will\n     * be added after parent element's layout. (Time varies, can be later than\n     * 10s) sandbox events buffer will never expire but will cleared when\n     * handler is ready.\n     * @private {!Object<string, !Array<!AnalyticsEvent>|undefined>|undefined}\n     */\n\n    _this.sandboxBuffer_ = {}; // Stop buffering of custom events after 10 seconds. Assumption is that all\n    // `amp-analytics` elements will have been instrumented by this time.\n\n    setTimeout(function () {\n      _this.buffer_ = undefined;\n    }, 10000);\n    return _this;\n  }\n  /** @override */\n\n\n  var _proto3 = CustomEventTracker.prototype;\n\n  _proto3.dispose = function dispose() {\n    this.buffer_ = undefined;\n    this.sandboxBuffer_ = undefined;\n\n    for (var k in this.observables_) {\n      this.observables_[k].removeAll();\n    }\n  }\n  /** @override */\n  ;\n\n  _proto3.add = function add(context, eventType, config, listener) {\n    var _this2 = this;\n\n    var selector = config['selector'];\n\n    if (!selector) {\n      selector = ':root';\n    }\n\n    var selectionMethod = config['selectionMethod'] || null;\n    var targetReady = this.root.getElement(context, selector, selectionMethod);\n    var isSandboxEvent = (0, _string.startsWith)(eventType, 'sandbox-'); // Push recent events if any.\n\n    var buffer = isSandboxEvent ? this.sandboxBuffer_ && this.sandboxBuffer_[eventType] : this.buffer_ && this.buffer_[eventType];\n\n    if (buffer) {\n      var bufferLength = buffer.length;\n      targetReady.then(function (target) {\n        setTimeout(function () {\n          for (var i = 0; i < bufferLength; i++) {\n            var event = buffer[i];\n\n            if (target.contains(event['target'])) {\n              listener(event);\n            }\n          }\n\n          if (isSandboxEvent) {\n            // We assume sandbox event will only has single listener.\n            // It is safe to clear buffer once handler is ready.\n            _this2.sandboxBuffer_[eventType] = undefined;\n          }\n        }, 1);\n      });\n    }\n\n    var observables = this.observables_[eventType];\n\n    if (!observables) {\n      observables = new _observable.Observable();\n      this.observables_[eventType] = observables;\n    }\n\n    return this.observables_[eventType].add(function (event) {\n      // Wait for target selected\n      targetReady.then(function (target) {\n        if (target.contains(event['target'])) {\n          listener(event);\n        }\n      });\n    });\n  }\n  /**\n   * Triggers a custom event for the associated root.\n   * @param {!AnalyticsEvent} event\n   */\n  ;\n\n  _proto3.trigger = function trigger(event) {\n    var eventType = event['type'];\n    var isSandboxEvent = (0, _string.startsWith)(eventType, 'sandbox-');\n    var observables = this.observables_[eventType]; // If listeners already present - trigger right away.\n\n    if (observables) {\n      observables.fire(event);\n\n      if (isSandboxEvent) {\n        // No need to buffer sandbox event if handler ready\n        return;\n      }\n    } // Create buffer and enqueue buffer if needed\n\n\n    if (isSandboxEvent) {\n      this.sandboxBuffer_[eventType] = this.sandboxBuffer_[eventType] || [];\n      this.sandboxBuffer_[eventType].push(event);\n    } else {\n      // Check if buffer has expired\n      if (this.buffer_) {\n        this.buffer_[eventType] = this.buffer_[eventType] || [];\n        this.buffer_[eventType].push(event);\n      }\n    }\n  };\n\n  return CustomEventTracker;\n}(EventTracker); // TODO(Enriqe): If needed, add support for sandbox story event.\n// (e.g. sandbox-story-xxx).\n\n\nexports.CustomEventTracker = CustomEventTracker;\n\nvar AmpStoryEventTracker =\n/*#__PURE__*/\nfunction (_CustomEventTracker) {\n  _inheritsLoose(AmpStoryEventTracker, _CustomEventTracker);\n\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  function AmpStoryEventTracker(root) {\n    return _CustomEventTracker.call(this, root) || this;\n  }\n  /** @override */\n\n\n  var _proto4 = AmpStoryEventTracker.prototype;\n\n  _proto4.add = function add(context, eventType, config, listener) {\n    var _this3 = this;\n\n    // TODO(Enriqe): add support for storySpec.\n    var rootTarget = this.root.getRootElement(); // Fire buffered events if any.\n\n    var buffer = this.buffer_ && this.buffer_[eventType];\n\n    if (buffer) {\n      var bufferLength = buffer.length;\n\n      for (var i = 0; i < bufferLength; i++) {\n        var event = buffer[i];\n        this.fireListener_(event, rootTarget, config, listener);\n      }\n    }\n\n    var observables = this.observables_[eventType];\n\n    if (!observables) {\n      observables = new _observable.Observable();\n      this.observables_[eventType] = observables;\n    }\n\n    return this.observables_[eventType].add(function (event) {\n      _this3.fireListener_(event, rootTarget, config, listener);\n    });\n  }\n  /**\n   * Fires listener given the specified configuration.\n   * @param {!AnalyticsEvent} event\n   * @param {!Element} rootTarget\n   * @param {!JsonObject} config\n    * @param {function(!AnalyticsEvent)} listener\n   */\n  ;\n\n  _proto4.fireListener_ = function fireListener_(event, rootTarget, config, listener) {\n    var type = event['type'];\n    var vars = event['vars'];\n    listener(new AnalyticsEvent(rootTarget, type, vars));\n  }\n  /**\n   * Triggers a custom event for the associated root, or buffers them if the\n   * observables aren't present yet.\n   * @param {!AnalyticsEvent} event\n   */\n  ;\n\n  _proto4.trigger = function trigger(event) {\n    var eventType = event['type'];\n    var observables = this.observables_[eventType]; // If listeners already present - trigger right away.\n\n    if (observables) {\n      observables.fire(event);\n    } // Create buffer and enqueue event if needed.\n\n\n    if (this.buffer_) {\n      this.buffer_[eventType] = this.buffer_[eventType] || [];\n      this.buffer_[eventType].push(event);\n    }\n  };\n\n  return AmpStoryEventTracker;\n}(CustomEventTracker);\n/**\n * Tracks click events.\n */\n\n\nexports.AmpStoryEventTracker = AmpStoryEventTracker;\n\nvar ClickEventTracker =\n/*#__PURE__*/\nfunction (_EventTracker2) {\n  _inheritsLoose(ClickEventTracker, _EventTracker2);\n\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  function ClickEventTracker(root) {\n    var _this4;\n\n    _this4 = _EventTracker2.call(this, root) || this;\n    /** @private {!Observable<!Event>} */\n\n    _this4.clickObservable_ = new _observable.Observable();\n    /** @private @const {function(!Event)} */\n\n    _this4.boundOnClick_ = _this4.clickObservable_.fire.bind(_this4.clickObservable_);\n\n    _this4.root.getRoot().addEventListener('click', _this4.boundOnClick_);\n\n    return _this4;\n  }\n  /** @override */\n\n\n  var _proto5 = ClickEventTracker.prototype;\n\n  _proto5.dispose = function dispose() {\n    this.root.getRoot().removeEventListener('click', this.boundOnClick_);\n    this.clickObservable_.removeAll();\n  }\n  /** @override */\n  ;\n\n  _proto5.add = function add(context, eventType, config, listener) {\n    var selector = (0, _log.userAssert)(config['selector'], 'Missing required selector on click trigger');\n    var selectionMethod = config['selectionMethod'] || null;\n    return this.clickObservable_.add(this.root.createSelectiveListener(this.handleClick_.bind(this, listener), context.parentElement || context, selector, selectionMethod));\n  }\n  /**\n   * @param {function(!AnalyticsEvent)} listener\n   * @param {!Element} target\n   * @param {!Event} unusedEvent\n   * @private\n   */\n  ;\n\n  _proto5.handleClick_ = function handleClick_(listener, target, unusedEvent) {\n    var params = (0, _dom.getDataParamsFromAttributes)(target,\n    /* computeParamNameFunc */\n    undefined, VARIABLE_DATA_ATTRIBUTE_KEY);\n    listener(new AnalyticsEvent(target, 'click', params));\n  };\n\n  return ClickEventTracker;\n}(EventTracker);\n/**\n * Tracks scroll events.\n */\n\n\nexports.ClickEventTracker = ClickEventTracker;\n\nvar ScrollEventTracker =\n/*#__PURE__*/\nfunction (_EventTracker3) {\n  _inheritsLoose(ScrollEventTracker, _EventTracker3);\n\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  function ScrollEventTracker(root) {\n    var _this5;\n\n    _this5 = _EventTracker3.call(this, root) || this;\n    /** @private {!./analytics-root.AnalyticsRoot} root */\n\n    _this5.root_ = root;\n    /** @private {function(!Object)|null} */\n\n    _this5.boundScrollHandler_ = null;\n    return _this5;\n  }\n  /** @override */\n\n\n  var _proto6 = ScrollEventTracker.prototype;\n\n  _proto6.dispose = function dispose() {\n    if (this.boundScrollHandler_ !== null) {\n      this.root_.getScrollManager().removeScrollHandler(this.boundScrollHandler_);\n      this.boundScrollHandler_ = null;\n    }\n  }\n  /** @override */\n  ;\n\n  _proto6.add = function add(context, eventType, config, listener) {\n    if (!config['scrollSpec']) {\n      (0, _log.user)().error(TAG, 'Missing scrollSpec on scroll trigger.');\n      return NO_UNLISTEN;\n    }\n\n    if (!Array.isArray(config['scrollSpec']['verticalBoundaries']) && !Array.isArray(config['scrollSpec']['horizontalBoundaries'])) {\n      (0, _log.user)().error(TAG, 'Boundaries are required for the scroll trigger to work.');\n      return NO_UNLISTEN;\n    }\n\n    var boundsV = this.normalizeBoundaries_(config['scrollSpec']['verticalBoundaries']);\n    var boundsH = this.normalizeBoundaries_(config['scrollSpec']['horizontalBoundaries']);\n    this.boundScrollHandler_ = this.scrollHandler_.bind(this, boundsV, boundsH, listener);\n    return this.root_.getScrollManager().addScrollHandler(this.boundScrollHandler_);\n  }\n  /**\n   * Function to handle scroll events from the Scroll manager\n   * @param {!Object<number,boolean>} boundsV\n   * @param {!Object<number,boolean>} boundsH\n   * @param {function(!AnalyticsEvent)} listener\n   * @param {!Object} e\n   * @private\n   */\n  ;\n\n  _proto6.scrollHandler_ = function scrollHandler_(boundsV, boundsH, listener, e) {\n    // Calculates percentage scrolled by adding screen height/width to\n    // top/left and dividing by the total scroll height/width.\n    this.triggerScrollEvents_(boundsV, (e.top + e.height) * 100 / e.\n    /*OK*/\n    scrollHeight, VAR_V_SCROLL_BOUNDARY, listener);\n    this.triggerScrollEvents_(boundsH, (e.left + e.width) * 100 / e.\n    /*OK*/\n    scrollWidth, VAR_H_SCROLL_BOUNDARY, listener);\n  }\n  /**\n   * Rounds the boundaries for scroll trigger to nearest\n   * SCROLL_PRECISION_PERCENT and returns an object with normalized boundaries\n   * as keys and false as values.\n   *\n   * @param {!Array<number>} bounds array of bounds.\n   * @return {!JsonObject} Object with normalized bounds as keys\n   * and false as value.\n   * @private\n   */\n  ;\n\n  _proto6.normalizeBoundaries_ = function normalizeBoundaries_(bounds) {\n    var result = (0, _object.dict)({});\n\n    if (!bounds || !Array.isArray(bounds)) {\n      return result;\n    }\n\n    for (var b = 0; b < bounds.length; b++) {\n      var bound = bounds[b];\n\n      if (typeof bound !== 'number' || !isFinite(bound)) {\n        (0, _log.user)().error(TAG, 'Scroll trigger boundaries must be finite.');\n        return result;\n      }\n\n      bound = Math.min(Math.round(bound / SCROLL_PRECISION_PERCENT) * SCROLL_PRECISION_PERCENT, 100);\n      result[bound] = false;\n    }\n\n    return result;\n  }\n  /**\n   * @param {!Object<number, boolean>} bounds\n   * @param {number} scrollPos Number representing the current scroll\n   * @param {string} varName variable name to assign to the bound that\n   * @param {function(!AnalyticsEvent)} listener\n   * triggers the event position.\n   */\n  ;\n\n  _proto6.triggerScrollEvents_ = function triggerScrollEvents_(bounds, scrollPos, varName, listener) {\n    if (!scrollPos) {\n      return;\n    } // Goes through each of the boundaries and fires an event if it has not\n    // been fired so far and it should be.\n\n\n    for (var b in bounds) {\n      if (!(0, _object.hasOwn)(bounds, b)) {\n        continue;\n      }\n\n      var bound = parseInt(b, 10);\n\n      if (bound > scrollPos || bounds[bound]) {\n        continue;\n      }\n\n      bounds[bound] = true;\n      var vars = (0, _object.dict)();\n      vars[varName] = b;\n      listener(new AnalyticsEvent(this.root_.getRootElement(), AnalyticsEventType.SCROLL, vars));\n    }\n  };\n\n  return ScrollEventTracker;\n}(EventTracker);\n/**\n * Tracks events based on signals.\n * @implements {SignalTrackerDef}\n */\n\n\nexports.ScrollEventTracker = ScrollEventTracker;\n\nvar SignalTracker =\n/*#__PURE__*/\nfunction (_EventTracker4) {\n  _inheritsLoose(SignalTracker, _EventTracker4);\n\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  function SignalTracker(root) {\n    return _EventTracker4.call(this, root) || this;\n  }\n  /** @override */\n\n\n  var _proto7 = SignalTracker.prototype;\n\n  _proto7.dispose = function dispose() {}\n  /** @override */\n  ;\n\n  _proto7.add = function add(context, eventType, config, listener) {\n    var _this6 = this;\n\n    var target;\n    var signalsPromise;\n    var selector = config['selector'] || ':root';\n\n    if (selector == ':root' || selector == ':host') {\n      // Root selectors are delegated to analytics roots.\n      target = this.root.getRootElement();\n      signalsPromise = this.getRootSignal(eventType);\n    } else {\n      // Look for the AMP-element. Wait for DOM to be fully parsed to avoid\n      // false missed searches.\n      var selectionMethod = config['selectionMethod'];\n      signalsPromise = this.root.getAmpElement(context.parentElement || context, selector, selectionMethod).then(function (element) {\n        target = element;\n        return _this6.getElementSignal(eventType, target);\n      });\n    } // Wait for the target and the event signal.\n\n\n    signalsPromise.then(function () {\n      listener(new AnalyticsEvent(target, eventType));\n    });\n    return NO_UNLISTEN;\n  }\n  /** @override */\n  ;\n\n  _proto7.getRootSignal = function getRootSignal(eventType) {\n    return this.root.signals().whenSignal(eventType);\n  }\n  /** @override */\n  ;\n\n  _proto7.getElementSignal = function getElementSignal(eventType, element) {\n    if (typeof element.signals != 'function') {\n      return Promise.resolve();\n    }\n\n    return element.signals().whenSignal(eventType);\n  };\n\n  return SignalTracker;\n}(EventTracker);\n/**\n * Tracks when the elements in the first viewport has been loaded - \"ini-load\".\n * @implements {SignalTrackerDef}\n */\n\n\nexports.SignalTracker = SignalTracker;\n\nvar IniLoadTracker =\n/*#__PURE__*/\nfunction (_EventTracker5) {\n  _inheritsLoose(IniLoadTracker, _EventTracker5);\n\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  function IniLoadTracker(root) {\n    return _EventTracker5.call(this, root) || this;\n  }\n  /** @override */\n\n\n  var _proto8 = IniLoadTracker.prototype;\n\n  _proto8.dispose = function dispose() {}\n  /** @override */\n  ;\n\n  _proto8.add = function add(context, eventType, config, listener) {\n    var _this7 = this;\n\n    var target;\n    var promise;\n    var selector = config['selector'] || ':root';\n\n    if (selector == ':root' || selector == ':host') {\n      // Root selectors are delegated to analytics roots.\n      target = this.root.getRootElement();\n      promise = this.getRootSignal();\n    } else {\n      // An AMP-element. Wait for DOM to be fully parsed to avoid\n      // false missed searches.\n      var selectionMethod = config['selectionMethod'];\n      promise = this.root.getAmpElement(context.parentElement || context, selector, selectionMethod).then(function (element) {\n        target = element;\n        return _this7.getElementSignal('ini-load', target);\n      });\n    } // Wait for the target and the event.\n\n\n    promise.then(function () {\n      listener(new AnalyticsEvent(target, eventType));\n    });\n    return NO_UNLISTEN;\n  }\n  /** @override */\n  ;\n\n  _proto8.getRootSignal = function getRootSignal() {\n    return this.root.whenIniLoaded();\n  }\n  /** @override */\n  ;\n\n  _proto8.getElementSignal = function getElementSignal(unusedEventType, element) {\n    if (typeof element.signals != 'function') {\n      return Promise.resolve();\n    }\n\n    var signals = element.signals();\n    return Promise.race([signals.whenSignal(_commonSignals.CommonSignals.INI_LOAD), signals.whenSignal(_commonSignals.CommonSignals.LOAD_END)]);\n  };\n\n  return IniLoadTracker;\n}(EventTracker);\n/**\n * Timer event handler.\n */\n\n\nexports.IniLoadTracker = IniLoadTracker;\n\nvar TimerEventHandler =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {JsonObject} timerSpec The timer specification.\n   * @param {function(): UnlistenDef=} opt_startBuilder Factory for building\n   *     start trackers for this timer.\n   * @param {function(): UnlistenDef=} opt_stopBuilder Factory for building stop\n   *     trackers for this timer.\n   */\n  function TimerEventHandler(timerSpec, opt_startBuilder, opt_stopBuilder) {\n    /** @private {number|undefined} */\n    this.intervalId_ = undefined;\n    (0, _log.userAssert)('interval' in timerSpec, 'Timer interval specification required');\n    /** @private @const {number} */\n\n    this.intervalLength_ = Number(timerSpec['interval']) || 0;\n    (0, _log.userAssert)(this.intervalLength_ >= MIN_TIMER_INTERVAL_SECONDS, 'Bad timer interval specification');\n    /** @private @const {number} */\n\n    this.maxTimerLength_ = 'maxTimerLength' in timerSpec ? Number(timerSpec['maxTimerLength']) : DEFAULT_MAX_TIMER_LENGTH_SECONDS;\n    (0, _log.userAssert)(this.maxTimerLength_ > 0, 'Bad maxTimerLength specification');\n    /** @private @const {boolean} */\n\n    this.maxTimerInSpec_ = 'maxTimerLength' in timerSpec;\n    /** @private @const {boolean} */\n\n    this.callImmediate_ = 'immediate' in timerSpec ? Boolean(timerSpec['immediate']) : true;\n    /** @private {?function()} */\n\n    this.intervalCallback_ = null;\n    /** @private {?UnlistenDef} */\n\n    this.unlistenStart_ = null;\n    /** @private {?UnlistenDef} */\n\n    this.unlistenStop_ = null;\n    /** @private @const {?function(): UnlistenDef} */\n\n    this.startBuilder_ = opt_startBuilder || null;\n    /** @private @const {?function(): UnlistenDef} */\n\n    this.stopBuilder_ = opt_stopBuilder || null;\n    /** @private {number|undefined} */\n\n    this.startTime_ = undefined; // milliseconds\n\n    /** @private {number|undefined} */\n\n    this.lastRequestTime_ = undefined; // milliseconds\n  }\n  /**\n   * @param {function()} startTimer\n   */\n\n\n  var _proto9 = TimerEventHandler.prototype;\n\n  _proto9.init = function init(startTimer) {\n    if (!this.startBuilder_) {\n      // Timer starts on load.\n      startTimer();\n    } else {\n      // Timer starts on event.\n      this.listenForStart_();\n    }\n  }\n  /**\n   * Unlistens for start and stop.\n   */\n  ;\n\n  _proto9.dispose = function dispose() {\n    this.unlistenForStop_();\n    this.unlistenForStart_();\n  }\n  /** @private */\n  ;\n\n  _proto9.listenForStart_ = function listenForStart_() {\n    if (this.startBuilder_) {\n      this.unlistenStart_ = this.startBuilder_();\n    }\n  }\n  /** @private */\n  ;\n\n  _proto9.unlistenForStart_ = function unlistenForStart_() {\n    if (this.unlistenStart_) {\n      this.unlistenStart_();\n      this.unlistenStart_ = null;\n    }\n  }\n  /** @private */\n  ;\n\n  _proto9.listenForStop_ = function listenForStop_() {\n    if (this.stopBuilder_) {\n      try {\n        this.unlistenStop_ = this.stopBuilder_();\n      } catch (e) {\n        this.dispose(); // Stop timer and then throw error.\n\n        throw e;\n      }\n    }\n  }\n  /** @private */\n  ;\n\n  _proto9.unlistenForStop_ = function unlistenForStop_() {\n    if (this.unlistenStop_) {\n      this.unlistenStop_();\n      this.unlistenStop_ = null;\n    }\n  }\n  /** @return {boolean} */\n  ;\n\n  _proto9.isRunning = function isRunning() {\n    return !!this.intervalId_;\n  }\n  /**\n   * @param {!Window} win\n   * @param {function()} timerCallback\n   * @param {function()} timeoutCallback\n   */\n  ;\n\n  _proto9.startIntervalInWindow = function startIntervalInWindow(win, timerCallback, timeoutCallback) {\n    if (this.isRunning()) {\n      return;\n    }\n\n    this.startTime_ = Date.now();\n    this.lastRequestTime_ = undefined;\n    this.intervalCallback_ = timerCallback;\n    this.intervalId_ = win.setInterval(function () {\n      timerCallback();\n    }, this.intervalLength_ * 1000); // If there's no way to turn off the timer, cap it.\n\n    if (!this.stopBuilder_ || this.stopBuilder_ && this.maxTimerInSpec_) {\n      win.setTimeout(function () {\n        timeoutCallback();\n      }, this.maxTimerLength_ * 1000);\n    }\n\n    this.unlistenForStart_();\n\n    if (this.callImmediate_) {\n      timerCallback();\n    }\n\n    this.listenForStop_();\n  }\n  /**\n   * @param {!Window} win\n   * @restricted\n   */\n  ;\n\n  _proto9.stopTimer_ = function stopTimer_(win) {\n    if (!this.isRunning()) {\n      return;\n    }\n\n    this.intervalCallback_();\n    this.intervalCallback_ = null;\n    win.clearInterval(this.intervalId_);\n    this.intervalId_ = undefined;\n    this.lastRequestTime_ = undefined;\n    this.unlistenForStop_();\n    this.listenForStart_();\n  }\n  /**\n   * @private\n   * @return {number}\n   */\n  ;\n\n  _proto9.calculateDuration_ = function calculateDuration_() {\n    if (this.startTime_) {\n      return Date.now() - (this.lastRequestTime_ || this.startTime_);\n    }\n\n    return 0;\n  }\n  /** @return {!JsonObject} */\n  ;\n\n  _proto9.getTimerVars = function getTimerVars() {\n    var timerDuration = 0;\n\n    if (this.isRunning()) {\n      timerDuration = this.calculateDuration_();\n      this.lastRequestTime_ = Date.now();\n    }\n\n    return (0, _object.dict)({\n      'timerDuration': timerDuration,\n      'timerStart': this.startTime_ || 0\n    });\n  };\n\n  return TimerEventHandler;\n}();\n/**\n * Tracks timer events.\n */\n\n\nvar TimerEventTracker =\n/*#__PURE__*/\nfunction (_EventTracker6) {\n  _inheritsLoose(TimerEventTracker, _EventTracker6);\n\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  function TimerEventTracker(root) {\n    var _this8;\n\n    _this8 = _EventTracker6.call(this, root) || this;\n    /** @const @private {!Object<number, TimerEventHandler>} */\n\n    _this8.trackers_ = {};\n    /** @private {number} */\n\n    _this8.timerIdSequence_ = 1;\n    return _this8;\n  }\n  /**\n   * @return {!Array<number>}\n   * @visibleForTesting\n   */\n\n\n  var _proto10 = TimerEventTracker.prototype;\n\n  _proto10.getTrackedTimerKeys = function getTrackedTimerKeys() {\n    return (\n      /** @type {!Array<number>} */\n      Object.keys(this.trackers_)\n    );\n  }\n  /** @override */\n  ;\n\n  _proto10.dispose = function dispose() {\n    var _this9 = this;\n\n    this.getTrackedTimerKeys().forEach(function (timerId) {\n      _this9.removeTracker_(timerId);\n    });\n  }\n  /** @override */\n  ;\n\n  _proto10.add = function add(context, eventType, config, listener) {\n    var _this10 = this;\n\n    var timerSpec = config['timerSpec'];\n    (0, _log.userAssert)(timerSpec && typeof timerSpec == 'object', 'Bad timer specification');\n    var timerStart = 'startSpec' in timerSpec ? timerSpec['startSpec'] : null;\n    (0, _log.userAssert)(!timerStart || typeof timerStart == 'object', 'Bad timer start specification');\n    var timerStop = 'stopSpec' in timerSpec ? timerSpec['stopSpec'] : null;\n    (0, _log.userAssert)(!timerStart && !timerStop || typeof timerStop == 'object', 'Bad timer stop specification');\n    var timerId = this.generateTimerId_();\n    var startBuilder;\n    var stopBuilder;\n\n    if (timerStart) {\n      var startTracker = this.getTracker_(timerStart);\n      (0, _log.userAssert)(startTracker, 'Cannot track timer start');\n      startBuilder = startTracker.add.bind(startTracker, context, timerStart['on'], timerStart, this.handleTimerToggle_.bind(this, timerId, eventType, listener));\n    }\n\n    if (timerStop) {\n      var stopTracker = this.getTracker_(timerStop);\n      (0, _log.userAssert)(stopTracker, 'Cannot track timer stop');\n      stopBuilder = stopTracker.add.bind(stopTracker, context, timerStop['on'], timerStop, this.handleTimerToggle_.bind(this, timerId, eventType, listener));\n    }\n\n    var timerHandler = new TimerEventHandler(timerSpec, startBuilder, stopBuilder);\n    this.trackers_[timerId] = timerHandler;\n    timerHandler.init(this.startTimer_.bind(this, timerId, eventType, listener));\n    return function () {\n      _this10.removeTracker_(timerId);\n    };\n  }\n  /**\n   * @return {number}\n   * @private\n   */\n  ;\n\n  _proto10.generateTimerId_ = function generateTimerId_() {\n    return ++this.timerIdSequence_;\n  }\n  /**\n   * @param {!JsonObject} config\n   * @return {?EventTracker}\n   * @private\n   */\n  ;\n\n  _proto10.getTracker_ = function getTracker_(config) {\n    var eventType = (0, _log.user)().assertString(config['on']);\n    var trackerKey = getTrackerKeyName(eventType);\n    return this.root.getTrackerForWhitelist(trackerKey, getTrackerTypesForParentType('timer'));\n  }\n  /**\n   * Toggles which listeners are active depending on timer state, so no race\n   * conditions can occur in the case where the timer starts and stops on the\n   * same event type from the same target.\n   * @param {number} timerId\n   * @param {string} eventType\n   * @param {function(!AnalyticsEvent)} listener\n   * @private\n   */\n  ;\n\n  _proto10.handleTimerToggle_ = function handleTimerToggle_(timerId, eventType, listener) {\n    var timerHandler = this.trackers_[timerId];\n\n    if (!timerHandler) {\n      return;\n    }\n\n    if (timerHandler.isRunning()) {\n      this.stopTimer_(timerId);\n    } else {\n      this.startTimer_(timerId, eventType, listener);\n    }\n  }\n  /**\n   * @param {number} timerId\n   * @param {string} eventType\n   * @param {function(!AnalyticsEvent)} listener\n   * @private\n   */\n  ;\n\n  _proto10.startTimer_ = function startTimer_(timerId, eventType, listener) {\n    var _this11 = this;\n\n    var timerHandler = this.trackers_[timerId];\n\n    var timerCallback = function timerCallback() {\n      listener(_this11.createEvent_(timerId, eventType));\n    };\n\n    timerHandler.startIntervalInWindow(this.root.ampdoc.win, timerCallback, this.removeTracker_.bind(this, timerId));\n  }\n  /**\n   * @param {number} timerId\n   * @private\n   */\n  ;\n\n  _proto10.stopTimer_ = function stopTimer_(timerId) {\n    this.trackers_[timerId].stopTimer_(this.root.ampdoc.win);\n  }\n  /**\n   * @param {number} timerId\n   * @param {string} eventType\n   * @return {!AnalyticsEvent}\n   * @private\n   */\n  ;\n\n  _proto10.createEvent_ = function createEvent_(timerId, eventType) {\n    return new AnalyticsEvent(this.root.getRootElement(), eventType, this.trackers_[timerId].getTimerVars());\n  }\n  /**\n   * @param {number} timerId\n   * @private\n   */\n  ;\n\n  _proto10.removeTracker_ = function removeTracker_(timerId) {\n    if (this.trackers_[timerId]) {\n      this.stopTimer_(timerId);\n      this.trackers_[timerId].dispose();\n      delete this.trackers_[timerId];\n    }\n  };\n\n  return TimerEventTracker;\n}(EventTracker);\n/**\n * Tracks video session events\n */\n\n\nexports.TimerEventTracker = TimerEventTracker;\n\nvar VideoEventTracker =\n/*#__PURE__*/\nfunction (_EventTracker7) {\n  _inheritsLoose(VideoEventTracker, _EventTracker7);\n\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  function VideoEventTracker(root) {\n    var _this12;\n\n    _this12 = _EventTracker7.call(this, root) || this;\n    /** @private {?Observable<!Event>} */\n\n    _this12.sessionObservable_ = new _observable.Observable();\n    /** @private {?function(!Event)} */\n\n    _this12.boundOnSession_ = _this12.sessionObservable_.fire.bind(_this12.sessionObservable_);\n    Object.keys(_videoInterface.VideoAnalyticsEvents).forEach(function (key) {\n      _this12.root.getRoot().addEventListener(_videoInterface.VideoAnalyticsEvents[key], _this12.boundOnSession_);\n    });\n    return _this12;\n  }\n  /** @override */\n\n\n  var _proto11 = VideoEventTracker.prototype;\n\n  _proto11.dispose = function dispose() {\n    var _this13 = this;\n\n    var root = this.root.getRoot();\n    Object.keys(_videoInterface.VideoAnalyticsEvents).forEach(function (key) {\n      root.removeEventListener(_videoInterface.VideoAnalyticsEvents[key], _this13.boundOnSession_);\n    });\n    this.boundOnSession_ = null;\n    this.sessionObservable_ = null;\n  }\n  /** @override */\n  ;\n\n  _proto11.add = function add(context, eventType, config, listener) {\n    var videoSpec = config['videoSpec'] || {};\n    var selector = config['selector'] || videoSpec['selector'];\n    var selectionMethod = config['selectionMethod'] || null;\n    var targetReady = this.root.getElement(context, selector, selectionMethod);\n    var endSessionWhenInvisible = videoSpec['end-session-when-invisible'];\n    var excludeAutoplay = videoSpec['exclude-autoplay'];\n    var interval = videoSpec['interval'];\n    var percentages = videoSpec['percentages'];\n    var on = config['on'];\n    var percentageInterval = 5;\n    var intervalCounter = 0;\n    var lastPercentage = 0;\n    return this.sessionObservable_.add(function (event) {\n      var type = event.type;\n      var details =\n      /** @type {?JsonObject|undefined} */\n      (0, _eventHelper.getData)(event);\n      var normalizedType = normalizeVideoEventType(type, details);\n\n      if (normalizedType !== on) {\n        return;\n      }\n\n      if (normalizedType === _videoInterface.VideoAnalyticsEvents.SECONDS_PLAYED && !interval) {\n        (0, _log.user)().error(TAG, 'video-seconds-played requires interval spec with non-zero value');\n        return;\n      }\n\n      if (normalizedType === _videoInterface.VideoAnalyticsEvents.SECONDS_PLAYED) {\n        intervalCounter++;\n\n        if (intervalCounter % interval !== 0) {\n          return;\n        }\n      }\n\n      if (normalizedType === _videoInterface.VideoAnalyticsEvents.PERCENTAGE_PLAYED) {\n        if (!percentages) {\n          (0, _log.user)().error(TAG, 'video-percentage-played requires percentages spec.');\n          return;\n        }\n\n        for (var i = 0; i < percentages.length; i++) {\n          var percentage = percentages[i];\n\n          if (percentage <= 0 || percentage % percentageInterval != 0) {\n            (0, _log.user)().error(TAG, 'Percentages must be set in increments of %s with non-zero ' + 'values', percentageInterval);\n            return;\n          }\n        }\n\n        var normalizedPercentage = details['normalizedPercentage'];\n        var normalizedPercentageInt = parseInt(normalizedPercentage, 10);\n        (0, _log.devAssert)((0, _types.isFiniteNumber)(normalizedPercentageInt));\n        (0, _log.devAssert)(normalizedPercentageInt % percentageInterval == 0);\n\n        if (lastPercentage == normalizedPercentageInt) {\n          return;\n        }\n\n        if (percentages.indexOf(normalizedPercentageInt) < 0) {\n          return;\n        }\n\n        lastPercentage = normalizedPercentageInt;\n      }\n\n      if (type === _videoInterface.VideoAnalyticsEvents.SESSION_VISIBLE && !endSessionWhenInvisible) {\n        return;\n      }\n\n      if (excludeAutoplay && details['state'] === _videoInterface.PlayingStates.PLAYING_AUTO) {\n        return;\n      }\n\n      var el = (0, _log.dev)().assertElement(event.target, 'No target specified by video session event.');\n      targetReady.then(function (target) {\n        if (!target.contains(el)) {\n          return;\n        }\n\n        var normalizedDetails = removeInternalVars(details);\n        listener(new AnalyticsEvent(target, normalizedType, normalizedDetails));\n      });\n    });\n  };\n\n  return VideoEventTracker;\n}(EventTracker);\n/**\n * Normalize video type from internal representation into the observed string\n * from the analytics configuration.\n * @param {string} type\n * @param {?JsonObject|undefined} details\n * @return {string}\n */\n\n\nexports.VideoEventTracker = VideoEventTracker;\n\nfunction normalizeVideoEventType(type, details) {\n  if (type == _videoInterface.VideoAnalyticsEvents.SESSION_VISIBLE) {\n    return _videoInterface.VideoAnalyticsEvents.SESSION;\n  } // Custom video analytics events are listened to from one signal type,\n  // but they're configured by user with their custom name.\n\n\n  if (type == _videoInterface.VideoAnalyticsEvents.CUSTOM) {\n    return (0, _log.dev)().assertString(details[_videoInterface.videoAnalyticsCustomEventTypeKey]);\n  }\n\n  return type;\n}\n/**\n * @param {?JsonObject|undefined} details\n * @return {?JsonObject|undefined}\n */\n\n\nfunction removeInternalVars(details) {\n  if (!details) {\n    return details;\n  }\n\n  var clean = Object.assign({}, details);\n  delete clean[_videoInterface.videoAnalyticsCustomEventTypeKey];\n  return (\n    /** @type {!JsonObject} */\n    clean\n  );\n}\n/**\n * Tracks visibility events.\n */\n\n\nvar VisibilityTracker =\n/*#__PURE__*/\nfunction (_EventTracker8) {\n  _inheritsLoose(VisibilityTracker, _EventTracker8);\n\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  function VisibilityTracker(root) {\n    var _this14;\n\n    _this14 = _EventTracker8.call(this, root) || this;\n    /** @private */\n\n    _this14.waitForTrackers_ = {};\n    return _this14;\n  }\n  /** @override */\n\n\n  var _proto12 = VisibilityTracker.prototype;\n\n  _proto12.dispose = function dispose() {}\n  /** @override */\n  ;\n\n  _proto12.add = function add(context, eventType, config, listener) {\n    var _this15 = this;\n\n    var visibilitySpec = config['visibilitySpec'] || {};\n    var selector = config['selector'] || visibilitySpec['selector'];\n    var waitForSpec = visibilitySpec['waitFor'];\n    var reportWhenSpec = visibilitySpec['reportWhen'];\n    var createReportReadyPromiseFunc = null;\n\n    if (reportWhenSpec) {\n      (0, _log.userAssert)(!visibilitySpec['repeat'], 'reportWhen and repeat are mutually exclusive.');\n    }\n\n    if (eventType === AnalyticsEventType.HIDDEN) {\n      if (reportWhenSpec) {\n        (0, _log.user)().error(TAG, 'ReportWhen should not be defined when eventType is \"hidden\"');\n      } // special polyfill for eventType: 'hidden'\n\n\n      reportWhenSpec = 'documentHidden';\n    }\n\n    var visibilityManagerPromise = this.root.isUsingHostAPI().then(function (hasHostAPI) {\n      if (hasHostAPI) {\n        _this15.assertMeasurableWithHostApi_(selector, reportWhenSpec);\n      }\n\n      return _this15.root.getVisibilityManager();\n    });\n\n    if (reportWhenSpec == 'documentHidden') {\n      createReportReadyPromiseFunc = this.createReportReadyPromiseForDocumentHidden_.bind(this);\n    } else if (reportWhenSpec == 'documentExit') {\n      createReportReadyPromiseFunc = this.createReportReadyPromiseForDocumentExit_.bind(this);\n    } else {\n      (0, _log.userAssert)(!reportWhenSpec, 'reportWhen value \"%s\" not supported.', reportWhenSpec);\n    }\n\n    var unlistenPromise; // Root selectors are delegated to analytics roots.\n\n    if (!selector || selector == ':root' || selector == ':host') {\n      // When `selector` is specified, we always use \"ini-load\" signal as\n      // a \"ready\" signal.\n      unlistenPromise = visibilityManagerPromise.then(function (visibilityManager) {\n        return visibilityManager.listenRoot(visibilitySpec, _this15.getReadyPromise(waitForSpec, selector), createReportReadyPromiseFunc, _this15.onEvent_.bind(_this15, eventType, listener, _this15.root.getRootElement()));\n      }, function () {});\n    } else {\n      // An AMP-element. Wait for DOM to be fully parsed to avoid\n      // false missed searches.\n      var selectionMethod = config['selectionMethod'] || visibilitySpec['selectionMethod'];\n      unlistenPromise = this.root.getAmpElement(context.parentElement || context, selector, selectionMethod).then(function (element) {\n        return visibilityManagerPromise.then(function (visibilityManager) {\n          return visibilityManager.listenElement(element, visibilitySpec, _this15.getReadyPromise(waitForSpec, selector, element), createReportReadyPromiseFunc, _this15.onEvent_.bind(_this15, eventType, listener, element));\n        }, function () {});\n      });\n    }\n\n    return function () {\n      unlistenPromise.then(function (unlisten) {\n        unlisten();\n      });\n    };\n  }\n  /**\n   * Assert that the setting is measurable with host API\n   * @param {string=} selector\n   * @param {string=} reportWhenSpec\n   */\n  ;\n\n  _proto12.assertMeasurableWithHostApi_ = function assertMeasurableWithHostApi_(selector, reportWhenSpec) {\n    (0, _log.userAssert)(!selector || selector == ':root' || selector == ':host', 'Element %s that is not root is not supported with host API', selector);\n    (0, _log.userAssert)(reportWhenSpec !== 'documentExit', 'reportWhen : documentExit is not supported with host API');\n  }\n  /**\n   * Returns a Promise indicating that we're ready to report the analytics,\n   * in the case of reportWhen: documentHidden\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto12.createReportReadyPromiseForDocumentHidden_ = function createReportReadyPromiseForDocumentHidden_() {\n    var ampdoc = this.root.ampdoc;\n\n    if (!ampdoc.isVisible()) {\n      return Promise.resolve();\n    }\n\n    return new Promise(function (resolve) {\n      ampdoc.onVisibilityChanged(function () {\n        if (!ampdoc.isVisible()) {\n          resolve();\n        }\n      });\n    });\n  }\n  /**\n   * Returns a Promise indicating that we're ready to report the analytics,\n   * in the case of reportWhen: documentExit\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto12.createReportReadyPromiseForDocumentExit_ = function createReportReadyPromiseForDocumentExit_() {\n    var deferred = new _promise.Deferred();\n    var win = this.root.ampdoc.win;\n\n    var _unloadListener, _pageHideListener; // Do not add an unload listener unless pagehide is not available.\n    // If an unload listener is present, the back/forward cache will not work.\n    // The BFCache saves pages to be instantly loaded when navigating back\n    // or forward and pauses their JavaScript. The pagehide event was added\n    // to give developers control over the behavior, and the unload listener\n    // interferes with it. To allow publishers to use the default BFCache\n    // behavior, we should not add an unload listener.\n\n\n    if (!this.supportsPageHide_()) {\n      win.addEventListener(\n      /*OK*/\n      'unload', _unloadListener = function unloadListener() {\n        win.removeEventListener('unload', _unloadListener);\n        deferred.resolve();\n      });\n    } // Note: pagehide is currently not supported on Opera Mini, nor IE<=10.\n    // Documentation conflicts as to whether Safari on iOS will also fire it\n    // when switching tabs or switching to another app. Chrome does not fire it\n    // in this case.\n    // Good, but several years old, analysis at:\n    // https://www.igvita.com/2015/11/20/dont-lose-user-and-app-state-use-page-visibility/\n    // Especially note the event table on this page.\n\n\n    win.addEventListener('pagehide', _pageHideListener = function pageHideListener() {\n      win.removeEventListener('pagehide', _pageHideListener);\n      deferred.resolve();\n    });\n    return deferred.promise;\n  }\n  /**\n   * Detect support for the pagehide event.\n   * IE<=10 and Opera Mini do not support the pagehide event and\n   * possibly others, so we feature-detect support with this method.\n   * This is in a stubbable method for testing.\n   * @return {boolean}\n   * @private visible for testing\n   */\n  ;\n\n  _proto12.supportsPageHide_ = function supportsPageHide_() {\n    return 'onpagehide' in this.root.ampdoc.win;\n  }\n  /**\n   * @param {string|undefined} waitForSpec\n   * @param {string|undefined} selector\n   * @param {Element=} opt_element\n   * @return {?Promise}\n   * @visibleForTesting\n   */\n  ;\n\n  _proto12.getReadyPromise = function getReadyPromise(waitForSpec, selector, opt_element) {\n    if (!waitForSpec) {\n      // Default case:\n      if (!selector) {\n        // waitFor selector is not defined, wait for nothing\n        return null;\n      } else {\n        // otherwise wait for ini-load by default\n        waitForSpec = 'ini-load';\n      }\n    }\n\n    var trackerWhitelist = getTrackerTypesForParentType('visible');\n    (0, _log.userAssert)(waitForSpec == 'none' || trackerWhitelist[waitForSpec] !== undefined, 'waitFor value %s not supported', waitForSpec);\n    var waitForTracker = this.waitForTrackers_[waitForSpec] || this.root.getTrackerForWhitelist(waitForSpec, trackerWhitelist);\n\n    if (waitForTracker) {\n      this.waitForTrackers_[waitForSpec] = waitForTracker;\n    } else {\n      return null;\n    } // Wait for root signal if there's no element selected.\n\n\n    return opt_element ? waitForTracker.getElementSignal(waitForSpec, opt_element) : waitForTracker.getRootSignal(waitForSpec);\n  }\n  /**\n   * @param {string} eventType\n   * @param {function(!AnalyticsEvent)} listener\n   * @param {!Element} target\n   * @param {!JsonObject} state\n   * @private\n   */\n  ;\n\n  _proto12.onEvent_ = function onEvent_(eventType, listener, target, state) {\n    var attr = (0, _dom.getDataParamsFromAttributes)(target,\n    /* computeParamNameFunc */\n    undefined, VARIABLE_DATA_ATTRIBUTE_KEY);\n\n    for (var key in attr) {\n      state[key] = attr[key];\n    }\n\n    listener(new AnalyticsEvent(target, eventType, state));\n  };\n\n  return VisibilityTracker;\n}(EventTracker);\n\nexports.VisibilityTracker = VisibilityTracker;\n\n},{\"../../../src/common-signals\":105,\"../../../src/dom\":111,\"../../../src/event-helper\":114,\"../../../src/log\":125,\"../../../src/observable\":128,\"../../../src/string\":143,\"../../../src/types\":145,\"../../../src/utils/object\":154,\"../../../src/utils/promise\":156,\"../../../src/video-interface\":157}],10:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.IframeTransportMessageQueue = void 0;\n\nvar _pFrameMessaging = require(\"../../../src/3p-frame-messaging\");\n\nvar _iframeHelper = require(\"../../../src/iframe-helper\");\n\nvar _log = require(\"../../../src/log\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @private @const {string} */\nvar TAG_ = 'amp-analytics/iframe-transport-message-queue';\n/** @private @const {number} */\n\nvar MAX_QUEUE_SIZE_ = 100;\n/**\n * @visibleForTesting\n */\n\nvar IframeTransportMessageQueue =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Constructor\n   * @param {!Window} win The window element\n   * @param {!HTMLIFrameElement} frame The cross-domain iframe to send\n   * messages to\n   */\n  function IframeTransportMessageQueue(win, frame) {\n    var _this = this;\n\n    /** @private {!HTMLIFrameElement} */\n    this.frame_ = frame;\n    /** @private {boolean} */\n\n    this.isReady_ = false;\n    /**\n     * @private\n     * {!Array<!../../../src/3p-frame-messaging.IframeTransportEvent>}\n     */\n\n    this.pendingEvents_ = [];\n    /** @private {!../../../src/iframe-helper.SubscriptionApi} */\n\n    this.postMessageApi_ = new _iframeHelper.SubscriptionApi(this.frame_, _pFrameMessaging.MessageType.SEND_IFRAME_TRANSPORT_EVENTS, true, function () {\n      _this.setIsReady();\n    });\n  }\n  /**\n   * Returns whether the queue has been marked as ready yet\n   * @return {boolean}\n   * @visibleForTesting\n   */\n\n\n  var _proto = IframeTransportMessageQueue.prototype;\n\n  _proto.isReady = function isReady() {\n    return this.isReady_;\n  }\n  /**\n   * Indicate that a cross-domain frame is ready to receive messages, and\n   * send all messages that were previously queued for it.\n   * @visibleForTesting\n   */\n  ;\n\n  _proto.setIsReady = function setIsReady() {\n    this.isReady_ = true;\n    this.flushQueue_();\n  }\n  /**\n   * Returns how many creativeId -> message(s) mappings there are\n   * @return {number}\n   * @visibleForTesting\n   */\n  ;\n\n  _proto.queueSize = function queueSize() {\n    return this.pendingEvents_.length;\n  }\n  /**\n   * Enqueues an event to be sent to a cross-domain iframe.\n   * @param {!../../../src/3p-frame-messaging.IframeTransportEvent} event\n   * Identifies the event and which Transport instance (essentially which\n   * creative) is sending it.\n   */\n  ;\n\n  _proto.enqueue = function enqueue(event) {\n    (0, _log.devAssert)(event && event.creativeId && event.message, 'Attempted to enqueue malformed message for: ' + event.creativeId);\n    this.pendingEvents_.push(event);\n\n    if (this.queueSize() >= MAX_QUEUE_SIZE_) {\n      (0, _log.dev)().warn(TAG_, 'Exceeded maximum size of queue for: ' + event.creativeId);\n      this.pendingEvents_.shift();\n    }\n\n    this.flushQueue_();\n  }\n  /**\n   * Send queued data (if there is any) to a cross-domain iframe\n   * @private\n   */\n  ;\n\n  _proto.flushQueue_ = function flushQueue_() {\n    if (this.isReady() && this.queueSize()) {\n      this.postMessageApi_.send(_pFrameMessaging.MessageType.IFRAME_TRANSPORT_EVENTS,\n      /** @type {!JsonObject} */\n      {\n        events: this.pendingEvents_\n      });\n      this.pendingEvents_ = [];\n    }\n  };\n\n  return IframeTransportMessageQueue;\n}();\n\nexports.IframeTransportMessageQueue = IframeTransportMessageQueue;\n\n},{\"../../../src/3p-frame-messaging\":103,\"../../../src/iframe-helper\":116,\"../../../src/log\":125}],11:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.IFRAME_TRANSPORTS_CANARY = exports.IFRAME_TRANSPORTS = void 0;\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Vendors who have IAB viewability certification may use iframe transport\n * (see ../amp-analytics.md and ../integrating-analytics.md). In this case,\n * put only the specification of the iframe location in the object below.\n *\n * This object is separated from vendors.js to be shared with extensions\n * other than amp-analytics, for instance amp-ad-exit.\n *\n * @const {!Object}\n */\nvar prodConfig = {\n  'bg': 'https://tpc.googlesyndication.com/b4a/b4a-runner.html',\n  'moat': 'https://z.moatads.com/ampanalytics093284/iframe.html'\n};\n/**\n * Canary config override\n *\n * @const {!Object}\n */\n\nvar canaryConfig = Object.assign({}, prodConfig, {\n  'bg': 'https://tpc.googlesyndication.com/b4a/experimental/b4a-runner.html'\n});\nvar IFRAME_TRANSPORTS =\n/** @type {!JsonObject} */\nprodConfig;\nexports.IFRAME_TRANSPORTS = IFRAME_TRANSPORTS;\nvar IFRAME_TRANSPORTS_CANARY =\n/** @type {!JsonObject} */\ncanaryConfig;\nexports.IFRAME_TRANSPORTS_CANARY = IFRAME_TRANSPORTS_CANARY;\n\n},{}],12:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getIframeTransportScriptUrl = getIframeTransportScriptUrl;\nexports.IframeTransport = exports.FrameData = void 0;\n\nvar _iframeTransportMessageQueue = require(\"./iframe-transport-message-queue\");\n\nvar _dom = require(\"../../../src/dom\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _mode = require(\"../../../src/mode\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _internalVersion = require(\"../../../src/internal-version\");\n\nvar _jankMeter = require(\"../../../src/service/jank-meter\");\n\nvar _style = require(\"../../../src/style\");\n\nvar _config = require(\"../../../src/config\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @private @const {string} */\nvar TAG_ = 'amp-analytics/iframe-transport';\n/** @private @const {number} */\n\nvar LONG_TASK_REPORTING_THRESHOLD = 5;\n/** @typedef {{\n *    frame: Element,\n *    sentinel: string,\n *    usageCount: number,\n *    queue: IframeTransportMessageQueue,\n *  }} */\n\nvar FrameData;\n/**\n * Get the URL of the client lib\n * @param {!Window} ampWin The window object of the AMP document\n * @param {boolean=} opt_forceProdUrl If true, prod URL will be returned even\n *     in local/test modes.\n * @return {string}\n */\n\nexports.FrameData = FrameData;\n\nfunction getIframeTransportScriptUrl(ampWin, opt_forceProdUrl) {\n  if (((0, _mode.getMode)().localDev || (0, _mode.getMode)().test) && !opt_forceProdUrl && ampWin.parent && ampWin.parent.location) {\n    var loc = ampWin.parent.location;\n    return loc.protocol + \"//\" + loc.host + \"/dist/iframe-transport-client-lib.js\";\n  }\n\n  return _config.urls.thirdParty + (\"/\" + (0, _internalVersion.internalRuntimeVersion)() + \"/iframe-transport-client-v0.js\");\n}\n/**\n * @visibleForTesting\n */\n\n\nvar IframeTransport =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Window} ampWin The window object of the AMP document\n   * @param {string} type The value of the amp-analytics tag's type attribute\n   * @param {!JsonObject} config\n   * @param {string} id If (potentially) using sendResponseToCreative(), it\n   *     should be something that the recipient can use to identify the\n   *     context of the message, e.g. the resourceID of a DOM element.\n   */\n  function IframeTransport(ampWin, type, config, id) {\n    /** @private @const {!Window} */\n    this.ampWin_ = ampWin;\n    /** @private @const {string} */\n\n    this.type_ = type;\n    /** @private @const {string} */\n\n    this.creativeId_ = id;\n    (0, _log.devAssert)(config && config['iframe'], 'Must supply iframe URL to constructor!');\n    this.frameUrl_ = config['iframe'];\n    /** @private {number} */\n\n    this.numLongTasks_ = 0;\n    this.processCrossDomainIframe();\n  }\n  /**\n   * Called when a Transport instance is being removed from the DOM\n   */\n\n\n  var _proto = IframeTransport.prototype;\n\n  _proto.detach = function detach() {\n    IframeTransport.markCrossDomainIframeAsDone(this.ampWin_.document, this.type_);\n  }\n  /**\n   * If iframe is specified in config/transport, check whether third-party\n   * iframe already exists, and if not, create it.\n   */\n  ;\n\n  _proto.processCrossDomainIframe = function processCrossDomainIframe() {\n    var frameData;\n\n    if (IframeTransport.hasCrossDomainIframe(this.type_)) {\n      frameData = IframeTransport.getFrameData(this.type_);\n      ++frameData.usageCount;\n    } else {\n      frameData = this.createCrossDomainIframe();\n      this.ampWin_.document.body.appendChild(frameData.frame);\n      this.createPerformanceObserver_();\n    }\n\n    (0, _log.devAssert)(frameData, 'Trying to use non-existent frame');\n  }\n  /**\n   * Create a cross-domain iframe for third-party vendor analytics\n   * @return {!FrameData}\n   * @visibleForTesting\n   */\n  ;\n\n  _proto.createCrossDomainIframe = function createCrossDomainIframe() {\n    // Explanation of IDs:\n    // Each instance of IframeTransport (owned by a specific amp-analytics\n    // tag, in turn owned by a specific creative) has an ID\n    // (this.getCreativeId()).\n    // Each cross-domain iframe also has an ID, stored here in sentinel.\n    // These two types of IDs have different formats.\n    // There is a many-to-one relationship, in that several creatives may\n    // utilize the same analytics vendor, so perhaps two creatives might\n    // both use the same vendor iframe.\n    // Of course, a given creative may use multiple analytics vendors, but\n    // in that case it would use multiple amp-analytics tags, so the\n    // iframeTransport.getCreativeId() -> sentinel relationship is *not*\n    // many-to-many.\n    var sentinel = IframeTransport.createUniqueId_();\n    var frameName = JSON.stringify(\n    /** @type {JsonObject} */\n    {\n      scriptSrc: getIframeTransportScriptUrl(this.ampWin_),\n      sentinel: sentinel,\n      type: this.type_\n    });\n    var frame = (0, _dom.createElementWithAttributes)(this.ampWin_.document, 'iframe',\n    /** @type {!JsonObject} */\n    {\n      sandbox: 'allow-scripts allow-same-origin',\n      name: frameName,\n      'data-amp-3p-sentinel': sentinel\n    });\n    frame.sentinel = sentinel;\n    (0, _style.toggle)(frame, false);\n    frame.src = this.frameUrl_;\n    var frameData =\n    /** @type {FrameData} */\n    {\n      frame: frame,\n      usageCount: 1,\n      queue: new _iframeTransportMessageQueue.IframeTransportMessageQueue(this.ampWin_,\n      /** @type {!HTMLIFrameElement} */\n      frame)\n    };\n    IframeTransport.crossDomainIframes_[this.type_] = frameData;\n    return frameData;\n  }\n  /**\n   * Uses the Long Task API to create an observer for when 3p vendor frames\n   * take more than 50ms of continuous CPU time.\n   * Currently the only action in response to that is to log. It will log\n   * once per LONG_TASK_REPORTING_THRESHOLD that a long task occurs. (This\n   * implies that there is a grace period for the first\n   * LONG_TASK_REPORTING_THRESHOLD-1 occurrences.)\n   * @private\n   */\n  ;\n\n  _proto.createPerformanceObserver_ = function createPerformanceObserver_() {\n    var _this = this;\n\n    if (!(0, _jankMeter.isLongTaskApiSupported)(this.ampWin_)) {\n      return;\n    } // TODO(jonkeller): Consider merging with jank-meter.js\n\n\n    IframeTransport.performanceObservers_[this.type_] = new this.ampWin_.PerformanceObserver(function (entryList) {\n      if (!entryList) {\n        return;\n      }\n\n      entryList.getEntries().forEach(function (entry) {\n        if (entry && entry['entryType'] == 'longtask' && entry['name'] == 'cross-origin-descendant' && entry.attribution) {\n          entry.attribution.forEach(function (attrib) {\n            if (_this.frameUrl_ == attrib['containerSrc'] && ++_this.numLongTasks_ % LONG_TASK_REPORTING_THRESHOLD == 0) {\n              (0, _log.user)().error(TAG_, \"Long Task: Vendor: \\\"\" + _this.type_ + \"\\\"\");\n            }\n          });\n        }\n      });\n    });\n    IframeTransport.performanceObservers_[this.type_].observe({\n      entryTypes: ['longtask']\n    });\n  }\n  /**\n   * Called when a creative no longer needs its cross-domain iframe (for\n   * instance, because the creative has been removed from the DOM).\n   * Once all creatives using a frame are done with it, the frame can be\n   * destroyed.\n   * @param {!HTMLDocument} ampDoc The AMP document\n   * @param {string} type The type attribute of the amp-analytics tag\n   */\n  ;\n\n  IframeTransport.markCrossDomainIframeAsDone = function markCrossDomainIframeAsDone(ampDoc, type) {\n    var frameData = IframeTransport.getFrameData(type);\n    (0, _log.devAssert)(frameData && frameData.frame && frameData.usageCount, 'Marked the ' + type + ' frame as done, but there is no' + ' record of it existing.');\n\n    if (--frameData.usageCount) {\n      // Some other instance is still using it\n      return;\n    }\n\n    ampDoc.body.removeChild(frameData.frame);\n    delete IframeTransport.crossDomainIframes_[type];\n\n    if (IframeTransport.performanceObservers_[type]) {\n      IframeTransport.performanceObservers_[type].disconnect();\n      IframeTransport.performanceObservers_[type] = null;\n    }\n  }\n  /**\n   * Returns whether this type of cross-domain frame is already known\n   * @param {string} type The type attribute of the amp-analytics tag\n   * @return {boolean}\n   * @visibleForTesting\n   */\n  ;\n\n  IframeTransport.hasCrossDomainIframe = function hasCrossDomainIframe(type) {\n    return (0, _object.hasOwn)(IframeTransport.crossDomainIframes_, type);\n  }\n  /**\n   * Create a unique value to differentiate messages from a particular\n   * creative to the cross-domain iframe, or to identify the iframe itself.\n   * @return {string}\n   * @private\n   */\n  ;\n\n  IframeTransport.createUniqueId_ = function createUniqueId_() {\n    return String(++IframeTransport.nextId_);\n  }\n  /**\n   * Sends an AMP Analytics trigger event to a vendor's cross-domain iframe,\n   * or queues the message if the frame is not yet ready to receive messages.\n   * @param {string} event A string describing the trigger event\n   * @visibleForTesting\n   */\n  ;\n\n  _proto.sendRequest = function sendRequest(event) {\n    var frameData = IframeTransport.getFrameData(this.type_);\n    (0, _log.devAssert)(frameData, 'Trying to send message to non-existent frame');\n    (0, _log.devAssert)(frameData.queue, 'Event queue is missing for messages from ' + this.type_ + ' to creative ID ' + this.creativeId_);\n    frameData.queue.enqueue(\n    /**\n     * @type {!../../../src/3p-frame-messaging.IframeTransportEvent}\n     */\n    {\n      creativeId: this.creativeId_,\n      message: event\n    });\n  }\n  /**\n   * Gets the FrameData associated with a particular cross-domain frame type.\n   * @param {string} type The type attribute of the amp-analytics tag\n   * @return {FrameData}\n   * @visibleForTesting\n   */\n  ;\n\n  IframeTransport.getFrameData = function getFrameData(type) {\n    return IframeTransport.crossDomainIframes_[type];\n  }\n  /**\n   * Removes all knowledge of cross-domain iframes.\n   * Does not actually remove them from the DOM.\n   * @visibleForTesting\n   */\n  ;\n\n  IframeTransport.resetCrossDomainIframes = function resetCrossDomainIframes() {\n    IframeTransport.crossDomainIframes_ = {};\n  }\n  /**\n   * @return {string} Unique ID of this instance of IframeTransport\n   * @visibleForTesting\n   */\n  ;\n\n  _proto.getCreativeId = function getCreativeId() {\n    return this.creativeId_;\n  }\n  /**\n   * @return {string} Type attribute of parent amp-analytics instance\n   * @visibleForTesting\n   */\n  ;\n\n  _proto.getType = function getType() {\n    return this.type_;\n  };\n\n  return IframeTransport;\n}();\n/** @private {Object<string, FrameData>} */\n\n\nexports.IframeTransport = IframeTransport;\nIframeTransport.crossDomainIframes_ = {};\n/** @private {number} */\n\nIframeTransport.nextId_ = 0;\n/** @private {Object<string, PerformanceObserver>} */\n\nIframeTransport.performanceObservers_ = {};\n\n},{\"../../../src/config\":106,\"../../../src/dom\":111,\"../../../src/internal-version\":120,\"../../../src/log\":125,\"../../../src/mode\":127,\"../../../src/service/jank-meter\":136,\"../../../src/style\":144,\"../../../src/utils/object\":154,\"./iframe-transport-message-queue\":10}],13:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.instrumentationServicePromiseForDoc = instrumentationServicePromiseForDoc;\nexports.instrumentationServiceForDocForTesting = instrumentationServiceForDocForTesting;\nexports.InstrumentationService = void 0;\n\nvar _events = require(\"./events\");\n\nvar _analyticsRoot = require(\"./analytics-root\");\n\nvar _analyticsGroup = require(\"./analytics-group\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _iframeHelper = require(\"../../../src/iframe-helper\");\n\nvar _service = require(\"../../../src/service\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar PROP = '__AMP_AN_ROOT';\n/**\n * @implements {../../../src/service.Disposable}\n * @private\n * @visibleForTesting\n */\n\nvar InstrumentationService =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  function InstrumentationService(ampdoc) {\n    /** @const */\n    this.ampdoc = ampdoc;\n    /** @const */\n\n    this.root_ = this.findRoot_(ampdoc.getRootNode());\n  }\n  /** @override */\n\n\n  var _proto = InstrumentationService.prototype;\n\n  _proto.dispose = function dispose() {\n    this.root_.dispose();\n  }\n  /**\n   * @param {!Node} context\n   * @return {!./analytics-root.AnalyticsRoot}\n   */\n  ;\n\n  _proto.getAnalyticsRoot = function getAnalyticsRoot(context) {\n    return this.findRoot_(context);\n  }\n  /**\n   * @param {!Element} analyticsElement\n   * @return {!AnalyticsGroup}\n   */\n  ;\n\n  _proto.createAnalyticsGroup = function createAnalyticsGroup(analyticsElement) {\n    var root = this.findRoot_(analyticsElement);\n    return new _analyticsGroup.AnalyticsGroup(root, analyticsElement);\n  }\n  /**\n   * @param {string} trackerName\n   * @private\n   */\n  ;\n\n  _proto.getTrackerClass_ = function getTrackerClass_(trackerName) {\n    switch (trackerName) {\n      case _events.AnalyticsEventType.STORY:\n        return _events.AmpStoryEventTracker;\n\n      default:\n        return _events.CustomEventTracker;\n    }\n  }\n  /**\n   * Triggers the analytics event with the specified type.\n   *\n   * @param {!Element} target\n   * @param {string} eventType\n   * @param {!JsonObject=} opt_vars A map of vars and their values.\n   */\n  ;\n\n  _proto.triggerEventForTarget = function triggerEventForTarget(target, eventType, opt_vars) {\n    var event = new _events.AnalyticsEvent(target, eventType, opt_vars);\n    var root = this.findRoot_(target);\n    var trackerName = (0, _events.getTrackerKeyName)(eventType);\n    var tracker =\n    /** @type {!CustomEventTracker|!AmpStoryEventTracker} */\n    root.getTracker(trackerName, this.getTrackerClass_(trackerName));\n    tracker.trigger(event);\n  }\n  /**\n   * @param {!Node} context\n   * @return {!./analytics-root.AnalyticsRoot}\n   */\n  ;\n\n  _proto.findRoot_ = function findRoot_(context) {\n    // TODO(#22733): cleanup when ampdoc-fie is launched. Just use\n    // `ampdoc.getParent()`.\n    var ampdoc = _services.Services.ampdoc(context);\n\n    var frame = (0, _service.getParentWindowFrameElement)(context);\n    var embed = frame && (0, _iframeHelper.getFriendlyIframeEmbedOptional)(frame);\n\n    if (ampdoc == this.ampdoc && !embed && this.root_) {\n      // Main root already exists.\n      return this.root_;\n    }\n\n    return this.getOrCreateRoot_(embed || ampdoc, function () {\n      if (embed) {\n        return new _analyticsRoot.EmbedAnalyticsRoot(ampdoc, embed);\n      }\n\n      return new _analyticsRoot.AmpdocAnalyticsRoot(ampdoc);\n    });\n  }\n  /**\n   * @param {!Object} holder\n   * @param {function():!./analytics-root.AnalyticsRoot} factory\n   * @return {!./analytics-root.AnalyticsRoot}\n   */\n  ;\n\n  _proto.getOrCreateRoot_ = function getOrCreateRoot_(holder, factory) {\n    var root =\n    /** @type {?./analytics-root.AnalyticsRoot} */\n    holder[PROP];\n\n    if (!root) {\n      root = factory();\n      holder[PROP] = root;\n    }\n\n    return root;\n  };\n\n  return InstrumentationService;\n}();\n/**\n * It's important to resolve instrumentation asynchronously in elements that\n * depends on it in multi-doc scope. Otherwise an element life-cycle could\n * resolve way before we have the service available.\n *\n * @param {!Element|!../../../src/service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!Promise<InstrumentationService>}\n */\n\n\nexports.InstrumentationService = InstrumentationService;\n\nfunction instrumentationServicePromiseForDoc(elementOrAmpDoc) {\n  return (\n    /** @type {!Promise<InstrumentationService>} */\n    (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'amp-analytics-instrumentation')\n  );\n}\n/**\n * @param {!Element|!../../../src/service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!InstrumentationService}\n */\n\n\nfunction instrumentationServiceForDocForTesting(elementOrAmpDoc) {\n  (0, _service.registerServiceBuilderForDoc)(elementOrAmpDoc, 'amp-analytics-instrumentation', InstrumentationService);\n  return (0, _service.getServiceForDoc)(elementOrAmpDoc, 'amp-analytics-instrumentation');\n}\n\n},{\"../../../src/iframe-helper\":116,\"../../../src/service\":131,\"../../../src/services\":141,\"./analytics-group\":3,\"./analytics-root\":4,\"./events\":9}],14:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.areFriendlyDomains = areFriendlyDomains;\nexports.isWildCardMatch = isWildCardMatch;\nexports.LinkerManager = void 0;\n\nvar _variables = require(\"./variables\");\n\nvar _navigation = require(\"../../../src/service/navigation\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _windowInterface = require(\"../../../src/window-interface\");\n\nvar _url = require(\"../../../src/url\");\n\nvar _dom = require(\"../../../src/dom\");\n\nvar _linker = require(\"./linker\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _cookies = require(\"../../../src/cookies\");\n\nvar _types = require(\"../../../src/types\");\n\nvar _log = require(\"../../../src/log\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nvar TAG = 'amp-analytics/linker-manager';\n/** @const {string} */\n\nvar LINKER_CREATED = 'i-amphtml-linker-created';\n\nvar LinkerManager =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {!JsonObject} config\n   * @param {?string} type\n   * @param {!Element} element\n   */\n  function LinkerManager(ampdoc, config, type, element) {\n    /** @const @private {!../../../src/service/ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n    /** @private {?JsonObject|undefined} */\n\n    this.config_ = config['linkers'];\n    /** @const @private {!JsonObject} */\n\n    this.vars_ = config['vars'] || {};\n    /** @const @private {?string} */\n\n    this.type_ = type;\n    /** @const @private {!Element} */\n\n    this.element_ = element;\n    /** @private {!Array<Promise>} */\n\n    this.allLinkerPromises_ = [];\n    /** @const @private {!JsonObject} */\n\n    this.resolvedIds_ = (0, _object.dict)();\n    /** @const @private {!../../../src/service/url-impl.Url} */\n\n    this.urlService_ = _services.Services.urlForDoc(this.element_);\n    /** @const @private {!Promise<../../amp-form/0.1/form-submit-service.FormSubmitService>} */\n\n    this.formSubmitService_ = _services.Services.formSubmitForDoc(ampdoc);\n    /** @private {?UnlistenDef} */\n\n    this.formSubmitUnlistener_ = null;\n    /** @const @private {!./variables.VariableService} */\n\n    this.variableService_ = (0, _variables.variableServiceForDoc)(this.ampdoc_);\n    /** @private {?string} */\n\n    this.highestAvailableDomain_ = null;\n  }\n  /**\n   * Start resolving any macros that may exist in the linker configuration\n   * and register the callback with the navigation service. Since macro\n   * resolution is asynchronous the callback may be looking for these values\n   * before they are ready.\n   * @return {*} TODO(#23582): Specify return type\n   */\n\n\n  var _proto = LinkerManager.prototype;\n\n  _proto.init = function init() {\n    var _this = this;\n\n    if (!(0, _types.isObject)(this.config_)) {\n      return;\n    }\n\n    this.highestAvailableDomain_ = (0, _cookies.getHighestAvailableDomain)(this.ampdoc_.win);\n    this.config_ = this.processConfig_(\n    /** @type {!JsonObject} */\n    this.config_); // Each linker config has it's own set of macros to resolve.\n\n    this.allLinkerPromises_ = Object.keys(this.config_).map(function (name) {\n      var ids = _this.config_[name]['ids']; // Keys for linker data.\n\n      var keys = Object.keys(ids); // Expand the value of each key value pair (if necessary).\n\n      var valuePromises = keys.map(function (key) {\n        var expansionOptions = new _variables.ExpansionOptions(_this.vars_,\n        /* opt_iterations */\n        undefined,\n        /* opt_noencode */\n        true);\n        return _this.expandTemplateWithUrlParams_(ids[key], expansionOptions);\n      });\n      return Promise.all(valuePromises).then(function (values) {\n        // Rejoin each key with its expanded value.\n        var expandedIds = {};\n        values.forEach(function (value, i) {\n          // Omit pair if value resolves to empty.\n          if (value) {\n            expandedIds[keys[i]] = value;\n          }\n        });\n        _this.resolvedIds_[name] = expandedIds;\n        return expandedIds;\n      });\n    });\n\n    if (this.allLinkerPromises_.length) {\n      var navigation = _services.Services.navigationForDoc(this.ampdoc_);\n\n      navigation.registerAnchorMutator(function (element, event) {\n        if (!element.href || event.type !== 'click') {\n          return;\n        }\n\n        element.href = _this.applyLinkers_(element.href);\n      }, _navigation.Priority.ANALYTICS_LINKER);\n      navigation.registerNavigateToMutator(function (url) {\n        return _this.applyLinkers_(url);\n      }, _navigation.Priority.ANALYTICS_LINKER);\n    }\n\n    this.enableFormSupport_();\n    return Promise.all(this.allLinkerPromises_);\n  }\n  /**\n   * Remove any listeners created to manage form submission.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.formSubmitUnlistener_) {\n      this.formSubmitUnlistener_();\n    }\n  }\n  /**\n   * @param {!JsonObject} config\n   * @return {!JsonObject}\n   * @private\n   */\n  ;\n\n  _proto.processConfig_ = function processConfig_(config) {\n    var processedConfig = (0, _object.dict)();\n    var defaultConfig = {\n      enabled: this.isLegacyOptIn_() && this.isSafari12OrAbove_()\n    };\n    var linkerNames = Object.keys(config).filter(function (key) {\n      var value = config[key];\n      var isLinkerConfig = (0, _types.isObject)(value);\n\n      if (!isLinkerConfig) {\n        defaultConfig[key] = value;\n      }\n\n      return isLinkerConfig;\n    });\n\n    var location = _windowInterface.WindowInterface.getLocation(this.ampdoc_.win);\n\n    var isProxyOrigin = this.urlService_.isProxyOrigin(location);\n    linkerNames.forEach(function (name) {\n      var mergedConfig = Object.assign({}, defaultConfig, config[name]);\n\n      if (mergedConfig['enabled'] !== true) {\n        (0, _log.user)().info(TAG, 'linker config for %s is not enabled and will be ignored.', name);\n        return;\n      }\n\n      if (!isProxyOrigin && mergedConfig['proxyOnly'] !== false) {\n        return;\n      }\n\n      if (!mergedConfig['ids']) {\n        (0, _log.user)().error(TAG, '\"ids\" is a required field for use of \"linkers\".');\n        return;\n      }\n\n      processedConfig[name] = mergedConfig;\n    });\n    return processedConfig;\n  }\n  /**\n   * Expands spec using provided expansion options and applies url replacement\n   * if necessary.\n   * @param {string} template Expression that needs to be expanded.\n   * @param {!ExpansionOptions} expansionOptions Expansion options.\n   * @return {!Promise<string>} expanded template.\n   */\n  ;\n\n  _proto.expandTemplateWithUrlParams_ = function expandTemplateWithUrlParams_(template, expansionOptions) {\n    var _this2 = this;\n\n    var bindings = this.variableService_.getMacros(this.element_);\n    return this.variableService_.expandTemplate(template, expansionOptions).then(function (expanded) {\n      var urlReplacements = _services.Services.urlReplacementsForDoc(_this2.element_);\n\n      return urlReplacements.expandUrlAsync(expanded, bindings);\n    });\n  }\n  /**\n   * If the document has existing cid meta tag they do not need to explicity\n   * opt-in to use linker.\n   * @return {boolean}\n   * @private\n   */\n  ;\n\n  _proto.isLegacyOptIn_ = function isLegacyOptIn_() {\n    var optInMeta = this.ampdoc_.win.document.head.\n    /*OK*/\n    querySelector('meta[name=\"amp-google-client-id-api\"][content=\"googleanalytics\"]');\n\n    if (!optInMeta || optInMeta.hasAttribute(LINKER_CREATED) || this.type_ !== 'googleanalytics') {\n      return false;\n    }\n\n    optInMeta.setAttribute(LINKER_CREATED, '');\n    return true;\n  }\n  /**\n   * If the browser is Safari 12 or above.\n   * @return {boolean}\n   * @private\n   */\n  ;\n\n  _proto.isSafari12OrAbove_ = function isSafari12OrAbove_() {\n    var platform = _services.Services.platformFor(this.ampdoc_.win);\n\n    return platform.isSafari() && platform.getMajorVersion() >= 12;\n  }\n  /**\n   * Apply linkers to the given url. Linker params are appended if there\n   * are matching linker configs.\n   *\n   * @param {string} url\n   * @return {string}\n   * @private\n   */\n  ;\n\n  _proto.applyLinkers_ = function applyLinkers_(url) {\n    var linkerConfigs = this.config_;\n\n    for (var linkerName in linkerConfigs) {\n      // The linker param is created asynchronously. This callback should be\n      // synchronous, so we skip if value is not there yet.\n      if (this.resolvedIds_[linkerName]) {\n        url = this.maybeAppendLinker_(url, linkerName, linkerConfigs[linkerName]);\n      }\n    }\n\n    return url;\n  }\n  /**\n   * Appends the linker param if the given url falls within rules defined in\n   * linker configuration.\n   * @param {string} url\n   * @param {string} name\n   * @param {!Object} config\n   * @return {string}\n   * @private\n   */\n  ;\n\n  _proto.maybeAppendLinker_ = function maybeAppendLinker_(url, name, config) {\n    var\n    /** @type {Array} */\n    domains = config['destinationDomains'];\n\n    if (this.isDomainMatch_(url, name, domains)) {\n      var linkerValue = (0, _linker.createLinker)(\n      /* version */\n      '1', this.resolvedIds_[name]);\n\n      if (linkerValue) {\n        var params = (0, _object.dict)();\n        params[name] = linkerValue;\n        return (0, _url.addMissingParamsToUrl)(url, params);\n      }\n    }\n\n    return url;\n  }\n  /**\n   * Check to see if the url is a match for the given set of domains.\n   * @param {string} url\n   * @param {string} name Name given in linker config.\n   * @param {?Array} domains\n   * @return {*} TODO(#23582): Specify return type\n   */\n  ;\n\n  _proto.isDomainMatch_ = function isDomainMatch_(url, name, domains) {\n    var _this$urlService_$par = this.urlService_.parse(url),\n        hostname = _this$urlService_$par.hostname; // If given domains, but not in the right format.\n\n\n    if (domains && !Array.isArray(domains)) {\n      (0, _log.user)().warn(TAG, '%s destinationDomains must be an array.', name);\n      return false;\n    } // If destinationDomain is specified specifically, respect it.\n\n\n    if (domains) {\n      return this.destinationDomainsMatch_(domains, hostname);\n    } // Fallback to default behavior\n    // Don't append linker for exact domain match, relative urls, or\n    // fragments.\n\n\n    var winHostname = _windowInterface.WindowInterface.getHostname(this.ampdoc_.win);\n\n    if (winHostname === hostname) {\n      return false;\n    }\n\n    var _Services$documentInf = _services.Services.documentInfoForDoc(this.ampdoc_),\n        sourceUrl = _Services$documentInf.sourceUrl,\n        canonicalUrl = _Services$documentInf.canonicalUrl;\n\n    var canonicalOrigin = this.urlService_.parse(canonicalUrl).hostname;\n    var isFriendlyCanonicalOrigin = areFriendlyDomains(canonicalOrigin, hostname); // Default to all subdomains matching (if there's one) plus canonicalOrigin\n\n    if (this.highestAvailableDomain_) {\n      var destinationDomain = [this.highestAvailableDomain_, '*' + this.highestAvailableDomain_];\n      return this.destinationDomainsMatch_(destinationDomain, hostname) || isFriendlyCanonicalOrigin;\n    } // In the case where highestAvailableDomain cannot be found.\n    // (proxyOrigin, no <meta name='amp-cookie-scope'> found)\n    // default to friendly domain matching.\n\n\n    var sourceOrigin = this.urlService_.parse(sourceUrl).hostname;\n    return areFriendlyDomains(sourceOrigin, hostname) || isFriendlyCanonicalOrigin;\n  }\n  /**\n   * Helper method to find out if hostname match the destinationDomain array.\n   * @param {Array<string>} domains\n   * @param {string} hostname\n   * @return {boolean}\n   */\n  ;\n\n  _proto.destinationDomainsMatch_ = function destinationDomainsMatch_(domains, hostname) {\n    for (var i = 0; i < domains.length; i++) {\n      var domain = domains[i]; // Exact match.\n\n      if (domain === hostname) {\n        return true;\n      } // Allow wildcard subdomain matching.\n\n\n      if (domain.indexOf('*') !== -1 && isWildCardMatch(hostname, domain)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Register callback that will handle form sumbits.\n   */\n  ;\n\n  _proto.enableFormSupport_ = function enableFormSupport_() {\n    var _this3 = this;\n\n    if (this.formSubmitUnlistener_) {\n      return;\n    }\n\n    this.formSubmitService_.then(function (formService) {\n      _this3.formSubmitUnlistener_ = formService.beforeSubmit(_this3.handleFormSubmit_.bind(_this3));\n    });\n  }\n  /**\n   * Check to see if any linker configs match this form's url, if so, send\n   * along the resolved linker value\n   * @param {!../../amp-form/0.1/form-submit-service.FormSubmitEventDef} event\n   */\n  ;\n\n  _proto.handleFormSubmit_ = function handleFormSubmit_(event) {\n    var form = event.form,\n        actionXhrMutator = event.actionXhrMutator;\n\n    for (var linkerName in this.config_) {\n      var config = this.config_[linkerName];\n      var\n      /** @type {Array} */\n      domains = config['destinationDomains'];\n      var url = form.getAttribute('action-xhr') || form.getAttribute('action');\n\n      if (this.isDomainMatch_(url, linkerName, domains)) {\n        this.addDataToForm_(form, actionXhrMutator, linkerName);\n      }\n    }\n  }\n  /**\n   * Add the linker data to form. If action-xhr is present we can update the\n   * action-xhr, if not we fallback to adding hidden inputs.\n   * @param {!Element} form\n   * @param {function(string)} actionXhrMutator\n   * @param {string} linkerName\n   * @return {*} TODO(#23582): Specify return type\n   */\n  ;\n\n  _proto.addDataToForm_ = function addDataToForm_(form, actionXhrMutator, linkerName) {\n    var ids = this.resolvedIds_[linkerName];\n\n    if (!ids) {\n      // Form was clicked before macros resolved.\n      return;\n    }\n\n    var linkerValue = (0, _linker.createLinker)(\n    /* version */\n    '1', ids); // Runtime controls submits with `action-xhr`, so we can append the linker\n    // param\n\n    var actionXhrUrl = form.getAttribute('action-xhr');\n\n    if (actionXhrUrl) {\n      var decoratedUrl = (0, _url.addParamToUrl)(actionXhrUrl, linkerName, linkerValue);\n      return actionXhrMutator(decoratedUrl);\n    } // If we are not using `action-xhr` it must be a GET request using the\n    // standard action attribute. Browsers will not let you change this in the\n    // middle of a submit, so we add the input hidden attributes.\n\n\n    this.addHiddenInputs_(form, linkerName, linkerValue);\n  }\n  /**\n   * Add the linker pairs as <input> elements to form.\n   * @param {!Element} form\n   * @param {string} linkerName\n   * @param {string} linkerValue\n   */\n  ;\n\n  _proto.addHiddenInputs_ = function addHiddenInputs_(form, linkerName, linkerValue) {\n    var attrs = (0, _object.dict)({\n      'type': 'hidden',\n      'name': linkerName,\n      'value': linkerValue\n    });\n    var inputEl = (0, _dom.createElementWithAttributes)(\n    /** @type {!Document} */\n    form.ownerDocument, 'input', attrs);\n    form.appendChild(inputEl);\n  };\n\n  return LinkerManager;\n}();\n/**\n * Domains are considered to be friends if they are identical\n * after removing these prefixes: m. www. amp.\n * URL scheme & port are not taken into consideration.\n *\n * Note that this algorithm will break corner cases like\n *   www.com vs amp.com vs m.com\n * Or\n *   amp.wordpress.com vs www.wordpress.com\n *\n * @param {string} domain1\n * @param {string} domain2\n * @return {boolean}\n * @visibleForTesting\n */\n\n\nexports.LinkerManager = LinkerManager;\n\nfunction areFriendlyDomains(domain1, domain2) {\n  return getBaseDomain(domain1) === getBaseDomain(domain2);\n}\n/**\n * Strips out all prefixing m. www. amp. from a domain name.\n * @param {string} domain\n * @return {string}\n */\n\n\nfunction getBaseDomain(domain) {\n  return domain.replace(/^(?:www\\.|m\\.|amp\\.)+/, '');\n}\n/**\n * Escape any regex flags other than `*`\n * @param {string} str\n * @return {*} TODO(#23582): Specify return type\n */\n\n\nfunction regexEscape(str) {\n  return str.replace(/[-\\/\\\\^$+?.()|[\\]{}]/g, '\\\\$&');\n}\n/**\n * Allows specified wildcard matching of domains.\n * Example:\n *    `*.foo.com` matches `amp.foo.com`\n *    `*.foo.com*` matches `amp.foo.com.uk`\n * @param {string} hostname\n * @param {string} domain\n * @return {boolean}\n * @visibleForTesting\n */\n\n\nfunction isWildCardMatch(hostname, domain) {\n  var escaped = regexEscape(domain);\n  var regex = escaped.replace(/\\*/g, '.*');\n  return new RegExp('^' + regex + '$').test(hostname);\n}\n\n},{\"../../../src/cookies\":109,\"../../../src/dom\":111,\"../../../src/log\":125,\"../../../src/service/navigation\":138,\"../../../src/services\":141,\"../../../src/types\":145,\"../../../src/url\":148,\"../../../src/utils/object\":154,\"../../../src/window-interface\":158,\"./linker\":16,\"./variables\":24}],15:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.installLinkerReaderService = installLinkerReaderService;\nexports.linkerReaderServiceFor = linkerReaderServiceFor;\nexports.LinkerReader = void 0;\n\nvar _service = require(\"../../../src/service\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _linker = require(\"./linker\");\n\nvar _url = require(\"../../../src/url\");\n\nvar _log = require(\"../../../src/log\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TAG = 'amp-analytics/linker-reader';\n\nvar LinkerReader =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Window} win\n   */\n  function LinkerReader(win) {\n    /** @private {!Window} */\n    this.win_ = win;\n    /** @private {!Object<string, ?Object<string, string>>} */\n\n    this.linkerParams_ = {};\n  }\n  /**\n   * Get the LINKER_PARAM(name, id) value from url and clean the value\n   * @param {string} name\n   * @param {string} id\n   * @return {?string}\n   */\n\n\n  var _proto = LinkerReader.prototype;\n\n  _proto.get = function get(name, id) {\n    if (!name || !id) {\n      (0, _log.user)().error(TAG, 'LINKER_PARAM requires two params, name and id');\n      return null;\n    }\n\n    if (!(0, _object.hasOwn)(this.linkerParams_, name)) {\n      this.linkerParams_[name] = this.parseAndCleanQueryString_(name);\n    }\n\n    if (this.linkerParams_[name] && this.linkerParams_[name][id]) {\n      return this.linkerParams_[name][id];\n    }\n\n    return null;\n  }\n  /**\n   * Parse the url get the key value pair for the linker name\n   * and remove the LINKER_PARAM from window location\n   * @param {string} name\n   * @return {?Object<string, string>}\n   */\n  ;\n\n  _proto.parseAndCleanQueryString_ = function parseAndCleanQueryString_(name) {\n    var parsedUrl = (0, _url.parseUrlDeprecated)(this.win_.location.href);\n    var params = (0, _url.parseQueryString)(parsedUrl.search);\n\n    if (!(0, _object.hasOwn)(params, name)) {\n      // Linker param not found.\n      return null;\n    }\n\n    var value = params[name];\n    this.removeLinkerParam_(parsedUrl, name);\n    return (0, _linker.parseLinker)(value);\n  }\n  /**\n   * Remove the linker param from the current url\n   * @param {!Location} url\n   * @param {string} name\n   */\n  ;\n\n  _proto.removeLinkerParam_ = function removeLinkerParam_(url, name) {\n    if (!this.win_.history.replaceState) {\n      // Can't replace state. Ignore\n      return;\n    }\n\n    var searchUrl = url.search;\n    var removedLinkerParamSearchUrl = (0, _url.removeParamsFromSearch)(searchUrl, name);\n    var newHref = url.origin + url.pathname + removedLinkerParamSearchUrl + (url.hash || '');\n    this.win_.history.replaceState(null, '', newHref);\n  };\n\n  return LinkerReader;\n}();\n/**\n * @param {!Window} win\n */\n\n\nexports.LinkerReader = LinkerReader;\n\nfunction installLinkerReaderService(win) {\n  (0, _service.registerServiceBuilder)(win, 'amp-analytics-linker-reader', LinkerReader);\n}\n/**\n * @param {!Window} win\n * @return {!LinkerReader}\n */\n\n\nfunction linkerReaderServiceFor(win) {\n  return (0, _service.getService)(win, 'amp-analytics-linker-reader');\n}\n\n},{\"../../../src/log\":125,\"../../../src/service\":131,\"../../../src/url\":148,\"../../../src/utils/object\":154,\"./linker\":16}],16:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.createLinker = createLinker;\nexports.parseLinker = parseLinker;\n\nvar _windowInterface = require(\"../../../src/window-interface\");\n\nvar _base = require(\"../../../src/utils/base64\");\n\nvar _crc = require(\"./crc32\");\n\nvar _log = require(\"../../../src/log\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nvar DELIMITER = '*';\nvar KEY_VALIDATOR = /^[a-zA-Z0-9\\-_.]+$/;\nvar CHECKSUM_OFFSET_MAX_MIN = 1;\nvar VALID_VERSION = 1;\nvar TAG = 'amp-analytics/linker';\n/**\n * Creates the linker string, in the format of\n * <version>*<checksum>*<serializedIds>\n *\n * where\n *   checksum: base36(CRC32(<fingerprint>*<minuteSinceEpoch>*<serializedIds>))\n *   serializedIds: <id1>*<idValue1>*<id2>*<idValue2>...\n *                  values are base64 encoded\n *   fingerprint: <userAgent>*<timezoneOffset>*<userLanguage>\n *\n * @param {string} version\n * @param {!Object} ids\n * @return {string}\n */\n\nfunction createLinker(version, ids) {\n  var serializedIds = serialize(ids);\n\n  if (serializedIds === '') {\n    return '';\n  }\n\n  var checksum = getCheckSum(serializedIds);\n  return [version, checksum, serializedIds].join(DELIMITER);\n}\n/**\n * Return the key value pairs\n * @param {string} value\n * @return {?Object<string, string>}\n */\n\n\nfunction parseLinker(value) {\n  var linkerObj = parseLinkerParamValue(value);\n\n  if (!linkerObj) {\n    return null;\n  }\n\n  var checksum = linkerObj.checksum,\n      serializedIds = linkerObj.serializedIds;\n\n  if (!isCheckSumValid(serializedIds, checksum)) {\n    (0, _log.user)().error(TAG, 'LINKER_PARAM value checksum not valid');\n    return null;\n  }\n\n  return deserialize(serializedIds);\n}\n/**\n * Parse the linker param value to version checksum and serializedParams\n * @param {string} value\n * @return {?Object}\n */\n\n\nfunction parseLinkerParamValue(value) {\n  var parts = value.split(DELIMITER);\n  var isEven = parts.length % 2 == 0;\n\n  if (parts.length < 4 || !isEven) {\n    // Format <version>*<checksum>*<key1>*<value1>\n    // Note: linker makes sure there's at least one pair of non empty key value\n    // Make sure there is at least three delimiters.\n    (0, _log.user)().error(TAG, \"Invalid linker_param value \" + value);\n    return null;\n  }\n\n  var version = Number(parts.shift());\n\n  if (version !== VALID_VERSION) {\n    (0, _log.user)().error(TAG, \"Invalid version number \" + version);\n    return null;\n  }\n\n  var checksum = parts.shift();\n  var serializedIds = parts.join(DELIMITER);\n  return {\n    checksum: checksum,\n    serializedIds: serializedIds\n  };\n}\n/**\n * Check if the checksum is valid with time offset tolerance.\n * @param {string} serializedIds\n * @param {string} checksum\n * @return {boolean}\n */\n\n\nfunction isCheckSumValid(serializedIds, checksum) {\n  for (var i = 0; i <= CHECKSUM_OFFSET_MAX_MIN; i++) {\n    var calculateCheckSum = getCheckSum(serializedIds, i);\n\n    if (calculateCheckSum == checksum) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Create a unique checksum hashing the fingerprint and a few other values.\n * @param {string} serializedIds\n * @param {number=} opt_offsetMin\n * @return {string}\n */\n\n\nfunction getCheckSum(serializedIds, opt_offsetMin) {\n  var fingerprint = getFingerprint();\n  var offset = opt_offsetMin || 0;\n  var timestamp = getMinSinceEpoch() - offset;\n  var crc = (0, _crc.crc32)([fingerprint, timestamp, serializedIds].join(DELIMITER)); // Encoded to base36 for less bytes.\n\n  return crc.toString(36);\n}\n/**\n * Generates a semi-unique value for page visitor.\n * @return {string}\n */\n\n\nfunction getFingerprint() {\n  var date = new Date();\n  var timezone = date.getTimezoneOffset();\n\n  var language = _windowInterface.WindowInterface.getUserLanguage(window);\n\n  return [_windowInterface.WindowInterface.getUserAgent(window), timezone, language].join(DELIMITER);\n}\n/**\n * Encode all values & join them together\n * @param {!Object} pairs\n * @return {string}\n */\n\n\nfunction serialize(pairs) {\n  if (!pairs) {\n    return '';\n  }\n\n  return Object.keys(pairs).filter(function (key) {\n    var valid = KEY_VALIDATOR.test(key);\n\n    if (!valid) {\n      (0, _log.user)().error(TAG, 'Invalid linker key: ' + key);\n    }\n\n    return valid;\n  }).map(function (key) {\n    return key + DELIMITER + encode(pairs[key]);\n  }).join(DELIMITER);\n}\n/**\n * Deserialize the serializedIds and return keyValue pairs.\n * @param {string} serializedIds\n * @return {!Object<string, string>}\n */\n\n\nfunction deserialize(serializedIds) {\n  var keyValuePairs = {};\n  var params = serializedIds.split(DELIMITER);\n\n  for (var i = 0; i < params.length; i += 2) {\n    var key = params[i];\n    var valid = KEY_VALIDATOR.test(key);\n\n    if (!valid) {\n      (0, _log.user)().error(TAG, \"Invalid linker key \" + key + \", value ignored\");\n      continue;\n    }\n\n    var value = decode(params[i + 1]);\n    keyValuePairs[key] = value;\n  }\n\n  return keyValuePairs;\n}\n/**\n * Rounded time used to check if t2 - t1 is within our time tolerance.\n * @return {number}\n */\n\n\nfunction getMinSinceEpoch() {\n  // Timestamp in minutes, floored.\n  return Math.floor(Date.now() / 60000);\n}\n/**\n * Function that encodesURIComponent but also tilde, since we are using it as\n * our delimiter.\n * @param {string} value\n * @return {*} TODO(#23582): Specify return type\n */\n\n\nfunction encode(value) {\n  return (0, _base.base64UrlEncodeFromString)(String(value));\n}\n/**\n * @param {string} value\n * @return {string}\n */\n\n\nfunction decode(value) {\n  return (0, _base.base64UrlDecodeFromString)(String(value));\n}\n\n},{\"../../../src/log\":125,\"../../../src/utils/base64\":150,\"../../../src/window-interface\":158,\"./crc32\":8}],17:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getMinOpacity = getMinOpacity;\n\nvar _style = require(\"../../../src/style\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n *  Returns the min opacity found amongst the element and its ancestors\n *  @param {!Element|null} el\n *  @return {number} minimum opacity value\n */\nfunction getMinOpacity(el) {\n  var parentNodeTree = getElementNodeTree(el.parentElement);\n  parentNodeTree.push(el);\n  var minOpacityFound = 1;\n  var opacity;\n\n  for (var i = 0; i < parentNodeTree.length; i++) {\n    var node = parentNodeTree[i];\n    opacity = getElementOpacity(node);\n\n    if (opacity < minOpacityFound) {\n      minOpacityFound = opacity;\n    }\n\n    if (minOpacityFound === 0) {\n      return minOpacityFound;\n    }\n  }\n\n  return minOpacityFound;\n}\n/**\n * Returns the Opacity value of the element.\n * @param {!Element} el\n * @return {number}\n */\n\n\nfunction getElementOpacity(el) {\n  var win = window;\n  var fullyVisibleValue = 1;\n  var fullyHiddenValue = 0;\n\n  if (!el) {\n    return fullyVisibleValue;\n  }\n\n  var _computedStyle = (0, _style.computedStyle)(win, el),\n      visibility = _computedStyle.visibility,\n      opacity = _computedStyle.opacity;\n\n  if (visibility === 'hidden') {\n    return fullyHiddenValue;\n  }\n\n  var opacityValue = opacity === '' ? fullyVisibleValue : parseFloat(opacity);\n\n  if (isNaN(opacityValue)) {\n    return fullyVisibleValue;\n  }\n\n  return opacityValue;\n}\n/**\n * Returns the node tree of the current element starting from\n * the document root\n * @param {!Element|null} el\n * @return {Array} node list of the element's node tree\n */\n\n\nfunction getElementNodeTree(el) {\n  var nodeList = [];\n\n  if (!el) {\n    return nodeList;\n  }\n\n  var CAP = 50;\n  var DOCUMENT_NODE_TYPE = 9;\n  var ELEMENT_WITH_PARENT_TYPE = 1;\n  var parent;\n  var element = el;\n  nodeList.push(element);\n\n  for (var i = 0; i < CAP; i++) {\n    parent = element.parentNode || element.parentElement;\n\n    if (parent && parent.nodeType == ELEMENT_WITH_PARENT_TYPE) {\n      element = parent;\n      nodeList.push(element);\n    } else if (parent && parent.nodeType == DOCUMENT_NODE_TYPE) {\n      parent = element.ownerDocument.defaultView.frameElement;\n\n      if (parent && parent.nodeType == ELEMENT_WITH_PARENT_TYPE) {\n        element = parent;\n        nodeList.push(element);\n      } else {\n        break;\n      }\n    } else {\n      break;\n    }\n  }\n\n  return nodeList;\n}\n\n},{\"../../../src/style\":144}],18:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.expandPostMessage = expandPostMessage;\nexports.RequestHandler = void 0;\n\nvar _events = require(\"./events\");\n\nvar _transportSerializer = require(\"./transport-serializer\");\n\nvar _variables = require(\"./variables\");\n\nvar _sandboxVarsWhitelist = require(\"./sandbox-vars-whitelist\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _resourceTiming = require(\"./resource-timing\");\n\nvar _types = require(\"../../../src/types\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar BATCH_INTERVAL_MIN = 200;\n\nvar RequestHandler =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Element} element\n   * @param {!JsonObject} request\n   * @param {!../../../src/preconnect.Preconnect} preconnect\n   * @param {./transport.Transport} transport\n   * @param {boolean} isSandbox\n   */\n  function RequestHandler(element, request, preconnect, transport, isSandbox) {\n    /** @const {!Element} */\n    this.element_ = element;\n    /** @const {!../../../src/service/ampdoc-impl.AmpDoc} */\n\n    this.ampdoc_ = element.getAmpDoc();\n    /** @const {!Window} */\n\n    this.win = this.ampdoc_.win;\n    /** @const {string} !if specified, all requests are prepended with this */\n\n    this.requestOrigin_ = request['origin'];\n    /** @const {string} */\n\n    this.baseUrl = (0, _log.devAssert)(request['baseUrl']);\n    /** @private {Array<number>|number|undefined} */\n\n    this.batchInterval_ = request['batchInterval']; //unit is sec\n\n    /** @private {?number} */\n\n    this.reportWindow_ = Number(request['reportWindow']) || null; // unit is sec\n\n    /** @private {?number} */\n\n    this.batchIntervalPointer_ = null;\n    /** @private {!./variables.VariableService} */\n\n    this.variableService_ = (0, _variables.variableServiceForDoc)(element);\n    /** @private {!../../../src/service/url-replacements-impl.UrlReplacements} */\n\n    this.urlReplacementService_ = _services.Services.urlReplacementsForDoc(element);\n    /** @private {!../../../src/service/url-impl.Url} */\n\n    this.urlService_ = _services.Services.urlForDoc(element);\n    /** @private {?Promise<string>} */\n\n    this.baseUrlPromise_ = null;\n    /** @private {?Promise<string>} */\n\n    this.baseUrlTemplatePromise_ = null;\n    /** @private {?Promise<string>} */\n\n    this.requestOriginPromise_ = null;\n    /** @private {!Array<!Promise<!BatchSegmentDef>>} */\n\n    this.batchSegmentPromises_ = [];\n    /** @private {!../../../src/preconnect.Preconnect} */\n\n    this.preconnect_ = preconnect;\n    /** @private {./transport.Transport} */\n\n    this.transport_ = transport;\n    /** @const @private {!Object|undefined} */\n\n    this.whiteList_ = isSandbox ? _sandboxVarsWhitelist.SANDBOX_AVAILABLE_VARS : undefined;\n    /** @private {?number} */\n\n    this.batchIntervalTimeoutId_ = null;\n    /** @private {?number} */\n\n    this.reportWindowTimeoutId_ = null;\n    /** @private {boolean} */\n\n    this.reportRequest_ = true;\n    /** @private {?JsonObject} */\n\n    this.lastTrigger_ = null;\n    /** @private {number} */\n\n    this.queueSize_ = 0;\n    /** @private @const {number} */\n\n    this.startTime_ = Date.now();\n    this.initReportWindow_();\n    this.initBatchInterval_();\n  }\n  /**\n   * Exposed method to send a request on event.\n   * Real ping may be batched and send out later.\n   * @param {?JsonObject} configParams\n   * @param {!JsonObject} trigger\n   * @param {!./variables.ExpansionOptions} expansionOption\n   */\n\n\n  var _proto = RequestHandler.prototype;\n\n  _proto.send = function send(configParams, trigger, expansionOption) {\n    var _this = this;\n\n    var isImportant = trigger['important'] === true;\n\n    if (!this.reportRequest_ && !isImportant) {\n      // Ignore non important trigger out reportWindow\n      return;\n    }\n\n    this.queueSize_++;\n    this.lastTrigger_ = trigger;\n    var bindings = this.variableService_.getMacros(this.element_);\n    bindings['RESOURCE_TIMING'] = (0, _resourceTiming.getResourceTiming)(this.ampdoc_, trigger['resourceTimingSpec'], this.startTime_);\n\n    if (!this.baseUrlPromise_) {\n      expansionOption.freezeVar('extraUrlParams');\n      this.baseUrlTemplatePromise_ = this.variableService_.expandTemplate(this.baseUrl, expansionOption);\n      this.baseUrlPromise_ = this.baseUrlTemplatePromise_.then(function (baseUrl) {\n        return _this.urlReplacementService_.expandUrlAsync(baseUrl, bindings, _this.whiteList_);\n      });\n    } // expand requestOrigin if it is declared\n\n\n    if (!this.requestOriginPromise_ && this.requestOrigin_) {\n      // do not encode vars in request origin\n      var requestOriginExpansionOpt = new _variables.ExpansionOptions(expansionOption.vars, expansionOption.iterations, true // opt_noEncode\n      );\n      this.requestOriginPromise_ = this.variableService_ // expand variables in request origin\n      .expandTemplate(this.requestOrigin_, requestOriginExpansionOpt) // substitute in URL values e.g. DOCUMENT_REFERRER -> https://example.com\n      .then(function (expandedRequestOrigin) {\n        return _this.urlReplacementService_.expandUrlAsync(expandedRequestOrigin, bindings, _this.whiteList_, true // opt_noEncode\n        );\n      });\n    }\n\n    var params = Object.assign({}, configParams, trigger['extraUrlParams']);\n    var timestamp = this.win.Date.now();\n    var batchSegmentPromise = expandExtraUrlParams(this.variableService_, this.urlReplacementService_, params, expansionOption, bindings, this.whiteList_).then(function (params) {\n      return (0, _object.dict)({\n        'trigger': trigger['on'],\n        'timestamp': timestamp,\n        'extraUrlParams': params\n      });\n    });\n    this.batchSegmentPromises_.push(batchSegmentPromise);\n    this.trigger_(isImportant || !this.batchInterval_);\n  }\n  /**\n   * Dispose function that clear request handler state.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.reset_(); // Clear batchInterval timeout\n\n    if (this.batchIntervalTimeoutId_) {\n      this.win.clearTimeout(this.batchIntervalTimeoutId_);\n      this.batchIntervalTimeoutId_ = null;\n    }\n\n    if (this.reportWindowTimeoutId_) {\n      this.win.clearTimeout(this.reportWindowTimeoutId_);\n      this.reportWindowTimeoutId_ = null;\n    }\n  }\n  /**\n   * Function that schedule the actual request send.\n   * @param {boolean} isImmediate\n   * @private\n   */\n  ;\n\n  _proto.trigger_ = function trigger_(isImmediate) {\n    if (this.queueSize_ == 0) {\n      // Do nothing if no request in queue\n      return;\n    }\n\n    if (isImmediate) {\n      // If not batched, or batchInterval scheduler schedule trigger immediately\n      this.fire_();\n    }\n  }\n  /**\n   * Send out request. Should only be called by `trigger_` function\n   * @private\n   */\n  ;\n\n  _proto.fire_ = function fire_() {\n    var _this2 = this;\n\n    var requestOriginPromise = this.requestOriginPromise_,\n        baseUrlTemplatePromise = this.baseUrlTemplatePromise_,\n        baseUrlPromise = this.baseUrlPromise_,\n        segmentPromises = this.batchSegmentPromises_;\n    var trigger =\n    /** @type {!JsonObject} */\n    this.lastTrigger_;\n    this.reset_(); // preconnect to requestOrigin if available, otherwise baseUrlTemplate\n\n    var preconnectPromise = requestOriginPromise ? requestOriginPromise : baseUrlTemplatePromise;\n    preconnectPromise.then(function (preUrl) {\n      _this2.preconnect_.url(preUrl, true);\n    });\n    Promise.all([baseUrlPromise, Promise.all(segmentPromises), requestOriginPromise]).then(function (results) {\n      var requestUrl = _this2.composeRequestUrl_(results[0], results[2]);\n\n      var batchSegments = results[1];\n\n      if (batchSegments.length === 0) {\n        return;\n      } // TODO: iframePing will not work with batch. Add a config validation.\n\n\n      if (trigger['iframePing']) {\n        (0, _log.userAssert)(trigger['on'] == _events.AnalyticsEventType.VISIBLE, 'iframePing is only available on page view requests.');\n\n        _this2.transport_.sendRequestUsingIframe(requestUrl, batchSegments[0]);\n      } else {\n        _this2.transport_.sendRequest(requestUrl, batchSegments, !!_this2.batchInterval_);\n      }\n    });\n  }\n  /**\n   * Reset batching status\n   * @private\n   */\n  ;\n\n  _proto.reset_ = function reset_() {\n    this.queueSize_ = 0;\n    this.baseUrlPromise_ = null;\n    this.baseUrlTemplatePromise_ = null;\n    this.batchSegmentPromises_ = [];\n    this.lastTrigger_ = null;\n  }\n  /**\n   * Handle batchInterval\n   */\n  ;\n\n  _proto.initBatchInterval_ = function initBatchInterval_() {\n    if (!this.batchInterval_) {\n      return;\n    }\n\n    this.batchInterval_ = (0, _types.isArray)(this.batchInterval_) ? this.batchInterval_ : [this.batchInterval_];\n\n    for (var i = 0; i < this.batchInterval_.length; i++) {\n      var interval = this.batchInterval_[i];\n      (0, _log.userAssert)((0, _types.isFiniteNumber)(interval), 'Invalid batchInterval value: %s', this.batchInterval_);\n      interval = Number(interval) * 1000;\n      (0, _log.userAssert)(interval >= BATCH_INTERVAL_MIN, 'Invalid batchInterval value: %s, ' + 'interval value must be greater than %s ms.', this.batchInterval_, BATCH_INTERVAL_MIN);\n      this.batchInterval_[i] = interval;\n    }\n\n    this.batchIntervalPointer_ = 0;\n    this.refreshBatchInterval_();\n  }\n  /**\n   * Initializes report window.\n   */\n  ;\n\n  _proto.initReportWindow_ = function initReportWindow_() {\n    var _this3 = this;\n\n    if (this.reportWindow_) {\n      this.reportWindowTimeoutId_ = this.win.setTimeout(function () {\n        // Flush batch queue;\n        _this3.trigger_(true);\n\n        _this3.reportRequest_ = false; // Clear batchInterval timeout\n\n        if (_this3.batchIntervalTimeoutId_) {\n          _this3.win.clearTimeout(_this3.batchIntervalTimeoutId_);\n\n          _this3.batchIntervalTimeoutId_ = null;\n        }\n      }, this.reportWindow_ * 1000);\n    }\n  }\n  /**\n   * Schedule sending request regarding to batchInterval\n   */\n  ;\n\n  _proto.refreshBatchInterval_ = function refreshBatchInterval_() {\n    var _this4 = this;\n\n    (0, _log.devAssert)(this.batchIntervalPointer_ != null, 'Should not start batchInterval without pointer');\n    var interval = this.batchIntervalPointer_ < this.batchInterval_.length ? this.batchInterval_[this.batchIntervalPointer_++] : this.batchInterval_[this.batchInterval_.length - 1];\n    this.batchIntervalTimeoutId_ = this.win.setTimeout(function () {\n      _this4.trigger_(true);\n\n      _this4.refreshBatchInterval_();\n    }, interval);\n  }\n  /**\n   * Composes a request URL given a base and requestOrigin\n   * @private\n   * @param {string} baseUrl\n   * @param {string=} opt_requestOrigin\n   * @return {string}\n   */\n  ;\n\n  _proto.composeRequestUrl_ = function composeRequestUrl_(baseUrl, opt_requestOrigin) {\n    if (opt_requestOrigin) {\n      // We expect requestOrigin to always contain the URL origin. In the case\n      // where requestOrigin has a relative URL, the current page's origin will\n      // be used. We will simply respect the requestOrigin and baseUrl, we don't\n      // check if they form a valid URL and request will fail silently\n      var requestOriginInfo = this.urlService_.parse(opt_requestOrigin);\n      return requestOriginInfo.origin + baseUrl;\n    }\n\n    return baseUrl;\n  };\n\n  return RequestHandler;\n}();\n/**\n * Expand the postMessage string\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} msg\n * @param {?JsonObject} configParams\n * @param {!JsonObject} trigger\n * @param {!./variables.ExpansionOptions} expansionOption\n * @param {!Element} element\n * @return {Promise<string>}\n */\n\n\nexports.RequestHandler = RequestHandler;\n\nfunction expandPostMessage(ampdoc, msg, configParams, trigger, expansionOption, element) {\n  var variableService = (0, _variables.variableServiceForDoc)(ampdoc);\n\n  var urlReplacementService = _services.Services.urlReplacementsForDoc(element);\n\n  var bindings = variableService.getMacros(element);\n  expansionOption.freezeVar('extraUrlParams');\n  var basePromise = variableService.expandTemplate(msg, expansionOption).then(function (base) {\n    return urlReplacementService.expandStringAsync(base, bindings);\n  });\n\n  if (msg.indexOf('${extraUrlParams}') < 0) {\n    // No need to append extraUrlParams\n    return basePromise;\n  }\n\n  return basePromise.then(function (expandedMsg) {\n    var params = Object.assign({}, configParams, trigger['extraUrlParams']); //return base url with the appended extra url params;\n\n    return expandExtraUrlParams(variableService, urlReplacementService, params, expansionOption, bindings).then(function (extraUrlParams) {\n      return (0, _transportSerializer.defaultSerializer)(expandedMsg, [(0, _object.dict)({\n        'extraUrlParams': extraUrlParams\n      })]);\n    });\n  });\n}\n/**\n * Function that handler extraUrlParams from config and trigger.\n * @param {!./variables.VariableService} variableService\n * @param {!../../../src/service/url-replacements-impl.UrlReplacements} urlReplacements\n * @param {!Object} params\n * @param {!./variables.ExpansionOptions} expansionOption\n * @param {!Object} bindings\n * @param {!Object=} opt_whitelist\n * @return {!Promise<!Object>}\n * @private\n */\n\n\nfunction expandExtraUrlParams(variableService, urlReplacements, params, expansionOption, bindings, opt_whitelist) {\n  var requestPromises = []; // Don't encode param values here,\n  // as we'll do it later in the getExtraUrlParamsString call.\n\n  var option = new _variables.ExpansionOptions(expansionOption.vars, expansionOption.iterations, true\n  /* noEncode */\n  );\n\n  var expandObject = function expandObject(params, key) {\n    var value = params[key];\n\n    if (typeof value === 'string') {\n      var request = variableService.expandTemplate(value, option).then(function (value) {\n        return urlReplacements.expandStringAsync(value, bindings, opt_whitelist);\n      }).then(function (value) {\n        return params[key] = value;\n      });\n      requestPromises.push(request);\n    } else if ((0, _types.isArray)(value)) {\n      value.forEach(function (_, index) {\n        return expandObject(value, index);\n      });\n    } else if ((0, _types.isObject)(value) && value !== null) {\n      Object.keys(value).forEach(function (key) {\n        return expandObject(value, key);\n      });\n    }\n  };\n\n  Object.keys(params).forEach(function (key) {\n    return expandObject(params, key);\n  });\n  return Promise.all(requestPromises).then(function () {\n    return params;\n  });\n}\n\n},{\"../../../src/log\":125,\"../../../src/services\":141,\"../../../src/types\":145,\"../../../src/utils/object\":154,\"./events\":9,\"./resource-timing\":19,\"./sandbox-vars-whitelist\":20,\"./transport-serializer\":22,\"./variables\":24}],19:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getResourceTiming = getResourceTiming;\n\nvar _variables = require(\"./variables\");\n\nvar _array = require(\"../../../src/utils/array\");\n\nvar _types = require(\"../../../src/types\");\n\nvar _url = require(\"../../../src/url\");\n\nvar _log = require(\"../../../src/log\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A user-supplied JSON object that defines a resource to be reported. It is\n * expected to have some fields.\n * A resource timing enty will match against this resource if all of the\n * following properties match.\n * @property {string=} host A string whose value should be a RegExp. It defines\n *     a host or set of hosts to match against. By default, the RegExp will\n *     match all hosts if omitted.\n * @property {string=} path A string whose value should be a RegExp. It defines\n *     a path or set of paths to match against. By default, the RegExp will\n *     match all paths if omitted.\n * @property {string=} query A string whose value should be a RegExp. It defines\n *     a query string or set of query strings to match against. By default, the\n *     RegExp will match all query strings if omitted.\n * @typedef {!JsonObject}\n */\nvar IndividualResourceSpecDef;\n/**\n * A parsed resource spec for a specific host or sets of hosts (as defined by\n * the hostPattern).\n * @typedef {{\n *   hostPattern: !RegExp,\n *   resources: !Array<{\n *     name: string,\n *     pathPattern: !RegExp,\n *     queryPattern: !RegExp,\n *   }>,\n * }}\n */\n\nvar ResourceSpecForHostDef;\n/**\n * The default maximum buffer size for resource timing entries. After the limit\n * has been reached, the browser will stop recording resource timing entries.\n * This number is chosen by the spec: https://w3c.github.io/resource-timing.\n * @const {number}\n */\n\nvar RESOURCE_TIMING_BUFFER_SIZE = 150;\n/**\n * Yields the thread before running the function to avoid causing jank. (i.e. a\n * task that takes over 16ms.)\n * @param {function(): OUT} fn\n * @return {!Promise<OUT>}\n * @template OUT\n */\n\nfunction yieldThread(fn) {\n  return new Promise(function (resolve) {\n    setTimeout(function () {\n      return resolve(fn());\n    });\n  });\n}\n/**\n * Checks whether the given object is a valid resource timing spec.\n * @param {!JsonObject} spec\n * @return {boolean}\n */\n\n\nfunction validateResourceTimingSpec(spec) {\n  if (!(0, _types.isObject)(spec['resources'])) {\n    (0, _log.user)().warn('ANALYTICS', 'resourceTimingSpec missing \"resources\" field');\n    return false;\n  }\n\n  if (!spec['encoding'] || !spec['encoding']['entry'] || !spec['encoding']['delim']) {\n    (0, _log.user)().warn('ANALYTICS', 'resourceTimingSpec is missing or has incomplete encoding options');\n    return false;\n  }\n\n  if (spec['encoding']['base'] < 2 || spec['encoding']['base'] > 36) {\n    (0, _log.user)().warn('ANALYTICS', 'resource timing variables only supports bases between 2 and 36');\n    return false;\n  }\n\n  if (spec['responseAfter'] != null && typeof spec['responseAfter'] != 'number') {\n    (0, _log.user)().warn('ANALYTICS', 'resourceTimingSpec[\"responseAfter\"] must be a number');\n    return false;\n  }\n\n  return true;\n}\n/**\n * Gets all resource timing entries from the given window.\n * @param {!Window} win\n * @return {!Array<!PerformanceResourceTiming>}\n */\n\n\nfunction getResourceTimingEntries(win) {\n  return (\n    /** @type {!Array<!PerformanceResourceTiming>} */\n    win.performance.getEntriesByType('resource')\n  );\n}\n/**\n * Converts a resource timing entry to the variables for this resource.\n * @param {!PerformanceResourceTiming} entry\n * @param {string} name Name of the resource set by the resourceTimingSpec.\n * @param {function(number, number=): string} format A function to format\n *    timestamps and intervals. (Two numbers will be passed in for intervals.)\n * @return {!ExpansionOptions}\n */\n\n\nfunction entryToExpansionOptions(entry, name, format) {\n  var vars = {\n    // ${key} is the name of the resource from the resourceTimingSpec. i.e. it's\n    // the key of the object that specifies the host and path patterns that this\n    // resource matched against.\n    'key': name,\n    'startTime': format(entry.startTime),\n    'redirectTime': format(entry.redirectEnd, entry.redirectStart),\n    'domainLookupTime': format(entry.domainLookupEnd, entry.domainLookupStart),\n    'tcpConnectTime': format(entry.connectEnd, entry.connectStart),\n    'serverResponseTime': format(entry.responseStart, entry.requestStart),\n    'networkTransferTime': format(entry.responseEnd, entry.responseStart),\n    'transferSize': format(entry.transferSize || 0),\n    'encodedBodySize': format(entry.encodedBodySize || 0),\n    'decodedBodySize': format(entry.decodedBodySize || 0),\n    'duration': format(entry.duration),\n    'initiatorType': entry.initiatorType\n  };\n  return new _variables.ExpansionOptions(vars, 1\n  /* opt_iterations */\n  );\n}\n/**\n * Returns the variables for the given resource timing entry if it matches one\n * of the defined resources, or null otherwise.\n * @param {!PerformanceResourceTiming} entry\n * @param {!Array<!ResourceSpecForHostDef>} resourcesByHost An array of resource\n *     specs to match against.\n * @return {?string} The name of the entry, or null if no matching name exists.\n */\n\n\nfunction nameForEntry(entry, resourcesByHost) {\n  var url = (0, _url.parseUrlDeprecated)(entry.name);\n\n  for (var i = 0; i < resourcesByHost.length; ++i) {\n    var _resourcesByHost$i = resourcesByHost[i],\n        hostPattern = _resourcesByHost$i.hostPattern,\n        resources = _resourcesByHost$i.resources;\n\n    if (!hostPattern.test(url.host)) {\n      continue;\n    }\n\n    var index = (0, _array.findIndex)(resources, function (res) {\n      return res.pathPattern.test(url.pathname) && res.queryPattern.test(url.search);\n    });\n\n    if (index != -1) {\n      return resources[index].name;\n    }\n  }\n\n  return null; // No match.\n}\n/**\n * Groups all resource specs (which are defined in terms of {host, path, query}\n * patterns) by host pattern. This is used downstream to avoid running RegExps\n * for host patterns multiple times because we expect multiple resources to\n * use the same host pattern.\n * @param {!Object<string, !IndividualResourceSpecDef>} resourceDefs A map of\n *     names to the resource spec for that name.\n * @return {!Array<!ResourceSpecForHostDef>}\n */\n\n\nfunction groupSpecsByHost(resourceDefs) {\n  var byHost = {};\n\n  for (var name in resourceDefs) {\n    var host = resourceDefs[name]['host'] || '';\n    var path = resourceDefs[name]['path'] || '';\n    var query = resourceDefs[name]['query'] || '';\n    var pattern = {\n      name: name,\n      pathPattern: new RegExp(path),\n      queryPattern: new RegExp(query)\n    };\n\n    if (byHost[host]) {\n      byHost[host].resources.push(pattern);\n    } else {\n      byHost[host] = {\n        hostPattern: new RegExp(host),\n        resources: [pattern]\n      };\n    }\n  }\n\n  var byHostArray = [];\n\n  for (var _host in byHost) {\n    byHostArray.push(byHost[_host]);\n  }\n\n  return byHostArray;\n}\n/**\n * Filters out resource timing entries that don't have a name defined in\n * resourceDefs. It returns a new array where each element contains a\n * resource timing entry and the corresponding name.\n * @param {!Array<!PerformanceResourceTiming>} entries\n * @param {!Object<string, !IndividualResourceSpecDef>} resourceDefs\n * @return {!Array<{entry: !PerformanceResourceTiming, name: string}>}\n */\n\n\nfunction filterEntries(entries, resourceDefs) {\n  // Group resource timing definitions by host since we expect multiple\n  // definitions to have the same host.\n  var byHost = groupSpecsByHost(resourceDefs);\n  var results = [];\n  entries.forEach(function (entry) {\n    var name = nameForEntry(entry, byHost);\n\n    if (name) {\n      results.push({\n        entry: entry,\n        name: name\n      });\n    }\n  });\n  return results;\n}\n/**\n * Serializes resource timing entries that match the resourceTimingSpec into a\n * single string.\n * @param {!Array<!PerformanceResourceTiming>} entries\n * @param {!JsonObject} resourceTimingSpec\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @return {!Promise<string>}\n */\n\n\nfunction serialize(entries, resourceTimingSpec, ampdoc) {\n  var resources = resourceTimingSpec['resources'];\n  var encoding = resourceTimingSpec['encoding'];\n  var variableService = (0, _variables.variableServiceForDoc)(ampdoc);\n\n  var format = function format(val, relativeTo) {\n    if (relativeTo === void 0) {\n      relativeTo = 0;\n    }\n\n    return Math.round(val - relativeTo).toString(encoding['base'] || 10);\n  };\n\n  var promises = filterEntries(entries, resources).map(function (_ref) {\n    var entry = _ref.entry,\n        name = _ref.name;\n    return entryToExpansionOptions(entry, name, format);\n  }).map(function (expansion) {\n    return variableService.expandTemplate(encoding['entry'], expansion);\n  });\n  return Promise.all(promises).then(function (vars) {\n    return vars.join(encoding['delim']);\n  });\n}\n/**\n * Serializes resource timing entries according to the resource timing spec.\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @param {!JsonObject} resourceTimingSpec\n * @return {!Promise<string>}\n */\n\n\nfunction serializeResourceTiming(ampdoc, resourceTimingSpec) {\n  var win = ampdoc.win; // Check that the performance timing API exists before and that the spec is\n  // valid before proceeding. If not, we simply return an empty string.\n\n  if (resourceTimingSpec['done'] || !win.performance || !win.performance.now || !win.performance.getEntriesByType || !validateResourceTimingSpec(resourceTimingSpec)) {\n    resourceTimingSpec['done'] = true;\n    return Promise.resolve('');\n  }\n\n  var entries = getResourceTimingEntries(win);\n\n  if (entries.length >= RESOURCE_TIMING_BUFFER_SIZE) {\n    // We've exceeded the maximum buffer size so no additional metrics will be\n    // reported for this resourceTimingSpec.\n    resourceTimingSpec['done'] = true;\n  }\n\n  var responseAfter = resourceTimingSpec['responseAfter'] || 0; // Update responseAfter for next time to avoid reporting the same resource\n  // multiple times.\n\n  resourceTimingSpec['responseAfter'] = Math.max(responseAfter, win.performance.now()); // Filter resources that are too early.\n\n  entries = entries.filter(function (e) {\n    return e.startTime + e.duration >= responseAfter;\n  });\n\n  if (!entries.length) {\n    return Promise.resolve('');\n  } // Yield the thread in case iterating over all resources takes a long time.\n\n\n  return yieldThread(function () {\n    return serialize(entries, resourceTimingSpec, ampdoc);\n  });\n}\n/**\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @param {!JsonObject|undefined} spec resource timing spec.\n * @param {number} startTime start timestamp.\n * @return {!Promise<string>}\n */\n\n\nfunction getResourceTiming(ampdoc, spec, startTime) {\n  // Only allow collecting timing within 1s\n  if (spec && Date.now() < startTime + 60 * 1000) {\n    return serializeResourceTiming(ampdoc, spec);\n  } else {\n    return Promise.resolve('');\n  }\n}\n\n},{\"../../../src/log\":125,\"../../../src/types\":145,\"../../../src/url\":148,\"../../../src/utils/array\":149,\"./variables\":24}],20:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.SANDBOX_AVAILABLE_VARS = void 0;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Used for inserted scoped analytics element.\n * @const {!Object<string, boolean>}\n */\nvar SANDBOX_AVAILABLE_VARS = {\n  'RANDOM': true,\n  'CANONICAL_URL': true,\n  'CANONICAL_HOST': true,\n  'CANONICAL_HOSTNAME': true,\n  'CANONICAL_PATH': true,\n  'AMPDOC_URL': true,\n  'AMPDOC_HOST': true,\n  'AMPDOC_HOSTNAME': true,\n  'SOURCE_URL': true,\n  'SOURCE_HOST': true,\n  'SOURCE_HOSTNAME': true,\n  'SOURCE_PATH': true,\n  'TIMESTAMP': true,\n  'TIMEZONE': true,\n  'TIMEZONE_CODE': true,\n  'VIEWPORT_HEIGHT': true,\n  'VIEWPORT_WIDTH': true,\n  'SCREEN_WIDTH': true,\n  'SCREEN_HEIGHT': true,\n  'AVAILABLE_SCREEN_HEIGHT': true,\n  'AVAILABLE_SCREEN_WIDTH': true,\n  'SCREEN_COLOR_DEPTH': true,\n  'DOCUMENT_CHARSET': true,\n  'BROWSER_LANGUAGE': true,\n  'AMP_VERSION': true,\n  'BACKGROUND_STATE': true,\n  'USER_AGENT': true,\n  'FIRST_CONTENTFUL_PAINT': true,\n  'FIRST_VIEWPORT_READY': true,\n  'MAKE_BODY_VISIBLE': true\n};\nexports.SANDBOX_AVAILABLE_VARS = SANDBOX_AVAILABLE_VARS;\n\n},{}],21:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.ScrollManager = exports.ScrollEventDef = void 0;\n\nvar _observable = require(\"../../../src/observable\");\n\nvar _services = require(\"../../../src/services\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   top: number,\n *   left: number,\n *   width: number,\n *   height: number,\n *   scrollHeight: number,\n *   scrollWidth: number,\n * }}\n */\nvar ScrollEventDef;\n/**\n * A manager for handling multiple Scroll Event Trackers.\n * The instance of this class corresponds 1:1 to `AnalyticsRoot`. It represents\n * a collection of all scroll triggers declared within the `AnalyticsRoot`.\n * @implements {../../../src/service.Disposable}\n */\n\nexports.ScrollEventDef = ScrollEventDef;\n\nvar ScrollManager =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  function ScrollManager(ampdoc) {\n    /** @const @private {!../../../src/service/viewport/viewport-interface.ViewportInterface} */\n    this.viewport_ = _services.Services.viewportForDoc(ampdoc);\n    /** @private {!UnlistenDef|null} */\n\n    this.viewportOnChangedUnlistener_ = null;\n    /** @private {!Observable<!./scroll-manager.ScrollEventDef>} */\n\n    this.scrollObservable_ = new _observable.Observable();\n  }\n  /**\n   * Function to dispose of all handlers on the scroll observable\n   */\n\n\n  var _proto = ScrollManager.prototype;\n\n  _proto.dispose = function dispose() {\n    this.scrollObservable_.removeAll();\n    this.removeViewportOnChangedListener_();\n  }\n  /**\n   * @param {function(!Object)} handler\n   */\n  ;\n\n  _proto.removeScrollHandler = function removeScrollHandler(handler) {\n    this.scrollObservable_.remove(handler);\n\n    if (this.scrollObservable_.getHandlerCount() <= 0) {\n      this.removeViewportOnChangedListener_();\n    }\n  }\n  /**\n   * @param {function(!Object)} handler\n   * @return {!UnlistenDef}\n   */\n  ;\n\n  _proto.addScrollHandler = function addScrollHandler(handler) {\n    // Trigger an event to fire events that might have already happened.\n    var size = this.viewport_.getSize();\n    /** {./scroll-manager.ScrollEventDef} */\n\n    var scrollEvent = {\n      top: this.viewport_.getScrollTop(),\n      left: this.viewport_.getScrollLeft(),\n      width: size.width,\n      height: size.height,\n      scrollWidth: this.viewport_.getScrollWidth(),\n      scrollHeight: this.viewport_.getScrollHeight()\n    };\n    handler(scrollEvent);\n\n    if (this.scrollObservable_.getHandlerCount() === 0) {\n      this.addViewportOnChangedListener_();\n    }\n\n    return this.scrollObservable_.add(handler);\n  }\n  /**\n   * @param {!../../../src/service/viewport/viewport-interface.ViewportChangedEventDef} e\n   * @private\n   */\n  ;\n\n  _proto.onScroll_ = function onScroll_(e) {\n    /** {./scroll-manager.ScrollEventDef} */\n    var scrollEvent = {\n      top: e.top,\n      left: e.left,\n      width: e.width,\n      height: e.height,\n      scrollWidth: this.viewport_.getScrollWidth(),\n      scrollHeight: this.viewport_.getScrollHeight()\n    }; // Fire all of our children scroll observables\n\n    this.scrollObservable_.fire(scrollEvent);\n  }\n  /**\n   * Function to remove the viewport onChanged listener\n   * @private\n   */\n  ;\n\n  _proto.removeViewportOnChangedListener_ = function removeViewportOnChangedListener_() {\n    if (this.viewportOnChangedUnlistener_) {\n      this.viewportOnChangedUnlistener_();\n      this.viewportOnChangedUnlistener_ = null;\n    }\n  }\n  /**\n   * Function to add the viewport onChanged listener\n   * @private\n   */\n  ;\n\n  _proto.addViewportOnChangedListener_ = function addViewportOnChangedListener_() {\n    this.viewportOnChangedUnlistener_ = this.viewport_.onChanged(this.onScroll_.bind(this));\n  };\n\n  return ScrollManager;\n}();\n\nexports.ScrollManager = ScrollManager;\n\n},{\"../../../src/observable\":128,\"../../../src/services\":141}],22:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.defaultSerializer = defaultSerializer;\nexports.TransportSerializers = exports.TransportSerializerDef = exports.RequestDef = exports.BatchSegmentDef = void 0;\n\nvar _url = require(\"../../../src/url\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar EXTRA_URL_PARAM_VAR = '${extraUrlParams}';\n/**\n * @typedef {{\n *   trigger: (string|undefined),\n *   timestamp: (number|undefined),\n *   extraUrlParams: (!JsonObject|undefined)\n * }}\n */\n\nvar BatchSegmentDef;\n/**\n * @typedef {{\n *   url: string,\n *   payload: (string|undefined),\n * }}\n */\n\nexports.BatchSegmentDef = BatchSegmentDef;\nvar RequestDef;\n/**\n * The interface for all TransportSerializer to implement.\n * @interface\n */\n\nexports.RequestDef = RequestDef;\n\nvar TransportSerializerDef =\n/*#__PURE__*/\nfunction () {\n  function TransportSerializerDef() {}\n\n  var _proto = TransportSerializerDef.prototype;\n\n  /**\n   * @param {string} unusedBaseUrl\n   * @param {!BatchSegmentDef} unusedSegment\n   * @param {boolean} unusedWithPayload\n   * @return {!RequestDef}\n   */\n  _proto.generateRequest = function generateRequest(unusedBaseUrl, unusedSegment, unusedWithPayload) {}\n  /**\n   * @param {string} unusedBaseUrl\n   * @param {!Array<!BatchSegmentDef>} unusedSegments\n   * @param {boolean} unusedWithPayload\n   * @return {!RequestDef}\n   */\n  ;\n\n  _proto.generateBatchRequest = function generateBatchRequest(unusedBaseUrl, unusedSegments, unusedWithPayload) {};\n\n  return TransportSerializerDef;\n}();\n/**\n * The default serializer.\n *\n * @implements {TransportSerializerDef}\n */\n\n\nexports.TransportSerializerDef = TransportSerializerDef;\n\nvar DefaultTransportSerializer =\n/*#__PURE__*/\nfunction () {\n  function DefaultTransportSerializer() {}\n\n  var _proto2 = DefaultTransportSerializer.prototype;\n\n  /** @override */\n  _proto2.generateRequest = function generateRequest(baseUrl, segment, withPayload) {\n    if (withPayload === void 0) {\n      withPayload = false;\n    }\n\n    if (withPayload) {\n      return {\n        url: baseUrl.replace(EXTRA_URL_PARAM_VAR, ''),\n        payload: JSON.stringify(segment['extraUrlParams'])\n      };\n    }\n\n    return {\n      url: defaultSerializer(baseUrl, [segment])\n    };\n  }\n  /** @override */\n  ;\n\n  _proto2.generateBatchRequest = function generateBatchRequest(baseUrl, segments, withPayload) {\n    if (withPayload === void 0) {\n      withPayload = false;\n    }\n\n    if (withPayload) {\n      return {\n        url: baseUrl.replace(EXTRA_URL_PARAM_VAR, ''),\n        payload: JSON.stringify(segments.map(function (segment) {\n          return segment['extraUrlParams'];\n        }))\n      };\n    }\n\n    return {\n      url: defaultSerializer(baseUrl, segments)\n    };\n  };\n\n  return DefaultTransportSerializer;\n}();\n/**\n * Please register your serializer below.\n * Please keep the object in alphabetic order.\n *\n * @const {Object<string, TransportSerializerDef>}\n */\n\n\nvar TransportSerializers = {\n  'default': new DefaultTransportSerializer()\n};\n/**\n * The default way for merging batch segments\n *\n * @param {string} baseUrl\n * @param {!Array<!BatchSegmentDef>} batchSegments\n * @return {string}\n */\n\nexports.TransportSerializers = TransportSerializers;\n\nfunction defaultSerializer(baseUrl, batchSegments) {\n  var extraUrlParamsStr = batchSegments.map(function (item) {\n    return (0, _url.serializeQueryString)(item['extraUrlParams']);\n  }).filter(function (queryString) {\n    return !!queryString;\n  }).join('&');\n  var requestUrl;\n\n  if (baseUrl.indexOf(EXTRA_URL_PARAM_VAR) >= 0) {\n    requestUrl = baseUrl.replace(EXTRA_URL_PARAM_VAR, extraUrlParamsStr);\n  } else {\n    requestUrl = (0, _url.appendEncodedParamStringToUrl)(baseUrl, extraUrlParamsStr);\n  }\n\n  return requestUrl;\n}\n\n},{\"../../../src/url\":148}],23:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.Transport = void 0;\n\nvar _transportSerializer = require(\"./transport-serializer\");\n\nvar _iframeTransport = require(\"./iframe-transport\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _windowInterface = require(\"../../../src/window-interface\");\n\nvar _url = require(\"../../../src/url\");\n\nvar _pixel = require(\"../../../src/pixel\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _adHelper = require(\"../../../src/ad-helper\");\n\nvar _mode = require(\"../../../src/mode\");\n\nvar _service = require(\"../../../src/service\");\n\nvar _eventHelper = require(\"../../../src/event-helper\");\n\nvar _dom = require(\"../../../src/dom\");\n\nvar _style = require(\"../../../src/style\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nvar TAG_ = 'amp-analytics/transport';\n/**\n * Transport defines the ways how the analytics pings are going to be sent.\n */\n\nvar Transport =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Window} win\n   * @param {!JsonObject} options\n   */\n  function Transport(win, options) {\n    if (options === void 0) {\n      options =\n      /** @type {!JsonObject} */\n      {};\n    }\n\n    /** @private {!Window} */\n    this.win_ = win;\n    /** @private {!JsonObject} */\n\n    this.options_ = options;\n    /** @private {string|undefined} */\n\n    this.referrerPolicy_ =\n    /** @type {string|undefined} */\n    this.options_['referrerPolicy']; // no-referrer is only supported in image transport\n\n    if (this.referrerPolicy_ === 'no-referrer') {\n      this.options_['beacon'] = false;\n      this.options_['xhrpost'] = false;\n    }\n    /** @private {boolean} */\n\n\n    this.useBody_ = !!this.options_['useBody'];\n    /** @private {?IframeTransport} */\n\n    this.iframeTransport_ = null;\n    /** @private {boolean} */\n\n    this.isInabox_ = (0, _mode.getMode)(win).runtime == 'inabox';\n  }\n  /**\n   * @param {string} url\n   * @param {!Array<!BatchSegmentDef>} segments\n   * @param {boolean} inBatch\n   */\n\n\n  var _proto = Transport.prototype;\n\n  _proto.sendRequest = function sendRequest(url, segments, inBatch) {\n    if (!url || segments.length === 0) {\n      (0, _log.dev)().info(TAG_, 'Empty request not sent: ', url);\n      return;\n    }\n\n    var serializer = this.getSerializer_();\n    /**\n     * @param {boolean} withPayload\n     * @return {!RequestDef}\n     */\n\n    function generateRequest(withPayload) {\n      var request = inBatch ? serializer.generateBatchRequest(url, segments, withPayload) : serializer.generateRequest(url, segments[0], withPayload);\n      (0, _url.assertHttpsUrl)(request.url, 'amp-analytics request');\n      (0, _url.checkCorsUrl)(request.url);\n      return request;\n    }\n\n    var getRequest = cacheFuncResult(generateRequest);\n\n    if (this.options_['iframe']) {\n      if (!this.iframeTransport_) {\n        (0, _log.dev)().error(TAG_, 'iframe transport was inadvertently deleted');\n        return;\n      }\n\n      this.iframeTransport_.sendRequest(getRequest(false).url);\n      return;\n    }\n\n    if (this.options_['beacon'] && Transport.sendRequestUsingBeacon(this.win_, getRequest(this.useBody_))) {\n      return;\n    }\n\n    if (this.options_['xhrpost'] && Transport.sendRequestUsingXhr(this.win_, getRequest(this.useBody_))) {\n      return;\n    }\n\n    var image = this.options_['image'];\n\n    if (image) {\n      var suppressWarnings = typeof image == 'object' && image['suppressWarnings'];\n      Transport.sendRequestUsingImage(this.win_, getRequest(false), suppressWarnings,\n      /** @type {string|undefined} */\n      this.referrerPolicy_);\n      return;\n    }\n\n    (0, _log.user)().warn(TAG_, 'Failed to send request', url, this.options_);\n  }\n  /**\n   * amp-analytics will create an iframe for vendors in\n   * extensions/amp-analytics/0.1/vendors.js who have transport/iframe defined.\n   * This is limited to MRC-accreddited vendors. The frame is removed if the\n   * user navigates/swipes away from the page, and is recreated if the user\n   * navigates back to the page.\n   *\n   * @param {!Window} win\n   * @param {!Element} element\n   * @param {(!../../../src/preconnect.Preconnect)=} opt_preconnect\n   */\n  ;\n\n  _proto.maybeInitIframeTransport = function maybeInitIframeTransport(win, element, opt_preconnect) {\n    if (!this.options_['iframe'] || this.iframeTransport_) {\n      return;\n    }\n\n    if (opt_preconnect) {\n      opt_preconnect.preload((0, _iframeTransport.getIframeTransportScriptUrl)(win), 'script');\n    }\n\n    var type = element.getAttribute('type'); // In inabox there is no amp-ad element.\n\n    var ampAdResourceId = this.isInabox_ ? '1' : (0, _log.user)().assertString((0, _adHelper.getAmpAdResourceId)(element, (0, _service.getTopWindow)(win)), 'No friendly amp-ad ancestor element was found ' + 'for amp-analytics tag with iframe transport.');\n    this.iframeTransport_ = new _iframeTransport.IframeTransport(win, type, this.options_, ampAdResourceId);\n  }\n  /**\n   * Deletes iframe transport.\n   */\n  ;\n\n  _proto.deleteIframeTransport = function deleteIframeTransport() {\n    if (this.iframeTransport_) {\n      this.iframeTransport_.detach();\n      this.iframeTransport_ = null;\n    }\n  }\n  /**\n   * Sends a ping request using an iframe, that is removed 5 seconds after\n   * it is loaded.\n   * This is not available as a standard transport, but rather used for\n   * specific, whitelisted requests.\n   * Note that this is unrelated to the iframeTransport\n   *\n   * @param {string} url\n   * @param {!BatchSegmentDef} segment\n   */\n  ;\n\n  _proto.sendRequestUsingIframe = function sendRequestUsingIframe(url, segment) {\n    var _this = this;\n\n    var request = (0, _transportSerializer.defaultSerializer)(url, [segment]);\n\n    if (!request) {\n      (0, _log.user)().error(TAG_, 'Request not sent. Contents empty.');\n      return;\n    }\n\n    (0, _url.assertHttpsUrl)(request, 'amp-analytics request');\n    (0, _log.userAssert)((0, _url.parseUrlDeprecated)(request).origin != (0, _url.parseUrlDeprecated)(this.win_.location.href).origin, 'Origin of iframe request must not be equal to the document origin.' + ' See https://github.com/ampproject/' + 'amphtml/blob/master/spec/amp-iframe-origin-policy.md for details.');\n    /** @const {!Element} */\n\n    var iframe = this.win_.document.createElement('iframe');\n    (0, _style.toggle)(iframe, false);\n\n    iframe.onload = iframe.onerror = function () {\n      _services.Services.timerFor(_this.win_).delay(function () {\n        (0, _dom.removeElement)(iframe);\n      }, 5000);\n    };\n\n    iframe.setAttribute('amp-analytics', '');\n    iframe.setAttribute('sandbox', 'allow-scripts allow-same-origin');\n    iframe.src = request;\n    this.win_.document.body.appendChild(iframe);\n  }\n  /**\n   * @return {!TransportSerializerDef}\n   */\n  ;\n\n  _proto.getSerializer_ = function getSerializer_() {\n    return (\n      /** @type {!TransportSerializerDef} */\n      _transportSerializer.TransportSerializers['default']\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @param {!RequestDef} request\n   * @param {boolean} suppressWarnings\n   * @param {string|undefined} referrerPolicy\n   */\n  ;\n\n  Transport.sendRequestUsingImage = function sendRequestUsingImage(win, request, suppressWarnings, referrerPolicy) {\n    var image = (0, _pixel.createPixel)(win, request.url, referrerPolicy);\n    (0, _eventHelper.loadPromise)(image).then(function () {\n      (0, _log.dev)().fine(TAG_, 'Sent image request', request.url);\n    }).catch(function () {\n      if (!suppressWarnings) {\n        (0, _log.user)().warn(TAG_, 'Response unparseable or failed to send image request', request.url);\n      }\n    });\n  }\n  /**\n   * @param {!Window} win\n   * @param {!RequestDef} request\n   * @return {boolean} True if this browser supports navigator.sendBeacon.\n   */\n  ;\n\n  Transport.sendRequestUsingBeacon = function sendRequestUsingBeacon(win, request) {\n    var sendBeacon = _windowInterface.WindowInterface.getSendBeacon(win);\n\n    if (!sendBeacon) {\n      return false;\n    }\n\n    var result = sendBeacon(request.url, request.payload || '');\n\n    if (result) {\n      (0, _log.dev)().fine(TAG_, 'Sent beacon request', request);\n    }\n\n    return result;\n  }\n  /**\n   * @param {!Window} win\n   * @param {!RequestDef} request\n   * @return {boolean} True if this browser supports cross-domain XHR.\n   */\n  ;\n\n  Transport.sendRequestUsingXhr = function sendRequestUsingXhr(win, request) {\n    var XMLHttpRequest = _windowInterface.WindowInterface.getXMLHttpRequest(win);\n\n    if (!XMLHttpRequest) {\n      return false;\n    }\n\n    var xhr = new XMLHttpRequest();\n\n    if (!('withCredentials' in xhr)) {\n      return false; // Looks like XHR level 1 - CORS is not supported.\n    }\n\n    xhr.open('POST', request.url, true);\n    xhr.withCredentials = true; // Prevent pre-flight HEAD request.\n\n    xhr.setRequestHeader('Content-Type', 'text/plain');\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState == 4) {\n        (0, _log.dev)().fine(TAG_, 'Sent XHR request', request.url);\n      }\n    };\n\n    xhr.send(request.payload || '');\n    return true;\n  };\n\n  return Transport;\n}();\n/**\n * A helper method that wraps a function and cache its return value.\n *\n * @param {!Function} func the function to cache\n * @return {!Function}\n */\n\n\nexports.Transport = Transport;\n\nfunction cacheFuncResult(func) {\n  var cachedValue = {};\n  return function (arg) {\n    var key = String(arg);\n\n    if (cachedValue[key] === undefined) {\n      cachedValue[key] = func(arg);\n    }\n\n    return cachedValue[key];\n  };\n}\n\n},{\"../../../src/ad-helper\":104,\"../../../src/dom\":111,\"../../../src/event-helper\":114,\"../../../src/log\":125,\"../../../src/mode\":127,\"../../../src/pixel\":130,\"../../../src/service\":131,\"../../../src/services\":141,\"../../../src/style\":144,\"../../../src/url\":148,\"../../../src/window-interface\":158,\"./iframe-transport\":12,\"./transport-serializer\":22}],24:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.encodeVars = encodeVars;\nexports.getNameArgs = getNameArgs;\nexports.installVariableServiceForTesting = installVariableServiceForTesting;\nexports.variableServiceForDoc = variableServiceForDoc;\nexports.variableServicePromiseForDoc = variableServicePromiseForDoc;\nexports.getNameArgsForTesting = getNameArgsForTesting;\nexports.stringToBool = stringToBool;\nexports.VariableService = exports.ExpansionOptions = void 0;\n\nvar _services = require(\"../../../src/services\");\n\nvar _base = require(\"../../../src/utils/base64\");\n\nvar _cookieReader = require(\"./cookie-reader\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _consent = require(\"../../../src/consent\");\n\nvar _service = require(\"../../../src/service\");\n\nvar _types = require(\"../../../src/types\");\n\nvar _linkerReader = require(\"./linker-reader\");\n\nvar _promise = require(\"../../../src/utils/promise\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nvar TAG = 'amp-analytics/variables';\n/** @const {RegExp} */\n\nvar VARIABLE_ARGS_REGEXP = /^(?:([^\\s]*)(\\([^)]*\\))|[^]+)$/;\nvar EXTERNAL_CONSENT_POLICY_STATE_STRING = {\n  1: 'sufficient',\n  2: 'insufficient',\n  3: 'not_required',\n  4: 'unknown'\n};\n/** @typedef {{name: string, argList: string}} */\n\nvar FunctionNameArgsDef;\n/**\n * The structure that contains all details needed to expand a template\n * @struct\n * @const\n * @package For type.\n */\n\nvar ExpansionOptions =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Object<string, *>} vars\n   * @param {number=} opt_iterations\n   * @param {boolean=} opt_noEncode\n   */\n  function ExpansionOptions(vars, opt_iterations, opt_noEncode) {\n    /** @const {!Object<string, string|Array<string>>} */\n    this.vars = vars;\n    /** @const {number} */\n\n    this.iterations = opt_iterations === undefined ? 2 : opt_iterations;\n    /** @const {boolean} */\n\n    this.noEncode = !!opt_noEncode;\n    this.freezeVars = {};\n  }\n  /**\n   * Freeze special variable name so that they don't get expanded.\n   * For example ${extraUrlParams}\n   * @param {string} str\n   */\n\n\n  var _proto = ExpansionOptions.prototype;\n\n  _proto.freezeVar = function freezeVar(str) {\n    this.freezeVars[str] = true;\n  }\n  /**\n   * @param {string} name\n   * @return {*}\n   */\n  ;\n\n  _proto.getVar = function getVar(name) {\n    var value = this.vars[name];\n\n    if (value == null) {\n      value = '';\n    }\n\n    return value;\n  };\n\n  return ExpansionOptions;\n}();\n/**\n * @param {string} value\n * @param {string} s\n * @param {string=} opt_l\n * @return {string}\n */\n\n\nexports.ExpansionOptions = ExpansionOptions;\n\nfunction substrMacro(value, s, opt_l) {\n  var start = Number(s);\n  var length = value.length;\n  (0, _log.userAssert)((0, _types.isFiniteNumber)(start), 'Start index ' + start + 'in substr macro should be a number');\n\n  if (opt_l) {\n    length = Number(opt_l);\n    (0, _log.userAssert)((0, _types.isFiniteNumber)(length), 'Length ' + length + ' in substr macro should be a number');\n  }\n\n  return value.substr(start, length);\n}\n/**\n * @param {string} value\n * @param {string} defaultValue\n * @return {string}\n */\n\n\nfunction defaultMacro(value, defaultValue) {\n  if (!value || !value.length) {\n    return defaultValue;\n  }\n\n  return value;\n}\n/**\n * @param {string} string input to be replaced\n * @param {string} matchPattern string representation of regex pattern\n * @param {string=} opt_newSubStr pattern to be substituted in\n * @return {string}\n */\n\n\nfunction replaceMacro(string, matchPattern, opt_newSubStr) {\n  if (!matchPattern) {\n    (0, _log.user)().warn(TAG, 'REPLACE macro must have two or more arguments');\n  }\n\n  if (!opt_newSubStr) {\n    opt_newSubStr = '';\n  }\n\n  var regex = new RegExp(matchPattern, 'g');\n  return string.replace(regex, opt_newSubStr);\n}\n/**\n * Applies the match function to the given string with the given regex\n * @param {string} string input to be replaced\n * @param {string} matchPattern string representation of regex pattern\n * @param {string=} opt_matchingGroupIndexStr the matching group to return.\n *                  Index of 0 indicates the full match. Defaults to 0\n * @return {string} returns the matching group given by opt_matchingGroupIndexStr\n */\n\n\nfunction matchMacro(string, matchPattern, opt_matchingGroupIndexStr) {\n  if (!matchPattern) {\n    (0, _log.user)().warn(TAG, 'MATCH macro must have two or more arguments');\n  }\n\n  var index = 0;\n\n  if (opt_matchingGroupIndexStr) {\n    index = parseInt(opt_matchingGroupIndexStr, 10); // if given a non-number or negative number\n\n    if (index != 0 && !index || index < 0) {\n      (0, _log.user)().error(TAG, 'Third argument in MATCH macro must be a number >= 0');\n      index = 0;\n    }\n  }\n\n  var regex = new RegExp(matchPattern);\n  var matches = string.match(regex);\n  return matches && matches[index] ? matches[index] : '';\n}\n/**\n * Provides support for processing of advanced variable syntax like nested\n * expansions macros etc.\n */\n\n\nvar VariableService =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  function VariableService(ampdoc) {\n    var _this = this;\n\n    /** @private {!../../../src/service/ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n    /** @private {!JsonObject} */\n\n    this.macros_ = (0, _object.dict)({});\n    /** @const @private {!./linker-reader.LinkerReader} */\n\n    this.linkerReader_ = (0, _linkerReader.linkerReaderServiceFor)(this.ampdoc_.win);\n    this.register_('$DEFAULT', defaultMacro);\n    this.register_('$SUBSTR', substrMacro);\n    this.register_('$TRIM', function (value) {\n      return value.trim();\n    });\n    this.register_('$TOLOWERCASE', function (value) {\n      return value.toLowerCase();\n    });\n    this.register_('$TOUPPERCASE', function (value) {\n      return value.toUpperCase();\n    });\n    this.register_('$NOT', function (value) {\n      return String(!value);\n    });\n    this.register_('$BASE64', function (value) {\n      return (0, _base.base64UrlEncodeFromString)(value);\n    });\n    this.register_('$HASH', this.hashMacro_.bind(this));\n    this.register_('$IF', function (value, thenValue, elseValue) {\n      return stringToBool(value) ? thenValue : elseValue;\n    });\n    this.register_('$REPLACE', replaceMacro);\n    this.register_('$MATCH', matchMacro);\n    this.register_('$EQUALS', function (firstValue, secValue) {\n      return firstValue === secValue;\n    }); // TODO(ccordry): Make sure this stays a window level service when this\n    // VariableService is migrated to document level.\n\n    this.register_('LINKER_PARAM', function (name, id) {\n      return _this.linkerReader_.get(name, id);\n    });\n  }\n  /**\n   * @param {!Element} element\n   * @return {!JsonObject} contains all registered macros\n   */\n\n\n  var _proto2 = VariableService.prototype;\n\n  _proto2.getMacros = function getMacros(element) {\n    var _this2 = this;\n\n    var elementMacros = {\n      'COOKIE': function COOKIE(name) {\n        return (0, _cookieReader.cookieReader)(_this2.ampdoc_.win, (0, _log.dev)().assertElement(element), name);\n      },\n      'CONSENT_STATE': getConsentStateStr(element)\n    };\n    var merged = Object.assign({}, this.macros_, elementMacros);\n    return (\n      /** @type {!JsonObject} */\n      merged\n    );\n  }\n  /**\n   * @param {string} name\n   * @param {*} macro\n   */\n  ;\n\n  _proto2.register_ = function register_(name, macro) {\n    (0, _log.devAssert)(!this.macros_[name], 'Macro \"' + name + '\" already registered.');\n    this.macros_[name] = macro;\n  }\n  /**\n   * @param {string} template The template to expand\n   * @param {!ExpansionOptions} options configuration to use for expansion\n   * @return {!Promise<string>} The expanded string\n   */\n  ;\n\n  _proto2.expandTemplate = function expandTemplate(template, options) {\n    return (0, _promise.tryResolve)(this.expandTemplateSync.bind(this, template, options));\n  }\n  /**\n   * @param {string} template The template to expand\n   * @param {!ExpansionOptions} options configuration to use for expansion\n   * @return {string} The expanded string\n   * @visibleForTesting\n   */\n  ;\n\n  _proto2.expandTemplateSync = function expandTemplateSync(template, options) {\n    var _this3 = this;\n\n    return template.replace(/\\${([^}]*)}/g, function (match, key) {\n      if (options.iterations < 0) {\n        (0, _log.user)().error(TAG, 'Maximum depth reached while expanding variables. ' + 'Please ensure that the variables are not recursive.');\n        return match;\n      }\n\n      if (!key) {\n        return '';\n      } // Split the key to name and args\n      // e.g.: name='SOME_MACRO', args='(arg1, arg2)'\n\n\n      var _getNameArgs = getNameArgs(key),\n          name = _getNameArgs.name,\n          argList = _getNameArgs.argList;\n\n      if (options.freezeVars[name]) {\n        // Do nothing with frozen params\n        return match;\n      }\n\n      var value = options.getVar(name);\n\n      if (typeof value == 'string') {\n        value = _this3.expandTemplateSync(value, new ExpansionOptions(options.vars, options.iterations - 1, true\n        /* noEncode */\n        ));\n      }\n\n      if (!options.noEncode) {\n        value = encodeVars(\n        /** @type {string|?Array<string>} */\n        value);\n      }\n\n      if (value) {\n        value += argList;\n      }\n\n      return value;\n    });\n  }\n  /**\n   * @param {string} value\n   * @return {!Promise<string>}\n   */\n  ;\n\n  _proto2.hashMacro_ = function hashMacro_(value) {\n    return _services.Services.cryptoFor(this.ampdoc_.win).sha384Base64(value);\n  };\n\n  return VariableService;\n}();\n/**\n * @param {string|?Array<string>} raw The values to URI encode.\n * @return {string} The encoded value.\n */\n\n\nexports.VariableService = VariableService;\n\nfunction encodeVars(raw) {\n  if (raw == null) {\n    return '';\n  }\n\n  if ((0, _types.isArray)(raw)) {\n    return raw.map(encodeVars).join(',');\n  } // Separate out names and arguments from the value and encode the value.\n\n\n  var _getNameArgs2 = getNameArgs(String(raw)),\n      name = _getNameArgs2.name,\n      argList = _getNameArgs2.argList;\n\n  return encodeURIComponent(name) + argList;\n}\n/**\n * Returns an array containing two values: name and args parsed from the key.\n *\n * case 1) 'SOME_MACRO(abc,def)' => name='SOME_MACRO', argList='(abc,def)'\n * case 2) 'randomString' => name='randomString', argList=''\n * @param {string} key The key to be parsed.\n * @return {!FunctionNameArgsDef}\n */\n\n\nfunction getNameArgs(key) {\n  if (!key) {\n    return {\n      name: '',\n      argList: ''\n    };\n  }\n\n  var match = key.match(VARIABLE_ARGS_REGEXP);\n  (0, _log.userAssert)(match, 'Variable with invalid format found: ' + key);\n  return {\n    name: match[1] || match[0],\n    argList: match[2] || ''\n  };\n}\n/**\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n */\n\n\nfunction installVariableServiceForTesting(ampdoc) {\n  (0, _service.registerServiceBuilderForDoc)(ampdoc, 'amp-analytics-variables', VariableService);\n}\n/**\n * @param {!Element|!ShadowRoot|!../../../src/service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!VariableService}\n */\n\n\nfunction variableServiceForDoc(elementOrAmpDoc) {\n  return (0, _service.getServiceForDoc)(elementOrAmpDoc, 'amp-analytics-variables');\n}\n/**\n * @param {!Element|!ShadowRoot|!../../../src/service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!Promise<!VariableService>}\n */\n\n\nfunction variableServicePromiseForDoc(elementOrAmpDoc) {\n  return (\n    /** @type {!Promise<!VariableService>} */\n    (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'amp-analytics-variables')\n  );\n}\n/**\n * @param {string} key\n * @return {{name, argList}|!FunctionNameArgsDef}\n * @visibleForTesting\n */\n\n\nfunction getNameArgsForTesting(key) {\n  return getNameArgs(key);\n}\n/**\n * Get the resolved consent state value to send with analytics request\n * @param {!Element} element\n * @return {!Promise<?string>}\n */\n\n\nfunction getConsentStateStr(element) {\n  return (0, _consent.getConsentPolicyState)(element).then(function (consent) {\n    if (!consent) {\n      return null;\n    }\n\n    return EXTERNAL_CONSENT_POLICY_STATE_STRING[consent];\n  });\n}\n/**\n * Converts string to boolean\n * @param {string} str\n * @return {boolean}\n */\n\n\nfunction stringToBool(str) {\n  return str !== 'false' && str !== '' && str !== '0' && str !== 'null' && str !== 'NaN' && str !== 'undefined';\n}\n\n},{\"../../../src/consent\":108,\"../../../src/log\":125,\"../../../src/service\":131,\"../../../src/services\":141,\"../../../src/types\":145,\"../../../src/utils/base64\":150,\"../../../src/utils/object\":154,\"../../../src/utils/promise\":156,\"./cookie-reader\":6,\"./linker-reader\":15}],25:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.ANALYTICS_CONFIG = void 0;\n\nvar _iframeTransportVendors = require(\"./iframe-transport-vendors\");\n\nvar _mode = require(\"../../../src/mode\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _json = require(\"../../../src/json\");\n\nvar _experiments = require(\"../../../src/experiments\");\n\nvar _acquialift = require(\"./vendors/acquialift\");\n\nvar _adobeanalytics = require(\"./vendors/adobeanalytics\");\n\nvar _adobeanalytics_nativeConfig = require(\"./vendors/adobeanalytics_nativeConfig\");\n\nvar _afsanalytics = require(\"./vendors/afsanalytics\");\n\nvar _alexametrics = require(\"./vendors/alexametrics\");\n\nvar _amplitude = require(\"./vendors/amplitude\");\n\nvar _atinternet = require(\"./vendors/atinternet\");\n\nvar _baiduanalytics = require(\"./vendors/baiduanalytics\");\n\nvar _bg = require(\"./vendors/bg\");\n\nvar _burt = require(\"./vendors/burt\");\n\nvar _byside = require(\"./vendors/byside\");\n\nvar _chartbeat = require(\"./vendors/chartbeat\");\n\nvar _clicky = require(\"./vendors/clicky\");\n\nvar _colanalytics = require(\"./vendors/colanalytics\");\n\nvar _comscore = require(\"./vendors/comscore\");\n\nvar _cxense = require(\"./vendors/cxense\");\n\nvar _dynatrace = require(\"./vendors/dynatrace\");\n\nvar _epica = require(\"./vendors/epica\");\n\nvar _euleriananalytics = require(\"./vendors/euleriananalytics\");\n\nvar _facebookpixel = require(\"./vendors/facebookpixel\");\n\nvar _gemius = require(\"./vendors/gemius\");\n\nvar _googleadwords = require(\"./vendors/googleadwords\");\n\nvar _googleanalytics = require(\"./vendors/googleanalytics\");\n\nvar _gtag = require(\"./vendors/gtag\");\n\nvar _ibeatanalytics = require(\"./vendors/ibeatanalytics\");\n\nvar _infonline = require(\"./vendors/infonline\");\n\nvar _iplabel = require(\"./vendors/iplabel\");\n\nvar _keen = require(\"./vendors/keen\");\n\nvar _kenshoo = require(\"./vendors/kenshoo\");\n\nvar _krux = require(\"./vendors/krux\");\n\nvar _linkpulse = require(\"./vendors/linkpulse\");\n\nvar _lotame = require(\"./vendors/lotame\");\n\nvar _marinsoftware = require(\"./vendors/marinsoftware\");\n\nvar _mediametrie = require(\"./vendors/mediametrie\");\n\nvar _mediarithmics = require(\"./vendors/mediarithmics\");\n\nvar _mediator = require(\"./vendors/mediator\");\n\nvar _metrika = require(\"./vendors/metrika\");\n\nvar _moat = require(\"./vendors/moat\");\n\nvar _mobify = require(\"./vendors/mobify\");\n\nvar _mparticle = require(\"./vendors/mparticle\");\n\nvar _mpulse = require(\"./vendors/mpulse\");\n\nvar _navegg = require(\"./vendors/navegg\");\n\nvar _newrelic = require(\"./vendors/newrelic\");\n\nvar _nielsen = require(\"./vendors/nielsen\");\n\nvar _nielsenMarketingCloud = require(\"./vendors/nielsen-marketing-cloud\");\n\nvar _oewadirect = require(\"./vendors/oewadirect\");\n\nvar _oewa = require(\"./vendors/oewa\");\n\nvar _oracleInfinityAnalytics = require(\"./vendors/oracleInfinityAnalytics\");\n\nvar _parsely = require(\"./vendors/parsely\");\n\nvar _permutive = require(\"./vendors/permutive\");\n\nvar _piano = require(\"./vendors/piano\");\n\nvar _pinpoll = require(\"./vendors/pinpoll\");\n\nvar _piStats = require(\"./vendors/piStats\");\n\nvar _pressboard = require(\"./vendors/pressboard\");\n\nvar _quantcast = require(\"./vendors/quantcast\");\n\nvar _rakam = require(\"./vendors/rakam\");\n\nvar _reppublika = require(\"./vendors/reppublika\");\n\nvar _retargetly = require(\"./vendors/retargetly\");\n\nvar _segment = require(\"./vendors/segment\");\n\nvar _shinystat = require(\"./vendors/shinystat\");\n\nvar _simplereach = require(\"./vendors/simplereach\");\n\nvar _snowplow = require(\"./vendors/snowplow\");\n\nvar _teaanalytics = require(\"./vendors/teaanalytics\");\n\nvar _tealiumcollect = require(\"./vendors/tealiumcollect\");\n\nvar _top = require(\"./vendors/top100\");\n\nvar _topmailru = require(\"./vendors/topmailru\");\n\nvar _treasuredata = require(\"./vendors/treasuredata\");\n\nvar _umenganalytics = require(\"./vendors/umenganalytics\");\n\nvar _upscore = require(\"./vendors/upscore\");\n\nvar _vponanalytics = require(\"./vendors/vponanalytics\");\n\nvar _webengage = require(\"./vendors/webengage\");\n\nvar _webtrekk = require(\"./vendors/webtrekk\");\n\nvar _webtrekk_v = require(\"./vendors/webtrekk_v2\");\n\nvar _fake_ = require(\"./vendors/_fake_.js\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar DEFAULT_CONFIG = \"{\\\"transport\\\":{\\\"beacon\\\":true,\\\"xhrpost\\\":true,\\\"image\\\":true},\\\"vars\\\":{\\\"accessReaderId\\\":\\\"ACCESS_READER_ID\\\",\\\"ampdocHost\\\":\\\"AMPDOC_HOST\\\",\\\"ampdocHostname\\\":\\\"AMPDOC_HOSTNAME\\\",\\\"ampdocUrl\\\":\\\"AMPDOC_URL\\\",\\\"ampGeo\\\":\\\"AMP_GEO\\\",\\\"ampUserLocation\\\":\\\"AMP_USER_LOCATION\\\",\\\"ampUserLocationPoll\\\":\\\"AMP_USER_LOCATION_POLL\\\",\\\"ampState\\\":\\\"AMP_STATE\\\",\\\"ampVersion\\\":\\\"AMP_VERSION\\\",\\\"ancestorOrigin\\\":\\\"ANCESTOR_ORIGIN\\\",\\\"authdata\\\":\\\"AUTHDATA\\\",\\\"availableScreenHeight\\\":\\\"AVAILABLE_SCREEN_HEIGHT\\\",\\\"availableScreenWidth\\\":\\\"AVAILABLE_SCREEN_WIDTH\\\",\\\"backgroundState\\\":\\\"BACKGROUND_STATE\\\",\\\"browserLanguage\\\":\\\"BROWSER_LANGUAGE\\\",\\\"canonicalHost\\\":\\\"CANONICAL_HOST\\\",\\\"canonicalHostname\\\":\\\"CANONICAL_HOSTNAME\\\",\\\"canonicalPath\\\":\\\"CANONICAL_PATH\\\",\\\"canonicalUrl\\\":\\\"CANONICAL_URL\\\",\\\"clientId\\\":\\\"CLIENT_ID\\\",\\\"consentState\\\":\\\"CONSENT_STATE\\\",\\\"contentLoadTime\\\":\\\"CONTENT_LOAD_TIME\\\",\\\"cookie\\\":\\\"COOKIE\\\",\\\"counter\\\":\\\"COUNTER\\\",\\\"documentCharset\\\":\\\"DOCUMENT_CHARSET\\\",\\\"documentReferrer\\\":\\\"DOCUMENT_REFERRER\\\",\\\"domainLookupTime\\\":\\\"DOMAIN_LOOKUP_TIME\\\",\\\"domInteractiveTime\\\":\\\"DOM_INTERACTIVE_TIME\\\",\\\"externalReferrer\\\":\\\"EXTERNAL_REFERRER\\\",\\\"firstContentfulPaint\\\":\\\"FIRST_CONTENTFUL_PAINT\\\",\\\"firstViewportReady\\\":\\\"FIRST_VIEWPORT_READY\\\",\\\"fragmentParam\\\":\\\"FRAGMENT_PARAM\\\",\\\"makeBodyVisible\\\":\\\"MAKE_BODY_VISIBLE\\\",\\\"htmlAttr\\\":\\\"HTML_ATTR\\\",\\\"incrementalEngagedTime\\\":\\\"INCREMENTAL_ENGAGED_TIME\\\",\\\"navRedirectCount\\\":\\\"NAV_REDIRECT_COUNT\\\",\\\"navTiming\\\":\\\"NAV_TIMING\\\",\\\"navType\\\":\\\"NAV_TYPE\\\",\\\"pageDownloadTime\\\":\\\"PAGE_DOWNLOAD_TIME\\\",\\\"pageLoadTime\\\":\\\"PAGE_LOAD_TIME\\\",\\\"pageViewId\\\":\\\"PAGE_VIEW_ID\\\",\\\"queryParam\\\":\\\"QUERY_PARAM\\\",\\\"random\\\":\\\"RANDOM\\\",\\\"redirectTime\\\":\\\"REDIRECT_TIME\\\",\\\"resourceTiming\\\":\\\"RESOURCE_TIMING\\\",\\\"screenColorDepth\\\":\\\"SCREEN_COLOR_DEPTH\\\",\\\"screenHeight\\\":\\\"SCREEN_HEIGHT\\\",\\\"screenWidth\\\":\\\"SCREEN_WIDTH\\\",\\\"scrollHeight\\\":\\\"SCROLL_HEIGHT\\\",\\\"scrollLeft\\\":\\\"SCROLL_LEFT\\\",\\\"scrollTop\\\":\\\"SCROLL_TOP\\\",\\\"scrollWidth\\\":\\\"SCROLL_WIDTH\\\",\\\"serverResponseTime\\\":\\\"SERVER_RESPONSE_TIME\\\",\\\"sourceUrl\\\":\\\"SOURCE_URL\\\",\\\"sourceHost\\\":\\\"SOURCE_HOST\\\",\\\"sourceHostname\\\":\\\"SOURCE_HOSTNAME\\\",\\\"sourcePath\\\":\\\"SOURCE_PATH\\\",\\\"tcpConnectTime\\\":\\\"TCP_CONNECT_TIME\\\",\\\"timestamp\\\":\\\"TIMESTAMP\\\",\\\"timezone\\\":\\\"TIMEZONE\\\",\\\"timezoneCode\\\":\\\"TIMEZONE_CODE\\\",\\\"title\\\":\\\"TITLE\\\",\\\"totalEngagedTime\\\":\\\"TOTAL_ENGAGED_TIME\\\",\\\"userAgent\\\":\\\"USER_AGENT\\\",\\\"viewer\\\":\\\"VIEWER\\\",\\\"viewportHeight\\\":\\\"VIEWPORT_HEIGHT\\\",\\\"viewportWidth\\\":\\\"VIEWPORT_WIDTH\\\"}}\";\n/**\n * @const {!JsonObject}\n */\n\nvar ANALYTICS_CONFIG = // eslint-disable-next-line no-undef\nfalse ? JSON.parse(\"{\\\"default\\\":\" + DEFAULT_CONFIG + \"}\") : JSON.parse(\"{\\\"default\\\":\" + DEFAULT_CONFIG + \",\\\"acquialift\\\":\" + _acquialift.ACQUIALIFT_CONFIG + \",\\\"adobeanalytics\\\":\" + _adobeanalytics.ADOBEANALYTICS_CONFIG + \",\\\"adobeanalytics_nativeConfig\\\":\" + _adobeanalytics_nativeConfig.ADOBEANALYTICS_NATIVECONFIG_CONFIG + \",\\\"afsanalytics\\\":\" + _afsanalytics.AFSANALYTICS_CONFIG + \",\\\"alexametrics\\\":\" + _alexametrics.ALEXAMETRICS_CONFIG + \",\\\"amplitude\\\":\" + _amplitude.AMPLITUDE_CONFIG + \",\\\"atinternet\\\":\" + _atinternet.ATINTERNET_CONFIG + \",\\\"baiduanalytics\\\":\" + _baiduanalytics.BAIDUANALYTICS_CONFIG + \",\\\"bg\\\":\" + _bg.BG_CONFIG + \",\\\"burt\\\":\" + _burt.BURT_CONFIG + \",\\\"byside\\\":\" + _byside.BYSIDE_CONFIG + \",\\\"chartbeat\\\":\" + _chartbeat.CHARTBEAT_CONFIG + \",\\\"clicky\\\":\" + _clicky.CLICKY_CONFIG + \",\\\"colanalytics\\\":\" + _colanalytics.COLANALYTICS_CONFIG + \",\\\"comscore\\\":\" + _comscore.COMSCORE_CONFIG + \",\\\"cxense\\\":\" + _cxense.CXENSE_CONFIG + \",\\\"dynatrace\\\":\" + _dynatrace.DYNATRACE_CONFIG + \",\\\"epica\\\":\" + _epica.EPICA_CONFIG + \",\\\"euleriananalytics\\\":\" + _euleriananalytics.EULERIANANALYTICS_CONFIG + \",\\\"facebookpixel\\\":\" + _facebookpixel.FACEBOOKPIXEL_CONFIG + \",\\\"gemius\\\":\" + _gemius.GEMIUS_CONFIG + \",\\\"googleadwords\\\":\" + _googleadwords.GOOGLEADWORDS_CONFIG + \",\\\"googleanalytics\\\":\" + _googleanalytics.GOOGLEANALYTICS_CONFIG + \",\\\"gtag\\\":\" + _gtag.GTAG_CONFIG + \",\\\"ibeatanalytics\\\":\" + _ibeatanalytics.IBEATANALYTICS_CONFIG + \",\\\"infonline\\\":\" + _infonline.INFONLINE_CONFIG + \",\\\"iplabel\\\":\" + _iplabel.IPLABEL_CONFIG + \",\\\"keen\\\":\" + _keen.KEEN_CONFIG + \",\\\"kenshoo\\\":\" + _kenshoo.KENSHOO_CONFIG + \",\\\"krux\\\":\" + _krux.KRUX_CONFIG + \",\\\"linkpulse\\\":\" + _linkpulse.LINKPULSE_CONFIG + \",\\\"lotame\\\":\" + _lotame.LOTAME_CONFIG + \",\\\"marinsoftware\\\":\" + _marinsoftware.MARINSOFTWARE_CONFIG + \",\\\"mediametrie\\\":\" + _mediametrie.MEDIAMETRIE_CONFIG + \",\\\"mediarithmics\\\":\" + _mediarithmics.MEDIARITHMICS_CONFIG + \",\\\"mediator\\\":\" + _mediator.MEDIATOR_CONFIG + \",\\\"metrika\\\":\" + _metrika.METRIKA_CONFIG + \",\\\"moat\\\":\" + _moat.MOAT_CONFIG + \",\\\"mobify\\\":\" + _mobify.MOBIFY_CONFIG + \",\\\"mparticle\\\":\" + _mparticle.MPARTICLE_CONFIG + \",\\\"mpulse\\\":\" + _mpulse.MPULSE_CONFIG + \",\\\"navegg\\\":\" + _navegg.NAVEGG_CONFIG + \",\\\"newrelic\\\":\" + _newrelic.NEWRELIC_CONFIG + \",\\\"nielsen\\\":\" + _nielsen.NIELSEN_CONFIG + \",\\\"nielsen-marketing-cloud\\\":\" + _nielsenMarketingCloud.NIELSEN_MARKETING_CLOUD_CONFIG + \",\\\"oewa\\\":\" + _oewa.OEWA_CONFIG + \",\\\"oewadirect\\\":\" + _oewadirect.OEWADIRECT_CONFIG + \",\\\"oracleInfinityAnalytics\\\":\" + _oracleInfinityAnalytics.ORACLEINFINITYANALYTICS_CONFIG + \",\\\"parsely\\\":\" + _parsely.PARSELY_CONFIG + \",\\\"piStats\\\":\" + _piStats.PISTATS_CONFIG + \",\\\"permutive\\\":\" + _permutive.PERMUTIVE_CONFIG + \",\\\"piano\\\":\" + _piano.PIANO_CONFIG + \",\\\"pinpoll\\\":\" + _pinpoll.PINPOLL_CONFIG + \",\\\"pressboard\\\":\" + _pressboard.PRESSBOARD_CONFIG + \",\\\"quantcast\\\":\" + _quantcast.QUANTCAST_CONFIG + \",\\\"retargetly\\\":\" + _retargetly.RETARGETLY_CONFIG + \",\\\"rakam\\\":\" + _rakam.RAKAM_CONFIG + \",\\\"reppublika\\\":\" + _reppublika.REPPUBLIKA_CONFIG + \",\\\"segment\\\":\" + _segment.SEGMENT_CONFIG + \",\\\"shinystat\\\":\" + _shinystat.SHINYSTAT_CONFIG + \",\\\"simplereach\\\":\" + _simplereach.SIMPLEREACH_CONFIG + \",\\\"snowplow\\\":\" + _snowplow.SNOWPLOW_CONFIG + \",\\\"teaanalytics\\\":\" + _teaanalytics.TEAANALYTICS_CONFIG + \",\\\"tealiumcollect\\\":\" + _tealiumcollect.TEALIUMCOLLECT_CONFIG + \",\\\"top100\\\":\" + _top.TOP100_CONFIG + \",\\\"topmailru\\\":\" + _topmailru.TOPMAILRU_CONFIG + \",\\\"treasuredata\\\":\" + _treasuredata.TREASUREDATA_CONFIG + \",\\\"umenganalytics\\\":\" + _umenganalytics.UMENGANALYTICS_CONFIG + \",\\\"upscore\\\":\" + _upscore.UPSCORE_CONFIG + \",\\\"vponanalytics\\\":\" + _vponanalytics.VPONANALYTICS_CONFIG + \",\\\"webengage\\\":\" + _webengage.WEBENGAGE_CONFIG + \",\\\"webtrekk\\\":\" + _webtrekk.WEBTREKK_CONFIG + \",\\\"webtrekk_v2\\\":\" + _webtrekk_v.WEBTREKK_V2_CONFIG + \"}\"); // eslint-disable-next-line no-undef\n\nexports.ANALYTICS_CONFIG = ANALYTICS_CONFIG;\n\nif (!false) {\n  if ((0, _mode.getMode)().test || (0, _mode.getMode)().localDev) {\n    ANALYTICS_CONFIG['_fake_'] = _fake_._FAKE_;\n  }\n\n  ANALYTICS_CONFIG['infonline']['triggers']['pageview']['iframePing'] = true;\n  ANALYTICS_CONFIG['adobeanalytics_nativeConfig']['triggers']['pageLoad']['iframePing'] = true;\n  ANALYTICS_CONFIG['oewa']['triggers']['pageview']['iframePing'] = true;\n  mergeIframeTransportConfig(ANALYTICS_CONFIG, (0, _experiments.isCanary)(self) ? _iframeTransportVendors.IFRAME_TRANSPORTS_CANARY : _iframeTransportVendors.IFRAME_TRANSPORTS);\n}\n/**\n * Merges iframe transport config.\n *\n * @param {!JsonObject} config\n * @param {!JsonObject} iframeTransportConfig\n */\n\n\nfunction mergeIframeTransportConfig(config, iframeTransportConfig) {\n  for (var vendor in iframeTransportConfig) {\n    if ((0, _object.hasOwn)(iframeTransportConfig, vendor)) {\n      var url = iframeTransportConfig[vendor];\n      config[vendor]['transport'] = Object.assign({}, config[vendor]['transport'], {\n        'iframe': url\n      });\n    }\n  }\n}\n\n},{\"../../../src/experiments\":115,\"../../../src/json\":122,\"../../../src/mode\":127,\"../../../src/utils/object\":154,\"./iframe-transport-vendors\":11,\"./vendors/_fake_.js\":26,\"./vendors/acquialift\":27,\"./vendors/adobeanalytics\":28,\"./vendors/adobeanalytics_nativeConfig\":29,\"./vendors/afsanalytics\":30,\"./vendors/alexametrics\":31,\"./vendors/amplitude\":32,\"./vendors/atinternet\":33,\"./vendors/baiduanalytics\":34,\"./vendors/bg\":35,\"./vendors/burt\":36,\"./vendors/byside\":37,\"./vendors/chartbeat\":38,\"./vendors/clicky\":39,\"./vendors/colanalytics\":40,\"./vendors/comscore\":41,\"./vendors/cxense\":42,\"./vendors/dynatrace\":43,\"./vendors/epica\":44,\"./vendors/euleriananalytics\":45,\"./vendors/facebookpixel\":46,\"./vendors/gemius\":47,\"./vendors/googleadwords\":48,\"./vendors/googleanalytics\":49,\"./vendors/gtag\":50,\"./vendors/ibeatanalytics\":51,\"./vendors/infonline\":52,\"./vendors/iplabel\":53,\"./vendors/keen\":54,\"./vendors/kenshoo\":55,\"./vendors/krux\":56,\"./vendors/linkpulse\":57,\"./vendors/lotame\":58,\"./vendors/marinsoftware\":59,\"./vendors/mediametrie\":60,\"./vendors/mediarithmics\":61,\"./vendors/mediator\":62,\"./vendors/metrika\":63,\"./vendors/moat\":64,\"./vendors/mobify\":65,\"./vendors/mparticle\":66,\"./vendors/mpulse\":67,\"./vendors/navegg\":68,\"./vendors/newrelic\":69,\"./vendors/nielsen\":71,\"./vendors/nielsen-marketing-cloud\":70,\"./vendors/oewa\":72,\"./vendors/oewadirect\":73,\"./vendors/oracleInfinityAnalytics\":74,\"./vendors/parsely\":75,\"./vendors/permutive\":76,\"./vendors/piStats\":77,\"./vendors/piano\":78,\"./vendors/pinpoll\":79,\"./vendors/pressboard\":80,\"./vendors/quantcast\":81,\"./vendors/rakam\":82,\"./vendors/reppublika\":83,\"./vendors/retargetly\":84,\"./vendors/segment\":85,\"./vendors/shinystat\":86,\"./vendors/simplereach\":87,\"./vendors/snowplow\":88,\"./vendors/teaanalytics\":89,\"./vendors/tealiumcollect\":90,\"./vendors/top100\":91,\"./vendors/topmailru\":92,\"./vendors/treasuredata\":93,\"./vendors/umenganalytics\":94,\"./vendors/upscore\":95,\"./vendors/vponanalytics\":96,\"./vendors/webengage\":97,\"./vendors/webtrekk\":98,\"./vendors/webtrekk_v2\":99}],26:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports._FAKE_ = void 0;\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _FAKE_ =\n/** @type {!JsonObject} */\n{\n  'requests': {\n    'endpoint': '/analytics/fake'\n  },\n  'transport': {\n    'useBody': true\n  },\n  'triggers': {\n    'view': {\n      'on': 'visible',\n      'request': 'endpoint'\n    }\n  },\n  'configRewriter': {\n    'url': '/analytics/rewriter',\n    'varGroups': {\n      'feature1': {\n        'dr': 'DOCUMENT_REFERRER',\n        'su': 'SOURCE_URL'\n      },\n      'feature2': {\n        'name': 'cats',\n        'title': 'TITLE'\n      },\n      'alwaysOnFeature': {\n        'title2': 'TITLE',\n        'enabled': true\n      }\n    }\n  },\n  'vars': {\n    'clientId': 'CLIENT_ID(_fake_)',\n    'dataSource': 'AMP'\n  }\n};\nexports._FAKE_ = _FAKE_;\n\n},{}],27:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.ACQUIALIFT_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ACQUIALIFT_CONFIG = \"{\\\"vars\\\":{\\\"decisionApiUrl\\\":\\\"us-east-1-decisionapi.lift.acquia.com\\\",\\\"accountId\\\":\\\"xxxxxxxx\\\",\\\"siteId\\\":\\\"xxxxxxxx\\\"},\\\"transport\\\":{\\\"beacon\\\":true,\\\"xhrpost\\\":true,\\\"image\\\":false},\\\"requests\\\":{\\\"base\\\":\\\"https://${decisionApiUrl}/capture?account_id=${accountId}&site_id=${siteId}\\\",\\\"basicCapture\\\":\\\"${base}&ident=${clientId(tc_ptid)}&identsrc=amp&es=Amp&url=${canonicalUrl}&rurl=${documentReferrer}&cttl=${title}\\\",\\\"pageview\\\":\\\"${basicCapture}&en=Content View\\\",\\\"click\\\":\\\"${basicCapture}&en=Click-Through\\\"},\\\"triggers\\\":{\\\"defaultPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}}}\";\nexports.ACQUIALIFT_CONFIG = ACQUIALIFT_CONFIG;\n\n},{\"../../../../src/json\":122}],28:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.ADOBEANALYTICS_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ADOBEANALYTICS_CONFIG = \"{\\\"transport\\\":{\\\"xhrpost\\\":false,\\\"beacon\\\":false,\\\"image\\\":true},\\\"vars\\\":{\\\"pageName\\\":\\\"TITLE\\\",\\\"host\\\":\\\"\\\",\\\"reportSuites\\\":\\\"\\\",\\\"linkType\\\":\\\"o\\\",\\\"linkUrl\\\":\\\"\\\",\\\"linkName\\\":\\\"\\\"},\\\"requests\\\":{\\\"requestPath\\\":\\\"/b/ss/${reportSuites}/0/amp-1.0/s${random}\\\",\\\"basePrefix\\\":\\\"vid=z${clientId(adobe_amp_id)}&ndh=0&ce=${documentCharset}&pageName=${pageName}&g=${ampdocUrl}&r=${documentReferrer}&bh=${availableScreenHeight}&bw=${availableScreenWidth}&c=${screenColorDepth}&j=amp&s=${screenWidth}x${screenHeight}\\\",\\\"pageview\\\":\\\"https://${host}${requestPath}?${basePrefix}\\\",\\\"click\\\":\\\"https://${host}${requestPath}?${basePrefix}&pe=lnk_${linkType}&pev1=${linkUrl}&pev2=${linkName}\\\"}}\";\nexports.ADOBEANALYTICS_CONFIG = ADOBEANALYTICS_CONFIG;\n\n},{\"../../../../src/json\":122}],29:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.ADOBEANALYTICS_NATIVECONFIG_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ADOBEANALYTICS_NATIVECONFIG_CONFIG = \"{\\\"triggers\\\":{\\\"pageLoad\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"iframeMessage\\\"}}}\";\nexports.ADOBEANALYTICS_NATIVECONFIG_CONFIG = ADOBEANALYTICS_NATIVECONFIG_CONFIG;\n\n},{\"../../../../src/json\":122}],30:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.AFSANALYTICS_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar AFSANALYTICS_CONFIG = \"{\\\"vars\\\":{\\\"server\\\":\\\"www\\\",\\\"websiteid\\\":\\\"xxxxxxxx\\\",\\\"event\\\":\\\"click\\\",\\\"clicklabel\\\":\\\"clicked from AMP page\\\"},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true},\\\"requests\\\":{\\\"host\\\":\\\"//${server}.afsanalytics.com\\\",\\\"base\\\":\\\"${host}/cgi_bin/\\\",\\\"pageview\\\":\\\"${base}connect.cgi?usr=${websiteid}Pauto&js=1&amp=1&title=${title}&url=${canonicalUrl}&refer=${documentReferrer}&resolution=${screenWidth}x${screenHeight}&color=${screenColorDepth}&Tips=${random}\\\",\\\"click\\\":\\\"${base}click.cgi?usr=${websiteid}&event=${event}&exit=${clicklabel}\\\"},\\\"triggers\\\":{\\\"defaultPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}}}\";\nexports.AFSANALYTICS_CONFIG = AFSANALYTICS_CONFIG;\n\n},{\"../../../../src/json\":122}],31:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.ALEXAMETRICS_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ALEXAMETRICS_CONFIG = \"{\\\"requests\\\":{\\\"base\\\":\\\"https://${ampAtrkHost}/atrk.gif?account=${atrk_acct}&domain=${domain}\\\",\\\"pageview\\\":\\\"${base}&jsv=amp-${ampVersion}&frame_height=${viewportHeight}&frame_width=${viewportWidth}&title=${title}&time=${timestamp}&time_zone_offset=${timezone}&screen_params=${screenWidth}x${screenHeight}x${screenColorDepth}&ref_url=${documentReferrer}&host_url=${sourceUrl}&random_number=${random}&user_cookie=${clientId(__auc)}&user_cookie_flag=0&user_lang=${browserLanguage}&amp_doc_url=${ampdocUrl}\\\"},\\\"vars\\\":{\\\"atrk_acct\\\":\\\"\\\",\\\"domain\\\":\\\"\\\",\\\"ampAtrkHost\\\":\\\"certify-amp.alexametrics.com\\\"},\\\"triggers\\\":{\\\"trackPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}},\\\"transport\\\":{\\\"xhrpost\\\":false,\\\"beacon\\\":false,\\\"image\\\":true}}\";\nexports.ALEXAMETRICS_CONFIG = ALEXAMETRICS_CONFIG;\n\n},{\"../../../../src/json\":122}],32:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.AMPLITUDE_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar AMPLITUDE_CONFIG = \"{\\\"transport\\\":{\\\"beacon\\\":true,\\\"xhrpost\\\":true,\\\"useBody\\\":true,\\\"image\\\":false},\\\"vars\\\":{\\\"deviceId\\\":\\\"CLIENT_ID(amplitude_amp_id)\\\"},\\\"requests\\\":{\\\"host\\\":\\\"https://api.amplitude.com\\\",\\\"event\\\":{\\\"baseUrl\\\":\\\"${host}/amp/event\\\"}},\\\"extraUrlParams\\\":{\\\"api_key\\\":\\\"${apiKey}\\\",\\\"device_id\\\":\\\"${deviceId}\\\",\\\"library\\\":\\\"amp/${ampVersion}\\\",\\\"time\\\":\\\"${timestamp}\\\",\\\"language\\\":\\\"${browserLanguage}\\\",\\\"user_agent\\\":\\\"${userAgent}\\\"},\\\"linkers\\\":{\\\"amplitude\\\":{\\\"ids\\\":{\\\"amplitude_amp_id\\\":\\\"${deviceId}\\\"},\\\"proxyOnly\\\":false}},\\\"cookies\\\":{\\\"amplitude_amp_id\\\":{\\\"value\\\":\\\"LINKER_PARAM(amplitude, amplitude_amp_id)\\\"}}}\";\nexports.AMPLITUDE_CONFIG = AMPLITUDE_CONFIG;\n\n},{\"../../../../src/json\":122}],33:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.ATINTERNET_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ATINTERNET_CONFIG = \"{\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true},\\\"vars\\\":{\\\"pixelPath\\\":\\\"hit.xiti\\\",\\\"domain\\\":\\\".xiti.com\\\"},\\\"requests\\\":{\\\"base\\\":\\\"https://${log}${domain}/${pixelPath}?s=${site}&ts=${timestamp}&r=${screenWidth}x${screenHeight}x${screenColorDepth}&re=${availableScreenWidth}x${availableScreenHeight}\\\",\\\"suffix\\\":\\\"&medium=amp&${extraUrlParams}&ref=${documentReferrer}\\\",\\\"pageview\\\":\\\"${base}&p=${title}&s2=${level2}${suffix}\\\",\\\"click\\\":\\\"${base}&pclick=${title}&s2click=${level2}&p=${label}&s2=${level2Click}&type=click&click=${type}${suffix}\\\"}}\";\nexports.ATINTERNET_CONFIG = ATINTERNET_CONFIG;\n\n},{\"../../../../src/json\":122}],34:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.BAIDUANALYTICS_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar BAIDUANALYTICS_CONFIG = \"{\\\"requests\\\":{\\\"host\\\":\\\"https://hm.baidu.com\\\",\\\"base\\\":\\\"${host}/hm.gif?si=${token}&nv=0&st=4&v=pixel-1.0&rnd=${timestamp}\\\",\\\"pageview\\\":\\\"${base}&et=0\\\",\\\"event\\\":\\\"${base}&ep=${category}*${action}*${label}*${value}&et=4&api=8_0\\\"},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.BAIDUANALYTICS_CONFIG = BAIDUANALYTICS_CONFIG;\n\n},{\"../../../../src/json\":122}],35:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.BG_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar BG_CONFIG = \"{}\";\nexports.BG_CONFIG = BG_CONFIG;\n\n},{\"../../../../src/json\":122}],36:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.BURT_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar BURT_CONFIG = \"{\\\"vars\\\":{\\\"trackingKey\\\":\\\"ignore\\\",\\\"category\\\":\\\"\\\",\\\"subCategory\\\":\\\"\\\"},\\\"requests\\\":{\\\"host\\\":\\\"//${trackingKey}.c.richmetrics.com/\\\",\\\"base\\\":\\\"${host}imglog?e=${trackingKey}&pi=${trackingKey}|${pageViewId}|${canonicalPath}|${clientId(burt-amp-user-id)}&ui=${clientId(burt-amp-user-id)}&v=amp&ts=${timestamp}&sn=${requestCount}&\\\",\\\"pageview\\\":\\\"${base}type=page&ca=${category}&sc=${subCategory}&ln=${browserLanguage}&lr=${documentReferrer}&eu=${sourceUrl}&tz=${timezone}&pd=${scrollWidth}x${scrollHeight}&sd=${screenWidth}x${screenHeight}&wd=${availableScreenWidth}x${availableScreenHeight}&ws=${scrollLeft}x${scrollTop}\\\",\\\"pageping\\\":\\\"${base}type=pageping\\\"},\\\"triggers\\\":{\\\"pageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"},\\\"pageping\\\":{\\\"on\\\":\\\"timer\\\",\\\"timerSpec\\\":{\\\"interval\\\":15,\\\"maxTimerLength\\\":1200},\\\"request\\\":\\\"pageping\\\"}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.BURT_CONFIG = BURT_CONFIG;\n\n},{\"../../../../src/json\":122}],37:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.BYSIDE_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar BYSIDE_CONFIG = \"{\\\"vars\\\":{\\\"webcareZone\\\":\\\"webcare\\\",\\\"webcareId\\\":\\\"\\\",\\\"channel\\\":\\\"\\\",\\\"fid\\\":\\\"\\\",\\\"lang\\\":\\\"pt\\\"},\\\"requests\\\":{\\\"host\\\":\\\"//${webcareZone}.byside.com/\\\",\\\"base\\\":\\\"${host}BWA${webcareId}/amp/\\\",\\\"pageview\\\":\\\"${base}pixel.php\\\",\\\"event\\\":\\\"${base}signal.php?event_id=${eventId}&event_label=${eventLabel}&fields=${fields}\\\"},\\\"extraUrlParams\\\":{\\\"webcare_id\\\":\\\"${webcareId}\\\",\\\"bwch\\\":\\\"${channel}\\\",\\\"lang\\\":\\\"${lang}\\\",\\\"fid\\\":\\\"${fid}\\\",\\\"bwit\\\":\\\"A\\\",\\\"tuid\\\":\\\"${clientId(byside_webcare_tuid)}\\\",\\\"suid\\\":\\\"\\\",\\\"puid\\\":\\\"${pageViewId}p${timestamp}\\\",\\\"referrer\\\":\\\"${documentReferrer}\\\",\\\"page\\\":\\\"${sourceUrl}\\\",\\\"amppage\\\":\\\"${ampdocUrl}\\\",\\\"bwpt\\\":\\\"${title}\\\",\\\"bres\\\":\\\"${viewportWidth}x${viewportHeight}\\\",\\\"res\\\":\\\"${screenWidth}x${screenHeight}\\\",\\\"v\\\":\\\"v20171116a\\\",\\\"ampv\\\":\\\"${ampVersion}\\\",\\\"viewer\\\":\\\"${viewer}\\\",\\\"ua\\\":\\\"${userAgent}\\\",\\\"r\\\":\\\"${random}\\\"},\\\"triggers\\\":{\\\"pageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.BYSIDE_CONFIG = BYSIDE_CONFIG;\n\n},{\"../../../../src/json\":122}],38:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.CHARTBEAT_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar CHARTBEAT_CONFIG = \"{\\\"requests\\\":{\\\"host\\\":\\\"https://ping.chartbeat.net\\\",\\\"basePrefix\\\":\\\"/ping?h=${domain}&p=${canonicalPath}&u=${clientId(_cb)}&d=${canonicalHost}&g=${uid}&g0=${sections}&g1=${authors}&g2=${zone}&g3=${sponsorName}&g4=${contentType}&c=120&x=${scrollTop}&y=${scrollHeight}&o=${scrollWidth}&w=${viewportHeight}&j=${decayTime}&R=1&W=0&I=0&E=${totalEngagedTime}&r=${documentReferrer}&t=${pageViewId}${clientId(_cb)}&b=${pageLoadTime}&i=${title}&T=${timestamp}&tz=${timezone}&C=2\\\",\\\"baseSuffix\\\":\\\"&_\\\",\\\"interval\\\":\\\"${host}${basePrefix}${baseSuffix}\\\",\\\"anchorClick\\\":\\\"${host}${basePrefix}${baseSuffix}\\\"},\\\"triggers\\\":{\\\"trackInterval\\\":{\\\"on\\\":\\\"timer\\\",\\\"timerSpec\\\":{\\\"interval\\\":15,\\\"maxTimerLength\\\":7200},\\\"request\\\":\\\"interval\\\",\\\"vars\\\":{\\\"decayTime\\\":30}},\\\"trackAnchorClick\\\":{\\\"on\\\":\\\"click\\\",\\\"selector\\\":\\\"a\\\",\\\"request\\\":\\\"anchorClick\\\",\\\"vars\\\":{\\\"decayTime\\\":30}}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.CHARTBEAT_CONFIG = CHARTBEAT_CONFIG;\n\n},{\"../../../../src/json\":122}],39:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.CLICKY_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar CLICKY_CONFIG = \"{\\\"vars\\\":{\\\"site_id\\\":\\\"\\\"},\\\"requests\\\":{\\\"base\\\":\\\"https://in.getclicky.com/in.php?site_id=${site_id}\\\",\\\"baseSuffix\\\":\\\"&mime=${contentType}&x=${random}\\\",\\\"pageview\\\":\\\"${base}&res=${screenWidth}x${screenHeight}&lang=${browserLanguage}&secure=1&type=pageview&href=${canonicalPath}&title=${title}${baseSuffix}\\\",\\\"interval\\\":\\\"${base}&type=ping${baseSuffix}\\\"},\\\"triggers\\\":{\\\"defaultPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"},\\\"interval\\\":{\\\"on\\\":\\\"timer\\\",\\\"timerSpec\\\":{\\\"interval\\\":60,\\\"maxTimerLength\\\":600},\\\"request\\\":\\\"interval\\\"}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.CLICKY_CONFIG = CLICKY_CONFIG;\n\n},{\"../../../../src/json\":122}],40:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.COLANALYTICS_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar COLANALYTICS_CONFIG = \"{\\\"requests\\\":{\\\"host\\\":\\\"https://ase.clmbtech.com\\\",\\\"base\\\":\\\"${host}/message\\\",\\\"pageview\\\":\\\"${base}?cid=${id}&val_101=${id}&val_101=${canonicalPath}&ch=${canonicalHost}&uuid=${uid}&au=${authors}&zo=${zone}&sn=${sponsorName}&ct=${contentType}&st=${scrollTop}&sh=${scrollHeight}&dct=${decayTime}&tet=${totalEngagedTime}&dr=${documentReferrer}&plt=${pageLoadTime}&val_108=${title}&val_120=3\\\"},\\\"triggers\\\":{\\\"defaultPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.COLANALYTICS_CONFIG = COLANALYTICS_CONFIG;\n\n},{\"../../../../src/json\":122}],41:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.COMSCORE_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar COMSCORE_CONFIG = \"{\\\"vars\\\":{\\\"c2\\\":\\\"1000001\\\"},\\\"requests\\\":{\\\"host\\\":\\\"https://sb.scorecardresearch.com\\\",\\\"base\\\":\\\"${host}/b?\\\",\\\"pageview\\\":\\\"${base}c1=2&c2=${c2}&cs_amp_consent=${consentState}&cs_pv=${pageViewId}&c12=${clientId(comScore)}&rn=${random}&c8=${title}&c7=${canonicalUrl}&c9=${documentReferrer}&cs_c7amp=${ampdocUrl}\\\"},\\\"triggers\\\":{\\\"defaultPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.COMSCORE_CONFIG = COMSCORE_CONFIG;\n\n},{\"../../../../src/json\":122}],42:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.CXENSE_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar CXENSE_CONFIG = \"{\\\"requests\\\":{\\\"host\\\":\\\"https://scomcluster.cxense.com\\\",\\\"base\\\":\\\"${host}/Repo/rep.gif\\\",\\\"pageview\\\":\\\"${base}?ver=1&typ=pgv&sid=${siteId}&ckp=${clientId(cX_P)}&loc=${sourceUrl}&rnd=${random}&ref=${documentReferrer}&ltm=${timestamp}&wsz=${screenWidth}x${screenHeight}&bln=${browserLanguage}&chs=${documentCharset}&col=${screenColorDepth}&tzo=${timezone}&cp_cx_channel=amp\\\"},\\\"triggers\\\":{\\\"defaultPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.CXENSE_CONFIG = CXENSE_CONFIG;\n\n},{\"../../../../src/json\":122}],43:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.DYNATRACE_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar DYNATRACE_CONFIG = \"{\\\"requests\\\":{\\\"endpoint\\\":\\\"${protocol}://${tenant}${separator}${environment}:${port}/ampbf/${tenantpath}\\\",\\\"pageview\\\":\\\"${endpoint}?type=js&flavor=amp&v=1&a=1%7C1%7C_load_%7C_load_%7C-%7C${navTiming(navigationStart)}%7C${navTiming(domContentLoadedEventEnd)}%7C0%2C2%7C2%7C_onload_%7C_load_%7C-%7C${navTiming(domContentLoadedEventStart)}%7C${navTiming(domContentLoadedEventEnd)}%7C0&fId=${pageViewId}&vID=${clientId(rxVisitor)}&url=${sourceUrl}&title=${title}&sw=${screenWidth}&sh=${screenHeight}&w=${viewportWidth}&h=${viewportHeight}&nt=a${navType}b${navTiming(navigationStart)}c${navTiming(navigationStart,redirectStart)}d${navTiming(navigationStart,redirectEnd)}e${navTiming(navigationStart,fetchStart)}f${navTiming(navigationStart,domainLookupStart)}g${navTiming(navigationStart,domainLookupEnd)}h${navTiming(navigationStart,connectStart)}i${navTiming(navigationStart,connectEnd)}j${navTiming(navigationStart,secureConnectionStart)}k${navTiming(navigationStart,requestStart)}l${navTiming(navigationStart,responseStart)}m${navTiming(navigationStart,responseEnd)}n${navTiming(navigationStart,domLoading)}o${navTiming(navigationStart,domInteractive)}p${navTiming(navigationStart,domContentLoadedEventStart)}q${navTiming(navigationStart,domContentLoadedEventEnd)}r${navTiming(navigationStart,domComplete)}s${navTiming(navigationStart,loadEventStart)}t${navTiming(navigationStart,loadEventEnd)}&app=${app}&time=${timestamp}\\\"},\\\"triggers\\\":{\\\"trackPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true},\\\"vars\\\":{\\\"app\\\":\\\"ampapp\\\",\\\"protocol\\\":\\\"https\\\",\\\"tenant\\\":\\\"\\\",\\\"environment\\\":\\\"live.dynatrace.com\\\",\\\"port\\\":\\\"443\\\",\\\"separator\\\":\\\".\\\"}}\";\nexports.DYNATRACE_CONFIG = DYNATRACE_CONFIG;\n\n},{\"../../../../src/json\":122}],44:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.EPICA_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar EPICA_CONFIG = \"{\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true},\\\"vars\\\":{\\\"anonymousId\\\":\\\"CLIENT_ID(epica_amp_id)\\\"},\\\"requests\\\":{\\\"host\\\":\\\"https://cat.poder.io/api/v1/pixel\\\",\\\"base\\\":\\\"?writeKey=${writeKey}&context.library.name=amp&anonymousId=${anonymousId}&context.locale=${browserLanguage}&context.page.path=${canonicalPath}&context.page.url=${canonicalUrl}&context.page.referrer=${documentReferrer}&context.page.title=${title}&context.screen.width=${screenWidth}&context.screen.height=${screenHeight}\\\",\\\"page\\\":\\\"${host}/page${base}&name=${name}\\\",\\\"track\\\":\\\"${host}/track${base}&event=${event}\\\"},\\\"triggers\\\":{\\\"page\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"page\\\"}}}\";\nexports.EPICA_CONFIG = EPICA_CONFIG;\n\n},{\"../../../../src/json\":122}],45:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.EULERIANANALYTICS_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar EULERIANANALYTICS_CONFIG = \"{\\\"vars\\\":{\\\"analyticsHost\\\":\\\"\\\",\\\"documentLocation\\\":\\\"SOURCE_URL\\\"},\\\"requests\\\":{\\\"base\\\":\\\"https://${analyticsHost}\\\",\\\"basePrefix\\\":\\\"-/${random}?euid-amp=${clientId(etuix)}&url=${documentLocation}&\\\",\\\"pageview\\\":\\\"${base}/col2/${basePrefix}rf=${externalReferrer}&urlp=${pagePath}&ss=${screenWidth}x${screenHeight}&sd=${screenColorDepth}\\\",\\\"action\\\":\\\"${base}/action/${basePrefix}eact=${actionCode}&actr=${actionRef}\\\",\\\"user\\\":\\\"${base}/uparam/${basePrefix}euk${userParamKey}=${userParamVal}\\\",\\\"contextflag\\\":\\\"${base}/cflag2/${basePrefix}ecf0k=${cflagKey}&ecf0v=${cflagVal}\\\"},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.EULERIANANALYTICS_CONFIG = EULERIANANALYTICS_CONFIG;\n\n},{\"../../../../src/json\":122}],46:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.FACEBOOKPIXEL_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar FACEBOOKPIXEL_CONFIG = \"{\\\"vars\\\":{\\\"pixelId\\\":\\\"PIXEL-ID\\\"},\\\"requests\\\":{\\\"host\\\":\\\"https://www.facebook.com\\\",\\\"base\\\":\\\"${host}/tr?noscript=1\\\",\\\"pageview\\\":\\\"${base}&ev=PageView&id=${pixelId}\\\",\\\"event\\\":\\\"${base}&ev=${eventName}&id=${pixelId}&cd[content_name]=${content_name}\\\",\\\"eventViewContent\\\":\\\"${base}&ev=ViewContent&id=${pixelId}&cd[value]=${value}&cd[currency]=${currency}&cd[content_name]=${content_name}&cd[content_type]=${content_type}&cd[content_ids]=${content_ids}\\\",\\\"eventSearch\\\":\\\"${base}&ev=Search&id=${pixelId}&cd[value]=${value}&cd[currency]=${currency}&cd[content_category]=${content_category}&cd[content_ids]=${content_ids}&cd[search_string]=${search_string}\\\",\\\"eventAddToCart\\\":\\\"${base}&ev=AddToCart&id=${pixelId}&cd[value]=${value}&cd[currency]=${currency}&cd[content_name]=${content_name}&cd[content_type]=${content_type}&cd[content_ids]=${content_ids}\\\",\\\"eventAddToWishlist\\\":\\\"${base}&ev=AddToWishlist&id=${pixelId}&cd[value]=${value}&cd[currency]=${currency}&cd[content_name]=${content_name}&cd[content_category]=${content_category}&cd[content_ids]=${content_ids}\\\",\\\"eventInitiateCheckout\\\":\\\"${base}&ev=InitiateCheckout&id=${pixelId}&cd[value]=${value}&cd[currency]=${currency}&cd[content_name]=${content_name}&cd[content_category]=${content_category}&cd[num_items]=${num_items}&cd[content_ids]=${content_ids}\\\",\\\"eventAddPaymentInfo\\\":\\\"${base}&ev=AddPaymentInfo&id=${pixelId}&cd[value]=${value}&cd[currency]=${currency}&cd[content_category]=${content_category}&cd[content_ids]=${content_ids}\\\",\\\"eventPurchase\\\":\\\"${base}&ev=Purchase&id=${pixelId}&cd[value]=${value}&cd[currency]=${currency}&cd[content_name]=${content_name}&cd[content_type]=${content_type}&cd[content_ids]=${content_ids}&cd[num_items]=${num_items}\\\",\\\"eventLead\\\":\\\"${base}&ev=Lead&id=${pixelId}&cd[value]=${value}&cd[currency]=${currency}&cd[content_name]=${content_name}&cd[content_category]=${content_category}\\\",\\\"eventCompleteRegistration\\\":\\\"${base}&ev=CompleteRegistration&id=${pixelId}&cd[value]=${value}&cd[currency]=${currency}&cd[content_name]=${content_name}&cd[status]=${status}\\\"},\\\"triggers\\\":{\\\"trackPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}}}\";\nexports.FACEBOOKPIXEL_CONFIG = FACEBOOKPIXEL_CONFIG;\n\n},{\"../../../../src/json\":122}],47:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.GEMIUS_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar GEMIUS_CONFIG = \"{\\\"vars\\\":{\\\"dnt\\\":\\\"0\\\"},\\\"requests\\\":{\\\"base\\\":\\\"https://${prefix}.hit.gemius.pl/_${timestamp}/redot.gif?l=91&id=${identifier}&tz=${timezone}&col=${screenColorDepth}&screen=${screenWidth}x${screenHeight}&window=${viewportWidth}x${viewportHeight}&fr=1&href=${sourceUrl}&ref=${documentReferrer}&sarg=${canonicalUrl}&extra=gemamp%3D1%7Campid%3D${clientId(gemius)}%7C${extraparams}&nc=${dnt}\\\",\\\"pageview\\\":\\\"${base}&et=view&hsrc=1\\\",\\\"event\\\":\\\"${base}&et=action&hsrc=3\\\"},\\\"triggers\\\":{\\\"defaultPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.GEMIUS_CONFIG = GEMIUS_CONFIG;\n\n},{\"../../../../src/json\":122}],48:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.GOOGLEADWORDS_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar GOOGLEADWORDS_CONFIG = \"{\\\"requests\\\":{\\\"conversion_prefix\\\":\\\"https://www.googleadservices.com/pagead/conversion/\\\",\\\"remarketing_prefix\\\":\\\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/\\\",\\\"common_params\\\":\\\"${googleConversionId}/?cv=amp2&label=${googleConversionLabel}&random=${random}&url=${sourceUrl}&ref=${documentReferrer}&fst=${pageViewId}&num=${counter(googleadwords)}&fmt=3&async=1&u_h=${screenHeight}&u_w=${screenWidth}&u_ah=${availableScreenHeight}&u_aw=${availableScreenWidth}&u_cd=${screenColorDepth}&u_tz=${timezone}&tiba=${title}&guid=ON&script=0\\\",\\\"conversion_params\\\":\\\"value=${googleConversionValue}&currency_code=${googleConversionCurrency}&bg=${googleConversionColor}&hl=${googleConversionLanguage}\\\",\\\"conversion\\\":\\\"${conversion_prefix}${common_params}&${conversion_params}\\\",\\\"remarketing\\\":\\\"${remarketing_prefix}${common_params}\\\"},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.GOOGLEADWORDS_CONFIG = GOOGLEADWORDS_CONFIG;\n\n},{\"../../../../src/json\":122}],49:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.GOOGLEANALYTICS_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar GOOGLEANALYTICS_CONFIG = \"{\\\"vars\\\":{\\\"eventValue\\\":\\\"0\\\",\\\"documentLocation\\\":\\\"SOURCE_URL\\\",\\\"clientId\\\":\\\"CLIENT_ID(AMP_ECID_GOOGLE,,_ga)\\\",\\\"dataSource\\\":\\\"AMP\\\",\\\"anonymizeIP\\\":\\\"aip\\\",\\\"errorParam\\\":\\\"${errorName}-${errorMessage}\\\"},\\\"requests\\\":{\\\"host\\\":\\\"https://www.google-analytics.com\\\",\\\"basePrefix\\\":\\\"v=1&_v=a1&ds=${dataSource}&${anonymizeIP}&_s=${requestCount}&dt=${title}&sr=${screenWidth}x${screenHeight}&_utmht=${timestamp}&cid=${clientId}&tid=${account}&dl=${documentLocation}&dr=${externalReferrer}&sd=${screenColorDepth}&ul=${browserLanguage}&de=${documentCharset}\\\",\\\"baseSuffix\\\":\\\"&a=${pageViewId}&z=${random}\\\",\\\"pageview\\\":\\\"${host}/r/collect?${basePrefix}&t=pageview&jid=${random}&_r=1${baseSuffix}\\\",\\\"event\\\":\\\"${host}/collect?${basePrefix}&t=event&jid=&ec=${eventCategory}&ea=${eventAction}&el=${eventLabel}&ev=${eventValue}${baseSuffix}\\\",\\\"social\\\":\\\"${host}/collect?${basePrefix}&t=social&jid=&sa=${socialAction}&sn=${socialNetwork}&st=${socialTarget}${baseSuffix}\\\",\\\"timing\\\":\\\"${host}/collect?${basePrefix}&t=${timingRequestType}&jid=&plt=${pageLoadTime}&dns=${domainLookupTime}&tcp=${tcpConnectTime}&rrt=${redirectTime}&srt=${serverResponseTime}&pdt=${pageDownloadTime}&clt=${contentLoadTime}&dit=${domInteractiveTime}${baseSuffix}\\\",\\\"error\\\":\\\"${host}/collect?${basePrefix}&t=exception&exd=${errorParam}${baseSuffix}\\\"},\\\"triggers\\\":{\\\"performanceTiming\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"timing\\\",\\\"sampleSpec\\\":{\\\"sampleOn\\\":\\\"${clientId}\\\",\\\"threshold\\\":1},\\\"vars\\\":{\\\"timingRequestType\\\":\\\"timing\\\"}},\\\"adwordsTiming\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"timing\\\",\\\"enabled\\\":\\\"${queryParam(gclid)}\\\",\\\"vars\\\":{\\\"timingRequestType\\\":\\\"adtiming\\\"}},\\\"storyProgress\\\":{\\\"on\\\":\\\"story-page-visible\\\",\\\"enabled\\\":false,\\\"request\\\":\\\"event\\\",\\\"vars\\\":{\\\"eventAction\\\":\\\"story_progress\\\",\\\"eventCategory\\\":\\\"${title}\\\",\\\"eventLabel\\\":\\\"${storyPageId}\\\"}},\\\"storyEnd\\\":{\\\"on\\\":\\\"story-last-page-visible\\\",\\\"enabled\\\":false,\\\"request\\\":\\\"event\\\",\\\"vars\\\":{\\\"eventAction\\\":\\\"story_complete\\\",\\\"eventCategory\\\":\\\"${title}\\\"}}},\\\"extraUrlParamsReplaceMap\\\":{\\\"dimension\\\":\\\"cd\\\",\\\"metric\\\":\\\"cm\\\"},\\\"optout\\\":\\\"_gaUserPrefs.ioo\\\",\\\"optoutElementId\\\":\\\"__gaOptOutExtension\\\",\\\"linkers\\\":{\\\"_gl\\\":{\\\"ids\\\":{\\\"_ga\\\":\\\"${clientId}\\\"}}},\\\"cookies\\\":{\\\"_ga\\\":{\\\"value\\\":\\\"LINKER_PARAM(_gl, _ga)\\\"}}}\";\nexports.GOOGLEANALYTICS_CONFIG = GOOGLEANALYTICS_CONFIG;\n\n},{\"../../../../src/json\":122}],50:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.GTAG_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar GTAG_CONFIG = \"{\\\"configRewriter\\\":{\\\"url\\\":\\\"https://www.googletagmanager.com/gtag/amp\\\",\\\"varGroups\\\":{\\\"dns\\\":{\\\"dr\\\":\\\"DOCUMENT_REFERRER\\\",\\\"dl\\\":\\\"SOURCE_URL\\\"},\\\"conversion\\\":{\\\"gclsrc\\\":\\\"QUERY_PARAM(gclsrc)\\\",\\\"hasGcl\\\":\\\"$IF(QUERY_PARAM(gclid), 1, 0)\\\",\\\"hasDcl\\\":\\\"$IF(QUERY_PARAM(dclid), 1, 0)\\\",\\\"hasExtRef\\\":\\\"$IF(EXTERNAL_REFERRER, 1, 0)\\\",\\\"hasDocRef\\\":\\\"$IF(DOCUMENT_REFERRER, 1, 0)\\\",\\\"enabled\\\":true}}},\\\"vars\\\":{\\\"eventValue\\\":\\\"0\\\",\\\"clientId\\\":\\\"CLIENT_ID(AMP_ECID_GOOGLE,,_ga)\\\",\\\"dataSource\\\":\\\"AMP\\\",\\\"anonymizeIP\\\":\\\"aip\\\",\\\"errorParam\\\":\\\"${errorName}-${errorMessage}\\\"},\\\"requests\\\":{\\\"uaHost\\\":\\\"https://www.google-analytics.com\\\",\\\"uaBasePrefix\\\":\\\"v=1&_v=a1&ds=${dataSource}&${anonymizeIP}&_s=${requestCount}&dt=${title}&sr=${screenWidth}x${screenHeight}&cid=${clientId}&tid=${trackingId}&dl=${sourceUrl}&dr=${externalReferrer}&sd=${screenColorDepth}&ul=${browserLanguage}&de=${documentCharset}\\\",\\\"uaBaseSuffix\\\":\\\"&a=${pageViewId}&z=${random}\\\",\\\"uaPageviewCommon\\\":\\\"&t=pageview&jid=${random}&gjid=${random}&_r=1\\\",\\\"uaPageview\\\":\\\"${uaHost}/r/collect?${uaBasePrefix}${uaPageviewCommon}${uaBaseSuffix}\\\",\\\"uaPageviewNpa\\\":\\\"${uaHost}/collect?${uaBasePrefix}${uaPageviewCommon}${uaBaseSuffix}\\\",\\\"uaEvent\\\":\\\"${uaHost}/collect?${uaBasePrefix}&t=event&jid=${uaBaseSuffix}\\\",\\\"uaTiming\\\":\\\"${uaHost}/collect?${uaBasePrefix}&jid=&plt=${pageLoadTime}&dns=${domainLookupTime}&tcp=${tcpConnectTime}&rrt=${redirectTime}&srt=${serverResponseTime}&pdt=${pageDownloadTime}&clt=${contentLoadTime}&dit=${domInteractiveTime}${uaBaseSuffix}\\\",\\\"uaError\\\":\\\"${uaHost}/collect?${uaBasePrefix}&t=exception&exd=${errorParam}${uaBaseSuffix}\\\",\\\"awConversionPrefix\\\":\\\"https://www.googleadservices.com/pagead/conversion/\\\",\\\"awRemarketingPrefix\\\":\\\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/\\\",\\\"awCommonParams\\\":\\\"${conversionId}/?cv=amp3&label=${conversionLabel}&random=${random}&url=${sourceUrl}&ref=${documentReferrer}&fst=${pageViewId}&num=${counter(googleadwords)}&fmt=3&async=1&u_h=${screenHeight}&u_w=${screenWidth}&u_ah=${availableScreenHeight}&u_aw=${availableScreenWidth}&u_cd=${screenColorDepth}&u_tz=${timezone}&tiba=${title}&guid=ON&script=0\\\",\\\"awConversion\\\":\\\"${awConversionPrefix}${awCommonParams}\\\",\\\"awRemarketing\\\":\\\"${awRemarketingPrefix}${awCommonParams}\\\",\\\"flBase\\\":\\\"https://ad.doubleclick.net/activity;src=${flSrc};type=${flType};cat=${flCat}\\\",\\\"flDynamicBase\\\":\\\"https://${flSrc}.fls.doubleclick.net/activityi;src=${flSrc};type=${flType};cat=${flCat}\\\",\\\"dnsBase\\\":\\\"https://ad.doubleclick.net/ddm/clk/\\\"},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.GTAG_CONFIG = GTAG_CONFIG;\n\n},{\"../../../../src/json\":122}],51:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.IBEATANALYTICS_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar IBEATANALYTICS_CONFIG = \"{\\\"requests\\\":{\\\"host\\\":\\\"https://ibeat.indiatimes.com\\\",\\\"base\\\":\\\"https://ibeat.indiatimes.com/iBeat/pageTrendlogAmp.html\\\",\\\"pageview\\\":\\\"${base}?&h=${h}&d=${h}&url=${url}&k=${key}&ts=${time}&ch=${channel}&sid=${uid}&at=${agentType}&ref=${documentReferrer}&aid=${aid}&loc=1&ct=1&cat=${cat}&scat=${scat}&ac=1&tg=${tags}&ctids=${catIds}&pts=${pagePublishTime}&auth=${author}&pos=${position}&iBeatField=${ibeatFields}&cid=${clientId(MSCSAuthDetails)}\\\"},\\\"triggers\\\":{\\\"defaultPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}}}\";\nexports.IBEATANALYTICS_CONFIG = IBEATANALYTICS_CONFIG;\n\n},{\"../../../../src/json\":122}],52:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.INFONLINE_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar INFONLINE_CONFIG = \"{\\\"vars\\\":{\\\"sv\\\":\\\"ke\\\",\\\"ap\\\":\\\"1\\\"},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true},\\\"requests\\\":{\\\"pageview\\\":\\\"${url}?st=${st}&sv=${sv}&ap=${ap}&co=${co}&cp=${cp}&ps=${ps}&host=${canonicalHost}&path=${canonicalPath}\\\"},\\\"triggers\\\":{\\\"pageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}}}\";\nexports.INFONLINE_CONFIG = INFONLINE_CONFIG;\n\n},{\"../../../../src/json\":122}],53:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.IPLABEL_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar IPLABEL_CONFIG = \"{\\\"requests\\\":{\\\"collectorUrl\\\":\\\"m.col.ip-label.net\\\",\\\"endpoint\\\":\\\"https://${collectorUrl}/coll/\\\",\\\"onload\\\":\\\"${endpoint}?T=${trackerId}&m=2502|${navTiming(navigationStart)}|2508|${navTiming(domainLookupStart)}|2509|${navTiming(domainLookupEnd)}|2510|${navTiming(connectStart)}|2512|${navTiming(connectEnd)}|2514|${navTiming(responseStart)}|2515|${navTiming(responseEnd)}|2517|${navTiming(domInteractive)}|2520|${navTiming(loadEventStart)}&ts=${timestamp}&ua=${userAgent}&d=${ipldim}&i=${clientip}&d[1]=${customdim}&d[2]=${business}&d[3]=${abtesting}&d[4]=${infrastructure}&d[5]=${customer}&u=${urlgroup}&w=${availableScreenWidth}&h=${availableScreenHeight}&r=${documentReferrer}&l=${browserLanguage}\\\"},\\\"triggers\\\":{\\\"trackPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"onload\\\"}},\\\"transport\\\":{\\\"beacon\\\":true,\\\"xhrpost\\\":true,\\\"image\\\":{\\\"suppressWarnings\\\":true}},\\\"vars\\\":{\\\"trackerId\\\":\\\"notrackerID\\\",\\\"customdim\\\":\\\"\\\",\\\"business\\\":\\\"\\\",\\\"abtesting\\\":\\\"\\\",\\\"infrastructure\\\":\\\"\\\",\\\"customer\\\":\\\"\\\",\\\"clientip\\\":\\\"\\\",\\\"urlgroup\\\":\\\"\\\"}}\";\nexports.IPLABEL_CONFIG = IPLABEL_CONFIG;\n\n},{\"../../../../src/json\":122}],54:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.KEEN_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS-IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar KEEN_CONFIG = \"{\\\"requests\\\":{\\\"base\\\":\\\"https://api.keen.io/3.0/projects/${projectId}/events\\\",\\\"pageview\\\":\\\"${base}/pageviews?api_key=${writeKey}\\\",\\\"click\\\":\\\"${base}/clicks?api_key=${writeKey}\\\",\\\"custom\\\":\\\"${base}/${collection}?api_key=${writeKey}\\\"},\\\"triggers\\\":{\\\"trackPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}},\\\"extraUrlParams\\\":{\\\"amp\\\":true,\\\"ampdocHostname\\\":\\\"${ampdocHostname}\\\",\\\"ampdocUrl\\\":\\\"${ampdocUrl}\\\",\\\"ampVersion\\\":\\\"${ampVersion}\\\",\\\"backgroundState\\\":\\\"${backgroundState}\\\",\\\"backgroundedAtStart\\\":\\\"${backgroundedAtStart}\\\",\\\"browserLanguage\\\":\\\"${browserLanguage}\\\",\\\"canonicalHost\\\":\\\"${canonicalHost}\\\",\\\"canonicalHostname\\\":\\\"${canonicalHostname}\\\",\\\"canonicalPath\\\":\\\"${canonicalPath}\\\",\\\"canonicalUrl\\\":\\\"${canonicalUrl}\\\",\\\"clientId\\\":\\\"CLIENT_ID(cid)\\\",\\\"contentLoadTime\\\":\\\"${contentLoadTime}\\\",\\\"documentReferrer\\\":\\\"${documentReferrer}\\\",\\\"domainLookupTime\\\":\\\"${domainLookupTime}\\\",\\\"domInteractiveTime\\\":\\\"${domInteractiveTime}\\\",\\\"externalReferrer\\\":\\\"${externalReferrer}\\\",\\\"incrementalEngagedTime\\\":\\\"${incrementalEngagedTime}\\\",\\\"pageDownloadTime\\\":\\\"${pageDownloadTime}\\\",\\\"pageLoadTime\\\":\\\"${pageLoadTime}\\\",\\\"screenHeight\\\":\\\"${screenHeight}\\\",\\\"screenWidth\\\":\\\"${screenWidth}\\\",\\\"screenColorDepth\\\":\\\"${screenColorDepth}\\\",\\\"scrollHeight\\\":\\\"${scrollHeight}\\\",\\\"scrollWidth\\\":\\\"${scrollWidth}\\\",\\\"scrollTop\\\":\\\"${scrollTop}\\\",\\\"scrollLeft\\\":\\\"${scrollLeft}\\\",\\\"serverResponseTime\\\":\\\"${serverResponseTime}\\\",\\\"timestamp\\\":\\\"${timestamp}\\\",\\\"timezone\\\":\\\"${timezone}\\\",\\\"title\\\":\\\"${title}\\\",\\\"totalEngagedTime\\\":\\\"${totalEngagedTime}\\\",\\\"totalTime\\\":\\\"${totalTime}\\\",\\\"userAgent\\\":\\\"${userAgent}\\\",\\\"viewportHeight\\\":\\\"${viewportHeight}\\\",\\\"viewportWidth\\\":\\\"${viewportWidth}\\\"},\\\"transport\\\":{\\\"beacon\\\":true,\\\"xhrpost\\\":true,\\\"img\\\":false,\\\"useBody\\\":true}}\";\nexports.KEEN_CONFIG = KEEN_CONFIG;\n\n},{\"../../../../src/json\":122}],55:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.KENSHOO_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar KENSHOO_CONFIG = \"{\\\"vars\\\":{\\\"clientId\\\":\\\"CLIENT_ID(ken_amp_id)\\\",\\\"channelClickId\\\":\\\"QUERY_PARAM(gclid)\\\"},\\\"requests\\\":{\\\"host\\\":\\\"https://amp.xg4ken.com\\\",\\\"parameters\\\":\\\"ampcid=${clientId}&chcid=${channelClickId}&tid=${tid}&uid=${userId}&domain=${canonicalHostname}\\\",\\\"landingPage\\\":\\\"${host}/amp/v1/match?${parameters}\\\"},\\\"triggers\\\":{\\\"trackLandingPage\\\":{\\\"enabled\\\":\\\"QUERY_PARAM(gclid)\\\",\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"landingPage\\\"}},\\\"linkers\\\":{\\\"linker\\\":{\\\"ids\\\":{\\\"clientId\\\":\\\"${clientId}\\\",\\\"channelClickId\\\":\\\"${channelClickId}\\\"},\\\"proxyOnly\\\":false,\\\"enabled\\\":true}},\\\"cookies\\\":{\\\"enabled\\\":true,\\\"ken_gclid\\\":{\\\"value\\\":\\\"QUERY_PARAM(gclid)\\\"},\\\"ken_amp_gclid\\\":{\\\"value\\\":\\\"QUERY_PARAM(gclid)\\\"}}}\";\nexports.KENSHOO_CONFIG = KENSHOO_CONFIG;\n\n},{\"../../../../src/json\":122}],56:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.KRUX_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar KRUX_CONFIG = \"{\\\"requests\\\":{\\\"beaconHost\\\":\\\"https://beacon.krxd.net\\\",\\\"timing\\\":\\\"t_navigation_type=0&t_dns=${domainLookupTime}&t_tcp=${tcpConnectTime}&t_http_request=${serverResponseTime}&t_http_response=${pageDownloadTime}&t_content_ready=${contentLoadTime}&t_window_load=${pageLoadTime}&t_redirect=${redirectTime}\\\",\\\"common\\\":\\\"source=amp&confid=${confid}&_kpid=${pubid}&_kcp_s=${site}&_kcp_sc=${section}&_kcp_ssc=${subsection}&_kcp_d=${canonicalHost}&_kpref_=${documentReferrer}&_kua_kx_amp_client_id=${clientId(_kuid_)}&_kua_kx_lang=${browserLanguage}&_kua_kx_tech_browser_language=${browserLanguage}&_kua_kx_tz=${timezone}\\\",\\\"pageview\\\":\\\"${beaconHost}/pixel.gif?${common}&${timing}\\\",\\\"event\\\":\\\"${beaconHost}/event.gif?${common}&${timing}&pageview=false\\\"},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true},\\\"extraUrlParamsReplaceMap\\\":{\\\"user.\\\":\\\"_kua_\\\",\\\"page.\\\":\\\"_kpa_\\\"}}\";\nexports.KRUX_CONFIG = KRUX_CONFIG;\n\n},{\"../../../../src/json\":122}],57:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.LINKPULSE_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar LINKPULSE_CONFIG = \"{\\\"vars\\\":{\\\"id\\\":\\\"\\\",\\\"pageUrl\\\":\\\"CANONICAL_URL\\\",\\\"title\\\":\\\"TITLE\\\",\\\"section\\\":\\\"\\\",\\\"channel\\\":\\\"amp\\\",\\\"type\\\":\\\"\\\",\\\"host\\\":\\\"pp.lp4.io\\\",\\\"empty\\\":\\\"\\\"},\\\"requests\\\":{\\\"base\\\":\\\"https://${host}\\\",\\\"pageview\\\":\\\"${base}/p?i=${id}&r=${documentReferrer}&p=${pageUrl}&s=${section}&t=${type}&c=${channel}&mt=${title}&_t=amp&_r=${random}\\\",\\\"pageload\\\":\\\"${base}/pl?i=${id}&ct=${domInteractiveTime}&rt=${pageDownloadTime}&pt=${pageLoadTime}&p=${pageUrl}&c=${channel}&t=${type}&s=${section}&_t=amp&_r=${random}\\\",\\\"ping\\\":\\\"${base}/u?i=${id}&u=${clientId(_lp4_u)}&p=${pageUrl}&uActive=true&isPing=yes&c=${channel}&t=${type}&s=${section}&_t=amp&_r=${random}\\\"},\\\"triggers\\\":{\\\"pageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"},\\\"pageload\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageload\\\"},\\\"ping\\\":{\\\"on\\\":\\\"timer\\\",\\\"timerSpec\\\":{\\\"interval\\\":30,\\\"maxTimerLength\\\":7200},\\\"request\\\":\\\"ping\\\"}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.LINKPULSE_CONFIG = LINKPULSE_CONFIG;\n\n},{\"../../../../src/json\":122}],58:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.LOTAME_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar LOTAME_CONFIG = \"{\\\"requests\\\":{\\\"pageview\\\":\\\"https://bcp.crwdcntrl.net/amp?c=${account}&pv=y\\\"},\\\"triggers\\\":{\\\"track pageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.LOTAME_CONFIG = LOTAME_CONFIG;\n\n},{\"../../../../src/json\":122}],59:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.MARINSOFTWARE_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar MARINSOFTWARE_CONFIG = \"{\\\"requests\\\":{\\\"base\\\":\\\"https://tracker.marinsm.com/tp\\\",\\\"baseParams\\\":\\\"cid=${trackerId}&ampVersion=${ampVersion}&ds=AMP&ref=${externalReferrer}&page=${sourceUrl}&uuid=${clientId(marin_amp_id)}&rnd=${random}\\\",\\\"pageView\\\":\\\"${base}?${baseParams}&act=1\\\",\\\"conversion\\\":\\\"${base}?${baseParams}&act=2&trans=UTM:I|${orderId}|${marinConversionType}|${productName}|${category}|${price}|${quantity}\\\"},\\\"transport\\\":{\\\"beacon\\\":true,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.MARINSOFTWARE_CONFIG = MARINSOFTWARE_CONFIG;\n\n},{\"../../../../src/json\":122}],60:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.MEDIAMETRIE_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar MEDIAMETRIE_CONFIG = \"{\\\"requests\\\":{\\\"host\\\":\\\"https://prof.estat.com/m/web\\\",\\\"pageview\\\":\\\"${host}/${serial}?c=${level1}&dom=${ampdocUrl}&enc=${documentCharset}&l3=${level3}&l4=${level4}&n=${random}&p=${level2}&r=${documentReferrer}&sch=${screenHeight}&scw=${screenWidth}&tn=amp&v=1&vh=${availableScreenHeight}&vw=${availableScreenWidth}\\\"},\\\"triggers\\\":{\\\"trackPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.MEDIAMETRIE_CONFIG = MEDIAMETRIE_CONFIG;\n\n},{\"../../../../src/json\":122}],61:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.MEDIARITHMICS_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar MEDIARITHMICS_CONFIG = \"{\\\"vars\\\":{\\\"domain\\\":\\\"events.mediarithmics.com\\\",\\\"url\\\":\\\"SOURCE_URL\\\",\\\"event_name\\\":\\\"$page_view\\\",\\\"referrer\\\":\\\"DOCUMENT_REFERRER\\\"},\\\"requests\\\":{\\\"host\\\":\\\"https://${domain}\\\",\\\"pageview\\\":\\\"${host}/v1/visits/pixel?$site_token=${site_token}&$url=${url}&$ev=${event_name}&$referrer=${referrer}\\\"},\\\"triggers\\\":{\\\"trackPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.MEDIARITHMICS_CONFIG = MEDIARITHMICS_CONFIG;\n\n},{\"../../../../src/json\":122}],62:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.MEDIATOR_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar MEDIATOR_CONFIG = \"{\\\"requests\\\":{\\\"host\\\":\\\"//collector.mediator.media/script/${mediator_id}/amp/\\\",\\\"renderstart\\\":\\\"${host}init/?url=${canonicalUrl}\\\",\\\"prefix\\\":\\\"${host}register/?url=${canonicalUrl}&ref=${documentReferrer}&\\\",\\\"suffix\\\":\\\"vh=${viewportHeight}&sh=${scrollHeight}&st=${scrollTop}\\\",\\\"pageview\\\":\\\"${prefix}e=v\\\",\\\"timer\\\":\\\"${prefix}e=t&${suffix}\\\",\\\"s0\\\":\\\"${prefix}e=s0\\\",\\\"s1\\\":\\\"${prefix}e=s1\\\",\\\"s2\\\":\\\"${prefix}e=s2\\\",\\\"s3\\\":\\\"${prefix}e=s3\\\"},\\\"vars\\\":{\\\"mediator_id\\\":\\\"\\\"},\\\"triggers\\\":{\\\"renderStart\\\":{\\\"on\\\":\\\"render-start\\\",\\\"request\\\":\\\"renderstart\\\"},\\\"trackPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"},\\\"scrollPing0\\\":{\\\"on\\\":\\\"scroll\\\",\\\"scrollSpec\\\":{\\\"verticalBoundaries\\\":[5]},\\\"request\\\":\\\"s0\\\"},\\\"scrollPing1\\\":{\\\"on\\\":\\\"scroll\\\",\\\"scrollSpec\\\":{\\\"verticalBoundaries\\\":[35]},\\\"request\\\":\\\"s1\\\"},\\\"scrollPing2\\\":{\\\"on\\\":\\\"scroll\\\",\\\"scrollSpec\\\":{\\\"verticalBoundaries\\\":[65]},\\\"request\\\":\\\"s2\\\"},\\\"scrollPing3\\\":{\\\"on\\\":\\\"scroll\\\",\\\"scrollSpec\\\":{\\\"verticalBoundaries\\\":[95]},\\\"request\\\":\\\"s3\\\"},\\\"pageTimer\\\":{\\\"on\\\":\\\"timer\\\",\\\"timerSpec\\\":{\\\"interval\\\":5,\\\"maxTimerLength\\\":600,\\\"immediate\\\":false},\\\"request\\\":\\\"timer\\\"}}}\";\nexports.MEDIATOR_CONFIG = MEDIATOR_CONFIG;\n\n},{\"../../../../src/json\":122}],63:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.METRIKA_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar METRIKA_CONFIG = \"{\\\"transport\\\":{\\\"beacon\\\":true,\\\"xhrpost\\\":true,\\\"image\\\":false},\\\"requests\\\":{\\\"pageview\\\":\\\"${_watch}?browser-info=${_brInfo}&${_siteInfo}&${_suffix}\\\",\\\"notBounce\\\":\\\"${_watch}?browser-info=ar%3A1%3Anb%3A1%3A${_brInfo}&${_suffix}\\\",\\\"externalLink\\\":\\\"${_watch}?browser-info=ln%3A1%3A${_brInfo}&${_suffix}\\\",\\\"reachGoal\\\":\\\"${_watch}?browser-info=ar%3A1%3A${_brInfo}&${_siteInfo}&${_goalSuffix}\\\",\\\"_domain\\\":\\\"https://mc.yandex.ru\\\",\\\"_watch\\\":\\\"${_domain}/watch/${counterId}\\\",\\\"_suffix\\\":\\\"page-url=${sourceUrl}&page-ref=${documentReferrer}\\\",\\\"_goalSuffix\\\":\\\"page-url=goal%3A%2F%2F${sourceHost}%2F${goalId}&page-ref=${sourceUrl}\\\",\\\"_techInfo\\\":\\\"amp%3A1%3Az%3A${timezone}%3Ai%3A${timestamp}%3Arn%3A${random}%3Ala%3A${browserLanguage}%3Aen%3A${documentCharset}%3Arqn%3A${requestCount}%3As%3A${screenWidth}x${screenHeight}x${screenColorDepth}%3Aw%3A${availableScreenWidth}x${availableScreenHeight}%3Ads%3A${_timings}%3Auid%3A${clientId(_ym_uid)}%3Apvid%3A${pageViewId}\\\",\\\"_timings\\\":\\\"${domainLookupTime}%2C${tcpConnectTime}%2C${serverResponseTime}%2C${pageDownloadTime}%2C${redirectTime}%2C${navTiming(redirectStart,redirectEnd)}%2C${navRedirectCount}%2C${navTiming(domLoading,domInteractive)}%2C${navTiming(domContentLoadedEventStart,domContentLoadedEventEnd)}%2C${navTiming(navigationStart,domComplete)}%2C${pageLoadTime}%2C${navTiming(loadEventStart,loadEventEnd)}%2C${contentLoadTime}\\\",\\\"_brInfo\\\":\\\"${_techInfo}%3A${_title}\\\",\\\"_title\\\":\\\"t%3A${title}\\\",\\\"_siteInfo\\\":\\\"site-info=${yaParams}\\\"},\\\"triggers\\\":{\\\"pageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}}}\";\nexports.METRIKA_CONFIG = METRIKA_CONFIG;\n\n},{\"../../../../src/json\":122}],64:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.MOAT_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar load = \"\\\"{\\\\\\\"type\\\\\\\":\\\\\\\"load\\\\\\\",\\\\\\\"pcode\\\\\\\":\\\\\\\"${pcode}\\\\\\\",\\\\\\\"l0t\\\\\\\":\\\\\\\"${l0t}\\\\\\\",\\\\\\\"acctType\\\\\\\":\\\\\\\"${acctType}\\\\\\\",\\\\\\\"adType\\\\\\\":\\\\\\\"${adType}\\\\\\\",\\\\\\\"qs\\\\\\\":\\\\\\\"${qs}\\\\\\\",\\\\\\\"element\\\\\\\":{\\\\\\\"src\\\\\\\":\\\\\\\"${htmlAttr(img,src,width)}\\\\\\\",\\\\\\\"viewer\\\\\\\":\\\\\\\"${viewer}\\\\\\\"},\\\\\\\"document\\\\\\\":{\\\\\\\"AMPDocumentHostname\\\\\\\":\\\\\\\"${ampdocHostname}\\\\\\\",\\\\\\\"AMPDocumentURL\\\\\\\":\\\\\\\"${ampdocUrl}\\\\\\\",\\\\\\\"canonicalHost\\\\\\\":\\\\\\\"${canonicalHost}\\\\\\\",\\\\\\\"canonicalHostname\\\\\\\":\\\\\\\"${canonicalHostname}\\\\\\\",\\\\\\\"canonicalPath\\\\\\\":\\\\\\\"${canonicalPath}\\\\\\\",\\\\\\\"canonicalURL\\\\\\\":\\\\\\\"${canonicalUrl}\\\\\\\",\\\\\\\"documentCharset\\\\\\\":\\\\\\\"${documentCharset}\\\\\\\",\\\\\\\"documentReferrer\\\\\\\":\\\\\\\"${documentReferrer}\\\\\\\",\\\\\\\"externalReferrer\\\\\\\":\\\\\\\"${externalReferrer}\\\\\\\",\\\\\\\"sourceURL\\\\\\\":\\\\\\\"${sourceUrl}\\\\\\\",\\\\\\\"sourceHost\\\\\\\":\\\\\\\"${sourceHost}\\\\\\\",\\\\\\\"sourceHostname\\\\\\\":\\\\\\\"${sourceHostname}\\\\\\\",\\\\\\\"sourcePath\\\\\\\":\\\\\\\"${sourcePath}\\\\\\\",\\\\\\\"title\\\\\\\":\\\\\\\"${title}\\\\\\\",\\\\\\\"viewer\\\\\\\":\\\\\\\"${viewer}\\\\\\\"},\\\\\\\"device\\\\\\\":{\\\\\\\"availableScreenHeight\\\\\\\":\\\\\\\"${availableScreenHeight}\\\\\\\",\\\\\\\"availableScreenWidth\\\\\\\":\\\\\\\"${availableScreenWidth}\\\\\\\",\\\\\\\"browserLanguage\\\\\\\":\\\\\\\"${browserLanguage}\\\\\\\",\\\\\\\"screenColorDepth\\\\\\\":\\\\\\\"${screenColorDepth}\\\\\\\",\\\\\\\"screenHeight\\\\\\\":\\\\\\\"${screenHeight}\\\\\\\",\\\\\\\"screenWidth\\\\\\\":\\\\\\\"${screenWidth}\\\\\\\",\\\\\\\"scrollHeight\\\\\\\":\\\\\\\"${scrollHeight}\\\\\\\",\\\\\\\"scrollWidth\\\\\\\":\\\\\\\"${scrollWidth}\\\\\\\",\\\\\\\"scrollLeft\\\\\\\":\\\\\\\"${scrollLeft}\\\\\\\",\\\\\\\"scrollTop\\\\\\\":\\\\\\\"${scrollTop}\\\\\\\",\\\\\\\"timezone\\\\\\\":\\\\\\\"${timezone}\\\\\\\",\\\\\\\"userAgent\\\\\\\":\\\\\\\"${userAgent}\\\\\\\",\\\\\\\"viewportHeight\\\\\\\":\\\\\\\"${viewportHeight}\\\\\\\",\\\\\\\"viewportWidth\\\\\\\":\\\\\\\"${viewportWidth}\\\\\\\"},\\\\\\\"requestCount\\\\\\\":\\\\\\\"${requestCount}\\\\\\\",\\\\\\\"timeStamp\\\\\\\":\\\\\\\"${timestamp}\\\\\\\"}\\\"\";\nvar unload = \"\\\"{\\\\\\\"type\\\\\\\":\\\\\\\"unload\\\\\\\",\\\\\\\"pcode\\\\\\\":\\\\\\\"${pcode}\\\\\\\",\\\\\\\"l0t\\\\\\\":\\\\\\\"${l0t}\\\\\\\",\\\\\\\"requestCount\\\\\\\":\\\\\\\"${requestCount}\\\\\\\",\\\\\\\"timeStamp\\\\\\\":\\\\\\\"${timestamp}\\\\\\\"}\\\"\";\nvar click = \"\\\"{\\\\\\\"type\\\\\\\":\\\\\\\"click\\\\\\\",\\\\\\\"pcode\\\\\\\":\\\\\\\"${pcode}\\\\\\\",\\\\\\\"l0t\\\\\\\":\\\\\\\"${l0t}\\\\\\\",\\\\\\\"requestCount\\\\\\\":\\\\\\\"${requestCount}\\\\\\\",\\\\\\\"timeStamp\\\\\\\":\\\\\\\"${timestamp}\\\\\\\"}\\\"\";\nvar viewability = \"\\\"{\\\\\\\"type\\\\\\\":\\\\\\\"viewability\\\\\\\",\\\\\\\"pcode\\\\\\\":\\\\\\\"${pcode}\\\\\\\",\\\\\\\"l0t\\\\\\\":\\\\\\\"${l0t}\\\\\\\",\\\\\\\"backgroundState\\\\\\\":\\\\\\\"${backgroundState}\\\\\\\",\\\\\\\"intersectionRect\\\\\\\":\\\\\\\"${intersectionRect}\\\\\\\",\\\\\\\"intersectionRatio\\\\\\\":\\\\\\\"${intersectionRatio}\\\\\\\",\\\\\\\"maxVisiblePercentage\\\\\\\":\\\\\\\"${maxVisiblePercentage}\\\\\\\",\\\\\\\"minVisiblePercentage\\\\\\\":\\\\\\\"${minVisiblePercentage}\\\\\\\",\\\\\\\"x\\\\\\\":\\\\\\\"${elementX}\\\\\\\",\\\\\\\"y\\\\\\\":\\\\\\\"${elementY}\\\\\\\",\\\\\\\"height\\\\\\\":\\\\\\\"${elementHeight}\\\\\\\",\\\\\\\"width\\\\\\\":\\\\\\\"${elementWidth}\\\\\\\",\\\\\\\"viewportHeight\\\\\\\":\\\\\\\"${viewportHeight}\\\\\\\",\\\\\\\"viewportWidth\\\\\\\":\\\\\\\"${viewportWidth}\\\\\\\",\\\\\\\"opacity\\\\\\\":\\\\\\\"${opacity}\\\\\\\",\\\\\\\"timeStamp\\\\\\\":\\\\\\\"${timestamp}\\\\\\\",\\\\\\\"requestCount\\\\\\\":\\\\\\\"${requestCount}\\\\\\\"}\\\"\";\nvar iframe = \"\\\"{\\\\\\\"type\\\\\\\":\\\\\\\"iframe\\\\\\\",\\\\\\\"pcode\\\\\\\":\\\\\\\"${pcode}\\\\\\\",\\\\\\\"height\\\\\\\":\\\\\\\"${elementHeight}\\\\\\\",\\\\\\\"width\\\\\\\":\\\\\\\"${elementWidth}\\\\\\\",\\\\\\\"x\\\\\\\":\\\\\\\"${elementX}\\\\\\\",\\\\\\\"y\\\\\\\":\\\\\\\"${elementY}\\\\\\\",\\\\\\\"requestCount\\\\\\\":\\\\\\\"${requestCount}\\\\\\\"}\\\"\";\nvar MOAT_CONFIG = \"{\\\"vars\\\":{\\\"element\\\":\\\":root\\\"},\\\"requests\\\":{\\\"load\\\":\" + load + \",\\\"unload\\\":\" + unload + \",\\\"click\\\":\" + click + \",\\\"viewability\\\":\" + viewability + \",\\\"iframe\\\":\" + iframe + \"},\\\"triggers\\\":{\\\"load\\\":{\\\"on\\\":\\\"ini-load\\\",\\\"request\\\":\\\"load\\\"},\\\"unload\\\":{\\\"on\\\":\\\"ad-refresh\\\",\\\"selector\\\":\\\"${element}\\\",\\\"request\\\":\\\"unload\\\"},\\\"click\\\":{\\\"on\\\":\\\"click\\\",\\\"selector\\\":\\\"${element}\\\",\\\"request\\\":\\\"click\\\"},\\\"viewability\\\":{\\\"on\\\":\\\"visible\\\",\\\"selector\\\":\\\"${element}\\\",\\\"request\\\":\\\"viewability\\\",\\\"visibilitySpec\\\":{\\\"repeat\\\":true,\\\"visiblePercentageThresholds\\\":[[0,0],[0,5],[5,10],[10,15],[15,20],[20,25],[25,30],[30,35],[35,40],[40,45],[45,50],[50,55],[55,60],[60,65],[65,70],[70,75],[75,80],[80,85],[85,90],[90,95],[95,100],[100,100]]}},\\\"iframe\\\":{\\\"on\\\":\\\"visible\\\",\\\"selector\\\":\\\":root\\\",\\\"request\\\":\\\"iframe\\\",\\\"visibilitySpec\\\":{\\\"repeat\\\":true,\\\"visiblePercentageThresholds\\\":[[0,0]]}}}}\";\nexports.MOAT_CONFIG = MOAT_CONFIG;\n\n},{\"../../../../src/json\":122}],65:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.MOBIFY_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar MOBIFY_CONFIG = \"{\\\"vars\\\":{\\\"projectSlug\\\":\\\"mobify-project-id\\\",\\\"templateName\\\":\\\"page-type\\\"},\\\"requests\\\":{\\\"_host\\\":\\\"https://engagement-collector.mobify.net\\\",\\\"_dimensions\\\":\\\"%22platform%22%3a%22AMP%22%2c%22client_id%22%3a%22${clientId(sandy-client-id)}%22%2c%22title%22%3a%22${title}%22%2c%22location%22%3a%22${sourceUrl}%22%2c%22page%22%3a%22${sourcePath}%22%2c%22src_location%22%3a%22${ampdocUrl}%22%2c%22referrer%22%3a%22${documentReferrer}%22%2c%22templateName%22%3a%22${templateName}%22\\\",\\\"_basePrefix\\\":\\\"${_host}/s.gif?slug=${projectSlug}&timestamp_local=${timestamp}&channel=web&dimensions=%7b${_dimensions}%7d\\\",\\\"ampstart\\\":\\\"${_basePrefix}&data=%7b%22category%22%3a%22timing%22%2c%22action%22%3a%22ampStart%22%2c%22value%22%3a${navTiming(navigationStart,domLoading)}%7d\\\",\\\"pageview\\\":\\\"${_basePrefix}&data=%7b%22action%22%3a%22pageview%22%7d\\\",\\\"pageload\\\":\\\"${_basePrefix}&data=%7b%22category%22%3a%22timing%22%2c%22action%22%3a%22load%22%2c%22value%22%3a${pageLoadTime}%7d\\\",\\\"pagedcl\\\":\\\"${_basePrefix}&data=%7b%22category%22%3a%22timing%22%2c%22action%22%3a%22DOMContentLoaded%22%2c%22value%22%3a${contentLoadTime}%7d\\\"},\\\"triggers\\\":{\\\"triggerName\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":[\\\"ampstart\\\",\\\"pageload\\\",\\\"pagedcl\\\"]},\\\"pageview\\\":{\\\"on\\\":\\\"ini-load\\\",\\\"request\\\":\\\"pageview\\\"}},\\\"transport\\\":{\\\"beacon\\\":true,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.MOBIFY_CONFIG = MOBIFY_CONFIG;\n\n},{\"../../../../src/json\":122}],66:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.MPARTICLE_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar MPARTICLE_CONFIG = \"{\\\"vars\\\":{\\\"eventType\\\":\\\"Unknown\\\",\\\"debug\\\":false,\\\"amp_clientId\\\":\\\"CLIENT_ID(mparticle_amp_id)\\\"},\\\"requests\\\":{\\\"host\\\":\\\"https://pixels.mparticle.com\\\",\\\"endpointPath\\\":\\\"/v1/${apiKey}/Pixel\\\",\\\"baseParams\\\":\\\"et=${eventType}&amp_id=${amp_clientId}&attrs_k=${eventAttributes_Keys}&attrs_v=${eventAttributes_Values}&ua_k=${userAttributes_Keys}&ua_v=${userAttributes_Values}&ui_t=${userIdentities_Types}&ui_v=${userIdentities_Values}&flags_k=${customFlags_Keys}&flags_v=${customFlags_Values}&ct=${timestamp}&dbg=${debug}&lc=${location}&av=${appVersion}\\\",\\\"pageview\\\":\\\"${host}${endpointPath}?dt=ScreenView&n=${pageName}&hn=${ampdocUrl}&ttl=${title}&path=${canonicalPath}&${baseParams}\\\",\\\"event\\\":\\\"${host}${endpointPath}?dt=AppEvent&n=${eventName}&${baseParams}\\\"},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.MPARTICLE_CONFIG = MPARTICLE_CONFIG;\n\n},{\"../../../../src/json\":122}],67:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.MPULSE_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar MPULSE_CONFIG = \"{\\\"requests\\\":{\\\"onvisible\\\":\\\"https://${beacon_url}?h.d=${h.d}&h.key=${h.key}&h.t=${h.t}&h.cr=${h.cr}&rt.start=navigation&rt.si=${clientId(amp_mpulse)}&rt.ss=${timestamp}&rt.end=${timestamp}&t_resp=${navTiming(navigationStart,responseStart)}&t_page=${navTiming(responseStart,loadEventStart)}&t_done=${navTiming(navigationStart,loadEventStart)}&nt_nav_type=${navType}&nt_red_cnt=${navRedirectCount}&nt_nav_st=${navTiming(navigationStart)}&nt_red_st=${navTiming(redirectStart)}&nt_red_end=${navTiming(redirectEnd)}&nt_fet_st=${navTiming(fetchStart)}&nt_dns_st=${navTiming(domainLookupStart)}&nt_dns_end=${navTiming(domainLookupEnd)}&nt_con_st=${navTiming(connectStart)}&nt_ssl_st=${navTiming(secureConnectionStart)}&nt_con_end=${navTiming(connectEnd)}&nt_req_st=${navTiming(requestStart)}&nt_res_st=${navTiming(responseStart)}&nt_unload_st=${navTiming(unloadEventStart)}&nt_unload_end=${navTiming(unloadEventEnd)}&nt_domloading=${navTiming(domLoading)}&nt_res_end=${navTiming(responseEnd)}&nt_domint=${navTiming(domInteractive)}&nt_domcontloaded_st=${navTiming(domContentLoadedEventStart)}&nt_domcontloaded_end=${navTiming(domContentLoadedEventEnd)}&nt_domcomp=${navTiming(domComplete)}&nt_load_st=${navTiming(loadEventStart)}&nt_load_end=${navTiming(loadEventEnd)}&v=1&http.initiator=amp&u=${sourceUrl}&amp.u=${ampdocUrl}&r2=${documentReferrer}&scr.xy=${screenWidth}x${screenHeight}\\\"},\\\"triggers\\\":{\\\"onvisible\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"onvisible\\\"}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true},\\\"extraUrlParamsReplaceMap\\\":{\\\"ab_test\\\":\\\"h.ab\\\",\\\"page_group\\\":\\\"h.pg\\\",\\\"custom_dimension.\\\":\\\"cdim.\\\",\\\"custom_metric.\\\":\\\"cmet.\\\"}}\";\nexports.MPULSE_CONFIG = MPULSE_CONFIG;\n\n},{\"../../../../src/json\":122}],68:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.NAVEGG_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar NAVEGG_CONFIG = \"{\\\"requests\\\":{\\\"pageview\\\":\\\"https://amp.navdmp.com/amp?aid=${clientId(navegg_id)}&url=${canonicalUrl}&ref=${documentReferrer}&tit=${title}&lan=${browserLanguage}&acc=${account}&v=7\\\"},\\\"triggers\\\":{\\\"trackpageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":{\\\"suppressWarnings\\\":true}}}\";\nexports.NAVEGG_CONFIG = NAVEGG_CONFIG;\n\n},{\"../../../../src/json\":122}],69:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.NEWRELIC_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar NEWRELIC_CONFIG = \"{\\\"requests\\\":{\\\"pageview\\\":\\\"https://${beacon}/amp?appId=${appId}&licenseKey=${licenseKey}&ampUrl=${ampdocUrl}&canonicalUrl=${canonicalUrl}&timeToDomContentLoadedEventEnd=${navTiming(domContentLoadedEventEnd)}&timeToDomInteractive=${navTiming(domInteractive)}&timeToDomComplete=${navTiming(domComplete)}&timeToDomLoading=${navTiming(domLoading)}&timeToResponseStart=${navTiming(responseStart)}&timeToResponseEnd=${navTiming(responseEnd)}&timeToLoadEventStart=${navTiming(loadEventStart)}&timeToLoadEventEnd=${navTiming(loadEventEnd)}&timeToConnectStart=${navTiming(connectStart)}&timeToConnectEnd=${navTiming(connectEnd)}&timeToFetchStart=${navTiming(fetchStart)}&timeToRequestStart=${navTiming(requestStart)}&timeToUnloadEventStart=${navTiming(unloadEventStart)}&timeToUnloadEventEnd=${navTiming(unloadEventEnd)}&timeToDomainLookupStart=${navTiming(domainLookupStart)}&timeToDomainLookupEnd=${navTiming(domainLookupEnd)}&timeToRedirectStart=${navTiming(redirectStart)}&timeToRedirectEnd=${navTiming(redirectEnd)}&timeToSecureConnection=${navTiming(secureConnectionStart)}&timestamp=${timestamp}&ampVersion=${ampVersion}&pageLoadTime=${pageLoadTime}\\\"},\\\"vars\\\":{\\\"beacon\\\":\\\"bam.nr-data.net\\\",\\\"appId\\\":[],\\\"licenseKey\\\":\\\"\\\"},\\\"triggers\\\":{\\\"trackPageview\\\":{\\\"on\\\":\\\"ini-load\\\",\\\"request\\\":\\\"pageview\\\"}}}\";\nexports.NEWRELIC_CONFIG = NEWRELIC_CONFIG;\n\n},{\"../../../../src/json\":122}],70:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.NIELSEN_MARKETING_CLOUD_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar NIELSEN_MARKETING_CLOUD_CONFIG = \"{\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true},\\\"vars\\\":{\\\"pubId\\\":\\\"\\\",\\\"siteId\\\":\\\"\\\"},\\\"requests\\\":{\\\"host\\\":\\\"loadeu.exelator.com\\\",\\\"pathPrefix\\\":\\\"load/\\\",\\\"trackurl\\\":\\\"https://${host}/${pathPrefix}?p=${pubId}&g=${siteId}&j=0\\\"},\\\"triggers\\\":{\\\"defaultPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"trackurl\\\"}}}\";\nexports.NIELSEN_MARKETING_CLOUD_CONFIG = NIELSEN_MARKETING_CLOUD_CONFIG;\n\n},{\"../../../../src/json\":122}],71:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.NIELSEN_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar NIELSEN_CONFIG = \"{\\\"vars\\\":{\\\"sessionId\\\":\\\"CLIENT_ID(imrworldwide)\\\",\\\"prefix\\\":\\\"\\\"},\\\"requests\\\":{\\\"session\\\":\\\"https://${prefix}uaid-linkage.imrworldwide.com/cgi-bin/gn?prd=session&c13=asid,P${apid}&sessionId=${sessionId}_${pageViewId}&pingtype=4&enc=false&c61=createtm,${timestamp}&rnd=${random}\\\",\\\"cloudapi\\\":\\\"https://${prefix}cloudapi.imrworldwide.com/nmapi/v2/${apid}/${sessionId}_${pageViewId}/a?b=%7B%22devInfo%22%3A%7B%22devId%22%3A%22${sessionId}_${pageViewId}%22%2C%22apn%22%3A%22${apn}%22%2C%22apv%22%3A%22${apv}%22%2C%22apid%22%3A%22${apid}%22%7D%2C%22metadata%22%3A%7B%22static%22%3A%7B%22type%22%3A%22static%22%2C%22section%22%3A%22${section}%22%2C%22assetid%22%3A%22${pageViewId}%22%2C%22segA%22%3A%22${segA}%22%2C%22segB%22%3A%22${segB}%22%2C%22segC%22%3A%22${segC}%22%2C%22adModel%22%3A%220%22%2C%22dataSrc%22%3A%22cms%22%7D%2C%22content%22%3A%7B%7D%2C%22ad%22%3A%7B%7D%7D%2C%22event%22%3A%22playhead%22%2C%22position%22%3A%22${timestamp}%22%2C%22data%22%3A%7B%22hidden%22%3A%22${backgroundState}%22%2C%22blur%22%3A%22${backgroundState}%22%2C%22position%22%3A%22${timestamp}%22%7D%2C%22type%22%3A%22static%22%2C%22utc%22%3A%22${timestamp}%22%2C%22index%22%3A%22${requestCount}%22%2C%22pageURL%22%3A%22${canonicalUrl}%22%7D\\\"},\\\"triggers\\\":{\\\"visible\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":[\\\"session\\\",\\\"cloudapi\\\"]},\\\"hidden\\\":{\\\"on\\\":\\\"hidden\\\",\\\"request\\\":\\\"cloudapi\\\"},\\\"duration\\\":{\\\"on\\\":\\\"timer\\\",\\\"timerSpec\\\":{\\\"interval\\\":10,\\\"maxTimerLength\\\":86400,\\\"immediate\\\":false},\\\"request\\\":\\\"cloudapi\\\"}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true,\\\"referrerPolicy\\\":\\\"no-referrer\\\"}}\";\nexports.NIELSEN_CONFIG = NIELSEN_CONFIG;\n\n},{\"../../../../src/json\":122}],72:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.OEWA_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar OEWA_CONFIG = \"{\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true},\\\"requests\\\":{\\\"pageview\\\":\\\"${url}?s=${s}&amp=1&cp=${cp}&host=${canonicalHost}&path=${canonicalPath}\\\"},\\\"triggers\\\":{\\\"pageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}}}\";\nexports.OEWA_CONFIG = OEWA_CONFIG;\n\n},{\"../../../../src/json\":122}],73:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.OEWADIRECT_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar OEWADIRECT_CONFIG = \"{\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true},\\\"requests\\\":{\\\"pageview\\\":\\\"https://${s}.oewabox.at/j0=,,,r=${canonicalUrl};+,amp=1+cp=${cp}+ssl=1+hn=${canonicalHost};;;?lt=${pageViewId}&x=${screenWidth}x${screenHeight}x24&c=CLIENT_ID(oewa)\\\"},\\\"triggers\\\":{\\\"pageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}}}\";\nexports.OEWADIRECT_CONFIG = OEWADIRECT_CONFIG;\n\n},{\"../../../../src/json\":122}],74:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.ORACLEINFINITYANALYTICS_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ORACLEINFINITYANALYTICS_CONFIG = \"{\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true},\\\"requests\\\":{\\\"host\\\":\\\"https://dc.oracleinfinity.io/${guid}/dcs.gif?\\\",\\\"baseUrl\\\":\\\"dcssip=${dcssip}&dcsuri=${dcsuri}\\\",\\\"baseRef\\\":\\\"&dcsref=${documentReferrer}\\\",\\\"baseEs\\\":\\\"&WT.es=${sourceHost}${sourcePath}\\\",\\\"baseTi\\\":\\\"&WT.ti=${ti}&dcsdat=${timestamp}\\\",\\\"basePrefix\\\":\\\"${baseUrl}${baseTi}${baseRef}${baseEs}\\\",\\\"screenBs\\\":\\\"&WT.bs=${availableScreenWidth}x${availableScreenHeight}\\\",\\\"screenSr\\\":\\\"&WT.sr=${screenWidth}x${screenHeight}\\\",\\\"screenDc\\\":\\\"&WT.cd=${screenColorDepth}\\\",\\\"screenMeasures\\\":\\\"${screenBs}${screenSr}${screenDc}\\\",\\\"browserUl\\\":\\\"&WT.ul=${browserLanguage}\\\",\\\"browserLe\\\":\\\"&WT.le=${documentCharset}\\\",\\\"browserMeasures\\\":\\\"${browserUl}${browserLe}&WT.js=Yes\\\",\\\"sessCof\\\":\\\"&WT.co_f=${clientId(WT_AMP)}\\\",\\\"sessVer\\\":\\\"&ora.tv_amp=1.0.0&ora.amp_ver=${ampVersion}\\\",\\\"sessionization\\\":\\\"${sessCof}${sessVer}&dcscfg=3\\\",\\\"baseP1\\\":\\\"${host}${basePrefix}\\\",\\\"baseP2\\\":\\\"${screenMeasures}${browserMeasures}${sessionization}\\\",\\\"baseDl\\\":\\\"&WT.dl=${dl}\\\",\\\"pageview\\\":\\\"${baseP1}${baseP2}${baseDl}\\\",\\\"event\\\":\\\"${baseP1}${baseP2}${baseDl}\\\",\\\"dlPdf\\\":\\\"a[href$=\\\\\\\".pdf\\\\\\\"]\\\",\\\"dlXls\\\":\\\",a[href$=\\\\\\\".xls\\\\\\\"]\\\",\\\"dlPpt\\\":\\\",a[href$=\\\\\\\".ppt\\\\\\\"]\\\",\\\"dlZip\\\":\\\",a[href$=\\\\\\\".zip\\\\\\\"]\\\",\\\"dlTxt\\\":\\\",a[href$=\\\\\\\".txt\\\\\\\"]\\\",\\\"dlRtf\\\":\\\",a[href$=\\\\\\\".rtf\\\\\\\"]\\\",\\\"dlXml\\\":\\\",a[href$=\\\\\\\".xml\\\\\\\"]\\\",\\\"downLoad\\\":\\\"${dlPdf}${dlXls}${dlPpt}${dlZip}${dlTxt}${dlRtf}${dlXml}\\\"},\\\"vars\\\":{\\\"dcssip\\\":\\\"${sourceHost}\\\",\\\"dcsuri\\\":\\\"${sourcePath}\\\",\\\"dl\\\":\\\"0\\\",\\\"ti\\\":\\\"${title}\\\"},\\\"triggers\\\":{\\\"trackPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"},\\\"trackAnchorClicks\\\":{\\\"on\\\":\\\"click\\\",\\\"selector\\\":\\\"a\\\",\\\"request\\\":\\\"event\\\",\\\"vars\\\":{\\\"dl\\\":\\\"99\\\",\\\"ti\\\":\\\"Link Click\\\"}}},\\\"trackDownloadClicks\\\":{\\\"on\\\":\\\"click\\\",\\\"selector\\\":\\\"${downLoad}\\\",\\\"request\\\":\\\"event\\\",\\\"vars\\\":{\\\"dl\\\":\\\"20\\\",\\\"ti\\\":\\\"Download Click\\\"}}}\";\nexports.ORACLEINFINITYANALYTICS_CONFIG = ORACLEINFINITYANALYTICS_CONFIG;\n\n},{\"../../../../src/json\":122}],75:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.PARSELY_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar PARSELY_CONFIG = \"{\\\"requests\\\":{\\\"host\\\":\\\"https://srv.pixel.parsely.com\\\",\\\"basePrefix\\\":\\\"${host}/plogger/?rand=${timestamp}&idsite=${apikey}&url=${ampdocUrl}&urlref=${documentReferrer}&screen=${screenWidth}x${screenHeight}%7C${availableScreenWidth}x${availableScreenHeight}%7C${screenColorDepth}&title=${title}&date=${timestamp}&ampid=${clientId(_parsely_visitor)}\\\",\\\"pageview\\\":\\\"${basePrefix}&action=pageview&metadata={\\\\\\\"canonical_url\\\\\\\":\\\\\\\"${canonicalUrl}\\\\\\\"}\\\",\\\"heartbeat\\\":\\\"${basePrefix}&action=heartbeat&tt=${totalEngagedTime}&inc=${incrementalEngagedTime(parsely-js)}\\\"},\\\"triggers\\\":{\\\"defaultPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"},\\\"defaultHeartbeat\\\":{\\\"on\\\":\\\"timer\\\",\\\"enabled\\\":\\\"${incrementalEngagedTime(parsely-js,false)}\\\",\\\"timerSpec\\\":{\\\"interval\\\":10,\\\"maxTimerLength\\\":7200},\\\"request\\\":\\\"heartbeat\\\"}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.PARSELY_CONFIG = PARSELY_CONFIG;\n\n},{\"../../../../src/json\":122}],76:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.PERMUTIVE_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS-IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar PERMUTIVE_CONFIG = \"{\\\"vars\\\":{\\\"identity\\\":\\\"${clientId(_ga)}\\\"},\\\"requests\\\":{\\\"track\\\":\\\"https://${namespace}.amp.permutive.com/track?k=${key}&i=${identity}&it=amp\\\",\\\"pageview\\\":\\\"${track}&e=Pageview&_ep_isp_info=%24ip_isp_info&_ep_geo_info=%24ip_geo_info\\\",\\\"engagement\\\":\\\"${track}&e=PageviewEngagement&_ep_engaged_time=5\\\",\\\"completion\\\":\\\"${track}&e=PageviewEngagement&_ep_completion=0.25\\\",\\\"custom\\\":\\\"${track}&e=${event}\\\"},\\\"triggers\\\":{\\\"trackPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"},\\\"trackEngagement\\\":{\\\"on\\\":\\\"timer\\\",\\\"timerSpec\\\":{\\\"interval\\\":5,\\\"maxTimerLength\\\":600,\\\"immediate\\\":false},\\\"request\\\":\\\"engagement\\\"},\\\"trackCompletion\\\":{\\\"on\\\":\\\"scroll\\\",\\\"scrollSpec\\\":{\\\"verticalBoundaries\\\":[25,50,75,100]},\\\"request\\\":\\\"completion\\\"}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true},\\\"extraUrlParams\\\":{\\\"properties.client.type\\\":\\\"amp\\\",\\\"properties.client.title\\\":\\\"${title}\\\",\\\"properties.client.domain\\\":\\\"${canonicalHost}\\\",\\\"properties.client.url\\\":\\\"${canonicalUrl}\\\",\\\"properties.client.referrer\\\":\\\"${documentReferrer}\\\",\\\"properties.client.user_agent\\\":\\\"${userAgent}\\\"},\\\"extraUrlParamsReplaceMap\\\":{\\\"properties.\\\":\\\"_ep_\\\"}}\";\nexports.PERMUTIVE_CONFIG = PERMUTIVE_CONFIG;\n\n},{\"../../../../src/json\":122}],77:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.PISTATS_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar PISTATS_CONFIG = \"{\\\"requests\\\":{\\\"host\\\":\\\"https://events.pi-stats.com\\\",\\\"basePrefix\\\":\\\"${host}/eventsamp/?e=PageLoad&pid=${property}&url=${ampdocUrl}&cnt=${cntId}&lang=${language}&ref=${documentReferrer}&id=${clientId(piStatsDEVICEID)}&ua=${userAgent}&ctype=web&blang=${browserLanguage}&v=2.0&dist=Javascript\\\",\\\"pageview\\\":\\\"${basePrefix}&eventtype=pageview\\\"},\\\"triggers\\\":{\\\"defaultPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.PISTATS_CONFIG = PISTATS_CONFIG;\n\n},{\"../../../../src/json\":122}],78:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.PIANO_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar PIANO_CONFIG = \"{\\\"requests\\\":{\\\"host\\\":\\\"https://api-v3.tinypass.com\\\",\\\"basePrefix\\\":\\\"/api/v3\\\",\\\"baseSuffix\\\":\\\"&pageview_id=${pageViewId}&rand=${random}&amp_client_id=${clientId}&aid=${aid}\\\",\\\"pageview\\\":\\\"${host}${basePrefix}/page/track?url=${canonicalUrl}&referer=${documentReferrer}&content_created=${contentCreated}&content_author=${contentAuthor}&content_section=${contentSection}&timezone_offset=${timezone}&tags=${tags}&amp_url=${ampdocUrl}&screen=${screenWidth}x${screenHeight}${baseSuffix}\\\"}}\";\nexports.PIANO_CONFIG = PIANO_CONFIG;\n\n},{\"../../../../src/json\":122}],79:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.PINPOLL_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar PINPOLL_CONFIG = \"{\\\"requests\\\":{\\\"pageview\\\":\\\"${protocol}://${host}/${version}?url=${sourceUrl}&sourceHost=${sourceHost}&sourceHostname=${sourceHostname}&sourcePath=${sourcePath}&canonicalUrl=${canonicalUrl}&platform=AMP&title=${title}&referrer=${documentReferrer}&screenHeight=${screenHeight}&screenWidth=${screenWidth}&screenColorDepth=${screenColorDepth}&ua=${userAgent}&clientId=${clientId(pinpoll)}\\\"},\\\"triggers\\\":{\\\"pageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}},\\\"vars\\\":{\\\"version\\\":\\\"v1\\\",\\\"protocol\\\":\\\"https\\\",\\\"host\\\":\\\"pa.pinpoll.com\\\"}}\";\nexports.PINPOLL_CONFIG = PINPOLL_CONFIG;\n\n},{\"../../../../src/json\":122}],80:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.PRESSBOARD_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar PRESSBOARD_CONFIG = \"{\\\"vars\\\":{\\\"mediaId\\\":\\\"\\\",\\\"campaignId\\\":\\\"\\\",\\\"storyRequestId\\\":\\\"\\\",\\\"geoNameId\\\":\\\"\\\",\\\"country\\\":\\\"\\\",\\\"region\\\":\\\"\\\",\\\"city\\\":\\\"\\\",\\\"dbInstance\\\":\\\"\\\",\\\"timeZoneOffset\\\":\\\"\\\",\\\"clientId\\\":\\\"CLIENT_ID(_pressboardmedia)\\\"},\\\"requests\\\":{\\\"host\\\":\\\"https://adserver.pressboard.ca\\\",\\\"common_params\\\":\\\"&amp=1&url=${canonicalUrl}&referrer=${documentReferrer}&ts=${timestamp}&ua=${userAgent}&rand=${random}&uid=${clientId}&mid=${mediaId}&cid=${campaignId}&sid=${storyRequestId}&geoid=${geoNameId}&cn=${country}&rg=${region}&ct=${city}&dbi=${dbInstance}&tz=${timeZoneOffset}\\\",\\\"conversion_params\\\":\\\"&hbt=${requestCount}&pvid=${pageViewId}&asurl=${sourceUrl}&ash=${scrollHeight}&asnh=${screenHeight}&aasnh=${availableScreenHeight}&avh=${viewportHeight}&ast=${scrollTop}&atet=${totalEngagedTime}\\\",\\\"conversion\\\":\\\"${host}/track/attention-amp?${common_params}${conversion_params}\\\"},\\\"triggers\\\":{\\\"pageTimer\\\":{\\\"on\\\":\\\"timer\\\",\\\"timerSpec\\\":{\\\"interval\\\":1,\\\"startSpec\\\":{\\\"on\\\":\\\"visible\\\"},\\\"stopSpec\\\":{\\\"on\\\":\\\"hidden\\\"}},\\\"request\\\":\\\"conversion\\\"}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.PRESSBOARD_CONFIG = PRESSBOARD_CONFIG;\n\n},{\"../../../../src/json\":122}],81:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.QUANTCAST_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar QUANTCAST_CONFIG = \"{\\\"vars\\\":{\\\"labels\\\":\\\"\\\"},\\\"requests\\\":{\\\"host\\\":\\\"https://pixel.quantserve.com/pixel\\\",\\\"pageview\\\":\\\"${host};r=${random};a=${pcode};labels=${labels};fpan=;fpa=${clientId(__qca)};ns=0;ce=1;cm=;je=0;sr=${screenWidth}x${screenHeight}x${screenColorDepth};enc=n;et=${timestamp};ref=${documentReferrer};url=${canonicalUrl}\\\"},\\\"triggers\\\":{\\\"defaultPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.QUANTCAST_CONFIG = QUANTCAST_CONFIG;\n\n},{\"../../../../src/json\":122}],82:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.RAKAM_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar RAKAM_CONFIG = \"{\\\"vars\\\":{\\\"deviceId\\\":\\\"CLIENT_ID(rakam_device_id)\\\"},\\\"requests\\\":{\\\"base\\\":\\\"?api.api_key=${writeKey}&prop._platform=amp&prop._device_id=${deviceId}&prop.locale=${browserLanguage}&prop.path=${canonicalPath}&prop.url=${canonicalUrl}&prop.color_depth=${screenColorDepth}&prop._referrer=${documentReferrer}&prop.title=${title}&prop.timezone=${timezone}&prop._time=${timestamp}&prop.resolution=${screenWidth} \\xD7 ${screenHeight}\\\",\\\"pageview\\\":\\\"https://${apiEndpoint}/event/pixel${base}&collection=${pageViewName}\\\",\\\"custom\\\":\\\"https://${apiEndpoint}/event/pixel${base}&collection=${collection}\\\"}}\";\nexports.RAKAM_CONFIG = RAKAM_CONFIG;\n\n},{\"../../../../src/json\":122}],83:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.REPPUBLIKA_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar REPPUBLIKA_CONFIG = \"{\\\"requests\\\":{\\\"host\\\":\\\"https://t5.mindtake.com\\\",\\\"basePrefix\\\":\\\"/tag/cid/\\\",\\\"baseSuffix\\\":\\\"Service=${service}&Category=${category}&Url=${sourceUrl}&Device=${device}&uid=${random}\\\",\\\"pageview\\\":\\\"${host}${basePrefix}${code}/track.gif?${baseSuffix}\\\"},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.REPPUBLIKA_CONFIG = REPPUBLIKA_CONFIG;\n\n},{\"../../../../src/json\":122}],84:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.RETARGETLY_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar RETARGETLY_CONFIG = \"{\\\"requests\\\":{\\\"host\\\":\\\"https://api.retargetly.com\\\",\\\"page\\\":\\\"${host}/api?id=${accountId}&src=${sourceId}&url=${sourceUrl}&n=${title}&ref=${documentReferrer}&ua=${userAgent}&random=${random}&bl=${browserLanguage}&source=amp\\\"},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true},\\\"triggers\\\":{\\\"trackPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"page\\\"}}}\";\nexports.RETARGETLY_CONFIG = RETARGETLY_CONFIG;\n\n},{\"../../../../src/json\":122}],85:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.SEGMENT_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar SEGMENT_CONFIG = \"{\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true},\\\"vars\\\":{\\\"anonymousId\\\":\\\"CLIENT_ID(AMP_ECID_GOOGLE,,_ga)\\\"},\\\"requests\\\":{\\\"host\\\":\\\"https://api.segment.io/v1/pixel\\\",\\\"base\\\":\\\"?writeKey=${writeKey}&context.library.name=amp&anonymousId=${anonymousId}&context.locale=${browserLanguage}&context.page.path=${canonicalPath}&context.page.url=${canonicalUrl}&context.page.referrer=${documentReferrer}&context.page.title=${title}&context.screen.width=${screenWidth}&context.screen.height=${screenHeight}\\\",\\\"page\\\":\\\"${host}/page${base}&name=${name}\\\",\\\"track\\\":\\\"${host}/track${base}&event=${event}\\\"},\\\"triggers\\\":{\\\"page\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"page\\\"}},\\\"linkers\\\":{\\\"segment\\\":{\\\"ids\\\":{\\\"s_amp_id\\\":\\\"${anonymousId}\\\"},\\\"proxyOnly\\\":false}},\\\"cookies\\\":{\\\"_ga\\\":{\\\"value\\\":\\\"LINKER_PARAM(segment, s_amp_id)\\\"}}}\";\nexports.SEGMENT_CONFIG = SEGMENT_CONFIG;\n\n},{\"../../../../src/json\":122}],86:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.SHINYSTAT_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar SHINYSTAT_CONFIG = \"{\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true},\\\"requests\\\":{\\\"base\\\":\\\"https://amp.shinystat.com/cgi-bin/shinyamp.cgi\\\",\\\"commpar\\\":\\\"AMP=1&RM=${random}&USER=${account}&PAG=${page}&HR=${sourceUrl}&REFER=${documentReferrer}&RES=${screenWidth}X${screenHeight}&COLOR=${screenColorDepth}&CID=${clientId(AMP_CID)}&PAGID=${pageViewId}&TITL=${title}&RQC=${requestCount}\\\",\\\"pagepar\\\":\\\"&VIE=${viewer}&PLT=${pageLoadTime}\\\",\\\"eventpar\\\":\\\"&SSXL=1\\\",\\\"linkpar\\\":\\\"&LINK=${outboundLink}\\\",\\\"pageview\\\":\\\"${base}?${commpar}${pagepar}\\\",\\\"event\\\":\\\"${base}?${commpar}${eventpar}\\\",\\\"link\\\":\\\"${base}?${commpar}${linkpar}\\\"},\\\"triggers\\\":{\\\"pageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}}}\";\nexports.SHINYSTAT_CONFIG = SHINYSTAT_CONFIG;\n\n},{\"../../../../src/json\":122}],87:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.SIMPLEREACH_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar SIMPLEREACH_CONFIG = \"{\\\"vars\\\":{\\\"pid\\\":\\\"\\\",\\\"published_at\\\":\\\"\\\",\\\"authors\\\":[],\\\"channels\\\":[],\\\"tags\\\":[]},\\\"requests\\\":{\\\"host\\\":\\\"https://edge.simplereach.com\\\",\\\"baseParams\\\":\\\"amp=true&pid=${pid}&title=${title}&url=${canonicalUrl}&date=${published_at}&authors=${authors}&channels=${categories}&tags=${tags}&referrer=${documentReferrer}&page_url=${sourceUrl}&user_id=${clientId(sr_amp_id)}&domain=${canonicalHost}&article_id=${article_id}&ignore_metadata=${ignore_metadata}\\\",\\\"visible\\\":\\\"${host}/n?${baseParams}\\\",\\\"timer\\\":\\\"${host}/t?${baseParams}&t=5000&e=5000\\\"},\\\"triggers\\\":{\\\"visible\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"visible\\\"},\\\"timer\\\":{\\\"on\\\":\\\"timer\\\",\\\"timerSpec\\\":{\\\"interval\\\":5,\\\"maxTimerLength\\\":1200},\\\"request\\\":\\\"timer\\\"}}}\";\nexports.SIMPLEREACH_CONFIG = SIMPLEREACH_CONFIG;\n\n},{\"../../../../src/json\":122}],88:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.SNOWPLOW_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar SNOWPLOW_CONFIG = \"{\\\"vars\\\":{\\\"duid\\\":\\\"CLIENT_ID(_sp_id)\\\"},\\\"requests\\\":{\\\"aaVersion\\\":\\\"amp-0.3\\\",\\\"basePrefix\\\":\\\"https://${collectorHost}/i?url=${canonicalUrl}&page=${title}&res=${screenWidth}x${screenHeight}&stm=${timestamp}&tz=${timezoneCode}&aid=${appId}&p=web&tv=${aaVersion}&cd=${screenColorDepth}&cs=${documentCharset}&duid=${duid}&lang=${browserLanguage}&refr=${documentReferrer}&vp=${viewportWidth}x${viewportHeight}&ds=${scrollWidth}x${scrollHeight}\\\",\\\"pageView\\\":\\\"${basePrefix}&e=pv\\\",\\\"structEvent\\\":\\\"${basePrefix}&e=se&se_ca=${structEventCategory}&se_ac=${structEventAction}&se_la=${structEventLabel}&se_pr=${structEventProperty}&se_va=${structEventValue}\\\"},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.SNOWPLOW_CONFIG = SNOWPLOW_CONFIG;\n\n},{\"../../../../src/json\":122}],89:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.TEAANALYTICS_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TEAANALYTICS_CONFIG = \"{\\\"vars\\\":{\\\"userUniqueId\\\":\\\"${clientId(__tea_sdk__user_unique_id)}\\\",\\\"debug\\\":0},\\\"requests\\\":{\\\"domain\\\":\\\"https://${channel}/v1/amp\\\",\\\"commonParams\\\":\\\"user.user_unique_id=${userUniqueId}&header.app_id=${app_id}&header.language=${browserLanguage}&header.screen_height=${screenHeight}&header.screen_width=${screenWidth}&header.resolution=${screenHeight}x${screenWidth}&header.tz_offset=${timezone}&header.tz_name=${timezoneCode}&header.referrer=${documentReferrer}&header.custom.user_agent=${userAgent}&event.local_time_ms=${timestamp}&event.params._staging_flag=${debug}&verbose=${debug}\\\",\\\"base\\\":\\\"${domain}?${commonParams}&rnd=${random}\\\",\\\"pageview\\\":\\\"${base}&event=predefine_pageview&event.params.url=${sourceUrl}&event.params.url_path=${sourcePath}&event.params.title=${title}\\\",\\\"event\\\":\\\"${base}\\\"}}\";\nexports.TEAANALYTICS_CONFIG = TEAANALYTICS_CONFIG;\n\n},{\"../../../../src/json\":122}],90:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.TEALIUMCOLLECT_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TEALIUMCOLLECT_CONFIG = \"{\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true},\\\"vars\\\":{\\\"account\\\":\\\"TEALIUM_ACCOUNT\\\",\\\"profile\\\":\\\"TEALIUM_PROFILE\\\",\\\"datasource\\\":\\\"TEALIUM_DATASOURCE\\\",\\\"visitor_id\\\":\\\"CLIENT_ID(AMP_ECID_GOOGLE,,_ga)\\\"},\\\"requests\\\":{\\\"host\\\":\\\"https://collect.tealiumiq.com\\\",\\\"base\\\":\\\"${host}/event/?${tealium}&${dom1}&${dom2}&${datetime}&tealium_event=${tealium_event}&amp_version=${ampVersion}&amp_request_count=${requestCount}\\\",\\\"tealium\\\":\\\"tealium_account=${account}&tealium_profile=${profile}&tealium_datasource=${datasource}&tealium_visitor_id=${visitor_id}\\\",\\\"dom1\\\":\\\"url=${sourceUrl}&ampdoc_url=${ampdocUrl}&domain=${sourceHost}&pathname=${sourcePath}&amp_hostname=${ampdocHostname}&canonical_hostname=${canonicalHostname}\\\",\\\"dom2\\\":\\\"title=${title}&viewport_width=${availableScreenWidth}&viewport_height=${availableScreenHeight}\\\",\\\"datetime\\\":\\\"timestamp=${timestamp}&tz=${timezone}&lang=${browserLanguage}\\\",\\\"pageview\\\":\\\"${base}&referrer=${documentReferrer}&screen_size=${screenWidth}x${screenHeight}&content_load_ms=${contentLoadTime}&page_view_id=${pageViewId}\\\",\\\"event\\\":\\\"${base}&scroll_y=${scrollTop}&scroll_x=${scrollLeft}\\\"},\\\"triggers\\\":{\\\"defaultPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\",\\\"vars\\\":{\\\"tealium_event\\\":\\\"screen_view\\\"}}}}\";\nexports.TEALIUMCOLLECT_CONFIG = TEALIUMCOLLECT_CONFIG;\n\n},{\"../../../../src/json\":122}],91:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.TOP100_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TOP100_CONFIG = \"{\\\"vars\\\":{\\\"pid\\\":\\\"\\\",\\\"rid\\\":\\\"PAGE_VIEW_ID\\\",\\\"ruid\\\":\\\"CLIENT_ID(ruid)\\\",\\\"version\\\":\\\"1.0.0\\\"},\\\"requests\\\":{\\\"host\\\":\\\"https://kraken.rambler.ru\\\",\\\"base\\\":\\\"${host}/cnt/?pid=${pid}&rid=${rid}&v=${version}&rn=${random}&ruid=${ruid}&ct=amp\\\",\\\"pageview\\\":\\\"${base}&et=pv${_pageData}${_screenData}\\\",\\\"_screenData\\\":\\\"&sr=${screenWidth}x${screenHeight}&cd=${screenColorDepth}-bit&bs=${scrollWidth}x${scrollHeight}\\\",\\\"_pageData\\\":\\\"&pt=${title}&rf=${documentReferrer}&en=${documentCharset}&la=${browserLanguage}&tz=${timezone}\\\"},\\\"triggers\\\":{\\\"trackPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.TOP100_CONFIG = TOP100_CONFIG;\n\n},{\"../../../../src/json\":122}],92:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.TOPMAILRU_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TOPMAILRU_CONFIG = \"{\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true},\\\"vars\\\":{\\\"url\\\":\\\"${sourceUrl}\\\",\\\"referrer\\\":\\\"${documentReferrer}\\\"},\\\"requests\\\":{\\\"pageView\\\":\\\"${_domain}/counter?${_basicMessage};title=${title}\\\",\\\"reachGoal\\\":\\\"${_domain}/tracker?${_basicMessage};title=${title};e=RG%3A${value}%2F${goal}\\\",\\\"sendEvent\\\":\\\"${_domain}/tracker?${_basicMessage};e=CE%3A${value}%2F${category}%3B${action}%3B${label}\\\",\\\"_domain\\\":\\\"https://top-fwz1.mail.ru\\\",\\\"_basicMessage\\\":\\\"js=13;id=${id};u=${url};r=${referrer};s=${screenWidth}*${screenHeight};vp=${viewportWidth}*${viewportHeight};st=${start};gender=${gender};age=${age};pid=${pid};userid=${userid};device=${device};params=${params};_=${random}\\\"},\\\"triggers\\\":{\\\"pageView\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageView\\\"}}}\";\nexports.TOPMAILRU_CONFIG = TOPMAILRU_CONFIG;\n\n},{\"../../../../src/json\":122}],93:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.TREASUREDATA_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TREASUREDATA_CONFIG = \"{\\\"vars\\\":{\\\"host\\\":\\\"in.treasuredata.com\\\",\\\"writeKey\\\":\\\"\\\",\\\"database\\\":\\\"\\\",\\\"table\\\":\\\"events\\\"},\\\"requests\\\":{\\\"base\\\":\\\"https://${host}/postback/v3/event/${database}\\\",\\\"baseParams\\\":\\\"td_write_key=${writeKey}&td_global_id=td_global_id&td_client_id=CLIENT_ID(_td)&td_charset=DOCUMENT_CHARSET&td_language=BROWSER_LANGUAGE&td_color=SCREEN_COLOR_DEPTH&td_screen=${screenWidth}x${scrollHeight}&td_viewport=${availableScreenWidth}x${availableScreenHeight}&td_title=TITLE&td_url=SOURCE_URL&td_user_agent=USER_AGENT&td_host=SOURCE_HOST&td_path=SOURCE_PATH&td_referrer=DOCUMENT_REFERRER&td_ip=td_ip\\\",\\\"pageview\\\":\\\"${base}/${table}?${baseParams}\\\",\\\"event\\\":\\\"${base}/${table}?${baseParams}\\\"}}\";\nexports.TREASUREDATA_CONFIG = TREASUREDATA_CONFIG;\n\n},{\"../../../../src/json\":122}],94:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.UMENGANALYTICS_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar UMENGANALYTICS_CONFIG = \"{\\\"vars\\\":{\\\"siteid\\\":\\\"\\\",\\\"initial_view_time\\\":\\\"\\\",\\\"eventName\\\":\\\"\\\",\\\"eventProps\\\":\\\"\\\"},\\\"requests\\\":{\\\"base\\\":\\\"https://b.cnzz.com/utrack?&_siteid=${siteid}&_distinct_id=${clientId(umeng_amp_id)}&_t=${timestamp}&_s=google&_b=web&_r=${externalReferrer}&_h=${screenHeight}&_w=${screenWidth}&_ivt=${initial_view_time}\\\",\\\"pageview\\\":\\\"${base}&_ename=$w_page_view&_eprops=${eventProps}\\\",\\\"event\\\":\\\"${base}&_ename=${eventName}&_eprops=${eventProps}\\\"},\\\"triggers\\\":{\\\"defaultPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.UMENGANALYTICS_CONFIG = UMENGANALYTICS_CONFIG;\n\n},{\"../../../../src/json\":122}],95:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.UPSCORE_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar UPSCORE_CONFIG = \"{\\\"requests\\\":{\\\"host\\\":\\\"https://hit-pool.upscore.com/amp?\\\",\\\"basePrefix\\\":\\\"u_id=${clientId(upscore)}&hit_id=${pageViewId}&scTop=${scrollTop}&scHeight=${scrollHeight}&vHeight=${viewportHeight}&domain=${domain}&load=${domInteractiveTime}&timespent=${totalEngagedTime}\\\",\\\"initialHit\\\":\\\"author=${author}&creator=${creator}&o_id=${object_id}&o_type=${object_type}&pubdate=${pubdate}&ref=${documentReferrer}&section=${section}&url=${ampdocUrl}&agent=${userAgent}&location=${ampGeo(ISOCountry)}\\\",\\\"finalbeat\\\":\\\"${host}${basePrefix}&type=final\\\",\\\"heartbeat\\\":\\\"${host}${basePrefix}&type=pulse\\\",\\\"pageview\\\":\\\"${host}${basePrefix}&${initialHit}&type=init\\\"},\\\"triggers\\\":{\\\"initHit\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"pageview\\\"},\\\"pulse\\\":{\\\"on\\\":\\\"timer\\\",\\\"timerSpec\\\":{\\\"interval\\\":10,\\\"immediate\\\":false,\\\"stopSpec\\\":{\\\"on\\\":\\\"hidden\\\"}},\\\"request\\\":\\\"heartbeat\\\"},\\\"final\\\":{\\\"on\\\":\\\"hidden\\\",\\\"visibilitySpec\\\":{\\\"totalTimeMin\\\":5000},\\\"request\\\":\\\"finalbeat\\\"}},\\\"transport\\\":{\\\"beacon\\\":true,\\\"xhrpost\\\":true,\\\"image\\\":false}}\";\nexports.UPSCORE_CONFIG = UPSCORE_CONFIG;\n\n},{\"../../../../src/json\":122}],96:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.VPONANALYTICS_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar VPONANALYTICS_CONFIG = \"{\\\"vars\\\":{\\\"ctid\\\":\\\"${clientId(vpadn-ctid)}\\\"},\\\"requests\\\":{\\\"host\\\":\\\"https://tags-dmp.vpadn.com\\\",\\\"sync\\\":\\\"https://ids-dmp.vpadn.com/set?t=${timestamp}&dn=&ctid=${ctid}\\\",\\\"scroll\\\":\\\"${host}/et?t=${timestamp}&sdkn=j&sdkv=1.2.0&lk=${licence_key}&en=UTF-8&ctid=${ctid}&ev=element_interact&pl={\\\\\\\"name\\\\\\\":\\\\\\\"${category}\\\\\\\",\\\\\\\"action\\\\\\\":\\\\\\\"${action}\\\\\\\",\\\\\\\"value\\\\\\\":\\\\\\\"${documentReferrer}\\\\\\\"}\\\",\\\"event\\\":\\\"${host}/et?t=${timestamp}&sdkn=j&sdkv=1.2.0&lk=${licence_key}&en=UTF-8&ctid=${ctid}&ev=${ev_name}&pl=${payload}\\\",\\\"elementInteract\\\":\\\"${host}/et?t=${timestamp}&sdkn=j&sdkv=1.2.0&lk=${licence_key}&en=UTF-8&ctid=${ctid}&ev=element_interact&pl={\\\\\\\"name\\\\\\\":\\\\\\\"${category}\\\\\\\",\\\\\\\"action\\\\\\\":\\\\\\\"${action}\\\\\\\",\\\\\\\"value\\\\\\\":\\\\\\\"${label}\\\\\\\"}\\\"},\\\"extraUrlParams\\\":{\\\"is_amp\\\":\\\"1\\\",\\\"page_id\\\":\\\"${pageViewId}\\\"},\\\"triggers\\\":{\\\"cookieSync\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"sync\\\"},\\\"trackPageview\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"event\\\",\\\"vars\\\":{\\\"ev_name\\\":\\\"page_view\\\",\\\"payload\\\":\\\"{\\\\\\\"title\\\\\\\":\\\\\\\"${title}\\\\\\\",\\\\\\\"current\\\\\\\":\\\\\\\"${canonicalUrl}\\\\\\\",\\\\\\\"previous\\\\\\\":\\\\\\\"${documentReferrer}\\\\\\\"}\\\"}}},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.VPONANALYTICS_CONFIG = VPONANALYTICS_CONFIG;\n\n},{\"../../../../src/json\":122}],97:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.WEBENGAGE_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar WEBENGAGE_CONFIG = \"{\\\"requests\\\":{\\\"base\\\":\\\"https://c.${region}.webengage.com/amp?licenseCode=${licenseCode}&luid=${clientId(we_luid)}&pageUrl=${canonicalUrl}&pageTitle=${title}&referrer=${documentReferrer}&vh=${viewportHeight}&vw=${viewportWidth}&category=application\\\",\\\"wePageview\\\":{\\\"baseUrl\\\":\\\"${base}&eventName=Page Viewed\\\"}},\\\"extraUrlParams\\\":{\\\"isAmp\\\":1},\\\"triggers\\\":{\\\"wePageviewTrigger\\\":{\\\"on\\\":\\\"visible\\\",\\\"request\\\":\\\"wePageview\\\"}}}\";\nexports.WEBENGAGE_CONFIG = WEBENGAGE_CONFIG;\n\n},{\"../../../../src/json\":122}],98:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.WEBTREKK_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar WEBTREKK_CONFIG = \"{\\\"requests\\\":{\\\"trackURL\\\":\\\"https://${trackDomain}/${trackId}/wt\\\",\\\"parameterPrefix\\\":\\\"?p=432,${contentId},1,${screenWidth}x${screenHeight},${screenColorDepth},1,${timestamp},${documentReferrer},${viewportWidth}x${viewportHeight},0&tz=${timezone}&eid=${clientId(amp-wt3-eid)}&la=${browserLanguage}\\\",\\\"parameterSuffix\\\":\\\"&pu=${sourceUrl}\\\",\\\"pageParameter\\\":\\\"&cp1=${pageParameter1}&cp2=${pageParameter2}&cp3=${pageParameter3}&cp4=${pageParameter4}&cp5=${pageParameter5}&cp6=${pageParameter6}&cp7=${pageParameter7}&cp8=${pageParameter8}&cp9=${pageParameter9}&cp10=${pageParameter10}\\\",\\\"pageCategories\\\":\\\"&cg1=${pageCategory1}&cg2=${pageCategory2}&cg3=${pageCategory3}&cg4=${pageCategory4}&cg5=${pageCategory5}&cg6=${pageCategory6}&cg7=${pageCategory7}&cg8=${pageCategory8}&cg9=${pageCategory9}&cg10=${pageCategory10}\\\",\\\"pageview\\\":\\\"${trackURL}${parameterPrefix}${pageParameter}${pageCategories}${parameterSuffix}\\\",\\\"actionParameter\\\":\\\"&ck1=${actionParameter1}&ck2=${actionParameter2}&ck3=${actionParameter3}&ck4=${actionParameter4}&ck5=${actionParameter5}\\\",\\\"event\\\":\\\"${trackURL}${parameterPrefix}&ct=${actionName}${actionParameter}${parameterSuffix}\\\"},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.WEBTREKK_CONFIG = WEBTREKK_CONFIG;\n\n},{\"../../../../src/json\":122}],99:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.WEBTREKK_V2_CONFIG = void 0;\n\nvar _json = require(\"../../../../src/json\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar WEBTREKK_V2_CONFIG = \"{\\\"vars\\\":{\\\"actionName\\\":\\\"webtrekk_ignore\\\",\\\"contentId\\\":\\\"${title}\\\",\\\"mediaName\\\":\\\"${id}\\\",\\\"everId\\\":\\\"${clientId(amp-wt3-eid)}\\\"},\\\"requests\\\":{\\\"trackURL\\\":\\\"https://${trackDomain}/${trackId}/wt\\\",\\\"basePrefix\\\":\\\"?p=440,${contentId},1,${screenWidth}x${screenHeight},${screenColorDepth},1,\\\",\\\"baseSuffix\\\":\\\",${documentReferrer},${viewportWidth}x${viewportHeight},0&tz=${timezone}&eid=${everId}&la=${browserLanguage}\\\",\\\"parameterPrefix\\\":\\\"${basePrefix}${timestamp}${baseSuffix}\\\",\\\"parameterSuffix\\\":\\\"&pu=${sourceUrl}&eor=1\\\",\\\"pageview\\\":\\\"${trackURL}${parameterPrefix}&${extraUrlParams}&cp570=${pageLoadTime}${parameterSuffix}\\\",\\\"event\\\":\\\"${trackURL}${parameterPrefix}&ct=${actionName}&${extraUrlParams}${parameterSuffix}\\\",\\\"scroll\\\":\\\"${trackURL}${parameterPrefix}&ct=${actionName}&ck540=${verticalScrollBoundary}${parameterSuffix}\\\",\\\"mediaPrefix\\\":\\\"${trackURL}${basePrefix}${baseSuffix}&mi=${mediaName}\\\",\\\"mediaSuffix\\\":\\\"&mt1=${currentTime}&mt2=${duration}&${extraUrlParams}${parameterSuffix}&x=${playedTotal}\\\",\\\"mediaPlay\\\":\\\"${mediaPrefix}&mk=play${mediaSuffix}\\\",\\\"mediaPause\\\":\\\"${mediaPrefix}&mk=pause${mediaSuffix}\\\",\\\"mediaPosition\\\":\\\"${mediaPrefix}&mk=pos${mediaSuffix}\\\",\\\"mediaEnded\\\":\\\"${mediaPrefix}&mk=eof${mediaSuffix}\\\"},\\\"extraUrlParamsReplaceMap\\\":{\\\"pageParameter\\\":\\\"cp\\\",\\\"contentGroup\\\":\\\"cg\\\",\\\"actionParameter\\\":\\\"ck\\\",\\\"sessionParameter\\\":\\\"cs\\\",\\\"ecommerceParameter\\\":\\\"cb\\\",\\\"urmCategory\\\":\\\"uc\\\",\\\"campaignParameter\\\":\\\"cc\\\",\\\"mediaCategory\\\":\\\"mg\\\"},\\\"transport\\\":{\\\"beacon\\\":false,\\\"xhrpost\\\":false,\\\"image\\\":true}}\";\nexports.WEBTREKK_V2_CONFIG = WEBTREKK_V2_CONFIG;\n\n},{\"../../../../src/json\":122}],100:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.VisibilityManagerForMApp = void 0;\n\nvar _visibilityManager = require(\"./visibility-manager\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _opacity = require(\"./opacity\");\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar TAG = 'amp-analytics/visibility-manager';\n\nvar VisibilityManagerForMApp =\n/*#__PURE__*/\nfunction (_VisibilityManager) {\n  _inheritsLoose(VisibilityManagerForMApp, _VisibilityManager);\n\n  /**\n   *\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {!../../../src/inabox/host-services.VisibilityInterface} visibilityInterface\n   */\n  function VisibilityManagerForMApp(ampdoc, visibilityInterface) {\n    var _this;\n\n    _this = _VisibilityManager.call(this,\n    /* parent */\n    null, ampdoc) || this;\n    /**\n     * In VisibilityManagerForMApp case,\n     */\n\n    /** @const @private {!../../../src/inabox/host-services.VisibilityInterface} */\n\n    _this.visibilityInterface_ = visibilityInterface;\n    /** @const @private {boolean} */\n\n    _this.backgroundedAtStart_ = !ampdoc.isVisible();\n    /** @private {?../../../src/layout-rect.LayoutRectDef} */\n\n    _this.intersectionRect_ = null;\n    /** @private {boolean} */\n\n    _this.disposed_ = false; // Initate the listener\n\n    _this.visibilityInterface_.onVisibilityChange(_this.onVisibilityChangeHandler_.bind(_assertThisInitialized(_this)));\n\n    return _this;\n  }\n  /** @override */\n\n\n  var _proto = VisibilityManagerForMApp.prototype;\n\n  _proto.dispose = function dispose() {\n    _VisibilityManager.prototype.dispose.call(this);\n\n    this.disposed_ = true;\n  }\n  /** @override */\n  ;\n\n  _proto.getStartTime = function getStartTime() {\n    // AmpDoc.getFirstVisibleTime depend on the visibilitychange API and\n    // document['hidden']\n    // Expect the ampdoc is always visible in webview\n    return (0, _log.dev)().assertNumber(this.ampdoc.getFirstVisibleTime());\n  }\n  /** @override */\n  ;\n\n  _proto.isBackgrounded = function isBackgrounded() {\n    // Listens to visibilitychange event, in theory this never fires\n    return !this.ampdoc.isVisible();\n  }\n  /** @override */\n  ;\n\n  _proto.isBackgroundedAtStart = function isBackgroundedAtStart() {\n    // Return the first visible state. In theory this is always true in mApp\n    return this.backgroundedAtStart_;\n  }\n  /** @override */\n  ;\n\n  _proto.getRootMinOpacity = function getRootMinOpacity() {\n    // Copied the implementation from VisibilityManagerForDoc,\n    // doesn't count iframe opacity\n    var root = this.ampdoc.getRootNode();\n    var rootElement = (0, _log.dev)().assertElement(root.documentElement || root.body || root);\n    return (0, _opacity.getMinOpacity)(rootElement);\n  }\n  /** @override */\n  ;\n\n  _proto.listenElement = function listenElement() {\n    // #listenElement not supported in mApp\n    (0, _log.devAssert)(false, '%s: element level visibility not supported, ' + 'getElementIntersectionRect should not be called in ' + 'VisibilityManager for mApp', TAG);\n    return function () {};\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.getRootLayoutBox = function getRootLayoutBox() {\n    // By the time `#getRootLayoutBox` is called, it is guaranteed that\n    // onVisibilityChangeHandler has been called at least once\n    return (\n      /** @type {!../../../src/layout-rect.LayoutRectDef} */\n      (0, _log.devAssert)(this.intersectionRect_)\n    );\n  }\n  /**\n   * @param {!../../../src/inabox/host-services.VisibilityDataDef} visibilityData\n   * @private\n   */\n  ;\n\n  _proto.onVisibilityChangeHandler_ = function onVisibilityChangeHandler_(visibilityData) {\n    if (this.disposed_) {\n      return;\n    } //TODO: Need discussion\n    // rootVisibility is set by hostAPI, instead of ampdoc.isVisible\n\n\n    var ratio = visibilityData.visibleRatio; // Convert to valid ratio range in [0, 1]\n\n    ratio = Math.min(Math.max(0, ratio), 1);\n    this.setRootVisibility(ratio);\n    this.intersectionRect_ = visibilityData.visibleRect;\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.observe = function observe() {\n    (0, _log.devAssert)(false, '%s: element level visibility not supported, ' + 'getElementIntersectionRect should not be called in ' + 'VisibilityManager for mApp', TAG);\n    return function () {};\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.getElementVisibility = function getElementVisibility() {\n    (0, _log.devAssert)(false, '%s: element level visibility not supported, ' + 'getElementIntersectionRect should not be called in ' + 'VisibilityManager for mApp', TAG);\n    return 0;\n  }\n  /**\n   * @override\n   * @return {?JsonObject}\n   */\n  ;\n\n  _proto.getElementIntersectionRect = function getElementIntersectionRect() {\n    (0, _log.dev)().error(TAG, 'element level visibility not supported, ' + 'getElementIntersectionRect should not be called in ' + 'VisibilityManager for mApp');\n    return (0, _object.dict)({});\n  };\n\n  return VisibilityManagerForMApp;\n}(_visibilityManager.VisibilityManager);\n\nexports.VisibilityManagerForMApp = VisibilityManagerForMApp;\n\n},{\"../../../src/log\":125,\"../../../src/utils/object\":154,\"./opacity\":17,\"./visibility-manager\":101}],101:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.provideVisibilityManager = provideVisibilityManager;\nexports.VisibilityManagerForEmbed = exports.VisibilityManagerForDoc = exports.VisibilityManager = void 0;\n\nvar _intersectionObserverPolyfill = require(\"../../../src/intersection-observer-polyfill\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _visibilityModel = require(\"./visibility-model\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _iframeHelper = require(\"../../../src/iframe-helper\");\n\nvar _opacity = require(\"./opacity\");\n\nvar _mode = require(\"../../../src/mode\");\n\nvar _service = require(\"../../../src/service\");\n\nvar _types = require(\"../../../src/types\");\n\nvar _layoutRect = require(\"../../../src/layout-rect\");\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar TAG = 'amp-analytics/visibility-manager';\nvar PROP = '__AMP_VIS';\nvar VISIBILITY_ID_PROP = '__AMP_VIS_ID';\n/** @type {number} */\n\nvar visibilityIdCounter = 1;\n/**\n * @param {!Element} element\n * @return {number}\n */\n\nfunction getElementId(element) {\n  var id = element[VISIBILITY_ID_PROP];\n\n  if (!id) {\n    id = ++visibilityIdCounter;\n    element[VISIBILITY_ID_PROP] = id;\n  }\n\n  return id;\n}\n/**\n * @param {!Node} rootNode\n * @return {!VisibilityManager}\n */\n\n\nfunction provideVisibilityManager(rootNode) {\n  if (!rootNode[PROP]) {\n    rootNode[PROP] = createVisibilityManager(rootNode);\n  }\n\n  return rootNode[PROP];\n}\n/**\n * @param {!Node} rootNode\n * @return {!VisibilityManager}\n */\n\n\nfunction createVisibilityManager(rootNode) {\n  // TODO(#22733): cleanup when ampdoc-fie is launched.\n  var ampdoc = _services.Services.ampdoc(rootNode);\n\n  var frame = (0, _service.getParentWindowFrameElement)(rootNode);\n  var embed = frame && (0, _iframeHelper.getFriendlyIframeEmbedOptional)(frame);\n\n  if (embed && frame && frame.ownerDocument) {\n    return new VisibilityManagerForEmbed(provideVisibilityManager(frame.ownerDocument), embed);\n  }\n\n  return new VisibilityManagerForDoc(ampdoc);\n}\n/**\n * A base class for `VisibilityManagerForDoc` and `VisibilityManagerForEmbed`.\n * The instance of this class corresponds 1:1 to `AnalyticsRoot`. It represents\n * a collection of all visibility triggers declared within the `AnalyticsRoot`.\n * @implements {../../../src/service.Disposable}\n * @abstract\n */\n\n\nvar VisibilityManager =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {?VisibilityManager} parent\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  function VisibilityManager(parent, ampdoc) {\n    var _this = this;\n\n    /** @const @protected */\n    this.parent = parent;\n    /** @const @protected */\n\n    this.ampdoc = ampdoc;\n    /** @const @private */\n\n    this.resources_ = _services.Services.resourcesForDoc(ampdoc);\n    /** @private {number} */\n\n    this.rootVisibility_ = 0;\n    /** @const @private {!Array<!VisibilityModel>}> */\n\n    this.models_ = [];\n    /** @private {?Array<!VisibilityManager>} */\n\n    this.children_ = null;\n    /** @const @private {!Array<!UnlistenDef>} */\n\n    this.unsubscribe_ = [];\n    /** @private {number} Maximum scroll position attained */\n\n    this.maxScrollDepth_ = 0;\n\n    if (this.parent) {\n      this.parent.addChild_(this);\n    }\n\n    var viewport = _services.Services.viewportForDoc(this.ampdoc);\n\n    viewport.onChanged(function () {\n      _this.maybeUpdateMaxScrollDepth(viewport.getScrollTop());\n    });\n  }\n  /**\n   * @param {!VisibilityManager} child\n   * @private\n   */\n\n\n  var _proto = VisibilityManager.prototype;\n\n  _proto.addChild_ = function addChild_(child) {\n    if (!this.children_) {\n      this.children_ = [];\n    }\n\n    this.children_.push(child);\n  }\n  /**\n   * @param {!VisibilityManager} child\n   * @private\n   */\n  ;\n\n  _proto.removeChild_ = function removeChild_(child) {\n    if (this.children_) {\n      var index = this.children_.indexOf(child);\n\n      if (index != -1) {\n        this.children_.splice(index, 1);\n      }\n    }\n  }\n  /** @override */\n  ;\n\n  _proto.dispose = function dispose() {\n    // Give the chance for all events to complete.\n    this.setRootVisibility(0); // Dispose all models.\n\n    for (var i = this.models_.length - 1; i >= 0; i--) {\n      this.models_[i].dispose();\n    } // Unsubscribe everything else.\n\n\n    this.unsubscribe_.forEach(function (unsubscribe) {\n      unsubscribe();\n    });\n    this.unsubscribe_.length = 0;\n\n    if (this.parent) {\n      this.parent.removeChild_(this);\n    }\n\n    if (this.children_) {\n      for (var _i = 0; _i < this.children_.length; _i++) {\n        this.children_[_i].dispose();\n      }\n    }\n  }\n  /**\n   * @param {!UnlistenDef} handler\n   */\n  ;\n\n  _proto.unsubscribe = function unsubscribe(handler) {\n    this.unsubscribe_.push(handler);\n  }\n  /**\n   * The start time from which all visibility events and times are measured.\n   * @return {number}\n   * @abstract\n   */\n  ;\n\n  _proto.getStartTime = function getStartTime() {}\n  /**\n   * Whether the visibility root is currently in the background.\n   * @return {boolean}\n   * @abstract\n   */\n  ;\n\n  _proto.isBackgrounded = function isBackgrounded() {}\n  /**\n   * Whether the visibility root has been created in the background mode.\n   * @return {boolean}\n   * @abstract\n   */\n  ;\n\n  _proto.isBackgroundedAtStart = function isBackgroundedAtStart() {}\n  /**\n   * Returns the root's, root's parent's and root's children's\n   * lowest opacity value\n   * @return {number}\n   * @abstract\n   */\n  ;\n\n  _proto.getRootMinOpacity = function getRootMinOpacity() {}\n  /**\n   * Returns the root's layout rect.\n   * @return {!../../../src/layout-rect.LayoutRectDef}\n   * @abstract\n   */\n  ;\n\n  _proto.getRootLayoutBox = function getRootLayoutBox() {}\n  /**\n   * @return {number}\n   */\n  ;\n\n  _proto.getRootVisibility = function getRootVisibility() {\n    if (!this.parent) {\n      return this.rootVisibility_;\n    }\n\n    return this.parent.getRootVisibility() > 0 ? this.rootVisibility_ : 0;\n  }\n  /**\n   * @param {number} visibility\n   */\n  ;\n\n  _proto.setRootVisibility = function setRootVisibility(visibility) {\n    this.rootVisibility_ = visibility;\n    this.updateModels_();\n\n    if (this.children_) {\n      for (var i = 0; i < this.children_.length; i++) {\n        this.children_[i].updateModels_();\n      }\n    }\n  }\n  /**\n   * Update the maximum amount that the user has scrolled down the page.\n   * @param {number} depth\n   */\n  ;\n\n  _proto.maybeUpdateMaxScrollDepth = function maybeUpdateMaxScrollDepth(depth) {\n    if (depth > this.maxScrollDepth_) {\n      this.maxScrollDepth_ = depth;\n    }\n  }\n  /**\n   * Gets the maximum amount that the user has scrolled down the page.\n   * @return {number} depth\n   */\n  ;\n\n  _proto.getMaxScrollDepth = function getMaxScrollDepth() {\n    return this.maxScrollDepth_;\n  }\n  /** @private */\n  ;\n\n  _proto.updateModels_ = function updateModels_() {\n    for (var i = 0; i < this.models_.length; i++) {\n      this.models_[i].update();\n    }\n  }\n  /**\n   * Listens to the visibility events on the root as the whole and the given\n   * visibility spec. The visibility tracking can be deferred until\n   * `readyPromise` is resolved, if specified.\n   * @param {!JsonObject} spec\n   * @param {?Promise} readyPromise\n   * @param {?function():!Promise} createReportPromiseFunc\n   * @param {function(!JsonObject)} callback\n   * @return {!UnlistenDef}\n   */\n  ;\n\n  _proto.listenRoot = function listenRoot(spec, readyPromise, createReportPromiseFunc, callback) {\n    var calcVisibility = this.getRootVisibility.bind(this);\n    return this.createModelAndListen_(calcVisibility, spec, readyPromise, createReportPromiseFunc, callback);\n  }\n  /**\n   * Listens to the visibility events for the specified element and the given\n   * visibility spec. The visibility tracking can be deferred until\n   * `readyPromise` is resolved, if specified.\n   * @param {!Element} element\n   * @param {!JsonObject} spec\n   * @param {?Promise} readyPromise\n   * @param {?function():!Promise} createReportPromiseFunc\n   * @param {function(!JsonObject)} callback\n   * @return {!UnlistenDef}\n   */\n  ;\n\n  _proto.listenElement = function listenElement(element, spec, readyPromise, createReportPromiseFunc, callback) {\n    var calcVisibility = this.getElementVisibility.bind(this, element);\n    return this.createModelAndListen_(calcVisibility, spec, readyPromise, createReportPromiseFunc, callback, element);\n  }\n  /**\n   * Create visibilityModel and listen to visible events.\n   * @param {function():number} calcVisibility\n   * @param {!JsonObject} spec\n   * @param {?Promise} readyPromise\n   * @param {?function():!Promise} createReportPromiseFunc\n   * @param {function(!JsonObject)} callback\n   * @param {!Element=} opt_element\n   * @return {!UnlistenDef}\n   */\n  ;\n\n  _proto.createModelAndListen_ = function createModelAndListen_(calcVisibility, spec, readyPromise, createReportPromiseFunc, callback, opt_element) {\n    if (spec['visiblePercentageThresholds'] && spec['visiblePercentageMin'] == undefined && spec['visiblePercentageMax'] == undefined) {\n      var unlisteners = [];\n      var ranges = spec['visiblePercentageThresholds'];\n\n      if (!ranges || !(0, _types.isArray)(ranges)) {\n        (0, _log.user)().error(TAG, 'invalid visiblePercentageThresholds');\n        return function () {};\n      }\n\n      for (var i = 0; i < ranges.length; i++) {\n        var percents = ranges[i];\n\n        if (!(0, _types.isArray)(percents) || percents.length != 2) {\n          (0, _log.user)().error(TAG, 'visiblePercentageThresholds entry length is not 2');\n          continue;\n        }\n\n        if (!(0, _types.isFiniteNumber)(percents[0]) || !(0, _types.isFiniteNumber)(percents[1])) {\n          // not valid number\n          (0, _log.user)().error(TAG, 'visiblePercentageThresholds entry is not valid number');\n          continue;\n        }\n\n        var min = Number(percents[0]);\n        var max = Number(percents[1]); // Min and max must be valid percentages. Min may not be more than max.\n        // Max is inclusive. Min is usually exclusive, but there are two\n        // special cases: if min and max are both 0, or both 100, then both\n        // are inclusive. Otherwise it would not be possible to trigger an\n        // event on exactly 0% or 100%.\n\n        if (min < 0 || max > 100 || min > max || min == max && min != 100 && max != 0) {\n          (0, _log.user)().error(TAG, 'visiblePercentageThresholds entry invalid min/max value');\n          continue;\n        }\n\n        var newSpec = spec;\n        newSpec['visiblePercentageMin'] = min;\n        newSpec['visiblePercentageMax'] = max;\n\n        var _model = new _visibilityModel.VisibilityModel(newSpec, calcVisibility);\n\n        unlisteners.push(this.listen_(_model, spec, readyPromise, createReportPromiseFunc, callback, opt_element));\n      }\n\n      return function () {\n        unlisteners.forEach(function (unlistener) {\n          return unlistener();\n        });\n      };\n    }\n\n    var model = new _visibilityModel.VisibilityModel(spec, calcVisibility);\n    return this.listen_(model, spec, readyPromise, createReportPromiseFunc, callback, opt_element);\n  }\n  /**\n   * @param {!VisibilityModel} model\n   * @param {!JsonObject} spec\n   * @param {?Promise} readyPromise\n   * @param {?function():!Promise} createReportPromiseFunc\n   * @param {function(!JsonObject)} callback\n   * @param {!Element=} opt_element\n   * @return {!UnlistenDef}\n   * @private\n   */\n  ;\n\n  _proto.listen_ = function listen_(model, spec, readyPromise, createReportPromiseFunc, callback, opt_element) {\n    var _this2 = this;\n\n    if (createReportPromiseFunc) {\n      model.setReportReady(createReportPromiseFunc);\n    }\n\n    var viewport = _services.Services.viewportForDoc(this.ampdoc);\n\n    var scrollDepth = viewport.getScrollTop();\n    this.maybeUpdateMaxScrollDepth(scrollDepth); // Block visibility.\n\n    if (readyPromise) {\n      model.setReady(false);\n      readyPromise.then(function () {\n        model.setReady(true);\n        model.maybeSetInitialScrollDepth(scrollDepth);\n      });\n    } else {\n      model.maybeSetInitialScrollDepth(scrollDepth);\n    } // Process the event.\n\n\n    model.onTriggerEvent(function () {\n      var startTime = _this2.getStartTime();\n\n      var state = model.getState(startTime); // Additional doc-level state.\n\n      state['backgrounded'] = _this2.isBackgrounded() ? 1 : 0;\n      state['backgroundedAtStart'] = _this2.isBackgroundedAtStart() ? 1 : 0;\n      state['totalTime'] = Date.now() - startTime; // Optionally, element-level state.\n\n      var layoutBox;\n\n      if (opt_element) {\n        state['opacity'] = (0, _opacity.getMinOpacity)(opt_element);\n\n        var resource = _this2.resources_.getResourceForElementOptional(opt_element);\n\n        layoutBox = resource ? resource.getLayoutBox() : viewport.getLayoutRect(opt_element);\n\n        var intersectionRatio = _this2.getElementVisibility(opt_element);\n\n        var intersectionRect = _this2.getElementIntersectionRect(opt_element);\n\n        Object.assign(state, (0, _object.dict)({\n          'intersectionRatio': intersectionRatio,\n          'intersectionRect': JSON.stringify(intersectionRect)\n        }));\n      } else {\n        state['opacity'] = _this2.getRootMinOpacity();\n        state['intersectionRatio'] = _this2.getRootVisibility();\n        layoutBox = _this2.getRootLayoutBox();\n      }\n\n      model.maybeDispose();\n\n      if (layoutBox) {\n        Object.assign(state, (0, _object.dict)({\n          'elementX': layoutBox.left,\n          'elementY': layoutBox.top,\n          'elementWidth': layoutBox.width,\n          'elementHeight': layoutBox.height\n        }));\n        state['initialScrollDepth'] = (0, _layoutRect.layoutPositionRelativeToScrolledViewport)(layoutBox, viewport, model.getInitialScrollDepth());\n        state['maxScrollDepth'] = (0, _layoutRect.layoutPositionRelativeToScrolledViewport)(layoutBox, viewport, _this2.getMaxScrollDepth());\n      }\n\n      callback(state);\n    });\n    this.models_.push(model);\n    model.unsubscribe(function () {\n      var index = _this2.models_.indexOf(model);\n\n      if (index != -1) {\n        _this2.models_.splice(index, 1);\n      }\n    }); // Observe the element via InOb.\n\n    if (opt_element) {\n      // It's important that this happens after all the setup is done, b/c\n      // intersection observer can fire immedidately. Per spec, this should\n      // NOT happen. However, all of the existing InOb polyfills, as well as\n      // some versions of native implementations, make this mistake.\n      model.unsubscribe(this.observe(opt_element, function () {\n        return model.update();\n      }));\n    } // Start update.\n\n\n    model.update();\n    return function () {\n      model.dispose();\n    };\n  }\n  /**\n   * Observes the intersections of the specified element in the viewport.\n   * @param {!Element} unusedElement\n   * @param {function(number)} unusedListener\n   * @return {!UnlistenDef}\n   * @protected\n   * @abstract\n   */\n  ;\n\n  _proto.observe = function observe(unusedElement, unusedListener) {}\n  /**\n   * @param {!Element} unusedElement\n   * @return {number}\n   * @abstract\n   */\n  ;\n\n  _proto.getElementVisibility = function getElementVisibility(unusedElement) {}\n  /**\n   * @param {!Element} unusedElement\n   * @return {?JsonObject}\n   * @abstract\n   */\n  ;\n\n  _proto.getElementIntersectionRect = function getElementIntersectionRect(unusedElement) {};\n\n  return VisibilityManager;\n}();\n/**\n * The implementation of `VisibilityManager` for an AMP document. Two\n * distinct modes are supported: the main AMP doc and a in-a-box doc.\n */\n\n\nexports.VisibilityManager = VisibilityManager;\n\nvar VisibilityManagerForDoc =\n/*#__PURE__*/\nfunction (_VisibilityManager) {\n  _inheritsLoose(VisibilityManagerForDoc, _VisibilityManager);\n\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  function VisibilityManagerForDoc(ampdoc) {\n    var _this3;\n\n    _this3 = _VisibilityManager.call(this,\n    /* parent */\n    null, ampdoc) || this;\n    /** @const @private */\n\n    _this3.viewport_ = _services.Services.viewportForDoc(ampdoc);\n    /** @private {boolean} */\n\n    _this3.backgrounded_ = !ampdoc.isVisible();\n    /** @const @private {boolean} */\n\n    _this3.backgroundedAtStart_ = _this3.isBackgrounded();\n    /**\n     * @const\n     * @private {!Object<number, {\n     *   element: !Element,\n     *   intersectionRatio: number,\n     *   listeners: !Array<function(number)>\n     * }>}\n     */\n\n    _this3.trackedElements_ = (0, _object.map)();\n    /** @private {?IntersectionObserver|?IntersectionObserverPolyfill} */\n\n    _this3.intersectionObserver_ = null;\n\n    if ((0, _mode.getMode)(_this3.ampdoc.win).runtime == 'inabox') {\n      // In-a-box: visibility depends on the InOb.\n      var root = _this3.ampdoc.getRootNode();\n\n      var rootElement = (0, _log.dev)().assertElement(root.documentElement || root.body || root);\n\n      _this3.unsubscribe(_this3.observe(rootElement, _this3.setRootVisibility.bind(_assertThisInitialized(_this3))));\n    } else {\n      // Main document: visibility is based on the ampdoc.\n      _this3.setRootVisibility(_this3.ampdoc.isVisible() ? 1 : 0);\n\n      _this3.unsubscribe(_this3.ampdoc.onVisibilityChanged(function () {\n        var isVisible = _this3.ampdoc.isVisible();\n\n        if (!isVisible) {\n          _this3.backgrounded_ = true;\n        }\n\n        _this3.setRootVisibility(isVisible ? 1 : 0);\n      }));\n    }\n\n    return _this3;\n  }\n  /** @override */\n\n\n  var _proto2 = VisibilityManagerForDoc.prototype;\n\n  _proto2.dispose = function dispose() {\n    _VisibilityManager.prototype.dispose.call(this);\n\n    if (this.intersectionObserver_) {\n      this.intersectionObserver_.disconnect();\n      this.intersectionObserver_ = null;\n    }\n  }\n  /** @override */\n  ;\n\n  _proto2.getStartTime = function getStartTime() {\n    return (0, _log.dev)().assertNumber(this.ampdoc.getFirstVisibleTime());\n  }\n  /** @override */\n  ;\n\n  _proto2.isBackgrounded = function isBackgrounded() {\n    return this.backgrounded_;\n  }\n  /** @override */\n  ;\n\n  _proto2.isBackgroundedAtStart = function isBackgroundedAtStart() {\n    return this.backgroundedAtStart_;\n  }\n  /** @override */\n  ;\n\n  _proto2.getRootMinOpacity = function getRootMinOpacity() {\n    var root = this.ampdoc.getRootNode();\n    var rootElement = (0, _log.dev)().assertElement(root.documentElement || root.body || root);\n    return (0, _opacity.getMinOpacity)(rootElement);\n  }\n  /** @override */\n  ;\n\n  _proto2.getRootLayoutBox = function getRootLayoutBox() {\n    // This code is the same for \"in-a-box\" and standalone doc.\n    var root = this.ampdoc.getRootNode();\n    var rootElement = (0, _log.dev)().assertElement(root.documentElement || root.body || root);\n    return this.viewport_.getLayoutRect(rootElement);\n  }\n  /** @override */\n  ;\n\n  _proto2.observe = function observe(element, listener) {\n    var _this4 = this;\n\n    this.polyfillAmpElementIfNeeded_(element);\n    var id = getElementId(element);\n    var trackedElement = this.trackedElements_[id];\n\n    if (!trackedElement) {\n      trackedElement = {\n        element: element,\n        intersectionRatio: 0,\n        intersectionRect: null,\n        listeners: []\n      };\n      this.trackedElements_[id] = trackedElement;\n    } else if (trackedElement.intersectionRatio > 0) {\n      // This has already been tracked and the `intersectionRatio` is fresh.\n      listener(trackedElement.intersectionRatio);\n    }\n\n    trackedElement.listeners.push(listener);\n    this.getIntersectionObserver_().observe(element);\n    return function () {\n      var trackedElement = _this4.trackedElements_[id];\n\n      if (trackedElement) {\n        var index = trackedElement.listeners.indexOf(listener);\n\n        if (index != -1) {\n          trackedElement.listeners.splice(index, 1);\n        }\n\n        if (trackedElement.listeners.length == 0) {\n          _this4.intersectionObserver_.unobserve(element);\n\n          delete _this4.trackedElements_[id];\n        }\n      }\n    };\n  }\n  /** @override */\n  ;\n\n  _proto2.getElementVisibility = function getElementVisibility(element) {\n    if (this.getRootVisibility() == 0) {\n      return 0;\n    }\n\n    var id = getElementId(element);\n    var trackedElement = this.trackedElements_[id];\n    return trackedElement && trackedElement.intersectionRatio || 0;\n  }\n  /**\n   * Gets the intersection element.\n   *\n   * @param {!Element} element\n   * @return {?JsonObject}\n   */\n  ;\n\n  _proto2.getElementIntersectionRect = function getElementIntersectionRect(element) {\n    if (this.getElementVisibility(element) <= 0) {\n      return null;\n    }\n\n    var id = getElementId(element);\n    var trackedElement = this.trackedElements_[id];\n\n    if (trackedElement) {\n      return (\n        /** @type {!JsonObject} */\n        trackedElement.intersectionRect\n      );\n    }\n\n    return null;\n  }\n  /**\n   * @return {!IntersectionObserver|!IntersectionObserverPolyfill}\n   * @private\n   */\n  ;\n\n  _proto2.getIntersectionObserver_ = function getIntersectionObserver_() {\n    if (!this.intersectionObserver_) {\n      this.intersectionObserver_ = this.createIntersectionObserver_();\n    }\n\n    return this.intersectionObserver_;\n  }\n  /**\n   * @return {!IntersectionObserver|!IntersectionObserverPolyfill}\n   * @private\n   */\n  ;\n\n  _proto2.createIntersectionObserver_ = function createIntersectionObserver_() {\n    var _this5 = this;\n\n    // Native.\n    var win = this.ampdoc.win;\n\n    if ((0, _intersectionObserverPolyfill.nativeIntersectionObserverSupported)(win)) {\n      return new win.IntersectionObserver(this.onIntersectionChanges_.bind(this), {\n        threshold: _intersectionObserverPolyfill.DEFAULT_THRESHOLD\n      });\n    } // Polyfill.\n\n\n    var intersectionObserverPolyfill = new _intersectionObserverPolyfill.IntersectionObserverPolyfill(this.onIntersectionChanges_.bind(this), {\n      threshold: _intersectionObserverPolyfill.DEFAULT_THRESHOLD\n    });\n\n    var ticker = function ticker() {\n      intersectionObserverPolyfill.tick(_this5.viewport_.getRect());\n    };\n\n    this.unsubscribe(this.viewport_.onScroll(ticker));\n    this.unsubscribe(this.viewport_.onChanged(ticker)); // Tick in the next event loop. That's how native InOb works.\n\n    setTimeout(ticker);\n    return intersectionObserverPolyfill;\n  }\n  /**\n   * @param {!Element} element\n   * @private\n   */\n  ;\n\n  _proto2.polyfillAmpElementIfNeeded_ = function polyfillAmpElementIfNeeded_(element) {\n    var _this6 = this;\n\n    var win = this.ampdoc.win;\n\n    if ((0, _intersectionObserverPolyfill.nativeIntersectionObserverSupported)(win)) {\n      return;\n    } // InOb polyfill requires partial AmpElement implementation.\n\n\n    if (typeof element.getLayoutBox == 'function') {\n      return;\n    }\n\n    element.getLayoutBox = function () {\n      return _this6.viewport_.getLayoutRect(element);\n    };\n\n    element.getOwner = function () {\n      return null;\n    };\n  }\n  /**\n   * @param {!Array<!IntersectionObserverEntry>} entries\n   * @private\n   */\n  ;\n\n  _proto2.onIntersectionChanges_ = function onIntersectionChanges_(entries) {\n    var _this7 = this;\n\n    entries.forEach(function (change) {\n      var intersection = change.intersectionRect; // IntersectionRect type now changed from ClientRect to DOMRectReadOnly.\n      // TODO(@zhouyx): Fix all InOb related type.\n\n      intersection = (0, _layoutRect.layoutRectLtwh)(Number(intersection.left), Number(intersection.top), Number(intersection.width), Number(intersection.height));\n\n      _this7.onIntersectionChange_(change.target, change.intersectionRatio, intersection);\n    });\n  }\n  /**\n   * @param {!Element} target\n   * @param {number} intersectionRatio\n   * @param {!../../../src/layout-rect.LayoutRectDef} intersectionRect\n   * @private\n   */\n  ;\n\n  _proto2.onIntersectionChange_ = function onIntersectionChange_(target, intersectionRatio, intersectionRect) {\n    intersectionRatio = Math.min(Math.max(intersectionRatio, 0), 1);\n    var id = getElementId(target);\n    var trackedElement = this.trackedElements_[id];\n\n    if (trackedElement) {\n      trackedElement.intersectionRatio = intersectionRatio;\n      trackedElement.intersectionRect = intersectionRect;\n\n      for (var i = 0; i < trackedElement.listeners.length; i++) {\n        trackedElement.listeners[i](intersectionRatio);\n      }\n    }\n  };\n\n  return VisibilityManagerForDoc;\n}(VisibilityManager);\n/**\n * The implementation of `VisibilityManager` for a FIE embed. This visibility\n * root delegates most of tracking functions to its parent, the ampdoc root.\n */\n\n\nexports.VisibilityManagerForDoc = VisibilityManagerForDoc;\n\nvar VisibilityManagerForEmbed =\n/*#__PURE__*/\nfunction (_VisibilityManager2) {\n  _inheritsLoose(VisibilityManagerForEmbed, _VisibilityManager2);\n\n  /**\n   * @param {!VisibilityManager} parent\n   * @param {!../../../src/friendly-iframe-embed.FriendlyIframeEmbed} embed\n   */\n  function VisibilityManagerForEmbed(parent, embed) {\n    var _this8;\n\n    _this8 = _VisibilityManager2.call(this, parent, parent.ampdoc) || this;\n    /** @const */\n\n    _this8.embed = embed;\n    /** @const @private {boolean} */\n\n    _this8.backgroundedAtStart_ = _this8.parent.isBackgrounded();\n\n    _this8.unsubscribe(_this8.parent.observe((0, _log.dev)().assertElement(embed.host), _this8.setRootVisibility.bind(_assertThisInitialized(_this8))));\n\n    return _this8;\n  }\n  /** @override */\n\n\n  var _proto3 = VisibilityManagerForEmbed.prototype;\n\n  _proto3.getStartTime = function getStartTime() {\n    return this.embed.getStartTime();\n  }\n  /** @override */\n  ;\n\n  _proto3.isBackgrounded = function isBackgrounded() {\n    return this.parent.isBackgrounded();\n  }\n  /** @override */\n  ;\n\n  _proto3.isBackgroundedAtStart = function isBackgroundedAtStart() {\n    return this.backgroundedAtStart_;\n  }\n  /** @override */\n  ;\n\n  _proto3.getRootMinOpacity = function getRootMinOpacity() {\n    var rootElement = (0, _log.dev)().assertElement(this.embed.iframe);\n    return (0, _opacity.getMinOpacity)(rootElement);\n  }\n  /**\n   * Gets the layout box of the embedded document. Note that this may be\n   * smaller than the size allocated by the host. In that case, the document\n   * will be centered, and the unfilled space will not be reflected in this\n   * return value.\n   * embed.iframe is used to calculate the root layoutbox, since it is more\n   * important for the embedded document to know its own size, rather than\n   * the size of the host rectangle which it may or may not entirely fill.\n   * embed.host is used to calculate the root visibility, however, since\n   * the visibility of the host element directly determines the embedded\n   * document's visibility.\n   * @override\n   */\n  ;\n\n  _proto3.getRootLayoutBox = function getRootLayoutBox() {\n    var rootElement = (0, _log.dev)().assertElement(this.embed.iframe);\n    return _services.Services.viewportForDoc(this.ampdoc).getLayoutRect(rootElement);\n  }\n  /** @override */\n  ;\n\n  _proto3.observe = function observe(element, listener) {\n    return this.parent.observe(element, listener);\n  }\n  /** @override */\n  ;\n\n  _proto3.getElementVisibility = function getElementVisibility(element) {\n    if (this.getRootVisibility() == 0) {\n      return 0;\n    }\n\n    return this.parent.getElementVisibility(element);\n  }\n  /**\n   * Returns intersecting element.\n   * @override\n   */\n  ;\n\n  _proto3.getElementIntersectionRect = function getElementIntersectionRect(element) {\n    if (this.getRootVisibility() == 0) {\n      return null;\n    }\n\n    return this.parent.getElementIntersectionRect(element);\n  };\n\n  return VisibilityManagerForEmbed;\n}(VisibilityManager);\n\nexports.VisibilityManagerForEmbed = VisibilityManagerForEmbed;\n\n},{\"../../../src/iframe-helper\":116,\"../../../src/intersection-observer-polyfill\":121,\"../../../src/layout-rect\":123,\"../../../src/log\":125,\"../../../src/mode\":127,\"../../../src/service\":131,\"../../../src/services\":141,\"../../../src/types\":145,\"../../../src/utils/object\":154,\"./opacity\":17,\"./visibility-model\":102}],102:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.VisibilityModel = void 0;\n\nvar _promise = require(\"../../../src/utils/promise\");\n\nvar _observable = require(\"../../../src/observable\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _object = require(\"../../../src/utils/object\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This class implements visibility calculations based on the\n * visibility ratio. It's used for documents, embeds and individual element.\n * @implements {../../../src/service.Disposable}\n */\nvar VisibilityModel =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!JsonObject} spec\n   * @param {function():number} calcVisibility\n   */\n  function VisibilityModel(spec, calcVisibility) {\n    var _this = this;\n\n    /** @const @private */\n    this.calcVisibility_ = calcVisibility;\n    /**\n     * Spec parameters.\n     * @private {!JsonObject}\n     */\n\n    this.spec_ = (0, _object.dict)({\n      'visiblePercentageMin': Number(spec['visiblePercentageMin']) / 100 || 0,\n      'visiblePercentageMax': Number(spec['visiblePercentageMax']) / 100 || 1,\n      'totalTimeMin': Number(spec['totalTimeMin']) || 0,\n      'totalTimeMax': Number(spec['totalTimeMax']) || Infinity,\n      'continuousTimeMin': Number(spec['continuousTimeMin']) || 0,\n      'continuousTimeMax': Number(spec['continuousTimeMax']) || Infinity\n    }); // Above, if visiblePercentageMax was not specified, assume 100%.\n    // Here, do allow 0% to be the value if that is what was specified.\n\n    if (String(spec['visiblePercentageMax']).trim() === '0') {\n      this.spec_['visiblePercentageMax'] = 0;\n    }\n    /**\n     * Accumulate visibility counters but do not fire the trigger until the\n     * ready promise resolves.\n     * @private @const {boolean}\n     */\n\n\n    this.ignoreVisibilityForReport_ = spec['reportWhen'] !== undefined;\n    /** @private {boolean} */\n\n    this.repeat_ = spec['repeat'] === true;\n    /** @private {?Observable} */\n\n    this.onTriggerObservable_ = new _observable.Observable();\n    var deferred = new _promise.Deferred();\n    /** @private */\n\n    this.eventPromise_ = deferred.promise;\n    /** @private {?function()} */\n\n    this.eventResolver_ = deferred.resolve;\n    this.eventPromise_.then(function () {\n      _this.onTriggerObservable_.fire();\n    });\n    /** @private {!Array<!UnlistenDef>} */\n\n    this.unsubscribe_ = [];\n    /** @const @private {time} */\n\n    this.createdTime_ = Date.now(); // TODO(warrengm): Consider refactoring so that the ready defaults are\n    // false.\n\n    /** @private {boolean} */\n\n    this.ready_ = true;\n    /** @private {boolean} */\n\n    this.reportReady_ = true;\n    /** @private {?function():!Promise} */\n\n    this.createReportReadyPromise_ = null;\n    /** @private {?number} */\n\n    this.scheduledUpdateTimeoutId_ = null;\n    /** @private {boolean} */\n\n    this.matchesVisibility_ = false;\n    /** @private {boolean} */\n\n    this.everMatchedVisibility_ = false;\n    /** @private {time} duration in milliseconds */\n\n    this.continuousTime_ = 0;\n    /** @private {time} duration in milliseconds */\n\n    this.maxContinuousVisibleTime_ = 0;\n    /** @private {time} duration in milliseconds */\n\n    this.totalVisibleTime_ = 0;\n    /** @private {time} milliseconds since epoch */\n\n    this.firstSeenTime_ = 0;\n    /** @private {time} milliseconds since epoch */\n\n    this.lastSeenTime_ = 0;\n    /** @private {time} milliseconds since epoch */\n\n    this.firstVisibleTime_ = 0;\n    /** @private {time} milliseconds since epoch */\n\n    this.lastVisibleTime_ = 0;\n    /** @private {time} percent value in a [0, 1] range */\n\n    this.loadTimeVisibility_ = 0;\n    /** @private {number} percent value in a [0, 1] range */\n\n    this.minVisiblePercentage_ = 0;\n    /** @private {number} percent value in a [0, 1] range */\n\n    this.maxVisiblePercentage_ = 0;\n    /** @private {time} milliseconds since epoch */\n\n    this.lastVisibleUpdateTime_ = 0;\n    /** @private {number} Scroll position at ini-load time */\n\n    this.initialScrollDepth_ = 0;\n    /**\n     * @private {boolean} Whether scroll position at ini-load time has\n     * been set\n     */\n\n    this.initialScrollDepthAlreadySet_ = false;\n    /** @private {boolean} */\n\n    this.waitToReset_ = false;\n    /** @private {?number} */\n\n    this.scheduleRepeatId_ = null;\n  }\n  /**\n   * Refresh counter on visible reset.\n   * TODO: Right now all state value are scoped state values that gets reset.\n   * We may need to add support to global state values,\n   * that never reset like globalTotalVisibleTime.\n   * Note: loadTimeVisibility is an exception.\n   * @private\n   */\n\n\n  var _proto = VisibilityModel.prototype;\n\n  _proto.reset_ = function reset_() {\n    var _this2 = this;\n\n    (0, _log.devAssert)(!this.eventResolver_, 'Attempt to refresh visible event before previous one resolve');\n    var deferred = new _promise.Deferred();\n    this.eventPromise_ = deferred.promise;\n    this.eventResolver_ = deferred.resolve;\n    this.eventPromise_.then(function () {\n      _this2.onTriggerObservable_.fire();\n    });\n    this.scheduleRepeatId_ = null;\n    this.everMatchedVisibility_ = false;\n    this.matchesVisibility_ = false;\n    this.continuousTime_ = 0;\n    this.maxContinuousVisibleTime_ = 0;\n    this.totalVisibleTime_ = 0;\n    this.firstVisibleTime_ = 0;\n    this.firstSeenTime_ = 0;\n    this.lastSeenTime_ = 0;\n    this.lastVisibleTime_ = 0;\n    this.minVisiblePercentage_ = 0;\n    this.maxVisiblePercentage_ = 0;\n    this.lastVisibleUpdateTime_ = 0;\n    this.waitToReset_ = false;\n  }\n  /**\n   * Function that visibilityManager can used to dispose model or reset model\n   */\n  ;\n\n  _proto.maybeDispose = function maybeDispose() {\n    if (!this.repeat_) {\n      this.dispose();\n    }\n  }\n  /** @override */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.scheduledUpdateTimeoutId_) {\n      clearTimeout(this.scheduledUpdateTimeoutId_);\n      this.scheduledUpdateTimeoutId_ = null;\n    }\n\n    if (this.scheduleRepeatId_) {\n      clearTimeout(this.scheduleRepeatId_);\n      this.scheduleRepeatId_ = null;\n    }\n\n    this.unsubscribe_.forEach(function (unsubscribe) {\n      unsubscribe();\n    });\n    this.unsubscribe_.length = 0;\n    this.eventResolver_ = null;\n\n    if (this.onTriggerObservable_) {\n      this.onTriggerObservable_.removeAll();\n      this.onTriggerObservable_ = null;\n    }\n  }\n  /**\n   * Adds the unsubscribe handler that will be called when this visibility\n   * model is destroyed.\n   * @param {!UnlistenDef} handler\n   */\n  ;\n\n  _proto.unsubscribe = function unsubscribe(handler) {\n    this.unsubscribe_.push(handler);\n  }\n  /**\n   * Adds the event handler that will be called when all visibility conditions\n   * have been met.\n   * @param {function()} handler\n   */\n  ;\n\n  _proto.onTriggerEvent = function onTriggerEvent(handler) {\n    if (this.onTriggerObservable_) {\n      this.onTriggerObservable_.add(handler);\n    }\n\n    if (this.eventPromise_ && !this.eventResolver_) {\n      // If eventPromise has already resolved, need to call handler manually.\n      handler();\n    }\n  }\n  /**\n   * Sets whether this object is ready. Ready means that visibility is\n   * ready to be calculated, e.g. because an element has been\n   * sufficiently rendered.\n   * @param {boolean} ready\n   */\n  ;\n\n  _proto.setReady = function setReady(ready) {\n    this.ready_ = ready;\n    this.update();\n  }\n  /**\n   * Sets that the model needs to wait on extra report ready promise\n   * after all visibility conditions have been met to call report handler\n   * @param {function():!Promise} callback\n   */\n  ;\n\n  _proto.setReportReady = function setReportReady(callback) {\n    this.reportReady_ = false;\n    this.createReportReadyPromise_ = callback;\n  }\n  /**\n   * @return {number}\n   * @private\n   */\n  ;\n\n  _proto.getVisibility_ = function getVisibility_() {\n    return this.ready_ ? this.calcVisibility_() : 0;\n  }\n  /**\n   * Runs the calculation cycle.\n   */\n  ;\n\n  _proto.update = function update() {\n    this.update_(this.getVisibility_());\n  }\n  /**\n   * Returns the calculated state of visibility.\n   * @param {time} startTime\n   * @return {!JsonObject}\n   */\n  ;\n\n  _proto.getState = function getState(startTime) {\n    return (0, _object.dict)({\n      // Observed times, relative to the `startTime`.\n      'firstSeenTime': timeBase(this.firstSeenTime_, startTime),\n      'lastSeenTime': timeBase(this.lastSeenTime_, startTime),\n      'lastVisibleTime': timeBase(this.lastVisibleTime_, startTime),\n      'firstVisibleTime': timeBase(this.firstVisibleTime_, startTime),\n      // Durations.\n      'maxContinuousVisibleTime': this.maxContinuousVisibleTime_,\n      'totalVisibleTime': this.totalVisibleTime_,\n      // Visibility percents.\n      'loadTimeVisibility': this.loadTimeVisibility_ * 100 || 0,\n      'minVisiblePercentage': this.minVisiblePercentage_ * 100,\n      'maxVisiblePercentage': this.maxVisiblePercentage_ * 100\n    });\n  }\n  /**\n   * @param {number} visibility\n   * @private\n   */\n  ;\n\n  _proto.update_ = function update_(visibility) {\n    var _this3 = this;\n\n    // Update state and check if all conditions are satisfied\n    if (this.waitToReset_) {\n      if (!this.isVisibilityMatch_(visibility)) {\n        // We were waiting for a condition to become unmet, and now it has\n        this.reset_();\n      }\n\n      return;\n    }\n\n    if (!this.eventResolver_) {\n      return;\n    } // When ignoreVisibilityForReport_ is true, we update counters but fire the\n    // event when the report ready promise is resolved.\n\n\n    var conditionsMet = this.updateCounters_(visibility) || this.ignoreVisibilityForReport_;\n\n    if (conditionsMet) {\n      if (this.scheduledUpdateTimeoutId_) {\n        clearTimeout(this.scheduledUpdateTimeoutId_);\n        this.scheduledUpdateTimeoutId_ = null;\n      }\n\n      if (this.reportReady_) {\n        // TODO(jonkeller): Can we eliminate eventResolver_?\n        this.eventResolver_();\n        this.eventResolver_ = null;\n\n        if (this.repeat_) {\n          this.waitToReset_ = true;\n          this.continuousTime_ = 0;\n        }\n      } else if (this.createReportReadyPromise_) {\n        // Report when report ready promise resolve\n        var reportReadyPromise = this.createReportReadyPromise_();\n        this.createReportReadyPromise_ = null;\n        reportReadyPromise.then(function () {\n          _this3.reportReady_ = true; // Need to update one more time in case time exceeds\n          // maxContinuousVisibleTime.\n\n          _this3.update();\n        });\n      }\n    } else if (this.matchesVisibility_ && !this.scheduledUpdateTimeoutId_) {\n      // There is unmet duration condition, schedule a check\n      var timeToWait = this.computeTimeToWait_();\n\n      if (timeToWait > 0) {\n        this.scheduledUpdateTimeoutId_ = setTimeout(function () {\n          _this3.scheduledUpdateTimeoutId_ = null;\n\n          _this3.update();\n        }, timeToWait);\n      }\n    } else if (!this.matchesVisibility_ && this.scheduledUpdateTimeoutId_) {\n      clearTimeout(this.scheduledUpdateTimeoutId_);\n      this.scheduledUpdateTimeoutId_ = null;\n    }\n  }\n  /**\n   * Check if visibility fall into the percentage range\n   * @param {number} visibility\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isVisibilityMatch_ = function isVisibilityMatch_(visibility) {\n    (0, _log.devAssert)(visibility >= 0 && visibility <= 1, 'invalid visibility value: %s', visibility); // Special case: If visiblePercentageMin is 100%, then it doesn't make\n    // sense to do the usual (min, max] since that would never be true.\n\n    if (this.spec_['visiblePercentageMin'] == 1) {\n      return visibility == 1;\n    } // Special case: If visiblePercentageMax is 0%, then we\n    // want to ping when the creative becomes not visible.\n\n\n    if (this.spec_['visiblePercentageMax'] == 0) {\n      return visibility == 0;\n    }\n\n    return visibility > this.spec_['visiblePercentageMin'] && visibility <= this.spec_['visiblePercentageMax'];\n  }\n  /**\n   * @param {number} visibility\n   * @return {boolean} true\n   * @private\n   */\n  ;\n\n  _proto.updateCounters_ = function updateCounters_(visibility) {\n    (0, _log.devAssert)(visibility >= 0 && visibility <= 1, 'invalid visibility value: %s', visibility);\n    var now = Date.now();\n\n    if (visibility > 0) {\n      this.firstSeenTime_ = this.firstSeenTime_ || now;\n      this.lastSeenTime_ = now; // Consider it as load time visibility if this happens within 300ms of\n      // page load.\n\n      if (!this.loadTimeVisibility_ && now - this.createdTime_ < 300) {\n        this.loadTimeVisibility_ = visibility;\n      }\n    }\n\n    var prevMatchesVisibility = this.matchesVisibility_;\n    var timeSinceLastUpdate = this.lastVisibleUpdateTime_ ? now - this.lastVisibleUpdateTime_ : 0;\n    this.matchesVisibility_ = this.isVisibilityMatch_(visibility);\n\n    if (this.matchesVisibility_) {\n      this.everMatchedVisibility_ = true;\n\n      if (prevMatchesVisibility) {\n        // Keep counting.\n        this.totalVisibleTime_ += timeSinceLastUpdate;\n        this.continuousTime_ += timeSinceLastUpdate;\n        this.maxContinuousVisibleTime_ = Math.max(this.maxContinuousVisibleTime_, this.continuousTime_);\n      } else {\n        // The resource came into view: start counting.\n        (0, _log.devAssert)(!this.lastVisibleUpdateTime_);\n        this.firstVisibleTime_ = this.firstVisibleTime_ || now;\n      }\n\n      this.lastVisibleUpdateTime_ = now;\n      this.minVisiblePercentage_ = this.minVisiblePercentage_ > 0 ? Math.min(this.minVisiblePercentage_, visibility) : visibility;\n      this.maxVisiblePercentage_ = Math.max(this.maxVisiblePercentage_, visibility);\n      this.lastVisibleTime_ = now;\n    } else if (prevMatchesVisibility) {\n      // The resource went out of view. Do final calculations and reset state.\n      (0, _log.devAssert)(this.lastVisibleUpdateTime_ > 0);\n      this.maxContinuousVisibleTime_ = Math.max(this.maxContinuousVisibleTime_, this.continuousTime_ + timeSinceLastUpdate); // Reset for next visibility event.\n\n      this.lastVisibleUpdateTime_ = 0;\n      this.totalVisibleTime_ += timeSinceLastUpdate;\n      this.continuousTime_ = 0; // Clear only after max is calculated above.\n\n      this.lastVisibleTime_ = now;\n    }\n\n    return this.everMatchedVisibility_ && this.totalVisibleTime_ >= this.spec_['totalTimeMin'] && this.totalVisibleTime_ <= this.spec_['totalTimeMax'] && this.maxContinuousVisibleTime_ >= this.spec_['continuousTimeMin'] && this.maxContinuousVisibleTime_ <= this.spec_['continuousTimeMax'];\n  }\n  /**\n   * Set the amount that the user had scrolled down the page at the time of\n   * page loading.\n   * @param {number} depth\n   */\n  ;\n\n  _proto.maybeSetInitialScrollDepth = function maybeSetInitialScrollDepth(depth) {\n    if (!this.initialScrollDepthAlreadySet_) {\n      this.initialScrollDepth_ = depth;\n      this.initialScrollDepthAlreadySet_ = true;\n    }\n  }\n  /**\n   * Gets the amount that the user had scrolled down the page, at the time of\n   * ini-load.\n   * @return {number} depth\n   */\n  ;\n\n  _proto.getInitialScrollDepth = function getInitialScrollDepth() {\n    return this.initialScrollDepth_;\n  }\n  /**\n   * Computes time, assuming the object is currently visible, that it'd take\n   * it to match all timing requirements.\n   * @return {time}\n   * @private\n   */\n  ;\n\n  _proto.computeTimeToWait_ = function computeTimeToWait_() {\n    var waitForContinuousTime = Math.max(this.spec_['continuousTimeMin'] - this.continuousTime_, 0);\n    var waitForTotalTime = Math.max(this.spec_['totalTimeMin'] - this.totalVisibleTime_, 0);\n    var maxWaitTime = Math.max(waitForContinuousTime, waitForTotalTime);\n    return Math.min(maxWaitTime, waitForContinuousTime || Infinity, waitForTotalTime || Infinity);\n  };\n\n  return VisibilityModel;\n}();\n/**\n * Calculates the specified time based on the given `baseTime`.\n * @param {time} time\n * @param {time} baseTime\n * @return {time}\n */\n\n\nexports.VisibilityModel = VisibilityModel;\n\nfunction timeBase(time, baseTime) {\n  return time >= baseTime ? time - baseTime : 0;\n}\n\n},{\"../../../src/log\":125,\"../../../src/observable\":128,\"../../../src/utils/object\":154,\"../../../src/utils/promise\":156}],103:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.listen = listen;\nexports.serializeMessage = serializeMessage;\nexports.deserializeMessage = deserializeMessage;\nexports.isAmpMessage = isAmpMessage;\nexports.IframeTransportEvent = exports.MessageType = exports.CONSTANTS = void 0;\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object\");\n\nvar _eventHelperListen = require(\"./event-helper-listen\");\n\nvar _json = require(\"./json\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const */\nvar AMP_MESSAGE_PREFIX = 'amp-';\nvar CONSTANTS = {\n  responseTypeSuffix: '-result',\n  messageIdFieldName: 'messageId',\n  payloadFieldName: 'payload',\n  contentFieldName: 'content'\n};\n/** @enum {string} */\n\nexports.CONSTANTS = CONSTANTS;\nvar MessageType = {\n  // For amp-ad\n  SEND_EMBED_STATE: 'send-embed-state',\n  EMBED_STATE: 'embed-state',\n  SEND_EMBED_CONTEXT: 'send-embed-context',\n  EMBED_CONTEXT: 'embed-context',\n  SEND_INTERSECTIONS: 'send-intersections',\n  INTERSECTION: 'intersection',\n  EMBED_SIZE: 'embed-size',\n  EMBED_SIZE_CHANGED: 'embed-size-changed',\n  EMBED_SIZE_DENIED: 'embed-size-denied',\n  NO_CONTENT: 'no-content',\n  GET_HTML: 'get-html',\n  GET_CONSENT_STATE: 'get-consent-state',\n  // For the frame to be placed in full overlay mode for lightboxes\n  FULL_OVERLAY_FRAME: 'full-overlay-frame',\n  FULL_OVERLAY_FRAME_RESPONSE: 'full-overlay-frame-response',\n  CANCEL_FULL_OVERLAY_FRAME: 'cancel-full-overlay-frame',\n  CANCEL_FULL_OVERLAY_FRAME_RESPONSE: 'cancel-full-overlay-frame-response',\n  // For amp-inabox\n  SEND_POSITIONS: 'send-positions',\n  POSITION: 'position',\n  // For amp-analytics' iframe-transport\n  SEND_IFRAME_TRANSPORT_EVENTS: 'send-iframe-transport-events',\n  IFRAME_TRANSPORT_EVENTS: 'iframe-transport-events',\n  IFRAME_TRANSPORT_RESPONSE: 'iframe-transport-response',\n  // For user-error-in-iframe\n  USER_ERROR_IN_IFRAME: 'user-error-in-iframe'\n};\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\nexports.MessageType = MessageType;\n\nfunction listen(element, eventType, listener, opt_evtListenerOpts) {\n  return (0, _eventHelperListen.internalListenImplementation)(element, eventType, listener, opt_evtListenerOpts);\n}\n/**\n * Serialize an AMP post message. Output looks like:\n * 'amp-011481323099490{\"type\":\"position\",\"sentinel\":\"12345\",\"foo\":\"bar\"}'\n * @param {string} type\n * @param {string} sentinel\n * @param {JsonObject=} data\n * @param {?string=} rtvVersion\n * @return {string}\n */\n\n\nfunction serializeMessage(type, sentinel, data, rtvVersion) {\n  if (data === void 0) {\n    data = (0, _object.dict)();\n  }\n\n  if (rtvVersion === void 0) {\n    rtvVersion = null;\n  }\n\n  // TODO: consider wrap the data in a \"data\" field. { type, sentinal, data }\n  var message = data;\n  message['type'] = type;\n  message['sentinel'] = sentinel;\n  return AMP_MESSAGE_PREFIX + (rtvVersion || '') + JSON.stringify(message);\n}\n/**\n * Deserialize an AMP post message.\n * Returns null if it's not valid AMP message format.\n *\n * @param {*} message\n * @return {?JsonObject|undefined}\n */\n\n\nfunction deserializeMessage(message) {\n  if (!isAmpMessage(message)) {\n    return null;\n  }\n\n  var startPos = message.indexOf('{');\n  (0, _log.devAssert)(startPos != -1, 'JSON missing in %s', message);\n\n  try {\n    return (0, _json.parseJson)(message.substr(startPos));\n  } catch (e) {\n    (0, _log.dev)().error('MESSAGING', 'Failed to parse message: ' + message, e);\n    return null;\n  }\n}\n/**\n *  Returns true if message looks like it is an AMP postMessage\n *  @param {*} message\n *  @return {boolean}\n */\n\n\nfunction isAmpMessage(message) {\n  return typeof message == 'string' && message.indexOf(AMP_MESSAGE_PREFIX) == 0 && message.indexOf('{') != -1;\n}\n/** @typedef {{creativeId: string, message: string}} */\n\n\nvar IframeTransportEvent; // An event, and the transport ID of the amp-analytics tags that\n// generated it. For instance if the creative with transport\n// ID 2 sends \"hi\", then an IframeTransportEvent would look like:\n// { creativeId: \"2\", message: \"hi\" }\n// If the creative with transport ID 2 sent that, and also sent \"hello\",\n// and the creative with transport ID 3 sends \"goodbye\" then an *array* of 3\n// AmpAnalyticsIframeTransportEvent would be sent to the 3p frame like so:\n// [\n//   { creativeId: \"2\", message: \"hi\" }, // An AmpAnalyticsIframeTransportEvent\n//   { creativeId: \"2\", message: \"hello\" }, // Another\n//   { creativeId: \"3\", message: \"goodbye\" } // And another\n// ]\n\nexports.IframeTransportEvent = IframeTransportEvent;\n\n},{\"./event-helper-listen\":113,\"./json\":122,\"./log\":125,\"./utils/object\":154}],104:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isAdPositionAllowed = isAdPositionAllowed;\nexports.getAdContainer = getAdContainer;\nexports.getAmpAdResourceId = getAmpAdResourceId;\n\nvar _style = require(\"./style\");\n\nvar _log = require(\"./log\");\n\nvar _service = require(\"./service\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar AD_CONTAINER_PROP = '__AMP__AD_CONTAINER';\n/**\n * Tags that are allowed to have fixed positioning\n * @const {!Object<string, boolean>}\n */\n\nvar CONTAINERS = {\n  'AMP-FX-FLYING-CARPET': true,\n  'AMP-LIGHTBOX': true,\n  'AMP-STICKY-AD': true,\n  'AMP-LIGHTBOX-GALLERY': true\n};\n/**\n * Determines if an element is fixed-positioned.\n * OK to use, because it's only called from onLayoutMeasure\n * @param {!Element} el\n * @param {!Window} win\n * @return {boolean}\n */\n\nfunction isPositionFixed(el, win) {\n  var _computedStyle = (0, _style.computedStyle)(win, el),\n      position = _computedStyle.position; // We consider sticky positions as fixed, since they can be fixed.\n\n\n  return position == 'fixed' || position == 'sticky';\n}\n/**\n * @param {!Element} element\n * @param {!Window} win\n * @return {boolean} whether the element position is allowed. If the element\n * belongs to CONTAINERS, it is allowed to be position fixed.\n * If the element has a position fixed ancestor, it is not allowed.\n * This should only be called when a layout on the page was just forced\n * anyway.\n */\n\n\nfunction isAdPositionAllowed(element, win) {\n  var hasFixedAncestor = false;\n  var containers = 0;\n  var el = element;\n\n  do {\n    if (CONTAINERS[el.tagName]) {\n      // The containers must not themselves be contained in a fixed-position\n      // element. Continue the search.\n      containers++;\n      hasFixedAncestor = false;\n    } else if (isPositionFixed((0, _log.dev)().assertElement(el), win)) {\n      // Because certain blessed elements may contain a position fixed\n      // container (which contain an ad), we continue to search the\n      // ancestry tree.\n      hasFixedAncestor = true;\n    }\n\n    el = el.parentElement;\n  } while (el && el.tagName != 'BODY');\n\n  return !hasFixedAncestor && containers <= 1;\n}\n/**\n * Returns the blessed container element tagName if the ad is contained by one.\n * This is called during layout measure.\n * @param {!Element} element\n * @return {?string}\n */\n\n\nfunction getAdContainer(element) {\n  if (element[AD_CONTAINER_PROP] === undefined) {\n    var el = element.parentElement;\n\n    while (el && el.tagName != 'BODY') {\n      if (CONTAINERS[el.tagName]) {\n        return element[AD_CONTAINER_PROP] = el.tagName;\n      }\n\n      el = el.parentElement;\n    }\n\n    element[AD_CONTAINER_PROP] = null;\n  }\n\n  return element[AD_CONTAINER_PROP];\n}\n/**\n * Gets the resource ID of the amp-ad element containing the passed node.\n * If there is no containing amp-ad tag, then null will be returned.\n * TODO(jonkeller): Investigate whether non-A4A use case is needed. Issue 11436\n * @param {!Element} node\n * @param {!Window} topWin\n * @return {?string}\n */\n\n\nfunction getAmpAdResourceId(node, topWin) {\n  try {\n    var frameParent = (0, _service.getParentWindowFrameElement)(node, topWin).parentElement;\n\n    if (frameParent.nodeName == 'AMP-AD') {\n      return String(frameParent.getResourceId());\n    }\n  } catch (e) {} // Whether we entered the catch above (e.g. due to attempt to access\n  // across xdomain boundary), or failed to enter the if further above, the\n  // node is not within a friendly amp-ad tag. So, there is no amp-ad\n  // resource ID. How to handle that is up to the caller, but see TODO above.\n\n\n  return null;\n}\n\n},{\"./log\":125,\"./service\":131,\"./style\":144}],105:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.CommonSignals = void 0;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Commonly used signals across different elements and documents.\n * @enum {string}\n */\nvar CommonSignals = {\n  /**\n   * The element has been upgraded from ElementStub to its real implementation.\n   */\n  UPGRADED: 'upgraded',\n\n  /**\n   * The element has been built.\n   */\n  BUILT: 'built',\n\n  /**\n   * The element has started loading.\n   * LOAD_START triggers at the start of the layoutCallback.\n   */\n  LOAD_START: 'load-start',\n\n  /**\n   * Rendering has been confirmed to have been started.\n   * It is a signal to indicate meaningful display (e.g. text could be displayed\n   * CSS is correctly installed/applied).\n   *\n   * Elements can optionally implement RENDER_START signal. (e.g. ad, shadowdoc)\n   * if it want to define its own meaningful display time and toggle visibility.\n   *\n   * Simpler elements's RENDER_START can be equal to the start of the\n   * buildCallback\n   */\n  RENDER_START: 'render-start',\n\n  /**\n   * The element has been loaded.\n   * LOAD_END triggers at the end of the layoutCallback.\n   *\n   */\n  LOAD_END: 'load-end',\n\n  /**\n   * The initial contents of an element/document/embed have been loaded.\n   * INI_LOAD is an optional signal, implemented by ads, story, and elements\n   * that consist of other resources.\n   * It instructs that all critical resources has been loaded, and can be used\n   * for more accurate visibility measurement.\n   * When an element doesn't consist multiple child resources, LOAD_END signal\n   * can be used to indicate resource load completion.\n   * Note: Based on the implementation, INI_LOAD can trigger before or after\n   * LOAD_END.\n   */\n  INI_LOAD: 'ini-load',\n\n  /**\n   * The element has been unlaid out.\n   */\n  UNLOAD: 'unload'\n};\nexports.CommonSignals = CommonSignals;\n\n},{}],106:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.config = exports.urls = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nvar env = self.AMP_CONFIG || {};\nvar thirdPartyFrameRegex = typeof env['thirdPartyFrameRegex'] == 'string' ? new RegExp(env['thirdPartyFrameRegex']) : env['thirdPartyFrameRegex'];\nvar cdnProxyRegex = typeof env['cdnProxyRegex'] == 'string' ? new RegExp(env['cdnProxyRegex']) : env['cdnProxyRegex'];\n/** @type {!Object<string, string|boolean|RegExp|Array<RegExp>>} */\n\nvar urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex: thirdPartyFrameRegex || /^d-\\d+\\.ampproject\\.net$/,\n  cdn: env['cdnUrl'] || 'https://cdn.ampproject.org',\n\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex: cdnProxyRegex || /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting: env['errorReportingUrl'] || 'https://amp-error-reporting.appspot.com/r',\n  localDev: env['localDev'] || false,\n\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/master/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [/(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/, /(^|\\.)gmail\\.dev$/]\n};\nexports.urls = urls;\nvar config = {\n  urls: urls\n};\nexports.config = config;\n\n},{}],107:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.CONSENT_POLICY_STATE = void 0;\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file will be imported by 3P scripts.\n\n/**\n * Possible consent policy state to proceed with.\n * @enum {number}\n */\nvar CONSENT_POLICY_STATE = {\n  // Enum value has external dependency. Please do not change existing value.\n  // If new values are added, please notify the AMP for Ads team to assure\n  // correct Real Time Config behavior is maintained for Fast Fetch.\n  SUFFICIENT: 1,\n  INSUFFICIENT: 2,\n  UNKNOWN_NOT_REQUIRED: 3,\n  UNKNOWN: 4\n};\nexports.CONSENT_POLICY_STATE = CONSENT_POLICY_STATE;\n\n},{}],108:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getConsentPolicyState = getConsentPolicyState;\nexports.getConsentPolicySharedData = getConsentPolicySharedData;\nexports.getConsentPolicyInfo = getConsentPolicyInfo;\nexports.shouldBlockOnConsentByMeta = shouldBlockOnConsentByMeta;\n\nvar _consentState = require(\"./consent-state\");\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a promise that resolve when all consent state the policy wait\n * for resolve. Or if consent service is not available.\n * @param {!Element|!ShadowRoot} element\n * @param {string=} policyId\n * @return {!Promise<?CONSENT_POLICY_STATE>}\n */\nfunction getConsentPolicyState(element, policyId) {\n  if (policyId === void 0) {\n    policyId = 'default';\n  }\n\n  return _services.Services.consentPolicyServiceForDocOrNull(element).then(function (consentPolicy) {\n    if (!consentPolicy) {\n      return null;\n    }\n\n    return consentPolicy.whenPolicyResolved(\n    /** @type {string} */\n    policyId);\n  });\n}\n/**\n * Returns a promise that resolves to a sharedData retrieved from consent\n * remote endpoint.\n * @param {!Element|!ShadowRoot} element\n * @param {string} policyId\n * @return {!Promise<?Object>}\n */\n\n\nfunction getConsentPolicySharedData(element, policyId) {\n  return _services.Services.consentPolicyServiceForDocOrNull(element).then(function (consentPolicy) {\n    if (!consentPolicy) {\n      return null;\n    }\n\n    return consentPolicy.getMergedSharedData(\n    /** @type {string} */\n    policyId);\n  });\n}\n/**\n * TODO(zhouyx): Combine with getConsentPolicyState and return a consentInfo\n * object.\n * @param {!Element|!ShadowRoot} element\n * @param {string} policyId\n * @return {!Promise<string>}\n */\n\n\nfunction getConsentPolicyInfo(element, policyId) {\n  // Return the stored consent string.\n  return _services.Services.consentPolicyServiceForDocOrNull(element).then(function (consentPolicy) {\n    if (!consentPolicy) {\n      return null;\n    }\n\n    return consentPolicy.getConsentStringInfo(\n    /** @type {string} */\n    policyId);\n  });\n}\n/**\n * Determine if an element needs to be blocked by consent based on metaTags.\n * @param {*} element\n * @return {boolean}\n */\n\n\nfunction shouldBlockOnConsentByMeta(element) {\n  var ampdoc = element.getAmpDoc();\n\n  var content = _services.Services.documentInfoForDoc(ampdoc).metaTags['amp-consent-blocking'];\n\n  if (!content) {\n    return false;\n  } // validator enforce uniqueness of <meta name='amp-consent-blocking'>\n  // content will not be an array.\n\n\n  if (typeof content !== 'string') {\n    (0, _log.user)().error('CONSENT', 'Invalid amp-consent-blocking value, ignore meta tag');\n    return false;\n  } // Handles whitespace\n\n\n  content = content.toUpperCase().replace(/\\s/g, '').split(',');\n\n  if (content.includes(element.tagName)) {\n    return true;\n  }\n\n  return false;\n}\n\n},{\"./consent-state\":107,\"./log\":125,\"./services\":141}],109:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getCookie = getCookie;\nexports.setCookie = setCookie;\nexports.getHighestAvailableDomain = getHighestAvailableDomain;\nexports.SameSite = void 0;\n\nvar _string = require(\"./string\");\n\nvar _url = require(\"./url\");\n\nvar _config = require(\"./config\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TEST_COOKIE_NAME = '-test-amp-cookie-tmp';\n/** @enum {string} */\n\nvar SameSite = {\n  LAX: 'Lax',\n  STRICT: 'Strict',\n  NONE: 'None'\n};\n/**\n * Returns the value of the cookie. The cookie access is restricted and must\n * go through the privacy review. Before using this method please file a\n * GitHub issue with \"Privacy Review\" label.\n *\n * Returns the cookie's value or `null`.\n *\n * @param {!Window} win\n * @param {string} name\n * @return {?string}\n */\n\nexports.SameSite = SameSite;\n\nfunction getCookie(win, name) {\n  var cookieString = tryGetDocumentCookie_(win);\n\n  if (!cookieString) {\n    return null;\n  }\n\n  var cookies = cookieString.split(';');\n\n  for (var i = 0; i < cookies.length; i++) {\n    var cookie = cookies[i].trim();\n    var eq = cookie.indexOf('=');\n\n    if (eq == -1) {\n      continue;\n    }\n\n    if ((0, _url.tryDecodeUriComponent)(cookie.substring(0, eq).trim()) == name) {\n      var value = cookie.substring(eq + 1).trim();\n      return (0, _url.tryDecodeUriComponent)(value, value);\n    }\n  }\n\n  return null;\n}\n/**\n * This method should not be inlined to prevent TryCatch deoptimization.\n * @param {!Window} win\n * @return {string}\n * @noinline\n */\n\n\nfunction tryGetDocumentCookie_(win) {\n  try {\n    return win.document.cookie;\n  } catch (e) {\n    // Act as if no cookie is available. Exceptions can be thrown when\n    // AMP docs are opened on origins that do not allow setting\n    // cookies such as null origins.\n    return '';\n  }\n}\n/**\n * Sets the value of the cookie. The cookie access is restricted and must\n * go through the privacy review. Before using this method please file a\n * GitHub issue with \"Privacy Review\" label.\n *\n * @param {!Window} win\n * @param {string} name\n * @param {string} value\n * @param {time} expirationTime\n * @param {{\n *   highestAvailableDomain:(boolean|undefined),\n *   domain:(string|undefined),\n *   sameSite: (!SameSite|undefined),\n * }=} options\n *     - highestAvailableDomain: If true, set the cookie at the widest domain\n *       scope allowed by the browser. E.g. on example.com if we are currently\n *       on www.example.com.\n *     - domain: Explicit domain to set. domain overrides HigestAvailableDomain\n *     - allowOnProxyOrigin: Allow setting a cookie on the AMP Cache.\n *     - sameSite: The SameSite value to use when setting the cookie.\n */\n\n\nfunction setCookie(win, name, value, expirationTime, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  checkOriginForSettingCookie(win, options, name);\n  var domain = undefined; // Respect explicitly set domain over higestAvailabeDomain\n\n  if (options.domain) {\n    domain = options.domain;\n  } else if (options.highestAvailableDomain) {\n    domain =\n    /** @type {string} */\n    getHighestAvailableDomain(win);\n  }\n\n  trySetCookie(win, name, value, expirationTime, domain, options.sameSite);\n}\n/**\n * Attemp to find the HighestAvailableDomain on\n * @param {!Window} win\n * @return {?string}\n */\n\n\nfunction getHighestAvailableDomain(win) {\n  // <meta name='amp-cookie-scope'>. Need to respect the meta first.\n  // Note: The same logic applies to shadow docs. Where all shadow docs are\n  // considered to be in the same origin. And only the <meta> from\n  // shell will be respected. (Header from shadow doc will be removed)\n  var metaTag = win.document.head && win.document.head.querySelector(\"meta[name='amp-cookie-scope']\");\n\n  if (metaTag) {\n    // The content value could be an empty string. Return null instead\n    var cookieScope = metaTag.getAttribute('content') || ''; // Verify the validness of the amp-cookie-scope meta value\n\n    var sourceOrigin = (0, _url.getSourceOrigin)(win.location.href); // Verify the meta tag content value is valid\n\n    if ((0, _string.endsWith)(sourceOrigin, '.' + cookieScope)) {\n      return cookieScope;\n    } else {\n      // When the amp-cookie-scope value is invalid, fallback to the exact origin\n      // the document is contained in.\n      // sourceOrigin in the format of 'https://xxx or http://xxx'\n      return sourceOrigin.split('://')[1];\n    }\n  }\n\n  if (!(0, _url.isProxyOrigin)(win.location.href)) {\n    var parts = win.location.hostname.split('.');\n    var domain = parts[parts.length - 1];\n    var testCookieName = getTempCookieName(win);\n\n    for (var i = parts.length - 2; i >= 0; i--) {\n      domain = parts[i] + '.' + domain; // Try set a cookie for testing only, expire after 1 sec\n\n      trySetCookie(win, testCookieName, 'delete', Date.now() + 1000, domain);\n\n      if (getCookie(win, testCookieName) == 'delete') {\n        // Remove the cookie for testing\n        trySetCookie(win, testCookieName, 'delete', Date.now() - 1000, domain);\n        return domain;\n      }\n    }\n  } // Proxy origin w/o <meta name='amp-cookie-scope>\n  // We cannot calculate the etld+1 without the public suffix list.\n  // Return null instead.\n  // Note: This should not affect cookie writing because we don't allow writing\n  // cookie to highestAvailableDomain on proxy origin\n  // In the case of link decoration on proxy origin,\n  // we expect the correct meta tag to be\n  // set by publisher or cache order for AMP runtime to find all subdomains.\n\n\n  return null;\n}\n/**\n * Attempt to set a cookie with the given params.\n *\n * @param {!Window} win\n * @param {string} name\n * @param {string} value\n * @param {time} expirationTime\n * @param {string|undefined} domain\n * @param {!SameSite=} sameSite\n */\n\n\nfunction trySetCookie(win, name, value, expirationTime, domain, sameSite) {\n  // We do not allow setting cookies on the domain that contains both\n  // the cdn. and www. hosts.\n  // Note: we need to allow cdn.ampproject.org in order to optin to experiments\n  if (domain == 'ampproject.org') {\n    // Actively delete them.\n    value = 'delete';\n    expirationTime = 0;\n  }\n\n  var cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value) + '; path=/' + (domain ? '; domain=' + domain : '') + '; expires=' + new Date(expirationTime).toUTCString() + getSameSiteString(win, sameSite);\n\n  try {\n    win.document.cookie = cookie;\n  } catch (ignore) {// Do not throw if setting the cookie failed Exceptions can be thrown\n    // when AMP docs are opened on origins that do not allow setting\n    // cookies such as null origins.\n  }\n}\n/**\n * Gets the cookie string to use for SameSite. This only sets the SameSite\n * value if specified, falling back to the browser default. The default value\n * is equivalent to SameSite.NONE, but is planned to be set to SameSite.LAX in\n * Chrome 80.\n *\n * Note: In Safari 12, if the value is set to SameSite.NONE, it is treated by\n * the browser as SameSite.STRICT.\n * @param {Window} win\n * @param {!SameSite|undefined} sameSite\n * @return {string} The string to use when setting the cookie.\n */\n\n\nfunction getSameSiteString(win, sameSite) {\n  if (!sameSite) {\n    return '';\n  }\n\n  return \"; SameSite=\" + sameSite;\n}\n/**\n * Throws if a given cookie should not be set on the given origin.\n * This is a defense-in-depth. Callers should never run into this.\n *\n * @param {!Window} win\n * @param {!Object} options\n * @param {string} name For the error message.\n */\n\n\nfunction checkOriginForSettingCookie(win, options, name) {\n  if (options.allowOnProxyOrigin) {\n    (0, _log.userAssert)(!options.highestAvailableDomain, 'Could not support higestAvailable Domain on proxy origin, ' + 'specify domain explicitly');\n    return;\n  }\n\n  (0, _log.userAssert)(!(0, _url.isProxyOrigin)(win.location.href), \"Should never attempt to set cookie on proxy origin: \" + name);\n  var current = (0, _url.parseUrlDeprecated)(win.location.href).hostname.toLowerCase();\n  var proxy = (0, _url.parseUrlDeprecated)(_config.urls.cdn).hostname.toLowerCase();\n  (0, _log.userAssert)(!(current == proxy || (0, _string.endsWith)(current, '.' + proxy)), 'Should never attempt to set cookie on proxy origin. (in depth check): ' + name);\n}\n/**\n * Return a temporary cookie name for testing only\n * @param {!Window} win\n * @return {string}\n */\n\n\nfunction getTempCookieName(win) {\n  var testCookieName = TEST_COOKIE_NAME;\n  var counter = 0;\n\n  while (getCookie(win, testCookieName)) {\n    // test cookie name conflict, append counter to test cookie name\n    testCookieName = TEST_COOKIE_NAME + counter;\n  }\n\n  return testCookieName;\n}\n\n},{\"./config\":106,\"./log\":125,\"./string\":143,\"./url\":148}],110:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.assertIsName = assertIsName;\nexports.setScopeSelectorSupportedForTesting = setScopeSelectorSupportedForTesting;\nexports.isScopeSelectorSupported = isScopeSelectorSupported;\nexports.prependSelectorsWith = prependSelectorsWith;\nexports.escapeCssSelectorIdent = escapeCssSelectorIdent;\nexports.escapeCssSelectorNth = escapeCssSelectorNth;\n\nvar _cssEscape = require(\"../third_party/css-escape/css-escape\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nfunction assertIsName(name) {\n  (0, _log.devAssert)(/^[\\w-]+$/.test(name));\n}\n/**\n * @type {boolean|undefined}\n */\n\n\nvar scopeSelectorSupported;\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\n\nfunction setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\n\n\nfunction isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return scopeSelectorSupported = testScopeSelector(el);\n}\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\n\n\nfunction testScopeSelector(el) {\n  try {\n    var doc = el.ownerDocument;\n    var testElement = doc.createElement('div');\n    var testChild = doc.createElement('div');\n    testElement.appendChild(testChild); // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n\n    return testElement.\n    /*OK*/\n    querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\n\n\nfunction prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, \"$&\" + distribute + \" \");\n}\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n */\n\n\nfunction escapeCssSelectorIdent(ident) {\n  return (0, _cssEscape.cssEscape)(ident);\n}\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\n\n\nfunction escapeCssSelectorNth(ident) {\n  var escaped = String(ident); // Ensure it doesn't close the nth-child psuedo class.\n\n  (0, _log.devAssert)(escaped.indexOf(')') === -1);\n  return escaped;\n}\n\n},{\"../third_party/css-escape/css-escape\":159,\"./log\":125}],111:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.waitForChild = waitForChild;\nexports.waitForChildPromise = waitForChildPromise;\nexports.waitForBodyOpen = waitForBodyOpen;\nexports.waitForBodyOpenPromise = waitForBodyOpenPromise;\nexports.removeElement = removeElement;\nexports.removeChildren = removeChildren;\nexports.copyChildren = copyChildren;\nexports.insertAfterOrAtStart = insertAfterOrAtStart;\nexports.addAttributesToElement = addAttributesToElement;\nexports.createElementWithAttributes = createElementWithAttributes;\nexports.isConnectedNode = isConnectedNode;\nexports.rootNodeFor = rootNodeFor;\nexports.isShadowRoot = isShadowRoot;\nexports.closest = closest;\nexports.closestNode = closestNode;\nexports.closestAncestorElementBySelector = closestAncestorElementBySelector;\nexports.ancestorElements = ancestorElements;\nexports.ancestorElementsByTag = ancestorElementsByTag;\nexports.childElement = childElement;\nexports.childElements = childElements;\nexports.lastChildElement = lastChildElement;\nexports.childNodes = childNodes;\nexports.childElementByAttr = childElementByAttr;\nexports.lastChildElementByAttr = lastChildElementByAttr;\nexports.childElementsByAttr = childElementsByAttr;\nexports.childElementByTag = childElementByTag;\nexports.childElementsByTag = childElementsByTag;\nexports.matches = matches;\nexports.elementByTag = elementByTag;\nexports.scopedQuerySelector = scopedQuerySelector;\nexports.scopedQuerySelectorAll = scopedQuerySelectorAll;\nexports.getDataParamsFromAttributes = getDataParamsFromAttributes;\nexports.hasNextNodeInDocumentOrder = hasNextNodeInDocumentOrder;\nexports.templateContentClone = templateContentClone;\nexports.iterateCursor = iterateCursor;\nexports.openWindowDialog = openWindowDialog;\nexports.isJsonScriptTag = isJsonScriptTag;\nexports.isJsonLdScriptTag = isJsonLdScriptTag;\nexports.isRTL = isRTL;\nexports.escapeHtml = escapeHtml;\nexports.tryFocus = tryFocus;\nexports.isIframed = isIframed;\nexports.isAmpElement = isAmpElement;\nexports.whenUpgradedToCustomElement = whenUpgradedToCustomElement;\nexports.fullscreenEnter = fullscreenEnter;\nexports.fullscreenExit = fullscreenExit;\nexports.isFullscreenElement = isFullscreenElement;\nexports.isEnabled = isEnabled;\nexports.domOrderComparator = domOrderComparator;\nexports.toggleAttribute = toggleAttribute;\nexports.getVerticalScrollbarWidth = getVerticalScrollbarWidth;\nexports.UPGRADE_TO_CUSTOMELEMENT_RESOLVER = exports.UPGRADE_TO_CUSTOMELEMENT_PROMISE = void 0;\n\nvar _promise = require(\"./utils/promise\");\n\nvar _css = require(\"./css\");\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object\");\n\nvar _string = require(\"./string\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;'\n};\nvar HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n/** @const {string} */\n\nvar UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n/** @const {string} */\n\nexports.UPGRADE_TO_CUSTOMELEMENT_PROMISE = UPGRADE_TO_CUSTOMELEMENT_PROMISE;\nvar UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\n\nexports.UPGRADE_TO_CUSTOMELEMENT_RESOLVER = UPGRADE_TO_CUSTOMELEMENT_RESOLVER;\n\nfunction waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n\n\n  var win = (0, _types.toWin)(parent.ownerDocument.defaultView);\n\n  if (win.MutationObserver) {\n    /** @const {MutationObserver} */\n    var observer = new win.MutationObserver(function () {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {\n      childList: true\n    });\n  } else {\n    /** @const {number} */\n    var interval = win.setInterval(function () {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    },\n    /* milliseconds */\n    5);\n  }\n}\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\n\n\nfunction waitForChildPromise(parent, checkFunc) {\n  return new Promise(function (resolve) {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\n\n\nfunction waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, function () {\n    return !!doc.body;\n  }, callback);\n}\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\n\n\nfunction waitForBodyOpenPromise(doc) {\n  return new Promise(function (resolve) {\n    return waitForBodyOpen(doc, resolve);\n  });\n}\n/**\n * Removes the element.\n * @param {!Element} element\n */\n\n\nfunction removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element} parent\n */\n\n\nfunction removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\n\n\nfunction copyChildren(from, to) {\n  var frag = to.ownerDocument.createDocumentFragment();\n\n  for (var n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n\n  to.appendChild(frag);\n}\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node} after\n */\n\n\nfunction insertAfterOrAtStart(root, element, after) {\n  var before = after ? after.nextSibling : root.firstChild;\n  root.insertBefore(element, before);\n}\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\n\n\nfunction addAttributesToElement(element, attributes) {\n  for (var attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n\n  return element;\n}\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\n\n\nfunction createElementWithAttributes(doc, tagName, attributes) {\n  var element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\n\n\nfunction isConnectedNode(node) {\n  var connected = node.isConnected;\n\n  if (connected !== undefined) {\n    return connected;\n  } // \"An element is connected if its shadow-including root is a document.\"\n\n\n  var n = node;\n\n  do {\n    n = rootNodeFor(n);\n\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\n\n\nfunction rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n\n  var n; // Check isShadowRoot() is only needed for the polyfill case.\n\n  for (n = node; !!n.parentNode && !isShadowRoot(n); n = n.parentNode) {}\n\n  return n;\n}\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isShadowRoot(value) {\n  // TODO(#22733): remove in preference to dom's `rootNodeFor`.\n  if (!value) {\n    return false;\n  } // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n\n\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n\n  return value.nodeType ==\n  /* DOCUMENT_FRAGMENT */\n  11 && Object.prototype.toString.call(value) === '[object ShadowRoot]';\n}\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\n\n\nfunction closest(element, callback, opt_stopAt) {\n  for (var el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\n\n\nfunction closestNode(node, callback) {\n  for (var n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\n\n\nfunction closestAncestorElementBySelector(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  return closest(element, function (el) {\n    return matches(el, selector);\n  });\n}\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\n\n\nfunction ancestorElements(child, predicate) {\n  var ancestors = [];\n\n  for (var ancestor = child.parentElement; ancestor; ancestor = ancestor.parentElement) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n\n  return ancestors;\n}\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\n\n\nfunction ancestorElementsByTag(child, tagName) {\n  (0, _css.assertIsName)(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, function (el) {\n    return el.tagName == tagName;\n  });\n}\n/**\n * Finds the first child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\n\n\nfunction childElement(parent, callback) {\n  for (var child = parent.firstElementChild; child; child = child.nextElementSibling) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\n\n\nfunction childElements(parent, callback) {\n  var children = [];\n\n  for (var child = parent.firstElementChild; child; child = child.nextElementSibling) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n\n  return children;\n}\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\n\n\nfunction lastChildElement(parent, callback) {\n  for (var child = parent.lastElementChild; child; child = child.previousElementSibling) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\n\n\nfunction childNodes(parent, callback) {\n  var nodes = [];\n\n  for (var child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n\n  return nodes;\n}\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\n\n\nfunction childElementByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return (\n    /*OK*/\n    scopedQuerySelector(parent, \"> [\" + attr + \"]\")\n  );\n}\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\n\n\nfunction lastChildElementByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return lastChildElement(parent, function (el) {\n    return el.hasAttribute(attr);\n  });\n}\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\n\n\nfunction childElementsByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return (\n    /*OK*/\n    scopedQuerySelectorAll(parent, \"> [\" + attr + \"]\")\n  );\n}\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {?Element}\n */\n\n\nfunction childElementByTag(parent, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return (\n    /*OK*/\n    scopedQuerySelector(parent, \"> \" + tagName)\n  );\n}\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\n\n\nfunction childElementsByTag(parent, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return (\n    /*OK*/\n    scopedQuerySelectorAll(parent, \"> \" + tagName)\n  );\n}\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\n\n\nfunction matches(el, selector) {\n  var matcher = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector || el.oMatchesSelector;\n\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n\n  return false; // IE8 always returns false.\n}\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\n\n\nfunction elementByTag(element, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return element.\n  /*OK*/\n  querySelector(tagName);\n}\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\n\n\nfunction scopedQuerySelectionFallback(root, selector) {\n  var unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  var scopedSelector = (0, _css.prependSelectorsWith)(selector, \".\" + unique);\n  var elements = root.\n  /*OK*/\n  querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {?Element}\n */\n\n\nfunction scopedQuerySelector(root, selector) {\n  if ((0, _css.isScopeSelectorSupported)(root)) {\n    return root.\n    /*OK*/\n    querySelector((0, _css.prependSelectorsWith)(selector, ':scope'));\n  } // Only IE.\n\n\n  var fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\n\n\nfunction scopedQuerySelectorAll(root, selector) {\n  if ((0, _css.isScopeSelectorSupported)(root)) {\n    return root.\n    /*OK*/\n    querySelectorAll((0, _css.prependSelectorsWith)(selector, ':scope'));\n  } // Only IE.\n\n\n  return scopedQuerySelectionFallback(root, selector);\n}\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!Element} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\n\n\nfunction getDataParamsFromAttributes(element, opt_computeParamNameFunc, opt_paramPattern) {\n  var computeParamNameFunc = opt_computeParamNameFunc || function (key) {\n    return key;\n  };\n\n  var dataset = element.dataset;\n  var params = (0, _object.dict)();\n  var paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n\n  for (var key in dataset) {\n    var _matches = key.match(paramPattern);\n\n    if (_matches) {\n      var param = _matches[1][0].toLowerCase() + _matches[1].substr(1);\n\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n\n  return params;\n}\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\n\n\nfunction hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  var currentElement = element;\n\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while ((currentElement = currentElement.parentNode) && currentElement != opt_stopNode);\n\n  return false;\n}\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\n\n\nfunction templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    var content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\n\n\nfunction iterateCursor(iterable, cb) {\n  var length = iterable.length;\n\n  for (var i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\n\n\nfunction openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  var res;\n\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    (0, _log.dev)().error('DOM', 'Failed to open url on target: ', target, e);\n  } // Then try with `_top` target.\n\n\n  if (!res && target != '_top' && !(0, _string.includes)(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n\n  return res;\n}\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isJsonScriptTag(element) {\n  return element.tagName == 'SCRIPT' && element.hasAttribute('type') && element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON';\n}\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isJsonLdScriptTag(element) {\n  return element.tagName == 'SCRIPT' && element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON';\n}\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\n\n\nfunction isRTL(doc) {\n  var dir = doc.body.getAttribute('dir') || doc.documentElement.getAttribute('dir') || 'ltr';\n  return dir == 'rtl';\n}\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\n\n\nfunction escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n/**\n * @param {string} c\n * @return {string}\n */\n\n\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\n\n\nfunction tryFocus(element) {\n  try {\n    element.\n    /*OK*/\n    focus();\n  } catch (e) {// IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nfunction isIframed(win) {\n  return win.parent && win.parent != win;\n}\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isAmpElement(element) {\n  var tag = element.tagName; // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n\n  return (0, _string.startsWith)(tag, 'AMP-') && // Some \"amp-*\" elements are not really AMP elements. :smh:\n  !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY');\n}\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!Element} element\n * @return {!Promise<!Element>}\n */\n\n\nfunction whenUpgradedToCustomElement(element) {\n  (0, _log.devAssert)(isAmpElement(element), 'element is not AmpElement');\n\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(element);\n  } // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n\n\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    var deferred = new _promise.Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n/**\n * Replacement for `Element.requestFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n * @param {!Element} element\n */\n\n\nfunction fullscreenEnter(element) {\n  var requestFs = element.requestFullscreen || element.requestFullScreen || element.webkitRequestFullscreen || element.webkitEnterFullscreen || element.msRequestFullscreen || element.mozRequestFullScreen;\n\n  if (requestFs) {\n    requestFs.call(element);\n  }\n}\n/**\n * Replacement for `Document.exitFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/exitFullscreen\n * @param {!Element} element\n */\n\n\nfunction fullscreenExit(element) {\n  var elementBoundExit = element.cancelFullScreen || element.exitFullscreen || element.webkitExitFullscreen || element.webkitCancelFullScreen || element.mozCancelFullScreen || element.msExitFullscreen;\n\n  if (elementBoundExit) {\n    elementBoundExit.call(element);\n    return;\n  }\n\n  var ownerDocument = element.ownerDocument;\n\n  if (!ownerDocument) {\n    return;\n  }\n\n  var docBoundExit = ownerDocument.cancelFullScreen || ownerDocument.exitFullscreencancelFullScreen || ownerDocument.webkitExitFullscreencancelFullScreen || ownerDocument.webkitCancelFullScreencancelFullScreen || ownerDocument.mozCancelFullScreencancelFullScreen || ownerDocument.msExitFullscreen;\n\n  if (docBoundExit) {\n    docBoundExit.call(ownerDocument);\n  }\n}\n/**\n * Replacement for `Document.fullscreenElement`.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenElement\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isFullscreenElement(element) {\n  var webkitDisplayingFullscreen = element.webkitDisplayingFullscreen;\n\n  if (webkitDisplayingFullscreen !== undefined) {\n    return webkitDisplayingFullscreen;\n  }\n\n  var ownerDocument = element.ownerDocument;\n\n  if (!ownerDocument) {\n    return false;\n  }\n\n  var fullscreenElement = ownerDocument.fullscreenElement || ownerDocument.webkitFullscreenElement || ownerDocument.mozFullScreenElement || ownerDocument.webkitCurrentFullScreenElement;\n  return fullscreenElement == element;\n}\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!Element} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\n\n\nfunction isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\n\n\nfunction domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  var pos = element1.compareDocumentPosition(element2);\n  var precedingOrContains = Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS; // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n\n  if (pos & precedingOrContains) {\n    return 1;\n  } // if fe2 is following or contained by fe1, then fe1 is before fe2\n\n\n  return -1;\n}\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\n\n\nfunction toggleAttribute(element, name, forced) {\n  var hasAttribute = element.hasAttribute(name);\n  var enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\n\n\nfunction getVerticalScrollbarWidth(win) {\n  var documentElement = win.document.documentElement;\n  var windowWidth = win.\n  /*OK*/\n  innerWidth;\n  var documentWidth = documentElement.\n  /*OK*/\n  clientWidth;\n  return windowWidth - documentWidth;\n}\n\n},{\"./css\":110,\"./log\":125,\"./string\":143,\"./types\":145,\"./utils/object\":154,\"./utils/promise\":156}],112:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getElementService = getElementService;\nexports.getElementServiceIfAvailable = getElementServiceIfAvailable;\nexports.getElementServiceForDoc = getElementServiceForDoc;\nexports.getElementServiceIfAvailableForDoc = getElementServiceIfAvailableForDoc;\nexports.getElementServiceIfAvailableForDocInEmbedScope = getElementServiceIfAvailableForDocInEmbedScope;\nexports.extensionScriptsInNode = extensionScriptsInNode;\nexports.isExtensionScriptInNode = isExtensionScriptInNode;\n\nvar dom = _interopRequireWildcard(require(\"./dom\"));\n\nvar _service = require(\"./service\");\n\nvar _types = require(\"./types\");\n\nvar _log = require(\"./log\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nfunction getElementService(win, id, extension, opt_element) {\n  return getElementServiceIfAvailable(win, id, extension, opt_element).then(function (service) {\n    return assertService(service, id, extension);\n  });\n}\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailable(win, id, extension, opt_element) {\n  var s = (0, _service.getServicePromiseOrNull)(win, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      s\n    );\n  }\n\n  return getElementServicePromiseOrNull(win, id, extension, opt_element);\n}\n/**\n * @param {!Window} win\n * @param {string} elementName Name of an extended custom element.\n * @return {boolean} Whether this element is scheduled to be loaded.\n */\n\n\nfunction isElementScheduled(win, elementName) {\n  // Set in custom-element.js\n  if (!win.__AMP_EXTENDED_ELEMENTS) {\n    return false;\n  }\n\n  return !!win.__AMP_EXTENDED_ELEMENTS[elementName];\n}\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\n\n\nfunction getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(element, id, extension, opt_element).then(function (service) {\n    return assertService(service, id, extension);\n  });\n}\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailableForDoc(element, id, extension, opt_element) {\n  var s = (0, _service.getServicePromiseOrNullForDoc)(element, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      s\n    );\n  }\n\n  var ampdoc = (0, _service.getAmpdoc)(element);\n  return ampdoc.waitForBodyOpen().then(function () {\n    return waitForExtensionIfPresent(ampdoc.win, extension, ampdoc.win.document.head);\n  }).then(function () {\n    // If this service is provided by an element, then we can't depend on\n    // the service (they may not use the element).\n    if (opt_element) {\n      return (0, _service.getServicePromiseOrNullForDoc)(element, id);\n    } else if (isElementScheduled(ampdoc.win, extension)) {\n      return (0, _service.getServicePromiseForDoc)(element, id);\n    }\n\n    return null;\n  });\n}\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailableForDocInEmbedScope(element, id, extension) {\n  var s = (0, _service.getExistingServiceForDocInEmbedScope)(element, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      Promise.resolve(s)\n    );\n  }\n\n  var win = (0, _types.toWin)(element.ownerDocument.defaultView);\n  var topWin = (0, _service.getTopWindow)(win); // In embeds, doc services are stored on the embed window.\n\n  if (win !== topWin) {\n    return getElementServicePromiseOrNull(win, id, extension);\n  } else {\n    // Only fallback to element's ampdoc (top-level) if not embedded.\n    return getElementServiceIfAvailableForDoc(element, id, extension);\n  }\n}\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction assertService(service, id, extension) {\n  return (\n    /** @type {!Object} */\n    (0, _log.userAssert)(service, 'Service %s was requested to be provided through %s, ' + 'but %s is not loaded in the current page. To fix this ' + 'problem load the JavaScript file for %s in this page.', id, extension, extension, extension)\n  );\n}\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Array<string>}\n */\n\n\nfunction extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n\n  var scripts = {}; // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n\n  var list = head.querySelectorAll('script[custom-element],script[custom-template]');\n\n  for (var i = 0; i < list.length; i++) {\n    var script = list[i];\n    var name = script.getAttribute('custom-element') || script.getAttribute('custom-template');\n    scripts[name] = true;\n  }\n\n  return Object.keys(scripts);\n}\n/**\n * Waits for body to be present then verifies that an extension script is\n * present in head for installation.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} extensionId\n * @return {!Promise<boolean>}\n */\n\n\nfunction isExtensionScriptInNode(ampdoc, extensionId) {\n  return ampdoc.waitForBodyOpen().then(function () {\n    return extensionScriptInNode(ampdoc.getHeadNode(), extensionId);\n  });\n}\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @param {string} extensionId\n * @return {boolean}\n * @private\n */\n\n\nfunction extensionScriptInNode(head, extensionId) {\n  return extensionScriptsInNode(head).includes(extensionId);\n}\n/**\n * Waits for an extension if its script is present\n * @param {!Window} win\n * @param {string} extension\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Promise}\n * @private\n */\n\n\nfunction waitForExtensionIfPresent(win, extension, head) {\n  /**\n   * If there is an extension script wait for it to load before trying\n   * to get the service. Prevents a race condition when everything but\n   * the extensions is in cache. If there is no script then it's either\n   * not present, or the service was defined by a test. In those cases\n   * we don't wait around for an extension that does not exist.\n   */\n  // TODO(jpettitt) investigate registerExtension to short circuit\n  // the dom call in extensionScriptsInNode()\n  if (!extensionScriptInNode(head, extension)) {\n    return Promise.resolve();\n  }\n\n  var extensions = (0, _service.getService)(win, 'extensions');\n  return (\n    /** @type {!Promise<?Object>} */\n    extensions.waitForExtension(win, extension)\n  );\n}\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\n\n\nfunction getElementServicePromiseOrNull(win, id, extension, opt_element) {\n  return dom.waitForBodyOpenPromise(win.document).then(function () {\n    return waitForExtensionIfPresent(win, extension, win.document.head);\n  }).then(function () {\n    // If this service is provided by an element, then we can't depend on\n    // the service (they may not use the element).\n    if (opt_element) {\n      return (0, _service.getServicePromiseOrNull)(win, id);\n    } else if (isElementScheduled(win, extension)) {\n      return (0, _service.getServicePromise)(win, id);\n    }\n\n    return null;\n  });\n}\n\n},{\"./dom\":111,\"./log\":125,\"./service\":131,\"./types\":145}],113:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.internalListenImplementation = internalListenImplementation;\nexports.detectEvtListenerOptsSupport = detectEvtListenerOptsSupport;\nexports.resetEvtListenerOptsSupportForTesting = resetEvtListenerOptsSupportForTesting;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nvar optsSupported;\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\nfunction internalListenImplementation(element, eventType, listener, opt_evtListenerOpts) {\n  var localElement = element;\n  var localListener = listener;\n  /**\n   * @type {?Function}\n   */\n\n  var wrapped;\n\n  wrapped = function wrapped(event) {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n\n      throw e;\n    }\n  };\n\n  var optsSupported = detectEvtListenerOptsSupport();\n  var capture = false;\n\n  if (opt_evtListenerOpts) {\n    capture = opt_evtListenerOpts.capture;\n  }\n\n  localElement.addEventListener(eventType, wrapped, optsSupported ? opt_evtListenerOpts : capture);\n  return function () {\n    if (localElement) {\n      localElement.removeEventListener(eventType, wrapped, optsSupported ? opt_evtListenerOpts : capture);\n    } // Ensure these are GC'd\n\n\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\n\n\nfunction detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    var options = {\n      get capture() {\n        optsSupported = true;\n      }\n\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {// EventListenerOptions are not supported\n  }\n\n  return optsSupported;\n}\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\n\n\nfunction resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n\n},{}],114:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.createCustomEvent = createCustomEvent;\nexports.listen = listen;\nexports.getData = getData;\nexports.getDetail = getDetail;\nexports.listenOnce = listenOnce;\nexports.listenOncePromise = listenOncePromise;\nexports.isLoaded = isLoaded;\nexports.loadPromise = loadPromise;\nexports.isLoadErrorMessage = isLoadErrorMessage;\nexports.MEDIA_LOAD_FAILURE_SRC_PROPERTY = void 0;\n\nvar _eventHelperListen = require(\"./event-helper-listen\");\n\nvar _dom = require(\"./dom\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string}  */\nvar LOAD_FAILURE_PREFIX = 'Failed to load:';\n/** @const {string} */\n\nvar MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\n\nexports.MEDIA_LOAD_FAILURE_SRC_PROPERTY = MEDIA_LOAD_FAILURE_SRC_PROPERTY;\n\nfunction createCustomEvent(win, type, detail, opt_eventInit) {\n  var eventInit =\n  /** @type {!CustomEventInit} */\n  {\n    detail: detail\n  };\n  Object.assign(eventInit, opt_eventInit); // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n\n  if (typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    var e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(type, !!eventInit.bubbles, !!eventInit.cancelable, detail);\n    return e;\n  }\n}\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\n\nfunction listen(element, eventType, listener, opt_evtListenerOpts) {\n  return (0, _eventHelperListen.internalListenImplementation)(element, eventType, listener, opt_evtListenerOpts);\n}\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\n\n\nfunction getData(event) {\n  return (\n    /** @type {?JsonObject|string|undefined} */\n    event.data\n  );\n}\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\n\n\nfunction getDetail(event) {\n  return (\n    /** @type {?JsonObject|string|undefined} */\n    event.detail\n  );\n}\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\n\nfunction listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  var localListener = listener;\n  var unlisten = (0, _eventHelperListen.internalListenImplementation)(element, eventType, function (event) {\n    try {\n      localListener(event);\n    } finally {\n      // Ensure listener is GC'd\n      localListener = null;\n      unlisten();\n    }\n  }, opt_evtListenerOpts);\n  return unlisten;\n}\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\n\n\nfunction listenOncePromise(element, eventType, opt_evtListenerOpts, opt_cancel) {\n  var unlisten;\n  var eventPromise = new Promise(function (resolve) {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n\n  return eventPromise;\n}\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\n\n\nfunction isLoaded(eleOrWindow) {\n  return !!(eleOrWindow.complete || eleOrWindow.readyState == 'complete' || isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0 || // If the passed in thing is a Window, infer loaded state from\n  //\n  eleOrWindow.document && eleOrWindow.document.readyState == 'complete');\n}\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\n\n\nfunction loadPromise(eleOrWindow) {\n  var unlistenLoad;\n  var unlistenError;\n\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n\n  var isMediaElement = isHTMLMediaElement(eleOrWindow);\n\n  if (isMediaElement && eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc) {\n    return Promise.reject(eleOrWindow);\n  }\n\n  var loadingPromise = new Promise(function (resolve, reject) {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    } // Don't unlisten on error for Windows.\n\n\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n\n    var errorTarget = eleOrWindow; // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = (0, _dom.lastChildElement)(eleOrWindow, function (child) {\n        return child.tagName === 'SOURCE';\n      });\n\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n  return loadingPromise.then(function () {\n    if (unlistenError) {\n      unlistenError();\n    }\n\n    return eleOrWindow;\n  }, function () {\n    if (unlistenLoad) {\n      unlistenLoad();\n    }\n\n    failedToLoad(eleOrWindow);\n  });\n}\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\n\n\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] = eleOrWindow.currentSrc || true;\n  } // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n\n\n  var target = eleOrWindow;\n\n  if (target && target.src) {\n    target = target.src;\n  }\n\n  throw (0, _log.user)().createError(LOAD_FAILURE_PREFIX, target);\n}\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\n\n\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\n\n\nfunction isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n\n},{\"./dom\":111,\"./event-helper-listen\":113,\"./log\":125}],115:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isCanary = isCanary;\nexports.getBinaryType = getBinaryType;\nexports.isExperimentOn = isExperimentOn;\nexports.toggleExperiment = toggleExperiment;\nexports.experimentToggles = experimentToggles;\nexports.experimentTogglesOrNull = experimentTogglesOrNull;\nexports.getExperimentTogglesForTesting = getExperimentTogglesForTesting;\nexports.resetExperimentTogglesForTesting = resetExperimentTogglesForTesting;\nexports.randomlySelectUnsetExperiments = randomlySelectUnsetExperiments;\nexports.getExperimentBranch = getExperimentBranch;\nexports.forceExperimentBranch = forceExperimentBranch;\nexports.RANDOM_NUMBER_GENERATORS = exports.ExperimentInfo = void 0;\n\nvar _log = require(\"./log\");\n\nvar _mode = require(\"./mode\");\n\nvar _object = require(\"./utils/object\");\n\nvar _url = require(\"./url\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\n/** @const {string} */\nvar TAG = 'EXPERIMENTS';\n/** @const {string} */\n\nvar LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n/** @const {string} */\n\nvar TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n/**\n * @typedef {{\n *   isTrafficEligible: function(!Window):boolean,\n *   branches: !Array<string>\n * }}\n */\n\nvar ExperimentInfo;\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\n\nexports.ExperimentInfo = ExperimentInfo;\n\nfunction isCanary(win) {\n  return !!(win.AMP_CONFIG && win.AMP_CONFIG.canary);\n}\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\n\n\nfunction getBinaryType(win) {\n  return win.AMP_CONFIG && win.AMP_CONFIG.type ? win.AMP_CONFIG.type : 'unknown';\n}\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\n\n\nfunction isExperimentOn(win, experimentId) {\n  var toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\n\n\nfunction toggleExperiment(win, experimentId, opt_on, opt_transientExperiment) {\n  var currentlyOn = isExperimentOn(win,\n  /*OK*/\n  experimentId);\n  var on = !!(opt_on !== undefined ? opt_on : !currentlyOn);\n\n  if (on != currentlyOn) {\n    var toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      var storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles); // Avoid affecting tests that spy/stub warn().\n\n      if (!(0, _mode.getMode)().test) {\n        (0, _log.user)().warn(TAG, '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental', experimentId, on ? 'enabled' : 'disabled', win.location.hostname);\n      }\n    }\n  }\n\n  return on;\n}\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\n\n\nfunction experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n\n  win[TOGGLES_WINDOW_PROPERTY] = Object.create(null);\n  var toggles = win[TOGGLES_WINDOW_PROPERTY]; // Read the default config of this build.\n\n  if (win.AMP_CONFIG) {\n    for (var experimentId in win.AMP_CONFIG) {\n      var frequency = win.AMP_CONFIG[experimentId];\n\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  } // Read document level override from meta tag.\n\n\n  if (win.AMP_CONFIG && Array.isArray(win.AMP_CONFIG['allow-doc-opt-in']) && win.AMP_CONFIG['allow-doc-opt-in'].length > 0) {\n    var allowed = win.AMP_CONFIG['allow-doc-opt-in'];\n    var meta = win.document.head.querySelector('meta[name=\"amp-experiments-opt-in\"]');\n\n    if (meta) {\n      var optedInExperiments = meta.getAttribute('content').split(',');\n\n      for (var i = 0; i < optedInExperiments.length; i++) {\n        if (allowed.indexOf(optedInExperiments[i]) != -1) {\n          toggles[optedInExperiments[i]] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  if (win.AMP_CONFIG && Array.isArray(win.AMP_CONFIG['allow-url-opt-in']) && win.AMP_CONFIG['allow-url-opt-in'].length > 0) {\n    var _allowed = win.AMP_CONFIG['allow-url-opt-in'];\n    var hash = win.location.originalHash || win.location.hash;\n    var params = (0, _url.parseQueryString)(hash);\n\n    for (var _i = 0; _i < _allowed.length; _i++) {\n      var param = params[\"e-\" + _allowed[_i]];\n\n      if (param == '1') {\n        toggles[_allowed[_i]] = true;\n      }\n\n      if (param == '0') {\n        toggles[_allowed[_i]] = false;\n      }\n    }\n  }\n\n  return toggles;\n}\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {Object<string, boolean>}\n */\n\n\nfunction experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\n\n\nfunction getExperimentToggles(win) {\n  var experimentsString = '';\n\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch (e) {\n    (0, _log.dev)().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n\n  var tokens = experimentsString ? experimentsString.split(/\\s*,\\s*/g) : [];\n  var toggles = Object.create(null);\n\n  for (var i = 0; i < tokens.length; i++) {\n    if (tokens[i].length == 0) {\n      continue;\n    }\n\n    if (tokens[i][0] == '-') {\n      toggles[tokens[i].substr(1)] = false;\n    } else {\n      toggles[tokens[i]] = true;\n    }\n  }\n\n  return toggles;\n}\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\n\n\nfunction saveExperimentToggles(win, toggles) {\n  var experimentIds = [];\n\n  for (var experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n\n  try {\n    if ('localStorage' in win) {\n      win.localStorage.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n    }\n  } catch (e) {\n    (0, _log.user)().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\n\n\nfunction getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\n\n\nfunction resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\n\n\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\n\n\nvar RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng\n};\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\n\nexports.RANDOM_NUMBER_GENERATORS = RANDOM_NUMBER_GENERATORS;\n\nfunction selectRandomItem(arr) {\n  var rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return arr[Math.floor(rn * arr.length)] || null;\n}\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Object<string, !ExperimentInfo>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\n\n\nfunction randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  var selectedExperiments = {};\n\n  for (var experimentName in experiments) {\n    // Skip experimentName if it is not a key of experiments object or if it\n    // has already been populated by some other property.\n    if (!(0, _object.hasOwn)(experiments, experimentName)) {\n      continue;\n    }\n\n    if ((0, _object.hasOwn)(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] = win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (!experiments[experimentName].isTrafficEligible || !experiments[experimentName].isTrafficEligible(win)) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    } // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n\n\n    if (!win.__AMP_EXPERIMENT_BRANCHES[experimentName] && isExperimentOn(win,\n    /*OK*/\n    experimentName)) {\n      var branches = experiments[experimentName].branches;\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(branches);\n      selectedExperiments[experimentName] = win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n\n  return selectedExperiments;\n}\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\n\n\nfunction getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES ? win.__AMP_EXPERIMENT_BRANCHES[experimentName] : null;\n}\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\n\n\nfunction forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n\n},{\"./log\":125,\"./mode\":127,\"./url\":148,\"./utils/object\":154}],116:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.listenFor = listenFor;\nexports.listenForOncePromise = listenForOncePromise;\nexports.postMessage = postMessage;\nexports.postMessageToWindows = postMessageToWindows;\nexports.parseIfNeeded = parseIfNeeded;\nexports.looksLikeTrackingIframe = looksLikeTrackingIframe;\nexports.isAdLike = isAdLike;\nexports.disableScrollingOnIframe = disableScrollingOnIframe;\nexports.canInspectWindow = canInspectWindow;\nexports.getFriendlyIframeEmbedOptional = getFriendlyIframeEmbedOptional;\nexports.isInFie = isInFie;\nexports.makePausable = makePausable;\nexports.isPausable = isPausable;\nexports.setPaused = setPaused;\nexports.FIE_EMBED_PROP = exports.SubscriptionApi = void 0;\n\nvar _dom = require(\"./dom\");\n\nvar _pFrameMessaging = require(\"./3p-frame-messaging\");\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object\");\n\nvar _eventHelper = require(\"./event-helper\");\n\nvar _url = require(\"./url\");\n\nvar _array = require(\"./utils/array\");\n\nvar _style = require(\"./style\");\n\nvar _json = require(\"./json\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Sentinel used to force unlistening after a iframe is detached.\n * @type {string}\n */\nvar UNLISTEN_SENTINEL = 'unlisten';\n/**\n * The iframe feature policy that forces the iframe to pause when it's not\n * display.\n * See https://github.com/dtapuska/iframe-freeze.\n */\n\nvar EXECUTION_WHILE_NOT_RENDERED = 'execution-while-not-rendered';\n/**\n * @typedef {{\n *   frame: !Element,\n *   events: !Object<string, !Array<function(!JsonObject)>>\n * }}\n */\n\nvar WindowEventsDef;\n/**\n * Returns a mapping from a URL's origin to an array of windows and their\n * listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {boolean=} opt_create create the mapping if it does not exist\n * @return {?Object<string, !Array<!WindowEventsDef>>}\n */\n\nfunction getListenFors(parentWin, opt_create) {\n  var listeningFors = parentWin.listeningFors;\n\n  if (!listeningFors && opt_create) {\n    listeningFors = parentWin.listeningFors = Object.create(null);\n  }\n\n  return listeningFors || null;\n}\n/**\n * Returns an array of WindowEventsDef that have had any listenFor listeners\n * registered for this sentinel.\n * @param {?Window} parentWin the window that created the iframe\n * @param {string} sentinel the sentinel of the message\n * @param {boolean=} opt_create create the array if it does not exist\n * @return {?Array<!WindowEventsDef>}\n */\n\n\nfunction getListenForSentinel(parentWin, sentinel, opt_create) {\n  var listeningFors = getListenFors(parentWin, opt_create);\n\n  if (!listeningFors) {\n    return listeningFors;\n  }\n\n  var listenSentinel = listeningFors[sentinel];\n\n  if (!listenSentinel && opt_create) {\n    listenSentinel = listeningFors[sentinel] = [];\n  }\n\n  return listenSentinel || null;\n}\n/**\n * Returns an mapping of event names to listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {!Element} iframe the iframe element who's context will trigger the\n *     event\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @return {?Object<string, !Array<function(!JsonObject, !Window, string, !MessageEvent)>>}\n */\n\n\nfunction getOrCreateListenForEvents(parentWin, iframe, opt_is3P) {\n  var sentinel = getSentinel_(iframe, opt_is3P);\n  var listenSentinel = getListenForSentinel(parentWin, sentinel, true);\n  var windowEvents;\n\n  for (var i = 0; i < listenSentinel.length; i++) {\n    var we = listenSentinel[i];\n\n    if (we.frame === iframe) {\n      windowEvents = we;\n      break;\n    }\n  }\n\n  if (!windowEvents) {\n    windowEvents = {\n      frame: iframe,\n      events: Object.create(null)\n    };\n    listenSentinel.push(windowEvents);\n  }\n\n  return windowEvents.events;\n}\n/**\n * Returns an mapping of event names to listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {string} sentinel the sentinel of the message\n * @param {string} origin the source window's origin\n * @param {?Window} triggerWin the window that triggered the event\n * @return {?Object<string, !Array<function(!JsonObject, !Window, string, !MessageEvent)>>}\n */\n\n\nfunction getListenForEvents(parentWin, sentinel, origin, triggerWin) {\n  var listenSentinel = getListenForSentinel(parentWin, sentinel);\n\n  if (!listenSentinel) {\n    return listenSentinel;\n  } // Find the entry for the frame.\n  // TODO(@nekodo): Add a WeakMap<Window, WindowEventsDef> cache to\n  //     speed up this process.\n\n\n  var windowEvents;\n\n  for (var i = 0; i < listenSentinel.length; i++) {\n    var we = listenSentinel[i];\n    var contentWindow = we.frame.contentWindow;\n\n    if (!contentWindow) {\n      setTimeout(dropListenSentinel, 0, listenSentinel);\n    } else if (triggerWin == contentWindow || isDescendantWindow(contentWindow, triggerWin)) {\n      // 3p code path, we may accept messages from nested frames.\n      windowEvents = we;\n      break;\n    }\n  }\n\n  return windowEvents ? windowEvents.events : null;\n}\n/**\n * Checks whether one window is a descendant of another by climbing\n * the parent chain.\n * @param {?Window} ancestor potential ancestor window\n * @param {?Window} descendant potential descendant window\n * @return {boolean}\n */\n\n\nfunction isDescendantWindow(ancestor, descendant) {\n  for (var win = descendant; win && win != win.parent; win = win.parent) {\n    if (win == ancestor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Removes any listenFors registed on listenSentinel that do not have\n * a contentWindow (the frame was removed from the DOM tree).\n * @param {!Array<!WindowEventsDef>} listenSentinel\n */\n\n\nfunction dropListenSentinel(listenSentinel) {\n  var noopData = (0, _object.dict)({\n    'sentinel': UNLISTEN_SENTINEL\n  });\n\n  for (var i = listenSentinel.length - 1; i >= 0; i--) {\n    var windowEvents = listenSentinel[i];\n\n    if (!windowEvents.frame.contentWindow) {\n      listenSentinel.splice(i, 1);\n      var events = windowEvents.events;\n\n      for (var name in events) {\n        // Splice here, so that each unlisten does not shift the array\n        events[name].splice(0, Infinity).forEach(function (event) {\n          event(noopData);\n        });\n      }\n    }\n  }\n}\n/**\n * Registers the global listenFor event listener if it has yet to be.\n * @param {?Window} parentWin\n */\n\n\nfunction registerGlobalListenerIfNeeded(parentWin) {\n  if (parentWin.listeningFors) {\n    return;\n  }\n\n  var listenForListener = function listenForListener(event) {\n    if (!(0, _eventHelper.getData)(event)) {\n      return;\n    }\n\n    var data = parseIfNeeded((0, _eventHelper.getData)(event));\n\n    if (!data || !data['sentinel']) {\n      return;\n    }\n\n    var listenForEvents = getListenForEvents(parentWin, data['sentinel'], event.origin, event.source);\n\n    if (!listenForEvents) {\n      return;\n    }\n\n    var listeners = listenForEvents[data['type']];\n\n    if (!listeners) {\n      return;\n    } // We slice to avoid issues with adding another listener or unlistening\n    // during iteration. We could move to a Doubly Linked List with\n    // backtracking, but that's overly complicated.\n\n\n    listeners = listeners.slice();\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener(data, event.source, event.origin, event);\n    }\n  };\n\n  parentWin.addEventListener('message', listenForListener);\n}\n/**\n * Allows listening for message from the iframe. Returns an unlisten\n * function to remove the listener.\n *\n * @param {?Element} iframe\n * @param {string} typeOfMessage\n * @param {?function(!JsonObject, !Window, string, !MessageEvent)} callback Called when a\n *     message of this type arrives for this iframe.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @param {boolean=} opt_includingNestedWindows set to true if messages from\n *     nested frames should also be accepted.\n * @param {boolean=} opt_allowOpaqueOrigin set to true if messages from\n       opaque origins (origin == null) are allowed.\n * @return {!UnlistenDef}\n */\n\n\nfunction listenFor(iframe, typeOfMessage, callback, opt_is3P, opt_includingNestedWindows, opt_allowOpaqueOrigin) {\n  (0, _log.devAssert)(iframe.src, 'only iframes with src supported');\n  (0, _log.devAssert)(!iframe.parentNode, 'cannot register events on an attached ' + 'iframe. It will cause hair-pulling bugs like #2942');\n  (0, _log.devAssert)(callback);\n  var parentWin = iframe.ownerDocument.defaultView;\n  registerGlobalListenerIfNeeded(parentWin);\n  var listenForEvents = getOrCreateListenForEvents(parentWin, iframe, opt_is3P);\n  var iframeOrigin = (0, _url.parseUrlDeprecated)(iframe.src).origin;\n  var events = listenForEvents[typeOfMessage] || (listenForEvents[typeOfMessage] = []);\n  var unlisten;\n\n  var listener = function listener(data, source, origin, event) {\n    var sentinel = data['sentinel']; // Exclude messages that don't satisfy amp sentinel rules.\n\n    if (sentinel == 'amp') {\n      // For `amp` sentinel, nested windows are not allowed\n      if (source != iframe.contentWindow) {\n        return;\n      } // For `amp` sentinel origin must match unless opaque origin is allowed\n\n\n      var isOpaqueAndAllowed = origin == 'null' && opt_allowOpaqueOrigin;\n\n      if (iframeOrigin != origin && !isOpaqueAndAllowed) {\n        return;\n      }\n    } // Exclude nested frames if necessary.\n    // Note that the source was already verified to be either the contentWindow\n    // of the iframe itself or a descendant window within it.\n\n\n    if (!opt_includingNestedWindows && source != iframe.contentWindow) {\n      return;\n    }\n\n    if (data.sentinel == UNLISTEN_SENTINEL) {\n      unlisten();\n      return;\n    }\n\n    callback(data, source, origin, event);\n  };\n\n  events.push(listener);\n  return unlisten = function unlisten() {\n    if (listener) {\n      var index = events.indexOf(listener);\n\n      if (index > -1) {\n        events.splice(index, 1);\n      } // Make sure references to the unlisten function do not keep\n      // alive too much.\n\n\n      listener = null;\n      events = null;\n      callback = null;\n    }\n  };\n}\n/**\n * Returns a promise that resolves when one of given messages has been observed\n * for the first time. And remove listener for all other messages.\n * @param {!Element} iframe\n * @param {string|!Array<string>} typeOfMessages\n * @param {boolean=} opt_is3P\n * @return {!Promise<!{data: !JsonObject, source: !Window, origin: string, event: !MessageEvent}>}\n */\n\n\nfunction listenForOncePromise(iframe, typeOfMessages, opt_is3P) {\n  var unlistenList = [];\n\n  if (typeof typeOfMessages == 'string') {\n    typeOfMessages = [typeOfMessages];\n  }\n\n  return new Promise(function (resolve) {\n    for (var i = 0; i < typeOfMessages.length; i++) {\n      var message = typeOfMessages[i];\n      var unlisten = listenFor(iframe, message, function (data, source, origin, event) {\n        for (var _i = 0; _i < unlistenList.length; _i++) {\n          unlistenList[_i]();\n        }\n\n        resolve({\n          data: data,\n          source: source,\n          origin: origin,\n          event: event\n        });\n      }, opt_is3P);\n      unlistenList.push(unlisten);\n    }\n  });\n}\n/**\n * Posts a message to the iframe.\n * @param {!Element} iframe The iframe.\n * @param {string} type Type of the message.\n * @param {!JsonObject} object Message payload.\n * @param {string} targetOrigin origin of the target.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n */\n\n\nfunction postMessage(iframe, type, object, targetOrigin, opt_is3P) {\n  postMessageToWindows(iframe, [{\n    win: iframe.contentWindow,\n    origin: targetOrigin\n  }], type, object, opt_is3P);\n}\n/**\n * Posts an identical message to multiple target windows with the same\n * sentinel.\n * The message is serialized only once.\n * @param {!Element} iframe The iframe.\n * @param {!Array<{win: !Window, origin: string}>} targets to send the message\n *     to, pairs of window and its origin.\n * @param {string} type Type of the message.\n * @param {!JsonObject} object Message payload.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n */\n\n\nfunction postMessageToWindows(iframe, targets, type, object, opt_is3P) {\n  if (!iframe.contentWindow) {\n    return;\n  }\n\n  object['type'] = type;\n  object['sentinel'] = getSentinel_(iframe, opt_is3P);\n  var payload = object;\n\n  if (opt_is3P) {\n    // Serialize ourselves because that is much faster in Chrome.\n    payload = 'amp-' + JSON.stringify(object);\n  }\n\n  for (var i = 0; i < targets.length; i++) {\n    var target = targets[i];\n    target.win.\n    /*OK*/\n    postMessage(payload, target.origin);\n  }\n}\n/**\n * Gets the sentinel string.\n * @param {!Element} iframe The iframe.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @return {string} Sentinel string.\n * @private\n */\n\n\nfunction getSentinel_(iframe, opt_is3P) {\n  return opt_is3P ? iframe.getAttribute('data-amp-3p-sentinel') : 'amp';\n}\n/**\n * JSON parses event.data if it needs to be\n * @param {*} data\n * @return {?JsonObject} object message\n * @private\n * @visibleForTesting\n */\n\n\nfunction parseIfNeeded(data) {\n  if (typeof data == 'string') {\n    if (data.charAt(0) == '{') {\n      data = (0, _json.tryParseJson)(data, function (e) {\n        (0, _log.dev)().warn('IFRAME-HELPER', 'Postmessage could not be parsed. ' + 'Is it in a valid JSON format?', e);\n      }) || null;\n    } else if ((0, _pFrameMessaging.isAmpMessage)(data)) {\n      data = (0, _pFrameMessaging.deserializeMessage)(data);\n    } else {\n      data = null;\n    }\n  }\n\n  return (\n    /** @type {?JsonObject} */\n    data\n  );\n}\n/**\n * Manages a postMessage API for an iframe with a subscription message and\n * a way to broadcast messages to all subscribed windows, which\n * in turn must all be descendants of the contentWindow of the iframe.\n */\n\n\nvar SubscriptionApi =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Element} iframe The iframe.\n   * @param {string} type Type of the subscription message.\n   * @param {boolean} is3p set to true if the iframe is 3p.\n   * @param {function(!JsonObject, !Window, string)} requestCallback Callback\n   *     invoked whenever a new window subscribes.\n   */\n  function SubscriptionApi(iframe, type, is3p, requestCallback) {\n    var _this = this;\n\n    /** @private @const {!Element} */\n    this.iframe_ = iframe;\n    /** @private @const {boolean} */\n\n    this.is3p_ = is3p;\n    /** @private @const {!Array<{win: !Window, origin: string}>} */\n\n    this.clientWindows_ = [];\n    /** @private @const {!UnlistenDef} */\n\n    this.unlisten_ = listenFor(this.iframe_, type, function (data, source, origin) {\n      // This message might be from any window within the iframe, we need\n      // to keep track of which windows want to be sent updates.\n      if (!_this.clientWindows_.some(function (entry) {\n        return entry.win == source;\n      })) {\n        _this.clientWindows_.push({\n          win: source,\n          origin: origin\n        });\n      }\n\n      requestCallback(data, source, origin);\n    }, this.is3p_, // For 3P frames we also allow nested frames within them to subscribe..\n    this.is3p_\n    /* opt_includingNestedWindows */\n    );\n  }\n  /**\n   * Sends a message to all subscribed windows.\n   * @param {string} type Type of the message.\n   * @param {!JsonObject} data Message payload.\n   */\n\n\n  var _proto = SubscriptionApi.prototype;\n\n  _proto.send = function send(type, data) {\n    // Remove clients that have been removed from the DOM.\n    (0, _array.remove)(this.clientWindows_, function (client) {\n      return !client.win.parent;\n    });\n    postMessageToWindows(this.iframe_, this.clientWindows_, type, data, this.is3p_);\n  }\n  /**\n   * Destroys iframe.\n   */\n  ;\n\n  _proto.destroy = function destroy() {\n    this.unlisten_();\n    this.clientWindows_.length = 0;\n  };\n\n  return SubscriptionApi;\n}();\n/**\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nexports.SubscriptionApi = SubscriptionApi;\n\nfunction looksLikeTrackingIframe(element) {\n  var box = element.getLayoutBox(); // This heuristic is subject to change.\n\n  if (box.width > 10 || box.height > 10) {\n    return false;\n  } // Iframe is not tracking iframe if open with user interaction\n\n\n  return !(0, _dom.closestAncestorElementBySelector)(element, '.i-amphtml-overlay');\n} // Most common ad sizes\n// Array of [width, height] pairs.\n\n\nvar adSizes = [[300, 250], [320, 50], [300, 50], [320, 100]];\n/**\n * Guess whether this element might be an ad.\n * @param {!Element} element An amp-iframe element.\n * @return {boolean}\n * @visibleForTesting\n */\n\nfunction isAdLike(element) {\n  var box = element.getLayoutBox();\n  var height = box.height,\n      width = box.width;\n\n  for (var i = 0; i < adSizes.length; i++) {\n    var refWidth = adSizes[i][0];\n    var refHeight = adSizes[i][1];\n\n    if (refHeight > height) {\n      continue;\n    }\n\n    if (refWidth > width) {\n      continue;\n    } // Fuzzy matching to account for padding.\n\n\n    if (height - refHeight <= 20 && width - refWidth <= 20) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * @param {!Element} iframe\n * @return {!Element}\n * @private\n */\n\n\nfunction disableScrollingOnIframe(iframe) {\n  (0, _dom.addAttributesToElement)(iframe, (0, _object.dict)({\n    'scrolling': 'no'\n  })); // This shouldn't work, but it does on Firefox.\n  // https://stackoverflow.com/a/15494969\n\n  (0, _style.setStyle)(iframe, 'overflow', 'hidden');\n  return iframe;\n}\n/**\n * Returns true if win's properties can be accessed and win is defined.\n * This functioned is used to determine if a window is cross-domained\n * from the perspective of the current window.\n * @param {!Window} win\n * @return {boolean}\n * @private\n */\n\n\nfunction canInspectWindow(win) {\n  // TODO: this is not reliable.  The compiler assumes that property reads are\n  // side-effect free.  The recommended fix is to use goog.reflect.sinkValue\n  // but since we're not using the closure library I'm not sure how to do this.\n  // See https://github.com/google/closure-compiler/issues/3156\n  try {\n    // win['test'] could be truthy but not true the compiler shouldn't be able\n    // to optimize this check away.\n    return !!win.location.href && (win['test'] || true);\n  } catch (unusedErr) {\n    // eslint-disable-line no-unused-vars\n    return false;\n  }\n}\n/** @const {string} */\n\n\nvar FIE_EMBED_PROP = '__AMP_EMBED__';\n/**\n * Returns the embed created using `installFriendlyIframeEmbed` or `null`.\n * Caution: This will only return the FIE after the iframe has 'loaded'. If you\n * are checking before this signal you may be in a race condition that returns\n * null.\n * @param {!HTMLIFrameElement} iframe\n * @return {?./friendly-iframe-embed.FriendlyIframeEmbed}\n */\n\nexports.FIE_EMBED_PROP = FIE_EMBED_PROP;\n\nfunction getFriendlyIframeEmbedOptional(iframe) {\n  return (\n    /** @type {?./friendly-iframe-embed.FriendlyIframeEmbed} */\n    iframe[FIE_EMBED_PROP]\n  );\n}\n/**\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isInFie(element) {\n  return element.classList.contains('i-amphtml-fie') || !!(0, _dom.closestAncestorElementBySelector)(element, '.i-amphtml-fie');\n}\n/**\n * @param {!HTMLIFrameElement} iframe\n */\n\n\nfunction makePausable(iframe) {\n  var oldAllow = (iframe.getAttribute('allow') || '').trim();\n  iframe.setAttribute('allow', EXECUTION_WHILE_NOT_RENDERED + \" 'none';\" + oldAllow);\n}\n/**\n * @param {!HTMLIFrameElement} iframe\n * @return {boolean}\n */\n\n\nfunction isPausable(iframe) {\n  return !!iframe.featurePolicy && iframe.featurePolicy.features().indexOf(EXECUTION_WHILE_NOT_RENDERED) != -1 && !iframe.featurePolicy.allowsFeature(EXECUTION_WHILE_NOT_RENDERED);\n}\n/**\n * @param {!HTMLIFrameElement} iframe\n * @param {boolean} paused\n */\n\n\nfunction setPaused(iframe, paused) {\n  (0, _style.toggle)(iframe, !paused);\n}\n\n},{\"./3p-frame-messaging\":103,\"./dom\":111,\"./event-helper\":114,\"./json\":122,\"./log\":125,\"./style\":144,\"./url\":148,\"./utils/array\":149,\"./utils/object\":154}],117:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getTrackImpressionPromise = getTrackImpressionPromise;\nexports.resetTrackImpressionPromiseForTesting = resetTrackImpressionPromiseForTesting;\nexports.maybeTrackImpression = maybeTrackImpression;\nexports.doNotTrackImpression = doNotTrackImpression;\nexports.isTrustedReferrer = isTrustedReferrer;\nexports.shouldAppendExtraParams = shouldAppendExtraParams;\nexports.getExtraParamsUrl = getExtraParamsUrl;\n\nvar _promise = require(\"./utils/promise\");\n\nvar _services = require(\"./services\");\n\nvar _url = require(\"./url\");\n\nvar _log = require(\"./log\");\n\nvar _mode = require(\"./mode\");\n\nvar _experiments = require(\"./experiments\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TIMEOUT_VALUE = 8000;\nvar trackImpressionPromise = null;\nvar DEFAULT_APPEND_URL_PARAM = ['gclid', 'gclsrc'];\n/**\n * These domains are trusted with more sensitive viewer operations such as\n * sending impression requests. If you believe your domain should be here,\n * file the issue on GitHub to discuss. The process will be similar\n * (but somewhat more stringent) to the one described in the [3p/README.md](\n * https://github.com/ampproject/amphtml/blob/master/3p/README.md)\n *\n * @export {!Array<!RegExp>}\n */\n\nvar TRUSTED_REFERRER_HOSTS = [\n/**\n * Twitter's link wrapper domains:\n * - t.co\n */\n/^t.co$/];\n/**\n * A function to get the trackImpressionPromise;\n * @return {!Promise}\n */\n\nfunction getTrackImpressionPromise() {\n  return (0, _log.userAssert)(trackImpressionPromise, 'E#19457 trackImpressionPromise');\n}\n/**\n * Function that reset the trackImpressionPromise only for testing\n * @visibleForTesting\n */\n\n\nfunction resetTrackImpressionPromiseForTesting() {\n  trackImpressionPromise = null;\n}\n/**\n * Emit a HTTP request to a destination defined on the incoming URL.\n * Launched for trusted viewer. Otherwise guarded by experiment.\n * @param {!Window} win\n */\n\n\nfunction maybeTrackImpression(win) {\n  var deferred = new _promise.Deferred();\n  var promise = deferred.promise,\n      resolveImpression = deferred.resolve;\n  trackImpressionPromise = _services.Services.timerFor(win).timeoutPromise(TIMEOUT_VALUE, promise, 'TrackImpressionPromise timeout').catch(function (error) {\n    (0, _log.dev)().warn('IMPRESSION', error);\n  });\n\n  var viewer = _services.Services.viewerForDoc(win.document.documentElement);\n\n  var isTrustedViewerPromise = viewer.isTrustedViewer();\n  var isTrustedReferrerPromise = viewer.getReferrerUrl().then(function (referrer) {\n    return isTrustedReferrer(referrer);\n  });\n  Promise.all([isTrustedViewerPromise, isTrustedReferrerPromise]).then(function (results) {\n    var isTrustedViewer = results[0];\n    var isTrustedReferrer = results[1]; // Enable the feature in the case of trusted viewer,\n    // or trusted referrer\n    // or with experiment turned on\n\n    if (!isTrustedViewer && !isTrustedReferrer && !(0, _experiments.isExperimentOn)(win, 'alp')) {\n      resolveImpression();\n      return;\n    }\n\n    var replaceUrlPromise = handleReplaceUrl(win);\n    var clickUrlPromise = handleClickUrl(win);\n    Promise.all([replaceUrlPromise, clickUrlPromise]).then(function () {\n      resolveImpression();\n    }, function () {});\n  });\n}\n/**\n * Signal that impression tracking is not relevant in this environment.\n */\n\n\nfunction doNotTrackImpression() {\n  trackImpressionPromise = Promise.resolve();\n}\n/**\n * Handle the getReplaceUrl and return a promise when url is replaced Only\n * handles replaceUrl when viewer indicates AMP to do so. Viewer should indicate\n * by setting the legacy replaceUrl init param and add `replaceUrl` to its\n * capability param. Future plan is to change the type of legacy init replaceUrl\n * param from url string to boolean value. Please NOTE replaceUrl and adLocation\n * will never arrive at same time, so there is no race condition on the order of\n * handling url replacement.\n * @param {!Window} win\n * @return {!Promise}\n */\n\n\nfunction handleReplaceUrl(win) {\n  var viewer = _services.Services.viewerForDoc(win.document.documentElement); // ReplaceUrl substitution doesn't have to wait until the document is visible\n\n\n  if (!viewer.getParam('replaceUrl')) {\n    // The init replaceUrl param serve as a signal on whether replaceUrl is\n    // required for this doc.\n    return Promise.resolve();\n  }\n\n  if (!viewer.hasCapability('replaceUrl')) {\n    // If Viewer is not capability of providing async replaceUrl, use the legacy\n    // init replaceUrl param.\n    viewer.replaceUrl(viewer.getParam('replaceUrl') || null);\n    return Promise.resolve();\n  } // request async replaceUrl is viewer support getReplaceUrl.\n\n\n  return viewer.sendMessageAwaitResponse('getReplaceUrl',\n  /* data */\n  undefined).then(function (response) {\n    if (!response || typeof response != 'object') {\n      (0, _log.dev)().warn('IMPRESSION', 'get invalid replaceUrl response');\n      return;\n    }\n\n    viewer.replaceUrl(response['replaceUrl'] || null);\n  }, function (err) {\n    (0, _log.dev)().warn('IMPRESSION', 'Error request replaceUrl from viewer', err);\n  });\n}\n/**\n * @param {string} referrer\n * @return {boolean}\n * @visibleForTesting\n */\n\n\nfunction isTrustedReferrer(referrer) {\n  var url = (0, _url.parseUrlDeprecated)(referrer);\n\n  if (url.protocol != 'https:') {\n    return false;\n  }\n\n  return TRUSTED_REFERRER_HOSTS.some(function (th) {\n    return th.test(url.hostname);\n  });\n}\n/**\n * Perform the impression request if it has been provided via\n * the click param in the viewer arguments. Returns a promise.\n * @param {!Window} win\n * @return {!Promise}\n */\n\n\nfunction handleClickUrl(win) {\n  var ampdoc = _services.Services.ampdoc(win.document.documentElement);\n\n  var viewer = _services.Services.viewerForDoc(ampdoc);\n  /** @const {?string} */\n\n\n  var clickUrl = viewer.getParam('click');\n\n  if (!clickUrl) {\n    return Promise.resolve();\n  }\n\n  if (clickUrl.indexOf('https://') != 0) {\n    (0, _log.user)().warn('IMPRESSION', 'click fragment param should start with https://. Found ', clickUrl);\n    return Promise.resolve();\n  }\n\n  if (win.location.hash) {\n    // This is typically done using replaceState inside the viewer.\n    // If for some reason it failed, get rid of the fragment here to\n    // avoid duplicate tracking.\n    win.location.hash = '';\n  } // TODO(@zhouyx) need test with a real response.\n\n\n  return ampdoc.whenFirstVisible().then(function () {\n    return invoke(win, (0, _log.dev)().assertString(clickUrl));\n  }).then(function (response) {\n    applyResponse(win, response);\n  }).catch(function (err) {\n    (0, _log.user)().warn('IMPRESSION', 'Error on request clickUrl: ', err);\n  });\n}\n/**\n * Send the url to ad server and wait for its response\n * @param {!Window} win\n * @param {string} clickUrl\n * @return {!Promise<?JsonObject>}\n */\n\n\nfunction invoke(win, clickUrl) {\n  if ((0, _mode.getMode)().localDev && !(0, _mode.getMode)().test) {\n    clickUrl = 'http://localhost:8000/impression-proxy?url=' + clickUrl;\n  }\n\n  return _services.Services.xhrFor(win).fetchJson(clickUrl, {\n    credentials: 'include'\n  }).then(function (res) {\n    // Treat 204 no content response specially\n    if (res.status == 204) {\n      return null;\n    }\n\n    return res.json();\n  });\n}\n/**\n * parse the response back from ad server\n * Set for analytics purposes\n * @param {!Window} win\n * @param {?JsonObject} response\n */\n\n\nfunction applyResponse(win, response) {\n  if (!response) {\n    return;\n  }\n\n  var adLocation = response['location'];\n  var adTracking = response['tracking_url']; // If there is a tracking_url, need to track it\n  // Otherwise track the location\n\n  var trackUrl = adTracking || adLocation;\n\n  if (trackUrl && !(0, _url.isProxyOrigin)(trackUrl)) {\n    // To request the provided trackUrl for tracking purposes.\n    new Image().src = trackUrl;\n  } // Replace the location href params with new location params we get (if any).\n\n\n  if (adLocation) {\n    if (!win.history.replaceState) {\n      return;\n    }\n\n    var viewer = _services.Services.viewerForDoc(win.document.documentElement);\n\n    var currentHref = win.location.href;\n    var url = (0, _url.parseUrlDeprecated)(adLocation);\n    var params = (0, _url.parseQueryString)(url.search);\n    var newHref = (0, _url.addParamsToUrl)(currentHref, params); // TODO: Avoid overwriting the fragment parameter.\n\n    win.history.replaceState(null, '', newHref);\n    viewer.maybeUpdateFragmentForCct();\n  }\n}\n/**\n * Return a promise that whether appending extra url params to outgoing link is\n * required.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @return {!Promise<boolean>}\n */\n\n\nfunction shouldAppendExtraParams(ampdoc) {\n  return ampdoc.whenReady().then(function () {\n    return !!ampdoc.getBody().querySelector('amp-analytics[type=googleanalytics]');\n  });\n}\n/**\n * Return the extra url params string that should be appended to outgoing link\n * @param {!Window} win\n * @param {!Element} target\n * @return {string}\n */\n\n\nfunction getExtraParamsUrl(win, target) {\n  // Get an array with extra params that needs to append.\n  var url = (0, _url.parseUrlDeprecated)(win.location.href);\n  var params = (0, _url.parseQueryString)(url.search);\n  var appendParams = [];\n\n  for (var i = 0; i < DEFAULT_APPEND_URL_PARAM.length; i++) {\n    var param = DEFAULT_APPEND_URL_PARAM[i];\n\n    if (typeof params[param] !== 'undefined') {\n      appendParams.push(param);\n    }\n  } // Check if the param already exists\n\n\n  var additionalUrlParams = target.getAttribute('data-amp-addparams');\n  var href = target.href;\n\n  if (additionalUrlParams) {\n    href = (0, _url.addParamsToUrl)(href, (0, _url.parseQueryString)(additionalUrlParams));\n  }\n\n  var loc = (0, _url.parseUrlDeprecated)(href);\n  var existParams = (0, _url.parseQueryString)(loc.search);\n\n  for (var _i = appendParams.length - 1; _i >= 0; _i--) {\n    var _param = appendParams[_i];\n\n    if (typeof existParams[_param] !== 'undefined') {\n      appendParams.splice(_i, 1);\n    }\n  }\n\n  return getQueryParamUrl(appendParams);\n}\n/**\n * Helper method to convert an query param array to string\n * @param {!Array<string>} params\n * @return {string}\n */\n\n\nfunction getQueryParamUrl(params) {\n  var url = '';\n\n  for (var i = 0; i < params.length; i++) {\n    var param = params[i];\n    url += i == 0 ? param + \"=QUERY_PARAM(\" + param + \")\" : \"&\" + param + \"=QUERY_PARAM(\" + param + \")\";\n  }\n\n  return url;\n}\n\n},{\"./experiments\":115,\"./log\":125,\"./mode\":127,\"./services\":141,\"./url\":148,\"./utils/promise\":156}],118:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.ExitInterface = exports.FullscreenInterface = exports.VisibilityDataDef = exports.VisibilityInterface = exports.HostServices = exports.HostServiceError = void 0;\n\nvar _services = require(\"../services\");\n\nvar _service = require(\"../service\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ServiceNames = {\n  VISIBILITY: 'host-visibility',\n  FULLSCREEN: 'host-fullscreen',\n  EXIT: 'host-exit'\n};\n/**\n * Error object for various host services. It is passed around in case\n * of host service failures for proper error handling.\n *\n * - fallback: if the caller should fallback to other impl\n *\n * @typedef {{\n *   fallback: boolean\n * }}\n */\n\nvar HostServiceError;\n/**\n * A set of service interfaces that is used when the AMP document is loaded\n * in an environment that does not provide regular web APIs for things like\n * - open URL\n * - scroll events, IntersectionObserver\n * - expand to fullscreen\n *\n * The consumers of those services should get the service by calling\n * XXXForDoc(), which returns a Promise that resolves to the service Object,\n * or gets rejected with an error Object. (See HostServiceError)\n *\n * The providers of those services should install the service by calling\n * installXXXServiceForDoc() when it's available, or\n * rejectXXXServiceForDoc() when there is a failure.\n */\n\nexports.HostServiceError = HostServiceError;\n\nvar HostServices =\n/*#__PURE__*/\nfunction () {\n  function HostServices() {}\n\n  /**\n   * @param {!Element|!../service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {boolean}\n   */\n  HostServices.isAvailable = function isAvailable(elementOrAmpDoc) {\n    var head = _services.Services.ampdoc(elementOrAmpDoc).getHeadNode();\n\n    return !!head.querySelector('script[host-service]');\n  }\n  /**\n   * @param {!Element|!../service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!VisibilityInterface>}\n   */\n  ;\n\n  HostServices.visibilityForDoc = function visibilityForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!VisibilityInterface>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, ServiceNames.VISIBILITY)\n    );\n  }\n  /**\n   * @param {!Element|!../service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @param {function(new:Object, !../service/ampdoc-impl.AmpDoc)} impl\n   */\n  ;\n\n  HostServices.installVisibilityServiceForDoc = function installVisibilityServiceForDoc(elementOrAmpDoc, impl) {\n    (0, _service.registerServiceBuilderForDoc)(elementOrAmpDoc, ServiceNames.VISIBILITY, impl,\n    /* opt_instantiate */\n    true);\n  }\n  /**\n   * @param {!Element|!../service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @param {!HostServiceError} error\n   */\n  ;\n\n  HostServices.rejectVisibilityServiceForDoc = function rejectVisibilityServiceForDoc(elementOrAmpDoc, error) {\n    (0, _service.rejectServicePromiseForDoc)(elementOrAmpDoc, ServiceNames.VISIBILITY, error);\n  }\n  /**\n   * @param {!Element|!../service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!FullscreenInterface>}\n   */\n  ;\n\n  HostServices.fullscreenForDoc = function fullscreenForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!FullscreenInterface>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, ServiceNames.FULLSCREEN)\n    );\n  }\n  /**\n   * @param {!Element|!../service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @param {function(new:Object, !../service/ampdoc-impl.AmpDoc)} impl\n   */\n  ;\n\n  HostServices.installFullscreenServiceForDoc = function installFullscreenServiceForDoc(elementOrAmpDoc, impl) {\n    (0, _service.registerServiceBuilderForDoc)(elementOrAmpDoc, ServiceNames.FULLSCREEN, impl,\n    /* opt_instantiate */\n    true);\n  }\n  /**\n   * @param {!Element|!../service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @param {!HostServiceError} error\n   */\n  ;\n\n  HostServices.rejectFullscreenServiceForDoc = function rejectFullscreenServiceForDoc(elementOrAmpDoc, error) {\n    (0, _service.rejectServicePromiseForDoc)(elementOrAmpDoc, ServiceNames.FULLSCREEN, error);\n  }\n  /**\n   * @param {!Element|!../service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!ExitInterface>}\n   */\n  ;\n\n  HostServices.exitForDoc = function exitForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!ExitInterface>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, ServiceNames.EXIT)\n    );\n  }\n  /**\n   * @param {!Element|!../service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @param {function(new:Object, !../service/ampdoc-impl.AmpDoc)} impl\n   */\n  ;\n\n  HostServices.installExitServiceForDoc = function installExitServiceForDoc(elementOrAmpDoc, impl) {\n    (0, _service.registerServiceBuilderForDoc)(elementOrAmpDoc, ServiceNames.EXIT, impl,\n    /* opt_instantiate */\n    true);\n  }\n  /**\n   * @param {!Element|!../service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @param {!HostServiceError} error\n   */\n  ;\n\n  HostServices.rejectExitServiceForDoc = function rejectExitServiceForDoc(elementOrAmpDoc, error) {\n    (0, _service.rejectServicePromiseForDoc)(elementOrAmpDoc, ServiceNames.EXIT, error);\n  };\n\n  return HostServices;\n}();\n/**\n * VisibilityInterface defines interface provided by host for visibility\n * detection.\n *\n * @interface\n */\n\n\nexports.HostServices = HostServices;\n\nvar VisibilityInterface =\n/*#__PURE__*/\nfunction () {\n  function VisibilityInterface() {}\n\n  var _proto = VisibilityInterface.prototype;\n\n  /**\n   * Register a callback for visibility change events.\n   *\n   * @param {function(!VisibilityDataDef)} unusedCallback\n   */\n  _proto.onVisibilityChange = function onVisibilityChange(unusedCallback) {};\n\n  return VisibilityInterface;\n}();\n/**\n * The structure that combines position and size for an element. The exact\n * interpretation of position and size depends on the use case.\n *\n * @typedef {{\n *   visibleRect: (?../layout-rect.LayoutRectDef),\n *   visibleRatio: number\n * }}\n */\n\n\nexports.VisibilityInterface = VisibilityInterface;\nvar VisibilityDataDef;\n/**\n * FullscreenInterface defines interface provided by host to enable/disable\n * fullscreen mode.\n *\n * @interface\n */\n\nexports.VisibilityDataDef = VisibilityDataDef;\n\nvar FullscreenInterface =\n/*#__PURE__*/\nfunction () {\n  function FullscreenInterface() {}\n\n  var _proto2 = FullscreenInterface.prototype;\n\n  /**\n   * Request to expand the given element to fullscreen overlay.\n   *\n   * @param {!Element} unusedTargetElement\n   * @return {!Promise<boolean>} promise resolves to a boolean\n   *     indicating if the request was fulfilled\n   */\n  _proto2.enterFullscreenOverlay = function enterFullscreenOverlay(unusedTargetElement) {}\n  /**\n   * Request to exit from fullscreen overlay.\n   *\n   * @param {!Element} unusedTargetElement\n   * @return {!Promise<boolean>} promise resolves to a boolean\n   *     indicating if the request was fulfilled\n   */\n  ;\n\n  _proto2.exitFullscreenOverlay = function exitFullscreenOverlay(unusedTargetElement) {};\n\n  return FullscreenInterface;\n}();\n/**\n * ExitInterface defines interface provided by host for navigating out.\n *\n * @interface\n */\n\n\nexports.FullscreenInterface = FullscreenInterface;\n\nvar ExitInterface =\n/*#__PURE__*/\nfunction () {\n  function ExitInterface() {}\n\n  var _proto3 = ExitInterface.prototype;\n\n  /**\n   * Request to navigate to URL.\n   *\n   * @param {string} unusedUrl\n   * @return {!Promise<boolean>} promise resolves to a boolean\n   *     indicating if the request was fulfilled\n   */\n  _proto3.openUrl = function openUrl(unusedUrl) {};\n\n  return ExitInterface;\n}();\n\nexports.ExitInterface = ExitInterface;\n\n},{\"../service\":131,\"../services\":141}],119:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.whenContentIniLoad = whenContentIniLoad;\nexports.getMeasuredResources = getMeasuredResources;\n\nvar _resourcesInterface = require(\"./service/resources-interface\");\n\nvar _services = require(\"./services\");\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {!Array<string>} */\nvar EXCLUDE_INI_LOAD = ['AMP-AD', 'AMP-ANALYTICS', 'AMP-PIXEL', 'AMP-AD-EXIT'];\n/**\n * Returns the promise that will be resolved when all content elements\n * have been loaded in the initially visible set.\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {!Window} hostWin\n * @param {!./layout-rect.LayoutRectDef} rect\n * @param {boolean=} opt_isInPrerender signifies if we are in prerender mode.\n * @return {!Promise}\n */\n\nfunction whenContentIniLoad(elementOrAmpDoc, hostWin, rect, opt_isInPrerender) {\n  var ampdoc = _services.Services.ampdoc(elementOrAmpDoc);\n\n  return getMeasuredResources(ampdoc, hostWin, function (r) {\n    // TODO(jridgewell): Remove isFixed check here once the position\n    // is calculted correctly in a separate layer for embeds.\n    if (!r.isDisplayed() || !r.overlaps(rect) && !r.isFixed() || opt_isInPrerender && !r.prerenderAllowed()) {\n      return false;\n    }\n\n    return true;\n  }).then(function (resources) {\n    var promises = [];\n    resources.forEach(function (r) {\n      if (!EXCLUDE_INI_LOAD.includes(r.element.tagName)) {\n        promises.push(r.loadedOnce());\n      }\n    });\n    return Promise.all(promises);\n  });\n}\n/**\n * Returns a subset of resources which are (1) belong to the specified host\n * window, and (2) meet the filterFn given.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {!Window} hostWin\n * @param {function(!./service/resource.Resource):boolean} filterFn\n * @return {!Promise<!Array<!./service/resource.Resource>>}\n */\n\n\nfunction getMeasuredResources(ampdoc, hostWin, filterFn) {\n  // First, wait for the `ready-scan` signal. Waiting for each element\n  // individually is too expensive and `ready-scan` will cover most of\n  // the initially parsed elements.\n  // TODO(jridgewell): this path should be switched to use a future\n  // \"layer has been measured\" signal.\n  return ampdoc.signals().whenSignal(_resourcesInterface.READY_SCAN_SIGNAL).then(function () {\n    // Second, wait for any left-over elements to complete measuring.\n    var measurePromiseArray = [];\n\n    var resources = _services.Services.resourcesForDoc(ampdoc);\n\n    resources.get().forEach(function (r) {\n      if (!r.hasBeenMeasured() && r.hostWin == hostWin && !r.hasOwner()) {\n        measurePromiseArray.push(r.getPageLayoutBoxAsync());\n      }\n    });\n    return Promise.all(measurePromiseArray);\n  }).then(function () {\n    var resources = _services.Services.resourcesForDoc(ampdoc);\n\n    return resources.get().filter(function (r) {\n      return r.hostWin == hostWin && !r.hasOwner() && r.hasBeenMeasured() && filterFn(r);\n    });\n  });\n}\n\n},{\"./service/resources-interface\":139,\"./services\":141}],120:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.internalRuntimeVersion = internalRuntimeVersion;\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nfunction internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n\n},{}],121:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getIntersectionChangeEntry = getIntersectionChangeEntry;\nexports.nativeIntersectionObserverSupported = nativeIntersectionObserverSupported;\nexports.intersectionRatio = intersectionRatio;\nexports.getThresholdSlot = getThresholdSlot;\nexports.IntersectionObserverPolyfill = exports.IntersectionObserverApi = exports.DEFAULT_THRESHOLD = exports.DOMRect = void 0;\n\nvar _pass = require(\"./pass\");\n\nvar _services = require(\"./services\");\n\nvar _iframeHelper = require(\"./iframe-helper\");\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object\");\n\nvar _types = require(\"./types\");\n\nvar _layoutRect = require(\"./layout-rect\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The structure that defines the rectangle used in intersection observers.\n *\n * @typedef {{\n *   top: number,\n *   bottom: number,\n *   left: number,\n *   right: number,\n *   width: number,\n *   height: number,\n *   x: number,\n *   y: number,\n * }}\n */\nvar DOMRect;\nexports.DOMRect = DOMRect;\nvar DEFAULT_THRESHOLD = [0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1];\n/** @typedef {{\n *    element: !Element,\n *    currentThresholdSlot: number,\n *  }}\n */\n\nexports.DEFAULT_THRESHOLD = DEFAULT_THRESHOLD;\nvar ElementIntersectionStateDef;\n/** @const @private */\n\nvar TAG = 'INTERSECTION-OBSERVER';\n/** @const @private */\n\nvar INIT_TIME = Date.now();\n/**\n * A function to get the element's current IntersectionObserverEntry\n * regardless of the intersetion ratio. Only available when element is not\n * nested in a container iframe.\n * TODO: support opt_iframe if there's valid use cases.\n * @param {!./layout-rect.LayoutRectDef} element element's rect\n * @param {?./layout-rect.LayoutRectDef} owner element's owner rect\n * @param {!./layout-rect.LayoutRectDef} hostViewport hostViewport's rect\n * @return {!IntersectionObserverEntry} A change entry.\n */\n\nfunction getIntersectionChangeEntry(element, owner, hostViewport) {\n  var intersection = (0, _layoutRect.rectIntersection)(element, owner, hostViewport) || (0, _layoutRect.layoutRectLtwh)(0, 0, 0, 0);\n  var ratio = intersectionRatio(intersection, element);\n  return calculateChangeEntry(element, hostViewport, intersection, ratio);\n}\n/**\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nfunction nativeIntersectionObserverSupported(win) {\n  return 'IntersectionObserver' in win && 'IntersectionObserverEntry' in win && 'intersectionRatio' in win.IntersectionObserverEntry.prototype;\n}\n/**\n * A class to help amp-iframe and amp-ad nested iframe listen to intersection\n * change.\n */\n\n\nvar IntersectionObserverApi =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!AMP.BaseElement} baseElement\n   * @param {!Element} iframe\n   * @param {boolean=} opt_is3p\n   */\n  function IntersectionObserverApi(baseElement, iframe, opt_is3p) {\n    var _this = this;\n\n    /** @private @const {!AMP.BaseElement} */\n    this.baseElement_ = baseElement;\n    /** @private {?IntersectionObserverPolyfill} */\n\n    this.intersectionObserver_ = null;\n    /** @private {boolean} */\n\n    this.shouldObserve_ = false;\n    /** @private {boolean} */\n\n    this.isInViewport_ = false;\n    /** @private {?function()} */\n\n    this.unlistenOnDestroy_ = null;\n    /** @private {!./service/viewport/viewport-interface.ViewportInterface} */\n\n    this.viewport_ = baseElement.getViewport();\n    /** @private {?SubscriptionApi} */\n\n    this.subscriptionApi_ = new _iframeHelper.SubscriptionApi(iframe, 'send-intersections', opt_is3p || false, function () {\n      _this.startSendingIntersection_();\n    });\n    this.intersectionObserver_ = new IntersectionObserverPolyfill(function (entries) {\n      // Remove target info from cross origin iframe.\n      for (var i = 0; i < entries.length; i++) {\n        delete entries[i]['target'];\n      }\n\n      _this.subscriptionApi_.send('intersection', (0, _object.dict)({\n        'changes': entries\n      }));\n    }, {\n      threshold: DEFAULT_THRESHOLD\n    });\n    this.intersectionObserver_.tick(this.viewport_.getRect());\n    /** @const {function()} */\n\n    this.fire = function () {\n      if (!_this.shouldObserve_ || !_this.isInViewport_) {\n        return;\n      }\n\n      _this.intersectionObserver_.tick(_this.viewport_.getRect());\n    };\n  }\n  /**\n   * Function to start listening to viewport event. and observer intersection\n   * change on the element.\n   */\n\n\n  var _proto = IntersectionObserverApi.prototype;\n\n  _proto.startSendingIntersection_ = function startSendingIntersection_() {\n    var _this2 = this;\n\n    this.shouldObserve_ = true;\n    this.intersectionObserver_.observe(this.baseElement_.element);\n    this.baseElement_.getVsync().measure(function () {\n      _this2.isInViewport_ = _this2.baseElement_.isInViewport();\n\n      _this2.fire();\n    });\n    var unlistenViewportScroll = this.viewport_.onScroll(this.fire);\n    var unlistenViewportChange = this.viewport_.onChanged(this.fire);\n\n    this.unlistenOnDestroy_ = function () {\n      unlistenViewportScroll();\n      unlistenViewportChange();\n    };\n  }\n  /**\n   * Enable to the PositionObserver to listen to viewport events\n   * @param {boolean} inViewport\n   */\n  ;\n\n  _proto.onViewportCallback = function onViewportCallback(inViewport) {\n    this.isInViewport_ = inViewport;\n  }\n  /**\n   * Clean all listenrs\n   */\n  ;\n\n  _proto.destroy = function destroy() {\n    this.shouldObserve_ = false;\n    this.intersectionObserver_.disconnect();\n    this.intersectionObserver_ = null;\n\n    if (this.unlistenOnDestroy_) {\n      this.unlistenOnDestroy_();\n      this.unlistenOnDestroy_ = null;\n    }\n\n    this.subscriptionApi_.destroy();\n    this.subscriptionApi_ = null;\n  };\n\n  return IntersectionObserverApi;\n}();\n/**\n * The IntersectionObserverPolyfill class lets any element receive its\n * intersection data with the viewport. It acts like native browser supported\n * IntersectionObserver.\n * The IntersectionObserver receives a callback function and an optional option\n * as params. Whenever the element intersection ratio cross a threshold value,\n * IntersectionObserverPolyfill will call the provided callback function with\n * the change entry. Only Works with one document for now.\n * @visibleForTesting\n */\n\n\nexports.IntersectionObserverApi = IntersectionObserverApi;\n\nvar IntersectionObserverPolyfill =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {function(!Array<!IntersectionObserverEntry>)} callback\n   * @param {Object=} opt_option\n   */\n  function IntersectionObserverPolyfill(callback, opt_option) {\n    /** @private @const {function(!Array<!IntersectionObserverEntry>)} */\n    this.callback_ = callback; // The input threshold can be a number or an array of numbers.\n\n    var threshold = opt_option && opt_option.threshold;\n\n    if (threshold) {\n      threshold = (0, _types.isArray)(threshold) ? threshold : [threshold];\n    } else {\n      threshold = [0];\n    }\n\n    for (var i = 0; i < threshold.length; i++) {\n      (0, _log.devAssert)((0, _types.isFiniteNumber)(threshold[i]), 'Threshold should be a finite number or an array of finite numbers');\n    }\n    /**\n     * A list of threshold, sorted in increasing numeric order\n     * @private @const {!Array}\n     */\n\n\n    this.threshold_ = threshold.sort();\n    (0, _log.devAssert)(this.threshold_[0] >= 0 && this.threshold_[this.threshold_.length - 1] <= 1, 'Threshold should be in the range from \"[0, 1]\"');\n    /** @private {?./layout-rect.LayoutRectDef} */\n\n    this.lastViewportRect_ = null;\n    /** @private {./layout-rect.LayoutRectDef|undefined} */\n\n    this.lastIframeRect_ = undefined;\n    /**\n     * Store a list of observed elements and their current threshold slot which\n     * their intersection ratio fills, range from [0, this.threshold_.length]\n     * @private {Array<!ElementIntersectionStateDef>}\n     */\n\n    this.observeEntries_ = [];\n    /**\n     * Mutation observer to fire off on visibility changes\n     * @private {?function()}\n     */\n\n    this.hiddenObserverUnlistener_ = null;\n    /** @private {Pass} */\n\n    this.mutationPass_ = null;\n  }\n  /**\n   * Function to unobserve all elements.\n   * and clean up the polyfill.\n   */\n\n\n  var _proto2 = IntersectionObserverPolyfill.prototype;\n\n  _proto2.disconnect = function disconnect() {\n    this.observeEntries_.length = 0;\n    this.disconnectMutationObserver_();\n  }\n  /**\n   * Provide a way to observe the intersection change for a specific element\n   * Please note IntersectionObserverPolyfill only support AMP element now\n   * TODO: Support non AMP element\n   * @param {!Element} element\n   */\n  ;\n\n  _proto2.observe = function observe(element) {\n    // Check the element is an AMP element.\n    (0, _log.devAssert)(element.getLayoutBox); // If the element already exists in current observeEntries, do nothing\n\n    for (var i = 0; i < this.observeEntries_.length; i++) {\n      if (this.observeEntries_[i].element === element) {\n        (0, _log.dev)().warn(TAG, 'should observe same element once');\n        return;\n      }\n    }\n\n    var newState = {\n      element: element,\n      currentThresholdSlot: 0\n    }; // Get the new observed element's first changeEntry based on last viewport\n\n    if (this.lastViewportRect_) {\n      var change = this.getValidIntersectionChangeEntry_(newState, this.lastViewportRect_, this.lastIframeRect_);\n\n      if (change) {\n        this.callback_([change]);\n      }\n    } // Add a mutation observer to tick ourself\n    // TODO (@torch2424): Allow this to observe elements,\n    // from multiple documents.\n\n\n    var ampdoc = _services.Services.ampdoc(element);\n\n    if (ampdoc.win.MutationObserver && !this.hiddenObserverUnlistener_) {\n      this.mutationPass_ = new _pass.Pass(ampdoc.win, this.handleMutationObserverPass_.bind(this, element));\n\n      var hiddenObserver = _services.Services.hiddenObserverForDoc(element);\n\n      this.hiddenObserverUnlistener_ = hiddenObserver.add(this.handleMutationObserverNotification_.bind(this));\n    } // push new observed element\n\n\n    this.observeEntries_.push(newState);\n  }\n  /**\n   * Provide a way to unobserve intersection change for a specified element\n   * @param {!Element} element\n   */\n  ;\n\n  _proto2.unobserve = function unobserve(element) {\n    // find the unobserved element in observeEntries\n    for (var i = 0; i < this.observeEntries_.length; i++) {\n      if (this.observeEntries_[i].element === element) {\n        this.observeEntries_.splice(i, 1);\n\n        if (this.observeEntries_.length <= 0) {\n          this.disconnectMutationObserver_();\n        }\n\n        return;\n      }\n    }\n\n    (0, _log.dev)().warn(TAG, 'unobserve non-observed element');\n  }\n  /**\n   * Tick function that update the DOMRect of the root of observed elements.\n   * Caller needs to make sure to pass in the correct container.\n   * Note: the opt_iframe param is the iframe position relative to the host doc,\n   * The iframe must be a non-scrollable iframe.\n   * @param {!./layout-rect.LayoutRectDef} hostViewport\n   * @param {./layout-rect.LayoutRectDef=} opt_iframe\n   */\n  ;\n\n  _proto2.tick = function tick(hostViewport, opt_iframe) {\n    if (opt_iframe) {\n      // If element inside an iframe. Adjust origin to the iframe.left/top.\n      hostViewport = (0, _layoutRect.moveLayoutRect)(hostViewport, -opt_iframe.left, -opt_iframe.top);\n      opt_iframe = (0, _layoutRect.moveLayoutRect)(opt_iframe, -opt_iframe.left, -opt_iframe.top);\n    }\n\n    this.lastViewportRect_ = hostViewport;\n    this.lastIframeRect_ = opt_iframe;\n    var changes = [];\n\n    for (var i = 0; i < this.observeEntries_.length; i++) {\n      var change = this.getValidIntersectionChangeEntry_(this.observeEntries_[i], hostViewport, opt_iframe);\n\n      if (change) {\n        changes.push(change);\n      }\n    }\n\n    if (changes.length) {\n      this.callback_(changes);\n    }\n  }\n  /**\n   * Return a change entry for one element that should be compatible with\n   * IntersectionObserverEntry if it's valid with current config.\n   * When the new intersection ratio doesn't cross one of a threshold value,\n   * the function will return null.\n   *\n   * @param {!ElementIntersectionStateDef} state\n   * @param {!./layout-rect.LayoutRectDef} hostViewport hostViewport's rect\n   * @param {./layout-rect.LayoutRectDef=} opt_iframe iframe container rect\n   *    If opt_iframe is provided, all LayoutRect has position relative to\n   *    the iframe. If opt_iframe is not provided,\n   *    all LayoutRect has position relative to the host document.\n   * @return {?IntersectionObserverEntry} A valid change entry or null if ratio\n   * @private\n   */\n  ;\n\n  _proto2.getValidIntersectionChangeEntry_ = function getValidIntersectionChangeEntry_(state, hostViewport, opt_iframe) {\n    var element = state.element;\n    var elementRect = element.getLayoutBox();\n    var owner = element.getOwner();\n    var ownerRect = owner && owner.getLayoutBox(); // calculate intersectionRect. that the element intersects with hostViewport\n    // and intersects with owner element and container iframe if exists.\n\n    var intersectionRect = (0, _layoutRect.rectIntersection)(elementRect, ownerRect, hostViewport, opt_iframe) || (0, _layoutRect.layoutRectLtwh)(0, 0, 0, 0); // calculate ratio, call callback based on new ratio value.\n\n    var ratio = intersectionRatio(intersectionRect, elementRect);\n    var newThresholdSlot = getThresholdSlot(this.threshold_, ratio);\n\n    if (newThresholdSlot == state.currentThresholdSlot) {\n      return null;\n    }\n\n    state.currentThresholdSlot = newThresholdSlot; // To get same behavior as native IntersectionObserver set hostViewport null\n    // if inside an iframe\n\n    var changeEntry = calculateChangeEntry(elementRect, opt_iframe ? null : hostViewport, intersectionRect, ratio);\n    changeEntry.target = element;\n    return changeEntry;\n  }\n  /**\n   * Handle Mutation Oberserver events\n   * @private\n   */\n  ;\n\n  _proto2.handleMutationObserverNotification_ = function handleMutationObserverNotification_() {\n    if (this.mutationPass_.isPending()) {\n      return;\n    } // Wait one animation frame so that other mutations may arrive.\n\n\n    this.mutationPass_.schedule(16);\n  }\n  /**\n   * Handle Mutation Observer Pass\n   * This performas the tick, and is wrapped in a paas\n   * To handle throttling of the observer\n   * @param {!Element} element\n   * @private\n   */\n  ;\n\n  _proto2.handleMutationObserverPass_ = function handleMutationObserverPass_(element) {\n    var _this3 = this;\n\n    var viewport = _services.Services.viewportForDoc(element);\n\n    var resources = _services.Services.resourcesForDoc(element);\n\n    resources.onNextPass(function () {\n      _this3.tick(viewport.getRect());\n    });\n  }\n  /**\n   * Clean up the mutation observer\n   * @private\n   */\n  ;\n\n  _proto2.disconnectMutationObserver_ = function disconnectMutationObserver_() {\n    if (this.hiddenObserverUnlistener_) {\n      this.hiddenObserverUnlistener_();\n    }\n\n    this.hiddenObserverUnlistener_ = null;\n\n    if (this.mutationPass_) {\n      this.mutationPass_.cancel();\n    }\n\n    this.mutationPass_ = null;\n  };\n\n  return IntersectionObserverPolyfill;\n}();\n/**\n * Returns the ratio of the smaller box's area to the larger box's area.\n * @param {!./layout-rect.LayoutRectDef} smaller\n * @param {!./layout-rect.LayoutRectDef} larger\n * @return {number}\n * @visibleForTesting\n */\n\n\nexports.IntersectionObserverPolyfill = IntersectionObserverPolyfill;\n\nfunction intersectionRatio(smaller, larger) {\n  var smallerBoxArea = smaller.width * smaller.height;\n  var largerBoxArea = larger.width * larger.height; // Check for a divide by zero\n\n  return largerBoxArea === 0 ? 0 : smallerBoxArea / largerBoxArea;\n}\n/**\n * Returns the slot number that the current ratio fills in.\n * @param {!Array} sortedThreshold valid sorted IoB threshold\n * @param {number} ratio Range from [0, 1]\n * @return {number} Range from [0, threshold.length]\n * @visibleForTesting\n */\n\n\nfunction getThresholdSlot(sortedThreshold, ratio) {\n  var startIdx = 0;\n  var endIdx = sortedThreshold.length; // 0 is a special case that does not fit into [small, large) range\n\n  if (ratio == 0) {\n    return 0;\n  }\n\n  var mid = (startIdx + endIdx) / 2 | 0;\n\n  while (startIdx < mid) {\n    var midValue = sortedThreshold[mid]; // In the range of [small, large)\n\n    if (ratio < midValue) {\n      endIdx = mid;\n    } else {\n      startIdx = mid;\n    }\n\n    mid = (startIdx + endIdx) / 2 | 0;\n  }\n\n  return endIdx;\n}\n/**\n * Helper function to calculate the IntersectionObserver change entry.\n * @param {!./layout-rect.LayoutRectDef} element element's rect\n * @param {?./layout-rect.LayoutRectDef} hostViewport hostViewport's rect\n * @param {!./layout-rect.LayoutRectDef} intersection\n * @param {number} ratio\n * @return {!IntersectionObserverEntry}}\n */\n\n\nfunction calculateChangeEntry(element, hostViewport, intersection, ratio) {\n  // If element not in an iframe.\n  // adjust all LayoutRect to hostViewport Origin.\n  var boundingClientRect = element;\n  var rootBounds = hostViewport; // If no hostViewport is provided, element is inside an non-scrollable iframe.\n  // Every Layoutrect has already adjust their origin according to iframe\n  // rect origin. LayoutRect position is relative to iframe origin,\n  // thus relative to iframe's viewport origin because the viewport is at the\n  // iframe origin. No need to adjust position here.\n\n  if (hostViewport) {\n    // If element not in an iframe.\n    // adjust all LayoutRect to hostViewport Origin.\n    rootBounds =\n    /** @type {!./layout-rect.LayoutRectDef} */\n    rootBounds;\n    intersection = (0, _layoutRect.moveLayoutRect)(intersection, -hostViewport.left, -hostViewport.top); // The element is relative to (0, 0), while the viewport moves. So, we must\n    // adjust.\n\n    boundingClientRect = (0, _layoutRect.moveLayoutRect)(boundingClientRect, -hostViewport.left, -hostViewport.top); // Now, move the viewport to (0, 0)\n\n    rootBounds = (0, _layoutRect.moveLayoutRect)(rootBounds, -hostViewport.left, -hostViewport.top);\n  }\n\n  return (\n    /** @type {!IntersectionObserverEntry} */\n    {\n      time: typeof performance !== 'undefined' && performance.now ? performance.now() : Date.now() - INIT_TIME,\n      rootBounds: rootBounds,\n      boundingClientRect: boundingClientRect,\n      intersectionRect: intersection,\n      intersectionRatio: ratio\n    }\n  );\n}\n\n},{\"./iframe-helper\":116,\"./layout-rect\":123,\"./log\":125,\"./pass\":129,\"./services\":141,\"./types\":145,\"./utils/object\":154}],122:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.recreateNonProtoObject = recreateNonProtoObject;\nexports.getValueForExpr = getValueForExpr;\nexports.parseJson = parseJson;\nexports.tryParseJson = tryParseJson;\nexports.getChildJsonConfig = getChildJsonConfig;\nexports.deepEquals = deepEquals;\nexports.jsonConfiguration = jsonConfiguration;\nexports.jsonLiteral = jsonLiteral;\nexports.includeJsonLiteral = includeJsonLiteral;\n\nvar _dom = require(\"./dom\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {*} should be string|number|boolean|null\n */\nvar JSONScalarDef;\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {*} should be !Object<string, ?JSONValueDef>\n */\n\nvar JSONObjectDef;\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {*} should be !Array<?JSONValueDef>\n */\n\nvar JSONArrayDef;\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {*} should be !JSONScalarDef|!JSONObjectDef|!JSONArrayDef\n */\n\nvar JSONValueDef;\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\n\nfunction recreateNonProtoObject(obj) {\n  var copy = Object.create(null);\n\n  for (var k in obj) {\n    if (!hasOwnProperty(obj, k)) {\n      continue;\n    }\n\n    var v = obj[k];\n    copy[k] = (0, _types.isObject)(v) ? recreateNonProtoObject(v) : v;\n  }\n\n  return (\n    /** @type {!JsonObject} */\n    copy\n  );\n}\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\n\n\nfunction getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  } // Otherwise, navigate via properties.\n\n\n  var parts = expr.split('.');\n  var value = obj;\n\n  for (var i = 0; i < parts.length; i++) {\n    var part = parts[i];\n\n    if (part && value && value[part] !== undefined && hasOwnProperty(value, part)) {\n      value = value[part];\n      continue;\n    }\n\n    value = undefined;\n    break;\n  }\n\n  return value;\n}\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {*} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\n\n\nfunction parseJson(json) {\n  return (\n    /** @type {?JsonObject} */\n    JSON.parse(\n    /** @type {string} */\n    json)\n  );\n}\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {*} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\n\n\nfunction tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    if (opt_onFailed) {\n      opt_onFailed(e);\n    }\n\n    return null;\n  }\n}\n/**\n * Helper method to get the json config from an element <script> tag\n * @param {!Element} element\n * @return {?JsonObject}\n * @throws {!Error} If element does not have exactly one <script> child\n * with type=\"application/json\", or if the <script> contents are not valid JSON.\n */\n\n\nfunction getChildJsonConfig(element) {\n  var scripts = (0, _dom.childElementsByTag)(element, 'script');\n  var n = scripts.length;\n\n  if (n !== 1) {\n    throw new Error(\"Found \" + scripts.length + \" <script> children. Expected 1.\");\n  }\n\n  var script = scripts[0];\n\n  if (!(0, _dom.isJsonScriptTag)(script)) {\n    throw new Error('<script> child must have type=\"application/json\"');\n  }\n\n  try {\n    return parseJson(script.textContent);\n  } catch (unusedError) {\n    throw new Error('Failed to parse <script> contents. Is it valid JSON?');\n  }\n}\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\n\n\nfunction deepEquals(a, b, depth) {\n  if (depth === void 0) {\n    depth = 5;\n  }\n\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n\n\n  var queue = [{\n    a: a,\n    b: b,\n    depth: depth\n  }];\n\n  while (queue.length > 0) {\n    var _queue$shift = queue.shift(),\n        _a = _queue$shift.a,\n        _b = _queue$shift.b,\n        _depth = _queue$shift.depth; // Only check deep equality if depth > 0.\n\n\n    if (_depth > 0) {\n      if (typeof _a !== typeof _b) {\n        return false;\n      } else if (Array.isArray(_a) && Array.isArray(_b)) {\n        if (_a.length !== _b.length) {\n          return false;\n        }\n\n        for (var i = 0; i < _a.length; i++) {\n          queue.push({\n            a: _a[i],\n            b: _b[i],\n            depth: _depth - 1\n          });\n        }\n\n        continue;\n      } else if (_a && _b && typeof _a === 'object' && typeof _b === 'object') {\n        var keysA = Object.keys(\n        /** @type {!Object} */\n        _a);\n        var keysB = Object.keys(\n        /** @type {!Object} */\n        _b);\n\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n\n        for (var _i = 0; _i < keysA.length; _i++) {\n          var k = keysA[_i];\n          queue.push({\n            a: _a[k],\n            b: _b[k],\n            depth: _depth - 1\n          });\n        }\n\n        continue;\n      }\n    } // If we get here, then depth == 0 or (a, b) are primitives.\n\n\n    if (_a !== _b) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @param {*} obj\n * @param {string} key\n * @return {boolean}\n */\n\n\nfunction hasOwnProperty(obj, key) {\n  if (obj == null || typeof obj != 'object') {\n    return false;\n  }\n\n  return Object.prototype.hasOwnProperty.call(\n  /** @type {!Object} */\n  obj, key);\n}\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\n\n\nfunction jsonConfiguration(obj) {\n  return (\n    /** @type {!JsonObject} */\n    obj\n  );\n}\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {!Object|!Array|string|number|boolean|null} value\n * @return {!InternalJsonLiteralTypeDef}\n */\n\n\nfunction jsonLiteral(value) {\n  return (\n    /** @type {!InternalJsonLiteralTypeDef} */\n    value\n  );\n}\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\n\n\nfunction includeJsonLiteral(value) {\n  return value;\n}\n\n},{\"./dom\":111,\"./types\":145}],123:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.layoutRectLtwh = layoutRectLtwh;\nexports.layoutRectFromDomRect = layoutRectFromDomRect;\nexports.layoutRectsOverlap = layoutRectsOverlap;\nexports.rectIntersection = rectIntersection;\nexports.layoutRectsRelativePos = layoutRectsRelativePos;\nexports.layoutPositionRelativeToScrolledViewport = layoutPositionRelativeToScrolledViewport;\nexports.expandLayoutRect = expandLayoutRect;\nexports.moveLayoutRect = moveLayoutRect;\nexports.areMarginsChanged = areMarginsChanged;\nexports.layoutRectSizeEquals = layoutRectSizeEquals;\nexports.layoutRectEquals = layoutRectEquals;\nexports.cloneLayoutMarginsChangeDef = cloneLayoutMarginsChangeDef;\nexports.RelativePositions = exports.LayoutMarginsChangeDef = exports.LayoutMarginsDef = exports.LayoutRectDef = void 0;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The structure that combines position and size for an element. The exact\n * interpretation of position and size depends on the use case.\n *\n * @typedef {{\n *   top: number,\n *   bottom: number,\n *   left: number,\n *   right: number,\n *   width: number,\n *   height: number,\n *   x: number,\n *   y: number\n * }}\n */\nvar LayoutRectDef;\n/**\n * The structure that represents the margins of an Element.\n *\n * @typedef {{\n *   top: number,\n *   right: number,\n *   bottom: number,\n *   left: number\n * }}\n */\n\nexports.LayoutRectDef = LayoutRectDef;\nvar LayoutMarginsDef;\n/**\n * The structure that represents a requested change to the margins of an\n * Element. Any new values specified will replace existing ones (rather than\n * being additive).\n *\n * @typedef {{\n *   top: (number|undefined),\n *   right: (number|undefined),\n *   bottom: (number|undefined),\n *   left: (number|undefined)\n * }}\n */\n\nexports.LayoutMarginsDef = LayoutMarginsDef;\nvar LayoutMarginsChangeDef;\n/**\n * RelativePositions\n *\n * Describes the relative position of an element to another (whether the\n * first is inside the second, on top of the second or on the bottom\n * @enum {string}\n */\n\nexports.LayoutMarginsChangeDef = LayoutMarginsChangeDef;\nvar RelativePositions = {\n  INSIDE: 'inside',\n  TOP: 'top',\n  BOTTOM: 'bottom'\n};\n/**\n * Creates a layout rect based on the left, top, width and height parameters\n * in that order.\n * @param {number} left\n * @param {number} top\n * @param {number} width\n * @param {number} height\n * @return {!LayoutRectDef}\n */\n\nexports.RelativePositions = RelativePositions;\n\nfunction layoutRectLtwh(left, top, width, height) {\n  return {\n    left: left,\n    top: top,\n    width: width,\n    height: height,\n    bottom: top + height,\n    right: left + width,\n    x: left,\n    y: top\n  };\n}\n/**\n * Creates a layout rect based on the DOMRect, e.g. obtained from calling\n * getBoundingClientRect.\n * @param {!ClientRect} rect\n * @return {!LayoutRectDef}\n */\n\n\nfunction layoutRectFromDomRect(rect) {\n  return layoutRectLtwh(Number(rect.left), Number(rect.top), Number(rect.width), Number(rect.height));\n}\n/**\n * Returns true if the specified two rects overlap by a single pixel.\n * @param {!LayoutRectDef} r1\n * @param {!LayoutRectDef} r2\n * @return {boolean}\n */\n\n\nfunction layoutRectsOverlap(r1, r2) {\n  return r1.top <= r2.bottom && r2.top <= r1.bottom && r1.left <= r2.right && r2.left <= r1.right;\n}\n/**\n * Returns the intersection between a, b or null if there is none.\n * @param {...?LayoutRectDef|undefined} var_args\n * @return {?LayoutRectDef}\n */\n\n\nfunction rectIntersection(var_args) {\n  var x0 = -Infinity;\n  var x1 = Infinity;\n  var y0 = -Infinity;\n  var y1 = Infinity;\n\n  for (var i = 0; i < arguments.length; i++) {\n    var current = arguments[i];\n\n    if (!current) {\n      continue;\n    }\n\n    x0 = Math.max(x0, current.left);\n    x1 = Math.min(x1, current.left + current.width);\n    y0 = Math.max(y0, current.top);\n    y1 = Math.min(y1, current.top + current.height);\n\n    if (x1 < x0 || y1 < y0) {\n      return null;\n    }\n  }\n\n  if (x1 == Infinity) {\n    return null;\n  }\n\n  return layoutRectLtwh(x0, y0, x1 - x0, y1 - y0);\n}\n/**\n * Returns the position of r2 relative to r1\n * @param {!LayoutRectDef} r1\n * @param {!LayoutRectDef} r2\n * @return {RelativePositions}\n */\n\n\nfunction layoutRectsRelativePos(r1, r2) {\n  if (r1.top < r2.top) {\n    return RelativePositions.TOP;\n  } else if (r1.bottom > r2.bottom) {\n    return RelativePositions.BOTTOM;\n  } else {\n    return RelativePositions.INSIDE;\n  }\n}\n/**\n * Determines if any portion of a layoutBox would be onscreen in the given\n * viewport, when scrolled to the specified position.\n * @param {!LayoutRectDef} layoutBox\n * @param {!./service/viewport/viewport-interface.ViewportInterface} viewport\n * @param {number} scrollPos\n * @return {RelativePositions}\n */\n\n\nfunction layoutPositionRelativeToScrolledViewport(layoutBox, viewport, scrollPos) {\n  var scrollLayoutBox = layoutRectFromDomRect(\n  /** @type {!ClientRect} */\n  {\n    top: scrollPos,\n    bottom: scrollPos + viewport.getHeight(),\n    left: 0,\n    right: viewport.getWidth()\n  });\n\n  if (layoutRectsOverlap(layoutBox, scrollLayoutBox)) {\n    return RelativePositions.INSIDE;\n  } else {\n    return layoutRectsRelativePos(layoutBox, scrollLayoutBox);\n  }\n}\n/**\n * Expand the layout rect using multiples of width and height.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dw Expansion in width, specified as a multiple of width.\n * @param {number} dh Expansion in height, specified as a multiple of height.\n * @return {!LayoutRectDef}\n */\n\n\nfunction expandLayoutRect(rect, dw, dh) {\n  return layoutRectLtwh(rect.left - rect.width * dw, rect.top - rect.height * dh, rect.width * (1 + dw * 2), rect.height * (1 + dh * 2));\n}\n/**\n * Moves the layout rect using dx and dy.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dx Move horizontally with this value.\n * @param {number} dy Move vertically with this value.\n * @return {!LayoutRectDef}\n */\n\n\nfunction moveLayoutRect(rect, dx, dy) {\n  if (dx == 0 && dy == 0 || rect.width == 0 && rect.height == 0) {\n    return rect;\n  }\n\n  return layoutRectLtwh(rect.left + dx, rect.top + dy, rect.width, rect.height);\n}\n/**\n * @param {!LayoutMarginsDef} margins\n * @param {!LayoutMarginsChangeDef} change\n * @return {boolean}\n */\n\n\nfunction areMarginsChanged(margins, change) {\n  return change.top !== undefined && change.top != margins.top || change.right !== undefined && change.right != margins.right || change.bottom !== undefined && change.bottom != margins.bottom || change.left !== undefined && change.left != margins.left;\n}\n/**\n * @param {!LayoutRectDef} from\n * @param {!LayoutRectDef} to\n * @return {boolean}\n */\n\n\nfunction layoutRectSizeEquals(from, to) {\n  return from.width == to.width && from.height === to.height;\n}\n/**\n * @param {?LayoutRectDef} r1\n * @param {?LayoutRectDef} r2\n * @return {boolean}\n */\n\n\nfunction layoutRectEquals(r1, r2) {\n  if (!r1 || !r2) {\n    return false;\n  }\n\n  return r1.left == r2.left && r1.top == r2.top && r1.width == r2.width && r1.height == r2.height;\n}\n/**\n * @param {LayoutMarginsChangeDef|undefined} marginsChange\n * @return {LayoutMarginsChangeDef|undefined}\n */\n\n\nfunction cloneLayoutMarginsChangeDef(marginsChange) {\n  if (!marginsChange) {\n    return marginsChange;\n  }\n\n  return {\n    top: marginsChange.top,\n    bottom: marginsChange.bottom,\n    left: marginsChange.left,\n    right: marginsChange.right\n  };\n}\n\n},{}],124:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.parseLayout = parseLayout;\nexports.getLayoutClass = getLayoutClass;\nexports.isLayoutSizeDefined = isLayoutSizeDefined;\nexports.isLayoutSizeFixed = isLayoutSizeFixed;\nexports.isInternalElement = isInternalElement;\nexports.parseLength = parseLength;\nexports.assertLength = assertLength;\nexports.assertLengthOrPercent = assertLengthOrPercent;\nexports.getLengthUnits = getLengthUnits;\nexports.getLengthNumeral = getLengthNumeral;\nexports.hasNaturalDimensions = hasNaturalDimensions;\nexports.getNaturalDimensions = getNaturalDimensions;\nexports.isLoadingAllowed = isLoadingAllowed;\nexports.isIframeVideoPlayerComponent = isIframeVideoPlayerComponent;\nexports.applyStaticLayout = applyStaticLayout;\nexports.LOADING_ELEMENTS_ = exports.naturalDimensions_ = exports.LengthDef = exports.LayoutPriority = exports.Layout = void 0;\n\nvar _log = require(\"./log\");\n\nvar _staticTemplate = require(\"./static-template\");\n\nvar _types = require(\"./types\");\n\nvar _style = require(\"./style\");\n\nvar _string = require(\"./string\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n      <i-amphtml-sizer class=\\\"i-amphtml-sizer\\\">\\n        <img alt=\\\"\\\" role=\\\"presentation\\\" aria-hidden=\\\"true\\\"\\n             class=\\\"i-amphtml-intrinsic-sizer\\\" />\\n      </i-amphtml-sizer>\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) { if (!raw) { raw = strings.slice(0); } strings.raw = raw; return strings; }\n\n/**\n * @enum {string}\n */\nvar Layout = {\n  NODISPLAY: 'nodisplay',\n  FIXED: 'fixed',\n  FIXED_HEIGHT: 'fixed-height',\n  RESPONSIVE: 'responsive',\n  CONTAINER: 'container',\n  FILL: 'fill',\n  FLEX_ITEM: 'flex-item',\n  FLUID: 'fluid',\n  INTRINSIC: 'intrinsic'\n};\n/**\n * Layout priorities to use with BaseElement#getLayoutPriority() and\n * BaseElement#updateLayoutPriority().\n * @enum {number}\n */\n\nexports.Layout = Layout;\nvar LayoutPriority = {\n  CONTENT: 0,\n  METADATA: 1,\n  ADS: 2,\n  BACKGROUND: 3\n};\n/**\n * CSS Length type. E.g. \"1px\" or \"20vh\".\n * @typedef {string}\n */\n\nexports.LayoutPriority = LayoutPriority;\nvar LengthDef;\n/**\n * @typedef {{\n *   width: string,\n *   height: string\n * }}\n */\n\nexports.LengthDef = LengthDef;\nvar DimensionsDef;\n/**\n * The set of elements with natural dimensions, that is, elements\n * which have a known dimension either based on their value specified here,\n * or, if the value is null, a dimension specific to the browser.\n * `hasNaturalDimensions` checks for membership in this set.\n * `getNaturalDimensions` determines the dimensions for an element in the\n *    set and caches it.\n * @type {!Object<string, ?DimensionsDef>}\n * @private  Visible for testing only!\n */\n\nvar naturalDimensions_ = {\n  'AMP-PIXEL': {\n    width: '0px',\n    height: '0px'\n  },\n  'AMP-ANALYTICS': {\n    width: '1px',\n    height: '1px'\n  },\n  // TODO(dvoytenko): audio should have width:auto.\n  'AMP-AUDIO': null,\n  'AMP-SOCIAL-SHARE': {\n    width: '60px',\n    height: '44px'\n  }\n};\n/**\n * Elements that the progress can be shown for. This set has to be externalized\n * since the element's implementation may not be downloaded yet.\n * This list does not include video players which are found via regex later.\n * @enum {boolean}\n * @private  Visible for testing only!\n */\n\nexports.naturalDimensions_ = naturalDimensions_;\nvar LOADING_ELEMENTS_ = {\n  'AMP-AD': true,\n  'AMP-ANIM': true,\n  'AMP-EMBED': true,\n  'AMP-FACEBOOK': true,\n  'AMP-FACEBOOK-COMMENTS': true,\n  'AMP-FACEBOOK-PAGE': true,\n  'AMP-GOOGLE-DOCUMENT-EMBED': true,\n  'AMP-IFRAME': true,\n  'AMP-IMG': true,\n  'AMP-INSTAGRAM': true,\n  'AMP-LIST': true,\n  'AMP-PINTEREST': true,\n  'AMP-PLAYBUZZ': true,\n  'AMP-TWITTER': true\n};\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they are listed individually.\n * @private @const {!RegExp}\n */\n\nexports.LOADING_ELEMENTS_ = LOADING_ELEMENTS_;\nvar videoPlayerTagNameRe = /^amp\\-(video|.+player)|AMP-BRIGHTCOVE|AMP-DAILYMOTION|AMP-YOUTUBE|AMP-VIMEO|AMP-IMA-VIDEO/i;\n/**\n * @param {string} s\n * @return {Layout|undefined} Returns undefined in case of failure to parse\n *   the layout string.\n */\n\nfunction parseLayout(s) {\n  for (var k in Layout) {\n    if (Layout[k] == s) {\n      return Layout[k];\n    }\n  }\n\n  return undefined;\n}\n/**\n * @param {!Layout} layout\n * @return {string}\n */\n\n\nfunction getLayoutClass(layout) {\n  return 'i-amphtml-layout-' + layout;\n}\n/**\n * Whether an element with this layout inherently defines the size.\n * @param {!Layout} layout\n * @return {boolean}\n */\n\n\nfunction isLayoutSizeDefined(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT || layout == Layout.RESPONSIVE || layout == Layout.FILL || layout == Layout.FLEX_ITEM || layout == Layout.FLUID || layout == Layout.INTRINSIC;\n}\n/**\n * Whether an element with this layout has a fixed dimension.\n * @param {!Layout} layout\n * @return {boolean}\n */\n\n\nfunction isLayoutSizeFixed(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT;\n}\n/**\n * Whether the tag is an internal (service) AMP tag.\n * @param {!Node|string} tag\n * @return {boolean}\n */\n\n\nfunction isInternalElement(tag) {\n  var tagName = typeof tag == 'string' ? tag : tag.tagName;\n  return tagName && (0, _string.startsWith)(tagName.toLowerCase(), 'i-');\n}\n/**\n * Parses the CSS length value. If no units specified, the assumed value is\n * \"px\". Returns undefined in case of parsing error.\n * @param {string|undefined|null} s\n * @return {!LengthDef|undefined}\n */\n\n\nfunction parseLength(s) {\n  if (typeof s == 'number') {\n    return s + 'px';\n  }\n\n  if (!s) {\n    return undefined;\n  }\n\n  if (!/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)?$/.test(s)) {\n    return undefined;\n  }\n\n  if (/^\\d+(\\.\\d+)?$/.test(s)) {\n    return s + 'px';\n  }\n\n  return s;\n}\n/**\n * Asserts that the supplied value is a non-percent CSS Length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction assertLength(length) {\n  (0, _log.userAssert)(/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)$/.test(length), 'Invalid length value: %s', length);\n  return (\n    /** @type {!LengthDef} */\n    length\n  );\n}\n/**\n * Asserts that the supplied value is a CSS Length value\n * (including percent unit).\n * @param {!LengthDef|string} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction assertLengthOrPercent(length) {\n  (0, _log.userAssert)(/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|%)$/.test(length), 'Invalid length or percent value: %s', length);\n  return length;\n}\n/**\n * Returns units from the CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {string}\n */\n\n\nfunction getLengthUnits(length) {\n  assertLength(length);\n  (0, _log.dev)().assertString(length);\n  var m = (0, _log.userAssert)(length.match(/[a-z]+/i), 'Failed to read units from %s', length);\n  return m[0];\n}\n/**\n * Returns the numeric value of a CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {number|undefined}\n */\n\n\nfunction getLengthNumeral(length) {\n  var res = parseFloat(length);\n  return (0, _types.isFiniteNumber)(res) ? res : undefined;\n}\n/**\n * Determines whether the tagName is a known element that has natural dimensions\n * in our runtime or the browser.\n * @param {string} tagName The element tag name.\n * @return {boolean}\n */\n\n\nfunction hasNaturalDimensions(tagName) {\n  tagName = tagName.toUpperCase();\n  return naturalDimensions_[tagName] !== undefined;\n}\n/**\n * Determines the default dimensions for an element which could vary across\n * different browser implementations, like <audio> for instance.\n * This operation can only be completed for an element whitelisted by\n * `hasNaturalDimensions`.\n * @param {!Element} element\n * @return {DimensionsDef}\n */\n\n\nfunction getNaturalDimensions(element) {\n  var tagName = element.tagName.toUpperCase();\n  (0, _log.devAssert)(naturalDimensions_[tagName] !== undefined);\n\n  if (!naturalDimensions_[tagName]) {\n    var doc = element.ownerDocument;\n    var naturalTagName = tagName.replace(/^AMP\\-/, '');\n    var temp = doc.createElement(naturalTagName); // For audio, should no-op elsewhere.\n\n    temp.controls = true;\n    (0, _style.setStyles)(temp, {\n      position: 'absolute',\n      visibility: 'hidden'\n    });\n    doc.body.appendChild(temp);\n    naturalDimensions_[tagName] = {\n      width: (temp.\n      /*OK*/\n      offsetWidth || 1) + 'px',\n      height: (temp.\n      /*OK*/\n      offsetHeight || 1) + 'px'\n    };\n    doc.body.removeChild(temp);\n  }\n\n  return (\n    /** @type {DimensionsDef} */\n    naturalDimensions_[tagName]\n  );\n}\n/**\n * Whether the loading can be shown for the specified elemeent. This set has\n * to be externalized since the element's implementation may not be\n * downloaded yet.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isLoadingAllowed(element) {\n  var tagName = element.tagName.toUpperCase();\n  return LOADING_ELEMENTS_[tagName] || isIframeVideoPlayerComponent(tagName);\n}\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they're present in the LOADING_ELEMENTS_ whitelist.\n * @param {string} tagName\n * @return {boolean}\n */\n\n\nfunction isIframeVideoPlayerComponent(tagName) {\n  if (tagName == 'AMP-VIDEO') {\n    return false;\n  }\n\n  return videoPlayerTagNameRe.test(tagName);\n}\n/**\n * Applies layout to the element. Visible for testing only.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this method is used for server-side rendering (SSR) and\n * any changes made to it must be made in coordination with caches that\n * implement SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @param {!Element} element\n * @return {!Layout}\n */\n\n\nfunction applyStaticLayout(element) {\n  // Check if the layout has already been done by server-side rendering or\n  // client-side rendering and the element was cloned. The document may be\n  // visible to the user if the boilerplate was removed so please take care in\n  // making changes here.\n  var completedLayoutAttr = element.getAttribute('i-amphtml-layout');\n\n  if (completedLayoutAttr) {\n    var _layout =\n    /** @type {!Layout} */\n    (0, _log.devAssert)(parseLayout(completedLayoutAttr));\n\n    if ((_layout == Layout.RESPONSIVE || _layout == Layout.INTRINSIC) && element.firstElementChild) {\n      // Find sizer, but assume that it might not have been parsed yet.\n      element.sizerElement = element.querySelector('i-amphtml-sizer') || undefined;\n    } else if (_layout == Layout.NODISPLAY) {\n      (0, _style.toggle)(element, false); // TODO(jridgewell): Temporary hack while SSR still adds an inline\n      // `display: none`\n\n      element['style']['display'] = '';\n    }\n\n    return _layout;\n  } // If the layout was already done by server-side rendering (SSR), then the\n  // code below will not run. Any changes below will necessitate a change to SSR\n  // and must be coordinated with caches that implement SSR. See bit.ly/amp-ssr.\n  // Parse layout from the element.\n\n\n  var layoutAttr = element.getAttribute('layout');\n  var widthAttr = element.getAttribute('width');\n  var heightAttr = element.getAttribute('height');\n  var sizesAttr = element.getAttribute('sizes');\n  var heightsAttr = element.getAttribute('heights'); // Input layout attributes.\n\n  var inputLayout = layoutAttr ? parseLayout(layoutAttr) : null;\n  (0, _log.userAssert)(inputLayout !== undefined, 'Unknown layout: %s', layoutAttr);\n  /** @const {string|null|undefined} */\n\n  var inputWidth = widthAttr && widthAttr != 'auto' ? parseLength(widthAttr) : widthAttr;\n  (0, _log.userAssert)(inputWidth !== undefined, 'Invalid width value: %s', widthAttr);\n  /** @const {string|null|undefined} */\n\n  var inputHeight = heightAttr && heightAttr != 'fluid' ? parseLength(heightAttr) : heightAttr;\n  (0, _log.userAssert)(inputHeight !== undefined, 'Invalid height value: %s', heightAttr); // Effective layout attributes. These are effectively constants.\n\n  var width;\n  var height;\n  var layout; // Calculate effective width and height.\n\n  if ((!inputLayout || inputLayout == Layout.FIXED || inputLayout == Layout.FIXED_HEIGHT) && (!inputWidth || !inputHeight) && hasNaturalDimensions(element.tagName)) {\n    // Default width and height: handle elements that do not specify a\n    // width/height and are defined to have natural browser dimensions.\n    var dimensions = getNaturalDimensions(element);\n    width = inputWidth || inputLayout == Layout.FIXED_HEIGHT ? inputWidth : dimensions.width;\n    height = inputHeight || dimensions.height;\n  } else {\n    width = inputWidth;\n    height = inputHeight;\n  } // Calculate effective layout.\n\n\n  if (inputLayout) {\n    layout = inputLayout;\n  } else if (!width && !height) {\n    layout = Layout.CONTAINER;\n  } else if (height == 'fluid') {\n    layout = Layout.FLUID;\n  } else if (height && (!width || width == 'auto')) {\n    layout = Layout.FIXED_HEIGHT;\n  } else if (height && width && (sizesAttr || heightsAttr)) {\n    layout = Layout.RESPONSIVE;\n  } else {\n    layout = Layout.FIXED;\n  } // Verify layout attributes.\n\n\n  if (layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT || layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    (0, _log.userAssert)(height, 'Expected height to be available: %s', heightAttr);\n  }\n\n  if (layout == Layout.FIXED_HEIGHT) {\n    (0, _log.userAssert)(!width || width == 'auto', 'Expected width to be either absent or equal \"auto\" ' + 'for fixed-height layout: %s', widthAttr);\n  }\n\n  if (layout == Layout.FIXED || layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    (0, _log.userAssert)(width && width != 'auto', 'Expected width to be available and not equal to \"auto\": %s', widthAttr);\n  }\n\n  if (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    (0, _log.userAssert)(getLengthUnits(width) == getLengthUnits(height), 'Length units should be the same for width and height: %s, %s', widthAttr, heightAttr);\n  } else {\n    (0, _log.userAssert)(heightsAttr === null, 'Unexpected \"heights\" attribute for none-responsive layout');\n  } // Apply UI.\n\n\n  element.classList.add(getLayoutClass(layout));\n\n  if (isLayoutSizeDefined(layout)) {\n    element.classList.add('i-amphtml-layout-size-defined');\n  }\n\n  if (layout == Layout.NODISPLAY) {\n    // CSS defines layout=nodisplay automatically with `display:none`. Thus\n    // no additional styling is needed.\n    (0, _style.toggle)(element, false); // TODO(jridgewell): Temporary hack while SSR still adds an inline\n    // `display: none`\n\n    element['style']['display'] = '';\n  } else if (layout == Layout.FIXED) {\n    (0, _style.setStyles)(element, {\n      width: (0, _log.dev)().assertString(width),\n      height: (0, _log.dev)().assertString(height)\n    });\n  } else if (layout == Layout.FIXED_HEIGHT) {\n    (0, _style.setStyle)(element, 'height', (0, _log.dev)().assertString(height));\n  } else if (layout == Layout.RESPONSIVE) {\n    var sizer = element.ownerDocument.createElement('i-amphtml-sizer');\n    (0, _style.setStyles)(sizer, {\n      paddingTop: getLengthNumeral(height) / getLengthNumeral(width) * 100 + '%'\n    });\n    element.insertBefore(sizer, element.firstChild);\n    element.sizerElement = sizer;\n  } else if (layout == Layout.INTRINSIC) {\n    // Intrinsic uses an svg inside the sizer element rather than the padding\n    // trick Note a naked svg won't work becasue other thing expect the\n    // i-amphtml-sizer element\n    var _sizer = (0, _staticTemplate.htmlFor)(element)(_templateObject());\n\n    var intrinsicSizer = _sizer.firstElementChild;\n    intrinsicSizer.setAttribute('src', \"data:image/svg+xml;charset=utf-8,<svg height=\\\"\" + height + \"\\\" width=\\\"\" + width + \"\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\"/>\");\n    element.insertBefore(_sizer, element.firstChild);\n    element.sizerElement = _sizer;\n  } else if (layout == Layout.FILL) {// Do nothing.\n  } else if (layout == Layout.CONTAINER) {// Do nothing. Elements themselves will check whether the supplied\n    // layout value is acceptable. In particular container is only OK\n    // sometimes.\n  } else if (layout == Layout.FLEX_ITEM) {\n    // Set height and width to a flex item if they exist.\n    // The size set to a flex item could be overridden by `display: flex` later.\n    if (width) {\n      (0, _style.setStyle)(element, 'width', width);\n    }\n\n    if (height) {\n      (0, _style.setStyle)(element, 'height', height);\n    }\n  } else if (layout == Layout.FLUID) {\n    element.classList.add('i-amphtml-layout-awaiting-size');\n\n    if (width) {\n      (0, _style.setStyle)(element, 'width', width);\n    }\n\n    (0, _style.setStyle)(element, 'height', 0);\n  } // Mark the element as having completed static layout, in case it is cloned\n  // in the future.\n\n\n  element.setAttribute('i-amphtml-layout', layout);\n  return layout;\n}\n\n},{\"./log\":125,\"./static-template\":142,\"./string\":143,\"./style\":144,\"./types\":145}],125:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isUserErrorMessage = isUserErrorMessage;\nexports.isUserErrorEmbed = isUserErrorEmbed;\nexports.setReportError = setReportError;\nexports.overrideLogLevel = overrideLogLevel;\nexports.duplicateErrorIfNecessary = duplicateErrorIfNecessary;\nexports.createErrorVargs = createErrorVargs;\nexports.rethrowAsync = rethrowAsync;\nexports.initLogConstructor = initLogConstructor;\nexports.resetLogConstructorForTesting = resetLogConstructorForTesting;\nexports.user = user;\nexports.dev = dev;\nexports.isFromEmbed = isFromEmbed;\nexports.devAssert = devAssert;\nexports.userAssert = userAssert;\nexports.Log = exports.LogLevel = exports.USER_ERROR_EMBED_SENTINEL = exports.USER_ERROR_SENTINEL = void 0;\n\nvar _mode = require(\"./mode\");\n\nvar _modeObject = require(\"./mode-object\");\n\nvar _internalVersion = require(\"./internal-version\");\n\nvar _types = require(\"./types\");\n\nvar _function = require(\"./utils/function\");\n\nvar _config = require(\"./config\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar noop = function noop() {};\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\n\n\nvar USER_ERROR_SENTINEL = \"\\u200B\\u200B\\u200B\";\n/**\n * Four zero width space.\n *\n * @const {string}\n */\n\nexports.USER_ERROR_SENTINEL = USER_ERROR_SENTINEL;\nvar USER_ERROR_EMBED_SENTINEL = \"\\u200B\\u200B\\u200B\\u200B\";\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\n\nexports.USER_ERROR_EMBED_SENTINEL = USER_ERROR_EMBED_SENTINEL;\n\nfunction isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\n\n\nfunction isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n/**\n * @enum {number}\n * @private Visible for testing only.\n */\n\n\nvar LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4\n};\n/**\n * Sets reportError function. Called from error.js to break cyclic\n * dependency.\n * @param {function(*, !Element=)|undefined} fn\n */\n\nexports.LogLevel = LogLevel;\n\nfunction setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\n\n\nvar levelOverride_ = undefined;\n/**\n * @param {!LogLevel} level\n */\n\nfunction overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\n\n\nvar messageUrlRtv = function messageUrlRtv() {\n  return \"01\" + (0, _internalVersion.internalRuntimeVersion)();\n};\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\n\n\nvar externalMessageUrl = function externalMessageUrl(id, interpolatedParts) {\n  return interpolatedParts.reduce(function (prefix, arg) {\n    return prefix + \"&s[]=\" + messageArgToEncodedComponent(arg);\n  }, \"https://log.amp.dev/?v=\" + messageUrlRtv() + \"&id=\" + encodeURIComponent(id));\n};\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\n\n\nvar externalMessagesSimpleTableUrl = function externalMessagesSimpleTableUrl() {\n  return _config.urls.cdn + \"/rtv/\" + messageUrlRtv() + \"/log-messages.simple.json\";\n};\n/**\n * @param {*} arg\n * @return {string}\n */\n\n\nvar messageArgToEncodedComponent = function messageArgToEncodedComponent(arg) {\n  return encodeURIComponent(String(elementStringOrPassthru(arg)));\n};\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don’t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\n\n\nvar Log =\n/*#__PURE__*/\nfunction () {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(!./mode.ModeDef):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  function Log(win, levelFunc, opt_suffix) {\n    var _this = this;\n\n    if (opt_suffix === void 0) {\n      opt_suffix = '';\n    }\n\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = (0, _mode.getMode)().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n    /** @private @const {function(!./mode.ModeDef):!LogLevel} */\n\n    this.levelFunc_ = levelFunc;\n    /** @private @const {!LogLevel} */\n\n    this.level_ = this.defaultLevel_();\n    /** @private @const {string} */\n\n    this.suffix_ = opt_suffix;\n    /** @private {?JsonObject} */\n\n    this.messages_ = null;\n    this.fetchExternalMessagesOnce_ = (0, _function.once)(function () {\n      win.fetch(externalMessagesSimpleTableUrl()).then(function (response) {\n        return response.json();\n      }, noop).then(function (opt_messages) {\n        if (opt_messages) {\n          _this.messages_ =\n          /** @type {!JsonObject} */\n          opt_messages;\n        }\n      });\n    });\n  }\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n\n\n  var _proto = Log.prototype;\n\n  _proto.getLevel_ = function getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  ;\n\n  _proto.defaultLevel_ = function defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    } // Logging has been explicitly disabled.\n\n\n    if ((0, _mode.getMode)().log == '0') {\n      return LogLevel.OFF;\n    } // Logging is enabled for tests directly.\n\n\n    if ((0, _mode.getMode)().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    } // LocalDev by default allows INFO level, unless overriden by `#log`.\n\n\n    if ((0, _mode.getMode)().localDev && !(0, _mode.getMode)().log) {\n      return LogLevel.INFO;\n    } // Delegate to the specific resolver.\n\n\n    return this.levelFunc_((0, _modeObject.getModeObject)());\n  }\n  /**\n   * @param {string} tag\n   * @param {string} level\n   * @param {!Array} messages\n   */\n  ;\n\n  _proto.msg_ = function msg_(tag, level, messages) {\n    if (this.getLevel_() != LogLevel.OFF) {\n      var fn = this.win.console.log;\n\n      if (level == 'ERROR') {\n        fn = this.win.console.error || fn;\n      } else if (level == 'INFO') {\n        fn = this.win.console.info || fn;\n      } else if (level == 'WARN') {\n        fn = this.win.console.warn || fn;\n      }\n\n      var args = this.maybeExpandMessageArgs_(messages); // Prefix console message with \"[tag]\".\n\n      var prefix = \"[\" + tag + \"]\";\n\n      if (typeof args[0] === 'string') {\n        // Prepend string to avoid breaking string substitutions e.g. %s.\n        args[0] = prefix + ' ' + args[0];\n      } else {\n        args.unshift(prefix);\n      }\n\n      fn.apply(this.win.console, args);\n    }\n  }\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isEnabled = function isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.fine = function fine(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.FINE) {\n      this.msg_(tag, 'FINE', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.info = function info(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.INFO) {\n      this.msg_(tag, 'INFO', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.warn = function warn(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.WARN) {\n      this.msg_(tag, 'WARN', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} var_args\n   * @return {!Error|undefined}\n   * @private\n   */\n  ;\n\n  _proto.error_ = function error_(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.ERROR) {\n      this.msg_(tag, 'ERROR', Array.prototype.slice.call(arguments, 1));\n    } else {\n      var error = createErrorVargs.apply(null, Array.prototype.slice.call(arguments, 1));\n      this.prepareError_(error);\n      return error;\n    }\n  }\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.error = function error(tag, var_args) {\n    var error = this.error_.apply(this, arguments);\n\n    if (error) {\n      error.name = tag || error.name; // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.expectedError = function expectedError(unusedTag, var_args) {\n    var error = this.error_.apply(this, arguments);\n\n    if (error) {\n      error.expected = true; // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  ;\n\n  _proto.createError = function createError(var_args) {\n    var error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  ;\n\n  _proto.createExpectedError = function createExpectedError(var_args) {\n    var error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * NOTE: for an explanation of the tempate R implementation see\n   * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {R} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is `null` or `undefined`.\n   * @template T\n   * @template R :=\n   *     mapunion(T, (V) =>\n   *         cond(eq(V, 'null'),\n   *             none(),\n   *             cond(eq(V, 'undefined'),\n   *                 none(),\n   *                 V)))\n   *  =:\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assert = function assert(shouldBeTrueish, opt_message, var_args) {\n    var firstElement;\n\n    if ((0, _types.isArray)(opt_message)) {\n      return this.assert.apply(this, [shouldBeTrueish].concat(this.expandMessageArgs_(\n      /** @type {!Array} */\n      opt_message)));\n    }\n\n    if (!shouldBeTrueish) {\n      var message = opt_message || 'Assertion failed';\n      var splitMessage = message.split('%s');\n      var first = splitMessage.shift();\n      var formatted = first;\n      var messageArray = [];\n      var i = 2;\n      pushIfNonEmpty(messageArray, first);\n\n      while (splitMessage.length > 0) {\n        var nextConstant = splitMessage.shift();\n        var val = arguments[i++];\n\n        if (val && val.tagName) {\n          firstElement = val;\n        }\n\n        messageArray.push(val);\n        pushIfNonEmpty(messageArray, nextConstant.trim());\n        formatted += stringOrElementString(val) + nextConstant;\n      }\n\n      var e = new Error(formatted);\n      e.fromAssert = true;\n      e.associatedElement = firstElement;\n      e.messageArray = messageArray;\n      this.prepareError_(e); // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(e);\n\n      throw e;\n    }\n\n    return shouldBeTrueish;\n  }\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertElement = function assertElement(shouldBeElement, opt_message) {\n    var shouldBeTrueish = shouldBeElement && shouldBeElement.nodeType == 1;\n    this.assertType_(shouldBeElement, shouldBeTrueish, 'Element expected', opt_message);\n    return (\n      /** @type {!Element} */\n      shouldBeElement\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertString = function assertString(shouldBeString, opt_message) {\n    this.assertType_(shouldBeString, typeof shouldBeString == 'string', 'String expected', opt_message);\n    return (\n      /** @type {string} */\n      shouldBeString\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertNumber = function assertNumber(shouldBeNumber, opt_message) {\n    this.assertType_(shouldBeNumber, typeof shouldBeNumber == 'number', 'Number expected', opt_message);\n    return (\n      /** @type {number} */\n      shouldBeNumber\n    );\n  }\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertArray = function assertArray(shouldBeArray, opt_message) {\n    this.assertType_(shouldBeArray, (0, _types.isArray)(shouldBeArray), 'Array expected', opt_message);\n    return (\n      /** @type {!Array} */\n      shouldBeArray\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertBoolean = function assertBoolean(shouldBeBoolean, opt_message) {\n    this.assertType_(shouldBeBoolean, !!shouldBeBoolean === shouldBeBoolean, 'Boolean expected', opt_message);\n    return (\n      /** @type {boolean} */\n      shouldBeBoolean\n    );\n  }\n  /**\n   * Asserts and returns the enum value. If the enum doesn't contain such a\n   * value, the error is thrown.\n   *\n   * @param {!Object<T>} enumObj\n   * @param {string} s\n   * @param {string=} opt_enumName\n   * @return {T}\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertEnumValue = function assertEnumValue(enumObj, s, opt_enumName) {\n    if ((0, _types.isEnumValue)(enumObj, s)) {\n      return s;\n    }\n\n    this.assert(false, 'Unknown %s value: \"%s\"', opt_enumName || 'enum', s);\n  }\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  ;\n\n  _proto.prepareError_ = function prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  ;\n\n  _proto.maybeExpandMessageArgs_ = function maybeExpandMessageArgs_(args) {\n    if ((0, _types.isArray)(args[0])) {\n      return this.expandMessageArgs_(\n      /** @type {!Array} */\n      args[0]);\n    }\n\n    return args;\n  }\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  ;\n\n  _proto.expandMessageArgs_ = function expandMessageArgs_(parts) {\n    // First value should exist.\n    var id = parts.shift(); // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n\n    if ((0, _mode.getMode)(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n\n    return [\"More info at \" + externalMessageUrl(id, parts)];\n  }\n  /**\n   * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n   *\n   * It understands array-based \"id\"-contracted messages.\n   *\n   * Otherwise creates a sprintf syntax string containing the optional message or the\n   * default. An interpolation token is added at the end to include the `subject`.\n   * @param {*} subject\n   * @param {*} assertion\n   * @param {string} defaultMessage\n   * @param {!Array|string=} opt_message\n   * @private\n   */\n  ;\n\n  _proto.assertType_ = function assertType_(subject, assertion, defaultMessage, opt_message) {\n    if ((0, _types.isArray)(opt_message)) {\n      this.assert(assertion, opt_message.concat(subject));\n    } else {\n      this.assert(assertion, (opt_message || defaultMessage) + \": %s\", subject);\n    }\n  };\n\n  return Log;\n}();\n/**\n * @param {string|!Element} val\n * @return {string}\n */\n\n\nexports.Log = Log;\n\nvar stringOrElementString = function stringOrElementString(val) {\n  return (\n    /** @type {string} */\n    elementStringOrPassthru(val)\n  );\n};\n/**\n * @param {*} val\n * @return {*}\n */\n\n\nfunction elementStringOrPassthru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (val && val.nodeType == 1) {\n    return val.tagName.toLowerCase() + (val.id ? '#' + val.id : '');\n  }\n\n  return val;\n}\n/**\n * @param {!Array} array\n * @param {*} val\n */\n\n\nfunction pushIfNonEmpty(array, val) {\n  if (val != '') {\n    array.push(val);\n  }\n}\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\n\n\nfunction duplicateErrorIfNecessary(error) {\n  var messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n\n  if (messageProperty && messageProperty.writable) {\n    return error;\n  }\n\n  var message = error.message,\n      stack = error.stack;\n  var e = new Error(message); // Copy all the extraneous things we attach.\n\n  for (var prop in error) {\n    e[prop] = error[prop];\n  } // Ensure these are copied.\n\n\n  e.stack = stack;\n  return e;\n}\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\n\n\nfunction createErrorVargs(var_args) {\n  var error = null;\n  var message = '';\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n\n  return error;\n}\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\n\n\nfunction rethrowAsync(var_args) {\n  var error = createErrorVargs.apply(null, arguments);\n  setTimeout(function () {\n    // reportError is installed globally per window in the entry point.\n    self.__AMP_REPORT_ERROR(error);\n\n    throw error;\n  });\n}\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\n\n\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null\n};\nvar logs = self.__AMP_LOG;\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?Function}\n */\n\nvar logConstructor = null;\n/**\n * Initializes log contructor.\n */\n\nfunction initLogConstructor() {\n  logConstructor = Log; // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n\n  dev();\n  user();\n}\n/**\n * Resets log contructor for testing.\n */\n\n\nfunction resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\n\n\nfunction user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n\n    return logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL);\n  }\n}\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\n\n\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n\n  return new logConstructor(self, function (mode) {\n    var logNum = parseInt(mode.log, 10);\n\n    if (mode.development || logNum >= 1) {\n      return LogLevel.FINE;\n    }\n\n    return LogLevel.WARN;\n  }, suffix);\n}\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\n\n\nfunction dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n\n  return logs.dev = new logConstructor(self, function (mode) {\n    var logNum = parseInt(mode.log, 10);\n\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n\n    return LogLevel.OFF;\n  });\n}\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\n\n\nfunction isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n\n  return opt_element.ownerDocument.defaultView != win;\n}\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction devAssert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9) {\n  if ((0, _mode.getMode)().minified) {\n    return shouldBeTrueish;\n  }\n\n  return dev().\n  /*Orig call*/\n  assert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9);\n}\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction userAssert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9) {\n  return user().\n  /*Orig call*/\n  assert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9);\n}\n\n},{\"./config\":106,\"./internal-version\":120,\"./mode\":127,\"./mode-object\":126,\"./types\":145,\"./utils/function\":152}],126:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getModeObject = getModeObject;\n\nvar _mode = require(\"./mode\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides info about the current app. This return value may be cached and\n * passed around as it will always be DCE'd.\n * @param {?Window=} opt_win\n * @return {!./mode.ModeDef}\n */\nfunction getModeObject(opt_win) {\n  return {\n    localDev: (0, _mode.getMode)(opt_win).localDev,\n    development: (0, _mode.getMode)(opt_win).development,\n    filter: (0, _mode.getMode)(opt_win).filter,\n    minified: (0, _mode.getMode)(opt_win).minified,\n    lite: (0, _mode.getMode)(opt_win).lite,\n    test: (0, _mode.getMode)(opt_win).test,\n    log: (0, _mode.getMode)(opt_win).log,\n    version: (0, _mode.getMode)(opt_win).version,\n    rtvVersion: (0, _mode.getMode)(opt_win).rtvVersion,\n    singlePassType: (0, _mode.getMode)(opt_win).singlePassType\n  };\n}\n\n},{\"./mode\":127}],127:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getMode = getMode;\nexports.getRtvVersionForTesting = getRtvVersionForTesting;\nexports.resetRtvVersionForTesting = resetRtvVersionForTesting;\nexports.ModeDef = void 0;\n\nvar _internalVersion = require(\"./internal-version\");\n\nvar _urlParseQueryString = require(\"./url-parse-query-string\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   filter: (string|undefined),\n *   minified: boolean,\n *   lite: boolean,\n *   test: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   singlePassType: (string|undefined)\n * }}\n */\nvar ModeDef;\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\n\nexports.ModeDef = ModeDef;\nvar rtvVersion = '';\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\n\nfunction getMode(opt_win) {\n  var win = opt_win || self;\n\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n\n  return win.__AMP_MODE = getMode_(win);\n}\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\n\n\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  var AMP_CONFIG = self.AMP_CONFIG || {}; // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_DEV is only replaced when `gulp dist` is called without the\n  // --fortesting flag.\n\n  var IS_DEV = true;\n  var IS_MINIFIED = false;\n  var localDevEnabled = !!AMP_CONFIG.localDev;\n  var runningTests = !!AMP_CONFIG.test || IS_DEV && !!(win.__AMP_TEST || win.__karma__);\n  var runningTestsOnIe = win.__karma__ && win.__karma__.config.amp.testOnIe;\n  var isLocalDev = IS_DEV && (localDevEnabled || runningTests);\n  var hashQuery = (0, _urlParseQueryString.parseQueryString_)( // location.originalHash is set by the viewer when it removes the fragment\n  // from the URL.\n  win.location.originalHash || win.location.hash);\n  var singlePassType = AMP_CONFIG.spt;\n  var searchQuery = (0, _urlParseQueryString.parseQueryString_)(win.location.search);\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win, isLocalDev);\n  } // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `gulp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n\n\n  return {\n    localDev: isLocalDev,\n    // Triggers validation or enable pub level logging. Validation can be\n    // bypassed via #validate=0.\n    // Note that AMP_DEV_MODE flag is used for testing purposes.\n    // Use Array.indexOf instead of Array.includes because of #24219\n    development: !!(['1', 'actions', 'amp', 'amp4ads', 'amp4email'].indexOf(hashQuery['development']) >= 0 || win.AMP_DEV_MODE),\n    examiner: hashQuery['development'] == '2',\n    // Allows filtering validation errors by error category. For the\n    // available categories, see ErrorCategory in validator/validator.proto.\n    filter: hashQuery['filter'],\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    // amp-user-location override\n    userLocationOverride: hashQuery['amp-user-location'],\n    minified: IS_MINIFIED,\n    // Whether document is in an amp-lite viewer. It signal that the user\n    // would prefer to use less bandwidth.\n    lite: searchQuery['amp_lite'] != undefined,\n    test: runningTests,\n    testIe: runningTestsOnIe,\n    log: hashQuery['log'],\n    version: (0, _internalVersion.internalRuntimeVersion)(),\n    rtvVersion: rtvVersion,\n    singlePassType: singlePassType\n  };\n}\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n */\n\n\nfunction getRtvVersion(win, isLocalDev) {\n  // If it's local dev then we won't actually have a full version so\n  // just use the version.\n  if (isLocalDev) {\n    return (0, _internalVersion.internalRuntimeVersion)();\n  }\n\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  } // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n\n\n  return \"01\" + (0, _internalVersion.internalRuntimeVersion)();\n}\n/**\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n * @visibleForTesting\n */\n\n\nfunction getRtvVersionForTesting(win, isLocalDev) {\n  return getRtvVersion(win, isLocalDev);\n}\n/** @visibleForTesting */\n\n\nfunction resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n\n},{\"./internal-version\":120,\"./url-parse-query-string\":146}],128:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.Observable = void 0;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This class helps to manage observers. Observers can be added, removed or\n * fired through and instance of this class.\n * @template TYPE\n */\nvar Observable =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of Observable.\n   */\n  function Observable() {\n    /** @type {?Array<function(TYPE)>} */\n    this.handlers_ = null;\n  }\n  /**\n   * Adds the observer to this instance.\n   * @param {function(TYPE)} handler Observer's handler.\n   * @return {!UnlistenDef}\n   */\n\n\n  var _proto = Observable.prototype;\n\n  _proto.add = function add(handler) {\n    var _this = this;\n\n    if (!this.handlers_) {\n      this.handlers_ = [];\n    }\n\n    this.handlers_.push(handler);\n    return function () {\n      _this.remove(handler);\n    };\n  }\n  /**\n   * Removes the observer from this instance.\n   * @param {function(TYPE)} handler Observer's instance.\n   */\n  ;\n\n  _proto.remove = function remove(handler) {\n    if (!this.handlers_) {\n      return;\n    }\n\n    var index = this.handlers_.indexOf(handler);\n\n    if (index > -1) {\n      this.handlers_.splice(index, 1);\n    }\n  }\n  /**\n   * Removes all observers.\n   */\n  ;\n\n  _proto.removeAll = function removeAll() {\n    if (!this.handlers_) {\n      return;\n    }\n\n    this.handlers_.length = 0;\n  }\n  /**\n   * Fires an event. All observers are called.\n   * @param {TYPE=} opt_event\n   */\n  ;\n\n  _proto.fire = function fire(opt_event) {\n    if (!this.handlers_) {\n      return;\n    }\n\n    var handlers = this.handlers_;\n\n    for (var i = 0; i < handlers.length; i++) {\n      var handler = handlers[i];\n      handler(opt_event);\n    }\n  }\n  /**\n   * Returns number of handlers. Mostly needed for tests.\n   * @return {number}\n   */\n  ;\n\n  _proto.getHandlerCount = function getHandlerCount() {\n    if (!this.handlers_) {\n      return 0;\n    }\n\n    return this.handlers_.length;\n  };\n\n  return Observable;\n}();\n\nexports.Observable = Observable;\n\n},{}],129:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.Pass = void 0;\n\nvar _services = require(\"./services\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Pass class helps to manage single-pass process. A pass is scheduled using\n * delay method. Only one pass can be pending at a time. If no pass is pending\n * the process is considered to be \"idle\".\n */\nvar Pass =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new Pass instance.\n   * @param {!Window} win\n   * @param {function()} handler Handler to be executed when pass is triggered.\n   * @param {number=} opt_defaultDelay Default delay to be used when schedule\n   *   is called without one.\n   */\n  function Pass(win, handler, opt_defaultDelay) {\n    var _this = this;\n\n    this.timer_ = _services.Services.timerFor(win);\n    /** @private @const {function()} */\n\n    this.handler_ = handler;\n    /** @private @const {number} */\n\n    this.defaultDelay_ = opt_defaultDelay || 0;\n    /** @private {number|string} */\n\n    this.scheduled_ = -1;\n    /** @private {number} */\n\n    this.nextTime_ = 0;\n    /** @private {boolean} */\n\n    this.running_ = false;\n    /**\n     * @private\n     * @const {function()}\n     */\n\n    this.boundPass_ = function () {\n      _this.pass_();\n    };\n  }\n  /**\n   * Whether or not a pass is currently pending.\n   * @return {boolean}\n   */\n\n\n  var _proto = Pass.prototype;\n\n  _proto.isPending = function isPending() {\n    return this.scheduled_ != -1;\n  }\n  /**\n   * Tries to schedule a new pass optionally with specified delay. If the new\n   * requested pass is requested before the pending pass, the pending pass is\n   * canceled. If the new pass is requested after the pending pass, the newly\n   * requested pass is ignored.\n   *\n   * Returns {@code true} if the pass has been scheduled and {@code false} if\n   * ignored.\n   *\n   * @param {number=} opt_delay Delay to schedule the pass. If not specified\n   *   the default delay is used, falling back to 0.\n   * @return {boolean}\n   */\n  ;\n\n  _proto.schedule = function schedule(opt_delay) {\n    var delay = opt_delay || this.defaultDelay_;\n\n    if (this.running_ && delay < 10) {\n      // If we get called recursively, wait at least 10ms for the next\n      // execution.\n      delay = 10;\n    }\n\n    var nextTime = Date.now() + delay; // Schedule anew if nothing is scheduled currently or if the new time is\n    // sooner then previously requested.\n\n    if (!this.isPending() || nextTime - this.nextTime_ < -10) {\n      this.cancel();\n      this.nextTime_ = nextTime;\n      this.scheduled_ = this.timer_.delay(this.boundPass_, delay);\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   *\n   */\n  ;\n\n  _proto.pass_ = function pass_() {\n    this.scheduled_ = -1;\n    this.nextTime_ = 0;\n    this.running_ = true;\n    this.handler_();\n    this.running_ = false;\n  }\n  /**\n   * Cancels the pending pass if any.\n   */\n  ;\n\n  _proto.cancel = function cancel() {\n    if (this.isPending()) {\n      this.timer_.cancel(this.scheduled_);\n      this.scheduled_ = -1;\n    }\n  };\n\n  return Pass;\n}();\n\nexports.Pass = Pass;\n\n},{\"./services\":141}],130:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.createPixel = createPixel;\n\nvar _windowInterface = require(\"../src/window-interface\");\n\nvar _dom = require(\"../src/dom\");\n\nvar _object = require(\"../src/utils/object\");\n\nvar _log = require(\"../src/log\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nvar TAG = 'pixel';\n/**\n * @param {!Window} win\n * @param {string} src\n * @param {?string=} referrerPolicy\n * @return {!Element}\n */\n\nfunction createPixel(win, src, referrerPolicy) {\n  if (referrerPolicy && referrerPolicy !== 'no-referrer') {\n    (0, _log.user)().error(TAG, 'Unsupported referrerPolicy: %s', referrerPolicy);\n  }\n\n  return referrerPolicy === 'no-referrer' ? createNoReferrerPixel(win, src) : createImagePixel(win, src);\n}\n/**\n * @param {!Window} win\n * @param {string} src\n * @return {!Element}\n */\n\n\nfunction createNoReferrerPixel(win, src) {\n  if (isReferrerPolicySupported()) {\n    return createImagePixel(win, src, true);\n  } else {\n    // if \"referrerPolicy\" is not supported, use iframe wrapper\n    // to scrub the referrer.\n    var iframe = (0, _dom.createElementWithAttributes)(\n    /** @type {!Document} */\n    win.document, 'iframe', (0, _object.dict)({\n      'src': 'about:blank',\n      'style': 'display:none'\n    }));\n    win.document.body.appendChild(iframe);\n    createImagePixel(iframe.contentWindow, src);\n    return iframe;\n  }\n}\n/**\n * @param {!Window} win\n * @param {string} src\n * @param {boolean=} noReferrer\n * @return {!Image}\n */\n\n\nfunction createImagePixel(win, src, noReferrer) {\n  if (noReferrer === void 0) {\n    noReferrer = false;\n  }\n\n  var Image = _windowInterface.WindowInterface.getImage(win);\n\n  var image = new Image();\n\n  if (noReferrer) {\n    image.referrerPolicy = 'no-referrer';\n  }\n\n  image.src = src;\n  return image;\n}\n/**\n * Check if element attribute \"referrerPolicy\" is supported by the browser.\n * Safari 11.1 does not support it yet.\n *\n * @return {boolean}\n */\n\n\nfunction isReferrerPolicySupported() {\n  return 'referrerPolicy' in Image.prototype;\n}\n\n},{\"../src/dom\":111,\"../src/log\":125,\"../src/utils/object\":154,\"../src/window-interface\":158}],131:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getExistingServiceForDocInEmbedScope = getExistingServiceForDocInEmbedScope;\nexports.installServiceInEmbedScope = installServiceInEmbedScope;\nexports.registerServiceBuilder = registerServiceBuilder;\nexports.registerServiceBuilderForDoc = registerServiceBuilderForDoc;\nexports.rejectServicePromiseForDoc = rejectServicePromiseForDoc;\nexports.getService = getService;\nexports.getServicePromise = getServicePromise;\nexports.getExistingServiceOrNull = getExistingServiceOrNull;\nexports.getServicePromiseOrNull = getServicePromiseOrNull;\nexports.getServiceForDoc = getServiceForDoc;\nexports.getServicePromiseForDoc = getServicePromiseForDoc;\nexports.getServicePromiseOrNullForDoc = getServicePromiseOrNullForDoc;\nexports.setParentWindow = setParentWindow;\nexports.getParentWindow = getParentWindow;\nexports.getTopWindow = getTopWindow;\nexports.getParentWindowFrameElement = getParentWindowFrameElement;\nexports.getAmpdoc = getAmpdoc;\nexports.isDisposable = isDisposable;\nexports.assertDisposable = assertDisposable;\nexports.disposeServicesForDoc = disposeServicesForDoc;\nexports.disposeServicesForEmbed = disposeServicesForEmbed;\nexports.installServiceInEmbedIfEmbeddable = installServiceInEmbedIfEmbeddable;\nexports.adoptServiceForEmbedDoc = adoptServiceForEmbedDoc;\nexports.resetServiceForTesting = resetServiceForTesting;\nexports.EmbeddableService = exports.Disposable = void 0;\n\nvar _promise = require(\"./utils/promise\");\n\nvar _log = require(\"./log\");\n\nvar _experiments = require(\"./experiments\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (?function(new:Object, !Window)|\n *          ?function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nvar ServiceHolderDef;\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\n\nvar Disposable =\n/*#__PURE__*/\nfunction () {\n  function Disposable() {}\n\n  var _proto = Disposable.prototype;\n\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  _proto.dispose = function dispose() {};\n\n  return Disposable;\n}();\n/**\n * Services must implement this interface to be embeddable in FIEs.\n * @interface\n */\n\n\nexports.Disposable = Disposable;\n\nvar EmbeddableService =\n/*#__PURE__*/\nfunction () {\n  function EmbeddableService() {}\n\n  /**\n   * Installs a new instance of the service in the given FIE window.\n   * @param {!Window} unusedEmbedWin\n   * @param {!./service/ampdoc-impl.AmpDoc} unusedAmpDoc\n   */\n  EmbeddableService.installInEmbedWindow = function installInEmbedWindow(unusedEmbedWin, unusedAmpDoc) {};\n\n  return EmbeddableService;\n}();\n/**\n * Returns a service with the given id. Assumes that it has been constructed\n * already.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\n\n\nexports.EmbeddableService = EmbeddableService;\n\nfunction getExistingServiceForDocInEmbedScope(element, id) {\n  // TODO(#22733): completely remove this method once ampdoc-fie launches.\n  var document = element.ownerDocument;\n  var win = (0, _types.toWin)(document.defaultView);\n  var topWin = getTopWindow(win); // First, try to resolve via local embed window (if applicable).\n\n  var isEmbed = win != topWin;\n  var ampdocFieExperimentOn = (0, _experiments.isExperimentOn)(topWin, 'ampdoc-fie');\n\n  if (isEmbed && !ampdocFieExperimentOn) {\n    if (isServiceRegistered(win, id)) {\n      return getServiceInternal(win, id);\n    } // Fallback from FIE to parent is intentionally unsupported for safety.\n\n\n    return null;\n  } else {\n    // Resolve via the element's ampdoc.\n    return getServiceForDocOrNullInternal(element, id);\n  }\n}\n/**\n * Installs a service override on amp-doc level.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {!Object} service The service.\n */\n\n\nfunction installServiceInEmbedScope(embedWin, id, service) {\n  var topWin = getTopWindow(embedWin);\n  (0, _log.devAssert)(embedWin != topWin, 'Service override can only be installed in embed window: %s', id);\n  (0, _log.devAssert)(!isServiceRegistered(embedWin, id), 'Service override has already been installed: %s', id);\n  var ampdocFieExperimentOn = (0, _experiments.isExperimentOn)(topWin, 'ampdoc-fie');\n\n  if (ampdocFieExperimentOn) {\n    var ampdoc = getAmpdoc(embedWin.document);\n    registerServiceInternal(getAmpdocServiceHolder(ampdoc), ampdoc, id, function () {\n      return service;\n    },\n    /* override */\n    true);\n  } else {\n    registerServiceInternal(embedWin, embedWin, id, function () {\n      return service;\n    });\n    getServiceInternal(embedWin, id); // Force service to build.\n  }\n}\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\n\n\nfunction registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\n\n\nfunction registerServiceBuilderForDoc(nodeOrDoc, id, constructor, opt_instantiate) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\n\n\nfunction rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\n\n\nfunction getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\n\n\nfunction getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\n\n\nfunction getServiceForDoc(elementOrAmpDoc, id) {\n  var ampdoc = getAmpdoc(elementOrAmpDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\n\n\nfunction getServiceForDocOrNullInternal(element, id) {\n  var ampdoc = getAmpdoc(element);\n  var holder = getAmpdocServiceHolder(ampdoc);\n\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\n\n\nfunction setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\n\n\nfunction getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\n\n\nfunction getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\n\n\nfunction getParentWindowFrameElement(node, opt_topWin) {\n  var childWin = (node.ownerDocument || node).defaultView;\n  var topWin = opt_topWin || getTopWindow(childWin);\n\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return (\n        /** @type {?HTMLIFrameElement} */\n        childWin.frameElement\n      );\n    } catch (e) {// Ignore the error.\n    }\n  }\n\n  return null;\n}\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\n\n\nfunction getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    var win = (0, _types.toWin)(\n    /** @type {!Document} */\n    (nodeOrDoc.ownerDocument || nodeOrDoc).defaultView);\n    return getAmpdocService(win).getAmpDoc(\n    /** @type {!Node} */\n    nodeOrDoc);\n  }\n\n  return (\n    /** @type {!./service/ampdoc-impl.AmpDoc} */\n    nodeOrDoc\n  );\n}\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\n\n\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\n\n\nfunction getAmpdocService(win) {\n  return (\n    /** @type {!./service/ampdoc-impl.AmpDocService} */\n    getService(win, 'ampdoc')\n  );\n}\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n * @template T\n */\n\n\nfunction getServiceInternal(holder, id) {\n  (0, _log.devAssert)(isServiceRegistered(holder, id), \"Expected service \" + id + \" to be registered\");\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (!s.obj) {\n    (0, _log.devAssert)(s.ctor, \"Service \" + id + \" registered without ctor nor impl.\");\n    (0, _log.devAssert)(s.context, \"Service \" + id + \" registered without context.\");\n    s.obj = new s.ctor(s.context);\n    (0, _log.devAssert)(s.obj, \"Service \" + id + \" constructed to null.\");\n    s.ctor = null;\n    s.context = null; // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n\n  return s.obj;\n}\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n */\n\n\nfunction registerServiceInternal(holder, context, id, ctor, opt_override) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null\n    };\n  }\n\n  if (!opt_override && (s.ctor || s.obj)) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context; // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromiseInternal(holder, id) {\n  var cached = getServicePromiseOrNullInternal(holder, id);\n\n  if (cached) {\n    return cached;\n  } // Service is not registered.\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n\n\n  var services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return (\n    /** @type {!Promise<!Object>} */\n    services[id].promise\n  );\n}\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\n\n\nfunction rejectServicePromiseInternal(holder, id, error) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNullInternal(holder, id) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return s.promise = Promise.resolve(\n      /** @type {!Object} */\n      s.obj);\n    }\n  }\n\n  return null;\n}\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\n\n\nfunction getServices(holder) {\n  var services = holder.__AMP_SERVICES;\n\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n\n  return services;\n}\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\n\n\nfunction isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\n\n\nfunction assertDisposable(service) {\n  (0, _log.devAssert)(isDisposable(service), 'required to implement Disposable');\n  return (\n    /** @type {!Disposable} */\n    service\n  );\n}\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\n\n\nfunction disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\n\n\nfunction disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n/**\n * @param {!Object} holder Object holding the service instances.\n */\n\n\nfunction disposeServicesInternal(holder) {\n  // TODO(dvoytenko): Consider marking holder as destroyed for later-arriving\n  // service to be canceled automatically.\n  var services = getServices(holder);\n\n  var _loop = function _loop(id) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      return \"continue\";\n    }\n\n    var serviceHolder = services[id];\n\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then(function (instance) {\n        return disposeServiceInternal(id, instance);\n      });\n    }\n  };\n\n  for (var id in services) {\n    var _ret = _loop(id);\n\n    if (_ret === \"continue\") continue;\n  }\n}\n/**\n * @param {string} id\n * @param {!Object} service\n */\n\n\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    (0, _log.dev)().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n/**\n * Adopts an embeddable (implements `EmbeddableService` interface) service\n * in embed scope.\n * @param {!Window} embedWin\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} serviceClass\n * @suppress {missingProperties}\n * @return {boolean}\n */\n\n\nfunction installServiceInEmbedIfEmbeddable(embedWin, serviceClass) {\n  var isEmbeddableService = typeof serviceClass.installInEmbedWindow === 'function';\n\n  if (!isEmbeddableService) {\n    return false;\n  }\n\n  var frameElement = (0, _log.dev)().assertElement(embedWin.frameElement, 'frameElement not found for embed');\n  var ampdoc = getAmpdoc(frameElement);\n  serviceClass.installInEmbedWindow(embedWin, ampdoc);\n  return true;\n}\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\n\n\nfunction adoptServiceForEmbedDoc(ampdoc, id) {\n  var service = getServiceInternal(getAmpdocServiceHolder((0, _log.devAssert)(ampdoc.getParent())), id);\n  registerServiceInternal(getAmpdocServiceHolder(ampdoc), ampdoc, id, function () {\n    return service;\n  });\n}\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\n\n\nfunction resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\n\n\nfunction isServiceRegistered(holder, id) {\n  var service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id]; // All registered services must have an implementation or a constructor.\n\n  return !!(service && (service.ctor || service.obj));\n}\n/** @return {!ServiceHolderDef} */\n\n\nfunction emptyServiceHolderWithPromise() {\n  var deferred = new _promise.Deferred();\n  var promise = deferred.promise,\n      resolve = deferred.resolve,\n      reject = deferred.reject;\n  promise.catch(function () {}); // avoid uncaught exception when service gets rejected\n\n  return {\n    obj: null,\n    promise: promise,\n    resolve: resolve,\n    reject: reject,\n    context: null,\n    ctor: null\n  };\n}\n\n},{\"./experiments\":115,\"./log\":125,\"./types\":145,\"./utils/promise\":156}],132:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.CacheCidApi = void 0;\n\nvar _services = require(\"../services\");\n\nvar _log = require(\"../log\");\n\nvar _object = require(\"../utils/object\");\n\nvar _url = require(\"../url\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The Client ID service key.\n * @const @private {string}\n */\nvar SERVICE_KEY_ = 'AIzaSyDKtqGxnoeIqVM33Uf7hRSa3GJxuzR7mLc';\n/**\n * Tag for debug logging.\n * @const @private {string}\n */\n\nvar TAG_ = 'CacheCidApi';\n/**\n * The URL for the cache-served CID API.\n * @const @private {string}\n */\n\nvar CACHE_API_URL = 'https://ampcid.google.com/v1/cache:getClientId?key=';\n/**\n * The XHR timeout in milliseconds for requests to the CID API.\n * @const @private {number}\n */\n\nvar TIMEOUT_ = 30000;\n/**\n * Exposes CID API for cache-served pages without a viewer.\n */\n\nvar CacheCidApi =\n/*#__PURE__*/\nfunction () {\n  /** @param {!./ampdoc-impl.AmpDoc} ampdoc */\n  function CacheCidApi(ampdoc) {\n    /** @private {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n    /** @private {!./viewer-interface.ViewerInterface} */\n\n    this.viewer_ = _services.Services.viewerForDoc(this.ampdoc_);\n    /** @private {?Promise<?string>} */\n\n    this.publisherCidPromise_ = null;\n    /** @private {!./timer-impl.Timer} */\n\n    this.timer_ = _services.Services.timerFor(this.ampdoc_.win);\n  }\n  /**\n   * Returns true if the page is embedded in CCT and is served by a proxy.\n   * @return {boolean}\n   */\n\n\n  var _proto = CacheCidApi.prototype;\n\n  _proto.isSupported = function isSupported() {\n    return this.viewer_.isCctEmbedded() && this.viewer_.isProxyOrigin();\n  }\n  /**\n   * Returns scoped CID retrieved from the Viewer.\n   * @param {string} scope\n   * @return {!Promise<?string>}\n   */\n  ;\n\n  _proto.getScopedCid = function getScopedCid(scope) {\n    var _this = this;\n\n    if (!this.viewer_.isCctEmbedded()) {\n      return (\n        /** @type {!Promise<?string>} */\n        Promise.resolve(null)\n      );\n    }\n\n    if (!this.publisherCidPromise_) {\n      var url = CACHE_API_URL + SERVICE_KEY_;\n      this.publisherCidPromise_ = this.fetchCid_(url);\n    }\n\n    return this.publisherCidPromise_.then(function (publisherCid) {\n      return publisherCid ? _this.scopeCid_(publisherCid, scope) : null;\n    });\n  }\n  /**\n   * Returns scoped CID retrieved from the Viewer.\n   * @param {string} url\n   * @param {boolean=} useAlternate\n   * @return {!Promise<?string>}\n   */\n  ;\n\n  _proto.fetchCid_ = function fetchCid_(url, useAlternate) {\n    var _this2 = this;\n\n    if (useAlternate === void 0) {\n      useAlternate = true;\n    }\n\n    var payload = (0, _object.dict)({\n      'publisherOrigin': (0, _url.getSourceOrigin)(this.ampdoc_.win.location)\n    }); // Make the XHR request to the cache endpoint.\n\n    var timeoutMessage = 'fetchCidTimeout';\n    return this.timer_.timeoutPromise(TIMEOUT_, _services.Services.xhrFor(this.ampdoc_.win).fetchJson(url, {\n      method: 'POST',\n      ampCors: false,\n      credentials: 'include',\n      mode: 'cors',\n      body: payload\n    }), timeoutMessage).then(function (res) {\n      return res.json().then(function (response) {\n        if (response['optOut']) {\n          return null;\n        }\n\n        var cid = response['publisherClientId'];\n\n        if (!cid && useAlternate && response['alternateUrl']) {\n          // If an alternate url is provided, try again with the alternate url\n          // The client is still responsible for appending API keys to the URL.\n          var alt = response['alternateUrl'] + \"?key=\" + SERVICE_KEY_;\n          return _this2.fetchCid_((0, _log.dev)().assertString(alt), false);\n        }\n\n        return cid;\n      });\n    }).catch(function (e) {\n      if (e && e.response) {\n        e.response.json().then(function (res) {\n          (0, _log.dev)().error(TAG_, JSON.stringify(res));\n        });\n      } else {\n        var isTimeout = e && e.message == timeoutMessage;\n\n        if (isTimeout) {\n          (0, _log.dev)().expectedError(TAG_, e);\n        } else {\n          (0, _log.dev)().error(TAG_, e);\n        }\n      }\n\n      return null;\n    });\n  }\n  /**\n   * Returns scoped CID extracted from the fetched publisherCid.\n   * @param {string} publisherCid\n   * @param {string} scope\n   * @return {!Promise<string>}\n   */\n  ;\n\n  _proto.scopeCid_ = function scopeCid_(publisherCid, scope) {\n    var text = publisherCid + ';' + scope;\n    return _services.Services.cryptoFor(this.ampdoc_.win).sha384Base64(text).then(function (enc) {\n      return 'amp-' + enc;\n    });\n  };\n\n  return CacheCidApi;\n}();\n\nexports.CacheCidApi = CacheCidApi;\n\n},{\"../log\":125,\"../services\":141,\"../url\":148,\"../utils/object\":154}],133:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.GoogleCidApi = exports.TokenStatus = void 0;\n\nvar _services = require(\"../services\");\n\nvar _windowInterface = require(\"../window-interface\");\n\nvar _log = require(\"../log\");\n\nvar _object = require(\"../utils/object\");\n\nvar _cookies = require(\"../cookies\");\n\nvar _url = require(\"../url\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar GOOGLE_API_URL = 'https://ampcid.google.com/v1/publisher:getClientId?key=';\nvar TAG = 'GoogleCidApi';\nvar AMP_TOKEN = 'AMP_TOKEN';\n/** @enum {string} */\n\nvar TokenStatus = {\n  RETRIEVING: '$RETRIEVING',\n  OPT_OUT: '$OPT_OUT',\n  NOT_FOUND: '$NOT_FOUND',\n  ERROR: '$ERROR'\n};\nexports.TokenStatus = TokenStatus;\nvar TIMEOUT = 30000;\nvar HOUR = 60 * 60 * 1000;\nvar DAY = 24 * HOUR;\nvar YEAR = 365 * DAY;\n/**\n * Client impl for Google CID API\n */\n\nvar GoogleCidApi =\n/*#__PURE__*/\nfunction () {\n  /** @param {!./ampdoc-impl.AmpDoc} ampdoc */\n  function GoogleCidApi(ampdoc) {\n    /**\n     * @private {!Window}\n     */\n    this.win_ = ampdoc.win;\n    /**\n     * @private {!./timer-impl.Timer}\n     */\n\n    this.timer_ = _services.Services.timerFor(this.win_);\n    /**\n     * @private {!Object<string, !Promise<?string>>}\n     */\n\n    this.cidPromise_ = {};\n\n    var _Services$documentInf = _services.Services.documentInfoForDoc(ampdoc),\n        canonicalUrl = _Services$documentInf.canonicalUrl;\n    /** @private {?string} */\n\n\n    this.canonicalOrigin_ = canonicalUrl ? (0, _url.parseUrlDeprecated)(canonicalUrl).origin : null;\n  }\n  /**\n   * @param {string} apiKey\n   * @param {string} scope\n   * @return {!Promise<?string>}\n   */\n\n\n  var _proto = GoogleCidApi.prototype;\n\n  _proto.getScopedCid = function getScopedCid(apiKey, scope) {\n    var _this = this;\n\n    if (this.cidPromise_[scope]) {\n      return this.cidPromise_[scope];\n    }\n\n    var token; // Block the request if a previous request is on flight\n    // Poll every 200ms. Longer interval means longer latency for the 2nd CID.\n\n    return this.cidPromise_[scope] = this.timer_.poll(200, function () {\n      token = (0, _cookies.getCookie)(_this.win_, AMP_TOKEN);\n      return token !== TokenStatus.RETRIEVING;\n    }).then(function () {\n      if (token === TokenStatus.OPT_OUT) {\n        return TokenStatus.OPT_OUT;\n      } // If the page referrer is proxy origin, we force to use API even the\n      // token indicates a previous fetch returned nothing\n\n\n      var forceFetch = token === TokenStatus.NOT_FOUND && _this.isReferrerProxyOrigin_(); // Token is in a special state, fallback to existing cookie\n\n\n      if (!forceFetch && _this.isStatusToken_(token)) {\n        return null;\n      }\n\n      if (!token || _this.isStatusToken_(token)) {\n        _this.persistToken_(TokenStatus.RETRIEVING, TIMEOUT);\n      }\n\n      var url = GOOGLE_API_URL + apiKey;\n      return _this.fetchCid_((0, _log.dev)().assertString(url), scope, token).then(function (response) {\n        var cid = _this.handleResponse_(response);\n\n        if (!cid && response['alternateUrl']) {\n          // If an alternate url is provided, try again with the alternate\n          // url The client is still responsible for appending API keys to\n          // the URL.\n          var altUrl = response['alternateUrl'] + \"?key=\" + apiKey;\n          return _this.fetchCid_((0, _log.dev)().assertString(altUrl), scope, token).then(_this.handleResponse_.bind(_this));\n        }\n\n        return cid;\n      }).catch(function (e) {\n        _this.persistToken_(TokenStatus.ERROR, TIMEOUT);\n\n        if (e && e.response) {\n          e.response.json().then(function (res) {\n            (0, _log.dev)().error(TAG, JSON.stringify(res));\n          });\n        } else {\n          (0, _log.dev)().error(TAG, e);\n        }\n\n        return null;\n      });\n    });\n  }\n  /**\n   * @param {string} url\n   * @param {string} scope\n   * @param {?string} token\n   * @return {!Promise<!JsonObject>}\n   */\n  ;\n\n  _proto.fetchCid_ = function fetchCid_(url, scope, token) {\n    var payload = (0, _object.dict)({\n      'originScope': scope,\n      'canonicalOrigin': this.canonicalOrigin_\n    });\n\n    if (token) {\n      payload['securityToken'] = token;\n    }\n\n    return this.timer_.timeoutPromise(TIMEOUT, _services.Services.xhrFor(this.win_).fetchJson(url, {\n      method: 'POST',\n      ampCors: false,\n      credentials: 'include',\n      mode: 'cors',\n      body: payload\n    }).then(function (res) {\n      return res.json();\n    }));\n  }\n  /**\n   * @param {!JsonObject} res\n   * @return {?string}\n   */\n  ;\n\n  _proto.handleResponse_ = function handleResponse_(res) {\n    if (res['optOut']) {\n      this.persistToken_(TokenStatus.OPT_OUT, YEAR);\n      return TokenStatus.OPT_OUT;\n    }\n\n    if (res['clientId']) {\n      this.persistToken_(res['securityToken'], YEAR);\n      return res['clientId'];\n    }\n\n    if (res['alternateUrl']) {\n      return null;\n    }\n\n    this.persistToken_(TokenStatus.NOT_FOUND, HOUR);\n    return null;\n  }\n  /**\n   * @param {string|undefined} tokenValue\n   * @param {number} expires\n   */\n  ;\n\n  _proto.persistToken_ = function persistToken_(tokenValue, expires) {\n    if (tokenValue) {\n      (0, _cookies.setCookie)(this.win_, AMP_TOKEN, tokenValue, this.expiresIn_(expires), {\n        highestAvailableDomain: true\n      });\n    }\n  }\n  /**\n   * @param {number} time\n   * @return {number}\n   */\n  ;\n\n  _proto.expiresIn_ = function expiresIn_(time) {\n    return this.win_.Date.now() + time;\n  }\n  /**\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isReferrerProxyOrigin_ = function isReferrerProxyOrigin_() {\n    return (0, _url.isProxyOrigin)(_windowInterface.WindowInterface.getDocumentReferrer(this.win_));\n  }\n  /**\n   * @param {?string} token\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isStatusToken_ = function isStatusToken_(token) {\n    return (\n      /** @type {boolean} */\n      token && token[0] === '$'\n    );\n  };\n\n  return GoogleCidApi;\n}();\n\nexports.GoogleCidApi = GoogleCidApi;\n\n},{\"../cookies\":109,\"../log\":125,\"../services\":141,\"../url\":148,\"../utils/object\":154,\"../window-interface\":158}],134:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.optOutOfCid = optOutOfCid;\nexports.isOptedOutOfCid = isOptedOutOfCid;\nexports.getProxySourceOrigin = getProxySourceOrigin;\nexports.viewerBaseCid = viewerBaseCid;\nexports.getRandomString64 = getRandomString64;\nexports.installCidService = installCidService;\nexports.cidServiceForDocForTesting = cidServiceForDocForTesting;\nexports.CidDef = exports.BASE_CID_MAX_AGE_MILLIS = void 0;\n\nvar _cidApi = require(\"./cid-api\");\n\nvar _log = require(\"../log\");\n\nvar _cookies = require(\"../cookies\");\n\nvar _service = require(\"../service\");\n\nvar _url = require(\"../url\");\n\nvar _json = require(\"../json\");\n\nvar _cacheCidApi = require(\"./cache-cid-api\");\n\nvar _services = require(\"../services\");\n\nvar _viewerCidApi = require(\"./viewer-cid-api\");\n\nvar _base = require(\"../utils/base64\");\n\nvar _object = require(\"../utils/object\");\n\nvar _bytes = require(\"../utils/bytes\");\n\nvar _dom = require(\"../dom\");\n\nvar _promise = require(\"../utils/promise\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides per AMP document source origin and use case\n * persistent client identifiers for use in analytics and similar use\n * cases.\n *\n * For details, see https://goo.gl/Mwaacs\n */\nvar ONE_DAY_MILLIS = 24 * 3600 * 1000;\n/**\n * We ignore base cids that are older than (roughly) one year.\n */\n\nvar BASE_CID_MAX_AGE_MILLIS = 365 * ONE_DAY_MILLIS;\nexports.BASE_CID_MAX_AGE_MILLIS = BASE_CID_MAX_AGE_MILLIS;\nvar SCOPE_NAME_VALIDATOR = /^[a-zA-Z0-9-_.]+$/;\nvar CID_OPTOUT_STORAGE_KEY = 'amp-cid-optout';\nvar CID_OPTOUT_VIEWER_MESSAGE = 'cidOptOut';\n/**\n * Tag for debug logging.\n * @const @private {string}\n */\n\nvar TAG_ = 'CID';\n/**\n * The name of the Google CID API as it appears in the meta tag to opt-in.\n * @const @private {string}\n */\n\nvar GOOGLE_CID_API_META_NAME = 'amp-google-client-id-api';\n/**\n * The mapping from analytics providers to CID scopes.\n * @const @private {Object<string, string>}\n */\n\nvar CID_API_SCOPE_WHITELIST = {\n  'googleanalytics': 'AMP_ECID_GOOGLE'\n};\n/**\n * The mapping from analytics providers to their CID API service keys.\n * @const @private {Object<string, string>}\n */\n\nvar API_KEYS = {\n  'googleanalytics': 'AIzaSyA65lEHUEizIsNtlbNo-l2K18dT680nsaM'\n};\n/**\n * A base cid string value and the time it was last read / stored.\n * @typedef {{time: time, cid: string}}\n */\n\nvar BaseCidInfoDef;\n/**\n * The \"get CID\" parameters.\n * - createCookieIfNotPresent: Whether CID is allowed to create a cookie when.\n *   Default value is `false`.\n * @typedef {{\n *   scope: string,\n *   createCookieIfNotPresent: (boolean|undefined),\n *   cookieName: (string|undefined),\n * }}\n */\n\nvar GetCidDef;\n/**\n * @interface\n */\n\nvar CidDef =\n/*#__PURE__*/\nfunction () {\n  function CidDef() {}\n\n  var _proto = CidDef.prototype;\n\n  /**\n   * @param {!GetCidDef} unusedGetCidStruct an object provides CID scope name for\n   *     proxy case and cookie name for non-proxy case.\n   * @param {!Promise} unusedConsent Promise for when the user has given consent\n   *     (if deemed necessary by the publisher) for use of the client\n   *     identifier.\n   * @param {!Promise=} opt_persistenceConsent Dedicated promise for when\n   *     it is OK to persist a new tracking identifier. This could be\n   *     supplied ONLY by the code that supplies the actual consent\n   *     cookie.\n   *     If this is given, the consent param should be a resolved promise\n   *     because this call should be only made in order to get consent.\n   *     The consent promise passed to other calls should then itself\n   *     depend on the opt_persistenceConsent promise (and the actual\n   *     consent, of course).\n   * @return {!Promise<?string>} A client identifier that should be used\n   *      within the current source origin and externalCidScope. Might be\n   *      null if user has opted out of cid or no identifier was found\n   *      or it could be made.\n   *      This promise may take a long time to resolve if consent isn't\n   *      given.\n   */\n  _proto.get = function get(unusedGetCidStruct, unusedConsent, opt_persistenceConsent) {}\n  /**\n   * User will be opted out of Cid issuance for all scopes.\n   * When opted-out Cid service will reject all `get` requests.\n   *\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.optOut = function optOut() {};\n\n  return CidDef;\n}();\n/**\n * @implements {CidDef}\n */\n\n\nexports.CidDef = CidDef;\n\nvar Cid =\n/*#__PURE__*/\nfunction () {\n  /** @param {!./ampdoc-impl.AmpDoc} ampdoc */\n  function Cid(ampdoc) {\n    /** @const */\n    this.ampdoc = ampdoc;\n    /**\n     * Cached base cid once read from storage to avoid repeated\n     * reads.\n     * @private {?Promise<string>}\n     * @restricted\n     */\n\n    this.baseCid_ = null;\n    /**\n     * Cache to store external cids. Scope is used as the key and cookie value\n     * is the value.\n     * @private {!Object<string, !Promise<string>>}\n     * @restricted\n     */\n\n    this.externalCidCache_ = Object.create(null);\n    /**\n     * @private @const {!CacheCidApi}\n     */\n\n    this.cacheCidApi_ = new _cacheCidApi.CacheCidApi(ampdoc);\n    /**\n     * @private {!ViewerCidApi}\n     */\n\n    this.viewerCidApi_ = new _viewerCidApi.ViewerCidApi(ampdoc);\n    this.cidApi_ = new _cidApi.GoogleCidApi(ampdoc);\n    /** @private {?Object<string, string>} */\n\n    this.apiKeyMap_ = null;\n  }\n  /** @override */\n\n\n  var _proto2 = Cid.prototype;\n\n  _proto2.get = function get(getCidStruct, consent, opt_persistenceConsent) {\n    var _this = this;\n\n    (0, _log.userAssert)(SCOPE_NAME_VALIDATOR.test(getCidStruct.scope) && SCOPE_NAME_VALIDATOR.test(getCidStruct.cookieName), 'The CID scope and cookie name must only use the characters ' + '[a-zA-Z0-9-_.]+\\nInstead found: %s', getCidStruct.scope);\n    return consent.then(function () {\n      return _this.ampdoc.whenFirstVisible();\n    }).then(function () {\n      // Check if user has globally opted out of CID, we do this after\n      // consent check since user can optout during consent process.\n      return isOptedOutOfCid(_this.ampdoc);\n    }).then(function (optedOut) {\n      if (optedOut) {\n        return '';\n      }\n\n      var cidPromise = _this.getExternalCid_(getCidStruct, opt_persistenceConsent || consent); // Getting the CID might involve an HTTP request. We timeout after 10s.\n\n\n      return _services.Services.timerFor(_this.ampdoc.win).timeoutPromise(10000, cidPromise, \"Getting cid for \\\"\" + getCidStruct.scope + \"\\\" timed out\").catch(function (error) {\n        (0, _log.rethrowAsync)(error);\n      });\n    });\n  }\n  /** @override */\n  ;\n\n  _proto2.optOut = function optOut() {\n    return optOutOfCid(this.ampdoc);\n  }\n  /**\n   * Returns the \"external cid\". This is a cid for a specific purpose\n   * (Say Analytics provider X). It is unique per user, userAssert, that purpose\n   * and the AMP origin site.\n   * @param {!GetCidDef} getCidStruct\n   * @param {!Promise} persistenceConsent\n   * @return {!Promise<?string>}\n   */\n  ;\n\n  _proto2.getExternalCid_ = function getExternalCid_(getCidStruct, persistenceConsent) {\n    var _this2 = this;\n\n    var scope = getCidStruct.scope;\n    /** @const {!Location} */\n\n    var url = (0, _url.parseUrlDeprecated)(this.ampdoc.win.location.href);\n\n    if (!(0, _url.isProxyOrigin)(url)) {\n      var apiKey = this.isScopeOptedIn_(scope);\n\n      if (apiKey) {\n        return this.cidApi_.getScopedCid(apiKey, scope).then(function (scopedCid) {\n          if (scopedCid == _cidApi.TokenStatus.OPT_OUT) {\n            return null;\n          }\n\n          if (scopedCid) {\n            var cookieName = getCidStruct.cookieName || scope;\n            setCidCookie(_this2.ampdoc.win, cookieName, scopedCid);\n            return scopedCid;\n          }\n\n          return getOrCreateCookie(_this2, getCidStruct, persistenceConsent);\n        });\n      }\n\n      return getOrCreateCookie(this, getCidStruct, persistenceConsent);\n    }\n\n    return this.viewerCidApi_.isSupported().then(function (supported) {\n      if (supported) {\n        var _apiKey = _this2.isScopeOptedIn_(scope);\n\n        return _this2.viewerCidApi_.getScopedCid(_apiKey, scope);\n      }\n\n      if (_this2.cacheCidApi_.isSupported() && _this2.isScopeOptedIn_(scope)) {\n        return _this2.cacheCidApi_.getScopedCid(scope).then(function (scopedCid) {\n          if (scopedCid) {\n            return scopedCid;\n          }\n\n          return _this2.scopeBaseCid_(persistenceConsent, scope, url);\n        });\n      }\n\n      return _this2.scopeBaseCid_(persistenceConsent, scope, url);\n    });\n  }\n  /**\n   *\n   * @param {!Promise} persistenceConsent\n   * @param {*} scope\n   * @param {!Location} url\n   * @return {*}\n   */\n  ;\n\n  _proto2.scopeBaseCid_ = function scopeBaseCid_(persistenceConsent, scope, url) {\n    var _this3 = this;\n\n    return getBaseCid(this, persistenceConsent).then(function (baseCid) {\n      return _services.Services.cryptoFor(_this3.ampdoc.win).sha384Base64(baseCid + getProxySourceOrigin(url) + scope);\n    });\n  }\n  /**\n   * Checks if the page has opted in CID API for the given scope.\n   * Returns the API key that should be used, or null if page hasn't opted in.\n   *\n   * @param {string} scope\n   * @return {string|undefined}\n   */\n  ;\n\n  _proto2.isScopeOptedIn_ = function isScopeOptedIn_(scope) {\n    if (!this.apiKeyMap_) {\n      this.apiKeyMap_ = this.getOptedInScopes_();\n    }\n\n    return this.apiKeyMap_[scope];\n  }\n  /**\n   * Reads meta tags for opted in scopes.  Meta tags will have the form\n   * <meta name=\"provider-api-name\" content=\"provider-name\">\n   * @return {!Object<string, string>}\n   */\n  ;\n\n  _proto2.getOptedInScopes_ = function getOptedInScopes_() {\n    var apiKeyMap = {};\n    var optInMeta = this.ampdoc.win.document.head.\n    /*OK*/\n    querySelector(\"meta[name=\" + GOOGLE_CID_API_META_NAME + \"]\");\n\n    if (optInMeta && optInMeta.hasAttribute('content')) {\n      var list = optInMeta.getAttribute('content').split(',');\n      list.forEach(function (item) {\n        item = item.trim();\n\n        if (item.indexOf('=') > 0) {\n          var pair = item.split('=');\n          var scope = pair[0].trim();\n          apiKeyMap[scope] = pair[1].trim();\n        } else {\n          var clientName = item;\n          var _scope = CID_API_SCOPE_WHITELIST[clientName];\n\n          if (_scope) {\n            apiKeyMap[_scope] = API_KEYS[clientName];\n          } else {\n            (0, _log.user)().warn(TAG_, \"Unsupported client for Google CID API: \" + clientName + \".\" + (\"Please remove or correct \" + optInMeta.\n            /*OK*/\n            outerHTML));\n          }\n        }\n      });\n    }\n\n    return apiKeyMap;\n  };\n\n  return Cid;\n}();\n/**\n * User will be opted out of Cid issuance for all scopes.\n * When opted-out Cid service will reject all `get` requests.\n *\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @return {!Promise}\n * @visibleForTesting\n */\n\n\nfunction optOutOfCid(ampdoc) {\n  // Tell the viewer that user has opted out.\n  _services.Services.viewerForDoc(ampdoc).\n  /*OK*/\n  sendMessage(CID_OPTOUT_VIEWER_MESSAGE, (0, _object.dict)()); // Store the optout bit in storage\n\n\n  return _services.Services.storageForDoc(ampdoc).then(function (storage) {\n    return storage.set(CID_OPTOUT_STORAGE_KEY, true);\n  });\n}\n/**\n * Whether user has opted out of Cid issuance for all scopes.\n *\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @return {!Promise<boolean>}\n * @visibleForTesting\n */\n\n\nfunction isOptedOutOfCid(ampdoc) {\n  return _services.Services.storageForDoc(ampdoc).then(function (storage) {\n    return storage.get(CID_OPTOUT_STORAGE_KEY).then(function (val) {\n      return !!val;\n    });\n  }).catch(function () {\n    // If we fail to read the flag, assume not opted out.\n    return false;\n  });\n}\n/**\n * Sets a new CID cookie for expire 1 year from now.\n * @param {!Window} win\n * @param {string} scope\n * @param {string} cookie\n */\n\n\nfunction setCidCookie(win, scope, cookie) {\n  var expiration = Date.now() + BASE_CID_MAX_AGE_MILLIS;\n  (0, _cookies.setCookie)(win, scope, cookie, expiration, {\n    highestAvailableDomain: true\n  });\n}\n/**\n * If cookie exists it's returned immediately. Otherwise, if instructed, the\n * new cookie is created.\n *\n * @param {!Cid} cid\n * @param {!GetCidDef} getCidStruct\n * @param {!Promise} persistenceConsent\n * @return {!Promise<?string>}\n */\n\n\nfunction getOrCreateCookie(cid, getCidStruct, persistenceConsent) {\n  var win = cid.ampdoc.win;\n  var scope = getCidStruct.scope;\n  var cookieName = getCidStruct.cookieName || scope;\n  var existingCookie = (0, _cookies.getCookie)(win, cookieName);\n\n  if (!existingCookie && !getCidStruct.createCookieIfNotPresent) {\n    return (\n      /** @type {!Promise<?string>} */\n      Promise.resolve(null)\n    );\n  }\n\n  if (cid.externalCidCache_[scope]) {\n    return (\n      /** @type {!Promise<?string>} */\n      cid.externalCidCache_[scope]\n    );\n  }\n\n  if (existingCookie) {\n    // If we created the cookie, update it's expiration time.\n    if (/^amp-/.test(existingCookie)) {\n      setCidCookie(win, cookieName, existingCookie);\n    }\n\n    return (\n      /** @type {!Promise<?string>} */\n      Promise.resolve(existingCookie)\n    );\n  }\n\n  var newCookiePromise = getRandomString64(win) // Create new cookie, always prefixed with \"amp-\", so that we can see from\n  // the value whether we created it.\n  .then(function (randomStr) {\n    return 'amp-' + randomStr;\n  }); // Store it as a cookie based on the persistence consent.\n\n  Promise.all([newCookiePromise, persistenceConsent]).then(function (results) {\n    // The initial CID generation is inherently racy. First one that gets\n    // consent wins.\n    var newCookie = results[0];\n    var relookup = (0, _cookies.getCookie)(win, cookieName);\n\n    if (!relookup) {\n      setCidCookie(win, cookieName, newCookie);\n    }\n  });\n  return cid.externalCidCache_[scope] = newCookiePromise;\n}\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin. Throws an error if the doc is not on a proxy origin.\n * @param {!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n * @visibleForTesting BUT if this is needed elsewhere it could be\n *     factored into its own package.\n */\n\n\nfunction getProxySourceOrigin(url) {\n  (0, _log.userAssert)((0, _url.isProxyOrigin)(url), 'Expected proxy origin %s', url.origin);\n  return (0, _url.getSourceOrigin)(url);\n}\n/**\n * Returns the base cid for the current user(). This string must not\n * be exposed to users without hashing with the current source origin\n * and the externalCidScope.\n * On a proxy this value is the same for a user across all source\n * origins.\n * @param {!Cid} cid\n * @param {!Promise} persistenceConsent\n * @return {!Promise<string>}\n */\n\n\nfunction getBaseCid(cid, persistenceConsent) {\n  if (cid.baseCid_) {\n    return cid.baseCid_;\n  }\n\n  var win = cid.ampdoc.win;\n  return cid.baseCid_ = read(cid.ampdoc).then(function (stored) {\n    var needsToStore = false;\n    var baseCid; // See if we have a stored base cid and whether it is still valid\n    // in terms of expiration.\n\n    if (stored && !isExpired(stored)) {\n      baseCid = Promise.resolve(stored.cid);\n\n      if (shouldUpdateStoredTime(stored)) {\n        needsToStore = true;\n      }\n    } else {\n      // We need to make a new one.\n      baseCid = _services.Services.cryptoFor(win).sha384Base64(getEntropy(win));\n      needsToStore = true;\n    }\n\n    if (needsToStore) {\n      baseCid.then(function (baseCid) {\n        store(cid.ampdoc, persistenceConsent, baseCid);\n      });\n    }\n\n    return baseCid;\n  });\n}\n/**\n * Stores a new cidString in localStorage. Adds the current time to the\n * stored value.\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @param {!Promise} persistenceConsent\n * @param {string} cidString Actual cid string to store.\n */\n\n\nfunction store(ampdoc, persistenceConsent, cidString) {\n  var win = ampdoc.win;\n\n  if ((0, _dom.isIframed)(win)) {\n    // If we are being embedded, try to save the base cid to the viewer.\n    viewerBaseCid(ampdoc, createCidData(cidString));\n  } else {\n    // To use local storage, we need user's consent.\n    persistenceConsent.then(function () {\n      try {\n        win.localStorage.setItem('amp-cid', createCidData(cidString));\n      } catch (ignore) {// Setting localStorage may fail. In practice we don't expect that to\n        // happen a lot (since we don't go anywhere near the quota, but\n        // in particular in Safari private browsing mode it always fails.\n        // In that case we just don't store anything, which is just fine.\n      }\n    });\n  }\n}\n/**\n * Get/set the Base CID from/to the viewer.\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @param {string=} opt_data Stringified JSON object {cid, time}.\n * @return {!Promise<string|undefined>}\n */\n\n\nfunction viewerBaseCid(ampdoc, opt_data) {\n  var viewer = _services.Services.viewerForDoc(ampdoc);\n\n  return viewer.isTrustedViewer().then(function (trusted) {\n    if (!trusted) {\n      return undefined;\n    } // TODO(lannka, #11060): clean up when all Viewers get migrated\n\n\n    (0, _log.dev)().expectedError('CID', 'Viewer does not provide cap=cid');\n    return viewer.sendMessageAwaitResponse('cid', opt_data).then(function (data) {\n      // For backward compatibility: #4029\n      if (data && !(0, _json.tryParseJson)(data)) {\n        // TODO(lannka, #11060): clean up when all Viewers get migrated\n        (0, _log.dev)().expectedError('CID', 'invalid cid format');\n        return JSON.stringify((0, _object.dict)({\n          'time': Date.now(),\n          // CID returned from old API is always fresh\n          'cid': data\n        }));\n      }\n\n      return data;\n    });\n  });\n}\n/**\n * Creates a JSON object that contains the given CID and the current time as\n * a timestamp.\n * @param {string} cidString\n * @return {string}\n */\n\n\nfunction createCidData(cidString) {\n  return JSON.stringify((0, _object.dict)({\n    'time': Date.now(),\n    'cid': cidString\n  }));\n}\n/**\n * Gets the persisted CID data as a promise. It tries to read from\n * localStorage first then from viewer if it is in embedded mode.\n * Returns null if none was found.\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @return {!Promise<?BaseCidInfoDef>}\n */\n\n\nfunction read(ampdoc) {\n  var win = ampdoc.win;\n  var data;\n\n  try {\n    data = win.localStorage.getItem('amp-cid');\n  } catch (ignore) {// If reading from localStorage fails, we assume it is empty.\n  }\n\n  var dataPromise = Promise.resolve(data);\n\n  if (!data && (0, _dom.isIframed)(win)) {\n    // If we are being embedded, try to get the base cid from the viewer.\n    dataPromise = viewerBaseCid(ampdoc);\n  }\n\n  return dataPromise.then(function (data) {\n    if (!data) {\n      return null;\n    }\n\n    var item = (0, _json.parseJson)(data);\n    return {\n      time: item['time'],\n      cid: item['cid']\n    };\n  });\n}\n/**\n * Whether the retrieved cid object is expired and should be ignored.\n * @param {!BaseCidInfoDef} storedCidInfo\n * @return {boolean}\n */\n\n\nfunction isExpired(storedCidInfo) {\n  var createdTime = storedCidInfo.time;\n  var now = Date.now();\n  return createdTime + BASE_CID_MAX_AGE_MILLIS < now;\n}\n/**\n * Whether we should write a new timestamp to the stored cid value.\n * We say yes if it is older than 1 day, so we only do this max once\n * per day to avoid writing to localStorage all the time.\n * @param {!BaseCidInfoDef} storedCidInfo\n * @return {boolean}\n */\n\n\nfunction shouldUpdateStoredTime(storedCidInfo) {\n  var createdTime = storedCidInfo.time;\n  var now = Date.now();\n  return createdTime + ONE_DAY_MILLIS < now;\n}\n/**\n * Returns an array with a total of 128 of random values based on the\n * `win.crypto.getRandomValues` API. If that is not available concatenates\n * a string of other values that might be hard to guess including\n * `Math.random` and the current time.\n * @param {!Window} win\n * @return {!Uint8Array|string} Entropy.\n */\n\n\nfunction getEntropy(win) {\n  // Use win.crypto.getRandomValues to get 128 bits of random value\n  var uint8array = (0, _bytes.getCryptoRandomBytesArray)(win, 16); // 128 bit\n\n  if (uint8array) {\n    return uint8array;\n  } // Support for legacy browsers.\n\n\n  return String(win.location.href + Date.now() + win.Math.random() + win.screen.width + win.screen.height);\n}\n/**\n * Produces an external CID for use in a cookie.\n * @param {!Window} win\n * @return {!Promise<string>} The cid\n */\n\n\nfunction getRandomString64(win) {\n  var entropy = getEntropy(win);\n\n  if (typeof entropy == 'string') {\n    return _services.Services.cryptoFor(win).sha384Base64(entropy);\n  } else {\n    // If our entropy is a pure random number, we can just directly turn it\n    // into base 64\n    var cast =\n    /** @type {!Uint8Array} */\n    entropy;\n    return (0, _promise.tryResolve)(function () {\n      return (0, _base.base64UrlEncodeFromBytes)(cast) // Remove trailing padding\n      .replace(/\\.+$/, '');\n    });\n  }\n}\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @return {*} TODO(#23582): Specify return type\n */\n\n\nfunction installCidService(ampdoc) {\n  return (0, _service.registerServiceBuilderForDoc)(ampdoc, 'cid', Cid);\n}\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @return {!Cid}\n * @private visible for testing\n */\n\n\nfunction cidServiceForDocForTesting(ampdoc) {\n  (0, _service.registerServiceBuilderForDoc)(ampdoc, 'cid', Cid);\n  return (0, _service.getServiceForDoc)(ampdoc, 'cid');\n}\n\n},{\"../cookies\":109,\"../dom\":111,\"../json\":122,\"../log\":125,\"../service\":131,\"../services\":141,\"../url\":148,\"../utils/base64\":150,\"../utils/bytes\":151,\"../utils/object\":154,\"../utils/promise\":156,\"./cache-cid-api\":132,\"./cid-api\":133,\"./viewer-cid-api\":140}],135:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.calculateScriptBaseUrl = calculateScriptBaseUrl;\nexports.calculateExtensionScriptUrl = calculateExtensionScriptUrl;\nexports.calculateEntryPointScriptUrl = calculateEntryPointScriptUrl;\nexports.parseExtensionUrl = parseExtensionUrl;\n\nvar _mode = require(\"../mode\");\n\nvar _config = require(\"../config\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Internal structure that maintains the state of an extension through loading.\n *\n * @typedef {{\n *   extensionId: (string|undefined),\n *   extensionVersion: (string|undefined),\n * }}\n * @private\n */\nvar ExtensionInfoDef;\n/**\n * Calculate the base url for any scripts.\n * @param {!Location} location The window's location\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\n\nfunction calculateScriptBaseUrl(location, opt_isLocalDev) {\n  if (opt_isLocalDev) {\n    var prefix = location.protocol + \"//\" + location.host;\n\n    if (location.protocol == 'about:') {\n      prefix = '';\n    }\n\n    return prefix + \"/dist\";\n  }\n\n  return _config.urls.cdn;\n}\n/**\n * Calculates if we need a single pass folder or not.\n *\n * @return {string}\n */\n\n\nfunction getSinglePassExperimentPath() {\n  return (0, _mode.getMode)().singlePassType ? (0, _mode.getMode)().singlePassType + \"/\" : '';\n}\n/**\n * Calculate script url for an extension.\n * @param {!Location} location The window's location\n * @param {string} extensionId\n * @param {string=} opt_extensionVersion\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\n\n\nfunction calculateExtensionScriptUrl(location, extensionId, opt_extensionVersion, opt_isLocalDev) {\n  var base = calculateScriptBaseUrl(location, opt_isLocalDev);\n  var rtv = (0, _mode.getMode)().rtvVersion;\n\n  if (opt_extensionVersion == null) {\n    opt_extensionVersion = '0.1';\n  }\n\n  var extensionVersion = opt_extensionVersion ? '-' + opt_extensionVersion : '';\n  var spPath = getSinglePassExperimentPath();\n  return base + \"/rtv/\" + rtv + \"/\" + spPath + \"v0/\" + extensionId + extensionVersion + \".js\";\n}\n/**\n * Calculate script url for an entry point.\n * If `opt_rtv` is true, returns the URL matching the current RTV.\n * @param {!Location} location The window's location\n * @param {string} entryPoint\n * @param {boolean=} isLocalDev\n * @param {boolean=} opt_rtv\n * @return {string}\n */\n\n\nfunction calculateEntryPointScriptUrl(location, entryPoint, isLocalDev, opt_rtv) {\n  var base = calculateScriptBaseUrl(location, isLocalDev);\n\n  if (opt_rtv) {\n    var spPath = getSinglePassExperimentPath();\n    return base + \"/rtv/\" + (0, _mode.getMode)().rtvVersion + \"/\" + spPath + entryPoint + \".js\";\n  }\n\n  return base + \"/\" + entryPoint + \".js\";\n}\n/**\n * Parse the extension version from a given script URL.\n * @param {string} scriptUrl\n * @return {!ExtensionInfoDef}\n */\n\n\nfunction parseExtensionUrl(scriptUrl) {\n  var regex = /^(.*)\\/(.*)-([0-9.]+)\\.js$/i;\n  var matches = scriptUrl.match(regex);\n  return {\n    extensionId: matches ? matches[2] : undefined,\n    extensionVersion: matches ? matches[3] : undefined\n  };\n}\n\n},{\"../config\":106,\"../mode\":127}],136:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isLongTaskApiSupported = isLongTaskApiSupported;\nexports.JankMeter = void 0;\n\nvar _services = require(\"../services\");\n\nvar _log = require(\"../log\");\n\nvar _staticTemplate = require(\"../static-template\");\n\nvar _experiments = require(\"../experiments\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n      <div class=\\\"i-amphtml-jank-meter\\\"></div>\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) { if (!raw) { raw = strings.slice(0); } strings.raw = raw; return strings; }\n\n/** @const {number} */\nvar NTH_FRAME = 200;\n\nvar JankMeter =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Window} win\n   */\n  function JankMeter(win) {\n    /** @private {!Window} */\n    this.win_ = win;\n    /** @private {number} */\n\n    this.badFrameCnt_ = 0;\n    /** @private {number} */\n\n    this.totalFrameCnt_ = 0;\n    /** @private {number} */\n\n    this.longTaskChild_ = 0;\n    /** @private {number} */\n\n    this.longTaskSelf_ = 0;\n    /** @private {?number} */\n\n    this.scheduledTime_ = null;\n    /** @private {?./performance-impl.Performance} */\n\n    this.perf_ = _services.Services.performanceForOrNull(win);\n    /** @private {?BatteryManager} */\n\n    this.batteryManager_ = null;\n    /** @private {?number} */\n\n    this.batteryLevelStart_ = null;\n    this.initializeBatteryManager_();\n    /** @private {?PerformanceObserver} */\n\n    this.longTaskObserver_ = null;\n    this.initializeLongTaskObserver_();\n  }\n  /**\n   * Callback for scheduled.\n   */\n\n\n  var _proto = JankMeter.prototype;\n\n  _proto.onScheduled = function onScheduled() {\n    if (!this.isEnabled_()) {\n      return;\n    } // only take the first schedule for the current frame.\n\n\n    if (this.scheduledTime_ == null) {\n      this.scheduledTime_ = this.win_.Date.now();\n    }\n  }\n  /**\n   * Callback for run.\n   */\n  ;\n\n  _proto.onRun = function onRun() {\n    if (!this.isEnabled_() || this.scheduledTime_ == null) {\n      return;\n    }\n\n    var paintLatency = this.win_.Date.now() - this.scheduledTime_;\n    this.scheduledTime_ = null;\n    this.totalFrameCnt_++;\n\n    if (paintLatency > 16) {\n      this.badFrameCnt_++;\n      (0, _log.dev)().info('JANK', 'Paint latency: ' + paintLatency + 'ms');\n    } // Report metrics on Nth frame, so we have sort of normalized numbers.\n\n\n    if (this.perf_ && this.totalFrameCnt_ == NTH_FRAME) {\n      // gfp: Good Frame Probability\n      var gfp = this.calculateGfp_();\n      this.perf_.tickDelta('gfp', gfp); // bf: Bad Frames\n\n      this.perf_.tickDelta('bf', this.badFrameCnt_);\n\n      if (this.longTaskObserver_) {\n        // lts: Long Tasks of Self frame\n        this.perf_.tickDelta('lts', this.longTaskSelf_); // ltc: Long Tasks of Child frames\n\n        this.perf_.tickDelta('ltc', this.longTaskChild_);\n        this.longTaskObserver_.disconnect();\n        this.longTaskObserver_ = null;\n      }\n\n      var batteryDrop = 0;\n\n      if (this.batteryManager_ && this.batteryLevelStart_ != null) {\n        batteryDrop = this.win_.Math.max(0, this.win_.Math.floor(this.batteryManager_.level * 100 - this.batteryLevelStart_)); // bd: Battery Drop\n\n        this.perf_.tickDelta('bd', batteryDrop);\n      }\n\n      this.perf_.flush();\n\n      if (isJankMeterEnabled(this.win_)) {\n        this.displayMeterDisplay_(batteryDrop);\n      }\n    }\n  }\n  /**\n   * Returns if is enabled\n   *\n   * @return {?boolean}\n   */\n  ;\n\n  _proto.isEnabled_ = function isEnabled_() {\n    return isJankMeterEnabled(this.win_) || this.perf_ && this.perf_.isPerformanceTrackingOn() && this.totalFrameCnt_ < NTH_FRAME;\n  }\n  /**\n   * @param {number} batteryDrop\n   * @private\n   */\n  ;\n\n  _proto.displayMeterDisplay_ = function displayMeterDisplay_(batteryDrop) {\n    var doc = this.win_.document;\n    var display = (0, _staticTemplate.htmlFor)(doc)(_templateObject());\n    display.textContent = \"bf:\" + this.badFrameCnt_ + \", lts: \" + this.longTaskSelf_ + \", \" + (\"ltc:\" + this.longTaskChild_ + \", bd:\" + batteryDrop);\n    doc.body.appendChild(display);\n  }\n  /**\n   * Calculate Good Frame Probability, which is a value range from 0 to 100.\n   * @return {number}\n   * @private\n   */\n  ;\n\n  _proto.calculateGfp_ = function calculateGfp_() {\n    return this.win_.Math.floor((this.totalFrameCnt_ - this.badFrameCnt_) / this.totalFrameCnt_ * 100);\n  }\n  /**\n   * Initializes long task observer.\n   */\n  ;\n\n  _proto.initializeLongTaskObserver_ = function initializeLongTaskObserver_() {\n    var _this = this;\n\n    if (!this.isEnabled_() || !isLongTaskApiSupported(this.win_)) {\n      return;\n    }\n\n    this.longTaskObserver_ = new this.win_.PerformanceObserver(function (entryList) {\n      var entries = entryList.getEntries();\n\n      for (var i = 0; i < entries.length; i++) {\n        if (entries[i].entryType == 'longtask') {\n          // longtask is any task with duration of bigger than 50ms\n          // we sum up the number of 50ms a task spans.\n          var span = _this.win_.Math.floor(entries[i].duration / 50);\n\n          if (entries[i].name == 'cross-origin-descendant') {\n            _this.longTaskChild_ += span;\n            (0, _log.user)().info('LONGTASK', \"from child frame \" + entries[i].duration + \"ms\");\n          } else {\n            _this.longTaskSelf_ += span;\n            (0, _log.dev)().info('LONGTASK', \"from self frame \" + entries[i].duration + \"ms\");\n          }\n        }\n      }\n    });\n    this.longTaskObserver_.observe({\n      entryTypes: ['longtask']\n    });\n  }\n  /**\n   * Initializes battery manager.\n   */\n  ;\n\n  _proto.initializeBatteryManager_ = function initializeBatteryManager_() {\n    var _this2 = this;\n\n    if (isBatteryApiSupported(this.win_)) {\n      this.win_.navigator.getBattery().then(function (battery) {\n        _this2.batteryManager_ = battery;\n        _this2.batteryLevelStart_ = battery.level * 100;\n      });\n    }\n  };\n\n  return JankMeter;\n}();\n/**\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nexports.JankMeter = JankMeter;\n\nfunction isJankMeterEnabled(win) {\n  return (0, _experiments.isExperimentOn)(win, 'jank-meter');\n}\n/**\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nfunction isLongTaskApiSupported(win) {\n  return !!win.PerformanceObserver && !!win['TaskAttributionTiming'] && 'containerName' in win['TaskAttributionTiming'].prototype;\n}\n/**\n * @param {!Window} unusedWin\n * @return {boolean}\n */\n\n\nfunction isBatteryApiSupported(unusedWin) {\n  // TODO: (@lannka, #9749)\n  return false;\n}\n\n},{\"../experiments\":115,\"../log\":125,\"../services\":141,\"../static-template\":142}],137:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.MutatorInterface = void 0;\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\n\n/**\n * @interface\n */\nvar MutatorInterface =\n/*#__PURE__*/\nfunction () {\n  function MutatorInterface() {}\n\n  var _proto = MutatorInterface.prototype;\n\n  /**\n   * Requests the runtime to change the element's size. When the size is\n   * successfully updated then the opt_callback is called.\n   * @param {!Element} element\n   * @param {number|undefined} newHeight\n   * @param {number|undefined} newWidth\n   * @param {function()=} opt_callback A callback function.\n   * @param {!../layout-rect.LayoutMarginsChangeDef=} opt_newMargins\n   */\n  _proto.changeSize = function changeSize(element, newHeight, newWidth, opt_callback, opt_newMargins) {}\n  /**\n   * Return a promise that requests the runtime to update the size of\n   * this element to the specified value.\n   * The runtime will schedule this request and attempt to process it\n   * as soon as possible. However, unlike in {@link changeSize}, the runtime\n   * may refuse to make a change in which case it will reject promise, call the\n   * `overflowCallback` method on the target resource with the height value.\n   * Overflow callback is expected to provide the reader with the user action\n   * to update the height manually.\n   * Note that the runtime does not call the `overflowCallback` method if the\n   * requested height is 0 or negative.\n   * If the height is successfully updated then the promise is resolved.\n   * @param {!Element} element\n   * @param {number|undefined} newHeight\n   * @param {number|undefined} newWidth\n   * @param {!../layout-rect.LayoutMarginsChangeDef=} opt_newMargins\n   * @return {!Promise}\n   * @param {?Event=} opt_event\n   */\n  ;\n\n  _proto.attemptChangeSize = function attemptChangeSize(element, newHeight, newWidth, opt_newMargins, opt_event) {}\n  /**\n   * Expands the element.\n   * @param {!Element} element\n   */\n  ;\n\n  _proto.expandElement = function expandElement(element) {}\n  /**\n   * Return a promise that requests runtime to collapse this element.\n   * The runtime will schedule this request and first attempt to resize\n   * the element to height and width 0. If success runtime will set element\n   * display to none, and notify element owner of this collapse.\n   * @param {!Element} element\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.attemptCollapse = function attemptCollapse(element) {}\n  /**\n   * Collapses the element: ensures that it's `display:none`, notifies its\n   * owner and updates the layout box.\n   * @param {!Element} element\n   */\n  ;\n\n  _proto.collapseElement = function collapseElement(element) {}\n  /**\n   * Runs the specified measure, which is called in the \"measure\" vsync phase.\n   * This is simply a proxy to the privileged vsync service.\n   *\n   * @param {function()} measurer\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.measureElement = function measureElement(measurer) {}\n  /**\n   * Runs the specified mutation on the element and ensures that remeasures and\n   * layouts performed for the affected elements.\n   *\n   * This method should be called whenever a significant mutations are done\n   * on the DOM that could affect layout of elements inside this subtree or\n   * its siblings. The top-most affected element should be specified as the\n   * first argument to this method and all the mutation work should be done\n   * in the mutator callback which is called in the \"mutation\" vsync phase.\n   *\n   * @param {!Element} element\n   * @param {function()} mutator\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.mutateElement = function mutateElement(element, mutator) {}\n  /**\n   * Runs the specified mutation on the element and ensures that remeasures and\n   * layouts performed for the affected elements.\n   *\n   * This method should be called whenever a significant mutations are done\n   * on the DOM that could affect layout of elements inside this subtree or\n   * its siblings. The top-most affected element should be specified as the\n   * first argument to this method and all the mutation work should be done\n   * in the mutator callback which is called in the \"mutation\" vsync phase.\n   *\n   * @param {!Element} element\n   * @param {?function()} measurer\n   * @param {function()} mutator\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.measureMutateElement = function measureMutateElement(element, measurer, mutator) {};\n\n  return MutatorInterface;\n}();\n/* eslint-enable no-unused-vars */\n\n\nexports.MutatorInterface = MutatorInterface;\n\n},{}],138:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.installGlobalNavigationHandlerForDoc = installGlobalNavigationHandlerForDoc;\nexports.maybeExpandUrlParamsForTesting = maybeExpandUrlParamsForTesting;\nexports.Navigation = exports.Priority = void 0;\n\nvar _services = require(\"../services\");\n\nvar _dom = require(\"../dom\");\n\nvar _log = require(\"../log\");\n\nvar _object = require(\"../utils/object\");\n\nvar _css = require(\"../css\");\n\nvar _impression = require(\"../impression\");\n\nvar _mode = require(\"../mode\");\n\nvar _service = require(\"../service\");\n\nvar _types = require(\"../types\");\n\nvar _priorityQueue = _interopRequireDefault(require(\"../utils/priority-queue\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TAG = 'navigation';\n/** @private @const {string} */\n\nvar EVENT_TYPE_CLICK = 'click';\n/** @private @const {string} */\n\nvar EVENT_TYPE_CONTEXT_MENU = 'contextmenu';\nvar VALID_TARGETS = ['_top', '_blank'];\n/** @private @const {string} */\n\nvar ORIG_HREF_ATTRIBUTE = 'data-a4a-orig-href';\n/**\n * Key used for retargeting event target originating from shadow DOM.\n * @const {string}\n */\n\nvar AMP_CUSTOM_LINKER_TARGET = '__AMP_CUSTOM_LINKER_TARGET__';\n/**\n * @enum {number} Priority reserved for extensions in anchor mutations.\n * The higher the priority, the sooner it's invoked.\n */\n\nvar Priority = {\n  LINK_REWRITER_MANAGER: 0,\n  ANALYTICS_LINKER: 2\n};\n/**\n * Install navigation service for ampdoc, which handles navigations from anchor\n * tag clicks and other runtime features like AMP.navigateTo().\n *\n * Immediately instantiates the service.\n *\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n */\n\nexports.Priority = Priority;\n\nfunction installGlobalNavigationHandlerForDoc(ampdoc) {\n  (0, _service.registerServiceBuilderForDoc)(ampdoc, TAG, Navigation,\n  /* opt_instantiate */\n  true);\n}\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @param {!Event} e\n * @visibleForTesting\n */\n\n\nfunction maybeExpandUrlParamsForTesting(ampdoc, e) {\n  maybeExpandUrlParams(ampdoc, e);\n}\n/**\n * Intercept any click on the current document and prevent any\n * linking to an identifier from pushing into the history stack.\n * @implements {../service.EmbeddableService}\n * @visibleForTesting\n */\n\n\nvar Navigation =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   * @param {(!Document|!ShadowRoot)=} opt_rootNode\n   */\n  function Navigation(ampdoc, opt_rootNode) {\n    var _this = this;\n\n    // TODO(#22733): remove subroooting once ampdoc-fie is launched.\n\n    /** @const {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampdoc;\n    /** @private @const {!Document|!ShadowRoot} */\n\n    this.rootNode_ = opt_rootNode || ampdoc.getRootNode();\n    /** @private @const {!./viewport/viewport-interface.ViewportInterface} */\n\n    this.viewport_ = _services.Services.viewportForDoc(this.ampdoc);\n    /** @private @const {!./viewer-interface.ViewerInterface} */\n\n    this.viewer_ = _services.Services.viewerForDoc(this.ampdoc);\n    /** @private @const {!./history-impl.History} */\n\n    this.history_ = _services.Services.historyForDoc(this.ampdoc);\n    /** @private @const {!./platform-impl.Platform} */\n\n    this.platform_ = _services.Services.platformFor(this.ampdoc.win);\n    /** @private @const {boolean} */\n\n    this.isIosSafari_ = this.platform_.isIos() && this.platform_.isSafari();\n    /** @private @const {boolean} */\n\n    this.isIframed_ = (0, _dom.isIframed)(this.ampdoc.win) && this.viewer_.isOvertakeHistory();\n    /** @private @const {boolean} */\n\n    this.isEmbed_ = this.rootNode_ != this.ampdoc.getRootNode() || !!this.ampdoc.getParent();\n    /** @private @const {boolean} */\n\n    this.isInABox_ = (0, _mode.getMode)(this.ampdoc.win).runtime == 'inabox';\n    /**\n     * Must use URL parsing scoped to `rootNode_` for correct FIE behavior.\n     * @private @const {!Element|!ShadowRoot}\n     */\n\n    this.serviceContext_ =\n    /** @type {!Element|!ShadowRoot} */\n    this.rootNode_.nodeType == Node.DOCUMENT_NODE ? this.rootNode_.documentElement : this.rootNode_;\n    /** @private @const {!function(!Event)|undefined} */\n\n    this.boundHandle_ = this.handle_.bind(this);\n    this.rootNode_.addEventListener(EVENT_TYPE_CLICK, this.boundHandle_);\n    this.rootNode_.addEventListener(EVENT_TYPE_CONTEXT_MENU, this.boundHandle_);\n    /** @private {boolean} */\n\n    this.appendExtraParams_ = false;\n    (0, _impression.shouldAppendExtraParams)(this.ampdoc).then(function (res) {\n      _this.appendExtraParams_ = res;\n    });\n    /**\n     * Lazy-generated list of A2A-enabled navigation features.\n     * @private {?Array<string>}\n     */\n\n    this.a2aFeatures_ = null;\n    /**\n     * @type {!PriorityQueue<function(!Element, !Event)>}\n     * @private\n     * @const\n     */\n\n    this.anchorMutators_ = new _priorityQueue.default();\n    /**\n     * @type {!PriorityQueue<function(string)>}\n     * @private\n     * @const\n     */\n\n    this.navigateToMutators_ = new _priorityQueue.default();\n  }\n  /**\n   * Registers a handler that performs URL replacement on the href\n   * of an ad click.\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   * @param {!Window} win\n   */\n\n\n  Navigation.installAnchorClickInterceptor = function installAnchorClickInterceptor(ampdoc, win) {\n    win.document.documentElement.addEventListener('click', maybeExpandUrlParams.bind(null, ampdoc),\n    /* capture */\n    true);\n  }\n  /**\n   * @param {!Window} embedWin\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   * @nocollapse\n   */\n  ;\n\n  Navigation.installInEmbedWindow = function installInEmbedWindow(embedWin, ampdoc) {\n    (0, _service.installServiceInEmbedScope)(embedWin, TAG, new Navigation(ampdoc, embedWin.document));\n  }\n  /**\n   * Removes all event listeners.\n   */\n  ;\n\n  var _proto = Navigation.prototype;\n\n  _proto.cleanup = function cleanup() {\n    if (this.boundHandle_) {\n      this.rootNode_.removeEventListener(EVENT_TYPE_CLICK, this.boundHandle_);\n      this.rootNode_.removeEventListener(EVENT_TYPE_CONTEXT_MENU, this.boundHandle_);\n    }\n  }\n  /**\n   * Opens a new window with the specified target.\n   *\n   * @param {!Window} win A window to use to open a new window.\n   * @param {string} url THe URL to open.\n   * @param {string} target The target for the newly opened window.\n   * @param {boolean} opener Whether or not the new window should have acccess\n   *   to the opener (win).\n   */\n  ;\n\n  _proto.openWindow = function openWindow(win, url, target, opener) {\n    var options = ''; // We don't pass noopener for Chrome since it opens a new window without\n    // tabs. Instead, we remove the opener property from the newly opened\n    // window.\n    // Note: for Safari, we need to use noopener instead of clearing the opener\n    // property.\n\n    if ((this.platform_.isIos() || !this.platform_.isChrome()) && !opener) {\n      options += 'noopener';\n    }\n\n    var newWin = (0, _dom.openWindowDialog)(win, url, target, options); // For Chrome, since we cannot use noopener.\n\n    if (newWin && !opener) {\n      newWin.opener = null;\n    }\n  }\n  /**\n   * Navigates a window to a URL.\n   *\n   * If opt_requestedBy matches a feature name in a <meta> tag with attribute\n   * name=\"amp-to-amp-navigation\", then treats the URL as an AMP URL (A2A).\n   *\n   * @param {!Window} win\n   * @param {string} url\n   * @param {string=} opt_requestedBy\n   * @param {!{\n   *   target: (string|undefined),\n   *   opener: (boolean|undefined),\n   * }=} opt_options\n   */\n  ;\n\n  _proto.navigateTo = function navigateTo(win, url, opt_requestedBy, _temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$target = _ref.target,\n        target = _ref$target === void 0 ? '_top' : _ref$target,\n        _ref$opener = _ref.opener,\n        opener = _ref$opener === void 0 ? false : _ref$opener;\n\n    url = this.applyNavigateToMutators_(url);\n\n    var urlService = _services.Services.urlForDoc(this.serviceContext_);\n\n    if (!urlService.isProtocolValid(url)) {\n      (0, _log.user)().error(TAG, 'Cannot navigate to invalid protocol: ' + url);\n      return;\n    }\n\n    (0, _log.userAssert)(VALID_TARGETS.includes(target), \"Target '\" + target + \"' not supported.\"); // Resolve navigateTos relative to the source URL, not the proxy URL.\n\n    url = urlService.getSourceUrl(url); // If we have a target of \"_blank\", we will want to open a new window. A\n    // target of \"_top\" should behave like it would on an anchor tag and\n    // update the URL.\n\n    if (target == '_blank') {\n      this.openWindow(win, url, target, opener);\n      return;\n    } // If this redirect was requested by a feature that opted into A2A,\n    // try to ask the viewer to navigate this AMP URL.\n\n\n    if (opt_requestedBy) {\n      if (!this.a2aFeatures_) {\n        this.a2aFeatures_ = this.queryA2AFeatures_();\n      }\n\n      if (this.a2aFeatures_.includes(opt_requestedBy)) {\n        if (this.navigateToAmpUrl(url, opt_requestedBy)) {\n          return;\n        }\n      }\n    } // Otherwise, perform normal behavior of navigating the top frame.\n\n\n    win.top.location.href = url;\n  }\n  /**\n   * Requests A2A navigation to the given destination. If the viewer does\n   * not support this operation, does nothing.\n   * The URL is assumed to be in AMP Cache format already.\n   * @param {string} url An AMP article URL.\n   * @param {string} requestedBy Informational string about the entity that\n   *     requested the navigation.\n   * @return {boolean} Returns true if navigation message was sent to viewer.\n   *     Otherwise, returns false.\n   */\n  ;\n\n  _proto.navigateToAmpUrl = function navigateToAmpUrl(url, requestedBy) {\n    if (this.viewer_.hasCapability('a2a')) {\n      this.viewer_.sendMessage('a2aNavigate', (0, _object.dict)({\n        'url': url,\n        'requestedBy': requestedBy\n      }));\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * @return {!Array<string>}\n   * @private\n   */\n  ;\n\n  _proto.queryA2AFeatures_ = function queryA2AFeatures_() {\n    var meta = this.rootNode_.querySelector('meta[name=\"amp-to-amp-navigation\"]');\n\n    if (meta && meta.hasAttribute('content')) {\n      return meta.getAttribute('content').split(',').map(function (s) {\n        return s.trim();\n      });\n    }\n\n    return [];\n  }\n  /**\n   * Intercept any click on the current document and prevent any\n   * linking to an identifier from pushing into the history stack.\n   *\n   * This also handles custom protocols (e.g. whatsapp://) when iframed\n   * on iOS Safari.\n   *\n   * @param {!Event} e\n   * @private\n   */\n  ;\n\n  _proto.handle_ = function handle_(e) {\n    if (e.defaultPrevented) {\n      return;\n    }\n\n    var element = (0, _log.dev)().assertElement(e[AMP_CUSTOM_LINKER_TARGET] || e.target);\n    var target = (0, _dom.closestAncestorElementBySelector)(element, 'A');\n\n    if (!target || !target.href) {\n      return;\n    }\n\n    if (e.type == EVENT_TYPE_CLICK) {\n      this.handleClick_(target, e);\n    } else if (e.type == EVENT_TYPE_CONTEXT_MENU) {\n      this.handleContextMenuClick_(target, e);\n    }\n  }\n  /**\n   * @param {!Element} target\n   * @param {!Event} e\n   * @private\n   */\n  ;\n\n  _proto.handleClick_ = function handleClick_(target, e) {\n    this.expandVarsForAnchor_(target);\n    var tgtLoc = this.parseUrl_(target.href); // Handle AMP-to-AMP navigation if rel=amphtml.\n\n    if (this.handleA2AClick_(e, target, tgtLoc)) {\n      return;\n    } // Handle navigating to custom protocol if applicable.\n\n\n    if (this.handleCustomProtocolClick_(e, target, tgtLoc)) {\n      return;\n    } // In test mode, we're not able to properly fix the anchor tag's base URL.\n    // So, we have to use the (mocked) window's location instead.\n\n\n    var baseHref = (0, _mode.getMode)().test && !this.isEmbed_ ? this.ampdoc.win.location.href : '';\n    var curLoc = this.parseUrl_(baseHref);\n    var tgtHref = getHref(tgtLoc);\n    var curHref = getHref(curLoc);\n\n    if (tgtHref != curHref) {\n      // Only apply anchor mutator if this is an external navigation\n      this.applyAnchorMutators_(target, e);\n      tgtLoc = this.parseUrl_(target.href);\n    } // Finally, handle normal click-navigation behavior.\n\n\n    this.handleNavClick_(e, target, tgtLoc, curLoc);\n  }\n  /**\n   * @param {!Element} target\n   * @param {!Event} e\n   * @private\n   */\n  ;\n\n  _proto.handleContextMenuClick_ = function handleContextMenuClick_(target, e) {\n    // Handles contextmenu click. Note that currently this only deals\n    // with url variable substitution and expansion, as there is\n    // straightforward way of determining what the user clicked in the\n    // context menu, required for A2A navigation and custom link protocol\n    // handling.\n    // TODO(alabiaga): investigate fix for handling A2A and custom link\n    // protocols.\n    this.expandVarsForAnchor_(target);\n    this.applyAnchorMutators_(target, e);\n  }\n  /**\n   * Apply anchor transformations.\n   * @param {!Element} target\n   * @param {!Event} e\n   */\n  ;\n\n  _proto.applyAnchorMutators_ = function applyAnchorMutators_(target, e) {\n    this.anchorMutators_.forEach(function (anchorMutator) {\n      anchorMutator(target, e);\n    });\n  }\n  /**\n   * Apply URL transformations for AMP.navigateTo.\n   * @param {string} url\n   * @return {string}\n   */\n  ;\n\n  _proto.applyNavigateToMutators_ = function applyNavigateToMutators_(url) {\n    this.navigateToMutators_.forEach(function (mutator) {\n      url = mutator(url);\n    });\n    return url;\n  }\n  /**\n   * @param {!Element} el\n   * @private\n   */\n  ;\n\n  _proto.expandVarsForAnchor_ = function expandVarsForAnchor_(el) {\n    // First check if need to handle external link decoration.\n    var defaultExpandParamsUrl = null;\n\n    if (this.appendExtraParams_ && !this.isEmbed_) {\n      // Only decorate outgoing link when needed to and is not in FIE.\n      defaultExpandParamsUrl = (0, _impression.getExtraParamsUrl)(this.ampdoc.win, el);\n    }\n\n    var urlReplacements = _services.Services.urlReplacementsForDoc(el);\n\n    urlReplacements.maybeExpandLink(el, defaultExpandParamsUrl);\n  }\n  /**\n   * Handles clicking on a custom protocol link.\n   * Returns true if the navigation was handled. Otherwise, returns false.\n   * @param {!Event} e\n   * @param {!Element} target\n   * @param {!Location} location\n   * @return {boolean}\n   * @private\n   */\n  ;\n\n  _proto.handleCustomProtocolClick_ = function handleCustomProtocolClick_(e, target, location) {\n    // Handle custom protocols only if the document is iframed.\n    if (!this.isIframed_) {\n      return false;\n    }\n    /** @const {!Window} */\n\n\n    var win = (0, _types.toWin)(target.ownerDocument.defaultView);\n    var url = target.href;\n    var protocol = location.protocol; // On Safari iOS, custom protocol links will fail to open apps when the\n    // document is iframed - in order to go around this, we set the top.location\n    // to the custom protocol href.\n\n    var isFTP = protocol == 'ftp:'; // In case of FTP Links in embedded documents always open then in _blank.\n\n    if (isFTP) {\n      (0, _dom.openWindowDialog)(win, url, '_blank');\n      e.preventDefault();\n      return true;\n    }\n\n    var isNormalProtocol = /^(https?|mailto):$/.test(protocol);\n\n    if (this.isIosSafari_ && !isNormalProtocol) {\n      (0, _dom.openWindowDialog)(win, url, '_top'); // Without preventing default the page would should an alert error twice\n      // in the case where there's no app to handle the custom protocol.\n\n      e.preventDefault();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Handles clicking on an AMP link.\n   * Returns true if the navigation was handled. Otherwise, returns false.\n   * @param {!Event} e\n   * @param {!Element} target\n   * @param {!Location} location\n   * @return {boolean}\n   * @private\n   */\n  ;\n\n  _proto.handleA2AClick_ = function handleA2AClick_(e, target, location) {\n    if (!target.hasAttribute('rel')) {\n      return false;\n    }\n\n    var relations = target.getAttribute('rel').split(' ').map(function (s) {\n      return s.trim();\n    });\n\n    if (!relations.includes('amphtml')) {\n      return false;\n    } // The viewer may not support the capability for navigating AMP links.\n\n\n    if (this.navigateToAmpUrl(location.href, '<a rel=amphtml>')) {\n      e.preventDefault();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Handles clicking on a link with hash navigation.\n   * @param {!Event} e\n   * @param {!Element} target\n   * @param {!Location} tgtLoc\n   * @param {!Location} curLoc\n   * @private\n   */\n  ;\n\n  _proto.handleNavClick_ = function handleNavClick_(e, target, tgtLoc, curLoc) {\n    var tgtHref = getHref(tgtLoc);\n    var curHref = getHref(curLoc); // If the current target anchor link is the same origin + path\n    // as the current document then we know we are just linking to an\n    // identifier in the document. Otherwise, it's an external navigation.\n\n    if (!tgtLoc.hash || tgtHref != curHref) {\n      if (this.isEmbed_ || this.isInABox_) {\n        // Target in the embed must be either _top or _blank. If none specified,\n        // force to _blank.\n        var targetAttr = (target.getAttribute('target') || '').toLowerCase();\n\n        if (targetAttr != '_top' && targetAttr != '_blank') {\n          target.setAttribute('target', '_blank');\n        }\n\n        return; // bail early.\n      } // Accessibility fix for IE browser.\n      // Issue: anchor navigation in IE changes visual focus of the browser\n      // and shifts to the element being linked to,\n      // where the input focus stays where it was.\n      // @see https://humanwhocodes.com/blog/2013/01/15/fixing-skip-to-content-links/\n      // @see https://github.com/ampproject/amphtml/issues/18671\n\n\n      if (_services.Services.platformFor(this.ampdoc.win).isIe()) {\n        var internalTargetElmId = tgtLoc.hash.substring(1);\n        var internalElm = this.ampdoc.getElementById(internalTargetElmId);\n\n        if (internalElm) {\n          if (!/^(?:a|select|input|button|textarea)$/i.test(internalElm.tagName)) {\n            internalElm.tabIndex = -1;\n          }\n\n          (0, _dom.tryFocus)(internalElm);\n        }\n      }\n\n      return;\n    }\n\n    this.handleInternalNavigation_(e, tgtLoc, curLoc);\n  }\n  /**\n   * Handles clicking on an internal link\n   * @param {!Event} e\n   * @param {!Location} tgtLoc\n   * @param {!Location} curLoc\n   * @private\n   */\n  ;\n\n  _proto.handleInternalNavigation_ = function handleInternalNavigation_(e, tgtLoc, curLoc) {\n    var _this2 = this;\n\n    // We prevent default so that the current click does not push\n    // into the history stack as this messes up the external documents\n    // history which contains the amp document.\n    e.preventDefault(); // For an embed, do not perform scrolling or global history push - both have\n    // significant UX and browser problems.\n\n    if (this.isEmbed_) {\n      return;\n    } // Look for the referenced element.\n\n\n    var hash = tgtLoc.hash.slice(1);\n    var elem = null;\n\n    if (hash) {\n      var escapedHash = (0, _css.escapeCssSelectorIdent)(hash);\n      elem = this.rootNode_.getElementById(hash) || // Fallback to anchor[name] if element with id is not found.\n      // Linking to an anchor element with name is obsolete in html5.\n      this.rootNode_.\n      /*OK*/\n      querySelector(\"a[name=\\\"\" + escapedHash + \"\\\"]\");\n    } // If possible do update the URL with the hash. As explained above\n    // we do `replace` to avoid messing with the container's history.\n\n\n    if (tgtLoc.hash != curLoc.hash) {\n      this.history_.replaceStateForTarget(tgtLoc.hash).then(function () {\n        _this2.scrollToElement_(elem, hash);\n      });\n    } else {\n      // If the hash did not update just scroll to the element.\n      this.scrollToElement_(elem, hash);\n    }\n  }\n  /**\n   * @param {function(!Element, !Event)} callback\n   * @param {number} priority\n   */\n  ;\n\n  _proto.registerAnchorMutator = function registerAnchorMutator(callback, priority) {\n    this.anchorMutators_.enqueue(callback, priority);\n  }\n  /**\n   * @param {function(string)} callback\n   * @param {number} priority\n   */\n  ;\n\n  _proto.registerNavigateToMutator = function registerNavigateToMutator(callback, priority) {\n    this.navigateToMutators_.enqueue(callback, priority);\n  }\n  /**\n   * Scrolls the page to the given element.\n   * @param {?Element} elem\n   * @param {string} hash\n   * @private\n   */\n  ;\n\n  _proto.scrollToElement_ = function scrollToElement_(elem, hash) {\n    var _this3 = this;\n\n    // Scroll to the element if found.\n    if (elem) {\n      // The first call to scrollIntoView overrides browsers' default scrolling\n      // behavior. The second call insides setTimeout allows us to scroll to\n      // that element properly. Without doing this, the viewport will not catch\n      // the updated scroll position on iOS Safari and hence calculate the wrong\n      // scrollTop for the scrollbar jumping the user back to the top for\n      // failing to calculate the new jumped offset. Without the first call\n      // there will be a visual jump due to browser scroll. See\n      // https://github.com/ampproject/amphtml/issues/5334 for more details.\n      this.viewport_.\n      /*OK*/\n      scrollIntoView(elem);\n\n      _services.Services.timerFor(this.ampdoc.win).delay(function () {\n        return _this3.viewport_.\n        /*OK*/\n        scrollIntoView((0, _log.dev)().assertElement(elem));\n      }, 1);\n    } else {\n      (0, _log.dev)().warn(TAG, \"failed to find element with id=\" + hash + \" or a[name=\" + hash + \"]\");\n    }\n  }\n  /**\n   * @param {string} url\n   * @return {!Location}\n   * @private\n   */\n  ;\n\n  _proto.parseUrl_ = function parseUrl_(url) {\n    return _services.Services.urlForDoc(this.serviceContext_).parse(url);\n  };\n\n  return Navigation;\n}();\n/**\n * Handle click on links and replace variables in the click URL.\n * The function changes the actual href value and stores the\n * template in the ORIGINAL_HREF_ATTRIBUTE attribute\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @param {!Event} e\n */\n\n\nexports.Navigation = Navigation;\n\nfunction maybeExpandUrlParams(ampdoc, e) {\n  var target = (0, _dom.closestAncestorElementBySelector)((0, _log.dev)().assertElement(e.target), 'A');\n\n  if (!target || !target.href) {\n    // Not a click on a link.\n    return;\n  }\n\n  var hrefToExpand = target.getAttribute(ORIG_HREF_ATTRIBUTE) || target.getAttribute('href');\n\n  if (!hrefToExpand) {\n    return;\n  }\n\n  var vars = {\n    'CLICK_X': function CLICK_X() {\n      return e.pageX;\n    },\n    'CLICK_Y': function CLICK_Y() {\n      return e.pageY;\n    }\n  };\n\n  var newHref = _services.Services.urlReplacementsForDoc(target).expandUrlSync(hrefToExpand, vars, undefined,\n  /* opt_whitelist */\n  {\n    // For now we only allow to replace the click location vars\n    // and nothing else.\n    // NOTE: Addition to this whitelist requires additional review.\n    'CLICK_X': true,\n    'CLICK_Y': true\n  });\n\n  if (newHref != hrefToExpand) {\n    // Store original value so that later clicks can be processed with\n    // freshest values.\n    if (!target.getAttribute(ORIG_HREF_ATTRIBUTE)) {\n      target.setAttribute(ORIG_HREF_ATTRIBUTE, hrefToExpand);\n    }\n\n    target.setAttribute('href', newHref);\n  }\n}\n/**\n * Calculate and return the href from the Location\n * @param {!Location} location\n * @return {string}\n */\n\n\nfunction getHref(location) {\n  return \"\" + location.origin + location.pathname + location.search;\n}\n\n},{\"../css\":110,\"../dom\":111,\"../impression\":117,\"../log\":125,\"../mode\":127,\"../service\":131,\"../services\":141,\"../types\":145,\"../utils/object\":154,\"../utils/priority-queue\":155}],139:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.ResourcesInterface = exports.READY_SCAN_SIGNAL = void 0;\n\nvar _mutatorInterface = require(\"./mutator-interface\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/** @const {string} */\nvar READY_SCAN_SIGNAL = 'ready-scan';\n/* eslint-disable no-unused-vars */\n\n/**\n * @interface\n */\n\nexports.READY_SCAN_SIGNAL = READY_SCAN_SIGNAL;\n\nvar ResourcesInterface =\n/*#__PURE__*/\nfunction (_MutatorInterface) {\n  _inheritsLoose(ResourcesInterface, _MutatorInterface);\n\n  function ResourcesInterface() {\n    return _MutatorInterface.apply(this, arguments) || this;\n  }\n\n  var _proto = ResourcesInterface.prototype;\n\n  /**\n   * Returns a list of resources.\n   * @return {!Array<!./resource.Resource>}\n   * @export\n   */\n  _proto.get = function get() {}\n  /**\n   * @return {!./ampdoc-impl.AmpDoc}\n   */\n  ;\n\n  _proto.getAmpdoc = function getAmpdoc() {}\n  /**\n   * Returns the {@link Resource} instance corresponding to the specified AMP\n   * Element. If no Resource is found, the exception is thrown.\n   * @param {!AmpElement} element\n   * @return {!./resource.Resource}\n   */\n  ;\n\n  _proto.getResourceForElement = function getResourceForElement(element) {}\n  /**\n   * Returns the {@link Resource} instance corresponding to the specified AMP\n   * Element. Returns null if no resource is found.\n   * @param {!AmpElement} element\n   * @return {?./resource.Resource}\n   */\n  ;\n\n  _proto.getResourceForElementOptional = function getResourceForElementOptional(element) {}\n  /**\n   * Returns the direction the user last scrolled.\n   *  - -1 for scrolling up\n   *  - 1 for scrolling down\n   *  - Defaults to 1\n   * TODO(lannka): this method should not belong to resources.\n   * @return {number}\n   */\n  ;\n\n  _proto.getScrollDirection = function getScrollDirection() {}\n  /**\n   * Signals that an element has been added to the DOM. Resources manager\n   * will start tracking it from this point on.\n   * @param {!AmpElement} element\n   */\n  ;\n\n  _proto.add = function add(element) {}\n  /**\n   * Signals that an element has been upgraded to the DOM. Resources manager\n   * will perform build and enable layout/viewport signals for this element.\n   * @param {!AmpElement} element\n   */\n  ;\n\n  _proto.upgraded = function upgraded(element) {}\n  /**\n   * Signals that an element has been removed to the DOM. Resources manager\n   * will stop tracking it from this point on.\n   * @param {!AmpElement} element\n   */\n  ;\n\n  _proto.remove = function remove(element) {}\n  /**\n   * Schedules layout or preload for the specified resource.\n   * @param {!./resource.Resource} resource\n   * @param {boolean} layout\n   * @param {number=} opt_parentPriority\n   * @param {boolean=} opt_forceOutsideViewport\n   * @package\n   */\n  ;\n\n  _proto.scheduleLayoutOrPreload = function scheduleLayoutOrPreload(resource, layout, opt_parentPriority, opt_forceOutsideViewport) {}\n  /**\n   * Schedules the work pass at the latest with the specified delay.\n   * @param {number=} opt_delay\n   * @param {boolean=} opt_relayoutAll\n   * @return {boolean}\n   */\n  ;\n\n  _proto.schedulePass = function schedulePass(opt_delay, opt_relayoutAll) {}\n  /**\n   * Registers a callback to be called when the next pass happens.\n   * @param {function()} callback\n   */\n  ;\n\n  _proto.onNextPass = function onNextPass(callback) {}\n  /**\n   * @return {!Promise} when first pass executed.\n   */\n  ;\n\n  _proto.whenFirstPass = function whenFirstPass() {}\n  /**\n   * Called when main AMP binary is fully initialized.\n   * May never be called in Shadow Mode.\n   */\n  ;\n\n  _proto.ampInitComplete = function ampInitComplete() {}\n  /**\n   * Updates the priority of the resource. If there are tasks currently\n   * scheduled, their priority is updated as well.\n   * @param {!Element} element\n   * @param {number} newLayoutPriority\n   */\n  ;\n\n  _proto.updateLayoutPriority = function updateLayoutPriority(element, newLayoutPriority) {};\n\n  return ResourcesInterface;\n}(_mutatorInterface.MutatorInterface);\n/* eslint-enable no-unused-vars */\n\n\nexports.ResourcesInterface = ResourcesInterface;\n\n},{\"./mutator-interface\":137}],140:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.ViewerCidApi = void 0;\n\nvar _services = require(\"../services\");\n\nvar _object = require(\"../utils/object\");\n\nvar _url = require(\"../url\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Exposes CID API if provided by the Viewer.\n */\nvar ViewerCidApi =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of ViewerCidApi.\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   */\n  function ViewerCidApi(ampdoc) {\n    /** @private {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n    /** @private {!./viewer-interface.ViewerInterface} */\n\n    this.viewer_ = _services.Services.viewerForDoc(this.ampdoc_);\n\n    var _Services$documentInf = _services.Services.documentInfoForDoc(this.ampdoc_),\n        canonicalUrl = _Services$documentInf.canonicalUrl;\n    /** @private {?string} */\n\n\n    this.canonicalOrigin_ = canonicalUrl ? (0, _url.parseUrlDeprecated)(canonicalUrl).origin : null;\n  }\n  /**\n   * Resolves to true if Viewer is trusted and supports CID API.\n   * @return {!Promise<boolean>}\n   */\n\n\n  var _proto = ViewerCidApi.prototype;\n\n  _proto.isSupported = function isSupported() {\n    if (!this.viewer_.hasCapability('cid')) {\n      return Promise.resolve(false);\n    }\n\n    return this.viewer_.isTrustedViewer();\n  }\n  /**\n   * Returns scoped CID retrieved from the Viewer.\n   * @param {string|undefined} apiKey\n   * @param {string} scope\n   * @return {!Promise<?JsonObject|string|undefined>}\n   */\n  ;\n\n  _proto.getScopedCid = function getScopedCid(apiKey, scope) {\n    var payload = (0, _object.dict)({\n      'scope': scope,\n      'clientIdApi': !!apiKey,\n      'canonicalOrigin': this.canonicalOrigin_\n    });\n\n    if (apiKey) {\n      payload['apiKey'] = apiKey;\n    }\n\n    return this.viewer_.sendMessageAwaitResponse('cid', payload);\n  };\n\n  return ViewerCidApi;\n}();\n\nexports.ViewerCidApi = ViewerCidApi;\n\n},{\"../services\":141,\"../url\":148,\"../utils/object\":154}],141:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.Services = exports.SubscriptionService = void 0;\n\nvar _service = require(\"./service\");\n\nvar _elementService = require(\"./element-service\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nvar SubscriptionService;\nexports.SubscriptionService = SubscriptionService;\n\nvar Services =\n/*#__PURE__*/\nfunction () {\n  function Services() {}\n\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  Services.accessServiceForDoc = function accessServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'access', 'amp-access')\n    );\n  }\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  ;\n\n  Services.accessServiceForDocOrNull = function accessServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'access', 'amp-access')\n    );\n  }\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  ;\n\n  Services.subscriptionsServiceForDoc = function subscriptionsServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!SubscriptionService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  ;\n\n  Services.subscriptionsServiceForDocOrNull = function subscriptionsServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?SubscriptionService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  ;\n\n  Services.actionServiceForDoc = function actionServiceForDoc(element) {\n    return (\n      /** @type {!./service/action-impl.ActionService} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'action')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  ;\n\n  Services.standardActionsForDoc = function standardActionsForDoc(element) {\n    return (\n      /** @type {!./service/standard-actions-impl.StandardActions} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'standard-actions')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  ;\n\n  Services.activityForDoc = function activityForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'activity', 'amp-analytics')\n    );\n  }\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  ;\n\n  Services.ampdocServiceFor = function ampdocServiceFor(window) {\n    return (\n      /** @type {!./service/ampdoc-impl.AmpDocService} */\n      (0, _service.getService)(window, 'ampdoc')\n    );\n  }\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  ;\n\n  Services.ampdoc = function ampdoc(nodeOrAmpDoc) {\n    return (0, _service.getAmpdoc)(nodeOrAmpDoc);\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  ;\n\n  Services.analyticsForDoc = function analyticsForDoc(element, loadAnalytics) {\n    if (loadAnalytics === void 0) {\n      loadAnalytics = false;\n    }\n\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      var ampdoc = (0, _service.getAmpdoc)(element);\n      Services.extensionsFor(ampdoc.win).\n      /*OK*/\n      installExtensionForDoc(ampdoc, 'amp-analytics');\n    }\n\n    return (\n      /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'amp-analytics-instrumentation', 'amp-analytics')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  ;\n\n  Services.analyticsForDocOrNull = function analyticsForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'amp-analytics-instrumentation', 'amp-analytics')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  ;\n\n  Services.batchedXhrFor = function batchedXhrFor(window) {\n    return (\n      /** @type {!./service/batched-xhr-impl.BatchedXhr} */\n      (0, _service.getService)(window, 'batched-xhr')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  ;\n\n  Services.bindForDocOrNull = function bindForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */\n      (0, _elementService.getElementServiceIfAvailableForDocInEmbedScope)(element, 'bind', 'amp-bind')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  ;\n\n  Services.cidForDoc = function cidForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/cid-impl.CidDef>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'cid')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  ;\n\n  Services.navigationForDoc = function navigationForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/navigation.Navigation} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'navigation')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  ;\n\n  Services.loaderServiceForDoc = function loaderServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'loader', 'amp-loader')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  ;\n\n  Services.standaloneServiceForDoc = function standaloneServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'standalone', 'amp-standalone')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  ;\n\n  Services.cryptoFor = function cryptoFor(window) {\n    return (\n      /** @type {!./service/crypto-impl.Crypto} */\n      (0, _service.getService)(window, 'crypto')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  ;\n\n  Services.documentInfoForDoc = function documentInfoForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/document-info-impl.DocInfo} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'documentInfo').get()\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  ;\n\n  Services.extensionsFor = function extensionsFor(window) {\n    return (\n      /** @type {!./service/extensions-impl.Extensions} */\n      (0, _service.getService)(window, 'extensions')\n    );\n  }\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  ;\n\n  Services.formSubmitForDoc = function formSubmitForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  ;\n\n  Services.hiddenObserverForDoc = function hiddenObserverForDoc(element) {\n    return (\n      /** @type {!./service/hidden-observer-impl.HiddenObserver} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'hidden-observer')\n    );\n  }\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  ;\n\n  Services.historyForDoc = function historyForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/history-impl.History} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'history')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  ;\n\n  Services.inputFor = function inputFor(win) {\n    return (0, _service.getService)(win, 'input');\n  }\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  ;\n\n  Services.inputmaskServiceForDocOrNull = function inputmaskServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  ;\n\n  Services.ownersForDoc = function ownersForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/owners-interface.OwnersInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'owners')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  ;\n\n  Services.performanceFor = function performanceFor(window) {\n    return (\n      /** @type {!./service/performance-impl.Performance}*/\n      (0, _service.getService)(window, 'performance')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  ;\n\n  Services.performanceForOrNull = function performanceForOrNull(window) {\n    return (\n      /** @type {!./service/performance-impl.Performance}*/\n      (0, _service.getExistingServiceOrNull)(window, 'performance')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  ;\n\n  Services.platformFor = function platformFor(window) {\n    return (\n      /** @type {!./service/platform-impl.Platform} */\n      (0, _service.getService)(window, 'platform')\n    );\n  }\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  ;\n\n  Services.positionObserverForDoc = function positionObserverForDoc(element) {\n    return (\n      /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */\n      (0, _service.getServiceForDoc)(element, 'position-observer')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  ;\n\n  Services.resourcesForDoc = function resourcesForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/resources-interface.ResourcesInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'resources')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  ;\n\n  Services.resourcesPromiseForDoc = function resourcesPromiseForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'resources')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?{incomingFragment: string, outgoingFragment: string}>}\n   */\n  ;\n\n  Services.shareTrackingForOrNull = function shareTrackingForOrNull(win) {\n    return (\n      /** @type {!Promise<?{incomingFragment: string, outgoingFragment: string}>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'share-tracking', 'amp-share-tracking', true)\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>}\n   */\n  ;\n\n  Services.storyVariableServiceForOrNull = function storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-variable', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  ;\n\n  Services.storyVariableService = function storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-variable')\n    );\n  }\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>}\n   */\n  ;\n\n  Services.storyStoreServiceForOrNull = function storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-store', 'amp-story')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  ;\n\n  Services.storyStoreService = function storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-store')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  ;\n\n  Services.storyMediaQueryService = function storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-media-query')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  ;\n\n  Services.storyRequestService = function storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-request')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  ;\n\n  Services.mediaPerformanceMetricsService = function mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (0, _service.getExistingServiceOrNull)(win, 'media-performance-metrics')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  ;\n\n  Services.localizationServiceForOrNull = function localizationServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'localization', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  ;\n\n  Services.localizationService = function localizationService(win) {\n    return (0, _service.getService)(win, 'localization');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  ;\n\n  Services.storyAnalyticsServiceForOrNull = function storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-analytics', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  ;\n\n  Services.storyAnalyticsService = function storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-analytics')\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService}\n   */\n  ;\n\n  Services.storyStoreServiceV01 = function storyStoreServiceV01(win) {\n    return (0, _service.getService)(win, 'story-store');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-request-service.AmpStoryRequestService}\n   */\n  ;\n\n  Services.storyRequestServiceV01 = function storyRequestServiceV01(win) {\n    return (0, _service.getService)(win, 'story-request-v01');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  ;\n\n  Services.localizationServiceForOrNullV01 = function localizationServiceForOrNullV01(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'localization-v01', 'amp-story', true)\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  ;\n\n  Services.localizationServiceV01 = function localizationServiceV01(win) {\n    return (0, _service.getService)(win, 'localization-v01');\n  }\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>}\n   */\n  ;\n\n  Services.viewerIntegrationVariableServiceForOrNull = function viewerIntegrationVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'viewer-integration-variable', 'amp-viewer-integration', true)\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  ;\n\n  Services.webAnimationServiceFor = function webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'web-animation', 'amp-animation')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  ;\n\n  Services.storageForDoc = function storageForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/storage-impl.Storage>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'storage')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/template-impl.Templates}\n   */\n  ;\n\n  Services.templatesFor = function templatesFor(window) {\n    return (\n      /** @type {!./service/template-impl.Templates} */\n      (0, _service.getService)(window, 'templates')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  ;\n\n  Services.timerFor = function timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return (\n      /** @type {!./service/timer-impl.Timer} */\n      (0, _service.getService)(window, 'timer')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  ;\n\n  Services.urlReplacementsForDoc = function urlReplacementsForDoc(element) {\n    return (\n      /** @type {!./service/url-replacements-impl.UrlReplacements} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'url-replace')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  ;\n\n  Services.userNotificationManagerForDoc = function userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'userNotificationManager', 'amp-user-notification')\n    );\n  }\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  ;\n\n  Services.consentPolicyServiceForDocOrNull = function consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'consentPolicyManager', 'amp-consent')\n    );\n  }\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  ;\n\n  Services.geoForDocOrNull = function geoForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'geo', 'amp-geo', true)\n    );\n  }\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>}\n   */\n  ;\n\n  Services.userLocationForDocOrNull = function userLocationForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'user-location', 'amp-user-location', true)\n    );\n  }\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  ;\n\n  Services.urlForDoc = function urlForDoc(element) {\n    return (\n      /** @type {!./service/url-impl.Url} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'url')\n    );\n  }\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  ;\n\n  Services.variantsForDocOrNull = function variantsForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'variant', 'amp-experiment', true)\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  ;\n\n  Services.videoManagerForDoc = function videoManagerForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/video-manager-impl.VideoManager} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'video-manager')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>}\n   */\n  ;\n\n  Services.viewerAssistanceForDocOrNull = function viewerAssistanceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'amp-viewer-assistance', 'amp-viewer-assistance')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  ;\n\n  Services.viewerForDoc = function viewerForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/viewer-interface.ViewerInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'viewer')\n    );\n  }\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  ;\n\n  Services.viewerPromiseForDoc = function viewerPromiseForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'viewer')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  ;\n\n  Services.vsyncFor = function vsyncFor(window) {\n    return (\n      /** @type {!./service/vsync-impl.Vsync} */\n      (0, _service.getService)(window, 'vsync')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  ;\n\n  Services.viewportForDoc = function viewportForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/viewport/viewport-interface.ViewportInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'viewport')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  ;\n\n  Services.xhrFor = function xhrFor(window) {\n    return (\n      /** @type {!./service/xhr-impl.Xhr} */\n      (0, _service.getService)(window, 'xhr')\n    );\n  };\n\n  return Services;\n}();\n\nexports.Services = Services;\n\n},{\"./element-service\":112,\"./service\":131}],142:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.htmlFor = htmlFor;\nexports.svgFor = svgFor;\nexports.htmlRefs = htmlRefs;\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object.js\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar htmlContainer;\nvar svgContainer;\n/**\n * Creates the html helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\n\nfunction htmlFor(nodeOrDoc) {\n  var doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n\n  if (!htmlContainer || htmlContainer.ownerDocument !== doc) {\n    htmlContainer = doc.createElement('div');\n  }\n\n  return html;\n}\n/**\n * Creates the svg helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\n\n\nfunction svgFor(nodeOrDoc) {\n  var doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n\n  if (!svgContainer || svgContainer.ownerDocument !== svgContainer) {\n    svgContainer = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  }\n\n  return svg;\n}\n/**\n * A tagged template literal helper to generate static SVG trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const circle = svg`<circle cx=\"60\" cy=\"60\" r=\"22\"></circle>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\n\n\nfunction svg(strings) {\n  return createNode(svgContainer, strings);\n}\n/**\n * A tagged template literal helper to generate static DOM trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const div = html`<div><span></span></div>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\n\n\nfunction html(strings) {\n  return createNode(htmlContainer, strings);\n}\n/**\n * Helper used by html and svg string literal functions.\n * @param {!Element} container\n * @param {!Array<string>} strings\n * @return {!Element}\n */\n\n\nfunction createNode(container, strings) {\n  (0, _log.devAssert)(strings.length === 1, 'Improper html template tag usage.');\n  container.\n  /*OK*/\n  innerHTML = strings[0];\n  var el = container.firstElementChild;\n  (0, _log.devAssert)(el, 'No elements in template');\n  (0, _log.devAssert)(!el.nextElementSibling, 'Too many root elements in template'); // Clear to free memory.\n\n  container.removeChild(el);\n  return el;\n}\n/**\n * Queries an element for all elements with a \"ref\" attribute, removing\n * the attribute afterwards.\n * Returns a named map of all ref elements.\n *\n * @param {!Element} root\n * @return {!Object<string, !Element>}\n */\n\n\nfunction htmlRefs(root) {\n  var elements = root.querySelectorAll('[ref]');\n  var refs = (0, _object.map)();\n\n  for (var i = 0; i < elements.length; i++) {\n    var element = elements[i];\n    var ref = (0, _log.devAssert)(element.getAttribute('ref'), 'Empty ref attr');\n    element.removeAttribute('ref');\n    (0, _log.devAssert)(refs[ref] === undefined, 'Duplicate ref');\n    refs[ref] = element;\n  }\n\n  return refs;\n}\n\n},{\"./log\":125,\"./utils/object.js\":154}],143:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.dashToCamelCase = dashToCamelCase;\nexports.camelCaseToDash = camelCaseToDash;\nexports.dashToUnderline = dashToUnderline;\nexports.endsWith = endsWith;\nexports.startsWith = startsWith;\nexports.includes = includes;\nexports.expandTemplate = expandTemplate;\nexports.stringHash32 = stringHash32;\nexports.trimEnd = trimEnd;\nexports.trimStart = trimStart;\nexports.padStart = padStart;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n/**\n * @param {string} match\n * @return {string}\n */\n\n\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\n\n\nfunction dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\n\n\nfunction camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\n\n\nfunction dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\n\n\nfunction endsWith(string, suffix) {\n  var index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n/**\n * Polyfill for String.prototype.startsWith.\n * @param {string} string\n * @param {string} prefix\n * @return {boolean}\n */\n\n\nfunction startsWith(string, prefix) {\n  if (prefix.length > string.length) {\n    return false;\n  }\n\n  return string.lastIndexOf(prefix, 0) == 0;\n}\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\n\n\nfunction includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + substring.length > string.length) {\n    return false;\n  }\n\n  return string.indexOf(substring, start) !== -1;\n}\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\n\n\nfunction expandTemplate(template, getter, opt_maxIterations) {\n  var maxIterations = opt_maxIterations || 1;\n\n  var _loop = function _loop(i) {\n    var matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, function (_a, b) {\n      matches++;\n      return getter(b);\n    });\n\n    if (!matches) {\n      return \"break\";\n    }\n  };\n\n  for (var i = 0; i < maxIterations; i++) {\n    var _ret = _loop(i);\n\n    if (_ret === \"break\") break;\n  }\n\n  return template;\n}\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\n\n\nfunction stringHash32(str) {\n  var length = str.length;\n  var hash = 5381;\n\n  for (var i = 0; i < length; i++) {\n    hash = hash * 33 ^ str.charCodeAt(i);\n  } // Convert from 32-bit signed to unsigned.\n\n\n  return String(hash >>> 0);\n}\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\n\n\nfunction trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\n\n\nfunction trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {*} TODO(#23582): Specify return type\n */\n\n\nfunction padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n\n  targetLength = targetLength - s.length;\n  var padding = padString;\n\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n\n  return padding.slice(0, targetLength) + s;\n}\n\n},{}],144:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.camelCaseToTitleCase = camelCaseToTitleCase;\nexports.getVendorJsPropertyName = getVendorJsPropertyName;\nexports.setImportantStyles = setImportantStyles;\nexports.setStyle = setStyle;\nexports.getStyle = getStyle;\nexports.setStyles = setStyles;\nexports.assertNotDisplay = assertNotDisplay;\nexports.assertDoesNotContainDisplay = assertDoesNotContainDisplay;\nexports.setInitialDisplay = setInitialDisplay;\nexports.toggle = toggle;\nexports.px = px;\nexports.deg = deg;\nexports.translateX = translateX;\nexports.translate = translate;\nexports.scale = scale;\nexports.rotate = rotate;\nexports.removeAlphaFromColor = removeAlphaFromColor;\nexports.computedStyle = computedStyle;\nexports.resetStyles = resetStyles;\nexports.propagateObjectFitStyles = propagateObjectFitStyles;\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object.js\");\n\nvar _string = require(\"./string\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\n\n/** @type {Object<string, string>} */\nvar propertyNameCache;\n/** @const {!Array<string>} */\n\nvar vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n/**\n * @export\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\n\nfunction camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\n\n\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (var i = 0; i < vendorPrefixes.length; i++) {\n    var propertyName = vendorPrefixes[i] + titleCase;\n\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n\n  return '';\n}\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @export\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\n\n\nfunction getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if ((0, _string.startsWith)(camelCase, '--')) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n\n  if (!propertyNameCache) {\n    propertyNameCache = (0, _object.map)();\n  }\n\n  var propertyName = propertyNameCache[camelCase];\n\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n\n    if (style[camelCase] === undefined) {\n      var titleCase = camelCaseToTitleCase(camelCase);\n      var prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n\n  return propertyName;\n}\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\n\n\nfunction setImportantStyles(element, styles) {\n  var style = element.style;\n\n  for (var k in styles) {\n    style.setProperty(getVendorJsPropertyName(style, k), styles[k].toString(), 'important');\n  }\n}\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\n\n\nfunction setStyle(element, property, value, opt_units, opt_bypassCache) {\n  var propertyName = getVendorJsPropertyName(element.style, property, opt_bypassCache);\n\n  if (propertyName) {\n    element.style[propertyName] =\n    /** @type {string} */\n    opt_units ? value + opt_units : value;\n  }\n}\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\n\n\nfunction getStyle(element, property, opt_bypassCache) {\n  var propertyName = getVendorJsPropertyName(element.style, property, opt_bypassCache);\n\n  if (!propertyName) {\n    return undefined;\n  }\n\n  return element.style[propertyName];\n}\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\n\n\nfunction setStyles(element, styles) {\n  for (var k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\n\n\nfunction assertNotDisplay(style) {\n  if (style === 'display') {\n    (0, _log.dev)().error('STYLE', '`display` style detected. You must use toggle instead.');\n  }\n\n  return style;\n}\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\n\n\nfunction assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    (0, _log.dev)().error('STYLE', '`display` style detected in styles. You must use toggle instead.');\n  }\n\n  return styles;\n}\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\n\n\nfunction setInitialDisplay(el, value) {\n  var style = el.style;\n  (0, _log.devAssert)(value !== '' && value !== 'none', 'Initial display value must not be \"none\". Use toggle instead.');\n  (0, _log.devAssert)(!style['display'], 'setInitialDisplay MUST NOT be used for ' + 'resetting the display style. If you are looking for display:none ' + 'toggling, use toggle instead.');\n  style['display'] = value;\n}\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\n\n\nfunction toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\n\n\nfunction px(value) {\n  return value + \"px\";\n}\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\n\n\nfunction deg(value) {\n  return value + \"deg\";\n}\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction translateX(value) {\n  if (typeof value == 'string') {\n    return \"translateX(\" + value + \")\";\n  }\n\n  return \"translateX(\" + px(value) + \")\";\n}\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\n\n\nfunction translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n\n  if (opt_y === undefined) {\n    return \"translate(\" + x + \")\";\n  }\n\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n\n  return \"translate(\" + x + \", \" + opt_y + \")\";\n}\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction scale(value) {\n  return \"scale(\" + value + \")\";\n}\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n\n  return \"rotate(\" + value + \")\";\n}\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\n\n\nfunction removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(/\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g, '($1,$2,$3, 1)');\n}\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!Object<string, string>}\n */\n\n\nfunction computedStyle(win, el) {\n  var style =\n  /** @type {?CSSStyleDeclaration} */\n  win.getComputedStyle(el);\n  return (\n    /** @type {!Object<string, string>} */\n    style || (0, _object.map)()\n  );\n}\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\n\n\nfunction resetStyles(element, properties) {\n  for (var i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\n\n\nfunction propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n},{\"./log\":125,\"./string\":143,\"./utils/object.js\":154}],145:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isArray = isArray;\nexports.toArray = toArray;\nexports.isObject = isObject;\nexports.isFiniteNumber = isFiniteNumber;\nexports.isEnumValue = isEnumValue;\nexports.toWin = toWin;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nvar toString_ = Object.prototype.toString;\n/**\n * Returns the ECMA [[Class]] of a value\n * @param {*} value\n * @return {string}\n */\n\nfunction toString(value) {\n  return toString_.call(value);\n}\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\n\n\nfunction toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  return toString(value) === '[object Object]';\n}\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n/**\n * Checks whether `s` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} s\n * @return {boolean}\n * @template T\n */\n\n\nfunction isEnumValue(enumObj, s) {\n  for (var k in enumObj) {\n    if (enumObj[k] === s) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {!Window|null} winOrNull\n * @return {!Window}\n */\n\n\nfunction toWin(winOrNull) {\n  return (\n    /** @type {!Window} */\n    winOrNull\n  );\n}\n\n},{}],146:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.parseQueryString_ = parseQueryString_;\n\nvar _urlTryDecodeUriComponent = require(\"./url-try-decode-uri-component\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar regex = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * DO NOT import the function from this file. Instead, import parseQueryString\n * from `src/url.js`.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\n\nfunction parseQueryString_(queryString) {\n  var params =\n  /** @type {!JsonObject} */\n  Object.create(null);\n\n  if (!queryString) {\n    return params;\n  }\n\n  var match;\n\n  while (match = regex.exec(queryString)) {\n    var name = (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(match[1], match[1]);\n    var value = match[2] ? (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(match[2].replace(/\\+/g, ' '), match[2]) : '';\n    params[name] = value;\n  }\n\n  return params;\n}\n\n},{\"./url-try-decode-uri-component\":147}],147:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.tryDecodeUriComponent_ = tryDecodeUriComponent_;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * DO NOT import the function from this file. Instead, import\n * tryDecodeUriComponent from `src/url.js`.\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nfunction tryDecodeUriComponent_(component, fallback) {\n  if (fallback === void 0) {\n    fallback = '';\n  }\n\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n},{}],148:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getWinOrigin = getWinOrigin;\nexports.parseUrlDeprecated = parseUrlDeprecated;\nexports.parseUrlWithA = parseUrlWithA;\nexports.appendEncodedParamStringToUrl = appendEncodedParamStringToUrl;\nexports.addParamToUrl = addParamToUrl;\nexports.addParamsToUrl = addParamsToUrl;\nexports.addMissingParamsToUrl = addMissingParamsToUrl;\nexports.serializeQueryString = serializeQueryString;\nexports.isSecureUrlDeprecated = isSecureUrlDeprecated;\nexports.assertHttpsUrl = assertHttpsUrl;\nexports.assertAbsoluteHttpOrHttpsUrl = assertAbsoluteHttpOrHttpsUrl;\nexports.parseQueryString = parseQueryString;\nexports.removeFragment = removeFragment;\nexports.getFragment = getFragment;\nexports.isProxyOrigin = isProxyOrigin;\nexports.getProxyServingType = getProxyServingType;\nexports.isLocalhostOrigin = isLocalhostOrigin;\nexports.isProtocolValid = isProtocolValid;\nexports.removeAmpJsParamsFromUrl = removeAmpJsParamsFromUrl;\nexports.removeSearch = removeSearch;\nexports.removeParamsFromSearch = removeParamsFromSearch;\nexports.getSourceUrl = getSourceUrl;\nexports.getSourceOrigin = getSourceOrigin;\nexports.resolveRelativeUrl = resolveRelativeUrl;\nexports.resolveRelativeUrlFallback_ = resolveRelativeUrlFallback_;\nexports.getCorsUrl = getCorsUrl;\nexports.checkCorsUrl = checkCorsUrl;\nexports.tryDecodeUriComponent = tryDecodeUriComponent;\nexports.SOURCE_ORIGIN_PARAM = void 0;\n\nvar _lruCache = require(\"./utils/lru-cache\");\n\nvar _object = require(\"./utils/object\");\n\nvar _string = require(\"./string\");\n\nvar _mode = require(\"./mode\");\n\nvar _types = require(\"./types\");\n\nvar _urlParseQueryString = require(\"./url-parse-query-string\");\n\nvar _urlTryDecodeUriComponent = require(\"./url-try-decode-uri-component\");\n\nvar _config = require(\"./config\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @type {!JsonObject}\n */\nvar SERVING_TYPE_PREFIX = (0, _object.dict)({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n  // Actions viewer\n  'action': true\n});\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\n\nvar a;\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\n\nvar cache;\n/** @private @const Matches amp_js_* parameters in query string. */\n\nvar AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n/** @private @const Matches amp_gsa parameters in query string. */\n\nvar AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n/** @private @const Matches amp_r parameters in query string. */\n\nvar AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n/** @private @const Matches amp_kit parameters in query string. */\n\nvar AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n/** @private @const Matches usqp parameters from goog experiment in query string. */\n\nvar GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\nvar INVALID_PROTOCOLS = [\n/*eslint no-script-url: 0*/\n'javascript:',\n/*eslint no-script-url: 0*/\n'data:',\n/*eslint no-script-url: 0*/\n'vbscript:'];\n/** @const {string} */\n\nvar SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\n\nexports.SOURCE_ORIGIN_PARAM = SOURCE_ORIGIN_PARAM;\n\nfunction getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n * @return {!Location}\n */\n\n\nfunction parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a =\n    /** @type {!HTMLAnchorElement} */\n    self.document.createElement('a');\n    cache = self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new _lruCache.LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, opt_nocache ? null : cache);\n}\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n * @return {!Location}\n * @restricted\n */\n\n\nfunction parseUrlWithA(a, url, opt_cache) {\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url; // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  var info =\n  /** @type {!Location} */\n  {\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null // Set below.\n\n  }; // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  } // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n\n\n  if (info.protocol == 'http:' && info.port == 80 || info.protocol == 'https:' && info.port == 443) {\n    info.port = '';\n    info.host = info.hostname;\n  } // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n\n\n  var origin;\n\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n\n  info.origin = origin; // Freeze during testing to avoid accidental mutation.\n\n  var frozen = (0, _mode.getMode)().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\n\n\nfunction appendEncodedParamStringToUrl(url, paramString, opt_addToFront) {\n  if (!paramString) {\n    return url;\n  }\n\n  var mainAndFragment = url.split('#', 2);\n  var mainAndQuery = mainAndFragment[0].split('?', 2);\n  var newUrl = mainAndQuery[0] + (mainAndQuery[1] ? opt_addToFront ? \"?\" + paramString + \"&\" + mainAndQuery[1] : \"?\" + mainAndQuery[1] + \"&\" + paramString : \"?\" + paramString);\n  newUrl += mainAndFragment[1] ? \"#\" + mainAndFragment[1] : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\n\n\nfunction addParamToUrl(url, key, value, opt_addToFront) {\n  var field = encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction addMissingParamsToUrl(url, params) {\n  var location = parseUrlDeprecated(url);\n  var existingParams = parseQueryString(location.search);\n  var paramsToAdd = (0, _object.dict)({});\n  var keys = Object.keys(params);\n\n  for (var i = 0; i < keys.length; i++) {\n    if (!(0, _object.hasOwn)(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n\n  return addParamsToUrl(url, paramsToAdd);\n}\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction serializeQueryString(params) {\n  var s = [];\n\n  for (var k in params) {\n    var v = params[k];\n\n    if (v == null) {\n      continue;\n    } else if ((0, _types.isArray)(v)) {\n      for (var i = 0; i < v.length; i++) {\n        var sv =\n        /** @type {string} */\n        v[i];\n        s.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(sv));\n      }\n    } else {\n      var _sv =\n      /** @type {string} */\n      v;\n      s.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(_sv));\n    }\n  }\n\n  return s.join('&');\n}\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\n\n\nfunction isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return url.protocol == 'https:' || url.hostname == 'localhost' || url.hostname == '127.0.0.1' || (0, _string.endsWith)(url.hostname, '.localhost');\n}\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\n\n\nfunction assertHttpsUrl(urlString, elementContext, sourceName) {\n  if (sourceName === void 0) {\n    sourceName = 'source';\n  }\n\n  (0, _log.userAssert)(urlString != null, '%s %s must be available', elementContext, sourceName); // (erwinm, #4560): type cast necessary until #4560 is fixed.\n\n  var theUrlString =\n  /** @type {string} */\n  urlString;\n  (0, _log.userAssert)(isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString), '%s %s must start with ' + '\"https://\" or \"//\" or be relative and served from ' + 'either https or from localhost. Invalid value: %s', elementContext, sourceName, theUrlString);\n  return theUrlString;\n}\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\n\n\nfunction assertAbsoluteHttpOrHttpsUrl(urlString) {\n  (0, _log.userAssert)(/^https?\\:/i.test(urlString), 'URL must start with \"http://\" or \"https://\". Invalid value: %s', urlString);\n  return parseUrlDeprecated(urlString).href;\n}\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * This function is implemented in a separate file to avoid a circular\n * dependency.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\n\n\nfunction parseQueryString(queryString) {\n  return (0, _urlParseQueryString.parseQueryString_)(queryString);\n}\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeFragment(url) {\n  var index = url.indexOf('#');\n\n  if (index == -1) {\n    return url;\n  }\n\n  return url.substring(0, index);\n}\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction getFragment(url) {\n  var index = url.indexOf('#');\n\n  if (index == -1) {\n    return '';\n  }\n\n  return url.substring(index);\n}\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\n\n\nfunction isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return _config.urls.cdnProxyRegex.test(url.origin);\n}\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\n\n\nfunction getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n\n  var path = url.pathname.split('/', 2);\n  return path[1];\n}\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\n\n\nfunction isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return _config.urls.localhostRegex.test(url.origin);\n}\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\n\n\nfunction isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeAmpJsParamsFromUrl(url) {\n  var parsed = parseUrlDeprecated(url);\n  var search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeSearch(url) {\n  var index = url.indexOf('?');\n\n  if (index == -1) {\n    return url;\n  }\n\n  var fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\n\n\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n\n  var search = urlSearch.replace(AMP_JS_PARAMS_REGEX, '').replace(AMP_GSA_PARAMS_REGEX, '').replace(AMP_R_PARAMS_REGEX, '').replace(AMP_KIT_PARAMS_REGEX, '').replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '').replace(/^[?&]/, ''); // Removes first ? or &.\n\n  return search ? '?' + search : '';\n}\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\n\n\nfunction removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n\n  var paramRegex = new RegExp(\"[?&]\" + paramName + \"=[^&]*\", 'g');\n  var search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\n\n\nfunction getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  } // Not a proxy URL - return the URL itself.\n\n\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  } // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n\n\n  var path = url.pathname.split('/');\n  var prefix = path[1];\n  (0, _log.userAssert)(SERVING_TYPE_PREFIX[prefix], 'Unknown path prefix in url %s', url.href);\n  var domainOrHttpsSignal = path[2];\n  var origin = domainOrHttpsSignal == 's' ? 'https://' + decodeURIComponent(path[3]) : 'http://' + decodeURIComponent(domainOrHttpsSignal); // Sanity test that what we found looks like a domain.\n\n  (0, _log.userAssert)(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return origin + path.join('/') + removeAmpJsParamsFromSearch(url.search) + (url.hash || '');\n}\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\n\n\nfunction getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\n\n\nfunction resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n\n  if (typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private Visible for testing.\n */\n\n\nfunction resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  var relativeUrl = parseUrlDeprecated(relativeUrlString); // Absolute URL.\n\n  if ((0, _string.startsWith)(relativeUrlString.toLowerCase(), relativeUrl.protocol)) {\n    return relativeUrl.href;\n  } // Protocol-relative URL.\n\n\n  if ((0, _string.startsWith)(relativeUrlString, '//')) {\n    return baseUrl.protocol + relativeUrlString;\n  } // Absolute path.\n\n\n  if ((0, _string.startsWith)(relativeUrlString, '/')) {\n    return baseUrl.origin + relativeUrlString;\n  } // Relative path.\n\n\n  return baseUrl.origin + baseUrl.pathname.replace(/\\/[^/]*$/, '/') + relativeUrlString;\n}\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\n\n\nfunction getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  var sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\n\n\nfunction checkCorsUrl(url) {\n  var parsedUrl = parseUrlDeprecated(url);\n  var query = parseQueryString(parsedUrl.search);\n  (0, _log.userAssert)(!(SOURCE_ORIGIN_PARAM in query), 'Source origin is not allowed in %s', url);\n}\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} opt_fallback\n * @return {string}\n */\n\n\nfunction tryDecodeUriComponent(component, opt_fallback) {\n  return (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(component, opt_fallback);\n}\n\n},{\"./config\":106,\"./log\":125,\"./mode\":127,\"./string\":143,\"./types\":145,\"./url-parse-query-string\":146,\"./url-try-decode-uri-component\":147,\"./utils/lru-cache\":153,\"./utils/object\":154}],149:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.areEqualOrdered = areEqualOrdered;\nexports.remove = remove;\nexports.findIndex = findIndex;\nexports.fromIterator = fromIterator;\nexports.pushIfNotExist = pushIfNotExist;\nexports.lastItem = lastItem;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nfunction areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (var i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\n\n\nfunction remove(array, shouldRemove) {\n  var removed = [];\n  var index = 0;\n\n  for (var i = 0; i < array.length; i++) {\n    var item = array[i];\n\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n\n      index++;\n    }\n  }\n\n  if (index < array.length) {\n    array.length = index;\n  }\n\n  return removed;\n}\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\n\n\nfunction findIndex(array, predicate) {\n  for (var i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\n\n\nfunction fromIterator(iterator) {\n  var array = [];\n\n  for (var e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n\n  return array;\n}\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @template T\n */\n\n\nfunction pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n  }\n}\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\n\n\nfunction lastItem(array) {\n  return array[array.length - 1];\n}\n\n},{}],150:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.base64UrlDecodeToBytes = base64UrlDecodeToBytes;\nexports.base64DecodeToBytes = base64DecodeToBytes;\nexports.base64UrlEncodeFromBytes = base64UrlEncodeFromBytes;\nexports.base64UrlEncodeFromString = base64UrlEncodeFromString;\nexports.base64UrlDecodeFromString = base64UrlDecodeFromString;\nexports.base64EncodeFromBytes = base64EncodeFromBytes;\n\nvar _bytes = require(\"./bytes\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Character mapping from base64url to base64.\n * @const {!Object<string, string>}\n */\nvar base64UrlDecodeSubs = {\n  '-': '+',\n  '_': '/',\n  '.': '='\n};\n/**\n * Character mapping from base64 to base64url.\n * @const {!Object<string, string>}\n */\n\nvar base64UrlEncodeSubs = {\n  '+': '-',\n  '/': '_',\n  '=': '.'\n};\n/**\n * Converts a string which is in base64url encoding into a Uint8Array\n * containing the decoded value.\n * @param {string} str\n * @return {!Uint8Array}\n */\n\nfunction base64UrlDecodeToBytes(str) {\n  var encoded = atob(str.replace(/[-_.]/g, function (ch) {\n    return base64UrlDecodeSubs[ch];\n  }));\n  return (0, _bytes.stringToBytes)(encoded);\n}\n/**\n * Converts a string which is in base64 encoding into a Uint8Array\n * containing the decoded value.\n * @param {string} str\n * @return {!Uint8Array}\n */\n\n\nfunction base64DecodeToBytes(str) {\n  return (0, _bytes.stringToBytes)(atob(str));\n}\n/**\n * Converts a bytes array into base64url encoded string.\n * base64url is defined in RFC 4648. It is sometimes referred to as \"web safe\".\n * @param {!Uint8Array} bytes\n * @return {string}\n */\n\n\nfunction base64UrlEncodeFromBytes(bytes) {\n  var str = (0, _bytes.bytesToString)(bytes);\n  return btoa(str).replace(/[+/=]/g, function (ch) {\n    return base64UrlEncodeSubs[ch];\n  });\n}\n/**\n * Converts a string into base64url encoded string.\n * base64url is defined in RFC 4648. It is sometimes referred to as \"web safe\".\n * @param {string} str\n * @return {string}\n */\n\n\nfunction base64UrlEncodeFromString(str) {\n  var bytes = (0, _bytes.utf8Encode)(str);\n  return base64UrlEncodeFromBytes(bytes);\n}\n/**\n * Decode a base64url encoded string by `base64UrlEncodeFromString`\n * @param {string} str\n * @return {string}\n */\n\n\nfunction base64UrlDecodeFromString(str) {\n  var bytes = base64UrlDecodeToBytes(str);\n  return (0, _bytes.utf8Decode)(bytes);\n}\n/**\n * Converts a bytes array into base64 encoded string.\n * @param {!Uint8Array} bytes\n * @return {string}\n */\n\n\nfunction base64EncodeFromBytes(bytes) {\n  return btoa((0, _bytes.bytesToString)(bytes));\n}\n\n},{\"./bytes\":151}],151:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.utf8Decode = utf8Decode;\nexports.utf8Encode = utf8Encode;\nexports.stringToBytes = stringToBytes;\nexports.bytesToString = bytesToString;\nexports.bytesToUInt32 = bytesToUInt32;\nexports.getCryptoRandomBytesArray = getCryptoRandomBytesArray;\n\nvar _log = require(\"../log\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Interpret a byte array as a UTF-8 string.\n * @param {!BufferSource} bytes\n * @return {string}\n */\nfunction utf8Decode(bytes) {\n  if (typeof TextDecoder !== 'undefined') {\n    return new TextDecoder('utf-8').decode(bytes);\n  }\n\n  var asciiString = bytesToString(new Uint8Array(bytes.buffer || bytes));\n  return decodeURIComponent(escape(asciiString));\n}\n/**\n * Turn a string into UTF-8 bytes.\n * @param {string} string\n * @return {!Uint8Array}\n */\n\n\nfunction utf8Encode(string) {\n  if (typeof TextEncoder !== 'undefined') {\n    return new TextEncoder('utf-8').encode(string);\n  }\n\n  return stringToBytes(unescape(encodeURIComponent(string)));\n}\n/**\n * Converts a string which holds 8-bit code points, such as the result of atob,\n * into a Uint8Array with the corresponding bytes.\n * If you have a string of characters, you probably want to be using utf8Encode.\n * @param {string} str\n * @return {!Uint8Array}\n */\n\n\nfunction stringToBytes(str) {\n  var bytes = new Uint8Array(str.length);\n\n  for (var i = 0; i < str.length; i++) {\n    var charCode = str.charCodeAt(i);\n    (0, _log.devAssert)(charCode <= 255, 'Characters must be in range [0,255]');\n    bytes[i] = charCode;\n  }\n\n  return bytes;\n}\n/**\n * Converts a 8-bit bytes array into a string\n * @param {!Uint8Array} bytes\n * @return {string}\n */\n\n\nfunction bytesToString(bytes) {\n  // Intentionally avoids String.fromCharCode.apply so we don't suffer a\n  // stack overflow. #10495, https://jsperf.com/bytesToString-2\n  var array = new Array(bytes.length);\n\n  for (var i = 0; i < bytes.length; i++) {\n    array[i] = String.fromCharCode(bytes[i]);\n  }\n\n  return array.join('');\n}\n/**\n * Converts a 4-item byte array to an unsigned integer.\n * Assumes bytes are big endian.\n * @param {!Uint8Array} bytes\n * @return {number}\n */\n\n\nfunction bytesToUInt32(bytes) {\n  if (bytes.length != 4) {\n    throw new Error('Received byte array with length != 4');\n  }\n\n  var val = (bytes[0] & 0xff) << 24 | (bytes[1] & 0xff) << 16 | (bytes[2] & 0xff) << 8 | bytes[3] & 0xff; // Convert to unsigned.\n\n  return val >>> 0;\n}\n/**\n * Generate a random bytes array with specific length using\n * win.crypto.getRandomValues. Return null if it is not available.\n * @param {!Window} win\n * @param {number} length\n * @return {?Uint8Array}\n */\n\n\nfunction getCryptoRandomBytesArray(win, length) {\n  if (!win.crypto || !win.crypto.getRandomValues) {\n    return null;\n  } // Widely available in browsers we support:\n  // http://caniuse.com/#search=getRandomValues\n\n\n  var uint8array = new Uint8Array(length);\n  win.crypto.getRandomValues(uint8array);\n  return uint8array;\n}\n\n},{\"../log\":125}],152:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.once = once;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// TODO(rsimha, #15334): Enable this rule.\n\n/* eslint jsdoc/check-types: 0 */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nfunction once(fn) {\n  var evaluated = false;\n  var retValue = null;\n  var callback = fn;\n  return function () {\n    if (!evaluated) {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n\n    return retValue;\n  };\n}\n\n},{}],153:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.LruCache = void 0;\n\nvar _log = require(\"../log\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nvar TAG = 'lru-cache';\n/**\n * @template T\n */\n\nvar LruCache =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {number} capacity\n   */\n  function LruCache(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n    /** @private {number} */\n\n    this.size_ = 0;\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n\n    this.access_ = 0;\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n\n    this.cache_ = Object.create(null);\n  }\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n\n\n  var _proto = LruCache.prototype;\n\n  _proto.has = function has(key) {\n    return !!this.cache_[key];\n  }\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  ;\n\n  _proto.get = function get(key) {\n    var cacheable = this.cache_[key];\n\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n\n    return undefined;\n  }\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  ;\n\n  _proto.put = function put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n\n    this.cache_[key] = {\n      payload: payload,\n      access: this.access_\n    };\n    this.evict_();\n  }\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  ;\n\n  _proto.evict_ = function evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    (0, _log.dev)().warn(TAG, 'Trimming LRU cache');\n    var cache = this.cache_;\n    var oldest = this.access_ + 1;\n    var oldestKey;\n\n    for (var key in cache) {\n      var access = cache[key].access;\n\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  };\n\n  return LruCache;\n}();\n\nexports.LruCache = LruCache;\n\n},{\"../log\":125}],154:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.map = map;\nexports.dict = dict;\nexports.hasOwn = hasOwn;\nexports.ownProperty = ownProperty;\nexports.deepMerge = deepMerge;\nexports.omit = omit;\n\nvar _types = require(\"../types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nvar hasOwn_ = Object.prototype.hasOwnProperty;\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\n\nfunction map(opt_initial) {\n  var obj = Object.create(null);\n\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n\n  return obj;\n}\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\n\n\nfunction dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return (\n    /** @type {!JsonObject} */\n    opt_initial || {}\n  );\n}\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\n\n\nfunction hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\n\n\nfunction ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\n\n\nfunction deepMerge(target, source, depth) {\n  if (depth === void 0) {\n    depth = 10;\n  }\n\n  // Keep track of seen objects to detect recursive references.\n  var seen = [];\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n\n  var queue = [];\n  queue.push({\n    t: target,\n    s: source,\n    d: 0\n  }); // BFS to ensure objects don't have recursive references at shallower depths.\n\n  var _loop = function _loop() {\n    var _queue$shift = queue.shift(),\n        t = _queue$shift.t,\n        s = _queue$shift.s,\n        d = _queue$shift.d;\n\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n\n    seen.push(s);\n\n    if (t === s) {\n      return \"continue\";\n    }\n\n    if (d > depth) {\n      Object.assign(t, s);\n      return \"continue\";\n    }\n\n    Object.keys(s).forEach(function (key) {\n      var newValue = s[key]; // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n\n      if (hasOwn(t, key)) {\n        var oldValue = t[key];\n\n        if ((0, _types.isObject)(newValue) && (0, _types.isObject)(oldValue)) {\n          queue.push({\n            t: oldValue,\n            s: newValue,\n            d: d + 1\n          });\n          return;\n        }\n      }\n\n      t[key] = newValue;\n    });\n  };\n\n  while (queue.length > 0) {\n    var _ret = _loop();\n\n    if (_ret === \"continue\") continue;\n  }\n\n  return target;\n}\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\n\n\nfunction omit(o, props) {\n  return Object.keys(o).reduce(function (acc, key) {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n\n    return acc;\n  }, {});\n}\n\n},{\"../types\":145}],155:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A priority queue backed with sorted array.\n * @template T\n */\nvar PriorityQueue =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of PriorityQueue.\n   */\n  function PriorityQueue() {\n    /** @private @const {Array<{item: T, priority: number}>} */\n    this.queue_ = [];\n  }\n  /**\n   * Returns the max priority item without dequeueing it.\n   * @return {T}\n   */\n\n\n  var _proto = PriorityQueue.prototype;\n\n  _proto.peek = function peek() {\n    var l = this.queue_.length;\n\n    if (!l) {\n      return null;\n    }\n\n    return this.queue_[l - 1].item;\n  }\n  /**\n   * Enqueues an item with the given priority.\n   * @param {T} item\n   * @param {number} priority\n   */\n  ;\n\n  _proto.enqueue = function enqueue(item, priority) {\n    if (isNaN(priority)) {\n      throw new Error('Priority must not be NaN.');\n    }\n\n    var i = this.binarySearch_(priority);\n    this.queue_.splice(i, 0, {\n      item: item,\n      priority: priority\n    });\n  }\n  /**\n   * Returns index at which item with `target` priority should be inserted.\n   * @param {number} target\n   * @return {number}\n   * @private\n   */\n  ;\n\n  _proto.binarySearch_ = function binarySearch_(target) {\n    var i = -1;\n    var lo = 0;\n    var hi = this.queue_.length;\n\n    while (lo <= hi) {\n      i = Math.floor((lo + hi) / 2); // This means `target` is the new max priority in the queue.\n\n      if (i === this.queue_.length) {\n        break;\n      } // Stop searching once p[i] >= target AND p[i-1] < target.\n      // This way, we'll return the index of the first occurence of `target`\n      // priority (if any), which preserves FIFO order of same-priority items.\n\n\n      if (this.queue_[i].priority < target) {\n        lo = i + 1;\n      } else if (i > 0 && this.queue_[i - 1].priority >= target) {\n        hi = i - 1;\n      } else {\n        break;\n      }\n    }\n\n    return i;\n  }\n  /**\n   * @param {function(T)} callback\n   */\n  ;\n\n  _proto.forEach = function forEach(callback) {\n    var index = this.queue_.length;\n\n    while (index--) {\n      callback(this.queue_[index].item);\n    }\n  }\n  /**\n   * Dequeues the max priority item.\n   * Items with the same priority are dequeued in FIFO order.\n   * @return {T}\n   */\n  ;\n\n  _proto.dequeue = function dequeue() {\n    if (!this.queue_.length) {\n      return null;\n    }\n\n    return this.queue_.pop().item;\n  }\n  /**\n   * The number of items in the queue.\n   * @return {number}\n   */\n  ;\n\n  _createClass(PriorityQueue, [{\n    key: \"length\",\n    get: function get() {\n      return this.queue_.length;\n    }\n  }]);\n\n  return PriorityQueue;\n}();\n\nexports.default = PriorityQueue;\n\n},{}],156:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.tryResolve = tryResolve;\nexports.some = some;\nexports.LastAddedResolver = exports.Deferred = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nvar Deferred =\n/**\n * Creates an instance of Deferred.\n */\nfunction Deferred() {\n  var resolve, reject;\n  /**\n   * @const {!Promise<T>}\n   */\n\n  this.promise = new\n  /*OK*/\n  Promise(function (res, rej) {\n    resolve = res;\n    reject = rej;\n  });\n  /**\n   * @const {function(T=)}\n   */\n\n  this.resolve = resolve;\n  /**\n   * @const {function(*=)}\n   */\n\n  this.reject = reject;\n};\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\n\n\nexports.Deferred = Deferred;\n\nfunction tryResolve(fn) {\n  return new Promise(function (resolve) {\n    resolve(fn());\n  });\n}\n/**\n * Returns a promise which resolves if a threshold amount of the given promises\n * resolve, and rejects otherwise.\n * @param {!Array<!Promise>} promises The array of promises to test.\n * @param {number} count The number of promises that must resolve for the\n *     returned promise to resolve.\n * @return {!Promise} A promise that resolves if any of the given promises\n *     resolve, and which rejects otherwise.\n */\n\n\nfunction some(promises, count) {\n  if (count === void 0) {\n    count = 1;\n  }\n\n  return new Promise(function (resolve, reject) {\n    count = Math.max(count, 0);\n    var extra = promises.length - count;\n\n    if (extra < 0) {\n      reject(new Error('not enough promises to resolve'));\n    }\n\n    if (promises.length == 0) {\n      resolve([]);\n    }\n\n    var values = [];\n    var reasons = [];\n\n    var onFulfilled = function onFulfilled(value) {\n      if (values.length < count) {\n        values.push(value);\n      }\n\n      if (values.length == count) {\n        resolve(values);\n      }\n    };\n\n    var onRejected = function onRejected(reason) {\n      if (reasons.length <= extra) {\n        reasons.push(reason);\n      }\n\n      if (reasons.length > extra) {\n        reject(reasons);\n      }\n    };\n\n    for (var i = 0; i < promises.length; i++) {\n      Promise.resolve(promises[i]).then(onFulfilled, onRejected);\n    }\n  });\n}\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\n\n\nvar LastAddedResolver =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Array<!Promise>=} opt_promises\n   */\n  function LastAddedResolver(opt_promises) {\n    var resolve_, reject_;\n    /** @private @const {!Promise} */\n\n    this.promise_ = new Promise(function (resolve, reject) {\n      resolve_ = resolve;\n      reject_ = reject;\n    });\n    /** @private */\n\n    this.resolve_ = resolve_;\n    /** @private */\n\n    this.reject_ = reject_;\n    /** @private */\n\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (var i = 0; i < opt_promises.length; i++) {\n        this.add(opt_promises[i]);\n      }\n    }\n  }\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!Promise} promise\n   * @return {!Promise}\n   */\n\n\n  var _proto = LastAddedResolver.prototype;\n\n  _proto.add = function add(promise) {\n    var _this = this;\n\n    var countAtAdd = ++this.count_;\n    Promise.resolve(promise).then(function (result) {\n      if (_this.count_ === countAtAdd) {\n        _this.resolve_(result);\n      }\n    }, function (error) {\n      // Don't follow behavior of Promise.all and Promise.race error so that\n      // this will only reject when most recently added promise fails.\n      if (_this.count_ === countAtAdd) {\n        _this.reject_(error);\n      }\n    });\n    return this.promise_;\n  }\n  /** @override */\n  ;\n\n  _proto.then = function then(opt_resolve, opt_reject) {\n    return this.promise_.then(opt_resolve, opt_reject);\n  };\n\n  return LastAddedResolver;\n}();\n\nexports.LastAddedResolver = LastAddedResolver;\n\n},{}],157:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isDockable = isDockable;\nexports.delegateAutoplay = delegateAutoplay;\nexports.userInteractedWith = userInteractedWith;\nexports.VideoServiceSignals = exports.VideoOrBaseElementDef = exports.videoAnalyticsCustomEventTypeKey = exports.VideoAnalyticsEvents = exports.PlayingStates = exports.PlayingStateDef = exports.VideoEvents = exports.VideoAttributes = exports.VideoInterface = exports.MIN_VISIBILITY_RATIO_FOR_AUTOPLAY = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar MIN_VISIBILITY_RATIO_FOR_AUTOPLAY = 0.5;\n/**\n * VideoInterface defines a common video API which any AMP component that plays\n * videos is expected to implement.\n *\n * AMP runtime uses this common API to provide consistent video experience and\n * analytics across all video players.\n *\n * Components implementing this interface must also extend\n * {@link ./base-element.BaseElement} and register with the\n * Video Manager {@link ./service/video-manager-impl.VideoManager} during\n * their `builtCallback`.\n *\n * @interface\n */\n\nexports.MIN_VISIBILITY_RATIO_FOR_AUTOPLAY = MIN_VISIBILITY_RATIO_FOR_AUTOPLAY;\n\nvar VideoInterface =\n/*#__PURE__*/\nfunction () {\n  function VideoInterface() {}\n\n  var _proto = VideoInterface.prototype;\n\n  /**\n   * Whether the component supports video playback in the current platform.\n   * If false, component will be not treated as a video component.\n   * @return {boolean}\n   */\n  _proto.supportsPlatform = function supportsPlatform() {}\n  /**\n   * Whether users can interact with the video such as pausing it.\n   * Example of non-interactive videos include design background videos where\n   * all controls are hidden from the user.\n   *\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isInteractive = function isInteractive() {}\n  /**\n   * Current playback time in seconds at time of trigger\n   * @return {number}\n   */\n  ;\n\n  _proto.getCurrentTime = function getCurrentTime() {}\n  /**\n   * Total duration of the video in seconds\n   * @return {number}\n   */\n  ;\n\n  _proto.getDuration = function getDuration() {}\n  /**\n   * Get a 2d array of start and stop times that the user has watched.\n   * @return {!Array<Array<number>>}\n   */\n  ;\n\n  _proto.getPlayedRanges = function getPlayedRanges() {}\n  /**\n   * Plays the video..\n   *\n   * @param {boolean} unusedIsAutoplay Whether the call to the `play` method is\n   * triggered by the autoplay functionality. Video players can use this hint\n   * to make decisions such as not playing pre-roll video ads.\n   */\n  ;\n\n  _proto.play = function play(unusedIsAutoplay) {}\n  /**\n   * Pauses the video.\n   */\n  ;\n\n  _proto.pause = function pause() {}\n  /**\n   * Mutes the video.\n   */\n  ;\n\n  _proto.mute = function mute() {}\n  /**\n   * Unmutes the video.\n   */\n  ;\n\n  _proto.unmute = function unmute() {}\n  /**\n   * Makes the video UI controls visible.\n   *\n   * AMP will not call this method if `controls` attribute is not set.\n   */\n  ;\n\n  _proto.showControls = function showControls() {}\n  /**\n   * Hides the video UI controls.\n   *\n   * AMP will not call this method if `controls` attribute is not set.\n   */\n  ;\n\n  _proto.hideControls = function hideControls() {}\n  /**\n   * Returns video's meta data (artwork, title, artist, album, etc.) for use\n   * with the Media Session API\n   * artwork (Array): URL to the poster image (preferably a 512x512 PNG)\n   * title (string): Name of the video\n   * artist (string): Name of the video's author/artist\n   * album (string): Name of the video's album if it exists\n   * @return {!./mediasession-helper.MetadataDef|undefined} metadata\n   */\n  ;\n\n  _proto.getMetadata = function getMetadata() {}\n  /**\n   * If this returns true then it will be assumed that the player implements\n   * a feature to enter fullscreen on device rotation internally, so that the\n   * video manager does not override it. If not, the video manager will\n   * implement this feature automatically for videos with the attribute\n   * `rotate-to-fullscreen`.\n   *\n   * @return {boolean}\n   */\n  ;\n\n  _proto.preimplementsAutoFullscreen = function preimplementsAutoFullscreen() {}\n  /**\n   * If this returns true then it will be assumed that the player implements\n   * the MediaSession API internally so that the video manager does not override\n   * it. If not, the video manager will use the metadata variable as well as\n   * inferred meta-data to update the video's Media Session notification.\n   *\n   * @return {boolean}\n   */\n  ;\n\n  _proto.preimplementsMediaSessionAPI = function preimplementsMediaSessionAPI() {}\n  /**\n   * Enables fullscreen on the internal video element\n   * NOTE: While implementing, keep in mind that Safari/iOS do not allow taking\n   * any element other than <video> to fullscreen, if the player has an internal\n   * implementation of fullscreen (flash for example) then check\n   * if Services.platformFor(this.win).isSafari is true and use the internal\n   * implementation instead. If not, it is recommended to take the iframe\n   * to fullscreen using fullscreenEnter from dom.js\n   */\n  ;\n\n  _proto.fullscreenEnter = function fullscreenEnter() {}\n  /**\n   * Quits fullscreen mode\n   */\n  ;\n\n  _proto.fullscreenExit = function fullscreenExit() {}\n  /**\n   * Returns whether the video is currently in fullscreen mode or not\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen() {}\n  /**\n   * Seeks the video to a specified time.\n   * @param {number} unusedTimeSeconds\n   */\n  ;\n\n  _proto.seekTo = function seekTo(unusedTimeSeconds) {};\n\n  return VideoInterface;\n}();\n/**\n * Attributes\n *\n * Components implementing the VideoInterface are expected to support\n * the following attributes.\n *\n * @const {!Object<string, string>}\n */\n\n\nexports.VideoInterface = VideoInterface;\nvar VideoAttributes = {\n  /**\n   * autoplay\n   *\n   * Whether the developer has configured autoplay on the component.\n   * This is normally done by setting `autoplay` attribute on the component.\n   *\n   * AMP runtime manages autoplay behavior itself using methods such as `play`,\n   * `pause`, `showControls`, `hideControls`, `mute`, etc.. therefore components\n   * should not propagate the autoplay attribute to the underlying player\n   * implementation.\n   *\n   * When a video is requested to autoplay, AMP will automatically\n   * mute and hide the controls for the video, when video is 75% visible in\n   * the viewport, AMP will play the video and later pauses it when 25%\n   * or more of the video exits the viewport. If an auto-playing video also has\n   * controls, AMP will install a tap\n   * handler on the video, and when an end-user taps the video, AMP will show\n   * the controls.\n   *\n   */\n  AUTOPLAY: 'autoplay',\n\n  /**\n   * dock\n   *\n   * Setting the `dock` attribute on the component makes the video minimize\n   * to the corner when scrolled out of view and has been interacted with.\n   */\n  DOCK: 'dock',\n\n  /**\n   * rotate-to-fullscreen\n   *\n   * If enabled, this automatically expands the currently visible video and\n   * playing to fullscreen when the user changes the device's orientation to\n   * landscape if the video was started following a user interaction\n   * (not autoplay)\n   *\n   * Dependent upon browser support of\n   * http://caniuse.com/#feat=screen-orientation\n   * and http://caniuse.com/#feat=fullscreen\n   */\n  ROTATE_TO_FULLSCREEN: 'rotate-to-fullscreen',\n\n  /**\n   * noaudio\n   *\n   * If set and autoplay, the equalizer icon will not be displayed.\n   */\n  NO_AUDIO: 'noaudio'\n};\n/**\n * Events\n *\n * Components implementing the VideoInterface are expected to dispatch\n * the following DOM events.\n *\n * @const {!Object<string, string>}\n */\n\nexports.VideoAttributes = VideoAttributes;\nvar VideoEvents = {\n  /**\n   * registered\n   *\n   * Fired when the video player element is built and has been registered with\n   * the video manager.\n   *\n   * @event registered\n   */\n  REGISTERED: 'registered',\n\n  /**\n   * load\n   *\n   * Fired when the video player is loaded and calls to methods such as `play()`\n   * are allowed.\n   *\n   * @event load\n   */\n  LOAD: 'load',\n\n  /**\n   * loadedmetadata\n   *\n   * Fired when the video's metadata becomes available (e.g. duration).\n   *\n   * @event loadedmetadata\n   */\n  LOADEDMETADATA: 'loadedmetadata',\n\n  /**\n   * playing\n   *\n   * Fired when the video begins playing.\n   *\n   * @event playing\n   */\n  PLAYING: 'playing',\n\n  /**\n   * pause\n   *\n   * Fired when the video pauses.\n   *\n   * @event pause\n   */\n  PAUSE: 'pause',\n\n  /**\n   * ended\n   *\n   * Fired when the video ends.\n   *\n   * This event should be fired in addition to `pause` when video ends.\n   *\n   * @event ended\n   */\n  ENDED: 'ended',\n\n  /**\n   * muted\n   *\n   * Fired when the video is muted.\n   *\n   * @event muted\n   */\n  MUTED: 'muted',\n\n  /**\n   * unmuted\n   *\n   * Fired when the video is unmuted.\n   *\n   * @event unmuted\n   */\n  UNMUTED: 'unmuted',\n\n  /**\n   * amp:video:visibility\n   *\n   * Fired when the video's visibility changes. Normally fired\n   * from `viewportCallback`.\n   *\n   * @event amp:video:visibility\n   * @property {boolean} visible Whether the video player is visible or not.\n   */\n  VISIBILITY: 'amp:video:visibility',\n\n  /**\n   * reload\n   *\n   * Fired when the video's src changes.\n   *\n   * @event reloaded\n   */\n  RELOAD: 'reloaded',\n\n  /**\n   * pre/mid/post Ad start\n   *\n   * Fired when an Ad starts playing.\n   *\n   * This is used to remove any overlay shims during Ad play during autoplay\n   * or minimized-to-corner version of the player.\n   *\n   * @event ad_start\n   */\n  AD_START: 'ad_start',\n\n  /**\n   * pre/mid/post Ad ends\n   *\n   * Fired when an Ad ends playing.\n   *\n   * This is used to restore any overlay shims during Ad play during autoplay\n   * or minimized-to-corner version of the player.\n   *\n   * @event ad_end\n   */\n  AD_END: 'ad_end',\n\n  /**\n   * A 3p video player can send signals for analytics whose meaning doesn't\n   * fit for other events. In this case, a `tick` event is sent with additional\n   * information in its data property.\n   *\n   * @event amp:video:tick\n   */\n  CUSTOM_TICK: 'amp:video:tick'\n};\n/** @typedef {string} */\n\nexports.VideoEvents = VideoEvents;\nvar PlayingStateDef;\n/**\n * Playing States\n *\n * Internal playing states used to distinguish between video playing on user's\n * command and videos playing automatically\n *\n * @const {!Object<string, PlayingStateDef>}\n */\n\nexports.PlayingStateDef = PlayingStateDef;\nvar PlayingStates = {\n  /**\n   * playing_manual\n   *\n   * When the video user manually interacted with the video and the video\n   * is now playing\n   *\n   * @event playing_manual\n   */\n  PLAYING_MANUAL: 'playing_manual',\n\n  /**\n   * playing_auto\n   *\n   * When the video has autoplay and the user hasn't interacted with it yet\n   *\n   * @event playing_auto\n   */\n  PLAYING_AUTO: 'playing_auto',\n\n  /**\n   * paused\n   *\n   * When the video is paused.\n   *\n   * @event paused\n   */\n  PAUSED: 'paused'\n};\n/** @enum {string} */\n\nexports.PlayingStates = PlayingStates;\nvar VideoAnalyticsEvents = {\n  /**\n   * video-ended\n   *\n   * Indicates that a video ended.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-ended\n   */\n  ENDED: 'video-ended',\n\n  /**\n   * video-pause\n   *\n   * Indicates that a video paused.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-pause\n   */\n  PAUSE: 'video-pause',\n\n  /**\n   * video-play\n   *\n   * Indicates that a video began to play.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-play\n   */\n  PLAY: 'video-play',\n\n  /**\n   * video-session\n   *\n   * Indicates that some segment of the video played.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-session\n   */\n  SESSION: 'video-session',\n\n  /**\n   * video-session-visible\n   *\n   * Indicates that some segment of the video played in the viewport.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-session-visible\n   */\n  SESSION_VISIBLE: 'video-session-visible',\n\n  /**\n   * video-seconds-played\n   *\n   * Indicates that a video was playing when the\n   * video-seconds-played interval fired.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-session-visible\n   */\n  SECONDS_PLAYED: 'video-seconds-played',\n\n  /**\n   * video-hosted-custom\n   *\n   * Indicates that a custom event incoming from a 3p frame is to be logged.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-custom\n   */\n  CUSTOM: 'video-hosted-custom',\n\n  /**\n   * video-percentage-played\n   *\n   * Indicates that a percentage interval has been played.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-custom\n   */\n  PERCENTAGE_PLAYED: 'video-percentage-played',\n\n  /**\n   * video-ad-start\n   *\n   * Indicates that an ad begins to play.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-ad-start\n   */\n  AD_START: 'video-ad-start',\n\n  /**\n   * video-ad-end\n   *\n   * Indicates that an ad ended.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-ad-end\n   */\n  AD_END: 'video-ad-end'\n};\n/**\n * This key can't predictably collide with custom var names as defined in\n * analytics user configuration.\n * @type {string}\n */\n\nexports.VideoAnalyticsEvents = VideoAnalyticsEvents;\nvar videoAnalyticsCustomEventTypeKey = '__amp:eventType';\n/**\n * Helper union type to be used internally, so that the compiler treats\n * `VideoInterface` objects as `BaseElement`s, which they should be anyway.\n *\n * WARNING: Don't use this at the service level. Its `register` method should\n * only allow `VideoInterface` as a guarding measure.\n *\n * @typedef {!VideoInterface|!./base-element.BaseElement}\n */\n\nexports.videoAnalyticsCustomEventTypeKey = videoAnalyticsCustomEventTypeKey;\nvar VideoOrBaseElementDef;\n/**\n * @param {!Element} element\n * @return {boolean}\n */\n\nexports.VideoOrBaseElementDef = VideoOrBaseElementDef;\n\nfunction isDockable(element) {\n  return element.hasAttribute(VideoAttributes.DOCK);\n}\n/** @enum {string} */\n\n\nvar VideoServiceSignals = {\n  USER_INTERACTED: 'user-interacted',\n  AUTOPLAY_DELEGATED: 'autoplay-delegated'\n};\n/** @param {!AmpElement|!VideoOrBaseElementDef} video */\n\nexports.VideoServiceSignals = VideoServiceSignals;\n\nfunction delegateAutoplay(video) {\n  video.signals().signal(VideoServiceSignals.AUTOPLAY_DELEGATED);\n}\n/** @param {!AmpElement|!VideoOrBaseElementDef} video */\n\n\nfunction userInteractedWith(video) {\n  video.signals().signal(VideoServiceSignals.USER_INTERACTED);\n}\n\n},{}],158:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.WindowInterface = void 0;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An interface to interact with browser window object.\n * Mainly used to mock out read only APIs in test.\n * See test-helper.js#mockWindowInterface\n */\nvar WindowInterface =\n/*#__PURE__*/\nfunction () {\n  function WindowInterface() {}\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {!Location}\n   */\n  WindowInterface.getLocation = function getLocation(win) {\n    return win.location;\n  }\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {string}\n   */\n  ;\n\n  WindowInterface.getDocumentReferrer = function getDocumentReferrer(win) {\n    return win.document.referrer;\n  }\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {string}\n   */\n  ;\n\n  WindowInterface.getHostname = function getHostname(win) {\n    return win.location.hostname;\n  }\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {string}\n   */\n  ;\n\n  WindowInterface.getUserAgent = function getUserAgent(win) {\n    return win.navigator.userAgent;\n  }\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {string}\n   */\n  ;\n\n  WindowInterface.getUserLanguage = function getUserLanguage(win) {\n    return win.navigator.userLanguage || win.navigator.language;\n  }\n  /**\n   * @static\n   * @return {number}\n   */\n  ;\n\n  WindowInterface.getDevicePixelRatio = function getDevicePixelRatio() {\n    // No matter the window, the device-pixel-ratio is always one.\n    return self.devicePixelRatio || 1;\n  }\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {function(string,(ArrayBufferView|Blob|FormData|null|string)=):boolean|undefined}\n   */\n  ;\n\n  WindowInterface.getSendBeacon = function getSendBeacon(win) {\n    if (!win.navigator.sendBeacon) {\n      return undefined;\n    }\n\n    return win.navigator.sendBeacon.bind(win.navigator);\n  }\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {function(new:XMLHttpRequest)}\n   */\n  ;\n\n  WindowInterface.getXMLHttpRequest = function getXMLHttpRequest(win) {\n    return win.XMLHttpRequest;\n  }\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {function(new:Image)}\n   */\n  ;\n\n  WindowInterface.getImage = function getImage(win) {\n    return win.Image;\n  };\n\n  return WindowInterface;\n}();\n\nexports.WindowInterface = WindowInterface;\n\n},{}],159:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.cssEscape = cssEscape;\n\n/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  } // Nil is the null terminator (group 1) capture\n\n\n  if (nil) {\n    return \"\\uFFFD\";\n  } // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n\n\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' ';\n  } // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n\n\n  return '\\\\' + match;\n}\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\n\n\nfunction cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n\n},{}]},{},[2])\n\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides an ability to collect data about activities the user\n * has performed on the page.\n */\n\nimport {Services} from '../../../src/services';\nimport {hasOwn} from '../../../src/utils/object';\nimport {listen} from '../../../src/event-helper';\nimport {registerServiceBuilderForDoc} from '../../../src/service';\n\n/**\n * The amount of time after an activity the user is considered engaged.\n * @private @const {number}\n */\nconst DEFAULT_ENGAGED_SECONDS = 5;\n\n/**\n * @enum {string}\n */\nconst ActivityEventType = {\n  ACTIVE: 'active',\n  INACTIVE: 'inactive',\n};\n\n/**\n * @typedef {{\n *   type: string,\n *   time: number\n * }}\n */\nlet ActivityEventDef;\n\n/**\n * Find the engaged time between the event and the time (exclusive of the time)\n * @param {ActivityEventDef} activityEvent\n * @param {number} time\n * @return {number}\n * @private\n */\nfunction findEngagedTimeBetween(activityEvent, time) {\n  let engagementBonus = 0;\n\n  if (activityEvent.type === ActivityEventType.ACTIVE) {\n    engagementBonus = DEFAULT_ENGAGED_SECONDS;\n  }\n\n  return Math.min(time - activityEvent.time, engagementBonus);\n}\n\nclass ActivityHistory {\n  /**\n   * Creates an instance of ActivityHistory.\n   */\n  constructor() {\n    /** @private {number} */\n    this.totalEngagedTime_ = 0;\n\n    /**\n     * prevActivityEvent_ remains undefined until the first valid push call.\n     * @private {ActivityEventDef|undefined}\n     */\n    this.prevActivityEvent_ = undefined;\n  }\n\n  /**\n   * Indicate that an activity took place at the given time.\n   * @param {ActivityEventDef} activityEvent\n   */\n  push(activityEvent) {\n    if (!this.prevActivityEvent_) {\n      this.prevActivityEvent_ = activityEvent;\n    }\n\n    if (this.prevActivityEvent_.time < activityEvent.time) {\n      this.totalEngagedTime_ += findEngagedTimeBetween(\n        this.prevActivityEvent_,\n        activityEvent.time\n      );\n      this.prevActivityEvent_ = activityEvent;\n    }\n  }\n\n  /**\n   * Get the total engaged time up to the given time recorded in\n   * ActivityHistory.\n   * @param {number} time\n   * @return {number}\n   */\n  getTotalEngagedTime(time) {\n    let totalEngagedTime = 0;\n    if (this.prevActivityEvent_ !== undefined) {\n      totalEngagedTime =\n        this.totalEngagedTime_ +\n        findEngagedTimeBetween(this.prevActivityEvent_, time);\n    }\n    return totalEngagedTime;\n  }\n}\n\n/**\n * Array of event types which will be listened for on the document to indicate\n * activity. Other activities are also observed on the AmpDoc and Viewport\n * objects. See {@link setUpActivityListeners_} for listener implementation.\n * @private @const {Array<string>}\n */\nconst ACTIVE_EVENT_TYPES = [\n  'mousedown',\n  'mouseup',\n  'mousemove',\n  'keydown',\n  'keyup',\n];\n\n/**\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampDoc\n */\nexport function installActivityServiceForTesting(ampDoc) {\n  registerServiceBuilderForDoc(ampDoc, 'activity', Activity);\n}\n\nexport class Activity {\n  /**\n   * Activity tracks basic user activity on the page.\n   *  - Listeners are not registered on the activity event types until the\n   *    AmpDoc's `whenFirstVisible` is resolved.\n   *  - When the `whenFirstVisible` of AmpDoc is resolved, a first activity\n   *    is recorded.\n   *  - The first activity in any second causes all other activities to be\n   *    ignored. This is similar to debounce functionality since some events\n   *    (e.g. scroll) could occur in rapid succession.\n   *  - In any one second period, active events or inactive events can override\n   *    each other. Whichever type occured last has precedence.\n   *  - Active events give a 5 second \"bonus\" to engaged time.\n   *  - Inactive events cause an immediate stop to the engaged time bonus of\n   *    any previous activity event.\n   *  - At any point after instantiation, `getTotalEngagedTime` can be used\n   *    to get the engage time up to the time the function is called. If\n   *    `whenFirstVisible` has not yet resolved, engaged time is 0.\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @const {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc */\n    this.ampdoc = ampdoc;\n\n    /** @private @const {function()} */\n    this.boundStopIgnore_ = this.stopIgnore_.bind(this);\n\n    /** @private @const {function()} */\n    this.boundHandleActivity_ = this.handleActivity_.bind(this);\n\n    /** @private @const {function()} */\n    this.boundHandleVisibilityChange_ = this.handleVisibilityChange_.bind(this);\n\n    /**\n     * Contains the incrementalEngagedTime timestamps for named triggers.\n     * @private {Object<string, number>}\n     */\n    this.totalEngagedTimeByTrigger_ = {\n      /*\n       * \"$triggerName\" : ${lastRequestTimestamp}\n       */\n    };\n\n    /** @private {Array<!UnlistenDef>} */\n    this.unlistenFuncs_ = [];\n\n    /** @private {boolean} */\n    this.ignoreActivity_ = false;\n\n    /** @private {boolean} */\n    this.ignoreInactive_ = false;\n\n    /** @private @const {!ActivityHistory} */\n    this.activityHistory_ = new ActivityHistory();\n\n    /** @private @const {!../../../src/service/viewport/viewport-interface.ViewportInterface} */\n    this.viewport_ = Services.viewportForDoc(this.ampdoc);\n\n    this.ampdoc.whenFirstVisible().then(this.start_.bind(this));\n  }\n\n  /** @private */\n  start_() {\n    /** @private @const {number} */\n    this.startTime_ = Date.now();\n    // record an activity since this is when the page became visible\n    this.handleActivity_();\n    this.setUpActivityListeners_();\n  }\n\n  /**\n   * @private\n   * @return {number}\n   */\n  getTimeSinceStart_() {\n    const timeSinceStart = Date.now() - this.startTime_;\n    // Ensure that a negative time is never returned. This may cause loss of\n    // data if there is a time change during the session but it will decrease\n    // the likelyhood of errors in that situation.\n    return timeSinceStart > 0 ? timeSinceStart : 0;\n  }\n\n  /**\n   * Return to a state where neither activities or inactivity events are\n   * ignored when that event type is fired.\n   * @private\n   */\n  stopIgnore_() {\n    this.ignoreActivity_ = false;\n    this.ignoreInactive_ = false;\n  }\n\n  /** @private */\n  setUpActivityListeners_() {\n    for (let i = 0; i < ACTIVE_EVENT_TYPES.length; i++) {\n      this.unlistenFuncs_.push(\n        listen(\n          this.ampdoc.getRootNode(),\n          ACTIVE_EVENT_TYPES[i],\n          this.boundHandleActivity_\n        )\n      );\n    }\n\n    this.unlistenFuncs_.push(\n      this.ampdoc.onVisibilityChanged(this.boundHandleVisibilityChange_)\n    );\n\n    // Viewport.onScroll does not return an unlisten function.\n    // TODO(britice): If Viewport is updated to return an unlisten function,\n    // update this to capture the unlisten function.\n    this.viewport_.onScroll(this.boundHandleActivity_);\n  }\n\n  /** @private */\n  handleActivity_() {\n    if (this.ignoreActivity_) {\n      return;\n    }\n    this.ignoreActivity_ = true;\n    this.ignoreInactive_ = false;\n\n    this.handleActivityEvent_(ActivityEventType.ACTIVE);\n  }\n\n  /** @private */\n  handleInactive_() {\n    if (this.ignoreInactive_) {\n      return;\n    }\n    this.ignoreInactive_ = true;\n    this.ignoreActivity_ = false;\n\n    this.handleActivityEvent_(ActivityEventType.INACTIVE);\n  }\n\n  /**\n   * @param {ActivityEventType} type\n   * @private\n   */\n  handleActivityEvent_(type) {\n    const timeSinceStart = this.getTimeSinceStart_();\n    const secondKey = Math.floor(timeSinceStart / 1000);\n    const timeToWait = 1000 - (timeSinceStart % 1000);\n\n    // stop ignoring activity at the start of the next activity bucket\n    setTimeout(this.boundStopIgnore_, timeToWait);\n\n    this.activityHistory_.push({\n      type,\n      time: secondKey,\n    });\n  }\n\n  /** @private */\n  handleVisibilityChange_() {\n    if (this.ampdoc.isVisible()) {\n      this.handleActivity_();\n    } else {\n      this.handleInactive_();\n    }\n  }\n\n  /**\n   * Remove all listeners associated with this Activity instance.\n   * @private\n   */\n  unlisten_() {\n    for (let i = 0; i < this.unlistenFuncs_.length; i++) {\n      const unlistenFunc = this.unlistenFuncs_[i];\n      // TODO(britice): Due to eslint typechecking, this check may not be\n      // necessary.\n      if (typeof unlistenFunc === 'function') {\n        unlistenFunc();\n      }\n    }\n    this.unlistenFuncs_ = [];\n  }\n\n  /**\n   * @private\n   * @visibleForTesting\n   */\n  cleanup_() {\n    this.unlisten_();\n  }\n\n  /**\n   * Get total engaged time since the page became visible.\n   * @return {number}\n   */\n  getTotalEngagedTime() {\n    const secondsSinceStart = Math.floor(this.getTimeSinceStart_() / 1000);\n    return this.activityHistory_.getTotalEngagedTime(secondsSinceStart);\n  }\n\n  /**\n   * Get the incremental engaged time since the last push and reset it if asked.\n   * @param {string} name\n   * @param {boolean=} reset\n   * @return {number}\n   */\n  getIncrementalEngagedTime(name, reset = true) {\n    if (!hasOwn(this.totalEngagedTimeByTrigger_, name)) {\n      if (reset) {\n        this.totalEngagedTimeByTrigger_[name] = this.getTotalEngagedTime();\n      }\n      return this.getTotalEngagedTime();\n    }\n    const currentIncrementalEngagedTime = this.totalEngagedTimeByTrigger_[name];\n    if (reset === false) {\n      return this.getTotalEngagedTime() - currentIncrementalEngagedTime;\n    }\n    this.totalEngagedTimeByTrigger_[name] = this.getTotalEngagedTime();\n    return (\n      this.totalEngagedTimeByTrigger_[name] - currentIncrementalEngagedTime\n    );\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Activity} from './activity-impl';\nimport {AnalyticsConfig, mergeObjects} from './config';\nimport {AnalyticsEventType} from './events';\nimport {CookieWriter} from './cookie-writer';\nimport {\n  ExpansionOptions,\n  VariableService,\n  stringToBool,\n  variableServicePromiseForDoc,\n} from './variables';\nimport {\n  InstrumentationService,\n  instrumentationServicePromiseForDoc,\n} from './instrumentation';\nimport {LayoutPriority} from '../../../src/layout';\nimport {LinkerManager} from './linker-manager';\nimport {RequestHandler, expandPostMessage} from './requests';\nimport {Services} from '../../../src/services';\nimport {Transport} from './transport';\nimport {dev, devAssert, rethrowAsync, user} from '../../../src/log';\nimport {dict, hasOwn} from '../../../src/utils/object';\nimport {expandTemplate} from '../../../src/string';\nimport {getMode} from '../../../src/mode';\nimport {installLinkerReaderService} from './linker-reader';\nimport {isArray, isEnumValue} from '../../../src/types';\nimport {isIframed} from '../../../src/dom';\nimport {isInFie} from '../../../src/iframe-helper';\nimport {toggle} from '../../../src/style';\n\nconst TAG = 'amp-analytics';\n\nconst MAX_REPLACES = 16; // The maximum number of entries in a extraUrlParamsReplaceMap\n\nconst WHITELIST_EVENT_IN_SANDBOX = [\n  AnalyticsEventType.VISIBLE,\n  AnalyticsEventType.HIDDEN,\n];\n\nexport class AmpAnalytics extends AMP.BaseElement {\n  /** @param {!AmpElement} element */\n  constructor(element) {\n    super(element);\n\n    /** @private {!Promise} */\n    this.consentPromise_ = Promise.resolve();\n\n    /**\n     * The html id of the `amp-user-notification` element.\n     * @private {?string}\n     */\n    this.consentNotificationId_ = null;\n\n    /** @private {boolean} */\n    this.isSandbox_ = false;\n\n    /**\n     * @private {Object<string, RequestHandler>} A map of request handler with requests\n     */\n    this.requests_ = {};\n\n    /**\n     * @private {!JsonObject}\n     */\n    this.config_ = dict();\n\n    /** @private {?./instrumentation.InstrumentationService} */\n    this.instrumentation_ = null;\n\n    /** @private {?./analytics-group.AnalyticsGroup} */\n    this.analyticsGroup_ = null;\n\n    /** @private {?./variables.VariableService} */\n    this.variableService_ = null;\n\n    /** @private {!../../../src/service/crypto-impl.Crypto} */\n    this.cryptoService_ = Services.cryptoFor(this.win);\n\n    /** @private {?Promise} */\n    this.iniPromise_ = null;\n\n    /** @private {./transport.Transport} */\n    this.transport_ = null;\n\n    /** @private {boolean} */\n    this.isInabox_ = getMode(this.win).runtime == 'inabox';\n\n    /** @private {?./linker-manager.LinkerManager} */\n    this.linkerManager_ = null;\n  }\n\n  /** @override */\n  getLayoutPriority() {\n    // Load immediately if inabox, otherwise after other content.\n    return this.isInabox_ ? LayoutPriority.CONTENT : LayoutPriority.METADATA;\n  }\n\n  /** @override */\n  isAlwaysFixed() {\n    return !isInFie(this.element);\n  }\n\n  /** @override */\n  isLayoutSupported(unusedLayout) {\n    return true;\n  }\n\n  /** @override */\n  buildCallback() {\n    this.isSandbox_ = this.element.hasAttribute('sandbox');\n\n    this.element.setAttribute('aria-hidden', 'true');\n\n    this.consentNotificationId_ = this.element.getAttribute(\n      'data-consent-notification-id'\n    );\n\n    if (this.consentNotificationId_ != null) {\n      this.consentPromise_ = Services.userNotificationManagerForDoc(\n        this.element\n      ).then(service =>\n        service.get(dev().assertString(this.consentNotificationId_))\n      );\n    }\n\n    if (this.element.getAttribute('trigger') == 'immediate') {\n      this.ensureInitialized_();\n    }\n  }\n\n  /** @override */\n  layoutCallback() {\n    // Now that we are rendered, stop rendering the element to reduce\n    // resource consumption.\n    return this.ensureInitialized_();\n  }\n\n  /** @override */\n  detachedCallback() {\n    if (this.analyticsGroup_) {\n      this.analyticsGroup_.dispose();\n      this.analyticsGroup_ = null;\n    }\n\n    if (this.linkerManager_) {\n      this.linkerManager_.dispose();\n      this.linkerManager_ = null;\n    }\n\n    for (const request in this.requests_) {\n      this.requests_[request].dispose();\n      delete this.requests_[request];\n    }\n  }\n\n  /** @override */\n  resumeCallback() {\n    if (this.iniPromise_) {\n      this.iniPromise_.then(() => {\n        this.transport_.maybeInitIframeTransport(\n          this.getAmpDoc().win,\n          this.element\n        );\n      });\n    }\n  }\n\n  /** @override */\n  unlayoutCallback() {\n    if (this.getAmpDoc().isVisible()) {\n      // amp-analytics tag was just set to display:none. Page is still loaded.\n      return false;\n    }\n\n    if (this.iniPromise_) {\n      this.iniPromise_.then(() => {\n        // Page was unloaded - free up owned resources.\n        this.transport_.deleteIframeTransport();\n      });\n    }\n\n    return super.unlayoutCallback();\n  }\n\n  /**\n   * @return {!Promise}\n   * @private\n   */\n  ensureInitialized_() {\n    if (this.iniPromise_) {\n      return this.iniPromise_;\n    }\n    toggle(this.element, false);\n\n    this.iniPromise_ = this.getAmpDoc()\n      .whenFirstVisible()\n      // Rudimentary \"idle\" signal.\n      .then(() => Services.timerFor(this.win).promise(1))\n      .then(() => this.consentPromise_)\n      .then(() => Services.ampdocServiceFor(this.win))\n      .then(ampDocService => ampDocService.getAmpDoc(this.element))\n      .then(ampdoc =>\n        Promise.all([\n          instrumentationServicePromiseForDoc(ampdoc),\n          variableServicePromiseForDoc(ampdoc),\n        ])\n      )\n      .then(services => {\n        this.instrumentation_ = services[0];\n        this.variableService_ = services[1];\n        return new AnalyticsConfig(this.element).loadConfig();\n      })\n      .then(config => {\n        this.config_ = /** @type {!JsonObject} */ (config);\n        return new CookieWriter(this.win, this.element, this.config_).write();\n      })\n      .then(() => {\n        this.transport_ = new Transport(\n          this.win,\n          this.config_['transport'] || {}\n        );\n      })\n      .then(this.registerTriggers_.bind(this))\n      .then(this.initializeLinker_.bind(this));\n    return this.iniPromise_;\n  }\n\n  /**\n   * Registers triggers.\n   * @return {!Promise|undefined}\n   * @private\n   */\n  registerTriggers_() {\n    if (this.hasOptedOut_()) {\n      // Nothing to do when the user has opted out.\n      const TAG = this.getName_();\n      user().fine(TAG, 'User has opted out. No hits will be sent.');\n      return Promise.resolve();\n    }\n\n    this.generateRequests_();\n\n    if (!this.config_['triggers']) {\n      const TAG = this.getName_();\n      this.user().error(\n        TAG,\n        'No triggers were found in the ' +\n          'config. No analytics data will be sent.'\n      );\n      return Promise.resolve();\n    }\n\n    this.processExtraUrlParams_(\n      this.config_['extraUrlParams'],\n      this.config_['extraUrlParamsReplaceMap']\n    );\n\n    this.analyticsGroup_ = this.instrumentation_.createAnalyticsGroup(\n      this.element\n    );\n\n    this.transport_.maybeInitIframeTransport(\n      this.getAmpDoc().win,\n      this.element,\n      this.preconnect\n    );\n\n    const promises = [];\n    // Trigger callback can be synchronous. Do the registration at the end.\n    for (const k in this.config_['triggers']) {\n      if (hasOwn(this.config_['triggers'], k)) {\n        const trigger = this.config_['triggers'][k];\n        const expansionOptions = this.expansionOptions_(\n          dict({}),\n          trigger,\n          undefined,\n          true\n        );\n        const TAG = this.getName_();\n        if (!trigger) {\n          this.user().error(TAG, 'Trigger should be an object: ', k);\n          continue;\n        }\n        const hasRequestOrPostMessage =\n          trigger['request'] ||\n          (trigger['parentPostMessage'] && this.isInabox_);\n        if (!trigger['on'] || !hasRequestOrPostMessage) {\n          const errorMsgSeg = this.isInabox_ ? '/\"parentPostMessage\"' : '';\n          this.user().error(\n            TAG,\n            '\"on\" and \"request\"' +\n              errorMsgSeg +\n              ' attributes are required for data to be collected.'\n          );\n          continue;\n        }\n        // Check for not supported trigger for sandboxed analytics\n        if (this.isSandbox_) {\n          const eventType = trigger['on'];\n          if (\n            isEnumValue(AnalyticsEventType, eventType) &&\n            !WHITELIST_EVENT_IN_SANDBOX.includes(eventType)\n          ) {\n            this.user().error(\n              TAG,\n              eventType + ' is not supported for amp-analytics in scope'\n            );\n            continue;\n          }\n        }\n\n        this.processExtraUrlParams_(\n          trigger['extraUrlParams'],\n          this.config_['extraUrlParamsReplaceMap']\n        );\n        promises.push(\n          this.isSampledIn_(trigger).then(result => {\n            if (!result) {\n              return;\n            }\n            // replace selector and selectionMethod\n            if (this.isSandbox_) {\n              // Only support selection of parent element for analytics in scope\n              if (!this.element.parentElement) {\n                // In case parent element has been removed from DOM, do nothing\n                return;\n              }\n              trigger['selector'] = this.element.parentElement.tagName;\n              trigger['selectionMethod'] = 'closest';\n              this.addTrigger_(trigger);\n            } else if (trigger['selector']) {\n              // Expand the selector using variable expansion.\n              return this.variableService_\n                .expandTemplate(trigger['selector'], expansionOptions)\n                .then(selector => {\n                  trigger['selector'] = selector;\n                  this.addTrigger_(trigger);\n                });\n            } else {\n              this.addTrigger_(trigger);\n            }\n          })\n        );\n      }\n    }\n    return Promise.all(promises);\n  }\n\n  /**\n   * Asks the browser to preload a URL. Always also does a preconnect\n   * because browser support for that is better.\n   *\n   * @param {string} url\n   * @param {string=} opt_preloadAs\n   * @visibleForTesting\n   */\n  preload(url, opt_preloadAs) {\n    this.preconnect.preload(url, opt_preloadAs);\n  }\n\n  /**\n   * Calls `AnalyticsGroup.addTrigger` and reports any errors.\n   * @param {!JsonObject} config\n   * @private\n   * @noinline\n   */\n  addTrigger_(config) {\n    if (!this.analyticsGroup_) {\n      // No need to handle trigger for component that has already been detached\n      // from DOM\n      return;\n    }\n    try {\n      this.analyticsGroup_.addTrigger(\n        config,\n        this.handleEvent_.bind(this, config)\n      );\n    } catch (e) {\n      const TAG = this.getName_();\n      const eventType = config['on'];\n      rethrowAsync(TAG, 'Failed to process trigger \"' + eventType + '\"', e);\n    }\n  }\n\n  /**\n   * Replace the names of keys in params object with the values in replace map.\n   *\n   * @param {!Object<string, string>} params The params that need to be renamed.\n   * @param {!Object<string, string>} replaceMap A map of pattern and replacement\n   *    value.\n   * @private\n   */\n  processExtraUrlParams_(params, replaceMap) {\n    if (params && replaceMap) {\n      // If the config includes a extraUrlParamsReplaceMap, apply it as a set\n      // of params to String.replace to allow aliasing of the keys in\n      // extraUrlParams.\n      let count = 0;\n      for (const replaceMapKey in replaceMap) {\n        if (++count > MAX_REPLACES) {\n          const TAG = this.getName_();\n          this.user().error(\n            TAG,\n            'More than ' +\n              MAX_REPLACES +\n              ' extraUrlParamsReplaceMap rules ' +\n              \"aren't allowed; Skipping the rest\"\n          );\n          break;\n        }\n\n        for (const extraUrlParamsKey in params) {\n          const newkey = extraUrlParamsKey.replace(\n            replaceMapKey,\n            replaceMap[replaceMapKey]\n          );\n          if (extraUrlParamsKey != newkey) {\n            const value = params[extraUrlParamsKey];\n            delete params[extraUrlParamsKey];\n            params[newkey] = value;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @return {boolean} true if the user has opted out.\n   */\n  hasOptedOut_() {\n    const elementId = this.config_['optoutElementId'];\n    if (elementId && this.win.document.getElementById(elementId)) {\n      return true;\n    }\n\n    if (!this.config_['optout']) {\n      return false;\n    }\n\n    const props = this.config_['optout'].split('.');\n    let k = this.win;\n    for (let i = 0; i < props.length; i++) {\n      if (!k) {\n        return false;\n      }\n      k = k[props[i]];\n    }\n    // The actual property being called is controlled by vendor configs only\n    // that are approved in code reviews. User customization of the `optout`\n    // property is not allowed.\n    return k();\n  }\n\n  /**\n   * Goes through all the requests in predefined vendor config and tag's config\n   * and creates a map of request name to request template. These requests can\n   * then be used while sending a request to a server.\n   *\n   * @private\n   */\n  generateRequests_() {\n    if (!this.config_['requests']) {\n      if (!this.isInabox_) {\n        const TAG = this.getName_();\n        this.user().error(\n          TAG,\n          'No request strings defined. Analytics ' +\n            'data will not be sent from this page.'\n        );\n      }\n      return;\n    }\n\n    if (this.config_['requests']) {\n      for (const k in this.config_['requests']) {\n        if (hasOwn(this.config_['requests'], k)) {\n          const request = this.config_['requests'][k];\n          if (!request['baseUrl']) {\n            this.user().error(TAG, 'request must have a baseUrl');\n            delete this.config_['requests'][k];\n          }\n        }\n      }\n\n      // Expand any placeholders. For requests, we expand each string up to 5\n      // times to support nested requests. Leave any unresolved placeholders.\n      // Expand any requests placeholder.\n      for (const k in this.config_['requests']) {\n        this.config_['requests'][k]['baseUrl'] = expandTemplate(\n          this.config_['requests'][k]['baseUrl'],\n          key => {\n            const request = this.config_['requests'][key];\n            return (request && request['baseUrl']) || '${' + key + '}';\n          },\n          5\n        );\n      }\n\n      const requests = {};\n      for (const k in this.config_['requests']) {\n        if (hasOwn(this.config_['requests'], k)) {\n          const request = this.config_['requests'][k];\n          requests[k] = new RequestHandler(\n            this.element,\n            request,\n            this.preconnect,\n            this.transport_,\n            this.isSandbox_\n          );\n        }\n      }\n      this.requests_ = requests;\n    }\n  }\n\n  /**\n   * Create the linker-manager that will append linker params as necessary.\n   * @private\n   */\n  initializeLinker_() {\n    const type = this.element.getAttribute('type');\n    this.linkerManager_ = new LinkerManager(\n      this.getAmpDoc(),\n      this.config_,\n      type,\n      this.element\n    );\n    this.linkerManager_.init();\n  }\n\n  /**\n   * Callback for events that are registered by the config's triggers. This\n   * method generates requests and sends them out.\n   *\n   * @param {!JsonObject} trigger JSON config block that resulted in this event.\n   * @param {!JsonObject|!./events.AnalyticsEvent} event Object with details about the event.\n   * @private\n   */\n  handleEvent_(trigger, event) {\n    const requests = isArray(trigger['request'])\n      ? trigger['request']\n      : [trigger['request']];\n    for (let r = 0; r < requests.length; r++) {\n      const requestName = requests[r];\n      this.handleRequestForEvent_(requestName, trigger, event);\n    }\n  }\n\n  /**\n   * Processes a request for an event callback and sends it out.\n   *\n   * @param {string} requestName The requestName to process.\n   * @param {!JsonObject} trigger JSON config block that resulted in this event.\n   * @param {!JsonObject|!./events.AnalyticsEvent} event Object with details about the event.\n   * @private\n   */\n  handleRequestForEvent_(requestName, trigger, event) {\n    if (!this.element.ownerDocument.defaultView) {\n      const TAG = this.getName_();\n      dev().warn(TAG, 'request against destroyed embed: ', trigger['on']);\n    }\n\n    const request = this.requests_[requestName];\n    const hasPostMessage = this.isInabox_ && trigger['parentPostMessage'];\n\n    if (requestName != undefined && !request) {\n      const TAG = this.getName_();\n      this.user().error(\n        TAG,\n        'Ignoring request for event. Request string not found: ',\n        trigger['request']\n      );\n      if (!hasPostMessage) {\n        return;\n      }\n    }\n    this.checkTriggerEnabled_(trigger, event).then(enabled => {\n      if (!enabled) {\n        return;\n      }\n      this.expandAndSendRequest_(request, trigger, event);\n      this.expandAndPostMessage_(trigger, event);\n    });\n  }\n\n  /**\n   * @param {RequestHandler} request The request to process.\n   * @param {!JsonObject} trigger JSON config block that resulted in this event.\n   * @param {!JsonObject|!./events.AnalyticsEvent} event Object with details about the event.\n   * @private\n   */\n  expandAndSendRequest_(request, trigger, event) {\n    if (!request) {\n      return;\n    }\n    this.config_['vars']['requestCount']++;\n    const expansionOptions = this.expansionOptions_(event, trigger);\n    request.send(this.config_['extraUrlParams'], trigger, expansionOptions);\n  }\n\n  /**\n   * Expand and post message to parent window if applicable.\n   * @param {!JsonObject} trigger JSON config block that resulted in this event.\n   * @param {!JsonObject|!./events.AnalyticsEvent} event Object with details about the event.\n   * @private\n   */\n  expandAndPostMessage_(trigger, event) {\n    const msg = trigger['parentPostMessage'];\n    if (!msg || !this.isInabox_) {\n      // Only send message in inabox runtime with parentPostMessage specified.\n      return;\n    }\n    const expansionOptions = this.expansionOptions_(event, trigger);\n    expandPostMessage(\n      this.getAmpDoc(),\n      msg,\n      this.config_['extraUrlParams'],\n      trigger,\n      expansionOptions,\n      this.element\n    ).then(message => {\n      if (isIframed(this.win)) {\n        // Only post message with explict `parentPostMessage` to inabox host\n        this.win.parent./*OK*/ postMessage(message, '*');\n      }\n    });\n  }\n\n  /**\n   * @param {!JsonObject} trigger The config to use to determine sampling.\n   * @return {!Promise<boolean>} Whether the request should be sampled in or\n   * not based on sampleSpec.\n   * @private\n   */\n  isSampledIn_(trigger) {\n    /** @const {!JsonObject} */\n    const spec = trigger['sampleSpec'];\n    const resolve = Promise.resolve(true);\n    const TAG = this.getName_();\n    if (!spec) {\n      return resolve;\n    }\n    const sampleOn = spec['sampleOn'];\n    if (!sampleOn) {\n      this.user().error(TAG, 'Invalid sampleOn value.');\n      return resolve;\n    }\n    const threshold = parseFloat(spec['threshold']); // Threshold can be NaN.\n    if (threshold >= 0 && threshold <= 100) {\n      const expansionOptions = this.expansionOptions_(dict({}), trigger);\n      return this.expandTemplateWithUrlParams_(sampleOn, expansionOptions)\n        .then(key => this.cryptoService_.uniform(key))\n        .then(digest => digest * 100 < threshold);\n    }\n    user()./*OK*/ error(TAG, 'Invalid threshold for sampling.');\n    return resolve;\n  }\n\n  /**\n   * Checks if request for a trigger is enabled.\n   * @param {!JsonObject} trigger The config to use to determine if trigger is\n   * enabled.\n   * @param {!JsonObject|!./events.AnalyticsEvent} event Object with details about the event.\n   * @return {!Promise<boolean>} Whether trigger must be called.\n   * @private\n   */\n  checkTriggerEnabled_(trigger, event) {\n    const expansionOptions = this.expansionOptions_(event, trigger);\n    const enabledOnTagLevel = this.checkSpecEnabled_(\n      this.config_['enabled'],\n      expansionOptions\n    );\n    const enabledOnTriggerLevel = this.checkSpecEnabled_(\n      trigger['enabled'],\n      expansionOptions\n    );\n\n    return Promise.all([enabledOnTagLevel, enabledOnTriggerLevel]).then(\n      enabled => {\n        devAssert(enabled.length === 2);\n        return enabled[0] && enabled[1];\n      }\n    );\n  }\n\n  /**\n   * Checks result of 'enabled' spec evaluation. Returns false if spec is\n   * provided and value resolves to a falsey value (empty string, 0, false,\n   * null, NaN or undefined).\n   * @param {string|boolean} spec Expression that will be evaluated.\n   * @param {!ExpansionOptions} expansionOptions Expansion options.\n   * @return {!Promise<boolean>} False only if spec is provided and value is\n   * falsey.\n   * @private\n   */\n  checkSpecEnabled_(spec, expansionOptions) {\n    // Spec absence always resolves to true.\n    if (spec === undefined) {\n      return Promise.resolve(true);\n    }\n\n    if (typeof spec === 'boolean') {\n      return Promise.resolve(spec);\n    }\n\n    return this.expandTemplateWithUrlParams_(spec, expansionOptions).then(val =>\n      stringToBool(val)\n    );\n  }\n\n  /**\n   * Expands spec using provided expansion options and applies url replacement\n   * if necessary.\n   * @param {string} spec Expression that needs to be expanded.\n   * @param {!ExpansionOptions} expansionOptions Expansion options.\n   * @return {!Promise<string>} expanded spec.\n   * @private\n   */\n  expandTemplateWithUrlParams_(spec, expansionOptions) {\n    return this.variableService_\n      .expandTemplate(spec, expansionOptions)\n      .then(key =>\n        Services.urlReplacementsForDoc(this.element).expandUrlAsync(\n          key,\n          this.variableService_.getMacros(this.element)\n        )\n      );\n  }\n\n  /**\n   * @return {string} Returns a string to identify this tag. May not be unique\n   * if the element id is not unique.\n   * @private\n   */\n  getName_() {\n    return (\n      'AmpAnalytics ' + (this.element.getAttribute('id') || '<unknown id>')\n    );\n  }\n\n  /**\n   * @param {!JsonObject|!./events.AnalyticsEvent} source1\n   * @param {!JsonObject} source2\n   * @param {number=} opt_iterations\n   * @param {boolean=} opt_noEncode\n   * @return {!ExpansionOptions}\n   */\n  expansionOptions_(source1, source2, opt_iterations, opt_noEncode) {\n    const vars = dict();\n    mergeObjects(this.config_['vars'], vars);\n    mergeObjects(source2['vars'], vars);\n    mergeObjects(source1['vars'], vars);\n    return new ExpansionOptions(vars, opt_iterations, opt_noEncode);\n  }\n}\n\nAMP.extension(TAG, '0.1', AMP => {\n  // Register doc-service factory.\n  AMP.registerServiceForDoc(\n    'amp-analytics-instrumentation',\n    InstrumentationService\n  );\n  AMP.registerServiceForDoc('activity', Activity);\n  installLinkerReaderService(AMP.win);\n  AMP.registerServiceForDoc('amp-analytics-variables', VariableService);\n  // Register the element.\n  AMP.registerElement(TAG, AmpAnalytics);\n});\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dev, userAssert} from '../../../src/log';\nimport {getTrackerKeyName, getTrackerTypesForParentType} from './events';\n\n/**\n * Represents the group of analytics triggers for a single config. All triggers\n * are declared and released at the same time.\n *\n * @implements {../../../src/service.Disposable}\n */\nexport class AnalyticsGroup {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   * @param {!Element} analyticsElement\n   */\n  constructor(root, analyticsElement) {\n    /** @const */\n    this.root_ = root;\n    /** @const */\n    this.analyticsElement_ = analyticsElement;\n\n    /** @private @const {!Array<!UnlistenDef>} */\n    this.listeners_ = [];\n  }\n\n  /** @override */\n  dispose() {\n    this.listeners_.forEach(listener => {\n      listener();\n    });\n  }\n\n  /**\n   * Adds a trigger with the specified config and listener. The config must\n   * contain `on` property specifying the type of the event.\n   *\n   * Triggers registered on a group are automatically released when the\n   * group is disposed.\n   *\n   * @param {!JsonObject} config\n   * @param {function(!./events.AnalyticsEvent)} handler\n   */\n  addTrigger(config, handler) {\n    const eventType = dev().assertString(config['on']);\n    const trackerKey = getTrackerKeyName(eventType);\n    const trackerWhitelist = getTrackerTypesForParentType(this.root_.getType());\n\n    const tracker = this.root_.getTrackerForWhitelist(\n      trackerKey,\n      trackerWhitelist\n    );\n    userAssert(\n      !!tracker,\n      'Trigger type \"%s\" is not allowed in the %s',\n      eventType,\n      this.root_.getType()\n    );\n    const unlisten = tracker.add(\n      this.analyticsElement_,\n      eventType,\n      config,\n      handler\n    );\n    this.listeners_.push(unlisten);\n  }\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {HostServices} from '../../../src/inabox/host-services';\nimport {ScrollManager} from './scroll-manager';\nimport {Services} from '../../../src/services';\nimport {VisibilityManagerForMApp} from './visibility-manager-for-mapp';\nimport {\n  closestAncestorElementBySelector,\n  matches,\n  scopedQuerySelector,\n} from '../../../src/dom';\nimport {dev, user, userAssert} from '../../../src/log';\nimport {getMode} from '../../../src/mode';\nimport {layoutRectLtwh} from '../../../src/layout-rect';\nimport {map} from '../../../src/utils/object';\nimport {provideVisibilityManager} from './visibility-manager';\nimport {tryResolve} from '../../../src/utils/promise';\nimport {whenContentIniLoad} from '../../../src/ini-load';\n\nconst TAG = 'amp-analytics/analytics-root';\n\n/**\n * An analytics root. Analytics can be scoped to either ampdoc, embed or\n * an arbitrary AMP element.\n *\n * TODO(#22733): merge analytics root properties into ampdoc.\n *\n * @implements {../../../src/service.Disposable}\n * @abstract\n */\nexport class AnalyticsRoot {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @const */\n    this.ampdoc = ampdoc;\n\n    /** @const */\n    this.trackers_ = map();\n\n    /** @private {?./visibility-manager.VisibilityManager} */\n    this.visibilityManager_ = null;\n\n    /** @private {?./scroll-manager.ScrollManager} */\n    this.scrollManager_ = null;\n\n    /** @private {?Promise} */\n    this.usingHostAPIPromise_ = null;\n\n    /** @private {?../../../src/inabox/host-services.VisibilityInterface} */\n    this.hostVisibilityService_ = null;\n  }\n\n  /**\n   * @return {!Promise<boolean>}\n   */\n  isUsingHostAPI() {\n    if (this.usingHostAPIPromise_) {\n      return this.usingHostAPIPromise_;\n    }\n    if (!HostServices.isAvailable(this.ampdoc)) {\n      this.usingHostAPIPromise_ = Promise.resolve(false);\n    } else {\n      // TODO: Using the visibility service and apply it for all tracking types\n      const promise = HostServices.visibilityForDoc(this.ampdoc);\n      this.usingHostAPIPromise_ = promise\n        .then(visibilityService => {\n          this.hostVisibilityService_ = visibilityService;\n          return true;\n        })\n        .catch(error => {\n          dev().fine(\n            TAG,\n            'VisibilityServiceError - fallback=' + error.fallback\n          );\n          if (error.fallback) {\n            // Do not use HostAPI, fallback to original implementation.\n            return false;\n          }\n          // Cannot fallback, service error. Throw user error.\n          throw user().createError('Host Visibility Service Error');\n        });\n    }\n    return this.usingHostAPIPromise_;\n  }\n\n  /** @override */\n  dispose() {\n    for (const k in this.trackers_) {\n      this.trackers_[k].dispose();\n      delete this.trackers_[k];\n    }\n    if (this.visibilityManager_) {\n      this.visibilityManager_.dispose();\n    }\n    if (this.scrollManager_) {\n      this.scrollManager_.dispose();\n    }\n  }\n\n  /**\n   * Returns the type of the tracker.\n   * @return {string}\n   * @abstract\n   */\n  getType() {}\n\n  /**\n   * The root node the analytics is scoped to.\n   *\n   * @return {!Document|!ShadowRoot}\n   * @abstract\n   */\n  getRoot() {}\n\n  /**\n   * The viewer of analytics root\n   * @return {!../../../src/service/viewer-interface.ViewerInterface}\n   */\n  getViewer() {\n    return Services.viewerForDoc(this.ampdoc);\n  }\n\n  /**\n   * The root element within the analytics root.\n   *\n   * @return {!Element}\n   */\n  getRootElement() {\n    const root = this.getRoot();\n    return dev().assertElement(root.documentElement || root.body || root);\n  }\n\n  /**\n   * The host element of the analytics root.\n   *\n   * @return {?Element}\n   * @abstract\n   */\n  getHostElement() {}\n\n  /**\n   * The signals for the root.\n   *\n   * @return {!../../../src/utils/signals.Signals}\n   * @abstract\n   */\n  signals() {}\n\n  /**\n   * Whether this analytics root contains the specified node.\n   *\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  contains(node) {\n    return this.getRoot().contains(node);\n  }\n\n  /**\n   * Returns the element with the specified ID in the scope of this root.\n   *\n   * @param {string} unusedId\n   * @return {?Element}\n   * @abstract\n   */\n  getElementById(unusedId) {}\n\n  /**\n   * Returns the tracker for the specified name and list of allowed types.\n   *\n   * @param {string} name\n   * @param {!Object<string, function(new:./events.EventTracker)>} whitelist\n   * @return {?./events.EventTracker}\n   */\n  getTrackerForWhitelist(name, whitelist) {\n    const trackerProfile = whitelist[name];\n    if (trackerProfile) {\n      return this.getTracker(name, trackerProfile);\n    }\n    return null;\n  }\n\n  /**\n   * Returns the tracker for the specified name and type. If the tracker\n   * has not been requested before, it will be created.\n   *\n   * @param {string} name\n   * @param {function(new:./events.CustomEventTracker, !AnalyticsRoot)|function(new:./events.ClickEventTracker, !AnalyticsRoot)|function(new:./events.ScrollEventTracker, !AnalyticsRoot)|function(new:./events.SignalTracker, !AnalyticsRoot)|function(new:./events.IniLoadTracker, !AnalyticsRoot)|function(new:./events.VideoEventTracker, !AnalyticsRoot)|function(new:./events.VideoEventTracker, !AnalyticsRoot)|function(new:./events.VisibilityTracker, !AnalyticsRoot)|function(new:./events.AmpStoryEventTracker, !AnalyticsRoot)} klass\n   * @return {!./events.EventTracker}\n   */\n  getTracker(name, klass) {\n    let tracker = this.trackers_[name];\n    if (!tracker) {\n      tracker = new klass(this);\n      this.trackers_[name] = tracker;\n    }\n    return tracker;\n  }\n\n  /**\n   * Returns the tracker for the specified name or `null`.\n   * @param {string} name\n   * @return {?./events.EventTracker}\n   */\n  getTrackerOptional(name) {\n    return this.trackers_[name] || null;\n  }\n\n  /**\n   * Searches the element that matches the selector within the scope of the\n   * analytics root in relationship to the specified context node.\n   *\n   * @param {!Element} context\n   * @param {string} selector DOM query selector.\n   * @param {?string=} selectionMethod Allowed values are `null`,\n   *   `'closest'` and `'scope'`.\n   * @return {!Promise<!Element>} Element corresponding to the selector.\n   */\n  getElement(context, selector, selectionMethod = null) {\n    // Special case selectors. The selection method is irrelavant.\n    // And no need to wait for document ready.\n    if (selector == ':root') {\n      return tryResolve(() => this.getRootElement());\n    }\n    if (selector == ':host') {\n      return new Promise(resolve => {\n        resolve(\n          user().assertElement(\n            this.getHostElement(),\n            `Element \"${selector}\" not found`\n          )\n        );\n      });\n    }\n\n    // Wait for document-ready to avoid false missed searches\n    return this.ampdoc.whenReady().then(() => {\n      let found;\n      let result = null;\n      // Query search based on the selection method.\n      try {\n        if (selectionMethod == 'scope') {\n          found = scopedQuerySelector(context, selector);\n        } else if (selectionMethod == 'closest') {\n          found = closestAncestorElementBySelector(context, selector);\n        } else {\n          found = this.getRoot().querySelector(selector);\n        }\n      } catch (e) {\n        userAssert(false, `Invalid query selector ${selector}`);\n      }\n\n      // DOM search can \"look\" outside the boundaries of the root, thus make\n      // sure the result is contained.\n      if (found && this.contains(found)) {\n        result = found;\n      }\n      return user().assertElement(result, `Element \"${selector}\" not found`);\n    });\n  }\n\n  /**\n   * Searches the AMP element that matches the selector within the scope of the\n   * analytics root in relationship to the specified context node.\n   *\n   * @param {!Element} context\n   * @param {string} selector DOM query selector.\n   * @param {?string=} selectionMethod Allowed values are `null`,\n   *   `'closest'` and `'scope'`.\n   * @return {!Promise<!AmpElement>} AMP element corresponding to the selector if found.\n   */\n  getAmpElement(context, selector, selectionMethod) {\n    return this.getElement(context, selector, selectionMethod).then(element => {\n      userAssert(\n        element.classList.contains('i-amphtml-element'),\n        'Element \"%s\" is required to be an AMP element',\n        selector\n      );\n      return element;\n    });\n  }\n\n  /**\n   * Creates listener-filter for DOM events to check against the specified\n   * selector. If the node (or its ancestors) match the selector the listener\n   * will be called.\n   *\n   * @param {function(!Element, !Event)} listener The first argument is the\n   *   matched target node and the second is the original event.\n   * @param {!Element} context\n   * @param {string} selector DOM query selector.\n   * @param {?string=} selectionMethod Allowed values are `null`,\n   *   `'closest'` and `'scope'`.\n   * @return {function(!Event)}\n   */\n  createSelectiveListener(listener, context, selector, selectionMethod = null) {\n    return event => {\n      if (selector == ':host') {\n        // `:host` is not reachable via selective listener b/c event path\n        // cannot be retargeted across the boundary of the embed.\n        return;\n      }\n\n      // Navigate up the DOM tree to find the actual target.\n      const rootElement = this.getRootElement();\n      const isSelectAny = selector == '*';\n      const isSelectRoot = selector == ':root';\n      let {target} = event;\n      while (target) {\n        // Target must be contained by this root.\n        if (!this.contains(target)) {\n          break;\n        }\n        // `:scope` context must contain the target.\n        if (\n          selectionMethod == 'scope' &&\n          !isSelectRoot &&\n          !context.contains(target)\n        ) {\n          break;\n        }\n        // `closest()` target must contain the conext.\n        if (selectionMethod == 'closest' && !target.contains(context)) {\n          // However, the search must continue!\n          target = target.parentElement;\n          continue;\n        }\n\n        // Check if the target matches the selector.\n        if (\n          isSelectAny ||\n          (isSelectRoot && target == rootElement) ||\n          tryMatches_(target, selector)\n        ) {\n          listener(target, event);\n          // Don't fire the event multiple times even if the more than one\n          // ancestor matches the selector.\n          break;\n        }\n\n        target = target.parentElement;\n      }\n    };\n  }\n\n  /**\n   * Returns the promise that will be resolved as soon as the elements within\n   * the root have been loaded inside the first viewport of the root.\n   * @return {!Promise}\n   * @abstract\n   */\n  whenIniLoaded() {}\n\n  /**\n   * Returns the visibility root corresponding to this analytics root (ampdoc\n   * or embed). The visibility root is created lazily as needed and takes\n   * care of all visibility tracking functions.\n   *\n   * The caller needs to make sure to call getVisibilityManager after\n   * usingHostAPIPromise has resolved\n   * @return {!./visibility-manager.VisibilityManager}\n   */\n  getVisibilityManager() {\n    if (!this.visibilityManager_) {\n      if (this.hostVisibilityService_) {\n        // If there is hostAPI (hostAPI never exist with the FIE case)\n        this.visibilityManager_ = new VisibilityManagerForMApp(\n          this.ampdoc,\n          this.hostVisibilityService_\n        );\n      } else {\n        this.visibilityManager_ = provideVisibilityManager(this.getRoot());\n      }\n    }\n    return this.visibilityManager_;\n  }\n\n  /**\n   *  Returns the Scroll Managet corresponding to this analytics root.\n   * The Scroll Manager is created lazily as needed, and will handle\n   * calling all handlers for a scroll event.\n   * @return {!./scroll-manager.ScrollManager}\n   */\n  getScrollManager() {\n    // TODO (zhouyx@): Disallow scroll trigger with host API\n    if (!this.scrollManager_) {\n      this.scrollManager_ = new ScrollManager(this.ampdoc);\n    }\n\n    return this.scrollManager_;\n  }\n}\n\n/**\n * The implementation of the analytics root for an ampdoc.\n */\nexport class AmpdocAnalyticsRoot extends AnalyticsRoot {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    super(ampdoc);\n  }\n\n  /** @override */\n  getType() {\n    return 'ampdoc';\n  }\n\n  /** @override */\n  getRoot() {\n    return this.ampdoc.getRootNode();\n  }\n\n  /** @override */\n  getHostElement() {\n    // ampdoc is always the root of everything - no host.\n    return null;\n  }\n\n  /** @override */\n  signals() {\n    return this.ampdoc.signals();\n  }\n\n  /** @override */\n  getElementById(id) {\n    return this.ampdoc.getElementById(id);\n  }\n\n  /** @override */\n  whenIniLoaded() {\n    const viewport = Services.viewportForDoc(this.ampdoc);\n    let rect;\n    if (getMode(this.ampdoc.win).runtime == 'inabox') {\n      // TODO(dvoytenko, #7971): This is currently addresses incorrect position\n      // calculations in a in-a-box viewport where all elements are offset\n      // to the bottom of the embed. The current approach, even if fixed, still\n      // creates a significant probability of risk condition.\n      // Once address, we can simply switch to the 0/0 approach in the `else`\n      // clause.\n      rect = viewport.getLayoutRect(this.getRootElement());\n    } else {\n      const size = viewport.getSize();\n      rect = layoutRectLtwh(0, 0, size.width, size.height);\n    }\n    return whenContentIniLoad(this.ampdoc, this.ampdoc.win, rect);\n  }\n}\n\n/**\n * The implementation of the analytics root for FIE.\n * TODO(#22733): merge into AnalyticsRoot once ampdoc-fie is launched.\n */\nexport class EmbedAnalyticsRoot extends AnalyticsRoot {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {!../../../src/friendly-iframe-embed.FriendlyIframeEmbed} embed\n   */\n  constructor(ampdoc, embed) {\n    super(ampdoc);\n    /** @const */\n    this.embed = embed;\n  }\n\n  /** @override */\n  getType() {\n    return 'embed';\n  }\n\n  /** @override */\n  getRoot() {\n    return this.embed.win.document;\n  }\n\n  /** @override */\n  getHostElement() {\n    return this.embed.iframe;\n  }\n\n  /** @override */\n  signals() {\n    return this.embed.signals();\n  }\n\n  /** @override */\n  getElementById(id) {\n    return this.embed.win.document.getElementById(id);\n  }\n\n  /** @override */\n  whenIniLoaded() {\n    return this.embed.whenIniLoaded();\n  }\n}\n\n/**\n * @param  {!Element} el\n * @param  {string} selector\n * @return {boolean}\n * @noinline\n */\nfunction tryMatches_(el, selector) {\n  try {\n    return matches(el, selector);\n  } catch (e) {\n    user().error(TAG, 'Bad query selector.', selector, e);\n    return false;\n  }\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ANALYTICS_CONFIG} from './vendors';\nimport {Services} from '../../../src/services';\nimport {assertHttpsUrl} from '../../../src/url';\nimport {calculateScriptBaseUrl} from '../../../src/service/extension-location';\nimport {deepMerge, dict, hasOwn} from '../../../src/utils/object';\nimport {dev, user, userAssert} from '../../../src/log';\nimport {getChildJsonConfig} from '../../../src/json';\nimport {getMode} from '../../../src/mode';\nimport {isArray, isObject, toWin} from '../../../src/types';\nimport {isCanary} from '../../../src/experiments';\nimport {variableServiceForDoc} from './variables';\n\nconst TAG = 'amp-analytics/config';\n\nexport class AnalyticsConfig {\n  /**\n   * @param {!Element} element\n   */\n  constructor(element) {\n    /** @private {!Element} */\n    this.element_ = element;\n\n    /** @private {?Window} */\n    this.win_ = null;\n\n    /**\n     * @const {!JsonObject} Copied here for tests.\n     * @private\n     */\n    this.predefinedConfig_ = ANALYTICS_CONFIG;\n\n    /**\n     * @private {JsonObject}\n     */\n    this.config_ = dict();\n\n    /**\n     * @private {JsonObject}\n     */\n    this.remoteConfig_ = dict();\n\n    /** @private {boolean} */\n    this.isSandbox_ = false;\n  }\n\n  /**\n   * @return {!Promise<JsonObject>}\n   */\n  loadConfig() {\n    this.win_ = this.element_.ownerDocument.defaultView;\n    this.isSandbox_ = this.element_.hasAttribute('sandbox');\n\n    return Promise.all([this.fetchRemoteConfig_(), this.fetchVendorConfig_()])\n      .then(this.processConfigs_.bind(this))\n      .then(this.checkWarningMessage_.bind(this))\n      .then(this.addExperimentParams_.bind(this))\n      .then(() => this.config_);\n  }\n\n  /**\n   * Constructs the URL where the given vendor config is located\n   * @private\n   * @param {string} vendor the vendor name\n   * @return {string} the URL to request the vendor config file from\n   */\n  getVendorUrl_(vendor) {\n    const baseUrl = calculateScriptBaseUrl(\n      this.win_.location,\n      getMode().localDev\n    );\n    // bg has a special canary config\n    const canary = vendor === 'bg' && isCanary(self) ? '.canary' : '';\n    return `${baseUrl}/rtv/${\n      getMode().rtvVersion\n    }/v0/analytics-vendors/${vendor}${canary}.json`;\n  }\n\n  /**\n   * Returns a promise that resolves when vendor config is ready (or\n   * immediately if no vendor config is specified)\n   * @private\n   * @return {!Promise<undefined>}\n   */\n  fetchVendorConfig_() {\n    // eslint-disable-next-line no-undef\n    if (!ANALYTICS_VENDOR_SPLIT) {\n      return Promise.resolve();\n    }\n\n    const type = this.element_.getAttribute('type');\n    if (!type) {\n      return Promise.resolve();\n    }\n\n    const vendorUrl = this.getVendorUrl_(type);\n\n    const TAG = this.getName_();\n    dev().fine(TAG, 'Fetching vendor config', vendorUrl);\n\n    return Services.xhrFor(toWin(this.win_))\n      .fetchJson(vendorUrl)\n      .then(res => res.json())\n      .then(\n        jsonValue => {\n          this.predefinedConfig_[type] = jsonValue;\n          dev().fine(TAG, 'Vendor config loaded for ' + type, jsonValue);\n        },\n        err => {\n          user().error(TAG, 'Error loading vendor config: ', vendorUrl, err);\n        }\n      );\n  }\n\n  /**\n   * TODO: cleanup #22757 @jonathantyng\n   * Append special param to pageview request for RC and experiment builds\n   * for the googleanalytics component. This is to track pageview changes\n   * in AB experiment\n   */\n  addExperimentParams_() {\n    const type = this.element_.getAttribute('type');\n    const rtv = getMode().rtvVersion;\n    const isRc = rtv ? rtv.substring(0, 2) === '03' : false;\n    // eslint-disable-next-line no-undef\n    const isExperiment = ANALYTICS_VENDOR_SPLIT;\n\n    if (\n      type === 'googleanalytics' &&\n      (isRc || isExperiment) &&\n      this.config_['requests']\n    ) {\n      if (this.config_['requests']['pageview']) {\n        this.config_['requests']['pageview'][\n          'baseUrl'\n        ] += `&aae=${isExperiment}`;\n      }\n      if (this.config_['requests']['timing']) {\n        this.config_['requests']['timing']['baseUrl'] += `&aae=${isExperiment}`;\n      }\n    }\n  }\n\n  /**\n   * Returns a promise that resolves when remote config is ready (or\n   * immediately if no remote config is specified.)\n   * @private\n   * @return {!Promise<undefined>}\n   */\n  fetchRemoteConfig_() {\n    let remoteConfigUrl = this.element_.getAttribute('config');\n    if (!remoteConfigUrl || this.isSandbox_) {\n      return Promise.resolve();\n    }\n    assertHttpsUrl(remoteConfigUrl, this.element_);\n    const TAG = this.getName_();\n    dev().fine(TAG, 'Fetching remote config', remoteConfigUrl);\n    const fetchConfig = {};\n    if (this.element_.hasAttribute('data-credentials')) {\n      fetchConfig.credentials = this.element_.getAttribute('data-credentials');\n    }\n    return Services.urlReplacementsForDoc(this.element_)\n      .expandUrlAsync(remoteConfigUrl)\n      .then(expandedUrl => {\n        remoteConfigUrl = expandedUrl;\n        return Services.xhrFor(toWin(this.win_)).fetchJson(\n          remoteConfigUrl,\n          fetchConfig\n        );\n      })\n      .then(res => res.json())\n      .then(\n        jsonValue => {\n          this.remoteConfig_ = jsonValue;\n          dev().fine(TAG, 'Remote config loaded', remoteConfigUrl);\n        },\n        err => {\n          user().error(\n            TAG,\n            'Error loading remote config: ',\n            remoteConfigUrl,\n            err\n          );\n        }\n      );\n  }\n\n  /**\n   * Returns a promise that resolves when configuration is re-written if\n   * configRewriter is configured by a vendor.\n   * @private\n   * @return {!Promise<undefined>}\n   */\n  processConfigs_() {\n    const configRewriterUrl = this.getConfigRewriter_()['url'];\n\n    const config = dict({});\n    const inlineConfig = this.getInlineConfig_();\n    this.validateTransport_(inlineConfig);\n    mergeObjects(inlineConfig, config);\n    mergeObjects(this.remoteConfig_, config);\n\n    if (!configRewriterUrl || this.isSandbox_) {\n      this.config_ = this.mergeConfigs_(config);\n      // use default configuration merge.\n      return Promise.resolve();\n    }\n\n    return this.handleConfigRewriter_(config, configRewriterUrl);\n  }\n\n  /**\n   * Handles logic if configRewriter is enabled.\n   * @param {!JsonObject} config\n   * @param {string} configRewriterUrl\n   * @return {!Promise<undefined>}\n   */\n  handleConfigRewriter_(config, configRewriterUrl) {\n    assertHttpsUrl(configRewriterUrl, this.element_);\n    const TAG = this.getName_();\n    dev().fine(TAG, 'Rewriting config', configRewriterUrl);\n\n    return this.handleVarGroups_(config).then(() => {\n      const fetchConfig = {\n        method: 'POST',\n        body: config,\n      };\n      if (this.element_.hasAttribute('data-credentials')) {\n        fetchConfig.credentials = this.element_.getAttribute(\n          'data-credentials'\n        );\n      }\n      return Services.urlReplacementsForDoc(this.element_)\n        .expandUrlAsync(configRewriterUrl)\n        .then(expandedUrl => {\n          return Services.xhrFor(toWin(this.win_)).fetchJson(\n            expandedUrl,\n            fetchConfig\n          );\n        })\n        .then(res => res.json())\n        .then(\n          jsonValue => {\n            this.config_ = this.mergeConfigs_(jsonValue);\n            dev().fine(TAG, 'Configuration re-written', configRewriterUrl);\n          },\n          err => {\n            user().error(\n              TAG,\n              'Error rewriting configuration: ',\n              configRewriterUrl,\n              err\n            );\n          }\n        );\n    });\n  }\n\n  /**\n   * Check if config has warning, display on console and\n   * remove the property.\n   * @private\n   */\n  checkWarningMessage_() {\n    if (this.config_['warningMessage']) {\n      const TAG = this.getName_();\n      const type = this.element_.getAttribute('type');\n      const remoteConfigUrl = this.element_.getAttribute('config');\n\n      user().warn(\n        TAG,\n        'Warning from analytics vendor%s%s: %s',\n        type ? ' ' + type : '',\n        remoteConfigUrl ? ' with remote config url ' + remoteConfigUrl : '',\n        String(this.config_['warningMessage'])\n      );\n      delete this.config_['warningMessage'];\n    }\n  }\n\n  /**\n   * Check to see which varGroups are enabled, resolve and merge them into\n   * vars object.\n   * @param {!JsonObject} pubConfig\n   * @return {!Promise}\n   */\n  handleVarGroups_(pubConfig) {\n    const pubRewriterConfig = pubConfig['configRewriter'];\n    const pubVarGroups = pubRewriterConfig && pubRewriterConfig['varGroups'];\n    const vendorVarGroups = this.getConfigRewriter_()['varGroups'];\n\n    if (!pubVarGroups && !vendorVarGroups) {\n      return Promise.resolve();\n    }\n\n    if (pubVarGroups && !vendorVarGroups) {\n      const TAG = this.getName_();\n      user().warn(\n        TAG,\n        'This analytics provider does not currently support varGroups'\n      );\n      return Promise.resolve();\n    }\n\n    // Create object that will later hold all the resolved variables, and any\n    // intermediary objects as necessary.\n    pubConfig['configRewriter'] = pubConfig['configRewriter'] || dict();\n    const rewriterConfig = pubConfig['configRewriter'];\n    rewriterConfig['vars'] = dict({});\n\n    const allPromises = [];\n    // Merge publisher && vendor varGroups to see what has been enabled.\n    const mergedConfig = pubVarGroups || dict();\n    deepMerge(mergedConfig, vendorVarGroups);\n\n    Object.keys(mergedConfig).forEach(groupName => {\n      const group = mergedConfig[groupName];\n      if (!group['enabled']) {\n        // Any varGroups must be explicitly enabled.\n        return;\n      }\n\n      const groupPromise = this.shallowExpandObject(this.element_, group).then(\n        expandedGroup => {\n          // This is part of the user config and should not be sent.\n          delete expandedGroup['enabled'];\n          // Merge all groups into single `vars` object.\n          Object.assign(rewriterConfig['vars'], expandedGroup);\n        }\n      );\n      allPromises.push(groupPromise);\n    });\n\n    return Promise.all(allPromises).then(() => {\n      // Don't send an empty vars payload.\n      if (!Object.keys(rewriterConfig['vars']).length) {\n        return delete pubConfig['configRewriter'];\n      }\n      // Don't send varGroups in payload to configRewriter endpoint.\n      pubVarGroups && delete rewriterConfig['varGroups'];\n    });\n  }\n\n  /**\n   * Merges various sources of configs and stores them in a member variable.\n   *\n   * Order of precedence for configs from highest to lowest:\n   * - Remote config: specified through an attribute of the tag.\n   * - Inline config: specified insize the tag.\n   * - Predefined config: Defined as part of the platform.\n   * - Default config: Built-in config shared by all amp-analytics tags.\n   *\n   * @private\n   * @param {!JsonObject} rewrittenConfig\n   * @return {!JsonObject}\n   */\n  mergeConfigs_(rewrittenConfig) {\n    // Initialize config with analytics related vars.\n    const config = dict({\n      'vars': {\n        'requestCount': 0,\n      },\n    });\n    const defaultConfig = this.predefinedConfig_['default'] || {};\n    mergeObjects(expandConfigRequest(defaultConfig), config);\n    mergeObjects(\n      expandConfigRequest(this.getTypeConfig_()),\n      config,\n      /* predefined */ true\n    );\n    mergeObjects(\n      expandConfigRequest(rewrittenConfig),\n      config,\n      /* predefined */ true\n    );\n    return config;\n  }\n\n  /**\n   * Reads configRewriter from a vendor config.\n   * @return {!JsonObject}\n   */\n  getConfigRewriter_() {\n    return this.getTypeConfig_()['configRewriter'] || {};\n  }\n\n  /**\n   * Reads a vendor configuration.\n   * @return {!JsonObject}\n   */\n  getTypeConfig_() {\n    const type = this.element_.getAttribute('type');\n    return this.predefinedConfig_[type] || {};\n  }\n\n  /**\n   * @private\n   * @return {!JsonObject}\n   * @noinline\n   */\n  getInlineConfig_() {\n    if (this.element_.CONFIG) {\n      // If the analytics element is created by runtime, return cached config.\n      return this.element_.CONFIG;\n    }\n    let inlineConfig = {};\n    const TAG = this.getName_();\n    try {\n      const {children} = this.element_;\n      if (children.length == 1) {\n        inlineConfig = getChildJsonConfig(this.element_);\n      } else if (children.length > 1) {\n        user().error(TAG, 'The tag should contain only one <script> child.');\n      }\n    } catch (er) {\n      user().error(TAG, er.message);\n    }\n    return /** @type {!JsonObject} */ (inlineConfig);\n  }\n\n  /**\n   * Validates transport configuration.\n   * @param {!JsonObject} inlineConfig\n   */\n  validateTransport_(inlineConfig) {\n    const type = this.element_.getAttribute('type');\n    if (this.predefinedConfig_[type]) {\n      // TODO(zhouyx, #7096) Track overwrite percentage. Prevent transport\n      // overwriting\n      if (inlineConfig['transport'] || this.remoteConfig_['transport']) {\n        const TAG = this.getName_();\n        user().error(\n          TAG,\n          'Inline or remote config should not ' +\n            'overwrite vendor transport settings'\n        );\n      }\n    }\n\n    // Do NOT allow inline or remote config to use 'transport: iframe'\n    if (inlineConfig['transport'] && inlineConfig['transport']['iframe']) {\n      user().error(\n        TAG,\n        'Inline configs are not allowed to specify transport iframe'\n      );\n      if (!getMode().localDev || getMode().test) {\n        inlineConfig['transport']['iframe'] = undefined;\n      }\n    }\n\n    if (\n      this.remoteConfig_['transport'] &&\n      this.remoteConfig_['transport']['iframe']\n    ) {\n      user().error(\n        TAG,\n        'Remote configs are not allowed to specify transport iframe'\n      );\n      this.remoteConfig_['transport']['iframe'] = undefined;\n    }\n  }\n\n  /**\n   * @return {string} Returns a string to identify this tag. May not be unique\n   * if the element id is not unique.\n   * @private\n   */\n  getName_() {\n    return (\n      'AmpAnalytics ' + (this.element_.getAttribute('id') || '<unknown id>')\n    );\n  }\n\n  /**\n   * Expands all key value pairs asynchronously and returns a promise that will\n   * resolve with the expanded object.\n   * @param {!Element} element\n   * @param {!Object} obj\n   * @return {!Promise<!Object>}\n   */\n  shallowExpandObject(element, obj) {\n    const expandedObj = dict();\n    const keys = [];\n    const expansionPromises = [];\n\n    const urlReplacements = Services.urlReplacementsForDoc(element);\n    const bindings = variableServiceForDoc(element).getMacros(element);\n\n    Object.keys(obj).forEach(key => {\n      keys.push(key);\n      const expanded = urlReplacements.expandStringAsync(obj[key], bindings);\n      expansionPromises.push(expanded);\n    });\n\n    return Promise.all(expansionPromises).then(expandedValues => {\n      keys.forEach((key, i) => (expandedObj[key] = expandedValues[i]));\n      return expandedObj;\n    });\n  }\n}\n\n/**\n * Merges two objects. If the value is array or plain object, the values are\n * merged otherwise the value is overwritten.\n *\n * @param {Object|Array} from Object or array to merge from\n * @param {Object|Array} to Object or Array to merge into\n * @param {boolean=} opt_predefinedConfig\n * @return {*} TODO(#23582): Specify return type\n */\nexport function mergeObjects(from, to, opt_predefinedConfig) {\n  if (to === null || to === undefined) {\n    to = {};\n  }\n\n  // Assert that optouts are allowed only in predefined configs.\n  // The last expression adds an exception of known, safe optout function\n  // that is already being used in the wild.\n  userAssert(\n    opt_predefinedConfig ||\n      !from ||\n      !from['optout'] ||\n      from['optout'] == '_gaUserPrefs.ioo' ||\n      from['optoutElementId'] == '__gaOptOutExtension',\n    'optout property is only available to vendor config.'\n  );\n\n  for (const property in from) {\n    userAssert(\n      opt_predefinedConfig || property != 'iframePing',\n      'iframePing config is only available to vendor config.'\n    );\n    // Only deal with own properties.\n    if (hasOwn(from, property)) {\n      if (isArray(from[property])) {\n        if (!isArray(to[property])) {\n          to[property] = [];\n        }\n        to[property] = mergeObjects(\n          from[property],\n          to[property],\n          opt_predefinedConfig\n        );\n      } else if (isObject(from[property])) {\n        if (!isObject(to[property])) {\n          to[property] = {};\n        }\n        to[property] = mergeObjects(\n          from[property],\n          to[property],\n          opt_predefinedConfig\n        );\n      } else {\n        to[property] = from[property];\n      }\n    }\n  }\n  return to;\n}\n\n/**\n * Expand config's request to object\n * @param {!JsonObject} config\n * @return {?JsonObject}\n * @visibleForTesting\n */\nexport function expandConfigRequest(config) {\n  if (!config['requests']) {\n    return config;\n  }\n  for (const k in config['requests']) {\n    if (hasOwn(config['requests'], k)) {\n      config['requests'][k] = expandRequestStr(config['requests'][k]);\n    }\n  }\n\n  return handleTopLevelAttributes_(config);\n}\n\n/**\n * Expand single request to an object\n * @param {!JsonObject} request\n * @return {*} TODO(#23582): Specify return type\n */\nfunction expandRequestStr(request) {\n  if (isObject(request)) {\n    return request;\n  }\n  return {\n    'baseUrl': request,\n  };\n}\n\n/**\n * Handles top level fields in the given config\n * @param {!JsonObject} config\n * @return {JsonObject}\n */\nfunction handleTopLevelAttributes_(config) {\n  // handle a top level requestOrigin\n  if (hasOwn(config, 'requests') && hasOwn(config, 'requestOrigin')) {\n    const requestOrigin = config['requestOrigin'];\n\n    for (const requestName in config['requests']) {\n      // only add top level request origin into request if it doesn't have one\n      if (!hasOwn(config['requests'][requestName], 'origin')) {\n        config['requests'][requestName]['origin'] = requestOrigin;\n      }\n    }\n  }\n\n  return config;\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getCookie} from '../../../src/cookies';\nimport {getMode} from '../../../src/mode';\nimport {isInFie} from '../../../src/iframe-helper';\nimport {isProxyOrigin} from '../../../src/url';\n\n/**\n * COOKIE macro resolver\n * @param {!Window} win\n * @param {!Element} element\n * @param {string} name\n * @return {?string}\n */\nexport function cookieReader(win, element, name) {\n  if (!isCookieAllowed(win, element)) {\n    return null;\n  }\n  return getCookie(win, name);\n}\n\n/**\n * Determine if cookie writing/reading feature is supported in current\n * environment.\n * Disable cookie writer in friendly iframe and proxy origin and inabox.\n * @param {!Window} win\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isCookieAllowed(win, element) {\n  return (\n    !isInFie(element) &&\n    !isProxyOrigin(win.location) &&\n    !(getMode(win).runtime == 'inabox')\n  );\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {BASE_CID_MAX_AGE_MILLIS} from '../../../src/service/cid-impl';\nimport {Services} from '../../../src/services';\nimport {hasOwn} from '../../../src/utils/object';\nimport {isCookieAllowed} from './cookie-reader';\nimport {isObject} from '../../../src/types';\nimport {setCookie} from '../../../src/cookies';\nimport {user} from '../../../src/log';\nimport {variableServiceForDoc} from './variables';\n\nconst TAG = 'amp-analytics/cookie-writer';\n\nconst RESERVED_KEYS = {\n  'referrerDomains': true,\n  'enabled': true,\n  'cookiePath': true,\n  'cookieMaxAge': true,\n  'cookieSecure': true,\n  'cookieDomain': true,\n};\n\nexport class CookieWriter {\n  /**\n   * @param {!Window} win\n   * @param {!Element} element\n   * @param {!JsonObject} config\n   */\n  constructor(win, element, config) {\n    /** @private {!Window} */\n    this.win_ = win;\n\n    /** @private {!Element} */\n    this.element_ = element;\n\n    /** @private {!../../../src/service/url-replacements-impl.UrlReplacements} */\n    this.urlReplacementService_ = Services.urlReplacementsForDoc(element);\n\n    /** @private {?Promise} */\n    this.writePromise_ = null;\n\n    /** @private {!JsonObject} */\n    this.config_ = config;\n\n    /** @const @private {!JsonObject} */\n    this.bindings_ = variableServiceForDoc(element).getMacros(element);\n  }\n\n  /**\n   * @return {!Promise}\n   */\n  write() {\n    if (!this.writePromise_) {\n      this.writePromise_ = this.init_();\n    }\n\n    return this.writePromise_;\n  }\n\n  /**\n   * Parse the config and write to cookie\n   * Config looks like\n   * cookies: {\n   *   enabled: true/false, //Default to true\n   *   cookieNameA: {\n   *     value: cookieValueA (QUERY_PARAM/LINKER_PARAM)\n   *   },\n   *   cookieValueB: {\n   *     value: cookieValueB\n   *   }\n   *   ...\n   * }\n   * @return {!Promise}\n   */\n  init_() {\n    // TODO: Need the consider the case for shadow doc.\n    if (!isCookieAllowed(this.win_, this.element_)) {\n      // Note: It's important to check origin here so that setCookie doesn't\n      // throw error \"should not attempt ot set cookie on proxy origin\"\n      return Promise.resolve();\n    }\n\n    if (!hasOwn(this.config_, 'cookies')) {\n      return Promise.resolve();\n    }\n\n    if (!isObject(this.config_['cookies'])) {\n      user().error(TAG, 'cookies config must be an object');\n      return Promise.resolve();\n    }\n\n    const inputConfig = this.config_['cookies'];\n\n    if (inputConfig['enabled'] === false) {\n      // Enabled by default\n      // TODO: Allow indiviual cookie object to override the value\n      return Promise.resolve();\n    }\n\n    const cookieExpireDateMs = this.getCookieMaxAgeMs_(inputConfig);\n\n    const ids = Object.keys(inputConfig);\n    const promises = [];\n    for (let i = 0; i < ids.length; i++) {\n      const cookieName = ids[i];\n      const cookieObj = inputConfig[cookieName];\n      if (this.isValidCookieConfig_(cookieName, cookieObj)) {\n        promises.push(\n          this.expandAndWrite_(\n            cookieName,\n            cookieObj['value'],\n            cookieExpireDateMs\n          )\n        );\n      }\n    }\n\n    return Promise.all(promises);\n  }\n\n  /**\n   * Retrieves cookieMaxAge from given config, provides default value if no\n   * value is found or value is invalid\n   * @param {JsonObject} inputConfig\n   * @return {number}\n   */\n  getCookieMaxAgeMs_(inputConfig) {\n    if (!hasOwn(inputConfig, 'cookieMaxAge')) {\n      return BASE_CID_MAX_AGE_MILLIS;\n    }\n\n    const cookieMaxAgeNumber = Number(inputConfig['cookieMaxAge']);\n\n    // 0 is a special case which we allow\n    if (!cookieMaxAgeNumber && cookieMaxAgeNumber !== 0) {\n      user().error(\n        TAG,\n        'invalid cookieMaxAge %s, falling back to default value (1 year)',\n        inputConfig['cookieMaxAge']\n      );\n      return BASE_CID_MAX_AGE_MILLIS;\n    }\n\n    if (cookieMaxAgeNumber <= 0) {\n      user().warn(\n        TAG,\n        'cookieMaxAge %s less than or equal to 0, cookie will immediately expire',\n        inputConfig['cookieMaxAge']\n      );\n    }\n\n    // convert cookieMaxAge (sec) to milliseconds\n    return cookieMaxAgeNumber * 1000;\n  }\n\n  /**\n   * Check whether the cookie value is supported. Currently only support\n   * QUERY_PARAM(***) and LINKER_PARAM(***, ***)\n   *\n   * CookieObj should looks like\n   * cookieName: {\n   *  value: string (cookieValue),\n   * }\n   * @param {string} cookieName\n   * @param {*} cookieConfig\n   * @return {boolean}\n   */\n  isValidCookieConfig_(cookieName, cookieConfig) {\n    if (RESERVED_KEYS[cookieName]) {\n      return false;\n    }\n\n    if (!isObject(cookieConfig)) {\n      user().error(TAG, 'cookieValue must be configured in an object');\n      return false;\n    }\n\n    if (!hasOwn(cookieConfig, 'value')) {\n      user().error(TAG, 'value is required in the cookieValue object');\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Expand the value and write to cookie if necessary\n   * @param {string} cookieName\n   * @param {string} cookieValue\n   * @param {number} cookieExpireDateMs\n   * @return {!Promise}\n   */\n  expandAndWrite_(cookieName, cookieValue, cookieExpireDateMs) {\n    // Note: Have to use `expandStringAsync` because QUERY_PARAM can wait for\n    // trackImpressionPromise and resolve async\n    return this.urlReplacementService_\n      .expandStringAsync(cookieValue, this.bindings_)\n      .then(value => {\n        // Note: We ignore empty cookieValue, that means currently we don't\n        // provide a way to overwrite or erase existing cookie\n        if (value) {\n          const expireDate = Date.now() + cookieExpireDateMs;\n          setCookie(this.win_, cookieName, value, expireDate, {\n            highestAvailableDomain: true,\n          });\n        }\n      })\n      .catch(e => {\n        user().error(TAG, 'Error expanding cookie string', e);\n      });\n  }\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {utf8Encode} from '../../../src/utils/bytes';\n\n/**\n * Standard key for CRC32\n * https://en.wikipedia.org/wiki/Cyclic_redundancy_check#Polynomial_representations_of_cyclic_redundancy_checks\n * @const {number}\n */\nconst CRC32_KEY = 0xedb88320;\n\n/** @private {?Array<number>} */\nlet crcTable = null;\n\n/**\n * Returns CRC32 checksum for provided string.\n * @param {string} str\n * @return {number}\n */\nexport function crc32(str) {\n  if (!crcTable) {\n    crcTable = makeCrcTable();\n  }\n\n  const bytes = utf8Encode(str);\n\n  // Shrink to 32 bits.\n  let crc = -1 >>> 0;\n  for (let i = 0; i < bytes.length; i++) {\n    const lookupIndex = (crc ^ bytes[i]) & 0xff;\n    crc = (crc >>> 8) ^ crcTable[lookupIndex];\n  }\n  return (crc ^ -1) >>> 0;\n}\n\n/**\n * Generates CRC lookup table.\n * @return {!Array<number>}\n */\nfunction makeCrcTable() {\n  const crcTable = new Array(256);\n  for (let i = 0; i < 256; i++) {\n    let c = i;\n    for (let j = 0; j < 8; j++) {\n      if (c & 1) {\n        c = (c >>> 1) ^ CRC32_KEY;\n      } else {\n        c = c >>> 1;\n      }\n    }\n    crcTable[i] = c;\n  }\n  return crcTable;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CommonSignals} from '../../../src/common-signals';\nimport {Deferred} from '../../../src/utils/promise';\nimport {Observable} from '../../../src/observable';\nimport {\n  PlayingStates,\n  VideoAnalyticsEvents,\n  videoAnalyticsCustomEventTypeKey,\n} from '../../../src/video-interface';\nimport {dev, devAssert, user, userAssert} from '../../../src/log';\nimport {dict, hasOwn} from '../../../src/utils/object';\nimport {getData} from '../../../src/event-helper';\nimport {getDataParamsFromAttributes} from '../../../src/dom';\nimport {isEnumValue, isFiniteNumber} from '../../../src/types';\nimport {startsWith} from '../../../src/string';\n\nconst SCROLL_PRECISION_PERCENT = 5;\nconst VAR_H_SCROLL_BOUNDARY = 'horizontalScrollBoundary';\nconst VAR_V_SCROLL_BOUNDARY = 'verticalScrollBoundary';\nconst MIN_TIMER_INTERVAL_SECONDS = 0.5;\nconst DEFAULT_MAX_TIMER_LENGTH_SECONDS = 7200;\nconst VARIABLE_DATA_ATTRIBUTE_KEY = /^vars(.+)/;\nconst NO_UNLISTEN = function() {};\nconst TAG = 'amp-analytics/events';\n\n/**\n * Events that can result in analytics data to be sent.\n * @const\n * @enum {string}\n */\nexport const AnalyticsEventType = {\n  CLICK: 'click',\n  CUSTOM: 'custom',\n  HIDDEN: 'hidden',\n  INI_LOAD: 'ini-load',\n  RENDER_START: 'render-start',\n  SCROLL: 'scroll',\n  STORY: 'story',\n  TIMER: 'timer',\n  VIDEO: 'video',\n  VISIBLE: 'visible',\n};\n\nconst ALLOWED_FOR_ALL_ROOT_TYPES = ['ampdoc', 'embed'];\n\n/**\n * Events that can result in analytics data to be sent.\n * @const {!Object<string, {\n *     name: string,\n *     allowedFor: !Array<string>,\n *     klass: function(new:./events.EventTracker)\n *   }>}\n */\nconst TRACKER_TYPE = Object.freeze({\n  [AnalyticsEventType.CLICK]: {\n    name: AnalyticsEventType.CLICK,\n    allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer']),\n    // Escape the temporal dead zone by not referencing a class directly.\n    klass: function(root) {\n      return new ClickEventTracker(root);\n    },\n  },\n  [AnalyticsEventType.CUSTOM]: {\n    name: AnalyticsEventType.CUSTOM,\n    allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer']),\n    klass: function(root) {\n      return new CustomEventTracker(root);\n    },\n  },\n  [AnalyticsEventType.HIDDEN]: {\n    name: AnalyticsEventType.VISIBLE, // Reuse tracker with visibility\n    allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer']),\n    klass: function(root) {\n      return new VisibilityTracker(root);\n    },\n  },\n  [AnalyticsEventType.INI_LOAD]: {\n    name: AnalyticsEventType.INI_LOAD,\n    allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer', 'visible']),\n    klass: function(root) {\n      return new IniLoadTracker(root);\n    },\n  },\n  [AnalyticsEventType.RENDER_START]: {\n    name: AnalyticsEventType.RENDER_START,\n    allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer', 'visible']),\n    klass: function(root) {\n      return new SignalTracker(root);\n    },\n  },\n  [AnalyticsEventType.SCROLL]: {\n    name: AnalyticsEventType.SCROLL,\n    allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer']),\n    klass: function(root) {\n      return new ScrollEventTracker(root);\n    },\n  },\n  [AnalyticsEventType.STORY]: {\n    name: AnalyticsEventType.STORY,\n    allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES,\n    klass: function(root) {\n      return new AmpStoryEventTracker(root);\n    },\n  },\n  [AnalyticsEventType.TIMER]: {\n    name: AnalyticsEventType.TIMER,\n    allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES,\n    klass: function(root) {\n      return new TimerEventTracker(root);\n    },\n  },\n  [AnalyticsEventType.VIDEO]: {\n    name: AnalyticsEventType.VIDEO,\n    allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer']),\n    klass: function(root) {\n      return new VideoEventTracker(root);\n    },\n  },\n  [AnalyticsEventType.VISIBLE]: {\n    name: AnalyticsEventType.VISIBLE,\n    allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer']),\n    klass: function(root) {\n      return new VisibilityTracker(root);\n    },\n  },\n});\n\n/** @visibleForTesting */\nexport const trackerTypeForTesting = TRACKER_TYPE;\n\n/**\n * @param {string} triggerType\n * @return {boolean}\n */\nfunction isAmpStoryTriggerType(triggerType) {\n  return startsWith(triggerType, 'story');\n}\n\n/**\n * @param {string} triggerType\n * @return {boolean}\n */\nfunction isVideoTriggerType(triggerType) {\n  return startsWith(triggerType, 'video');\n}\n\n/**\n * @param {string} triggerType\n * @return {boolean}\n */\nfunction isReservedTriggerType(triggerType) {\n  return isEnumValue(AnalyticsEventType, triggerType);\n}\n\n/**\n * @param {string} eventType\n * @return {string}\n */\nexport function getTrackerKeyName(eventType) {\n  if (isVideoTriggerType(eventType)) {\n    return AnalyticsEventType.VIDEO;\n  }\n  if (isAmpStoryTriggerType(eventType)) {\n    return AnalyticsEventType.STORY;\n  }\n  if (!isReservedTriggerType(eventType)) {\n    return AnalyticsEventType.CUSTOM;\n  }\n  return hasOwn(TRACKER_TYPE, eventType)\n    ? TRACKER_TYPE[eventType].name\n    : eventType;\n}\n\n/**\n * @param {string} parentType\n * @return {!Object<string, function(new:EventTracker)>}\n */\nexport function getTrackerTypesForParentType(parentType) {\n  const filtered = {};\n  Object.keys(TRACKER_TYPE).forEach(key => {\n    if (\n      hasOwn(TRACKER_TYPE, key) &&\n      TRACKER_TYPE[key].allowedFor.indexOf(parentType) != -1\n    ) {\n      filtered[key] = TRACKER_TYPE[key].klass;\n    }\n  }, this);\n  return filtered;\n}\n\n/**\n * @interface\n */\nclass SignalTrackerDef {\n  /**\n   * @param {string} unusedEventType\n   * @return {!Promise}\n   */\n  getRootSignal(unusedEventType) {}\n\n  /**\n   * @param {string} unusedEventType\n   * @param {!Element} unusedElement\n   * @return {!Promise}\n   */\n  getElementSignal(unusedEventType, unusedElement) {}\n}\n\n/**\n * The analytics event.\n * @dict\n */\nexport class AnalyticsEvent {\n  /**\n   * @param {!Element} target The most relevant target element.\n   * @param {string} type The type of event.\n   * @param {?JsonObject=} opt_vars A map of vars and their values.\n   */\n  constructor(target, type, opt_vars) {\n    /** @const */\n    this['target'] = target;\n    /** @const */\n    this['type'] = type;\n    /** @const */\n    this['vars'] = opt_vars || dict();\n  }\n}\n\n/**\n * The base class for all trackers. A tracker tracks all events of the same\n * type for a single analytics root.\n *\n * @implements {../../../src/service.Disposable}\n * @abstract\n * @visibleForTesting\n */\nexport class EventTracker {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  constructor(root) {\n    /** @const */\n    this.root = root;\n  }\n\n  /** @override @abstract */\n  dispose() {}\n\n  /**\n   * @param {!Element} unusedContext\n   * @param {string} unusedEventType\n   * @param {!JsonObject} unusedConfig\n   * @param {function(!AnalyticsEvent)} unusedListener\n   * @return {!UnlistenDef}\n   * @abstract\n   */\n  add(unusedContext, unusedEventType, unusedConfig, unusedListener) {}\n}\n\n/**\n * Tracks custom events.\n */\nexport class CustomEventTracker extends EventTracker {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  constructor(root) {\n    super(root);\n\n    /** @const @private {!Object<string, !Observable<!AnalyticsEvent>>} */\n    this.observables_ = {};\n\n    /**\n     * Early events have to be buffered because there's no way to predict\n     * how fast all `amp-analytics` elements will be instrumented.\n     * @private {!Object<string, !Array<!AnalyticsEvent>>|undefined}\n     */\n    this.buffer_ = {};\n\n    /**\n     * Sandbox events get their own buffer, because handler to those events will\n     * be added after parent element's layout. (Time varies, can be later than\n     * 10s) sandbox events buffer will never expire but will cleared when\n     * handler is ready.\n     * @private {!Object<string, !Array<!AnalyticsEvent>|undefined>|undefined}\n     */\n    this.sandboxBuffer_ = {};\n\n    // Stop buffering of custom events after 10 seconds. Assumption is that all\n    // `amp-analytics` elements will have been instrumented by this time.\n    setTimeout(() => {\n      this.buffer_ = undefined;\n    }, 10000);\n  }\n\n  /** @override */\n  dispose() {\n    this.buffer_ = undefined;\n    this.sandboxBuffer_ = undefined;\n    for (const k in this.observables_) {\n      this.observables_[k].removeAll();\n    }\n  }\n\n  /** @override */\n  add(context, eventType, config, listener) {\n    let selector = config['selector'];\n    if (!selector) {\n      selector = ':root';\n    }\n    const selectionMethod = config['selectionMethod'] || null;\n\n    const targetReady = this.root.getElement(\n      context,\n      selector,\n      selectionMethod\n    );\n\n    const isSandboxEvent = startsWith(eventType, 'sandbox-');\n\n    // Push recent events if any.\n    const buffer = isSandboxEvent\n      ? this.sandboxBuffer_ && this.sandboxBuffer_[eventType]\n      : this.buffer_ && this.buffer_[eventType];\n\n    if (buffer) {\n      const bufferLength = buffer.length;\n      targetReady.then(target => {\n        setTimeout(() => {\n          for (let i = 0; i < bufferLength; i++) {\n            const event = buffer[i];\n            if (target.contains(event['target'])) {\n              listener(event);\n            }\n          }\n          if (isSandboxEvent) {\n            // We assume sandbox event will only has single listener.\n            // It is safe to clear buffer once handler is ready.\n            this.sandboxBuffer_[eventType] = undefined;\n          }\n        }, 1);\n      });\n    }\n\n    let observables = this.observables_[eventType];\n    if (!observables) {\n      observables = new Observable();\n      this.observables_[eventType] = observables;\n    }\n\n    return this.observables_[eventType].add(event => {\n      // Wait for target selected\n      targetReady.then(target => {\n        if (target.contains(event['target'])) {\n          listener(event);\n        }\n      });\n    });\n  }\n\n  /**\n   * Triggers a custom event for the associated root.\n   * @param {!AnalyticsEvent} event\n   */\n  trigger(event) {\n    const eventType = event['type'];\n    const isSandboxEvent = startsWith(eventType, 'sandbox-');\n    const observables = this.observables_[eventType];\n\n    // If listeners already present - trigger right away.\n    if (observables) {\n      observables.fire(event);\n      if (isSandboxEvent) {\n        // No need to buffer sandbox event if handler ready\n        return;\n      }\n    }\n\n    // Create buffer and enqueue buffer if needed\n    if (isSandboxEvent) {\n      this.sandboxBuffer_[eventType] = this.sandboxBuffer_[eventType] || [];\n      this.sandboxBuffer_[eventType].push(event);\n    } else {\n      // Check if buffer has expired\n      if (this.buffer_) {\n        this.buffer_[eventType] = this.buffer_[eventType] || [];\n        this.buffer_[eventType].push(event);\n      }\n    }\n  }\n}\n\n// TODO(Enriqe): If needed, add support for sandbox story event.\n// (e.g. sandbox-story-xxx).\nexport class AmpStoryEventTracker extends CustomEventTracker {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  constructor(root) {\n    super(root);\n  }\n\n  /** @override */\n  add(context, eventType, config, listener) {\n    // TODO(Enriqe): add support for storySpec.\n    const rootTarget = this.root.getRootElement();\n\n    // Fire buffered events if any.\n    const buffer = this.buffer_ && this.buffer_[eventType];\n    if (buffer) {\n      const bufferLength = buffer.length;\n\n      for (let i = 0; i < bufferLength; i++) {\n        const event = buffer[i];\n        this.fireListener_(event, rootTarget, config, listener);\n      }\n    }\n\n    let observables = this.observables_[eventType];\n    if (!observables) {\n      observables = new Observable();\n      this.observables_[eventType] = observables;\n    }\n\n    return this.observables_[eventType].add(event => {\n      this.fireListener_(event, rootTarget, config, listener);\n    });\n  }\n\n  /**\n   * Fires listener given the specified configuration.\n   * @param {!AnalyticsEvent} event\n   * @param {!Element} rootTarget\n   * @param {!JsonObject} config\n\n   * @param {function(!AnalyticsEvent)} listener\n   */\n  fireListener_(event, rootTarget, config, listener) {\n    const type = event['type'];\n    const vars = event['vars'];\n\n    listener(new AnalyticsEvent(rootTarget, type, vars));\n  }\n\n  /**\n   * Triggers a custom event for the associated root, or buffers them if the\n   * observables aren't present yet.\n   * @param {!AnalyticsEvent} event\n   */\n  trigger(event) {\n    const eventType = event['type'];\n    const observables = this.observables_[eventType];\n\n    // If listeners already present - trigger right away.\n    if (observables) {\n      observables.fire(event);\n    }\n\n    // Create buffer and enqueue event if needed.\n    if (this.buffer_) {\n      this.buffer_[eventType] = this.buffer_[eventType] || [];\n      this.buffer_[eventType].push(event);\n    }\n  }\n}\n\n/**\n * Tracks click events.\n */\nexport class ClickEventTracker extends EventTracker {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  constructor(root) {\n    super(root);\n\n    /** @private {!Observable<!Event>} */\n    this.clickObservable_ = new Observable();\n\n    /** @private @const {function(!Event)} */\n    this.boundOnClick_ = this.clickObservable_.fire.bind(this.clickObservable_);\n    this.root.getRoot().addEventListener('click', this.boundOnClick_);\n  }\n\n  /** @override */\n  dispose() {\n    this.root.getRoot().removeEventListener('click', this.boundOnClick_);\n    this.clickObservable_.removeAll();\n  }\n\n  /** @override */\n  add(context, eventType, config, listener) {\n    const selector = userAssert(\n      config['selector'],\n      'Missing required selector on click trigger'\n    );\n    const selectionMethod = config['selectionMethod'] || null;\n    return this.clickObservable_.add(\n      this.root.createSelectiveListener(\n        this.handleClick_.bind(this, listener),\n        context.parentElement || context,\n        selector,\n        selectionMethod\n      )\n    );\n  }\n\n  /**\n   * @param {function(!AnalyticsEvent)} listener\n   * @param {!Element} target\n   * @param {!Event} unusedEvent\n   * @private\n   */\n  handleClick_(listener, target, unusedEvent) {\n    const params = getDataParamsFromAttributes(\n      target,\n      /* computeParamNameFunc */ undefined,\n      VARIABLE_DATA_ATTRIBUTE_KEY\n    );\n    listener(new AnalyticsEvent(target, 'click', params));\n  }\n}\n\n/**\n * Tracks scroll events.\n */\nexport class ScrollEventTracker extends EventTracker {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  constructor(root) {\n    super(root);\n\n    /** @private {!./analytics-root.AnalyticsRoot} root */\n    this.root_ = root;\n\n    /** @private {function(!Object)|null} */\n    this.boundScrollHandler_ = null;\n  }\n\n  /** @override */\n  dispose() {\n    if (this.boundScrollHandler_ !== null) {\n      this.root_\n        .getScrollManager()\n        .removeScrollHandler(this.boundScrollHandler_);\n      this.boundScrollHandler_ = null;\n    }\n  }\n\n  /** @override */\n  add(context, eventType, config, listener) {\n    if (!config['scrollSpec']) {\n      user().error(TAG, 'Missing scrollSpec on scroll trigger.');\n      return NO_UNLISTEN;\n    }\n\n    if (\n      !Array.isArray(config['scrollSpec']['verticalBoundaries']) &&\n      !Array.isArray(config['scrollSpec']['horizontalBoundaries'])\n    ) {\n      user().error(\n        TAG,\n        'Boundaries are required for the scroll trigger to work.'\n      );\n      return NO_UNLISTEN;\n    }\n\n    const boundsV = this.normalizeBoundaries_(\n      config['scrollSpec']['verticalBoundaries']\n    );\n    const boundsH = this.normalizeBoundaries_(\n      config['scrollSpec']['horizontalBoundaries']\n    );\n\n    this.boundScrollHandler_ = this.scrollHandler_.bind(\n      this,\n      boundsV,\n      boundsH,\n      listener\n    );\n\n    return this.root_\n      .getScrollManager()\n      .addScrollHandler(this.boundScrollHandler_);\n  }\n\n  /**\n   * Function to handle scroll events from the Scroll manager\n   * @param {!Object<number,boolean>} boundsV\n   * @param {!Object<number,boolean>} boundsH\n   * @param {function(!AnalyticsEvent)} listener\n   * @param {!Object} e\n   * @private\n   */\n  scrollHandler_(boundsV, boundsH, listener, e) {\n    // Calculates percentage scrolled by adding screen height/width to\n    // top/left and dividing by the total scroll height/width.\n    this.triggerScrollEvents_(\n      boundsV,\n      ((e.top + e.height) * 100) / e./*OK*/ scrollHeight,\n      VAR_V_SCROLL_BOUNDARY,\n      listener\n    );\n    this.triggerScrollEvents_(\n      boundsH,\n      ((e.left + e.width) * 100) / e./*OK*/ scrollWidth,\n      VAR_H_SCROLL_BOUNDARY,\n      listener\n    );\n  }\n\n  /**\n   * Rounds the boundaries for scroll trigger to nearest\n   * SCROLL_PRECISION_PERCENT and returns an object with normalized boundaries\n   * as keys and false as values.\n   *\n   * @param {!Array<number>} bounds array of bounds.\n   * @return {!JsonObject} Object with normalized bounds as keys\n   * and false as value.\n   * @private\n   */\n  normalizeBoundaries_(bounds) {\n    const result = dict({});\n    if (!bounds || !Array.isArray(bounds)) {\n      return result;\n    }\n\n    for (let b = 0; b < bounds.length; b++) {\n      let bound = bounds[b];\n      if (typeof bound !== 'number' || !isFinite(bound)) {\n        user().error(TAG, 'Scroll trigger boundaries must be finite.');\n        return result;\n      }\n\n      bound = Math.min(\n        Math.round(bound / SCROLL_PRECISION_PERCENT) * SCROLL_PRECISION_PERCENT,\n        100\n      );\n      result[bound] = false;\n    }\n    return result;\n  }\n\n  /**\n   * @param {!Object<number, boolean>} bounds\n   * @param {number} scrollPos Number representing the current scroll\n   * @param {string} varName variable name to assign to the bound that\n   * @param {function(!AnalyticsEvent)} listener\n   * triggers the event position.\n   */\n  triggerScrollEvents_(bounds, scrollPos, varName, listener) {\n    if (!scrollPos) {\n      return;\n    }\n\n    // Goes through each of the boundaries and fires an event if it has not\n    // been fired so far and it should be.\n    for (const b in bounds) {\n      if (!hasOwn(bounds, b)) {\n        continue;\n      }\n      const bound = parseInt(b, 10);\n      if (bound > scrollPos || bounds[bound]) {\n        continue;\n      }\n      bounds[bound] = true;\n      const vars = dict();\n      vars[varName] = b;\n      listener(\n        new AnalyticsEvent(\n          this.root_.getRootElement(),\n          AnalyticsEventType.SCROLL,\n          vars\n        )\n      );\n    }\n  }\n}\n\n/**\n * Tracks events based on signals.\n * @implements {SignalTrackerDef}\n */\nexport class SignalTracker extends EventTracker {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  constructor(root) {\n    super(root);\n  }\n\n  /** @override */\n  dispose() {}\n\n  /** @override */\n  add(context, eventType, config, listener) {\n    let target;\n    let signalsPromise;\n    const selector = config['selector'] || ':root';\n    if (selector == ':root' || selector == ':host') {\n      // Root selectors are delegated to analytics roots.\n      target = this.root.getRootElement();\n      signalsPromise = this.getRootSignal(eventType);\n    } else {\n      // Look for the AMP-element. Wait for DOM to be fully parsed to avoid\n      // false missed searches.\n      const selectionMethod = config['selectionMethod'];\n      signalsPromise = this.root\n        .getAmpElement(\n          context.parentElement || context,\n          selector,\n          selectionMethod\n        )\n        .then(element => {\n          target = element;\n          return this.getElementSignal(eventType, target);\n        });\n    }\n\n    // Wait for the target and the event signal.\n    signalsPromise.then(() => {\n      listener(new AnalyticsEvent(target, eventType));\n    });\n    return NO_UNLISTEN;\n  }\n\n  /** @override */\n  getRootSignal(eventType) {\n    return this.root.signals().whenSignal(eventType);\n  }\n\n  /** @override */\n  getElementSignal(eventType, element) {\n    if (typeof element.signals != 'function') {\n      return Promise.resolve();\n    }\n    return element.signals().whenSignal(eventType);\n  }\n}\n\n/**\n * Tracks when the elements in the first viewport has been loaded - \"ini-load\".\n * @implements {SignalTrackerDef}\n */\nexport class IniLoadTracker extends EventTracker {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  constructor(root) {\n    super(root);\n  }\n\n  /** @override */\n  dispose() {}\n\n  /** @override */\n  add(context, eventType, config, listener) {\n    let target;\n    let promise;\n    const selector = config['selector'] || ':root';\n    if (selector == ':root' || selector == ':host') {\n      // Root selectors are delegated to analytics roots.\n      target = this.root.getRootElement();\n      promise = this.getRootSignal();\n    } else {\n      // An AMP-element. Wait for DOM to be fully parsed to avoid\n      // false missed searches.\n      const selectionMethod = config['selectionMethod'];\n      promise = this.root\n        .getAmpElement(\n          context.parentElement || context,\n          selector,\n          selectionMethod\n        )\n        .then(element => {\n          target = element;\n          return this.getElementSignal('ini-load', target);\n        });\n    }\n    // Wait for the target and the event.\n    promise.then(() => {\n      listener(new AnalyticsEvent(target, eventType));\n    });\n    return NO_UNLISTEN;\n  }\n\n  /** @override */\n  getRootSignal() {\n    return this.root.whenIniLoaded();\n  }\n\n  /** @override */\n  getElementSignal(unusedEventType, element) {\n    if (typeof element.signals != 'function') {\n      return Promise.resolve();\n    }\n    const signals = element.signals();\n    return Promise.race([\n      signals.whenSignal(CommonSignals.INI_LOAD),\n      signals.whenSignal(CommonSignals.LOAD_END),\n    ]);\n  }\n}\n\n/**\n * Timer event handler.\n */\nclass TimerEventHandler {\n  /**\n   * @param {JsonObject} timerSpec The timer specification.\n   * @param {function(): UnlistenDef=} opt_startBuilder Factory for building\n   *     start trackers for this timer.\n   * @param {function(): UnlistenDef=} opt_stopBuilder Factory for building stop\n   *     trackers for this timer.\n   */\n  constructor(timerSpec, opt_startBuilder, opt_stopBuilder) {\n    /** @private {number|undefined} */\n    this.intervalId_ = undefined;\n\n    userAssert(\n      'interval' in timerSpec,\n      'Timer interval specification required'\n    );\n    /** @private @const {number} */\n    this.intervalLength_ = Number(timerSpec['interval']) || 0;\n    userAssert(\n      this.intervalLength_ >= MIN_TIMER_INTERVAL_SECONDS,\n      'Bad timer interval specification'\n    );\n\n    /** @private @const {number} */\n    this.maxTimerLength_ =\n      'maxTimerLength' in timerSpec\n        ? Number(timerSpec['maxTimerLength'])\n        : DEFAULT_MAX_TIMER_LENGTH_SECONDS;\n    userAssert(this.maxTimerLength_ > 0, 'Bad maxTimerLength specification');\n\n    /** @private @const {boolean} */\n    this.maxTimerInSpec_ = 'maxTimerLength' in timerSpec;\n\n    /** @private @const {boolean} */\n    this.callImmediate_ =\n      'immediate' in timerSpec ? Boolean(timerSpec['immediate']) : true;\n\n    /** @private {?function()} */\n    this.intervalCallback_ = null;\n\n    /** @private {?UnlistenDef} */\n    this.unlistenStart_ = null;\n\n    /** @private {?UnlistenDef} */\n    this.unlistenStop_ = null;\n\n    /** @private @const {?function(): UnlistenDef} */\n    this.startBuilder_ = opt_startBuilder || null;\n\n    /** @private @const {?function(): UnlistenDef} */\n    this.stopBuilder_ = opt_stopBuilder || null;\n\n    /** @private {number|undefined} */\n    this.startTime_ = undefined; // milliseconds\n\n    /** @private {number|undefined} */\n    this.lastRequestTime_ = undefined; // milliseconds\n  }\n\n  /**\n   * @param {function()} startTimer\n   */\n  init(startTimer) {\n    if (!this.startBuilder_) {\n      // Timer starts on load.\n      startTimer();\n    } else {\n      // Timer starts on event.\n      this.listenForStart_();\n    }\n  }\n\n  /**\n   * Unlistens for start and stop.\n   */\n  dispose() {\n    this.unlistenForStop_();\n    this.unlistenForStart_();\n  }\n\n  /** @private */\n  listenForStart_() {\n    if (this.startBuilder_) {\n      this.unlistenStart_ = this.startBuilder_();\n    }\n  }\n\n  /** @private */\n  unlistenForStart_() {\n    if (this.unlistenStart_) {\n      this.unlistenStart_();\n      this.unlistenStart_ = null;\n    }\n  }\n\n  /** @private */\n  listenForStop_() {\n    if (this.stopBuilder_) {\n      try {\n        this.unlistenStop_ = this.stopBuilder_();\n      } catch (e) {\n        this.dispose(); // Stop timer and then throw error.\n        throw e;\n      }\n    }\n  }\n\n  /** @private */\n  unlistenForStop_() {\n    if (this.unlistenStop_) {\n      this.unlistenStop_();\n      this.unlistenStop_ = null;\n    }\n  }\n\n  /** @return {boolean} */\n  isRunning() {\n    return !!this.intervalId_;\n  }\n\n  /**\n   * @param {!Window} win\n   * @param {function()} timerCallback\n   * @param {function()} timeoutCallback\n   */\n  startIntervalInWindow(win, timerCallback, timeoutCallback) {\n    if (this.isRunning()) {\n      return;\n    }\n    this.startTime_ = Date.now();\n    this.lastRequestTime_ = undefined;\n    this.intervalCallback_ = timerCallback;\n    this.intervalId_ = win.setInterval(() => {\n      timerCallback();\n    }, this.intervalLength_ * 1000);\n\n    // If there's no way to turn off the timer, cap it.\n    if (!this.stopBuilder_ || (this.stopBuilder_ && this.maxTimerInSpec_)) {\n      win.setTimeout(() => {\n        timeoutCallback();\n      }, this.maxTimerLength_ * 1000);\n    }\n\n    this.unlistenForStart_();\n    if (this.callImmediate_) {\n      timerCallback();\n    }\n    this.listenForStop_();\n  }\n\n  /**\n   * @param {!Window} win\n   * @restricted\n   */\n  stopTimer_(win) {\n    if (!this.isRunning()) {\n      return;\n    }\n    this.intervalCallback_();\n    this.intervalCallback_ = null;\n    win.clearInterval(this.intervalId_);\n    this.intervalId_ = undefined;\n    this.lastRequestTime_ = undefined;\n    this.unlistenForStop_();\n    this.listenForStart_();\n  }\n\n  /**\n   * @private\n   * @return {number}\n   */\n  calculateDuration_() {\n    if (this.startTime_) {\n      return Date.now() - (this.lastRequestTime_ || this.startTime_);\n    }\n    return 0;\n  }\n\n  /** @return {!JsonObject} */\n  getTimerVars() {\n    let timerDuration = 0;\n    if (this.isRunning()) {\n      timerDuration = this.calculateDuration_();\n      this.lastRequestTime_ = Date.now();\n    }\n    return dict({\n      'timerDuration': timerDuration,\n      'timerStart': this.startTime_ || 0,\n    });\n  }\n}\n\n/**\n * Tracks timer events.\n */\nexport class TimerEventTracker extends EventTracker {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  constructor(root) {\n    super(root);\n    /** @const @private {!Object<number, TimerEventHandler>} */\n    this.trackers_ = {};\n\n    /** @private {number} */\n    this.timerIdSequence_ = 1;\n  }\n\n  /**\n   * @return {!Array<number>}\n   * @visibleForTesting\n   */\n  getTrackedTimerKeys() {\n    return /** @type {!Array<number>} */ (Object.keys(this.trackers_));\n  }\n\n  /** @override */\n  dispose() {\n    this.getTrackedTimerKeys().forEach(timerId => {\n      this.removeTracker_(timerId);\n    });\n  }\n\n  /** @override */\n  add(context, eventType, config, listener) {\n    const timerSpec = config['timerSpec'];\n    userAssert(\n      timerSpec && typeof timerSpec == 'object',\n      'Bad timer specification'\n    );\n    const timerStart = 'startSpec' in timerSpec ? timerSpec['startSpec'] : null;\n    userAssert(\n      !timerStart || typeof timerStart == 'object',\n      'Bad timer start specification'\n    );\n    const timerStop = 'stopSpec' in timerSpec ? timerSpec['stopSpec'] : null;\n    userAssert(\n      (!timerStart && !timerStop) || typeof timerStop == 'object',\n      'Bad timer stop specification'\n    );\n\n    const timerId = this.generateTimerId_();\n    let startBuilder;\n    let stopBuilder;\n    if (timerStart) {\n      const startTracker = this.getTracker_(timerStart);\n      userAssert(startTracker, 'Cannot track timer start');\n      startBuilder = startTracker.add.bind(\n        startTracker,\n        context,\n        timerStart['on'],\n        timerStart,\n        this.handleTimerToggle_.bind(this, timerId, eventType, listener)\n      );\n    }\n    if (timerStop) {\n      const stopTracker = this.getTracker_(timerStop);\n      userAssert(stopTracker, 'Cannot track timer stop');\n      stopBuilder = stopTracker.add.bind(\n        stopTracker,\n        context,\n        timerStop['on'],\n        timerStop,\n        this.handleTimerToggle_.bind(this, timerId, eventType, listener)\n      );\n    }\n\n    const timerHandler = new TimerEventHandler(\n      timerSpec,\n      startBuilder,\n      stopBuilder\n    );\n    this.trackers_[timerId] = timerHandler;\n\n    timerHandler.init(\n      this.startTimer_.bind(this, timerId, eventType, listener)\n    );\n    return () => {\n      this.removeTracker_(timerId);\n    };\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  generateTimerId_() {\n    return ++this.timerIdSequence_;\n  }\n\n  /**\n   * @param {!JsonObject} config\n   * @return {?EventTracker}\n   * @private\n   */\n  getTracker_(config) {\n    const eventType = user().assertString(config['on']);\n    const trackerKey = getTrackerKeyName(eventType);\n\n    return this.root.getTrackerForWhitelist(\n      trackerKey,\n      getTrackerTypesForParentType('timer')\n    );\n  }\n\n  /**\n   * Toggles which listeners are active depending on timer state, so no race\n   * conditions can occur in the case where the timer starts and stops on the\n   * same event type from the same target.\n   * @param {number} timerId\n   * @param {string} eventType\n   * @param {function(!AnalyticsEvent)} listener\n   * @private\n   */\n  handleTimerToggle_(timerId, eventType, listener) {\n    const timerHandler = this.trackers_[timerId];\n    if (!timerHandler) {\n      return;\n    }\n    if (timerHandler.isRunning()) {\n      this.stopTimer_(timerId);\n    } else {\n      this.startTimer_(timerId, eventType, listener);\n    }\n  }\n\n  /**\n   * @param {number} timerId\n   * @param {string} eventType\n   * @param {function(!AnalyticsEvent)} listener\n   * @private\n   */\n  startTimer_(timerId, eventType, listener) {\n    const timerHandler = this.trackers_[timerId];\n    const timerCallback = () => {\n      listener(this.createEvent_(timerId, eventType));\n    };\n    timerHandler.startIntervalInWindow(\n      this.root.ampdoc.win,\n      timerCallback,\n      this.removeTracker_.bind(this, timerId)\n    );\n  }\n\n  /**\n   * @param {number} timerId\n   * @private\n   */\n  stopTimer_(timerId) {\n    this.trackers_[timerId].stopTimer_(this.root.ampdoc.win);\n  }\n\n  /**\n   * @param {number} timerId\n   * @param {string} eventType\n   * @return {!AnalyticsEvent}\n   * @private\n   */\n  createEvent_(timerId, eventType) {\n    return new AnalyticsEvent(\n      this.root.getRootElement(),\n      eventType,\n      this.trackers_[timerId].getTimerVars()\n    );\n  }\n\n  /**\n   * @param {number} timerId\n   * @private\n   */\n  removeTracker_(timerId) {\n    if (this.trackers_[timerId]) {\n      this.stopTimer_(timerId);\n      this.trackers_[timerId].dispose();\n      delete this.trackers_[timerId];\n    }\n  }\n}\n\n/**\n * Tracks video session events\n */\nexport class VideoEventTracker extends EventTracker {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  constructor(root) {\n    super(root);\n\n    /** @private {?Observable<!Event>} */\n    this.sessionObservable_ = new Observable();\n\n    /** @private {?function(!Event)} */\n    this.boundOnSession_ = this.sessionObservable_.fire.bind(\n      this.sessionObservable_\n    );\n\n    Object.keys(VideoAnalyticsEvents).forEach(key => {\n      this.root\n        .getRoot()\n        .addEventListener(VideoAnalyticsEvents[key], this.boundOnSession_);\n    });\n  }\n\n  /** @override */\n  dispose() {\n    const root = this.root.getRoot();\n    Object.keys(VideoAnalyticsEvents).forEach(key => {\n      root.removeEventListener(VideoAnalyticsEvents[key], this.boundOnSession_);\n    });\n    this.boundOnSession_ = null;\n    this.sessionObservable_ = null;\n  }\n\n  /** @override */\n  add(context, eventType, config, listener) {\n    const videoSpec = config['videoSpec'] || {};\n    const selector = config['selector'] || videoSpec['selector'];\n    const selectionMethod = config['selectionMethod'] || null;\n    const targetReady = this.root.getElement(\n      context,\n      selector,\n      selectionMethod\n    );\n\n    const endSessionWhenInvisible = videoSpec['end-session-when-invisible'];\n    const excludeAutoplay = videoSpec['exclude-autoplay'];\n    const interval = videoSpec['interval'];\n    const percentages = videoSpec['percentages'];\n\n    const on = config['on'];\n\n    const percentageInterval = 5;\n\n    let intervalCounter = 0;\n    let lastPercentage = 0;\n\n    return this.sessionObservable_.add(event => {\n      const {type} = event;\n      const details = /** @type {?JsonObject|undefined} */ (getData(event));\n      const normalizedType = normalizeVideoEventType(type, details);\n\n      if (normalizedType !== on) {\n        return;\n      }\n\n      if (normalizedType === VideoAnalyticsEvents.SECONDS_PLAYED && !interval) {\n        user().error(\n          TAG,\n          'video-seconds-played requires interval spec with non-zero value'\n        );\n        return;\n      }\n\n      if (normalizedType === VideoAnalyticsEvents.SECONDS_PLAYED) {\n        intervalCounter++;\n        if (intervalCounter % interval !== 0) {\n          return;\n        }\n      }\n\n      if (normalizedType === VideoAnalyticsEvents.PERCENTAGE_PLAYED) {\n        if (!percentages) {\n          user().error(\n            TAG,\n            'video-percentage-played requires percentages spec.'\n          );\n          return;\n        }\n\n        for (let i = 0; i < percentages.length; i++) {\n          const percentage = percentages[i];\n\n          if (percentage <= 0 || percentage % percentageInterval != 0) {\n            user().error(\n              TAG,\n              'Percentages must be set in increments of %s with non-zero ' +\n                'values',\n              percentageInterval\n            );\n\n            return;\n          }\n        }\n\n        const normalizedPercentage = details['normalizedPercentage'];\n        const normalizedPercentageInt = parseInt(normalizedPercentage, 10);\n\n        devAssert(isFiniteNumber(normalizedPercentageInt));\n        devAssert(normalizedPercentageInt % percentageInterval == 0);\n\n        if (lastPercentage == normalizedPercentageInt) {\n          return;\n        }\n\n        if (percentages.indexOf(normalizedPercentageInt) < 0) {\n          return;\n        }\n\n        lastPercentage = normalizedPercentageInt;\n      }\n\n      if (\n        type === VideoAnalyticsEvents.SESSION_VISIBLE &&\n        !endSessionWhenInvisible\n      ) {\n        return;\n      }\n\n      if (excludeAutoplay && details['state'] === PlayingStates.PLAYING_AUTO) {\n        return;\n      }\n\n      const el = dev().assertElement(\n        event.target,\n        'No target specified by video session event.'\n      );\n      targetReady.then(target => {\n        if (!target.contains(el)) {\n          return;\n        }\n        const normalizedDetails = removeInternalVars(details);\n        listener(new AnalyticsEvent(target, normalizedType, normalizedDetails));\n      });\n    });\n  }\n}\n\n/**\n * Normalize video type from internal representation into the observed string\n * from the analytics configuration.\n * @param {string} type\n * @param {?JsonObject|undefined} details\n * @return {string}\n */\nfunction normalizeVideoEventType(type, details) {\n  if (type == VideoAnalyticsEvents.SESSION_VISIBLE) {\n    return VideoAnalyticsEvents.SESSION;\n  }\n\n  // Custom video analytics events are listened to from one signal type,\n  // but they're configured by user with their custom name.\n  if (type == VideoAnalyticsEvents.CUSTOM) {\n    return dev().assertString(details[videoAnalyticsCustomEventTypeKey]);\n  }\n\n  return type;\n}\n\n/**\n * @param {?JsonObject|undefined} details\n * @return {?JsonObject|undefined}\n */\nfunction removeInternalVars(details) {\n  if (!details) {\n    return details;\n  }\n  const clean = Object.assign({}, details);\n  delete clean[videoAnalyticsCustomEventTypeKey];\n  return /** @type {!JsonObject} */ (clean);\n}\n\n/**\n * Tracks visibility events.\n */\nexport class VisibilityTracker extends EventTracker {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  constructor(root) {\n    super(root);\n\n    /** @private */\n    this.waitForTrackers_ = {};\n  }\n\n  /** @override */\n  dispose() {}\n\n  /** @override */\n  add(context, eventType, config, listener) {\n    const visibilitySpec = config['visibilitySpec'] || {};\n    const selector = config['selector'] || visibilitySpec['selector'];\n    const waitForSpec = visibilitySpec['waitFor'];\n    let reportWhenSpec = visibilitySpec['reportWhen'];\n    let createReportReadyPromiseFunc = null;\n\n    if (reportWhenSpec) {\n      userAssert(\n        !visibilitySpec['repeat'],\n        'reportWhen and repeat are mutually exclusive.'\n      );\n    }\n\n    if (eventType === AnalyticsEventType.HIDDEN) {\n      if (reportWhenSpec) {\n        user().error(\n          TAG,\n          'ReportWhen should not be defined when eventType is \"hidden\"'\n        );\n      }\n      // special polyfill for eventType: 'hidden'\n      reportWhenSpec = 'documentHidden';\n    }\n\n    const visibilityManagerPromise = this.root\n      .isUsingHostAPI()\n      .then(hasHostAPI => {\n        if (hasHostAPI) {\n          this.assertMeasurableWithHostApi_(selector, reportWhenSpec);\n        }\n        return this.root.getVisibilityManager();\n      });\n\n    if (reportWhenSpec == 'documentHidden') {\n      createReportReadyPromiseFunc = this.createReportReadyPromiseForDocumentHidden_.bind(\n        this\n      );\n    } else if (reportWhenSpec == 'documentExit') {\n      createReportReadyPromiseFunc = this.createReportReadyPromiseForDocumentExit_.bind(\n        this\n      );\n    } else {\n      userAssert(\n        !reportWhenSpec,\n        'reportWhen value \"%s\" not supported.',\n        reportWhenSpec\n      );\n    }\n\n    let unlistenPromise;\n    // Root selectors are delegated to analytics roots.\n    if (!selector || selector == ':root' || selector == ':host') {\n      // When `selector` is specified, we always use \"ini-load\" signal as\n      // a \"ready\" signal.\n      unlistenPromise = visibilityManagerPromise.then(\n        visibilityManager => {\n          return visibilityManager.listenRoot(\n            visibilitySpec,\n            this.getReadyPromise(waitForSpec, selector),\n            createReportReadyPromiseFunc,\n            this.onEvent_.bind(\n              this,\n              eventType,\n              listener,\n              this.root.getRootElement()\n            )\n          );\n        },\n        () => {}\n      );\n    } else {\n      // An AMP-element. Wait for DOM to be fully parsed to avoid\n      // false missed searches.\n      const selectionMethod =\n        config['selectionMethod'] || visibilitySpec['selectionMethod'];\n      unlistenPromise = this.root\n        .getAmpElement(\n          context.parentElement || context,\n          selector,\n          selectionMethod\n        )\n        .then(element => {\n          return visibilityManagerPromise.then(\n            visibilityManager => {\n              return visibilityManager.listenElement(\n                element,\n                visibilitySpec,\n                this.getReadyPromise(waitForSpec, selector, element),\n                createReportReadyPromiseFunc,\n                this.onEvent_.bind(this, eventType, listener, element)\n              );\n            },\n            () => {}\n          );\n        });\n    }\n\n    return function() {\n      unlistenPromise.then(unlisten => {\n        unlisten();\n      });\n    };\n  }\n\n  /**\n   * Assert that the setting is measurable with host API\n   * @param {string=} selector\n   * @param {string=} reportWhenSpec\n   */\n  assertMeasurableWithHostApi_(selector, reportWhenSpec) {\n    userAssert(\n      !selector || selector == ':root' || selector == ':host',\n      'Element %s that is not root is not supported with host API',\n      selector\n    );\n\n    userAssert(\n      reportWhenSpec !== 'documentExit',\n      'reportWhen : documentExit is not supported with host API'\n    );\n  }\n\n  /**\n   * Returns a Promise indicating that we're ready to report the analytics,\n   * in the case of reportWhen: documentHidden\n   * @return {!Promise}\n   * @private\n   */\n  createReportReadyPromiseForDocumentHidden_() {\n    const {ampdoc} = this.root;\n\n    if (!ampdoc.isVisible()) {\n      return Promise.resolve();\n    }\n\n    return new Promise(resolve => {\n      ampdoc.onVisibilityChanged(() => {\n        if (!ampdoc.isVisible()) {\n          resolve();\n        }\n      });\n    });\n  }\n\n  /**\n   * Returns a Promise indicating that we're ready to report the analytics,\n   * in the case of reportWhen: documentExit\n   * @return {!Promise}\n   * @private\n   */\n  createReportReadyPromiseForDocumentExit_() {\n    const deferred = new Deferred();\n    const {win} = this.root.ampdoc;\n    let unloadListener, pageHideListener;\n\n    // Do not add an unload listener unless pagehide is not available.\n    // If an unload listener is present, the back/forward cache will not work.\n    // The BFCache saves pages to be instantly loaded when navigating back\n    // or forward and pauses their JavaScript. The pagehide event was added\n    // to give developers control over the behavior, and the unload listener\n    // interferes with it. To allow publishers to use the default BFCache\n    // behavior, we should not add an unload listener.\n    if (!this.supportsPageHide_()) {\n      win.addEventListener(\n        /*OK*/ 'unload',\n        (unloadListener = () => {\n          win.removeEventListener('unload', unloadListener);\n          deferred.resolve();\n        })\n      );\n    }\n\n    // Note: pagehide is currently not supported on Opera Mini, nor IE<=10.\n    // Documentation conflicts as to whether Safari on iOS will also fire it\n    // when switching tabs or switching to another app. Chrome does not fire it\n    // in this case.\n    // Good, but several years old, analysis at:\n    // https://www.igvita.com/2015/11/20/dont-lose-user-and-app-state-use-page-visibility/\n    // Especially note the event table on this page.\n    win.addEventListener(\n      'pagehide',\n      (pageHideListener = () => {\n        win.removeEventListener('pagehide', pageHideListener);\n        deferred.resolve();\n      })\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Detect support for the pagehide event.\n   * IE<=10 and Opera Mini do not support the pagehide event and\n   * possibly others, so we feature-detect support with this method.\n   * This is in a stubbable method for testing.\n   * @return {boolean}\n   * @private visible for testing\n   */\n  supportsPageHide_() {\n    return 'onpagehide' in this.root.ampdoc.win;\n  }\n\n  /**\n   * @param {string|undefined} waitForSpec\n   * @param {string|undefined} selector\n   * @param {Element=} opt_element\n   * @return {?Promise}\n   * @visibleForTesting\n   */\n  getReadyPromise(waitForSpec, selector, opt_element) {\n    if (!waitForSpec) {\n      // Default case:\n      if (!selector) {\n        // waitFor selector is not defined, wait for nothing\n        return null;\n      } else {\n        // otherwise wait for ini-load by default\n        waitForSpec = 'ini-load';\n      }\n    }\n\n    const trackerWhitelist = getTrackerTypesForParentType('visible');\n    userAssert(\n      waitForSpec == 'none' || trackerWhitelist[waitForSpec] !== undefined,\n      'waitFor value %s not supported',\n      waitForSpec\n    );\n\n    const waitForTracker =\n      this.waitForTrackers_[waitForSpec] ||\n      this.root.getTrackerForWhitelist(waitForSpec, trackerWhitelist);\n    if (waitForTracker) {\n      this.waitForTrackers_[waitForSpec] = waitForTracker;\n    } else {\n      return null;\n    }\n\n    // Wait for root signal if there's no element selected.\n    return opt_element\n      ? waitForTracker.getElementSignal(waitForSpec, opt_element)\n      : waitForTracker.getRootSignal(waitForSpec);\n  }\n\n  /**\n   * @param {string} eventType\n   * @param {function(!AnalyticsEvent)} listener\n   * @param {!Element} target\n   * @param {!JsonObject} state\n   * @private\n   */\n  onEvent_(eventType, listener, target, state) {\n    const attr = getDataParamsFromAttributes(\n      target,\n      /* computeParamNameFunc */ undefined,\n      VARIABLE_DATA_ATTRIBUTE_KEY\n    );\n    for (const key in attr) {\n      state[key] = attr[key];\n    }\n    listener(new AnalyticsEvent(target, eventType, state));\n  }\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MessageType} from '../../../src/3p-frame-messaging';\nimport {SubscriptionApi} from '../../../src/iframe-helper';\nimport {dev, devAssert} from '../../../src/log';\n\n/** @private @const {string} */\nconst TAG_ = 'amp-analytics/iframe-transport-message-queue';\n\n/** @private @const {number} */\nconst MAX_QUEUE_SIZE_ = 100;\n\n/**\n * @visibleForTesting\n */\nexport class IframeTransportMessageQueue {\n  /**\n   * Constructor\n   * @param {!Window} win The window element\n   * @param {!HTMLIFrameElement} frame The cross-domain iframe to send\n   * messages to\n   */\n  constructor(win, frame) {\n    /** @private {!HTMLIFrameElement} */\n    this.frame_ = frame;\n\n    /** @private {boolean} */\n    this.isReady_ = false;\n\n    /**\n     * @private\n     * {!Array<!../../../src/3p-frame-messaging.IframeTransportEvent>}\n     */\n    this.pendingEvents_ = [];\n\n    /** @private {!../../../src/iframe-helper.SubscriptionApi} */\n    this.postMessageApi_ = new SubscriptionApi(\n      this.frame_,\n      MessageType.SEND_IFRAME_TRANSPORT_EVENTS,\n      true,\n      () => {\n        this.setIsReady();\n      }\n    );\n  }\n\n  /**\n   * Returns whether the queue has been marked as ready yet\n   * @return {boolean}\n   * @visibleForTesting\n   */\n  isReady() {\n    return this.isReady_;\n  }\n\n  /**\n   * Indicate that a cross-domain frame is ready to receive messages, and\n   * send all messages that were previously queued for it.\n   * @visibleForTesting\n   */\n  setIsReady() {\n    this.isReady_ = true;\n    this.flushQueue_();\n  }\n\n  /**\n   * Returns how many creativeId -> message(s) mappings there are\n   * @return {number}\n   * @visibleForTesting\n   */\n  queueSize() {\n    return this.pendingEvents_.length;\n  }\n\n  /**\n   * Enqueues an event to be sent to a cross-domain iframe.\n   * @param {!../../../src/3p-frame-messaging.IframeTransportEvent} event\n   * Identifies the event and which Transport instance (essentially which\n   * creative) is sending it.\n   */\n  enqueue(event) {\n    devAssert(\n      event && event.creativeId && event.message,\n      'Attempted to enqueue malformed message for: ' + event.creativeId\n    );\n    this.pendingEvents_.push(event);\n    if (this.queueSize() >= MAX_QUEUE_SIZE_) {\n      dev().warn(\n        TAG_,\n        'Exceeded maximum size of queue for: ' + event.creativeId\n      );\n      this.pendingEvents_.shift();\n    }\n    this.flushQueue_();\n  }\n\n  /**\n   * Send queued data (if there is any) to a cross-domain iframe\n   * @private\n   */\n  flushQueue_() {\n    if (this.isReady() && this.queueSize()) {\n      this.postMessageApi_.send(\n        MessageType.IFRAME_TRANSPORT_EVENTS,\n        /** @type {!JsonObject} */\n        ({events: this.pendingEvents_})\n      );\n      this.pendingEvents_ = [];\n    }\n  }\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Vendors who have IAB viewability certification may use iframe transport\n * (see ../amp-analytics.md and ../integrating-analytics.md). In this case,\n * put only the specification of the iframe location in the object below.\n *\n * This object is separated from vendors.js to be shared with extensions\n * other than amp-analytics, for instance amp-ad-exit.\n *\n * @const {!Object}\n */\nconst prodConfig = {\n  'bg': 'https://tpc.googlesyndication.com/b4a/b4a-runner.html',\n  'moat': 'https://z.moatads.com/ampanalytics093284/iframe.html',\n};\n/**\n * Canary config override\n *\n * @const {!Object}\n */\nconst canaryConfig = Object.assign({}, prodConfig, {\n  'bg': 'https://tpc.googlesyndication.com/b4a/experimental/b4a-runner.html',\n});\n\nexport const IFRAME_TRANSPORTS = /** @type {!JsonObject} */ (prodConfig);\nexport const IFRAME_TRANSPORTS_CANARY = /** @type {!JsonObject} */ (canaryConfig);\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {IframeTransportMessageQueue} from './iframe-transport-message-queue';\nimport {createElementWithAttributes} from '../../../src/dom';\nimport {devAssert, user} from '../../../src/log';\nimport {getMode} from '../../../src/mode';\nimport {hasOwn} from '../../../src/utils/object';\nimport {internalRuntimeVersion} from '../../../src/internal-version';\nimport {isLongTaskApiSupported} from '../../../src/service/jank-meter';\nimport {toggle} from '../../../src/style';\nimport {urls} from '../../../src/config';\n\n/** @private @const {string} */\nconst TAG_ = 'amp-analytics/iframe-transport';\n\n/** @private @const {number} */\nconst LONG_TASK_REPORTING_THRESHOLD = 5;\n\n/** @typedef {{\n *    frame: Element,\n *    sentinel: string,\n *    usageCount: number,\n *    queue: IframeTransportMessageQueue,\n *  }} */\nexport let FrameData;\n\n/**\n * Get the URL of the client lib\n * @param {!Window} ampWin The window object of the AMP document\n * @param {boolean=} opt_forceProdUrl If true, prod URL will be returned even\n *     in local/test modes.\n * @return {string}\n */\nexport function getIframeTransportScriptUrl(ampWin, opt_forceProdUrl) {\n  if (\n    (getMode().localDev || getMode().test) &&\n    !opt_forceProdUrl &&\n    ampWin.parent &&\n    ampWin.parent.location\n  ) {\n    const loc = ampWin.parent.location;\n    return `${loc.protocol}//${loc.host}/dist/iframe-transport-client-lib.js`;\n  }\n  return (\n    urls.thirdParty +\n    `/${internalRuntimeVersion()}/iframe-transport-client-v0.js`\n  );\n}\n\n/**\n * @visibleForTesting\n */\nexport class IframeTransport {\n  /**\n   * @param {!Window} ampWin The window object of the AMP document\n   * @param {string} type The value of the amp-analytics tag's type attribute\n   * @param {!JsonObject} config\n   * @param {string} id If (potentially) using sendResponseToCreative(), it\n   *     should be something that the recipient can use to identify the\n   *     context of the message, e.g. the resourceID of a DOM element.\n   */\n  constructor(ampWin, type, config, id) {\n    /** @private @const {!Window} */\n    this.ampWin_ = ampWin;\n\n    /** @private @const {string} */\n    this.type_ = type;\n\n    /** @private @const {string} */\n    this.creativeId_ = id;\n\n    devAssert(\n      config && config['iframe'],\n      'Must supply iframe URL to constructor!'\n    );\n    this.frameUrl_ = config['iframe'];\n\n    /** @private {number} */\n    this.numLongTasks_ = 0;\n\n    this.processCrossDomainIframe();\n  }\n\n  /**\n   * Called when a Transport instance is being removed from the DOM\n   */\n  detach() {\n    IframeTransport.markCrossDomainIframeAsDone(\n      this.ampWin_.document,\n      this.type_\n    );\n  }\n\n  /**\n   * If iframe is specified in config/transport, check whether third-party\n   * iframe already exists, and if not, create it.\n   */\n  processCrossDomainIframe() {\n    let frameData;\n    if (IframeTransport.hasCrossDomainIframe(this.type_)) {\n      frameData = IframeTransport.getFrameData(this.type_);\n      ++frameData.usageCount;\n    } else {\n      frameData = this.createCrossDomainIframe();\n      this.ampWin_.document.body.appendChild(frameData.frame);\n      this.createPerformanceObserver_();\n    }\n    devAssert(frameData, 'Trying to use non-existent frame');\n  }\n\n  /**\n   * Create a cross-domain iframe for third-party vendor analytics\n   * @return {!FrameData}\n   * @visibleForTesting\n   */\n  createCrossDomainIframe() {\n    // Explanation of IDs:\n    // Each instance of IframeTransport (owned by a specific amp-analytics\n    // tag, in turn owned by a specific creative) has an ID\n    // (this.getCreativeId()).\n    // Each cross-domain iframe also has an ID, stored here in sentinel.\n    // These two types of IDs have different formats.\n    // There is a many-to-one relationship, in that several creatives may\n    // utilize the same analytics vendor, so perhaps two creatives might\n    // both use the same vendor iframe.\n    // Of course, a given creative may use multiple analytics vendors, but\n    // in that case it would use multiple amp-analytics tags, so the\n    // iframeTransport.getCreativeId() -> sentinel relationship is *not*\n    // many-to-many.\n    const sentinel = IframeTransport.createUniqueId_();\n    const frameName = JSON.stringify(\n      /** @type {JsonObject} */ ({\n        scriptSrc: getIframeTransportScriptUrl(this.ampWin_),\n        sentinel,\n        type: this.type_,\n      })\n    );\n    const frame = createElementWithAttributes(\n      this.ampWin_.document,\n      'iframe',\n      /** @type {!JsonObject} */ ({\n        sandbox: 'allow-scripts allow-same-origin',\n        name: frameName,\n        'data-amp-3p-sentinel': sentinel,\n      })\n    );\n    frame.sentinel = sentinel;\n    toggle(frame, false);\n    frame.src = this.frameUrl_;\n    const frameData = /** @type {FrameData} */ ({\n      frame,\n      usageCount: 1,\n      queue: new IframeTransportMessageQueue(\n        this.ampWin_,\n        /** @type {!HTMLIFrameElement} */\n        (frame)\n      ),\n    });\n    IframeTransport.crossDomainIframes_[this.type_] = frameData;\n    return frameData;\n  }\n\n  /**\n   * Uses the Long Task API to create an observer for when 3p vendor frames\n   * take more than 50ms of continuous CPU time.\n   * Currently the only action in response to that is to log. It will log\n   * once per LONG_TASK_REPORTING_THRESHOLD that a long task occurs. (This\n   * implies that there is a grace period for the first\n   * LONG_TASK_REPORTING_THRESHOLD-1 occurrences.)\n   * @private\n   */\n  createPerformanceObserver_() {\n    if (!isLongTaskApiSupported(this.ampWin_)) {\n      return;\n    }\n    // TODO(jonkeller): Consider merging with jank-meter.js\n    IframeTransport.performanceObservers_[\n      this.type_\n    ] = new this.ampWin_.PerformanceObserver(entryList => {\n      if (!entryList) {\n        return;\n      }\n      entryList.getEntries().forEach(entry => {\n        if (\n          entry &&\n          entry['entryType'] == 'longtask' &&\n          entry['name'] == 'cross-origin-descendant' &&\n          entry.attribution\n        ) {\n          entry.attribution.forEach(attrib => {\n            if (\n              this.frameUrl_ == attrib['containerSrc'] &&\n              ++this.numLongTasks_ % LONG_TASK_REPORTING_THRESHOLD == 0\n            ) {\n              user().error(TAG_, `Long Task: Vendor: \"${this.type_}\"`);\n            }\n          });\n        }\n      });\n    });\n    IframeTransport.performanceObservers_[this.type_].observe({\n      entryTypes: ['longtask'],\n    });\n  }\n\n  /**\n   * Called when a creative no longer needs its cross-domain iframe (for\n   * instance, because the creative has been removed from the DOM).\n   * Once all creatives using a frame are done with it, the frame can be\n   * destroyed.\n   * @param {!HTMLDocument} ampDoc The AMP document\n   * @param {string} type The type attribute of the amp-analytics tag\n   */\n  static markCrossDomainIframeAsDone(ampDoc, type) {\n    const frameData = IframeTransport.getFrameData(type);\n    devAssert(\n      frameData && frameData.frame && frameData.usageCount,\n      'Marked the ' +\n        type +\n        ' frame as done, but there is no' +\n        ' record of it existing.'\n    );\n    if (--frameData.usageCount) {\n      // Some other instance is still using it\n      return;\n    }\n    ampDoc.body.removeChild(frameData.frame);\n    delete IframeTransport.crossDomainIframes_[type];\n    if (IframeTransport.performanceObservers_[type]) {\n      IframeTransport.performanceObservers_[type].disconnect();\n      IframeTransport.performanceObservers_[type] = null;\n    }\n  }\n\n  /**\n   * Returns whether this type of cross-domain frame is already known\n   * @param {string} type The type attribute of the amp-analytics tag\n   * @return {boolean}\n   * @visibleForTesting\n   */\n  static hasCrossDomainIframe(type) {\n    return hasOwn(IframeTransport.crossDomainIframes_, type);\n  }\n\n  /**\n   * Create a unique value to differentiate messages from a particular\n   * creative to the cross-domain iframe, or to identify the iframe itself.\n   * @return {string}\n   * @private\n   */\n  static createUniqueId_() {\n    return String(++IframeTransport.nextId_);\n  }\n\n  /**\n   * Sends an AMP Analytics trigger event to a vendor's cross-domain iframe,\n   * or queues the message if the frame is not yet ready to receive messages.\n   * @param {string} event A string describing the trigger event\n   * @visibleForTesting\n   */\n  sendRequest(event) {\n    const frameData = IframeTransport.getFrameData(this.type_);\n    devAssert(frameData, 'Trying to send message to non-existent frame');\n    devAssert(\n      frameData.queue,\n      'Event queue is missing for messages from ' +\n        this.type_ +\n        ' to creative ID ' +\n        this.creativeId_\n    );\n    frameData.queue.enqueue(\n      /**\n       * @type {!../../../src/3p-frame-messaging.IframeTransportEvent}\n       */\n      ({creativeId: this.creativeId_, message: event})\n    );\n  }\n\n  /**\n   * Gets the FrameData associated with a particular cross-domain frame type.\n   * @param {string} type The type attribute of the amp-analytics tag\n   * @return {FrameData}\n   * @visibleForTesting\n   */\n  static getFrameData(type) {\n    return IframeTransport.crossDomainIframes_[type];\n  }\n\n  /**\n   * Removes all knowledge of cross-domain iframes.\n   * Does not actually remove them from the DOM.\n   * @visibleForTesting\n   */\n  static resetCrossDomainIframes() {\n    IframeTransport.crossDomainIframes_ = {};\n  }\n\n  /**\n   * @return {string} Unique ID of this instance of IframeTransport\n   * @visibleForTesting\n   */\n  getCreativeId() {\n    return this.creativeId_;\n  }\n\n  /**\n   * @return {string} Type attribute of parent amp-analytics instance\n   * @visibleForTesting\n   */\n  getType() {\n    return this.type_;\n  }\n}\n\n/** @private {Object<string, FrameData>} */\nIframeTransport.crossDomainIframes_ = {};\n\n/** @private {number} */\nIframeTransport.nextId_ = 0;\n\n/** @private {Object<string, PerformanceObserver>} */\nIframeTransport.performanceObservers_ = {};\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AmpStoryEventTracker,\n  AnalyticsEvent,\n  AnalyticsEventType,\n  CustomEventTracker,\n  getTrackerKeyName,\n} from './events';\nimport {AmpdocAnalyticsRoot, EmbedAnalyticsRoot} from './analytics-root';\nimport {AnalyticsGroup} from './analytics-group';\nimport {Services} from '../../../src/services';\nimport {getFriendlyIframeEmbedOptional} from '../../../src/iframe-helper';\nimport {\n  getParentWindowFrameElement,\n  getServiceForDoc,\n  getServicePromiseForDoc,\n  registerServiceBuilderForDoc,\n} from '../../../src/service';\n\nconst PROP = '__AMP_AN_ROOT';\n\n/**\n * @implements {../../../src/service.Disposable}\n * @private\n * @visibleForTesting\n */\nexport class InstrumentationService {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @const */\n    this.ampdoc = ampdoc;\n\n    /** @const */\n    this.root_ = this.findRoot_(ampdoc.getRootNode());\n  }\n\n  /** @override */\n  dispose() {\n    this.root_.dispose();\n  }\n\n  /**\n   * @param {!Node} context\n   * @return {!./analytics-root.AnalyticsRoot}\n   */\n  getAnalyticsRoot(context) {\n    return this.findRoot_(context);\n  }\n\n  /**\n   * @param {!Element} analyticsElement\n   * @return {!AnalyticsGroup}\n   */\n  createAnalyticsGroup(analyticsElement) {\n    const root = this.findRoot_(analyticsElement);\n    return new AnalyticsGroup(root, analyticsElement);\n  }\n\n  /**\n   * @param {string} trackerName\n   * @private\n   */\n  getTrackerClass_(trackerName) {\n    switch (trackerName) {\n      case AnalyticsEventType.STORY:\n        return AmpStoryEventTracker;\n      default:\n        return CustomEventTracker;\n    }\n  }\n\n  /**\n   * Triggers the analytics event with the specified type.\n   *\n   * @param {!Element} target\n   * @param {string} eventType\n   * @param {!JsonObject=} opt_vars A map of vars and their values.\n   */\n  triggerEventForTarget(target, eventType, opt_vars) {\n    const event = new AnalyticsEvent(target, eventType, opt_vars);\n    const root = this.findRoot_(target);\n    const trackerName = getTrackerKeyName(eventType);\n    const tracker = /** @type {!CustomEventTracker|!AmpStoryEventTracker} */ (root.getTracker(\n      trackerName,\n      this.getTrackerClass_(trackerName)\n    ));\n    tracker.trigger(event);\n  }\n\n  /**\n   * @param {!Node} context\n   * @return {!./analytics-root.AnalyticsRoot}\n   */\n  findRoot_(context) {\n    // TODO(#22733): cleanup when ampdoc-fie is launched. Just use\n    // `ampdoc.getParent()`.\n    const ampdoc = Services.ampdoc(context);\n    const frame = getParentWindowFrameElement(context);\n    const embed = frame && getFriendlyIframeEmbedOptional(frame);\n    if (ampdoc == this.ampdoc && !embed && this.root_) {\n      // Main root already exists.\n      return this.root_;\n    }\n    return this.getOrCreateRoot_(embed || ampdoc, () => {\n      if (embed) {\n        return new EmbedAnalyticsRoot(ampdoc, embed);\n      }\n      return new AmpdocAnalyticsRoot(ampdoc);\n    });\n  }\n\n  /**\n   * @param {!Object} holder\n   * @param {function():!./analytics-root.AnalyticsRoot} factory\n   * @return {!./analytics-root.AnalyticsRoot}\n   */\n  getOrCreateRoot_(holder, factory) {\n    let root = /** @type {?./analytics-root.AnalyticsRoot} */ (holder[PROP]);\n    if (!root) {\n      root = factory();\n      holder[PROP] = root;\n    }\n    return root;\n  }\n}\n\n/**\n * It's important to resolve instrumentation asynchronously in elements that\n * depends on it in multi-doc scope. Otherwise an element life-cycle could\n * resolve way before we have the service available.\n *\n * @param {!Element|!../../../src/service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!Promise<InstrumentationService>}\n */\nexport function instrumentationServicePromiseForDoc(elementOrAmpDoc) {\n  return /** @type {!Promise<InstrumentationService>} */ (getServicePromiseForDoc(\n    elementOrAmpDoc,\n    'amp-analytics-instrumentation'\n  ));\n}\n\n/**\n * @param {!Element|!../../../src/service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!InstrumentationService}\n */\nexport function instrumentationServiceForDocForTesting(elementOrAmpDoc) {\n  registerServiceBuilderForDoc(\n    elementOrAmpDoc,\n    'amp-analytics-instrumentation',\n    InstrumentationService\n  );\n  return getServiceForDoc(elementOrAmpDoc, 'amp-analytics-instrumentation');\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ExpansionOptions, variableServiceForDoc} from './variables';\nimport {Priority} from '../../../src/service/navigation';\nimport {Services} from '../../../src/services';\nimport {WindowInterface} from '../../../src/window-interface';\nimport {addMissingParamsToUrl, addParamToUrl} from '../../../src/url';\nimport {createElementWithAttributes} from '../../../src/dom';\nimport {createLinker} from './linker';\nimport {dict} from '../../../src/utils/object';\nimport {getHighestAvailableDomain} from '../../../src/cookies';\nimport {isObject} from '../../../src/types';\nimport {user} from '../../../src/log';\n\n/** @const {string} */\nconst TAG = 'amp-analytics/linker-manager';\n\n/** @const {string} */\nconst LINKER_CREATED = 'i-amphtml-linker-created';\n\nexport class LinkerManager {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {!JsonObject} config\n   * @param {?string} type\n   * @param {!Element} element\n   */\n  constructor(ampdoc, config, type, element) {\n    /** @const @private {!../../../src/service/ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n\n    /** @private {?JsonObject|undefined} */\n    this.config_ = config['linkers'];\n\n    /** @const @private {!JsonObject} */\n    this.vars_ = config['vars'] || {};\n\n    /** @const @private {?string} */\n    this.type_ = type;\n\n    /** @const @private {!Element} */\n    this.element_ = element;\n\n    /** @private {!Array<Promise>} */\n    this.allLinkerPromises_ = [];\n\n    /** @const @private {!JsonObject} */\n    this.resolvedIds_ = dict();\n\n    /** @const @private {!../../../src/service/url-impl.Url} */\n    this.urlService_ = Services.urlForDoc(this.element_);\n\n    /** @const @private {!Promise<../../amp-form/0.1/form-submit-service.FormSubmitService>} */\n    this.formSubmitService_ = Services.formSubmitForDoc(ampdoc);\n\n    /** @private {?UnlistenDef} */\n    this.formSubmitUnlistener_ = null;\n\n    /** @const @private {!./variables.VariableService} */\n    this.variableService_ = variableServiceForDoc(this.ampdoc_);\n\n    /** @private {?string} */\n    this.highestAvailableDomain_ = null;\n  }\n\n  /**\n   * Start resolving any macros that may exist in the linker configuration\n   * and register the callback with the navigation service. Since macro\n   * resolution is asynchronous the callback may be looking for these values\n   * before they are ready.\n   * @return {*} TODO(#23582): Specify return type\n   */\n  init() {\n    if (!isObject(this.config_)) {\n      return;\n    }\n\n    this.highestAvailableDomain_ = getHighestAvailableDomain(this.ampdoc_.win);\n\n    this.config_ = this.processConfig_(\n      /** @type {!JsonObject} */ (this.config_)\n    );\n    // Each linker config has it's own set of macros to resolve.\n    this.allLinkerPromises_ = Object.keys(this.config_).map(name => {\n      const ids = this.config_[name]['ids'];\n      // Keys for linker data.\n      const keys = Object.keys(ids);\n      // Expand the value of each key value pair (if necessary).\n      const valuePromises = keys.map(key => {\n        const expansionOptions = new ExpansionOptions(\n          this.vars_,\n          /* opt_iterations */ undefined,\n          /* opt_noencode */ true\n        );\n        return this.expandTemplateWithUrlParams_(ids[key], expansionOptions);\n      });\n\n      return Promise.all(valuePromises).then(values => {\n        // Rejoin each key with its expanded value.\n        const expandedIds = {};\n        values.forEach((value, i) => {\n          // Omit pair if value resolves to empty.\n          if (value) {\n            expandedIds[keys[i]] = value;\n          }\n        });\n        this.resolvedIds_[name] = expandedIds;\n        return expandedIds;\n      });\n    });\n\n    if (this.allLinkerPromises_.length) {\n      const navigation = Services.navigationForDoc(this.ampdoc_);\n      navigation.registerAnchorMutator((element, event) => {\n        if (!element.href || event.type !== 'click') {\n          return;\n        }\n        element.href = this.applyLinkers_(element.href);\n      }, Priority.ANALYTICS_LINKER);\n      navigation.registerNavigateToMutator(\n        url => this.applyLinkers_(url),\n        Priority.ANALYTICS_LINKER\n      );\n    }\n\n    this.enableFormSupport_();\n\n    return Promise.all(this.allLinkerPromises_);\n  }\n\n  /**\n   * Remove any listeners created to manage form submission.\n   */\n  dispose() {\n    if (this.formSubmitUnlistener_) {\n      this.formSubmitUnlistener_();\n    }\n  }\n\n  /**\n   * @param {!JsonObject} config\n   * @return {!JsonObject}\n   * @private\n   */\n  processConfig_(config) {\n    const processedConfig = dict();\n    const defaultConfig = {\n      enabled: this.isLegacyOptIn_() && this.isSafari12OrAbove_(),\n    };\n    const linkerNames = Object.keys(config).filter(key => {\n      const value = config[key];\n      const isLinkerConfig = isObject(value);\n      if (!isLinkerConfig) {\n        defaultConfig[key] = value;\n      }\n      return isLinkerConfig;\n    });\n\n    const location = WindowInterface.getLocation(this.ampdoc_.win);\n    const isProxyOrigin = this.urlService_.isProxyOrigin(location);\n    linkerNames.forEach(name => {\n      const mergedConfig = Object.assign({}, defaultConfig, config[name]);\n\n      if (mergedConfig['enabled'] !== true) {\n        user().info(\n          TAG,\n          'linker config for %s is not enabled and will be ignored.',\n          name\n        );\n        return;\n      }\n\n      if (!isProxyOrigin && mergedConfig['proxyOnly'] !== false) {\n        return;\n      }\n\n      if (!mergedConfig['ids']) {\n        user().error(TAG, '\"ids\" is a required field for use of \"linkers\".');\n        return;\n      }\n\n      processedConfig[name] = mergedConfig;\n    });\n    return processedConfig;\n  }\n\n  /**\n   * Expands spec using provided expansion options and applies url replacement\n   * if necessary.\n   * @param {string} template Expression that needs to be expanded.\n   * @param {!ExpansionOptions} expansionOptions Expansion options.\n   * @return {!Promise<string>} expanded template.\n   */\n  expandTemplateWithUrlParams_(template, expansionOptions) {\n    const bindings = this.variableService_.getMacros(this.element_);\n    return this.variableService_\n      .expandTemplate(template, expansionOptions)\n      .then(expanded => {\n        const urlReplacements = Services.urlReplacementsForDoc(this.element_);\n        return urlReplacements.expandUrlAsync(expanded, bindings);\n      });\n  }\n\n  /**\n   * If the document has existing cid meta tag they do not need to explicity\n   * opt-in to use linker.\n   * @return {boolean}\n   * @private\n   */\n  isLegacyOptIn_() {\n    const optInMeta = this.ampdoc_.win.document.head./*OK*/ querySelector(\n      'meta[name=\"amp-google-client-id-api\"][content=\"googleanalytics\"]'\n    );\n    if (\n      !optInMeta ||\n      optInMeta.hasAttribute(LINKER_CREATED) ||\n      this.type_ !== 'googleanalytics'\n    ) {\n      return false;\n    }\n\n    optInMeta.setAttribute(LINKER_CREATED, '');\n    return true;\n  }\n\n  /**\n   * If the browser is Safari 12 or above.\n   * @return {boolean}\n   * @private\n   */\n  isSafari12OrAbove_() {\n    const platform = Services.platformFor(this.ampdoc_.win);\n    return platform.isSafari() && platform.getMajorVersion() >= 12;\n  }\n\n  /**\n   * Apply linkers to the given url. Linker params are appended if there\n   * are matching linker configs.\n   *\n   * @param {string} url\n   * @return {string}\n   * @private\n   */\n  applyLinkers_(url) {\n    const linkerConfigs = this.config_;\n    for (const linkerName in linkerConfigs) {\n      // The linker param is created asynchronously. This callback should be\n      // synchronous, so we skip if value is not there yet.\n      if (this.resolvedIds_[linkerName]) {\n        url = this.maybeAppendLinker_(\n          url,\n          linkerName,\n          linkerConfigs[linkerName]\n        );\n      }\n    }\n    return url;\n  }\n\n  /**\n   * Appends the linker param if the given url falls within rules defined in\n   * linker configuration.\n   * @param {string} url\n   * @param {string} name\n   * @param {!Object} config\n   * @return {string}\n   * @private\n   */\n  maybeAppendLinker_(url, name, config) {\n    const /** @type {Array} */ domains = config['destinationDomains'];\n    if (this.isDomainMatch_(url, name, domains)) {\n      const linkerValue = createLinker(\n        /* version */ '1',\n        this.resolvedIds_[name]\n      );\n      if (linkerValue) {\n        const params = dict();\n        params[name] = linkerValue;\n        return addMissingParamsToUrl(url, params);\n      }\n    }\n    return url;\n  }\n\n  /**\n   * Check to see if the url is a match for the given set of domains.\n   * @param {string} url\n   * @param {string} name Name given in linker config.\n   * @param {?Array} domains\n   * @return {*} TODO(#23582): Specify return type\n   */\n  isDomainMatch_(url, name, domains) {\n    const {hostname} = this.urlService_.parse(url);\n    // If given domains, but not in the right format.\n    if (domains && !Array.isArray(domains)) {\n      user().warn(TAG, '%s destinationDomains must be an array.', name);\n      return false;\n    }\n\n    // If destinationDomain is specified specifically, respect it.\n    if (domains) {\n      return this.destinationDomainsMatch_(domains, hostname);\n    }\n\n    // Fallback to default behavior\n\n    // Don't append linker for exact domain match, relative urls, or\n    // fragments.\n    const winHostname = WindowInterface.getHostname(this.ampdoc_.win);\n    if (winHostname === hostname) {\n      return false;\n    }\n\n    const {sourceUrl, canonicalUrl} = Services.documentInfoForDoc(this.ampdoc_);\n    const canonicalOrigin = this.urlService_.parse(canonicalUrl).hostname;\n    const isFriendlyCanonicalOrigin = areFriendlyDomains(\n      canonicalOrigin,\n      hostname\n    );\n    // Default to all subdomains matching (if there's one) plus canonicalOrigin\n\n    if (this.highestAvailableDomain_) {\n      const destinationDomain = [\n        this.highestAvailableDomain_,\n        '*' + this.highestAvailableDomain_,\n      ];\n      return (\n        this.destinationDomainsMatch_(destinationDomain, hostname) ||\n        isFriendlyCanonicalOrigin\n      );\n    }\n\n    // In the case where highestAvailableDomain cannot be found.\n    // (proxyOrigin, no <meta name='amp-cookie-scope'> found)\n    // default to friendly domain matching.\n    const sourceOrigin = this.urlService_.parse(sourceUrl).hostname;\n    return (\n      areFriendlyDomains(sourceOrigin, hostname) || isFriendlyCanonicalOrigin\n    );\n  }\n\n  /**\n   * Helper method to find out if hostname match the destinationDomain array.\n   * @param {Array<string>} domains\n   * @param {string} hostname\n   * @return {boolean}\n   */\n  destinationDomainsMatch_(domains, hostname) {\n    for (let i = 0; i < domains.length; i++) {\n      const domain = domains[i];\n      // Exact match.\n      if (domain === hostname) {\n        return true;\n      }\n      // Allow wildcard subdomain matching.\n      if (domain.indexOf('*') !== -1 && isWildCardMatch(hostname, domain)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Register callback that will handle form sumbits.\n   */\n  enableFormSupport_() {\n    if (this.formSubmitUnlistener_) {\n      return;\n    }\n\n    this.formSubmitService_.then(formService => {\n      this.formSubmitUnlistener_ = formService.beforeSubmit(\n        this.handleFormSubmit_.bind(this)\n      );\n    });\n  }\n\n  /**\n   * Check to see if any linker configs match this form's url, if so, send\n   * along the resolved linker value\n   * @param {!../../amp-form/0.1/form-submit-service.FormSubmitEventDef} event\n   */\n  handleFormSubmit_(event) {\n    const {form, actionXhrMutator} = event;\n\n    for (const linkerName in this.config_) {\n      const config = this.config_[linkerName];\n      const /** @type {Array} */ domains = config['destinationDomains'];\n\n      const url =\n        form.getAttribute('action-xhr') || form.getAttribute('action');\n\n      if (this.isDomainMatch_(url, linkerName, domains)) {\n        this.addDataToForm_(form, actionXhrMutator, linkerName);\n      }\n    }\n  }\n\n  /**\n   * Add the linker data to form. If action-xhr is present we can update the\n   * action-xhr, if not we fallback to adding hidden inputs.\n   * @param {!Element} form\n   * @param {function(string)} actionXhrMutator\n   * @param {string} linkerName\n   * @return {*} TODO(#23582): Specify return type\n   */\n  addDataToForm_(form, actionXhrMutator, linkerName) {\n    const ids = this.resolvedIds_[linkerName];\n    if (!ids) {\n      // Form was clicked before macros resolved.\n      return;\n    }\n\n    const linkerValue = createLinker(/* version */ '1', ids);\n\n    // Runtime controls submits with `action-xhr`, so we can append the linker\n    // param\n    const actionXhrUrl = form.getAttribute('action-xhr');\n    if (actionXhrUrl) {\n      const decoratedUrl = addParamToUrl(actionXhrUrl, linkerName, linkerValue);\n      return actionXhrMutator(decoratedUrl);\n    }\n\n    // If we are not using `action-xhr` it must be a GET request using the\n    // standard action attribute. Browsers will not let you change this in the\n    // middle of a submit, so we add the input hidden attributes.\n    this.addHiddenInputs_(form, linkerName, linkerValue);\n  }\n\n  /**\n   * Add the linker pairs as <input> elements to form.\n   * @param {!Element} form\n   * @param {string} linkerName\n   * @param {string} linkerValue\n   */\n  addHiddenInputs_(form, linkerName, linkerValue) {\n    const attrs = dict({\n      'type': 'hidden',\n      'name': linkerName,\n      'value': linkerValue,\n    });\n\n    const inputEl = createElementWithAttributes(\n      /** @type {!Document} */ (form.ownerDocument),\n      'input',\n      attrs\n    );\n    form.appendChild(inputEl);\n  }\n}\n\n/**\n * Domains are considered to be friends if they are identical\n * after removing these prefixes: m. www. amp.\n * URL scheme & port are not taken into consideration.\n *\n * Note that this algorithm will break corner cases like\n *   www.com vs amp.com vs m.com\n * Or\n *   amp.wordpress.com vs www.wordpress.com\n *\n * @param {string} domain1\n * @param {string} domain2\n * @return {boolean}\n * @visibleForTesting\n */\nexport function areFriendlyDomains(domain1, domain2) {\n  return getBaseDomain(domain1) === getBaseDomain(domain2);\n}\n\n/**\n * Strips out all prefixing m. www. amp. from a domain name.\n * @param {string} domain\n * @return {string}\n */\nfunction getBaseDomain(domain) {\n  return domain.replace(/^(?:www\\.|m\\.|amp\\.)+/, '');\n}\n\n/**\n * Escape any regex flags other than `*`\n * @param {string} str\n * @return {*} TODO(#23582): Specify return type\n */\nfunction regexEscape(str) {\n  return str.replace(/[-\\/\\\\^$+?.()|[\\]{}]/g, '\\\\$&');\n}\n\n/**\n * Allows specified wildcard matching of domains.\n * Example:\n *    `*.foo.com` matches `amp.foo.com`\n *    `*.foo.com*` matches `amp.foo.com.uk`\n * @param {string} hostname\n * @param {string} domain\n * @return {boolean}\n * @visibleForTesting\n */\nexport function isWildCardMatch(hostname, domain) {\n  const escaped = regexEscape(domain);\n  const regex = escaped.replace(/\\*/g, '.*');\n  return new RegExp('^' + regex + '$').test(hostname);\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getService, registerServiceBuilder} from '../../../src/service';\nimport {hasOwn} from '../../../src/utils/object';\nimport {parseLinker} from './linker';\nimport {\n  parseQueryString,\n  parseUrlDeprecated,\n  removeParamsFromSearch,\n} from '../../../src/url';\n\nimport {user} from '../../../src/log';\n\nconst TAG = 'amp-analytics/linker-reader';\n\nexport class LinkerReader {\n  /**\n   * @param {!Window} win\n   */\n  constructor(win) {\n    /** @private {!Window} */\n    this.win_ = win;\n\n    /** @private {!Object<string, ?Object<string, string>>} */\n    this.linkerParams_ = {};\n  }\n\n  /**\n   * Get the LINKER_PARAM(name, id) value from url and clean the value\n   * @param {string} name\n   * @param {string} id\n   * @return {?string}\n   */\n  get(name, id) {\n    if (!name || !id) {\n      user().error(TAG, 'LINKER_PARAM requires two params, name and id');\n      return null;\n    }\n\n    if (!hasOwn(this.linkerParams_, name)) {\n      this.linkerParams_[name] = this.parseAndCleanQueryString_(name);\n    }\n\n    if (this.linkerParams_[name] && this.linkerParams_[name][id]) {\n      return this.linkerParams_[name][id];\n    }\n\n    return null;\n  }\n\n  /**\n   * Parse the url get the key value pair for the linker name\n   * and remove the LINKER_PARAM from window location\n   * @param {string} name\n   * @return {?Object<string, string>}\n   */\n  parseAndCleanQueryString_(name) {\n    const parsedUrl = parseUrlDeprecated(this.win_.location.href);\n    const params = parseQueryString(parsedUrl.search);\n    if (!hasOwn(params, name)) {\n      // Linker param not found.\n      return null;\n    }\n    const value = params[name];\n\n    this.removeLinkerParam_(parsedUrl, name);\n    return parseLinker(value);\n  }\n\n  /**\n   * Remove the linker param from the current url\n   * @param {!Location} url\n   * @param {string} name\n   */\n  removeLinkerParam_(url, name) {\n    if (!this.win_.history.replaceState) {\n      // Can't replace state. Ignore\n      return;\n    }\n    const searchUrl = url.search;\n    const removedLinkerParamSearchUrl = removeParamsFromSearch(searchUrl, name);\n    const newHref =\n      url.origin +\n      url.pathname +\n      removedLinkerParamSearchUrl +\n      (url.hash || '');\n    this.win_.history.replaceState(null, '', newHref);\n  }\n}\n\n/**\n * @param {!Window} win\n */\nexport function installLinkerReaderService(win) {\n  registerServiceBuilder(win, 'amp-analytics-linker-reader', LinkerReader);\n}\n\n/**\n * @param {!Window} win\n * @return {!LinkerReader}\n */\nexport function linkerReaderServiceFor(win) {\n  return getService(win, 'amp-analytics-linker-reader');\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {WindowInterface} from '../../../src/window-interface';\nimport {\n  base64UrlDecodeFromString,\n  base64UrlEncodeFromString,\n} from '../../../src/utils/base64';\nimport {crc32} from './crc32';\nimport {user} from '../../../src/log';\n\n/** @const {string} */\nconst DELIMITER = '*';\nconst KEY_VALIDATOR = /^[a-zA-Z0-9\\-_.]+$/;\nconst CHECKSUM_OFFSET_MAX_MIN = 1;\nconst VALID_VERSION = 1;\nconst TAG = 'amp-analytics/linker';\n\n/**\n * Creates the linker string, in the format of\n * <version>*<checksum>*<serializedIds>\n *\n * where\n *   checksum: base36(CRC32(<fingerprint>*<minuteSinceEpoch>*<serializedIds>))\n *   serializedIds: <id1>*<idValue1>*<id2>*<idValue2>...\n *                  values are base64 encoded\n *   fingerprint: <userAgent>*<timezoneOffset>*<userLanguage>\n *\n * @param {string} version\n * @param {!Object} ids\n * @return {string}\n */\nexport function createLinker(version, ids) {\n  const serializedIds = serialize(ids);\n  if (serializedIds === '') {\n    return '';\n  }\n  const checksum = getCheckSum(serializedIds);\n  return [version, checksum, serializedIds].join(DELIMITER);\n}\n\n/**\n * Return the key value pairs\n * @param {string} value\n * @return {?Object<string, string>}\n */\nexport function parseLinker(value) {\n  const linkerObj = parseLinkerParamValue(value);\n  if (!linkerObj) {\n    return null;\n  }\n  const {checksum, serializedIds} = linkerObj;\n  if (!isCheckSumValid(serializedIds, checksum)) {\n    user().error(TAG, 'LINKER_PARAM value checksum not valid');\n    return null;\n  }\n  return deserialize(serializedIds);\n}\n\n/**\n * Parse the linker param value to version checksum and serializedParams\n * @param {string} value\n * @return {?Object}\n */\nfunction parseLinkerParamValue(value) {\n  const parts = value.split(DELIMITER);\n  const isEven = parts.length % 2 == 0;\n\n  if (parts.length < 4 || !isEven) {\n    // Format <version>*<checksum>*<key1>*<value1>\n    // Note: linker makes sure there's at least one pair of non empty key value\n    // Make sure there is at least three delimiters.\n    user().error(TAG, `Invalid linker_param value ${value}`);\n    return null;\n  }\n\n  const version = Number(parts.shift());\n  if (version !== VALID_VERSION) {\n    user().error(TAG, `Invalid version number ${version}`);\n    return null;\n  }\n\n  const checksum = parts.shift();\n  const serializedIds = parts.join(DELIMITER);\n  return {\n    checksum,\n    serializedIds,\n  };\n}\n\n/**\n * Check if the checksum is valid with time offset tolerance.\n * @param {string} serializedIds\n * @param {string} checksum\n * @return {boolean}\n */\nfunction isCheckSumValid(serializedIds, checksum) {\n  for (let i = 0; i <= CHECKSUM_OFFSET_MAX_MIN; i++) {\n    const calculateCheckSum = getCheckSum(serializedIds, i);\n    if (calculateCheckSum == checksum) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Create a unique checksum hashing the fingerprint and a few other values.\n * @param {string} serializedIds\n * @param {number=} opt_offsetMin\n * @return {string}\n */\nfunction getCheckSum(serializedIds, opt_offsetMin) {\n  const fingerprint = getFingerprint();\n  const offset = opt_offsetMin || 0;\n  const timestamp = getMinSinceEpoch() - offset;\n  const crc = crc32([fingerprint, timestamp, serializedIds].join(DELIMITER));\n  // Encoded to base36 for less bytes.\n  return crc.toString(36);\n}\n\n/**\n * Generates a semi-unique value for page visitor.\n * @return {string}\n */\nfunction getFingerprint() {\n  const date = new Date();\n  const timezone = date.getTimezoneOffset();\n\n  const language = WindowInterface.getUserLanguage(window);\n  return [WindowInterface.getUserAgent(window), timezone, language].join(\n    DELIMITER\n  );\n}\n\n/**\n * Encode all values & join them together\n * @param {!Object} pairs\n * @return {string}\n */\nfunction serialize(pairs) {\n  if (!pairs) {\n    return '';\n  }\n  return Object.keys(pairs)\n    .filter(key => {\n      const valid = KEY_VALIDATOR.test(key);\n      if (!valid) {\n        user().error(TAG, 'Invalid linker key: ' + key);\n      }\n      return valid;\n    })\n    .map(key => key + DELIMITER + encode(pairs[key]))\n    .join(DELIMITER);\n}\n\n/**\n * Deserialize the serializedIds and return keyValue pairs.\n * @param {string} serializedIds\n * @return {!Object<string, string>}\n */\nfunction deserialize(serializedIds) {\n  const keyValuePairs = {};\n  const params = serializedIds.split(DELIMITER);\n  for (let i = 0; i < params.length; i += 2) {\n    const key = params[i];\n    const valid = KEY_VALIDATOR.test(key);\n    if (!valid) {\n      user().error(TAG, `Invalid linker key ${key}, value ignored`);\n      continue;\n    }\n    const value = decode(params[i + 1]);\n    keyValuePairs[key] = value;\n  }\n  return keyValuePairs;\n}\n\n/**\n * Rounded time used to check if t2 - t1 is within our time tolerance.\n * @return {number}\n */\nfunction getMinSinceEpoch() {\n  // Timestamp in minutes, floored.\n  return Math.floor(Date.now() / 60000);\n}\n\n/**\n * Function that encodesURIComponent but also tilde, since we are using it as\n * our delimiter.\n * @param {string} value\n * @return {*} TODO(#23582): Specify return type\n */\nfunction encode(value) {\n  return base64UrlEncodeFromString(String(value));\n}\n\n/**\n * @param {string} value\n * @return {string}\n */\nfunction decode(value) {\n  return base64UrlDecodeFromString(String(value));\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {computedStyle} from '../../../src/style';\n\n/**\n *  Returns the min opacity found amongst the element and its ancestors\n *  @param {!Element|null} el\n *  @return {number} minimum opacity value\n */\nexport function getMinOpacity(el) {\n  const parentNodeTree = getElementNodeTree(el.parentElement);\n  parentNodeTree.push(el);\n  let minOpacityFound = 1;\n  let opacity;\n\n  for (let i = 0; i < parentNodeTree.length; i++) {\n    const node = parentNodeTree[i];\n    opacity = getElementOpacity(node);\n\n    if (opacity < minOpacityFound) {\n      minOpacityFound = opacity;\n    }\n\n    if (minOpacityFound === 0) {\n      return minOpacityFound;\n    }\n  }\n\n  return minOpacityFound;\n}\n\n/**\n * Returns the Opacity value of the element.\n * @param {!Element} el\n * @return {number}\n */\nfunction getElementOpacity(el) {\n  const win = window;\n  const fullyVisibleValue = 1;\n  const fullyHiddenValue = 0;\n\n  if (!el) {\n    return fullyVisibleValue;\n  }\n  const {visibility, opacity} = computedStyle(win, el);\n\n  if (visibility === 'hidden') {\n    return fullyHiddenValue;\n  }\n  const opacityValue = opacity === '' ? fullyVisibleValue : parseFloat(opacity);\n\n  if (isNaN(opacityValue)) {\n    return fullyVisibleValue;\n  }\n\n  return opacityValue;\n}\n\n/**\n * Returns the node tree of the current element starting from\n * the document root\n * @param {!Element|null} el\n * @return {Array} node list of the element's node tree\n */\nfunction getElementNodeTree(el) {\n  const nodeList = [];\n  if (!el) {\n    return nodeList;\n  }\n\n  const CAP = 50;\n  const DOCUMENT_NODE_TYPE = 9;\n  const ELEMENT_WITH_PARENT_TYPE = 1;\n  let parent;\n  let element = el;\n  nodeList.push(element);\n\n  for (let i = 0; i < CAP; i++) {\n    parent = element.parentNode || element.parentElement;\n\n    if (parent && parent.nodeType == ELEMENT_WITH_PARENT_TYPE) {\n      element = parent;\n      nodeList.push(element);\n    } else if (parent && parent.nodeType == DOCUMENT_NODE_TYPE) {\n      parent = element.ownerDocument.defaultView.frameElement;\n\n      if (parent && parent.nodeType == ELEMENT_WITH_PARENT_TYPE) {\n        element = parent;\n        nodeList.push(element);\n      } else {\n        break;\n      }\n    } else {\n      break;\n    }\n  }\n\n  return nodeList;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AnalyticsEventType} from './events';\nimport {BatchSegmentDef, defaultSerializer} from './transport-serializer';\nimport {ExpansionOptions, variableServiceForDoc} from './variables';\nimport {SANDBOX_AVAILABLE_VARS} from './sandbox-vars-whitelist';\nimport {Services} from '../../../src/services';\nimport {devAssert, userAssert} from '../../../src/log';\nimport {dict} from '../../../src/utils/object';\nimport {getResourceTiming} from './resource-timing';\nimport {isArray, isFiniteNumber, isObject} from '../../../src/types';\n\nconst BATCH_INTERVAL_MIN = 200;\n\nexport class RequestHandler {\n  /**\n   * @param {!Element} element\n   * @param {!JsonObject} request\n   * @param {!../../../src/preconnect.Preconnect} preconnect\n   * @param {./transport.Transport} transport\n   * @param {boolean} isSandbox\n   */\n  constructor(element, request, preconnect, transport, isSandbox) {\n    /** @const {!Element} */\n    this.element_ = element;\n\n    /** @const {!../../../src/service/ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = element.getAmpDoc();\n\n    /** @const {!Window} */\n    this.win = this.ampdoc_.win;\n\n    /** @const {string} !if specified, all requests are prepended with this */\n    this.requestOrigin_ = request['origin'];\n\n    /** @const {string} */\n    this.baseUrl = devAssert(request['baseUrl']);\n\n    /** @private {Array<number>|number|undefined} */\n    this.batchInterval_ = request['batchInterval']; //unit is sec\n\n    /** @private {?number} */\n    this.reportWindow_ = Number(request['reportWindow']) || null; // unit is sec\n\n    /** @private {?number} */\n    this.batchIntervalPointer_ = null;\n\n    /** @private {!./variables.VariableService} */\n    this.variableService_ = variableServiceForDoc(element);\n\n    /** @private {!../../../src/service/url-replacements-impl.UrlReplacements} */\n    this.urlReplacementService_ = Services.urlReplacementsForDoc(element);\n\n    /** @private {!../../../src/service/url-impl.Url} */\n    this.urlService_ = Services.urlForDoc(element);\n\n    /** @private {?Promise<string>} */\n    this.baseUrlPromise_ = null;\n\n    /** @private {?Promise<string>} */\n    this.baseUrlTemplatePromise_ = null;\n\n    /** @private {?Promise<string>} */\n    this.requestOriginPromise_ = null;\n\n    /** @private {!Array<!Promise<!BatchSegmentDef>>} */\n    this.batchSegmentPromises_ = [];\n\n    /** @private {!../../../src/preconnect.Preconnect} */\n    this.preconnect_ = preconnect;\n\n    /** @private {./transport.Transport} */\n    this.transport_ = transport;\n\n    /** @const @private {!Object|undefined} */\n    this.whiteList_ = isSandbox ? SANDBOX_AVAILABLE_VARS : undefined;\n\n    /** @private {?number} */\n    this.batchIntervalTimeoutId_ = null;\n\n    /** @private {?number} */\n    this.reportWindowTimeoutId_ = null;\n\n    /** @private {boolean} */\n    this.reportRequest_ = true;\n\n    /** @private {?JsonObject} */\n    this.lastTrigger_ = null;\n\n    /** @private {number} */\n    this.queueSize_ = 0;\n\n    /** @private @const {number} */\n    this.startTime_ = Date.now();\n\n    this.initReportWindow_();\n    this.initBatchInterval_();\n  }\n\n  /**\n   * Exposed method to send a request on event.\n   * Real ping may be batched and send out later.\n   * @param {?JsonObject} configParams\n   * @param {!JsonObject} trigger\n   * @param {!./variables.ExpansionOptions} expansionOption\n   */\n  send(configParams, trigger, expansionOption) {\n    const isImportant = trigger['important'] === true;\n    if (!this.reportRequest_ && !isImportant) {\n      // Ignore non important trigger out reportWindow\n      return;\n    }\n\n    this.queueSize_++;\n    this.lastTrigger_ = trigger;\n    const bindings = this.variableService_.getMacros(this.element_);\n    bindings['RESOURCE_TIMING'] = getResourceTiming(\n      this.ampdoc_,\n      trigger['resourceTimingSpec'],\n      this.startTime_\n    );\n\n    if (!this.baseUrlPromise_) {\n      expansionOption.freezeVar('extraUrlParams');\n\n      this.baseUrlTemplatePromise_ = this.variableService_.expandTemplate(\n        this.baseUrl,\n        expansionOption\n      );\n\n      this.baseUrlPromise_ = this.baseUrlTemplatePromise_.then(baseUrl => {\n        return this.urlReplacementService_.expandUrlAsync(\n          baseUrl,\n          bindings,\n          this.whiteList_\n        );\n      });\n    }\n\n    // expand requestOrigin if it is declared\n    if (!this.requestOriginPromise_ && this.requestOrigin_) {\n      // do not encode vars in request origin\n      const requestOriginExpansionOpt = new ExpansionOptions(\n        expansionOption.vars,\n        expansionOption.iterations,\n        true // opt_noEncode\n      );\n\n      this.requestOriginPromise_ = this.variableService_\n        // expand variables in request origin\n        .expandTemplate(this.requestOrigin_, requestOriginExpansionOpt)\n        // substitute in URL values e.g. DOCUMENT_REFERRER -> https://example.com\n        .then(expandedRequestOrigin => {\n          return this.urlReplacementService_.expandUrlAsync(\n            expandedRequestOrigin,\n            bindings,\n            this.whiteList_,\n            true // opt_noEncode\n          );\n        });\n    }\n\n    const params = Object.assign({}, configParams, trigger['extraUrlParams']);\n    const timestamp = this.win.Date.now();\n    const batchSegmentPromise = expandExtraUrlParams(\n      this.variableService_,\n      this.urlReplacementService_,\n      params,\n      expansionOption,\n      bindings,\n      this.whiteList_\n    ).then(params => {\n      return dict({\n        'trigger': trigger['on'],\n        'timestamp': timestamp,\n        'extraUrlParams': params,\n      });\n    });\n    this.batchSegmentPromises_.push(batchSegmentPromise);\n    this.trigger_(isImportant || !this.batchInterval_);\n  }\n\n  /**\n   * Dispose function that clear request handler state.\n   */\n  dispose() {\n    this.reset_();\n\n    // Clear batchInterval timeout\n    if (this.batchIntervalTimeoutId_) {\n      this.win.clearTimeout(this.batchIntervalTimeoutId_);\n      this.batchIntervalTimeoutId_ = null;\n    }\n\n    if (this.reportWindowTimeoutId_) {\n      this.win.clearTimeout(this.reportWindowTimeoutId_);\n      this.reportWindowTimeoutId_ = null;\n    }\n  }\n\n  /**\n   * Function that schedule the actual request send.\n   * @param {boolean} isImmediate\n   * @private\n   */\n  trigger_(isImmediate) {\n    if (this.queueSize_ == 0) {\n      // Do nothing if no request in queue\n      return;\n    }\n\n    if (isImmediate) {\n      // If not batched, or batchInterval scheduler schedule trigger immediately\n      this.fire_();\n    }\n  }\n\n  /**\n   * Send out request. Should only be called by `trigger_` function\n   * @private\n   */\n  fire_() {\n    const {\n      requestOriginPromise_: requestOriginPromise,\n      baseUrlTemplatePromise_: baseUrlTemplatePromise,\n      baseUrlPromise_: baseUrlPromise,\n      batchSegmentPromises_: segmentPromises,\n    } = this;\n    const trigger = /** @type {!JsonObject} */ (this.lastTrigger_);\n    this.reset_();\n\n    // preconnect to requestOrigin if available, otherwise baseUrlTemplate\n    const preconnectPromise = requestOriginPromise\n      ? requestOriginPromise\n      : baseUrlTemplatePromise;\n\n    preconnectPromise.then(preUrl => {\n      this.preconnect_.url(preUrl, true);\n    });\n\n    Promise.all([\n      baseUrlPromise,\n      Promise.all(segmentPromises),\n      requestOriginPromise,\n    ]).then(results => {\n      const requestUrl = this.composeRequestUrl_(results[0], results[2]);\n\n      const batchSegments = results[1];\n      if (batchSegments.length === 0) {\n        return;\n      }\n      // TODO: iframePing will not work with batch. Add a config validation.\n      if (trigger['iframePing']) {\n        userAssert(\n          trigger['on'] == AnalyticsEventType.VISIBLE,\n          'iframePing is only available on page view requests.'\n        );\n        this.transport_.sendRequestUsingIframe(requestUrl, batchSegments[0]);\n      } else {\n        this.transport_.sendRequest(\n          requestUrl,\n          batchSegments,\n          !!this.batchInterval_\n        );\n      }\n    });\n  }\n\n  /**\n   * Reset batching status\n   * @private\n   */\n  reset_() {\n    this.queueSize_ = 0;\n    this.baseUrlPromise_ = null;\n    this.baseUrlTemplatePromise_ = null;\n    this.batchSegmentPromises_ = [];\n    this.lastTrigger_ = null;\n  }\n\n  /**\n   * Handle batchInterval\n   */\n  initBatchInterval_() {\n    if (!this.batchInterval_) {\n      return;\n    }\n\n    this.batchInterval_ = isArray(this.batchInterval_)\n      ? this.batchInterval_\n      : [this.batchInterval_];\n\n    for (let i = 0; i < this.batchInterval_.length; i++) {\n      let interval = this.batchInterval_[i];\n      userAssert(\n        isFiniteNumber(interval),\n        'Invalid batchInterval value: %s',\n        this.batchInterval_\n      );\n      interval = Number(interval) * 1000;\n      userAssert(\n        interval >= BATCH_INTERVAL_MIN,\n        'Invalid batchInterval value: %s, ' +\n          'interval value must be greater than %s ms.',\n        this.batchInterval_,\n        BATCH_INTERVAL_MIN\n      );\n      this.batchInterval_[i] = interval;\n    }\n\n    this.batchIntervalPointer_ = 0;\n\n    this.refreshBatchInterval_();\n  }\n\n  /**\n   * Initializes report window.\n   */\n  initReportWindow_() {\n    if (this.reportWindow_) {\n      this.reportWindowTimeoutId_ = this.win.setTimeout(() => {\n        // Flush batch queue;\n        this.trigger_(true);\n        this.reportRequest_ = false;\n        // Clear batchInterval timeout\n        if (this.batchIntervalTimeoutId_) {\n          this.win.clearTimeout(this.batchIntervalTimeoutId_);\n          this.batchIntervalTimeoutId_ = null;\n        }\n      }, this.reportWindow_ * 1000);\n    }\n  }\n\n  /**\n   * Schedule sending request regarding to batchInterval\n   */\n  refreshBatchInterval_() {\n    devAssert(\n      this.batchIntervalPointer_ != null,\n      'Should not start batchInterval without pointer'\n    );\n    const interval =\n      this.batchIntervalPointer_ < this.batchInterval_.length\n        ? this.batchInterval_[this.batchIntervalPointer_++]\n        : this.batchInterval_[this.batchInterval_.length - 1];\n\n    this.batchIntervalTimeoutId_ = this.win.setTimeout(() => {\n      this.trigger_(true);\n      this.refreshBatchInterval_();\n    }, interval);\n  }\n\n  /**\n   * Composes a request URL given a base and requestOrigin\n   * @private\n   * @param {string} baseUrl\n   * @param {string=} opt_requestOrigin\n   * @return {string}\n   */\n  composeRequestUrl_(baseUrl, opt_requestOrigin) {\n    if (opt_requestOrigin) {\n      // We expect requestOrigin to always contain the URL origin. In the case\n      // where requestOrigin has a relative URL, the current page's origin will\n      // be used. We will simply respect the requestOrigin and baseUrl, we don't\n      // check if they form a valid URL and request will fail silently\n      const requestOriginInfo = this.urlService_.parse(opt_requestOrigin);\n      return requestOriginInfo.origin + baseUrl;\n    }\n\n    return baseUrl;\n  }\n}\n\n/**\n * Expand the postMessage string\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} msg\n * @param {?JsonObject} configParams\n * @param {!JsonObject} trigger\n * @param {!./variables.ExpansionOptions} expansionOption\n * @param {!Element} element\n * @return {Promise<string>}\n */\nexport function expandPostMessage(\n  ampdoc,\n  msg,\n  configParams,\n  trigger,\n  expansionOption,\n  element\n) {\n  const variableService = variableServiceForDoc(ampdoc);\n  const urlReplacementService = Services.urlReplacementsForDoc(element);\n\n  const bindings = variableService.getMacros(element);\n  expansionOption.freezeVar('extraUrlParams');\n\n  const basePromise = variableService\n    .expandTemplate(msg, expansionOption)\n    .then(base => {\n      return urlReplacementService.expandStringAsync(base, bindings);\n    });\n  if (msg.indexOf('${extraUrlParams}') < 0) {\n    // No need to append extraUrlParams\n    return basePromise;\n  }\n\n  return basePromise.then(expandedMsg => {\n    const params = Object.assign({}, configParams, trigger['extraUrlParams']);\n    //return base url with the appended extra url params;\n    return expandExtraUrlParams(\n      variableService,\n      urlReplacementService,\n      params,\n      expansionOption,\n      bindings\n    ).then(extraUrlParams => {\n      return defaultSerializer(expandedMsg, [\n        dict({'extraUrlParams': extraUrlParams}),\n      ]);\n    });\n  });\n}\n\n/**\n * Function that handler extraUrlParams from config and trigger.\n * @param {!./variables.VariableService} variableService\n * @param {!../../../src/service/url-replacements-impl.UrlReplacements} urlReplacements\n * @param {!Object} params\n * @param {!./variables.ExpansionOptions} expansionOption\n * @param {!Object} bindings\n * @param {!Object=} opt_whitelist\n * @return {!Promise<!Object>}\n * @private\n */\nfunction expandExtraUrlParams(\n  variableService,\n  urlReplacements,\n  params,\n  expansionOption,\n  bindings,\n  opt_whitelist\n) {\n  const requestPromises = [];\n  // Don't encode param values here,\n  // as we'll do it later in the getExtraUrlParamsString call.\n  const option = new ExpansionOptions(\n    expansionOption.vars,\n    expansionOption.iterations,\n    true /* noEncode */\n  );\n\n  const expandObject = (params, key) => {\n    const value = params[key];\n\n    if (typeof value === 'string') {\n      const request = variableService\n        .expandTemplate(value, option)\n        .then(value =>\n          urlReplacements.expandStringAsync(value, bindings, opt_whitelist)\n        )\n        .then(value => (params[key] = value));\n      requestPromises.push(request);\n    } else if (isArray(value)) {\n      value.forEach((_, index) => expandObject(value, index));\n    } else if (isObject(value) && value !== null) {\n      Object.keys(value).forEach(key => expandObject(value, key));\n    }\n  };\n\n  Object.keys(params).forEach(key => expandObject(params, key));\n\n  return Promise.all(requestPromises).then(() => params);\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ExpansionOptions, variableServiceForDoc} from './variables';\nimport {findIndex} from '../../../src/utils/array';\nimport {isObject} from '../../../src/types';\nimport {parseUrlDeprecated} from '../../../src/url';\nimport {user} from '../../../src/log';\n\n/**\n * A user-supplied JSON object that defines a resource to be reported. It is\n * expected to have some fields.\n * A resource timing enty will match against this resource if all of the\n * following properties match.\n * @property {string=} host A string whose value should be a RegExp. It defines\n *     a host or set of hosts to match against. By default, the RegExp will\n *     match all hosts if omitted.\n * @property {string=} path A string whose value should be a RegExp. It defines\n *     a path or set of paths to match against. By default, the RegExp will\n *     match all paths if omitted.\n * @property {string=} query A string whose value should be a RegExp. It defines\n *     a query string or set of query strings to match against. By default, the\n *     RegExp will match all query strings if omitted.\n * @typedef {!JsonObject}\n */\nlet IndividualResourceSpecDef;\n\n/**\n * A parsed resource spec for a specific host or sets of hosts (as defined by\n * the hostPattern).\n * @typedef {{\n *   hostPattern: !RegExp,\n *   resources: !Array<{\n *     name: string,\n *     pathPattern: !RegExp,\n *     queryPattern: !RegExp,\n *   }>,\n * }}\n */\nlet ResourceSpecForHostDef;\n\n/**\n * The default maximum buffer size for resource timing entries. After the limit\n * has been reached, the browser will stop recording resource timing entries.\n * This number is chosen by the spec: https://w3c.github.io/resource-timing.\n * @const {number}\n */\nconst RESOURCE_TIMING_BUFFER_SIZE = 150;\n\n/**\n * Yields the thread before running the function to avoid causing jank. (i.e. a\n * task that takes over 16ms.)\n * @param {function(): OUT} fn\n * @return {!Promise<OUT>}\n * @template OUT\n */\nfunction yieldThread(fn) {\n  return new Promise(resolve => {\n    setTimeout(() => resolve(fn()));\n  });\n}\n\n/**\n * Checks whether the given object is a valid resource timing spec.\n * @param {!JsonObject} spec\n * @return {boolean}\n */\nfunction validateResourceTimingSpec(spec) {\n  if (!isObject(spec['resources'])) {\n    user().warn('ANALYTICS', 'resourceTimingSpec missing \"resources\" field');\n    return false;\n  }\n  if (\n    !spec['encoding'] ||\n    !spec['encoding']['entry'] ||\n    !spec['encoding']['delim']\n  ) {\n    user().warn(\n      'ANALYTICS',\n      'resourceTimingSpec is missing or has incomplete encoding options'\n    );\n    return false;\n  }\n  if (spec['encoding']['base'] < 2 || spec['encoding']['base'] > 36) {\n    user().warn(\n      'ANALYTICS',\n      'resource timing variables only supports bases between 2 and 36'\n    );\n    return false;\n  }\n  if (\n    spec['responseAfter'] != null &&\n    typeof spec['responseAfter'] != 'number'\n  ) {\n    user().warn(\n      'ANALYTICS',\n      'resourceTimingSpec[\"responseAfter\"] must be a number'\n    );\n    return false;\n  }\n  return true;\n}\n\n/**\n * Gets all resource timing entries from the given window.\n * @param {!Window} win\n * @return {!Array<!PerformanceResourceTiming>}\n */\nfunction getResourceTimingEntries(win) {\n  return /** @type {!Array<!PerformanceResourceTiming>} */ (win.performance.getEntriesByType(\n    'resource'\n  ));\n}\n\n/**\n * Converts a resource timing entry to the variables for this resource.\n * @param {!PerformanceResourceTiming} entry\n * @param {string} name Name of the resource set by the resourceTimingSpec.\n * @param {function(number, number=): string} format A function to format\n *    timestamps and intervals. (Two numbers will be passed in for intervals.)\n * @return {!ExpansionOptions}\n */\nfunction entryToExpansionOptions(entry, name, format) {\n  const vars = {\n    // ${key} is the name of the resource from the resourceTimingSpec. i.e. it's\n    // the key of the object that specifies the host and path patterns that this\n    // resource matched against.\n    'key': name,\n    'startTime': format(entry.startTime),\n    'redirectTime': format(entry.redirectEnd, entry.redirectStart),\n    'domainLookupTime': format(entry.domainLookupEnd, entry.domainLookupStart),\n    'tcpConnectTime': format(entry.connectEnd, entry.connectStart),\n    'serverResponseTime': format(entry.responseStart, entry.requestStart),\n    'networkTransferTime': format(entry.responseEnd, entry.responseStart),\n    'transferSize': format(entry.transferSize || 0),\n    'encodedBodySize': format(entry.encodedBodySize || 0),\n    'decodedBodySize': format(entry.decodedBodySize || 0),\n    'duration': format(entry.duration),\n    'initiatorType': entry.initiatorType,\n  };\n  return new ExpansionOptions(vars, 1 /* opt_iterations */);\n}\n\n/**\n * Returns the variables for the given resource timing entry if it matches one\n * of the defined resources, or null otherwise.\n * @param {!PerformanceResourceTiming} entry\n * @param {!Array<!ResourceSpecForHostDef>} resourcesByHost An array of resource\n *     specs to match against.\n * @return {?string} The name of the entry, or null if no matching name exists.\n */\nfunction nameForEntry(entry, resourcesByHost) {\n  const url = parseUrlDeprecated(entry.name);\n  for (let i = 0; i < resourcesByHost.length; ++i) {\n    const {hostPattern, resources} = resourcesByHost[i];\n    if (!hostPattern.test(url.host)) {\n      continue;\n    }\n    const index = findIndex(\n      resources,\n      res =>\n        res.pathPattern.test(url.pathname) && res.queryPattern.test(url.search)\n    );\n    if (index != -1) {\n      return resources[index].name;\n    }\n  }\n  return null; // No match.\n}\n\n/**\n * Groups all resource specs (which are defined in terms of {host, path, query}\n * patterns) by host pattern. This is used downstream to avoid running RegExps\n * for host patterns multiple times because we expect multiple resources to\n * use the same host pattern.\n * @param {!Object<string, !IndividualResourceSpecDef>} resourceDefs A map of\n *     names to the resource spec for that name.\n * @return {!Array<!ResourceSpecForHostDef>}\n */\nfunction groupSpecsByHost(resourceDefs) {\n  const byHost = {};\n  for (const name in resourceDefs) {\n    const host = resourceDefs[name]['host'] || '';\n    const path = resourceDefs[name]['path'] || '';\n    const query = resourceDefs[name]['query'] || '';\n    const pattern = {\n      name,\n      pathPattern: new RegExp(path),\n      queryPattern: new RegExp(query),\n    };\n    if (byHost[host]) {\n      byHost[host].resources.push(pattern);\n    } else {\n      byHost[host] = {\n        hostPattern: new RegExp(host),\n        resources: [pattern],\n      };\n    }\n  }\n  const byHostArray = [];\n  for (const host in byHost) {\n    byHostArray.push(byHost[host]);\n  }\n  return byHostArray;\n}\n\n/**\n * Filters out resource timing entries that don't have a name defined in\n * resourceDefs. It returns a new array where each element contains a\n * resource timing entry and the corresponding name.\n * @param {!Array<!PerformanceResourceTiming>} entries\n * @param {!Object<string, !IndividualResourceSpecDef>} resourceDefs\n * @return {!Array<{entry: !PerformanceResourceTiming, name: string}>}\n */\nfunction filterEntries(entries, resourceDefs) {\n  // Group resource timing definitions by host since we expect multiple\n  // definitions to have the same host.\n  const byHost = groupSpecsByHost(resourceDefs);\n  const results = [];\n  entries.forEach(entry => {\n    const name = nameForEntry(entry, byHost);\n    if (name) {\n      results.push({entry, name});\n    }\n  });\n  return results;\n}\n\n/**\n * Serializes resource timing entries that match the resourceTimingSpec into a\n * single string.\n * @param {!Array<!PerformanceResourceTiming>} entries\n * @param {!JsonObject} resourceTimingSpec\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @return {!Promise<string>}\n */\nfunction serialize(entries, resourceTimingSpec, ampdoc) {\n  const resources = resourceTimingSpec['resources'];\n  const encoding = resourceTimingSpec['encoding'];\n\n  const variableService = variableServiceForDoc(ampdoc);\n  const format = (val, relativeTo = 0) =>\n    Math.round(val - relativeTo).toString(encoding['base'] || 10);\n\n  const promises = filterEntries(entries, resources)\n    .map(({entry, name}) => entryToExpansionOptions(entry, name, format))\n    .map(expansion =>\n      variableService.expandTemplate(encoding['entry'], expansion)\n    );\n  return Promise.all(promises).then(vars => vars.join(encoding['delim']));\n}\n\n/**\n * Serializes resource timing entries according to the resource timing spec.\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @param {!JsonObject} resourceTimingSpec\n * @return {!Promise<string>}\n */\nfunction serializeResourceTiming(ampdoc, resourceTimingSpec) {\n  const {win} = ampdoc;\n  // Check that the performance timing API exists before and that the spec is\n  // valid before proceeding. If not, we simply return an empty string.\n  if (\n    resourceTimingSpec['done'] ||\n    !win.performance ||\n    !win.performance.now ||\n    !win.performance.getEntriesByType ||\n    !validateResourceTimingSpec(resourceTimingSpec)\n  ) {\n    resourceTimingSpec['done'] = true;\n    return Promise.resolve('');\n  }\n  let entries = getResourceTimingEntries(win);\n  if (entries.length >= RESOURCE_TIMING_BUFFER_SIZE) {\n    // We've exceeded the maximum buffer size so no additional metrics will be\n    // reported for this resourceTimingSpec.\n    resourceTimingSpec['done'] = true;\n  }\n\n  const responseAfter = resourceTimingSpec['responseAfter'] || 0;\n  // Update responseAfter for next time to avoid reporting the same resource\n  // multiple times.\n  resourceTimingSpec['responseAfter'] = Math.max(\n    responseAfter,\n    win.performance.now()\n  );\n\n  // Filter resources that are too early.\n  entries = entries.filter(e => e.startTime + e.duration >= responseAfter);\n  if (!entries.length) {\n    return Promise.resolve('');\n  }\n  // Yield the thread in case iterating over all resources takes a long time.\n  return yieldThread(() => serialize(entries, resourceTimingSpec, ampdoc));\n}\n\n/**\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @param {!JsonObject|undefined} spec resource timing spec.\n * @param {number} startTime start timestamp.\n * @return {!Promise<string>}\n */\nexport function getResourceTiming(ampdoc, spec, startTime) {\n  // Only allow collecting timing within 1s\n  if (spec && Date.now() < startTime + 60 * 1000) {\n    return serializeResourceTiming(ampdoc, spec);\n  } else {\n    return Promise.resolve('');\n  }\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Used for inserted scoped analytics element.\n * @const {!Object<string, boolean>}\n */\nexport const SANDBOX_AVAILABLE_VARS = {\n  'RANDOM': true,\n  'CANONICAL_URL': true,\n  'CANONICAL_HOST': true,\n  'CANONICAL_HOSTNAME': true,\n  'CANONICAL_PATH': true,\n  'AMPDOC_URL': true,\n  'AMPDOC_HOST': true,\n  'AMPDOC_HOSTNAME': true,\n  'SOURCE_URL': true,\n  'SOURCE_HOST': true,\n  'SOURCE_HOSTNAME': true,\n  'SOURCE_PATH': true,\n  'TIMESTAMP': true,\n  'TIMEZONE': true,\n  'TIMEZONE_CODE': true,\n  'VIEWPORT_HEIGHT': true,\n  'VIEWPORT_WIDTH': true,\n  'SCREEN_WIDTH': true,\n  'SCREEN_HEIGHT': true,\n  'AVAILABLE_SCREEN_HEIGHT': true,\n  'AVAILABLE_SCREEN_WIDTH': true,\n  'SCREEN_COLOR_DEPTH': true,\n  'DOCUMENT_CHARSET': true,\n  'BROWSER_LANGUAGE': true,\n  'AMP_VERSION': true,\n  'BACKGROUND_STATE': true,\n  'USER_AGENT': true,\n  'FIRST_CONTENTFUL_PAINT': true,\n  'FIRST_VIEWPORT_READY': true,\n  'MAKE_BODY_VISIBLE': true,\n};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Observable} from '../../../src/observable';\nimport {Services} from '../../../src/services';\n\n/**\n * @typedef {{\n *   top: number,\n *   left: number,\n *   width: number,\n *   height: number,\n *   scrollHeight: number,\n *   scrollWidth: number,\n * }}\n */\nexport let ScrollEventDef;\n\n/**\n * A manager for handling multiple Scroll Event Trackers.\n * The instance of this class corresponds 1:1 to `AnalyticsRoot`. It represents\n * a collection of all scroll triggers declared within the `AnalyticsRoot`.\n * @implements {../../../src/service.Disposable}\n */\nexport class ScrollManager {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @const @private {!../../../src/service/viewport/viewport-interface.ViewportInterface} */\n    this.viewport_ = Services.viewportForDoc(ampdoc);\n\n    /** @private {!UnlistenDef|null} */\n    this.viewportOnChangedUnlistener_ = null;\n\n    /** @private {!Observable<!./scroll-manager.ScrollEventDef>} */\n    this.scrollObservable_ = new Observable();\n  }\n\n  /**\n   * Function to dispose of all handlers on the scroll observable\n   */\n  dispose() {\n    this.scrollObservable_.removeAll();\n    this.removeViewportOnChangedListener_();\n  }\n\n  /**\n   * @param {function(!Object)} handler\n   */\n  removeScrollHandler(handler) {\n    this.scrollObservable_.remove(handler);\n\n    if (this.scrollObservable_.getHandlerCount() <= 0) {\n      this.removeViewportOnChangedListener_();\n    }\n  }\n\n  /**\n   * @param {function(!Object)} handler\n   * @return {!UnlistenDef}\n   */\n  addScrollHandler(handler) {\n    // Trigger an event to fire events that might have already happened.\n    const size = this.viewport_.getSize();\n    /** {./scroll-manager.ScrollEventDef} */\n    const scrollEvent = {\n      top: this.viewport_.getScrollTop(),\n      left: this.viewport_.getScrollLeft(),\n      width: size.width,\n      height: size.height,\n      scrollWidth: this.viewport_.getScrollWidth(),\n      scrollHeight: this.viewport_.getScrollHeight(),\n    };\n    handler(scrollEvent);\n\n    if (this.scrollObservable_.getHandlerCount() === 0) {\n      this.addViewportOnChangedListener_();\n    }\n\n    return this.scrollObservable_.add(handler);\n  }\n\n  /**\n   * @param {!../../../src/service/viewport/viewport-interface.ViewportChangedEventDef} e\n   * @private\n   */\n  onScroll_(e) {\n    /** {./scroll-manager.ScrollEventDef} */\n    const scrollEvent = {\n      top: e.top,\n      left: e.left,\n      width: e.width,\n      height: e.height,\n      scrollWidth: this.viewport_.getScrollWidth(),\n      scrollHeight: this.viewport_.getScrollHeight(),\n    };\n    // Fire all of our children scroll observables\n    this.scrollObservable_.fire(scrollEvent);\n  }\n\n  /**\n   * Function to remove the viewport onChanged listener\n   * @private\n   */\n  removeViewportOnChangedListener_() {\n    if (this.viewportOnChangedUnlistener_) {\n      this.viewportOnChangedUnlistener_();\n      this.viewportOnChangedUnlistener_ = null;\n    }\n  }\n\n  /**\n   * Function to add the viewport onChanged listener\n   * @private\n   */\n  addViewportOnChangedListener_() {\n    this.viewportOnChangedUnlistener_ = this.viewport_.onChanged(\n      this.onScroll_.bind(this)\n    );\n  }\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  appendEncodedParamStringToUrl,\n  serializeQueryString,\n} from '../../../src/url';\n\nconst EXTRA_URL_PARAM_VAR = '${extraUrlParams}';\n\n/**\n * @typedef {{\n *   trigger: (string|undefined),\n *   timestamp: (number|undefined),\n *   extraUrlParams: (!JsonObject|undefined)\n * }}\n */\nexport let BatchSegmentDef;\n\n/**\n * @typedef {{\n *   url: string,\n *   payload: (string|undefined),\n * }}\n */\nexport let RequestDef;\n\n/**\n * The interface for all TransportSerializer to implement.\n * @interface\n */\nexport class TransportSerializerDef {\n  /**\n   * @param {string} unusedBaseUrl\n   * @param {!BatchSegmentDef} unusedSegment\n   * @param {boolean} unusedWithPayload\n   * @return {!RequestDef}\n   */\n  generateRequest(unusedBaseUrl, unusedSegment, unusedWithPayload) {}\n\n  /**\n   * @param {string} unusedBaseUrl\n   * @param {!Array<!BatchSegmentDef>} unusedSegments\n   * @param {boolean} unusedWithPayload\n   * @return {!RequestDef}\n   */\n  generateBatchRequest(unusedBaseUrl, unusedSegments, unusedWithPayload) {}\n}\n\n/**\n * The default serializer.\n *\n * @implements {TransportSerializerDef}\n */\nclass DefaultTransportSerializer {\n  /** @override */\n  generateRequest(baseUrl, segment, withPayload = false) {\n    if (withPayload) {\n      return {\n        url: baseUrl.replace(EXTRA_URL_PARAM_VAR, ''),\n        payload: JSON.stringify(segment['extraUrlParams']),\n      };\n    }\n    return {\n      url: defaultSerializer(baseUrl, [segment]),\n    };\n  }\n\n  /** @override */\n  generateBatchRequest(baseUrl, segments, withPayload = false) {\n    if (withPayload) {\n      return {\n        url: baseUrl.replace(EXTRA_URL_PARAM_VAR, ''),\n        payload: JSON.stringify(\n          segments.map(segment => segment['extraUrlParams'])\n        ),\n      };\n    }\n    return {\n      url: defaultSerializer(baseUrl, segments),\n    };\n  }\n}\n\n/**\n * Please register your serializer below.\n * Please keep the object in alphabetic order.\n *\n * @const {Object<string, TransportSerializerDef>}\n */\nexport const TransportSerializers = {\n  'default': new DefaultTransportSerializer(),\n};\n\n/**\n * The default way for merging batch segments\n *\n * @param {string} baseUrl\n * @param {!Array<!BatchSegmentDef>} batchSegments\n * @return {string}\n */\nexport function defaultSerializer(baseUrl, batchSegments) {\n  const extraUrlParamsStr = batchSegments\n    .map(item => serializeQueryString(item['extraUrlParams']))\n    .filter(queryString => !!queryString)\n    .join('&');\n  let requestUrl;\n  if (baseUrl.indexOf(EXTRA_URL_PARAM_VAR) >= 0) {\n    requestUrl = baseUrl.replace(EXTRA_URL_PARAM_VAR, extraUrlParamsStr);\n  } else {\n    requestUrl = appendEncodedParamStringToUrl(baseUrl, extraUrlParamsStr);\n  }\n  return requestUrl;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BatchSegmentDef,\n  RequestDef,\n  TransportSerializerDef,\n  TransportSerializers,\n  defaultSerializer,\n} from './transport-serializer';\nimport {IframeTransport, getIframeTransportScriptUrl} from './iframe-transport';\nimport {Services} from '../../../src/services';\nimport {WindowInterface} from '../../../src/window-interface';\nimport {\n  assertHttpsUrl,\n  checkCorsUrl,\n  parseUrlDeprecated,\n} from '../../../src/url';\nimport {createPixel} from '../../../src/pixel';\nimport {dev, user, userAssert} from '../../../src/log';\nimport {getAmpAdResourceId} from '../../../src/ad-helper';\nimport {getMode} from '../../../src/mode';\nimport {getTopWindow} from '../../../src/service';\nimport {loadPromise} from '../../../src/event-helper';\nimport {removeElement} from '../../../src/dom';\nimport {toggle} from '../../../src/style';\n\n/** @const {string} */\nconst TAG_ = 'amp-analytics/transport';\n\n/**\n * Transport defines the ways how the analytics pings are going to be sent.\n */\nexport class Transport {\n  /**\n   * @param {!Window} win\n   * @param {!JsonObject} options\n   */\n  constructor(win, options = /** @type {!JsonObject} */ ({})) {\n    /** @private {!Window} */\n    this.win_ = win;\n\n    /** @private {!JsonObject} */\n    this.options_ = options;\n\n    /** @private {string|undefined} */\n    this.referrerPolicy_ = /** @type {string|undefined} */ (this.options_[\n      'referrerPolicy'\n    ]);\n\n    // no-referrer is only supported in image transport\n    if (this.referrerPolicy_ === 'no-referrer') {\n      this.options_['beacon'] = false;\n      this.options_['xhrpost'] = false;\n    }\n\n    /** @private {boolean} */\n    this.useBody_ = !!this.options_['useBody'];\n\n    /** @private {?IframeTransport} */\n    this.iframeTransport_ = null;\n\n    /** @private {boolean} */\n    this.isInabox_ = getMode(win).runtime == 'inabox';\n  }\n\n  /**\n   * @param {string} url\n   * @param {!Array<!BatchSegmentDef>} segments\n   * @param {boolean} inBatch\n   */\n  sendRequest(url, segments, inBatch) {\n    if (!url || segments.length === 0) {\n      dev().info(TAG_, 'Empty request not sent: ', url);\n      return;\n    }\n    const serializer = this.getSerializer_();\n    /**\n     * @param {boolean} withPayload\n     * @return {!RequestDef}\n     */\n    function generateRequest(withPayload) {\n      const request = inBatch\n        ? serializer.generateBatchRequest(url, segments, withPayload)\n        : serializer.generateRequest(url, segments[0], withPayload);\n      assertHttpsUrl(request.url, 'amp-analytics request');\n      checkCorsUrl(request.url);\n      return request;\n    }\n\n    const getRequest = cacheFuncResult(generateRequest);\n\n    if (this.options_['iframe']) {\n      if (!this.iframeTransport_) {\n        dev().error(TAG_, 'iframe transport was inadvertently deleted');\n        return;\n      }\n      this.iframeTransport_.sendRequest(getRequest(false).url);\n      return;\n    }\n\n    if (\n      this.options_['beacon'] &&\n      Transport.sendRequestUsingBeacon(this.win_, getRequest(this.useBody_))\n    ) {\n      return;\n    }\n    if (\n      this.options_['xhrpost'] &&\n      Transport.sendRequestUsingXhr(this.win_, getRequest(this.useBody_))\n    ) {\n      return;\n    }\n    const image = this.options_['image'];\n    if (image) {\n      const suppressWarnings =\n        typeof image == 'object' && image['suppressWarnings'];\n      Transport.sendRequestUsingImage(\n        this.win_,\n        getRequest(false),\n        suppressWarnings,\n        /** @type {string|undefined} */ (this.referrerPolicy_)\n      );\n      return;\n    }\n    user().warn(TAG_, 'Failed to send request', url, this.options_);\n  }\n\n  /**\n   * amp-analytics will create an iframe for vendors in\n   * extensions/amp-analytics/0.1/vendors.js who have transport/iframe defined.\n   * This is limited to MRC-accreddited vendors. The frame is removed if the\n   * user navigates/swipes away from the page, and is recreated if the user\n   * navigates back to the page.\n   *\n   * @param {!Window} win\n   * @param {!Element} element\n   * @param {(!../../../src/preconnect.Preconnect)=} opt_preconnect\n   */\n  maybeInitIframeTransport(win, element, opt_preconnect) {\n    if (!this.options_['iframe'] || this.iframeTransport_) {\n      return;\n    }\n    if (opt_preconnect) {\n      opt_preconnect.preload(getIframeTransportScriptUrl(win), 'script');\n    }\n\n    const type = element.getAttribute('type');\n    // In inabox there is no amp-ad element.\n    const ampAdResourceId = this.isInabox_\n      ? '1'\n      : user().assertString(\n          getAmpAdResourceId(element, getTopWindow(win)),\n          'No friendly amp-ad ancestor element was found ' +\n            'for amp-analytics tag with iframe transport.'\n        );\n\n    this.iframeTransport_ = new IframeTransport(\n      win,\n      type,\n      this.options_,\n      ampAdResourceId\n    );\n  }\n\n  /**\n   * Deletes iframe transport.\n   */\n  deleteIframeTransport() {\n    if (this.iframeTransport_) {\n      this.iframeTransport_.detach();\n      this.iframeTransport_ = null;\n    }\n  }\n\n  /**\n   * Sends a ping request using an iframe, that is removed 5 seconds after\n   * it is loaded.\n   * This is not available as a standard transport, but rather used for\n   * specific, whitelisted requests.\n   * Note that this is unrelated to the iframeTransport\n   *\n   * @param {string} url\n   * @param {!BatchSegmentDef} segment\n   */\n  sendRequestUsingIframe(url, segment) {\n    const request = defaultSerializer(url, [segment]);\n    if (!request) {\n      user().error(TAG_, 'Request not sent. Contents empty.');\n      return;\n    }\n\n    assertHttpsUrl(request, 'amp-analytics request');\n    userAssert(\n      parseUrlDeprecated(request).origin !=\n        parseUrlDeprecated(this.win_.location.href).origin,\n      'Origin of iframe request must not be equal to the document origin.' +\n        ' See https://github.com/ampproject/' +\n        'amphtml/blob/master/spec/amp-iframe-origin-policy.md for details.'\n    );\n\n    /** @const {!Element} */\n    const iframe = this.win_.document.createElement('iframe');\n    toggle(iframe, false);\n    iframe.onload = iframe.onerror = () => {\n      Services.timerFor(this.win_).delay(() => {\n        removeElement(iframe);\n      }, 5000);\n    };\n\n    iframe.setAttribute('amp-analytics', '');\n    iframe.setAttribute('sandbox', 'allow-scripts allow-same-origin');\n    iframe.src = request;\n    this.win_.document.body.appendChild(iframe);\n  }\n\n  /**\n   * @return {!TransportSerializerDef}\n   */\n  getSerializer_() {\n    return /** @type {!TransportSerializerDef} */ (TransportSerializers[\n      'default'\n    ]);\n  }\n\n  /**\n   * @param {!Window} win\n   * @param {!RequestDef} request\n   * @param {boolean} suppressWarnings\n   * @param {string|undefined} referrerPolicy\n   */\n  static sendRequestUsingImage(win, request, suppressWarnings, referrerPolicy) {\n    const image = createPixel(win, request.url, referrerPolicy);\n    loadPromise(image)\n      .then(() => {\n        dev().fine(TAG_, 'Sent image request', request.url);\n      })\n      .catch(() => {\n        if (!suppressWarnings) {\n          user().warn(\n            TAG_,\n            'Response unparseable or failed to send image request',\n            request.url\n          );\n        }\n      });\n  }\n\n  /**\n   * @param {!Window} win\n   * @param {!RequestDef} request\n   * @return {boolean} True if this browser supports navigator.sendBeacon.\n   */\n  static sendRequestUsingBeacon(win, request) {\n    const sendBeacon = WindowInterface.getSendBeacon(win);\n    if (!sendBeacon) {\n      return false;\n    }\n    const result = sendBeacon(request.url, request.payload || '');\n    if (result) {\n      dev().fine(TAG_, 'Sent beacon request', request);\n    }\n    return result;\n  }\n\n  /**\n   * @param {!Window} win\n   * @param {!RequestDef} request\n   * @return {boolean} True if this browser supports cross-domain XHR.\n   */\n  static sendRequestUsingXhr(win, request) {\n    const XMLHttpRequest = WindowInterface.getXMLHttpRequest(win);\n    if (!XMLHttpRequest) {\n      return false;\n    }\n    const xhr = new XMLHttpRequest();\n    if (!('withCredentials' in xhr)) {\n      return false; // Looks like XHR level 1 - CORS is not supported.\n    }\n    xhr.open('POST', request.url, true);\n    xhr.withCredentials = true;\n\n    // Prevent pre-flight HEAD request.\n    xhr.setRequestHeader('Content-Type', 'text/plain');\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState == 4) {\n        dev().fine(TAG_, 'Sent XHR request', request.url);\n      }\n    };\n\n    xhr.send(request.payload || '');\n    return true;\n  }\n}\n\n/**\n * A helper method that wraps a function and cache its return value.\n *\n * @param {!Function} func the function to cache\n * @return {!Function}\n */\nfunction cacheFuncResult(func) {\n  const cachedValue = {};\n  return arg => {\n    const key = String(arg);\n    if (cachedValue[key] === undefined) {\n      cachedValue[key] = func(arg);\n    }\n    return cachedValue[key];\n  };\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../../../src/services';\nimport {base64UrlEncodeFromString} from '../../../src/utils/base64';\nimport {cookieReader} from './cookie-reader';\nimport {dev, devAssert, user, userAssert} from '../../../src/log';\nimport {dict} from '../../../src/utils/object';\nimport {getConsentPolicyState} from '../../../src/consent';\nimport {\n  getServiceForDoc,\n  getServicePromiseForDoc,\n  registerServiceBuilderForDoc,\n} from '../../../src/service';\nimport {isArray, isFiniteNumber} from '../../../src/types';\nimport {linkerReaderServiceFor} from './linker-reader';\nimport {tryResolve} from '../../../src/utils/promise';\n\n/** @const {string} */\nconst TAG = 'amp-analytics/variables';\n\n/** @const {RegExp} */\nconst VARIABLE_ARGS_REGEXP = /^(?:([^\\s]*)(\\([^)]*\\))|[^]+)$/;\n\nconst EXTERNAL_CONSENT_POLICY_STATE_STRING = {\n  1: 'sufficient',\n  2: 'insufficient',\n  3: 'not_required',\n  4: 'unknown',\n};\n\n/** @typedef {{name: string, argList: string}} */\nlet FunctionNameArgsDef;\n\n/**\n * The structure that contains all details needed to expand a template\n * @struct\n * @const\n * @package For type.\n */\nexport class ExpansionOptions {\n  /**\n   * @param {!Object<string, *>} vars\n   * @param {number=} opt_iterations\n   * @param {boolean=} opt_noEncode\n   */\n  constructor(vars, opt_iterations, opt_noEncode) {\n    /** @const {!Object<string, string|Array<string>>} */\n    this.vars = vars;\n    /** @const {number} */\n    this.iterations = opt_iterations === undefined ? 2 : opt_iterations;\n    /** @const {boolean} */\n    this.noEncode = !!opt_noEncode;\n    this.freezeVars = {};\n  }\n\n  /**\n   * Freeze special variable name so that they don't get expanded.\n   * For example ${extraUrlParams}\n   * @param {string} str\n   */\n  freezeVar(str) {\n    this.freezeVars[str] = true;\n  }\n\n  /**\n   * @param {string} name\n   * @return {*}\n   */\n  getVar(name) {\n    let value = this.vars[name];\n    if (value == null) {\n      value = '';\n    }\n    return value;\n  }\n}\n\n/**\n * @param {string} value\n * @param {string} s\n * @param {string=} opt_l\n * @return {string}\n */\nfunction substrMacro(value, s, opt_l) {\n  const start = Number(s);\n  let {length} = value;\n  userAssert(\n    isFiniteNumber(start),\n    'Start index ' + start + 'in substr macro should be a number'\n  );\n  if (opt_l) {\n    length = Number(opt_l);\n    userAssert(\n      isFiniteNumber(length),\n      'Length ' + length + ' in substr macro should be a number'\n    );\n  }\n\n  return value.substr(start, length);\n}\n\n/**\n * @param {string} value\n * @param {string} defaultValue\n * @return {string}\n */\nfunction defaultMacro(value, defaultValue) {\n  if (!value || !value.length) {\n    return defaultValue;\n  }\n  return value;\n}\n\n/**\n * @param {string} string input to be replaced\n * @param {string} matchPattern string representation of regex pattern\n * @param {string=} opt_newSubStr pattern to be substituted in\n * @return {string}\n */\nfunction replaceMacro(string, matchPattern, opt_newSubStr) {\n  if (!matchPattern) {\n    user().warn(TAG, 'REPLACE macro must have two or more arguments');\n  }\n  if (!opt_newSubStr) {\n    opt_newSubStr = '';\n  }\n  const regex = new RegExp(matchPattern, 'g');\n  return string.replace(regex, opt_newSubStr);\n}\n\n/**\n * Applies the match function to the given string with the given regex\n * @param {string} string input to be replaced\n * @param {string} matchPattern string representation of regex pattern\n * @param {string=} opt_matchingGroupIndexStr the matching group to return.\n *                  Index of 0 indicates the full match. Defaults to 0\n * @return {string} returns the matching group given by opt_matchingGroupIndexStr\n */\nfunction matchMacro(string, matchPattern, opt_matchingGroupIndexStr) {\n  if (!matchPattern) {\n    user().warn(TAG, 'MATCH macro must have two or more arguments');\n  }\n\n  let index = 0;\n  if (opt_matchingGroupIndexStr) {\n    index = parseInt(opt_matchingGroupIndexStr, 10);\n\n    // if given a non-number or negative number\n    if ((index != 0 && !index) || index < 0) {\n      user().error(TAG, 'Third argument in MATCH macro must be a number >= 0');\n      index = 0;\n    }\n  }\n\n  const regex = new RegExp(matchPattern);\n  const matches = string.match(regex);\n  return matches && matches[index] ? matches[index] : '';\n}\n\n/**\n * Provides support for processing of advanced variable syntax like nested\n * expansions macros etc.\n */\nexport class VariableService {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @private {!../../../src/service/ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n\n    /** @private {!JsonObject} */\n    this.macros_ = dict({});\n\n    /** @const @private {!./linker-reader.LinkerReader} */\n    this.linkerReader_ = linkerReaderServiceFor(this.ampdoc_.win);\n\n    this.register_('$DEFAULT', defaultMacro);\n    this.register_('$SUBSTR', substrMacro);\n    this.register_('$TRIM', value => value.trim());\n    this.register_('$TOLOWERCASE', value => value.toLowerCase());\n    this.register_('$TOUPPERCASE', value => value.toUpperCase());\n    this.register_('$NOT', value => String(!value));\n    this.register_('$BASE64', value => base64UrlEncodeFromString(value));\n    this.register_('$HASH', this.hashMacro_.bind(this));\n    this.register_('$IF', (value, thenValue, elseValue) =>\n      stringToBool(value) ? thenValue : elseValue\n    );\n    this.register_('$REPLACE', replaceMacro);\n    this.register_('$MATCH', matchMacro);\n    this.register_(\n      '$EQUALS',\n      (firstValue, secValue) => firstValue === secValue\n    );\n    // TODO(ccordry): Make sure this stays a window level service when this\n    // VariableService is migrated to document level.\n    this.register_('LINKER_PARAM', (name, id) =>\n      this.linkerReader_.get(name, id)\n    );\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {!JsonObject} contains all registered macros\n   */\n  getMacros(element) {\n    const elementMacros = {\n      'COOKIE': name =>\n        cookieReader(this.ampdoc_.win, dev().assertElement(element), name),\n      'CONSENT_STATE': getConsentStateStr(element),\n    };\n    const merged = Object.assign({}, this.macros_, elementMacros);\n    return /** @type {!JsonObject} */ (merged);\n  }\n\n  /**\n   * @param {string} name\n   * @param {*} macro\n   */\n  register_(name, macro) {\n    devAssert(!this.macros_[name], 'Macro \"' + name + '\" already registered.');\n    this.macros_[name] = macro;\n  }\n\n  /**\n   * @param {string} template The template to expand\n   * @param {!ExpansionOptions} options configuration to use for expansion\n   * @return {!Promise<string>} The expanded string\n   */\n  expandTemplate(template, options) {\n    return tryResolve(this.expandTemplateSync.bind(this, template, options));\n  }\n\n  /**\n   * @param {string} template The template to expand\n   * @param {!ExpansionOptions} options configuration to use for expansion\n   * @return {string} The expanded string\n   * @visibleForTesting\n   */\n  expandTemplateSync(template, options) {\n    return template.replace(/\\${([^}]*)}/g, (match, key) => {\n      if (options.iterations < 0) {\n        user().error(\n          TAG,\n          'Maximum depth reached while expanding variables. ' +\n            'Please ensure that the variables are not recursive.'\n        );\n        return match;\n      }\n\n      if (!key) {\n        return '';\n      }\n\n      // Split the key to name and args\n      // e.g.: name='SOME_MACRO', args='(arg1, arg2)'\n      const {name, argList} = getNameArgs(key);\n      if (options.freezeVars[name]) {\n        // Do nothing with frozen params\n        return match;\n      }\n\n      let value = options.getVar(name);\n\n      if (typeof value == 'string') {\n        value = this.expandTemplateSync(\n          value,\n          new ExpansionOptions(\n            options.vars,\n            options.iterations - 1,\n            true /* noEncode */\n          )\n        );\n      }\n\n      if (!options.noEncode) {\n        value = encodeVars(/** @type {string|?Array<string>} */ (value));\n      }\n      if (value) {\n        value += argList;\n      }\n      return value;\n    });\n  }\n\n  /**\n   * @param {string} value\n   * @return {!Promise<string>}\n   */\n  hashMacro_(value) {\n    return Services.cryptoFor(this.ampdoc_.win).sha384Base64(value);\n  }\n}\n\n/**\n * @param {string|?Array<string>} raw The values to URI encode.\n * @return {string} The encoded value.\n */\nexport function encodeVars(raw) {\n  if (raw == null) {\n    return '';\n  }\n\n  if (isArray(raw)) {\n    return raw.map(encodeVars).join(',');\n  }\n  // Separate out names and arguments from the value and encode the value.\n  const {name, argList} = getNameArgs(String(raw));\n  return encodeURIComponent(name) + argList;\n}\n\n/**\n * Returns an array containing two values: name and args parsed from the key.\n *\n * case 1) 'SOME_MACRO(abc,def)' => name='SOME_MACRO', argList='(abc,def)'\n * case 2) 'randomString' => name='randomString', argList=''\n * @param {string} key The key to be parsed.\n * @return {!FunctionNameArgsDef}\n */\nexport function getNameArgs(key) {\n  if (!key) {\n    return {name: '', argList: ''};\n  }\n  const match = key.match(VARIABLE_ARGS_REGEXP);\n  userAssert(match, 'Variable with invalid format found: ' + key);\n\n  return {name: match[1] || match[0], argList: match[2] || ''};\n}\n\n/**\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installVariableServiceForTesting(ampdoc) {\n  registerServiceBuilderForDoc(\n    ampdoc,\n    'amp-analytics-variables',\n    VariableService\n  );\n}\n\n/**\n * @param {!Element|!ShadowRoot|!../../../src/service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!VariableService}\n */\nexport function variableServiceForDoc(elementOrAmpDoc) {\n  return getServiceForDoc(elementOrAmpDoc, 'amp-analytics-variables');\n}\n\n/**\n * @param {!Element|!ShadowRoot|!../../../src/service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!Promise<!VariableService>}\n */\nexport function variableServicePromiseForDoc(elementOrAmpDoc) {\n  return /** @type {!Promise<!VariableService>} */ (getServicePromiseForDoc(\n    elementOrAmpDoc,\n    'amp-analytics-variables'\n  ));\n}\n\n/**\n * @param {string} key\n * @return {{name, argList}|!FunctionNameArgsDef}\n * @visibleForTesting\n */\nexport function getNameArgsForTesting(key) {\n  return getNameArgs(key);\n}\n\n/**\n * Get the resolved consent state value to send with analytics request\n * @param {!Element} element\n * @return {!Promise<?string>}\n */\nfunction getConsentStateStr(element) {\n  return getConsentPolicyState(element).then(consent => {\n    if (!consent) {\n      return null;\n    }\n    return EXTERNAL_CONSENT_POLICY_STATE_STRING[consent];\n  });\n}\n\n/**\n * Converts string to boolean\n * @param {string} str\n * @return {boolean}\n */\nexport function stringToBool(str) {\n  return (\n    str !== 'false' &&\n    str !== '' &&\n    str !== '0' &&\n    str !== 'null' &&\n    str !== 'NaN' &&\n    str !== 'undefined'\n  );\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  IFRAME_TRANSPORTS,\n  IFRAME_TRANSPORTS_CANARY,\n} from './iframe-transport-vendors';\nimport {getMode} from '../../../src/mode';\nimport {hasOwn} from '../../../src/utils/object';\nimport {\n  includeJsonLiteral,\n  jsonConfiguration,\n  jsonLiteral,\n} from '../../../src/json';\nimport {isCanary} from '../../../src/experiments';\n\nimport {ACQUIALIFT_CONFIG} from './vendors/acquialift';\nimport {ADOBEANALYTICS_CONFIG} from './vendors/adobeanalytics';\nimport {ADOBEANALYTICS_NATIVECONFIG_CONFIG} from './vendors/adobeanalytics_nativeConfig';\nimport {AFSANALYTICS_CONFIG} from './vendors/afsanalytics';\nimport {ALEXAMETRICS_CONFIG} from './vendors/alexametrics';\nimport {AMPLITUDE_CONFIG} from './vendors/amplitude';\nimport {ATINTERNET_CONFIG} from './vendors/atinternet';\nimport {BAIDUANALYTICS_CONFIG} from './vendors/baiduanalytics';\nimport {BG_CONFIG} from './vendors/bg';\nimport {BURT_CONFIG} from './vendors/burt';\nimport {BYSIDE_CONFIG} from './vendors/byside';\nimport {CHARTBEAT_CONFIG} from './vendors/chartbeat';\nimport {CLICKY_CONFIG} from './vendors/clicky';\nimport {COLANALYTICS_CONFIG} from './vendors/colanalytics';\nimport {COMSCORE_CONFIG} from './vendors/comscore';\nimport {CXENSE_CONFIG} from './vendors/cxense';\nimport {DYNATRACE_CONFIG} from './vendors/dynatrace';\nimport {EPICA_CONFIG} from './vendors/epica';\nimport {EULERIANANALYTICS_CONFIG} from './vendors/euleriananalytics';\nimport {FACEBOOKPIXEL_CONFIG} from './vendors/facebookpixel';\nimport {GEMIUS_CONFIG} from './vendors/gemius';\nimport {GOOGLEADWORDS_CONFIG} from './vendors/googleadwords';\nimport {GOOGLEANALYTICS_CONFIG} from './vendors/googleanalytics';\nimport {GTAG_CONFIG} from './vendors/gtag';\nimport {IBEATANALYTICS_CONFIG} from './vendors/ibeatanalytics';\nimport {INFONLINE_CONFIG} from './vendors/infonline';\nimport {IPLABEL_CONFIG} from './vendors/iplabel';\nimport {KEEN_CONFIG} from './vendors/keen';\nimport {KENSHOO_CONFIG} from './vendors/kenshoo';\nimport {KRUX_CONFIG} from './vendors/krux';\nimport {LINKPULSE_CONFIG} from './vendors/linkpulse';\nimport {LOTAME_CONFIG} from './vendors/lotame';\nimport {MARINSOFTWARE_CONFIG} from './vendors/marinsoftware';\nimport {MEDIAMETRIE_CONFIG} from './vendors/mediametrie';\nimport {MEDIARITHMICS_CONFIG} from './vendors/mediarithmics';\nimport {MEDIATOR_CONFIG} from './vendors/mediator';\nimport {METRIKA_CONFIG} from './vendors/metrika';\nimport {MOAT_CONFIG} from './vendors/moat';\nimport {MOBIFY_CONFIG} from './vendors/mobify';\nimport {MPARTICLE_CONFIG} from './vendors/mparticle';\nimport {MPULSE_CONFIG} from './vendors/mpulse';\nimport {NAVEGG_CONFIG} from './vendors/navegg';\nimport {NEWRELIC_CONFIG} from './vendors/newrelic';\nimport {NIELSEN_CONFIG} from './vendors/nielsen';\nimport {NIELSEN_MARKETING_CLOUD_CONFIG} from './vendors/nielsen-marketing-cloud';\nimport {OEWADIRECT_CONFIG} from './vendors/oewadirect';\nimport {OEWA_CONFIG} from './vendors/oewa';\nimport {ORACLEINFINITYANALYTICS_CONFIG} from './vendors/oracleInfinityAnalytics';\nimport {PARSELY_CONFIG} from './vendors/parsely';\nimport {PERMUTIVE_CONFIG} from './vendors/permutive';\nimport {PIANO_CONFIG} from './vendors/piano';\nimport {PINPOLL_CONFIG} from './vendors/pinpoll';\nimport {PISTATS_CONFIG} from './vendors/piStats';\nimport {PRESSBOARD_CONFIG} from './vendors/pressboard';\nimport {QUANTCAST_CONFIG} from './vendors/quantcast';\nimport {RAKAM_CONFIG} from './vendors/rakam';\nimport {REPPUBLIKA_CONFIG} from './vendors/reppublika';\nimport {RETARGETLY_CONFIG} from './vendors/retargetly';\nimport {SEGMENT_CONFIG} from './vendors/segment';\nimport {SHINYSTAT_CONFIG} from './vendors/shinystat';\nimport {SIMPLEREACH_CONFIG} from './vendors/simplereach';\nimport {SNOWPLOW_CONFIG} from './vendors/snowplow';\nimport {TEAANALYTICS_CONFIG} from './vendors/teaanalytics';\nimport {TEALIUMCOLLECT_CONFIG} from './vendors/tealiumcollect';\nimport {TOP100_CONFIG} from './vendors/top100';\nimport {TOPMAILRU_CONFIG} from './vendors/topmailru';\nimport {TREASUREDATA_CONFIG} from './vendors/treasuredata';\nimport {UMENGANALYTICS_CONFIG} from './vendors/umenganalytics';\nimport {UPSCORE_CONFIG} from './vendors/upscore';\nimport {VPONANALYTICS_CONFIG} from './vendors/vponanalytics';\nimport {WEBENGAGE_CONFIG} from './vendors/webengage';\nimport {WEBTREKK_CONFIG} from './vendors/webtrekk';\nimport {WEBTREKK_V2_CONFIG} from './vendors/webtrekk_v2';\nimport {_FAKE_} from './vendors/_fake_.js';\n\nconst DEFAULT_CONFIG = jsonLiteral({\n  'transport': {'beacon': true, 'xhrpost': true, 'image': true},\n  'vars': {\n    'accessReaderId': 'ACCESS_READER_ID',\n    'ampdocHost': 'AMPDOC_HOST',\n    'ampdocHostname': 'AMPDOC_HOSTNAME',\n    'ampdocUrl': 'AMPDOC_URL',\n    'ampGeo': 'AMP_GEO',\n    'ampUserLocation': 'AMP_USER_LOCATION',\n    'ampUserLocationPoll': 'AMP_USER_LOCATION_POLL',\n    'ampState': 'AMP_STATE',\n    'ampVersion': 'AMP_VERSION',\n    'ancestorOrigin': 'ANCESTOR_ORIGIN',\n    'authdata': 'AUTHDATA',\n    'availableScreenHeight': 'AVAILABLE_SCREEN_HEIGHT',\n    'availableScreenWidth': 'AVAILABLE_SCREEN_WIDTH',\n    'backgroundState': 'BACKGROUND_STATE',\n    'browserLanguage': 'BROWSER_LANGUAGE',\n    'canonicalHost': 'CANONICAL_HOST',\n    'canonicalHostname': 'CANONICAL_HOSTNAME',\n    'canonicalPath': 'CANONICAL_PATH',\n    'canonicalUrl': 'CANONICAL_URL',\n    'clientId': 'CLIENT_ID',\n    'consentState': 'CONSENT_STATE',\n    'contentLoadTime': 'CONTENT_LOAD_TIME',\n    'cookie': 'COOKIE',\n    'counter': 'COUNTER',\n    'documentCharset': 'DOCUMENT_CHARSET',\n    'documentReferrer': 'DOCUMENT_REFERRER',\n    'domainLookupTime': 'DOMAIN_LOOKUP_TIME',\n    'domInteractiveTime': 'DOM_INTERACTIVE_TIME',\n    'externalReferrer': 'EXTERNAL_REFERRER',\n    'firstContentfulPaint': 'FIRST_CONTENTFUL_PAINT',\n    'firstViewportReady': 'FIRST_VIEWPORT_READY',\n    'fragmentParam': 'FRAGMENT_PARAM',\n    'makeBodyVisible': 'MAKE_BODY_VISIBLE',\n    'htmlAttr': 'HTML_ATTR',\n    'incrementalEngagedTime': 'INCREMENTAL_ENGAGED_TIME',\n    'navRedirectCount': 'NAV_REDIRECT_COUNT',\n    'navTiming': 'NAV_TIMING',\n    'navType': 'NAV_TYPE',\n    'pageDownloadTime': 'PAGE_DOWNLOAD_TIME',\n    'pageLoadTime': 'PAGE_LOAD_TIME',\n    'pageViewId': 'PAGE_VIEW_ID',\n    'queryParam': 'QUERY_PARAM',\n    'random': 'RANDOM',\n    'redirectTime': 'REDIRECT_TIME',\n    'resourceTiming': 'RESOURCE_TIMING',\n    'screenColorDepth': 'SCREEN_COLOR_DEPTH',\n    'screenHeight': 'SCREEN_HEIGHT',\n    'screenWidth': 'SCREEN_WIDTH',\n    'scrollHeight': 'SCROLL_HEIGHT',\n    'scrollLeft': 'SCROLL_LEFT',\n    'scrollTop': 'SCROLL_TOP',\n    'scrollWidth': 'SCROLL_WIDTH',\n    'serverResponseTime': 'SERVER_RESPONSE_TIME',\n    'sourceUrl': 'SOURCE_URL',\n    'sourceHost': 'SOURCE_HOST',\n    'sourceHostname': 'SOURCE_HOSTNAME',\n    'sourcePath': 'SOURCE_PATH',\n    'tcpConnectTime': 'TCP_CONNECT_TIME',\n    'timestamp': 'TIMESTAMP',\n    'timezone': 'TIMEZONE',\n    'timezoneCode': 'TIMEZONE_CODE',\n    'title': 'TITLE',\n    'totalEngagedTime': 'TOTAL_ENGAGED_TIME',\n    'userAgent': 'USER_AGENT',\n    'viewer': 'VIEWER',\n    'viewportHeight': 'VIEWPORT_HEIGHT',\n    'viewportWidth': 'VIEWPORT_WIDTH',\n  },\n});\n\n/**\n * @const {!JsonObject}\n */\nexport const ANALYTICS_CONFIG =\n  // eslint-disable-next-line no-undef\n  ANALYTICS_VENDOR_SPLIT\n    ? jsonConfiguration({'default': includeJsonLiteral(DEFAULT_CONFIG)})\n    : jsonConfiguration({\n        // Default parent configuration applied to all amp-analytics tags.\n        'default': includeJsonLiteral(DEFAULT_CONFIG),\n        'acquialift': includeJsonLiteral(ACQUIALIFT_CONFIG),\n        'adobeanalytics': includeJsonLiteral(ADOBEANALYTICS_CONFIG),\n        'adobeanalytics_nativeConfig': includeJsonLiteral(\n          ADOBEANALYTICS_NATIVECONFIG_CONFIG\n        ),\n        'afsanalytics': includeJsonLiteral(AFSANALYTICS_CONFIG),\n        'alexametrics': includeJsonLiteral(ALEXAMETRICS_CONFIG),\n        'amplitude': includeJsonLiteral(AMPLITUDE_CONFIG),\n        'atinternet': includeJsonLiteral(ATINTERNET_CONFIG),\n        'baiduanalytics': includeJsonLiteral(BAIDUANALYTICS_CONFIG),\n        'bg': includeJsonLiteral(BG_CONFIG),\n        'burt': includeJsonLiteral(BURT_CONFIG),\n        'byside': includeJsonLiteral(BYSIDE_CONFIG),\n        'chartbeat': includeJsonLiteral(CHARTBEAT_CONFIG),\n        'clicky': includeJsonLiteral(CLICKY_CONFIG),\n        'colanalytics': includeJsonLiteral(COLANALYTICS_CONFIG),\n        'comscore': includeJsonLiteral(COMSCORE_CONFIG),\n        'cxense': includeJsonLiteral(CXENSE_CONFIG),\n        'dynatrace': includeJsonLiteral(DYNATRACE_CONFIG),\n        'epica': includeJsonLiteral(EPICA_CONFIG),\n        'euleriananalytics': includeJsonLiteral(EULERIANANALYTICS_CONFIG),\n        'facebookpixel': includeJsonLiteral(FACEBOOKPIXEL_CONFIG),\n        'gemius': includeJsonLiteral(GEMIUS_CONFIG),\n        'googleadwords': includeJsonLiteral(GOOGLEADWORDS_CONFIG),\n        'googleanalytics': includeJsonLiteral(GOOGLEANALYTICS_CONFIG),\n        'gtag': includeJsonLiteral(GTAG_CONFIG),\n        'ibeatanalytics': includeJsonLiteral(IBEATANALYTICS_CONFIG),\n        'infonline': includeJsonLiteral(INFONLINE_CONFIG),\n        'iplabel': includeJsonLiteral(IPLABEL_CONFIG),\n        'keen': includeJsonLiteral(KEEN_CONFIG),\n        'kenshoo': includeJsonLiteral(KENSHOO_CONFIG),\n        'krux': includeJsonLiteral(KRUX_CONFIG),\n        'linkpulse': includeJsonLiteral(LINKPULSE_CONFIG),\n        'lotame': includeJsonLiteral(LOTAME_CONFIG),\n        'marinsoftware': includeJsonLiteral(MARINSOFTWARE_CONFIG),\n        'mediametrie': includeJsonLiteral(MEDIAMETRIE_CONFIG),\n        'mediarithmics': includeJsonLiteral(MEDIARITHMICS_CONFIG),\n        'mediator': includeJsonLiteral(MEDIATOR_CONFIG),\n        'metrika': includeJsonLiteral(METRIKA_CONFIG),\n        'moat': includeJsonLiteral(MOAT_CONFIG),\n        'mobify': includeJsonLiteral(MOBIFY_CONFIG),\n        'mparticle': includeJsonLiteral(MPARTICLE_CONFIG),\n        'mpulse': includeJsonLiteral(MPULSE_CONFIG),\n        'navegg': includeJsonLiteral(NAVEGG_CONFIG),\n        'newrelic': includeJsonLiteral(NEWRELIC_CONFIG),\n        'nielsen': includeJsonLiteral(NIELSEN_CONFIG),\n        'nielsen-marketing-cloud': includeJsonLiteral(\n          NIELSEN_MARKETING_CLOUD_CONFIG\n        ),\n        'oewa': includeJsonLiteral(OEWA_CONFIG),\n        'oewadirect': includeJsonLiteral(OEWADIRECT_CONFIG),\n        'oracleInfinityAnalytics': includeJsonLiteral(\n          ORACLEINFINITYANALYTICS_CONFIG\n        ),\n        'parsely': includeJsonLiteral(PARSELY_CONFIG),\n        'piStats': includeJsonLiteral(PISTATS_CONFIG),\n        'permutive': includeJsonLiteral(PERMUTIVE_CONFIG),\n        'piano': includeJsonLiteral(PIANO_CONFIG),\n        'pinpoll': includeJsonLiteral(PINPOLL_CONFIG),\n        'pressboard': includeJsonLiteral(PRESSBOARD_CONFIG),\n        'quantcast': includeJsonLiteral(QUANTCAST_CONFIG),\n        'retargetly': includeJsonLiteral(RETARGETLY_CONFIG),\n        'rakam': includeJsonLiteral(RAKAM_CONFIG),\n        'reppublika': includeJsonLiteral(REPPUBLIKA_CONFIG),\n        'segment': includeJsonLiteral(SEGMENT_CONFIG),\n        'shinystat': includeJsonLiteral(SHINYSTAT_CONFIG),\n        'simplereach': includeJsonLiteral(SIMPLEREACH_CONFIG),\n        'snowplow': includeJsonLiteral(SNOWPLOW_CONFIG),\n        'teaanalytics': includeJsonLiteral(TEAANALYTICS_CONFIG),\n        'tealiumcollect': includeJsonLiteral(TEALIUMCOLLECT_CONFIG),\n        'top100': includeJsonLiteral(TOP100_CONFIG),\n        'topmailru': includeJsonLiteral(TOPMAILRU_CONFIG),\n        'treasuredata': includeJsonLiteral(TREASUREDATA_CONFIG),\n        'umenganalytics': includeJsonLiteral(UMENGANALYTICS_CONFIG),\n        'upscore': includeJsonLiteral(UPSCORE_CONFIG),\n        'vponanalytics': includeJsonLiteral(VPONANALYTICS_CONFIG),\n        'webengage': includeJsonLiteral(WEBENGAGE_CONFIG),\n        'webtrekk': includeJsonLiteral(WEBTREKK_CONFIG),\n        'webtrekk_v2': includeJsonLiteral(WEBTREKK_V2_CONFIG),\n      });\n\n// eslint-disable-next-line no-undef\nif (!ANALYTICS_VENDOR_SPLIT) {\n  if (getMode().test || getMode().localDev) {\n    ANALYTICS_CONFIG['_fake_'] = _FAKE_;\n  }\n\n  ANALYTICS_CONFIG['infonline']['triggers']['pageview']['iframePing'] = true;\n\n  ANALYTICS_CONFIG['adobeanalytics_nativeConfig']['triggers']['pageLoad'][\n    'iframePing'\n  ] = true;\n\n  ANALYTICS_CONFIG['oewa']['triggers']['pageview']['iframePing'] = true;\n\n  mergeIframeTransportConfig(\n    ANALYTICS_CONFIG,\n    isCanary(self) ? IFRAME_TRANSPORTS_CANARY : IFRAME_TRANSPORTS\n  );\n}\n\n/**\n * Merges iframe transport config.\n *\n * @param {!JsonObject} config\n * @param {!JsonObject} iframeTransportConfig\n */\nfunction mergeIframeTransportConfig(config, iframeTransportConfig) {\n  for (const vendor in iframeTransportConfig) {\n    if (hasOwn(iframeTransportConfig, vendor)) {\n      const url = iframeTransportConfig[vendor];\n      config[vendor]['transport'] = Object.assign(\n        {},\n        config[vendor]['transport'],\n        {'iframe': url}\n      );\n    }\n  }\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const _FAKE_ = /** @type {!JsonObject} */ ({\n  'requests': {\n    'endpoint': '/analytics/fake',\n  },\n  'transport': {\n    'useBody': true,\n  },\n  'triggers': {\n    'view': {\n      'on': 'visible',\n      'request': 'endpoint',\n    },\n  },\n  'configRewriter': {\n    'url': '/analytics/rewriter',\n    'varGroups': {\n      'feature1': {\n        'dr': 'DOCUMENT_REFERRER',\n        'su': 'SOURCE_URL',\n      },\n      'feature2': {\n        'name': 'cats',\n        'title': 'TITLE',\n      },\n      'alwaysOnFeature': {\n        'title2': 'TITLE',\n        'enabled': true,\n      },\n    },\n  },\n  'vars': {\n    'clientId': 'CLIENT_ID(_fake_)',\n    'dataSource': 'AMP',\n  },\n});\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst ACQUIALIFT_CONFIG = jsonLiteral({\n  'vars': {\n    'decisionApiUrl': 'us-east-1-decisionapi.lift.acquia.com',\n    'accountId': 'xxxxxxxx',\n    'siteId': 'xxxxxxxx',\n  },\n  'transport': {'beacon': true, 'xhrpost': true, 'image': false},\n  'requests': {\n    'base':\n      'https://${decisionApiUrl}/capture?account_id=${accountId}&site_id=${siteId}',\n    'basicCapture':\n      '${base}' +\n      '&ident=${clientId(tc_ptid)}' +\n      '&identsrc=amp' +\n      '&es=Amp' +\n      '&url=${canonicalUrl}' +\n      '&rurl=${documentReferrer}' +\n      '&cttl=${title}',\n    'pageview': '${basicCapture}&en=Content View',\n    'click': '${basicCapture}&en=Click-Through',\n  },\n  'triggers': {\n    'defaultPageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n});\n\nexport {ACQUIALIFT_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst ADOBEANALYTICS_CONFIG = jsonLiteral({\n  'transport': {'xhrpost': false, 'beacon': false, 'image': true},\n  'vars': {\n    'pageName': 'TITLE',\n    'host': '',\n    'reportSuites': '',\n    'linkType': 'o',\n    'linkUrl': '',\n    'linkName': '',\n  },\n  'requests': {\n    'requestPath': '/b/ss/${reportSuites}/0/amp-1.0/s${random}',\n    // vid starts with z to work around #2198\n    'basePrefix':\n      'vid=z${clientId(adobe_amp_id)}' +\n      '&ndh=0' +\n      '&ce=${documentCharset}' +\n      '&pageName=${pageName}' +\n      '&g=${ampdocUrl}' +\n      '&r=${documentReferrer}' +\n      '&bh=${availableScreenHeight}' +\n      '&bw=${availableScreenWidth}' +\n      '&c=${screenColorDepth}' +\n      '&j=amp' +\n      '&s=${screenWidth}x${screenHeight}',\n    'pageview': 'https://${host}${requestPath}?${basePrefix}',\n    'click':\n      'https://${host}${requestPath}?${basePrefix}&pe=lnk_${linkType}&pev1=${linkUrl}&pev2=${linkName}',\n  },\n});\n\nexport {ADOBEANALYTICS_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst ADOBEANALYTICS_NATIVECONFIG_CONFIG = jsonLiteral({\n  'triggers': {\n    'pageLoad': {\n      'on': 'visible',\n      'request': 'iframeMessage',\n    },\n  },\n});\n\nexport {ADOBEANALYTICS_NATIVECONFIG_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst AFSANALYTICS_CONFIG = jsonLiteral({\n  'vars': {\n    'server': 'www',\n    'websiteid': 'xxxxxxxx',\n    'event': 'click',\n    'clicklabel': 'clicked from AMP page',\n  },\n  'transport': {'beacon': false, 'xhrpost': false, 'image': true},\n  'requests': {\n    'host': '//${server}.afsanalytics.com',\n    'base': '${host}/cgi_bin/',\n    'pageview':\n      '${base}connect.cgi?usr=${websiteid}Pauto' +\n      '&js=1' +\n      '&amp=1' +\n      '&title=${title}' +\n      '&url=${canonicalUrl}' +\n      '&refer=${documentReferrer}' +\n      '&resolution=${screenWidth}x${screenHeight}' +\n      '&color=${screenColorDepth}' +\n      '&Tips=${random}',\n    'click':\n      '${base}click.cgi?usr=${websiteid}' +\n      '&event=${event}' +\n      '&exit=${clicklabel}',\n  },\n  'triggers': {\n    'defaultPageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n});\n\nexport {AFSANALYTICS_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst ALEXAMETRICS_CONFIG = jsonLiteral({\n  'requests': {\n    'base':\n      'https://${ampAtrkHost}/atrk.gif?account=${atrk_acct}&domain=${domain}',\n    'pageview':\n      '${base}&jsv=amp-${ampVersion}' +\n      '&frame_height=${viewportHeight}&frame_width=${viewportWidth}' +\n      '&title=${title}&time=${timestamp}&time_zone_offset=${timezone}' +\n      '&screen_params=${screenWidth}x${screenHeight}x${screenColorDepth}' +\n      '&ref_url=${documentReferrer}&host_url=${sourceUrl}' +\n      '&random_number=${random}&user_cookie=${clientId(__auc)}' +\n      '&user_cookie_flag=0&user_lang=${browserLanguage}' +\n      '&amp_doc_url=${ampdocUrl}',\n  },\n  'vars': {\n    'atrk_acct': '',\n    'domain': '',\n    'ampAtrkHost': 'certify-amp.alexametrics.com',\n  },\n  'triggers': {\n    'trackPageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n  'transport': {\n    'xhrpost': false,\n    'beacon': false,\n    'image': true,\n  },\n});\n\nexport {ALEXAMETRICS_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst AMPLITUDE_CONFIG = jsonLiteral({\n  'transport': {\n    'beacon': true,\n    'xhrpost': true,\n    'useBody': true,\n    'image': false,\n  },\n  'vars': {\n    'deviceId': 'CLIENT_ID(amplitude_amp_id)',\n  },\n  'requests': {\n    'host': 'https://api.amplitude.com',\n    'event': {\n      'baseUrl': '${host}/amp/event',\n    },\n  },\n  'extraUrlParams': {\n    'api_key': '${apiKey}',\n    'device_id': '${deviceId}',\n    'library': 'amp/${ampVersion}',\n    'time': '${timestamp}',\n    'language': '${browserLanguage}',\n    'user_agent': '${userAgent}',\n  },\n  'linkers': {\n    'amplitude': {\n      'ids': {\n        'amplitude_amp_id': '${deviceId}',\n      },\n      'proxyOnly': false,\n    },\n  },\n  'cookies': {\n    'amplitude_amp_id': {\n      'value': 'LINKER_PARAM(amplitude, amplitude_amp_id)',\n    },\n  },\n});\n\nexport {AMPLITUDE_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst ATINTERNET_CONFIG = jsonLiteral({\n  'transport': {'beacon': false, 'xhrpost': false, 'image': true},\n  'vars': {\n    'pixelPath': 'hit.xiti',\n    'domain': '.xiti.com',\n  },\n  'requests': {\n    'base':\n      'https://${log}${domain}/${pixelPath}?s=${site}&ts=${timestamp}&r=${screenWidth}x${screenHeight}x${screenColorDepth}&re=${availableScreenWidth}x${availableScreenHeight}',\n    'suffix': '&medium=amp&${extraUrlParams}&ref=${documentReferrer}',\n    'pageview': '${base}&p=${title}&s2=${level2}${suffix}',\n    'click':\n      '${base}&' +\n      'pclick=${title}&' +\n      's2click=${level2}&' +\n      'p=${label}&' +\n      's2=${level2Click}&' +\n      'type=click&click=${type}${suffix}',\n  },\n});\n\nexport {ATINTERNET_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst BAIDUANALYTICS_CONFIG = jsonLiteral({\n  'requests': {\n    'host': 'https://hm.baidu.com',\n    'base': '${host}/hm.gif?si=${token}&nv=0&st=4&v=pixel-1.0&rnd=${timestamp}',\n    'pageview': '${base}&et=0',\n    'event': '${base}&ep=${category}*${action}*${label}*${value}&et=4&api=8_0',\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {BAIDUANALYTICS_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst BG_CONFIG = jsonLiteral({});\n\nexport {BG_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst BURT_CONFIG = jsonLiteral({\n  'vars': {\n    'trackingKey': 'ignore',\n    'category': '',\n    'subCategory': '',\n  },\n  'requests': {\n    'host': '//${trackingKey}.c.richmetrics.com/',\n    'base':\n      '${host}imglog?' +\n      'e=${trackingKey}&' +\n      'pi=${trackingKey}' +\n      '|${pageViewId}' +\n      '|${canonicalPath}' +\n      '|${clientId(burt-amp-user-id)}&' +\n      'ui=${clientId(burt-amp-user-id)}&' +\n      'v=amp&' +\n      'ts=${timestamp}&' +\n      'sn=${requestCount}&',\n    'pageview':\n      '${base}' +\n      'type=page&' +\n      'ca=${category}&' +\n      'sc=${subCategory}&' +\n      'ln=${browserLanguage}&' +\n      'lr=${documentReferrer}&' +\n      'eu=${sourceUrl}&' +\n      'tz=${timezone}&' +\n      'pd=${scrollWidth}x${scrollHeight}&' +\n      'sd=${screenWidth}x${screenHeight}&' +\n      'wd=${availableScreenWidth}x${availableScreenHeight}&' +\n      'ws=${scrollLeft}x${scrollTop}',\n    'pageping': '${base}type=pageping',\n  },\n  'triggers': {\n    'pageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n    'pageping': {\n      'on': 'timer',\n      'timerSpec': {\n        'interval': 15,\n        'maxTimerLength': 1200,\n      },\n      'request': 'pageping',\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {BURT_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst BYSIDE_CONFIG = jsonLiteral({\n  'vars': {\n    'webcareZone': 'webcare',\n    'webcareId': '',\n    'channel': '',\n    'fid': '',\n    'lang': 'pt',\n  },\n  'requests': {\n    'host': '//${webcareZone}.byside.com/',\n    'base': '${host}BWA${webcareId}/amp/',\n    'pageview': '${base}pixel.php',\n    'event':\n      '${base}signal.php?event_id=${eventId}' +\n      '&event_label=${eventLabel}&fields=${fields}',\n  },\n  'extraUrlParams': {\n    'webcare_id': '${webcareId}',\n    'bwch': '${channel}',\n    'lang': '${lang}',\n    'fid': '${fid}',\n    'bwit': 'A',\n    'tuid': '${clientId(byside_webcare_tuid)}',\n    'suid': '',\n    'puid': '${pageViewId}p${timestamp}',\n    'referrer': '${documentReferrer}',\n    'page': '${sourceUrl}',\n    'amppage': '${ampdocUrl}',\n    'bwpt': '${title}',\n    'bres': '${viewportWidth}x${viewportHeight}',\n    'res': '${screenWidth}x${screenHeight}',\n    'v': 'v20171116a',\n    'ampv': '${ampVersion}',\n    'viewer': '${viewer}',\n    'ua': '${userAgent}',\n    'r': '${random}',\n  },\n  'triggers': {\n    'pageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {BYSIDE_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst CHARTBEAT_CONFIG = jsonLiteral({\n  'requests': {\n    'host': 'https://ping.chartbeat.net',\n    'basePrefix':\n      '/ping?h=${domain}&' +\n      'p=${canonicalPath}&' +\n      'u=${clientId(_cb)}&' +\n      'd=${canonicalHost}&' +\n      'g=${uid}&' +\n      'g0=${sections}&' +\n      'g1=${authors}&' +\n      'g2=${zone}&' +\n      'g3=${sponsorName}&' +\n      'g4=${contentType}&' +\n      'c=120&' +\n      'x=${scrollTop}&' +\n      'y=${scrollHeight}&' +\n      'o=${scrollWidth}&' +\n      'w=${viewportHeight}&' +\n      'j=${decayTime}&' +\n      'R=1&' +\n      'W=0&' +\n      'I=0&' +\n      'E=${totalEngagedTime}&' +\n      'r=${documentReferrer}&' +\n      't=${pageViewId}${clientId(_cb)}&' +\n      'b=${pageLoadTime}&' +\n      'i=${title}&' +\n      'T=${timestamp}&' +\n      'tz=${timezone}&' +\n      'C=2',\n    'baseSuffix': '&_',\n    'interval': '${host}${basePrefix}${baseSuffix}',\n    'anchorClick': '${host}${basePrefix}${baseSuffix}',\n  },\n  'triggers': {\n    'trackInterval': {\n      'on': 'timer',\n      'timerSpec': {\n        'interval': 15,\n        'maxTimerLength': 7200,\n      },\n      'request': 'interval',\n      'vars': {\n        'decayTime': 30,\n      },\n    },\n    'trackAnchorClick': {\n      'on': 'click',\n      'selector': 'a',\n      'request': 'anchorClick',\n      'vars': {\n        'decayTime': 30,\n      },\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {CHARTBEAT_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst CLICKY_CONFIG = jsonLiteral({\n  'vars': {\n    'site_id': '',\n  },\n  'requests': {\n    'base': 'https://in.getclicky.com/in.php?site_id=${site_id}',\n    'baseSuffix': '&mime=${contentType}&x=${random}',\n    'pageview':\n      '${base}&' +\n      'res=${screenWidth}x${screenHeight}&' +\n      'lang=${browserLanguage}&' +\n      'secure=1&' +\n      'type=pageview&' +\n      'href=${canonicalPath}&' +\n      'title=${title}' +\n      '${baseSuffix}',\n    'interval': '${base}&type=ping${baseSuffix}',\n  },\n  'triggers': {\n    'defaultPageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n    'interval': {\n      'on': 'timer',\n      'timerSpec': {\n        'interval': 60,\n        'maxTimerLength': 600,\n      },\n      'request': 'interval',\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {CLICKY_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst COLANALYTICS_CONFIG = jsonLiteral({\n  'requests': {\n    'host': 'https://ase.clmbtech.com',\n    'base': '${host}/message',\n    'pageview':\n      '${base}?cid=${id}' +\n      '&val_101=${id}' +\n      '&val_101=${canonicalPath}' +\n      '&ch=${canonicalHost}' +\n      '&uuid=${uid}' +\n      '&au=${authors}' +\n      '&zo=${zone}' +\n      '&sn=${sponsorName}' +\n      '&ct=${contentType}' +\n      '&st=${scrollTop}' +\n      '&sh=${scrollHeight}' +\n      '&dct=${decayTime}' +\n      '&tet=${totalEngagedTime}' +\n      '&dr=${documentReferrer}' +\n      '&plt=${pageLoadTime}' +\n      '&val_108=${title}' +\n      '&val_120=3',\n  },\n  'triggers': {\n    'defaultPageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {COLANALYTICS_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst COMSCORE_CONFIG = jsonLiteral({\n  'vars': {\n    'c2': '1000001',\n  },\n  'requests': {\n    'host': 'https://sb.scorecardresearch.com',\n    'base': '${host}/b?',\n    'pageview':\n      '${base}c1=2' +\n      '&c2=${c2}' +\n      '&cs_amp_consent=${consentState}' +\n      '&cs_pv=${pageViewId}' +\n      '&c12=${clientId(comScore)}' +\n      '&rn=${random}' +\n      '&c8=${title}' +\n      '&c7=${canonicalUrl}' +\n      '&c9=${documentReferrer}' +\n      '&cs_c7amp=${ampdocUrl}',\n  },\n  'triggers': {\n    'defaultPageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {COMSCORE_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst CXENSE_CONFIG = jsonLiteral({\n  'requests': {\n    'host': 'https://scomcluster.cxense.com',\n    'base': '${host}/Repo/rep.gif',\n    'pageview':\n      '${base}?ver=1&typ=pgv&sid=${siteId}&ckp=${clientId(cX_P)}&' +\n      'loc=${sourceUrl}&rnd=${random}&ref=${documentReferrer}&' +\n      'ltm=${timestamp}&wsz=${screenWidth}x${screenHeight}&' +\n      'bln=${browserLanguage}&chs=${documentCharset}&' +\n      'col=${screenColorDepth}&tzo=${timezone}&cp_cx_channel=amp',\n  },\n  'triggers': {\n    'defaultPageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {CXENSE_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst DYNATRACE_CONFIG = jsonLiteral({\n  'requests': {\n    'endpoint':\n      '${protocol}://${tenant}${separator}${environment}:${port}/ampbf/${tenantpath}',\n    'pageview':\n      '${endpoint}?type=js&' +\n      'flavor=amp&' +\n      'v=1&' +\n      'a=1%7C1%7C_load_%7C_load_%7C-%7C${navTiming(navigationStart)}%7C' +\n      '${navTiming(domContentLoadedEventEnd)}%7C0%2C2%7C2%7C_onload_%7C' +\n      '_load_%7C-%7C${navTiming(domContentLoadedEventStart)}%7C' +\n      '${navTiming(domContentLoadedEventEnd)}%7C0&' +\n      'fId=${pageViewId}&' +\n      'vID=${clientId(rxVisitor)}&' +\n      'url=${sourceUrl}&' +\n      'title=${title}&' +\n      'sw=${screenWidth}&' +\n      'sh=${screenHeight}&' +\n      'w=${viewportWidth}&' +\n      'h=${viewportHeight}&' +\n      'nt=a${navType}' +\n      'b${navTiming(navigationStart)}' +\n      'c${navTiming(navigationStart,redirectStart)}' +\n      'd${navTiming(navigationStart,redirectEnd)}' +\n      'e${navTiming(navigationStart,fetchStart)}' +\n      'f${navTiming(navigationStart,domainLookupStart)}' +\n      'g${navTiming(navigationStart,domainLookupEnd)}' +\n      'h${navTiming(navigationStart,connectStart)}' +\n      'i${navTiming(navigationStart,connectEnd)}' +\n      'j${navTiming(navigationStart,secureConnectionStart)}' +\n      'k${navTiming(navigationStart,requestStart)}' +\n      'l${navTiming(navigationStart,responseStart)}' +\n      'm${navTiming(navigationStart,responseEnd)}' +\n      'n${navTiming(navigationStart,domLoading)}' +\n      'o${navTiming(navigationStart,domInteractive)}' +\n      'p${navTiming(navigationStart,domContentLoadedEventStart)}' +\n      'q${navTiming(navigationStart,domContentLoadedEventEnd)}' +\n      'r${navTiming(navigationStart,domComplete)}' +\n      's${navTiming(navigationStart,loadEventStart)}' +\n      't${navTiming(navigationStart,loadEventEnd)}&' +\n      'app=${app}&' +\n      'time=${timestamp}',\n  },\n  'triggers': {\n    'trackPageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n  'vars': {\n    'app': 'ampapp',\n    'protocol': 'https',\n    'tenant': '',\n    'environment': 'live.dynatrace.com',\n    'port': '443',\n    'separator': '.',\n  },\n});\n\nexport {DYNATRACE_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst EPICA_CONFIG = jsonLiteral({\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n  'vars': {\n    'anonymousId': 'CLIENT_ID(epica_amp_id)',\n  },\n  'requests': {\n    'host': 'https://cat.poder.io/api/v1/pixel',\n    'base':\n      '?writeKey=${writeKey}' +\n      '&context.library.name=amp' +\n      '&anonymousId=${anonymousId}' +\n      '&context.locale=${browserLanguage}' +\n      '&context.page.path=${canonicalPath}' +\n      '&context.page.url=${canonicalUrl}' +\n      '&context.page.referrer=${documentReferrer}' +\n      '&context.page.title=${title}' +\n      '&context.screen.width=${screenWidth}' +\n      '&context.screen.height=${screenHeight}',\n    'page': '${host}/page${base}&name=${name}',\n    'track': '${host}/track${base}&event=${event}',\n  },\n  'triggers': {\n    'page': {\n      'on': 'visible',\n      'request': 'page',\n    },\n  },\n});\n\nexport {EPICA_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst EULERIANANALYTICS_CONFIG = jsonLiteral({\n  'vars': {\n    'analyticsHost': '',\n    'documentLocation': 'SOURCE_URL',\n  },\n  'requests': {\n    'base': 'https://${analyticsHost}',\n    'basePrefix':\n      '-/${random}?' +\n      'euid-amp=${clientId(etuix)}&' +\n      'url=${documentLocation}&',\n    'pageview':\n      '${base}/col2/${basePrefix}' +\n      'rf=${externalReferrer}&' +\n      'urlp=${pagePath}&' +\n      'ss=${screenWidth}x${screenHeight}&' +\n      'sd=${screenColorDepth}',\n    'action':\n      '${base}/action/${basePrefix}' +\n      'eact=${actionCode}&' +\n      'actr=${actionRef}',\n    'user': '${base}/uparam/${basePrefix}euk${userParamKey}=${userParamVal}',\n    'contextflag':\n      '${base}/cflag2/${basePrefix}ecf0k=${cflagKey}&ecf0v=${cflagVal}',\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {EULERIANANALYTICS_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst FACEBOOKPIXEL_CONFIG = jsonLiteral({\n  'vars': {\n    'pixelId': 'PIXEL-ID',\n  },\n  'requests': {\n    'host': 'https://www.facebook.com',\n    'base': '${host}/tr?noscript=1',\n    'pageview': '${base}&ev=PageView&id=${pixelId}',\n    'event':\n      '${base}&ev=${eventName}&' +\n      'id=${pixelId}' +\n      '&cd[content_name]=${content_name}',\n    'eventViewContent':\n      '${base}&ev=ViewContent&' +\n      'id=${pixelId}' +\n      '&cd[value]=${value}' +\n      '&cd[currency]=${currency}' +\n      '&cd[content_name]=${content_name}' +\n      '&cd[content_type]=${content_type}' +\n      '&cd[content_ids]=${content_ids}',\n    'eventSearch':\n      '${base}&ev=Search&' +\n      'id=${pixelId}' +\n      '&cd[value]=${value}' +\n      '&cd[currency]=${currency}' +\n      '&cd[content_category]=${content_category}' +\n      '&cd[content_ids]=${content_ids}' +\n      '&cd[search_string]=${search_string}',\n    'eventAddToCart':\n      '${base}&ev=AddToCart&' +\n      'id=${pixelId}' +\n      '&cd[value]=${value}' +\n      '&cd[currency]=${currency}' +\n      '&cd[content_name]=${content_name}' +\n      '&cd[content_type]=${content_type}' +\n      '&cd[content_ids]=${content_ids}',\n    'eventAddToWishlist':\n      '${base}&ev=AddToWishlist&' +\n      'id=${pixelId}' +\n      '&cd[value]=${value}' +\n      '&cd[currency]=${currency}' +\n      '&cd[content_name]=${content_name}' +\n      '&cd[content_category]=${content_category}' +\n      '&cd[content_ids]=${content_ids}',\n    'eventInitiateCheckout':\n      '${base}&ev=InitiateCheckout&' +\n      'id=${pixelId}' +\n      '&cd[value]=${value}' +\n      '&cd[currency]=${currency}' +\n      '&cd[content_name]=${content_name}' +\n      '&cd[content_category]=${content_category}' +\n      '&cd[num_items]=${num_items}' +\n      '&cd[content_ids]=${content_ids}',\n    'eventAddPaymentInfo':\n      '${base}&ev=AddPaymentInfo&' +\n      'id=${pixelId}' +\n      '&cd[value]=${value}' +\n      '&cd[currency]=${currency}' +\n      '&cd[content_category]=${content_category}' +\n      '&cd[content_ids]=${content_ids}',\n    'eventPurchase':\n      '${base}&ev=Purchase&' +\n      'id=${pixelId}' +\n      '&cd[value]=${value}' +\n      '&cd[currency]=${currency}' +\n      '&cd[content_name]=${content_name}' +\n      '&cd[content_type]=${content_type}' +\n      '&cd[content_ids]=${content_ids}' +\n      '&cd[num_items]=${num_items}',\n    'eventLead':\n      '${base}&ev=Lead&' +\n      'id=${pixelId}' +\n      '&cd[value]=${value}' +\n      '&cd[currency]=${currency}' +\n      '&cd[content_name]=${content_name}' +\n      '&cd[content_category]=${content_category}',\n    'eventCompleteRegistration':\n      '${base}&ev=CompleteRegistration&' +\n      'id=${pixelId}' +\n      '&cd[value]=${value}' +\n      '&cd[currency]=${currency}' +\n      '&cd[content_name]=${content_name}' +\n      '&cd[status]=${status}',\n  },\n  'triggers': {\n    'trackPageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n});\n\nexport {FACEBOOKPIXEL_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst GEMIUS_CONFIG = jsonLiteral({\n  'vars': {\n    'dnt': '0',\n  },\n  'requests': {\n    'base':\n      'https://${prefix}.hit.gemius.pl/_${timestamp}/redot.gif?l=91&id=${identifier}&tz=${timezone}&col=${screenColorDepth}&screen=${screenWidth}x${screenHeight}&window=${viewportWidth}x${viewportHeight}&fr=1&href=${sourceUrl}&ref=${documentReferrer}&sarg=${canonicalUrl}&extra=gemamp%3D1%7Campid%3D${clientId(gemius)}%7C${extraparams}&nc=${dnt}',\n    'pageview': '${base}&et=view&hsrc=1',\n    'event': '${base}&et=action&hsrc=3',\n  },\n  'triggers': {\n    'defaultPageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {GEMIUS_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst GOOGLEADWORDS_CONFIG = jsonLiteral({\n  // https://developers.google.com/adwords/amp/landing-pages\n  'requests': {\n    'conversion_prefix': 'https://www.googleadservices.com/pagead/conversion/',\n    'remarketing_prefix':\n      'https://googleads.g.doubleclick.net/pagead/viewthroughconversion/',\n    'common_params':\n      '${googleConversionId}/?' +\n      'cv=amp2&' + // Increment when making changes.\n      'label=${googleConversionLabel}&' +\n      'random=${random}&' +\n      'url=${sourceUrl}&' +\n      'ref=${documentReferrer}&' +\n      'fst=${pageViewId}&' +\n      'num=${counter(googleadwords)}&' +\n      'fmt=3&' +\n      'async=1&' +\n      'u_h=${screenHeight}&u_w=${screenWidth}&' +\n      'u_ah=${availableScreenHeight}&u_aw=${availableScreenWidth}&' +\n      'u_cd=${screenColorDepth}&' +\n      'u_tz=${timezone}&' +\n      'tiba=${title}&' +\n      'guid=ON&script=0',\n    'conversion_params':\n      'value=${googleConversionValue}&' +\n      'currency_code=${googleConversionCurrency}&' +\n      'bg=${googleConversionColor}&' +\n      'hl=${googleConversionLanguage}',\n    'conversion': '${conversion_prefix}${common_params}&${conversion_params}',\n    'remarketing': '${remarketing_prefix}${common_params}',\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {GOOGLEADWORDS_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst GOOGLEANALYTICS_CONFIG = jsonLiteral({\n  'vars': {\n    'eventValue': '0',\n    'documentLocation': 'SOURCE_URL',\n    'clientId': 'CLIENT_ID(AMP_ECID_GOOGLE,,_ga)',\n    'dataSource': 'AMP',\n    'anonymizeIP': 'aip',\n    'errorParam': '${errorName}-${errorMessage}',\n  },\n  'requests': {\n    'host': 'https://www.google-analytics.com',\n    'basePrefix':\n      'v=1&' +\n      '_v=a1&' +\n      'ds=${dataSource}&' +\n      '${anonymizeIP}&' +\n      '_s=${requestCount}&' +\n      'dt=${title}&' +\n      'sr=${screenWidth}x${screenHeight}&' +\n      '_utmht=${timestamp}&' +\n      'cid=${clientId}&' +\n      'tid=${account}&' +\n      'dl=${documentLocation}&' +\n      'dr=${externalReferrer}&' +\n      'sd=${screenColorDepth}&' +\n      'ul=${browserLanguage}&' +\n      'de=${documentCharset}',\n    'baseSuffix': '&a=${pageViewId}&z=${random}',\n    'pageview':\n      '${host}/r/collect?${basePrefix}&' +\n      't=pageview&' +\n      'jid=${random}&' +\n      '_r=1' +\n      '${baseSuffix}',\n    'event':\n      '${host}/collect?${basePrefix}&' +\n      't=event&' +\n      'jid=&' +\n      'ec=${eventCategory}&' +\n      'ea=${eventAction}&' +\n      'el=${eventLabel}&' +\n      'ev=${eventValue}' +\n      '${baseSuffix}',\n    'social':\n      '${host}/collect?${basePrefix}&' +\n      't=social&' +\n      'jid=&' +\n      'sa=${socialAction}&' +\n      'sn=${socialNetwork}&' +\n      'st=${socialTarget}' +\n      '${baseSuffix}',\n    'timing':\n      '${host}/collect?${basePrefix}&' +\n      't=${timingRequestType}&' +\n      'jid=&' +\n      'plt=${pageLoadTime}&' +\n      'dns=${domainLookupTime}&' +\n      'tcp=${tcpConnectTime}&' +\n      'rrt=${redirectTime}&' +\n      'srt=${serverResponseTime}&' +\n      'pdt=${pageDownloadTime}&' +\n      'clt=${contentLoadTime}&' +\n      'dit=${domInteractiveTime}' +\n      '${baseSuffix}',\n    'error':\n      '${host}/collect?${basePrefix}&' +\n      't=exception&' +\n      'exd=${errorParam}' +\n      '${baseSuffix}',\n  },\n  'triggers': {\n    'performanceTiming': {\n      'on': 'visible',\n      'request': 'timing',\n      'sampleSpec': {\n        'sampleOn': '${clientId}',\n        'threshold': 1,\n      },\n      'vars': {\n        'timingRequestType': 'timing',\n      },\n    },\n    'adwordsTiming': {\n      'on': 'visible',\n      'request': 'timing',\n      'enabled': '${queryParam(gclid)}',\n      'vars': {\n        'timingRequestType': 'adtiming',\n      },\n    },\n    'storyProgress': {\n      'on': 'story-page-visible',\n      'enabled': false,\n      'request': 'event',\n      'vars': {\n        'eventAction': 'story_progress',\n        'eventCategory': '${title}',\n        'eventLabel': '${storyPageId}',\n      },\n    },\n    'storyEnd': {\n      'on': 'story-last-page-visible',\n      'enabled': false,\n      'request': 'event',\n      'vars': {\n        'eventAction': 'story_complete',\n        'eventCategory': '${title}',\n      },\n    },\n  },\n  'extraUrlParamsReplaceMap': {\n    'dimension': 'cd',\n    'metric': 'cm',\n  },\n  'optout': '_gaUserPrefs.ioo',\n  'optoutElementId': '__gaOptOutExtension',\n  'linkers': {\n    '_gl': {\n      'ids': {\n        '_ga': '${clientId}',\n      },\n    },\n  },\n  'cookies': {\n    '_ga': {\n      'value': 'LINKER_PARAM(_gl, _ga)',\n    },\n  },\n});\n\nexport {GOOGLEANALYTICS_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst GTAG_CONFIG = jsonLiteral({\n  'configRewriter': {\n    'url': 'https://www.googletagmanager.com/gtag/amp',\n    'varGroups': {\n      'dns': {\n        'dr': 'DOCUMENT_REFERRER',\n        'dl': 'SOURCE_URL',\n      },\n      'conversion': {\n        'gclsrc': 'QUERY_PARAM(gclsrc)',\n        'hasGcl': '$IF(QUERY_PARAM(gclid), 1, 0)',\n        'hasDcl': '$IF(QUERY_PARAM(dclid), 1, 0)',\n        'hasExtRef': '$IF(EXTERNAL_REFERRER, 1, 0)',\n        'hasDocRef': '$IF(DOCUMENT_REFERRER, 1, 0)',\n        'enabled': true,\n      },\n    },\n  },\n  'vars': {\n    'eventValue': '0',\n    'clientId': 'CLIENT_ID(AMP_ECID_GOOGLE,,_ga)',\n    'dataSource': 'AMP',\n    'anonymizeIP': 'aip',\n    'errorParam': '${errorName}-${errorMessage}',\n  },\n  'requests': {\n    'uaHost': 'https://www.google-analytics.com',\n    'uaBasePrefix':\n      'v=1&' +\n      '_v=a1&' +\n      'ds=${dataSource}&' +\n      '${anonymizeIP}&' +\n      '_s=${requestCount}&' +\n      'dt=${title}&' +\n      'sr=${screenWidth}x${screenHeight}&' +\n      'cid=${clientId}&' +\n      'tid=${trackingId}&' +\n      'dl=${sourceUrl}&' +\n      'dr=${externalReferrer}&' +\n      'sd=${screenColorDepth}&' +\n      'ul=${browserLanguage}&' +\n      'de=${documentCharset}',\n    'uaBaseSuffix': '&a=${pageViewId}&z=${random}',\n    'uaPageviewCommon': '&t=pageview&jid=${random}&gjid=${random}&_r=1',\n    'uaPageview':\n      '${uaHost}/r/collect?${uaBasePrefix}' +\n      '${uaPageviewCommon}' +\n      '${uaBaseSuffix}',\n    'uaPageviewNpa':\n      '${uaHost}/collect?${uaBasePrefix}' +\n      '${uaPageviewCommon}' +\n      '${uaBaseSuffix}',\n    'uaEvent':\n      '${uaHost}/collect?${uaBasePrefix}&' +\n      't=event&' +\n      'jid=' +\n      '${uaBaseSuffix}',\n    'uaTiming':\n      '${uaHost}/collect?${uaBasePrefix}&' +\n      'jid=&' +\n      'plt=${pageLoadTime}&' +\n      'dns=${domainLookupTime}&' +\n      'tcp=${tcpConnectTime}&' +\n      'rrt=${redirectTime}&' +\n      'srt=${serverResponseTime}&' +\n      'pdt=${pageDownloadTime}&' +\n      'clt=${contentLoadTime}&' +\n      'dit=${domInteractiveTime}' +\n      '${uaBaseSuffix}',\n    'uaError':\n      '${uaHost}/collect?${uaBasePrefix}&' +\n      't=exception&' +\n      'exd=${errorParam}' +\n      '${uaBaseSuffix}',\n    'awConversionPrefix': 'https://www.googleadservices.com/pagead/conversion/',\n    'awRemarketingPrefix':\n      'https://googleads.g.doubleclick.net/pagead/viewthroughconversion/',\n    'awCommonParams':\n      '${conversionId}/?' +\n      'cv=amp3&' + // Increment when making changes.\n      'label=${conversionLabel}&' +\n      'random=${random}&' +\n      'url=${sourceUrl}&' +\n      'ref=${documentReferrer}&' +\n      'fst=${pageViewId}&' +\n      'num=${counter(googleadwords)}&' +\n      'fmt=3&' +\n      'async=1&' +\n      'u_h=${screenHeight}&u_w=${screenWidth}&' +\n      'u_ah=${availableScreenHeight}&u_aw=${availableScreenWidth}&' +\n      'u_cd=${screenColorDepth}&' +\n      'u_tz=${timezone}&' +\n      'tiba=${title}&' +\n      'guid=ON&script=0',\n    'awConversion': '${awConversionPrefix}${awCommonParams}',\n    'awRemarketing': '${awRemarketingPrefix}${awCommonParams}',\n    'flBase':\n      'https://ad.doubleclick.net/activity;src=${flSrc};type=${flType};cat=${flCat}',\n    'flDynamicBase':\n      'https://${flSrc}.fls.doubleclick.net/activityi;src=${flSrc};type=${flType};cat=${flCat}',\n    'dnsBase': 'https://ad.doubleclick.net/ddm/clk/',\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {GTAG_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst IBEATANALYTICS_CONFIG = jsonLiteral({\n  'requests': {\n    'host': 'https://ibeat.indiatimes.com',\n    'base': 'https://ibeat.indiatimes.com/iBeat/pageTrendlogAmp.html',\n    'pageview':\n      '${base}?' +\n      '&h=${h}' +\n      '&d=${h}' +\n      '&url=${url}' +\n      '&k=${key}' +\n      '&ts=${time}' +\n      '&ch=${channel}' +\n      '&sid=${uid}' +\n      '&at=${agentType}' +\n      '&ref=${documentReferrer}' +\n      '&aid=${aid}' +\n      '&loc=1' +\n      '&ct=1' +\n      '&cat=${cat}' +\n      '&scat=${scat}' +\n      '&ac=1' +\n      '&tg=${tags}' +\n      '&ctids=${catIds}' +\n      '&pts=${pagePublishTime}' +\n      '&auth=${author}' +\n      '&pos=${position}' +\n      '&iBeatField=${ibeatFields}' +\n      '&cid=${clientId(MSCSAuthDetails)}',\n  },\n  'triggers': {\n    'defaultPageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n});\n\nexport {IBEATANALYTICS_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst INFONLINE_CONFIG = jsonLiteral({\n  'vars': {\n    'sv': 'ke',\n    'ap': '1',\n  },\n  'transport': {'beacon': false, 'xhrpost': false, 'image': true},\n  'requests': {\n    'pageview':\n      '${url}?st=${st}' +\n      '&sv=${sv}' +\n      '&ap=${ap}' +\n      '&co=${co}' +\n      '&cp=${cp}' +\n      '&ps=${ps}' +\n      '&host=${canonicalHost}' +\n      '&path=${canonicalPath}',\n  },\n  'triggers': {\n    'pageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n});\n\nexport {INFONLINE_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst IPLABEL_CONFIG = jsonLiteral({\n  'requests': {\n    'collectorUrl': 'm.col.ip-label.net',\n    'endpoint': 'https://${collectorUrl}/coll/',\n    'onload':\n      '${endpoint}?' +\n      'T=${trackerId}&' +\n      'm=' +\n      '2502|${navTiming(navigationStart)}|' +\n      '2508|${navTiming(domainLookupStart)}|' +\n      '2509|${navTiming(domainLookupEnd)}|' +\n      '2510|${navTiming(connectStart)}|' +\n      '2512|${navTiming(connectEnd)}|' +\n      '2514|${navTiming(responseStart)}|' +\n      '2515|${navTiming(responseEnd)}|' +\n      '2517|${navTiming(domInteractive)}|' +\n      '2520|${navTiming(loadEventStart)}' +\n      '&ts=${timestamp}' +\n      '&ua=${userAgent}' +\n      '&d=${ipldim}' +\n      '&i=${clientip}' +\n      '&d[1]=${customdim}' +\n      '&d[2]=${business}' +\n      '&d[3]=${abtesting}' +\n      '&d[4]=${infrastructure}' +\n      '&d[5]=${customer}' +\n      '&u=${urlgroup}' +\n      '&w=${availableScreenWidth}&h=${availableScreenHeight}' +\n      '&r=${documentReferrer}' +\n      '&l=${browserLanguage}',\n  },\n  'triggers': {\n    'trackPageview': {\n      'on': 'visible',\n      'request': 'onload',\n    },\n  },\n  'transport': {\n    'beacon': true,\n    'xhrpost': true,\n    'image': {'suppressWarnings': true},\n  },\n  'vars': {\n    'trackerId': 'notrackerID',\n    'customdim': '',\n    'business': '',\n    'abtesting': '',\n    'infrastructure': '',\n    'customer': '',\n    'clientip': '',\n    'urlgroup': '',\n  },\n});\n\nexport {IPLABEL_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS-IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst KEEN_CONFIG = jsonLiteral({\n  'requests': {\n    'base': 'https://api.keen.io/3.0/projects/${projectId}/events',\n    'pageview': '${base}/pageviews?api_key=${writeKey}',\n    'click': '${base}/clicks?api_key=${writeKey}',\n    'custom': '${base}/${collection}?api_key=${writeKey}',\n  },\n  'triggers': {\n    'trackPageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n  'extraUrlParams': {\n    'amp': true,\n    'ampdocHostname': '${ampdocHostname}',\n    'ampdocUrl': '${ampdocUrl}',\n    'ampVersion': '${ampVersion}',\n    'backgroundState': '${backgroundState}',\n    'backgroundedAtStart': '${backgroundedAtStart}',\n    'browserLanguage': '${browserLanguage}',\n    'canonicalHost': '${canonicalHost}',\n    'canonicalHostname': '${canonicalHostname}',\n    'canonicalPath': '${canonicalPath}',\n    'canonicalUrl': '${canonicalUrl}',\n    'clientId': 'CLIENT_ID(cid)',\n    'contentLoadTime': '${contentLoadTime}',\n    'documentReferrer': '${documentReferrer}',\n    'domainLookupTime': '${domainLookupTime}',\n    'domInteractiveTime': '${domInteractiveTime}',\n    'externalReferrer': '${externalReferrer}',\n    'incrementalEngagedTime': '${incrementalEngagedTime}',\n    'pageDownloadTime': '${pageDownloadTime}',\n    'pageLoadTime': '${pageLoadTime}',\n    'screenHeight': '${screenHeight}',\n    'screenWidth': '${screenWidth}',\n    'screenColorDepth': '${screenColorDepth}',\n    'scrollHeight': '${scrollHeight}',\n    'scrollWidth': '${scrollWidth}',\n    'scrollTop': '${scrollTop}',\n    'scrollLeft': '${scrollLeft}',\n    'serverResponseTime': '${serverResponseTime}',\n    'timestamp': '${timestamp}',\n    'timezone': '${timezone}',\n    'title': '${title}',\n    'totalEngagedTime': '${totalEngagedTime}',\n    'totalTime': '${totalTime}',\n    'userAgent': '${userAgent}',\n    'viewportHeight': '${viewportHeight}',\n    'viewportWidth': '${viewportWidth}',\n  },\n  'transport': {\n    'beacon': true,\n    'xhrpost': true,\n    'img': false,\n    'useBody': true,\n  },\n});\n\nexport {KEEN_CONFIG};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst KENSHOO_CONFIG = jsonLiteral({\n  'vars': {\n    'clientId': 'CLIENT_ID(ken_amp_id)',\n    'channelClickId': 'QUERY_PARAM(gclid)',\n  },\n  'requests': {\n    'host': 'https://amp.xg4ken.com',\n    'parameters':\n      'ampcid=${clientId}' +\n      '&chcid=${channelClickId}' +\n      '&tid=${tid}' +\n      '&uid=${userId}' +\n      '&domain=${canonicalHostname}',\n    'landingPage': '${host}/amp/v1/match?${parameters}',\n  },\n  'triggers': {\n    'trackLandingPage': {\n      'enabled': 'QUERY_PARAM(gclid)',\n      'on': 'visible',\n      'request': 'landingPage',\n    },\n  },\n  'linkers': {\n    'linker': {\n      'ids': {\n        'clientId': '${clientId}',\n        'channelClickId': '${channelClickId}',\n      },\n      'proxyOnly': false,\n      'enabled': true,\n    },\n  },\n  'cookies': {\n    'enabled': true,\n    'ken_gclid': {\n      'value': 'QUERY_PARAM(gclid)',\n    },\n    'ken_amp_gclid': {\n      'value': 'QUERY_PARAM(gclid)',\n    },\n  },\n});\n\nexport {KENSHOO_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst KRUX_CONFIG = jsonLiteral({\n  'requests': {\n    'beaconHost': 'https://beacon.krxd.net',\n    'timing':\n      't_navigation_type=0&' +\n      't_dns=${domainLookupTime}&' +\n      't_tcp=${tcpConnectTime}&' +\n      't_http_request=${serverResponseTime}&' +\n      't_http_response=${pageDownloadTime}&' +\n      't_content_ready=${contentLoadTime}&' +\n      't_window_load=${pageLoadTime}&' +\n      't_redirect=${redirectTime}',\n    'common':\n      'source=amp&' +\n      'confid=${confid}&' +\n      '_kpid=${pubid}&' +\n      '_kcp_s=${site}&' +\n      '_kcp_sc=${section}&' +\n      '_kcp_ssc=${subsection}&' +\n      '_kcp_d=${canonicalHost}&' +\n      '_kpref_=${documentReferrer}&' +\n      '_kua_kx_amp_client_id=${clientId(_kuid_)}&' +\n      '_kua_kx_lang=${browserLanguage}&' +\n      '_kua_kx_tech_browser_language=${browserLanguage}&' +\n      '_kua_kx_tz=${timezone}',\n    'pageview': '${beaconHost}/pixel.gif?${common}&${timing}',\n    'event': '${beaconHost}/event.gif?${common}&${timing}&pageview=false',\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n  'extraUrlParamsReplaceMap': {\n    'user.': '_kua_',\n    'page.': '_kpa_',\n  },\n});\n\nexport {KRUX_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst LINKPULSE_CONFIG = jsonLiteral({\n  'vars': {\n    'id': '',\n    'pageUrl': 'CANONICAL_URL',\n    'title': 'TITLE',\n    'section': '',\n    'channel': 'amp',\n    'type': '',\n    'host': 'pp.lp4.io',\n    'empty': '',\n  },\n  'requests': {\n    'base': 'https://${host}',\n    'pageview':\n      '${base}/p?i=${id}' +\n      '&r=${documentReferrer}' +\n      '&p=${pageUrl}' +\n      '&s=${section}' +\n      '&t=${type}' +\n      '&c=${channel}' +\n      '&mt=${title}' +\n      '&_t=amp' +\n      '&_r=${random}',\n    'pageload':\n      '${base}/pl?i=${id}' +\n      '&ct=${domInteractiveTime}' +\n      '&rt=${pageDownloadTime}' +\n      '&pt=${pageLoadTime}' +\n      '&p=${pageUrl}' +\n      '&c=${channel}' +\n      '&t=${type}' +\n      '&s=${section}' +\n      '&_t=amp' +\n      '&_r=${random}',\n    'ping':\n      '${base}/u?i=${id}' +\n      '&u=${clientId(_lp4_u)}' +\n      '&p=${pageUrl}' +\n      '&uActive=true' +\n      '&isPing=yes' +\n      '&c=${channel}' +\n      '&t=${type}' +\n      '&s=${section}' +\n      '&_t=amp' +\n      '&_r=${random}',\n  },\n  'triggers': {\n    'pageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n    'pageload': {\n      'on': 'visible',\n      'request': 'pageload',\n    },\n    'ping': {\n      'on': 'timer',\n      'timerSpec': {\n        'interval': 30,\n        'maxTimerLength': 7200,\n      },\n      'request': 'ping',\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {LINKPULSE_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst LOTAME_CONFIG = jsonLiteral({\n  'requests': {\n    'pageview': 'https://bcp.crwdcntrl.net/amp?c=${account}&pv=y',\n  },\n  'triggers': {\n    'track pageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {LOTAME_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst MARINSOFTWARE_CONFIG = jsonLiteral({\n  'requests': {\n    'base': 'https://tracker.marinsm.com/tp',\n    'baseParams':\n      'cid=${trackerId}' +\n      '&ampVersion=${ampVersion}' +\n      '&ds=AMP' +\n      '&ref=${externalReferrer}' +\n      '&page=${sourceUrl}' +\n      '&uuid=${clientId(marin_amp_id)}' +\n      '&rnd=${random}',\n    'pageView': '${base}?${baseParams}&act=1',\n    'conversion':\n      '${base}?' +\n      '${baseParams}' +\n      '&act=2' +\n      '&trans=UTM:I' +\n      '|${orderId}' +\n      '|${marinConversionType}' +\n      '|${productName}' +\n      '|${category}' +\n      '|${price}' +\n      '|${quantity}',\n  },\n  'transport': {\n    'beacon': true,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {MARINSOFTWARE_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst MEDIAMETRIE_CONFIG = jsonLiteral({\n  'requests': {\n    'host': 'https://prof.estat.com/m/web',\n    'pageview':\n      '${host}/${serial}?' +\n      'c=${level1}' +\n      '&dom=${ampdocUrl}' +\n      '&enc=${documentCharset}' +\n      '&l3=${level3}' +\n      '&l4=${level4}' +\n      '&n=${random}' +\n      '&p=${level2}' +\n      '&r=${documentReferrer}' +\n      '&sch=${screenHeight}' +\n      '&scw=${screenWidth}' +\n      '&tn=amp' +\n      '&v=1' +\n      '&vh=${availableScreenHeight}' +\n      '&vw=${availableScreenWidth}',\n  },\n  'triggers': {\n    'trackPageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {MEDIAMETRIE_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst MEDIARITHMICS_CONFIG = jsonLiteral({\n  'vars': {\n    'domain': 'events.mediarithmics.com',\n    'url': 'SOURCE_URL',\n    'event_name': '$page_view',\n    'referrer': 'DOCUMENT_REFERRER',\n  },\n  'requests': {\n    'host': 'https://${domain}',\n    'pageview':\n      '${host}/v1/visits/pixel?' +\n      '$site_token=${site_token}' +\n      '&$url=${url}' +\n      '&$ev=${event_name}' +\n      '&$referrer=${referrer}',\n  },\n  'triggers': {\n    'trackPageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {MEDIARITHMICS_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst MEDIATOR_CONFIG = jsonLiteral({\n  'requests': {\n    'host': '//collector.mediator.media/script/${mediator_id}/amp/',\n    'renderstart': '${host}init/?url=${canonicalUrl}',\n    'prefix': '${host}register/?url=${canonicalUrl}&ref=${documentReferrer}&',\n    'suffix': 'vh=${viewportHeight}&sh=${scrollHeight}&st=${scrollTop}',\n    'pageview': '${prefix}e=v',\n    'timer': '${prefix}e=t&${suffix}',\n    's0': '${prefix}e=s0',\n    's1': '${prefix}e=s1',\n    's2': '${prefix}e=s2',\n    's3': '${prefix}e=s3',\n  },\n  'vars': {\n    'mediator_id': '',\n  },\n  'triggers': {\n    'renderStart': {\n      'on': 'render-start',\n      'request': 'renderstart',\n    },\n    'trackPageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n    'scrollPing0': {\n      'on': 'scroll',\n      'scrollSpec': {\n        'verticalBoundaries': [5],\n      },\n      'request': 's0',\n    },\n    'scrollPing1': {\n      'on': 'scroll',\n      'scrollSpec': {\n        'verticalBoundaries': [35],\n      },\n      'request': 's1',\n    },\n    'scrollPing2': {\n      'on': 'scroll',\n      'scrollSpec': {\n        'verticalBoundaries': [65],\n      },\n      'request': 's2',\n    },\n    'scrollPing3': {\n      'on': 'scroll',\n      'scrollSpec': {\n        'verticalBoundaries': [95],\n      },\n      'request': 's3',\n    },\n    'pageTimer': {\n      'on': 'timer',\n      'timerSpec': {\n        'interval': 5,\n        'maxTimerLength': 600,\n        'immediate': false,\n      },\n      'request': 'timer',\n    },\n  },\n});\n\nexport {MEDIATOR_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst METRIKA_CONFIG = jsonLiteral({\n  'transport': {'beacon': true, 'xhrpost': true, 'image': false},\n  'requests': {\n    'pageview': '${_watch}?browser-info=${_brInfo}&${_siteInfo}&${_suffix}',\n    'notBounce':\n      '${_watch}?browser-info=ar%3A1%3Anb%3A1%3A${_brInfo}&${_suffix}',\n    'externalLink': '${_watch}?browser-info=ln%3A1%3A${_brInfo}&${_suffix}',\n    'reachGoal':\n      '${_watch}?browser-info=ar%3A1%3A${_brInfo}&${_siteInfo}' +\n      '&${_goalSuffix}',\n    '_domain': 'https://mc.yandex.ru',\n    '_watch': '${_domain}/watch/${counterId}',\n    '_suffix': 'page-url=${sourceUrl}&page-ref=${documentReferrer}',\n    '_goalSuffix':\n      'page-url=goal%3A%2F%2F${sourceHost}%2F${goalId}' +\n      '&page-ref=${sourceUrl}',\n    '_techInfo': [\n      'amp%3A1%3Az%3A${timezone}%3Ai%3A${timestamp}%3Arn%3A${random}',\n      'la%3A${browserLanguage}%3Aen%3A${documentCharset}',\n      'rqn%3A${requestCount}',\n      's%3A${screenWidth}x${screenHeight}x${screenColorDepth}',\n      'w%3A${availableScreenWidth}x${availableScreenHeight}',\n      'ds%3A${_timings}%3Auid%3A${clientId(_ym_uid)}%3Apvid%3A${pageViewId}',\n    ].join('%3A'),\n    '_timings': [\n      '${domainLookupTime}%2C${tcpConnectTime}',\n      '${serverResponseTime}%2C${pageDownloadTime}',\n      '${redirectTime}%2C${navTiming(redirectStart,redirectEnd)}',\n      '${navRedirectCount}%2C${navTiming(domLoading,domInteractive)}',\n      '${navTiming(domContentLoadedEventStart,domContentLoadedEventEnd)}',\n      '${navTiming(navigationStart,domComplete)}',\n      '${pageLoadTime}%2C${navTiming(loadEventStart,loadEventEnd)}',\n      '${contentLoadTime}',\n    ].join('%2C'),\n    '_brInfo': '${_techInfo}%3A${_title}',\n    '_title': 't%3A${title}',\n    '_siteInfo': 'site-info=${yaParams}',\n  },\n  'triggers': {\n    'pageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n});\n\nexport {METRIKA_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {includeJsonLiteral, jsonLiteral} from '../../../../src/json';\n\nconst load = jsonLiteral(\n  JSON.stringify(\n    /** @type {!JsonObject} */ ({\n      'type': 'load',\n      'pcode': '${pcode}',\n      'l0t': '${l0t}',\n      'acctType': '${acctType}',\n      'adType': '${adType}',\n      'qs': '${qs}',\n      'element': {\n        'src': '${htmlAttr(img,src,width)}',\n        'viewer': '${viewer}',\n      },\n      'document': {\n        'AMPDocumentHostname': '${ampdocHostname}',\n        'AMPDocumentURL': '${ampdocUrl}',\n        'canonicalHost': '${canonicalHost}',\n        'canonicalHostname': '${canonicalHostname}',\n        'canonicalPath': '${canonicalPath}',\n        'canonicalURL': '${canonicalUrl}',\n        'documentCharset': '${documentCharset}',\n        'documentReferrer': '${documentReferrer}',\n        'externalReferrer': '${externalReferrer}',\n        'sourceURL': '${sourceUrl}',\n        'sourceHost': '${sourceHost}',\n        'sourceHostname': '${sourceHostname}',\n        'sourcePath': '${sourcePath}',\n        'title': '${title}',\n        'viewer': '${viewer}',\n      },\n      'device': {\n        'availableScreenHeight': '${availableScreenHeight}',\n        'availableScreenWidth': '${availableScreenWidth}',\n        'browserLanguage': '${browserLanguage}',\n        'screenColorDepth': '${screenColorDepth}',\n        'screenHeight': '${screenHeight}',\n        'screenWidth': '${screenWidth}',\n        'scrollHeight': '${scrollHeight}',\n        'scrollWidth': '${scrollWidth}',\n        'scrollLeft': '${scrollLeft}',\n        'scrollTop': '${scrollTop}',\n        'timezone': '${timezone}',\n        'userAgent': '${userAgent}',\n        'viewportHeight': '${viewportHeight}',\n        'viewportWidth': '${viewportWidth}',\n      },\n      'requestCount': '${requestCount}',\n      'timeStamp': '${timestamp}',\n    })\n  )\n);\n\nconst unload = jsonLiteral(\n  JSON.stringify(\n    /** @type {!JsonObject} */ ({\n      'type': 'unload',\n      'pcode': '${pcode}',\n      'l0t': '${l0t}',\n      'requestCount': '${requestCount}',\n      'timeStamp': '${timestamp}',\n    })\n  )\n);\n\nconst click = jsonLiteral(\n  JSON.stringify(\n    /** @type {!JsonObject} */ ({\n      'type': 'click',\n      'pcode': '${pcode}',\n      'l0t': '${l0t}',\n      'requestCount': '${requestCount}',\n      'timeStamp': '${timestamp}',\n    })\n  )\n);\n\nconst viewability = jsonLiteral(\n  JSON.stringify(\n    /** @type {!JsonObject} */ ({\n      'type': 'viewability',\n      'pcode': '${pcode}',\n      'l0t': '${l0t}',\n      'backgroundState': '${backgroundState}',\n      'intersectionRect': '${intersectionRect}',\n      'intersectionRatio': '${intersectionRatio}',\n      'maxVisiblePercentage': '${maxVisiblePercentage}',\n      'minVisiblePercentage': '${minVisiblePercentage}',\n      'x': '${elementX}',\n      'y': '${elementY}',\n      'height': '${elementHeight}',\n      'width': '${elementWidth}',\n      'viewportHeight': '${viewportHeight}',\n      'viewportWidth': '${viewportWidth}',\n      'opacity': '${opacity}',\n      'timeStamp': '${timestamp}',\n      'requestCount': '${requestCount}',\n    })\n  )\n);\n\nconst iframe = jsonLiteral(\n  JSON.stringify(\n    /** @type {!JsonObject} */ ({\n      'type': 'iframe',\n      'pcode': '${pcode}',\n      'height': '${elementHeight}',\n      'width': '${elementWidth}',\n      'x': '${elementX}',\n      'y': '${elementY}',\n      'requestCount': '${requestCount}',\n    })\n  )\n);\n\nconst MOAT_CONFIG = jsonLiteral({\n  'vars': {\n    'element': ':root',\n  },\n  'requests': {\n    'load': includeJsonLiteral(load),\n    'unload': includeJsonLiteral(unload),\n    'click': includeJsonLiteral(click),\n    'viewability': includeJsonLiteral(viewability),\n    'iframe': includeJsonLiteral(iframe),\n  },\n  'triggers': {\n    'load': {\n      'on': 'ini-load',\n      'request': 'load',\n    },\n    'unload': {\n      'on': 'ad-refresh',\n      'selector': '${element}',\n      'request': 'unload',\n    },\n    'click': {\n      'on': 'click',\n      'selector': '${element}',\n      'request': 'click',\n    },\n    'viewability': {\n      'on': 'visible',\n      'selector': '${element}',\n      'request': 'viewability',\n      'visibilitySpec': {\n        'repeat': true,\n        'visiblePercentageThresholds': [\n          [0, 0],\n          [0, 5],\n          [5, 10],\n          [10, 15],\n          [15, 20],\n          [20, 25],\n          [25, 30],\n          [30, 35],\n          [35, 40],\n          [40, 45],\n          [45, 50],\n          [50, 55],\n          [55, 60],\n          [60, 65],\n          [65, 70],\n          [70, 75],\n          [75, 80],\n          [80, 85],\n          [85, 90],\n          [90, 95],\n          [95, 100],\n          [100, 100],\n        ],\n      },\n    },\n    'iframe': {\n      'on': 'visible',\n      'selector': ':root',\n      'request': 'iframe',\n      'visibilitySpec': {\n        'repeat': true,\n        'visiblePercentageThresholds': [[0, 0]],\n      },\n    },\n  },\n});\n\nexport {MOAT_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst MOBIFY_CONFIG = jsonLiteral({\n  'vars': {\n    'projectSlug': 'mobify-project-id',\n    'templateName': 'page-type',\n  },\n  'requests': {\n    '_host': 'https://engagement-collector.mobify.net',\n    '_dimensions': [\n      '%22platform%22%3a%22AMP%22',\n      '%22client_id%22%3a%22${clientId(sandy-client-id)}%22',\n      '%22title%22%3a%22${title}%22',\n      '%22location%22%3a%22${sourceUrl}%22',\n      '%22page%22%3a%22${sourcePath}%22',\n      '%22src_location%22%3a%22${ampdocUrl}%22',\n      '%22referrer%22%3a%22${documentReferrer}%22',\n      '%22templateName%22%3a%22${templateName}%22',\n    ].join('%2c'),\n    '_basePrefix':\n      '${_host}/s.gif?' +\n      'slug=${projectSlug}&' +\n      'timestamp_local=${timestamp}&' +\n      'channel=web&' +\n      'dimensions=%7b${_dimensions}%7d',\n    'ampstart':\n      '${_basePrefix}&data=%7b%22category%22%3a%22timing%22%2c' +\n      '%22action%22%3a%22ampStart%22%2c%22value%22' +\n      '%3a${navTiming(navigationStart,domLoading)}%7d',\n    'pageview': '${_basePrefix}&data=%7b%22action%22%3a%22pageview%22%7d',\n    'pageload':\n      '${_basePrefix}&data=%7b%22category%22%3a%22timing%22%2c' +\n      '%22action%22%3a%22load%22%2c%22value%22%3a${pageLoadTime}%7d',\n    'pagedcl':\n      '${_basePrefix}&data=%7b%22category%22%3a%22timing%22%2c' +\n      '%22action%22%3a%22DOMContentLoaded%22%2c%22value%22' +\n      '%3a${contentLoadTime}%7d',\n  },\n  'triggers': {\n    'triggerName': {\n      'on': 'visible',\n      'request': ['ampstart', 'pageload', 'pagedcl'],\n    },\n    'pageview': {\n      'on': 'ini-load',\n      'request': 'pageview',\n    },\n  },\n  'transport': {\n    'beacon': true,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {MOBIFY_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst MPARTICLE_CONFIG = jsonLiteral({\n  'vars': {\n    'eventType': 'Unknown',\n    'debug': false,\n    'amp_clientId': 'CLIENT_ID(mparticle_amp_id)',\n  },\n  'requests': {\n    'host': 'https://pixels.mparticle.com',\n    'endpointPath': '/v1/${apiKey}/Pixel',\n    'baseParams':\n      'et=${eventType}&' +\n      'amp_id=${amp_clientId}&' +\n      'attrs_k=${eventAttributes_Keys}&' +\n      'attrs_v=${eventAttributes_Values}&' +\n      'ua_k=${userAttributes_Keys}&' +\n      'ua_v=${userAttributes_Values}&' +\n      'ui_t=${userIdentities_Types}&' +\n      'ui_v=${userIdentities_Values}&' +\n      'flags_k=${customFlags_Keys}&' +\n      'flags_v=${customFlags_Values}&' +\n      'ct=${timestamp}&' +\n      'dbg=${debug}&' +\n      'lc=${location}&' +\n      'av=${appVersion}',\n    'pageview':\n      '${host}${endpointPath}?' +\n      'dt=ScreenView&' +\n      'n=${pageName}&' +\n      'hn=${ampdocUrl}&' +\n      'ttl=${title}&' +\n      'path=${canonicalPath}&' +\n      '${baseParams}',\n    'event':\n      '${host}${endpointPath}?' +\n      'dt=AppEvent&' +\n      'n=${eventName}&' +\n      '${baseParams}',\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {MPARTICLE_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst MPULSE_CONFIG = jsonLiteral({\n  'requests': {\n    'onvisible':\n      'https://${beacon_url}?' +\n      'h.d=${h.d}' +\n      '&h.key=${h.key}' +\n      '&h.t=${h.t}' +\n      '&h.cr=${h.cr}' +\n      '&rt.start=navigation' +\n      '&rt.si=${clientId(amp_mpulse)}' +\n      '&rt.ss=${timestamp}' +\n      '&rt.end=${timestamp}' +\n      '&t_resp=${navTiming(navigationStart,responseStart)}' +\n      '&t_page=${navTiming(responseStart,loadEventStart)}' +\n      '&t_done=${navTiming(navigationStart,loadEventStart)}' +\n      '&nt_nav_type=${navType}' +\n      '&nt_red_cnt=${navRedirectCount}' +\n      '&nt_nav_st=${navTiming(navigationStart)}' +\n      '&nt_red_st=${navTiming(redirectStart)}' +\n      '&nt_red_end=${navTiming(redirectEnd)}' +\n      '&nt_fet_st=${navTiming(fetchStart)}' +\n      '&nt_dns_st=${navTiming(domainLookupStart)}' +\n      '&nt_dns_end=${navTiming(domainLookupEnd)}' +\n      '&nt_con_st=${navTiming(connectStart)}' +\n      '&nt_ssl_st=${navTiming(secureConnectionStart)}' +\n      '&nt_con_end=${navTiming(connectEnd)}' +\n      '&nt_req_st=${navTiming(requestStart)}' +\n      '&nt_res_st=${navTiming(responseStart)}' +\n      '&nt_unload_st=${navTiming(unloadEventStart)}' +\n      '&nt_unload_end=${navTiming(unloadEventEnd)}' +\n      '&nt_domloading=${navTiming(domLoading)}' +\n      '&nt_res_end=${navTiming(responseEnd)}' +\n      '&nt_domint=${navTiming(domInteractive)}' +\n      '&nt_domcontloaded_st=${navTiming(domContentLoadedEventStart)}' +\n      '&nt_domcontloaded_end=${navTiming(domContentLoadedEventEnd)}' +\n      '&nt_domcomp=${navTiming(domComplete)}' +\n      '&nt_load_st=${navTiming(loadEventStart)}' +\n      '&nt_load_end=${navTiming(loadEventEnd)}' +\n      '&v=1' +\n      '&http.initiator=amp' +\n      '&u=${sourceUrl}' +\n      '&amp.u=${ampdocUrl}' +\n      '&r2=${documentReferrer}' +\n      '&scr.xy=${screenWidth}x${screenHeight}',\n  },\n  'triggers': {\n    'onvisible': {\n      'on': 'visible',\n      'request': 'onvisible',\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n  'extraUrlParamsReplaceMap': {\n    'ab_test': 'h.ab',\n    'page_group': 'h.pg',\n    'custom_dimension.': 'cdim.',\n    'custom_metric.': 'cmet.',\n  },\n});\n\nexport {MPULSE_CONFIG};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst NAVEGG_CONFIG = jsonLiteral({\n  'requests': {\n    'pageview':\n      'https://amp.navdmp.com/amp?' +\n      'aid=${clientId(navegg_id)}&' +\n      'url=${canonicalUrl}&' +\n      'ref=${documentReferrer}&' +\n      'tit=${title}&' +\n      'lan=${browserLanguage}' +\n      '&acc=${account}&' +\n      'v=7',\n  },\n  'triggers': {\n    'trackpageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': {'suppressWarnings': true},\n  },\n});\n\nexport {NAVEGG_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst NEWRELIC_CONFIG = jsonLiteral({\n  'requests': {\n    'pageview':\n      'https://${beacon}/amp?appId=${appId}' +\n      '&licenseKey=${licenseKey}' +\n      '&ampUrl=${ampdocUrl}' +\n      '&canonicalUrl=${canonicalUrl}' +\n      '&timeToDomContentLoadedEventEnd=' +\n      '${navTiming(domContentLoadedEventEnd)}' +\n      '&timeToDomInteractive=${navTiming(domInteractive)}' +\n      '&timeToDomComplete=${navTiming(domComplete)}' +\n      '&timeToDomLoading=${navTiming(domLoading)}' +\n      '&timeToResponseStart=${navTiming(responseStart)}' +\n      '&timeToResponseEnd=${navTiming(responseEnd)}' +\n      '&timeToLoadEventStart=${navTiming(loadEventStart)}' +\n      '&timeToLoadEventEnd=${navTiming(loadEventEnd)}' +\n      '&timeToConnectStart=${navTiming(connectStart)}' +\n      '&timeToConnectEnd=${navTiming(connectEnd)}' +\n      '&timeToFetchStart=${navTiming(fetchStart)}' +\n      '&timeToRequestStart=${navTiming(requestStart)}' +\n      '&timeToUnloadEventStart=${navTiming(unloadEventStart)}' +\n      '&timeToUnloadEventEnd=${navTiming(unloadEventEnd)}' +\n      '&timeToDomainLookupStart=${navTiming(domainLookupStart)}' +\n      '&timeToDomainLookupEnd=${navTiming(domainLookupEnd)}' +\n      '&timeToRedirectStart=${navTiming(redirectStart)}' +\n      '&timeToRedirectEnd=${navTiming(redirectEnd)}' +\n      '&timeToSecureConnection=${navTiming(secureConnectionStart)}' +\n      '&timestamp=${timestamp}' +\n      '&ampVersion=${ampVersion}' +\n      '&pageLoadTime=${pageLoadTime}',\n  },\n  'vars': {\n    'beacon': 'bam.nr-data.net',\n    'appId': [],\n    'licenseKey': '',\n  },\n  'triggers': {\n    'trackPageview': {\n      'on': 'ini-load',\n      'request': 'pageview',\n    },\n  },\n});\n\nexport {NEWRELIC_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst NIELSEN_MARKETING_CLOUD_CONFIG = jsonLiteral({\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n  'vars': {\n    'pubId': '',\n    'siteId': '',\n  },\n  'requests': {\n    'host': 'loadeu.exelator.com',\n    'pathPrefix': 'load/',\n    'trackurl': 'https://${host}/${pathPrefix}?p=${pubId}&g=${siteId}&j=0',\n  },\n  'triggers': {\n    'defaultPageview': {\n      'on': 'visible',\n      'request': 'trackurl',\n    },\n  },\n});\n\nexport {NIELSEN_MARKETING_CLOUD_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst NIELSEN_CONFIG = jsonLiteral({\n  'vars': {\n    'sessionId': 'CLIENT_ID(imrworldwide)',\n    'prefix': '',\n  },\n  'requests': {\n    'session':\n      'https://${prefix}uaid-linkage.imrworldwide.com/cgi-bin/gn?prd=session&c13=asid,P${apid}&sessionId=${sessionId}_${pageViewId}&pingtype=4&enc=false&c61=createtm,${timestamp}&rnd=${random}',\n    'cloudapi':\n      'https://${prefix}cloudapi.imrworldwide.com/nmapi/v2/${apid}/${sessionId}_${pageViewId}/a?b=%7B%22devInfo%22%3A%7B%22devId%22%3A%22${sessionId}_${pageViewId}%22%2C%22apn%22%3A%22${apn}%22%2C%22apv%22%3A%22${apv}%22%2C%22apid%22%3A%22${apid}%22%7D%2C%22metadata%22%3A%7B%22static%22%3A%7B%22type%22%3A%22static%22%2C%22section%22%3A%22${section}%22%2C%22assetid%22%3A%22${pageViewId}%22%2C%22segA%22%3A%22${segA}%22%2C%22segB%22%3A%22${segB}%22%2C%22segC%22%3A%22${segC}%22%2C%22adModel%22%3A%220%22%2C%22dataSrc%22%3A%22cms%22%7D%2C%22content%22%3A%7B%7D%2C%22ad%22%3A%7B%7D%7D%2C%22event%22%3A%22playhead%22%2C%22position%22%3A%22${timestamp}%22%2C%22data%22%3A%7B%22hidden%22%3A%22${backgroundState}%22%2C%22blur%22%3A%22${backgroundState}%22%2C%22position%22%3A%22${timestamp}%22%7D%2C%22type%22%3A%22static%22%2C%22utc%22%3A%22${timestamp}%22%2C%22index%22%3A%22${requestCount}%22%2C%22pageURL%22%3A%22${canonicalUrl}%22%7D',\n  },\n  'triggers': {\n    'visible': {\n      'on': 'visible',\n      'request': ['session', 'cloudapi'],\n    },\n    'hidden': {\n      'on': 'hidden',\n      'request': 'cloudapi',\n    },\n    'duration': {\n      'on': 'timer',\n      'timerSpec': {\n        'interval': 10,\n        'maxTimerLength': 86400,\n        'immediate': false,\n      },\n      'request': 'cloudapi',\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n    'referrerPolicy': 'no-referrer',\n  },\n});\n\nexport {NIELSEN_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst OEWA_CONFIG = jsonLiteral({\n  'transport': {'beacon': false, 'xhrpost': false, 'image': true},\n  'requests': {\n    'pageview':\n      '${url}?s=${s}' +\n      '&amp=1' +\n      '&cp=${cp}' +\n      '&host=${canonicalHost}' +\n      '&path=${canonicalPath}',\n  },\n  'triggers': {\n    'pageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n});\n\nexport {OEWA_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst OEWADIRECT_CONFIG = jsonLiteral({\n  'transport': {'beacon': false, 'xhrpost': false, 'image': true},\n  'requests': {\n    'pageview':\n      'https://${s}.oewabox.at/j0=,,,r=${canonicalUrl};+,amp=1+cp=${cp}+ssl=1+hn=${canonicalHost};;;?lt=${pageViewId}&x=${screenWidth}x${screenHeight}x24&c=CLIENT_ID(oewa)',\n  },\n  'triggers': {\n    'pageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n});\n\nexport {OEWADIRECT_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst ORACLEINFINITYANALYTICS_CONFIG = jsonLiteral({\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n  'requests': {\n    'host': 'https://dc.oracleinfinity.io/${guid}/dcs.gif?',\n    'baseUrl': 'dcssip=${dcssip}&dcsuri=${dcsuri}',\n    'baseRef': '&dcsref=${documentReferrer}',\n    'baseEs': '&WT.es=${sourceHost}${sourcePath}',\n    'baseTi': '&WT.ti=${ti}&dcsdat=${timestamp}',\n    'basePrefix': '${baseUrl}${baseTi}${baseRef}${baseEs}',\n    'screenBs': '&WT.bs=${availableScreenWidth}x${availableScreenHeight}',\n    'screenSr': '&WT.sr=${screenWidth}x${screenHeight}',\n    'screenDc': '&WT.cd=${screenColorDepth}',\n    'screenMeasures': '${screenBs}${screenSr}${screenDc}',\n    'browserUl': '&WT.ul=${browserLanguage}',\n    'browserLe': '&WT.le=${documentCharset}',\n    'browserMeasures': '${browserUl}${browserLe}&WT.js=Yes',\n    'sessCof': '&WT.co_f=${clientId(WT_AMP)}',\n    'sessVer': '&ora.tv_amp=1.0.0&ora.amp_ver=${ampVersion}',\n    'sessionization': '${sessCof}${sessVer}&dcscfg=3',\n    'baseP1': '${host}${basePrefix}',\n    'baseP2': '${screenMeasures}${browserMeasures}${sessionization}',\n    'baseDl': '&WT.dl=${dl}',\n    'pageview': '${baseP1}${baseP2}${baseDl}',\n    'event': '${baseP1}${baseP2}${baseDl}',\n    'dlPdf': 'a[href$=\".pdf\"]',\n    'dlXls': ',a[href$=\".xls\"]',\n    'dlPpt': ',a[href$=\".ppt\"]',\n    'dlZip': ',a[href$=\".zip\"]',\n    'dlTxt': ',a[href$=\".txt\"]',\n    'dlRtf': ',a[href$=\".rtf\"]',\n    'dlXml': ',a[href$=\".xml\"]',\n    'downLoad': '${dlPdf}${dlXls}${dlPpt}${dlZip}${dlTxt}${dlRtf}${dlXml}',\n  },\n  'vars': {\n    'dcssip': '${sourceHost}',\n    'dcsuri': '${sourcePath}',\n    'dl': '0',\n    'ti': '${title}',\n  },\n  'triggers': {\n    'trackPageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n    'trackAnchorClicks': {\n      'on': 'click',\n      'selector': 'a',\n      'request': 'event',\n      'vars': {\n        'dl': '99',\n        'ti': 'Link Click',\n      },\n    },\n  },\n  'trackDownloadClicks': {\n    'on': 'click',\n    'selector': '${downLoad}',\n    'request': 'event',\n    'vars': {\n      'dl': '20',\n      'ti': 'Download Click',\n    },\n  },\n});\n\nexport {ORACLEINFINITYANALYTICS_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst PARSELY_CONFIG = jsonLiteral({\n  'requests': {\n    'host': 'https://srv.pixel.parsely.com',\n    'basePrefix':\n      '${host}/plogger/?' +\n      'rand=${timestamp}&' +\n      'idsite=${apikey}&' +\n      'url=${ampdocUrl}&' +\n      'urlref=${documentReferrer}&' +\n      'screen=${screenWidth}x${screenHeight}%7C' +\n      '${availableScreenWidth}x${availableScreenHeight}%7C' +\n      '${screenColorDepth}&' +\n      'title=${title}&' +\n      'date=${timestamp}&' +\n      'ampid=${clientId(_parsely_visitor)}',\n    'pageview':\n      '${basePrefix}&action=pageview&metadata=' +\n      '{\"canonical_url\":\"${canonicalUrl}\"}',\n    'heartbeat':\n      '${basePrefix}&action=heartbeat' +\n      '&tt=${totalEngagedTime}&inc=${incrementalEngagedTime(parsely-js)}',\n  },\n  'triggers': {\n    'defaultPageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n    'defaultHeartbeat': {\n      'on': 'timer',\n      'enabled': '${incrementalEngagedTime(parsely-js,false)}',\n      'timerSpec': {\n        'interval': 10,\n        'maxTimerLength': 7200,\n      },\n      'request': 'heartbeat',\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {PARSELY_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS-IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst PERMUTIVE_CONFIG = jsonLiteral({\n  'vars': {\n    'identity': '${clientId(_ga)}',\n  },\n  'requests': {\n    'track':\n      'https://${namespace}.amp.permutive.com/track' +\n      '?k=${key}' +\n      '&i=${identity}' +\n      '&it=amp',\n    'pageview':\n      '${track}' +\n      '&e=Pageview' +\n      '&_ep_isp_info=%24ip_isp_info' +\n      '&_ep_geo_info=%24ip_geo_info',\n    'engagement': '${track}&e=PageviewEngagement&_ep_engaged_time=5',\n    'completion': '${track}&e=PageviewEngagement&_ep_completion=0.25',\n    'custom': '${track}&e=${event}',\n  },\n  'triggers': {\n    'trackPageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n    'trackEngagement': {\n      'on': 'timer',\n      'timerSpec': {\n        'interval': 5,\n        'maxTimerLength': 600,\n        'immediate': false,\n      },\n      'request': 'engagement',\n    },\n    'trackCompletion': {\n      'on': 'scroll',\n      'scrollSpec': {\n        'verticalBoundaries': [25, 50, 75, 100],\n      },\n      'request': 'completion',\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n  'extraUrlParams': {\n    'properties.client.type': 'amp',\n    'properties.client.title': '${title}',\n    'properties.client.domain': '${canonicalHost}',\n    'properties.client.url': '${canonicalUrl}',\n    'properties.client.referrer': '${documentReferrer}',\n    'properties.client.user_agent': '${userAgent}',\n  },\n  'extraUrlParamsReplaceMap': {\n    'properties.': '_ep_',\n  },\n});\n\nexport {PERMUTIVE_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst PISTATS_CONFIG = jsonLiteral({\n  'requests': {\n    'host': 'https://events.pi-stats.com',\n    'basePrefix':\n      '${host}/eventsamp/?' +\n      'e=PageLoad&' +\n      'pid=${property}&' +\n      'url=${ampdocUrl}&' +\n      'cnt=${cntId}&' +\n      'lang=${language}&' +\n      'ref=${documentReferrer}&' +\n      'id=${clientId(piStatsDEVICEID)}&' +\n      'ua=${userAgent}&' +\n      'ctype=web&' +\n      'blang=${browserLanguage}&' +\n      'v=2.0&' +\n      'dist=Javascript',\n    'pageview': '${basePrefix}&eventtype=pageview',\n  },\n  'triggers': {\n    'defaultPageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {PISTATS_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst PIANO_CONFIG = jsonLiteral({\n  'requests': {\n    'host': 'https://api-v3.tinypass.com',\n    'basePrefix': '/api/v3',\n    'baseSuffix':\n      '&pageview_id=${pageViewId}&rand=${random}&' +\n      'amp_client_id=${clientId}&aid=${aid}',\n    'pageview':\n      '${host}${basePrefix}/page/track?url=${canonicalUrl}&' +\n      'referer=${documentReferrer}&content_created=${contentCreated}&' +\n      'content_author=${contentAuthor}&content_section=${contentSection}&' +\n      'timezone_offset=${timezone}&tags=${tags}&amp_url=${ampdocUrl}&' +\n      'screen=${screenWidth}x${screenHeight}${baseSuffix}',\n  },\n});\n\nexport {PIANO_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst PINPOLL_CONFIG = jsonLiteral({\n  'requests': {\n    'pageview':\n      '${protocol}://${host}/${version}?' +\n      'url=${sourceUrl}&' +\n      'sourceHost=${sourceHost}&' +\n      'sourceHostname=${sourceHostname}&' +\n      'sourcePath=${sourcePath}&' +\n      'canonicalUrl=${canonicalUrl}&' +\n      'platform=AMP&' +\n      'title=${title}&' +\n      'referrer=${documentReferrer}&' +\n      'screenHeight=${screenHeight}&' +\n      'screenWidth=${screenWidth}&' +\n      'screenColorDepth=${screenColorDepth}&' +\n      'ua=${userAgent}&' +\n      'clientId=${clientId(pinpoll)}',\n  },\n  'triggers': {\n    'pageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n  'vars': {\n    'version': 'v1',\n    'protocol': 'https',\n    'host': 'pa.pinpoll.com',\n  },\n});\n\nexport {PINPOLL_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst PRESSBOARD_CONFIG = jsonLiteral({\n  'vars': {\n    'mediaId': '',\n    'campaignId': '',\n    'storyRequestId': '',\n    'geoNameId': '',\n    'country': '',\n    'region': '',\n    'city': '',\n    'dbInstance': '',\n    'timeZoneOffset': '',\n    'clientId': 'CLIENT_ID(_pressboardmedia)',\n  },\n  'requests': {\n    'host': 'https://adserver.pressboard.ca',\n    'common_params':\n      '&amp=1&url=${canonicalUrl}' +\n      '&referrer=${documentReferrer}' +\n      '&ts=${timestamp}' +\n      '&ua=${userAgent}' +\n      '&rand=${random}' +\n      '&uid=${clientId}' +\n      '&mid=${mediaId}&cid=${campaignId}&sid=${storyRequestId}' +\n      '&geoid=${geoNameId}&cn=${country}&rg=${region}&ct=${city}' +\n      '&dbi=${dbInstance}&tz=${timeZoneOffset}',\n    'conversion_params':\n      '&hbt=${requestCount}' +\n      '&pvid=${pageViewId}' +\n      '&asurl=${sourceUrl}' +\n      '&ash=${scrollHeight}' +\n      '&asnh=${screenHeight}' +\n      '&aasnh=${availableScreenHeight}' +\n      '&avh=${viewportHeight}' +\n      '&ast=${scrollTop}' +\n      '&atet=${totalEngagedTime}',\n    'conversion':\n      '${host}' +\n      '/track/attention-amp?' +\n      '${common_params}' +\n      '${conversion_params}',\n  },\n  'triggers': {\n    'pageTimer': {\n      'on': 'timer',\n      'timerSpec': {\n        'interval': 1,\n        'startSpec': {\n          'on': 'visible',\n        },\n        'stopSpec': {\n          'on': 'hidden',\n        },\n      },\n      'request': 'conversion',\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {PRESSBOARD_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst QUANTCAST_CONFIG = jsonLiteral({\n  'vars': {\n    'labels': '',\n  },\n  'requests': {\n    'host': 'https://pixel.quantserve.com/pixel',\n    'pageview':\n      '${host};r=${random};a=${pcode};labels=${labels};' +\n      'fpan=;fpa=${clientId(__qca)};ns=0;ce=1;cm=;je=0;' +\n      'sr=${screenWidth}x${screenHeight}x${screenColorDepth};' +\n      'enc=n;et=${timestamp};ref=${documentReferrer};url=${canonicalUrl}',\n  },\n  'triggers': {\n    'defaultPageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {QUANTCAST_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst RAKAM_CONFIG = jsonLiteral({\n  'vars': {\n    'deviceId': 'CLIENT_ID(rakam_device_id)',\n  },\n  'requests': {\n    'base':\n      '?api.api_key=${writeKey}' +\n      '&prop._platform=amp' +\n      '&prop._device_id=${deviceId}' +\n      '&prop.locale=${browserLanguage}' +\n      '&prop.path=${canonicalPath}' +\n      '&prop.url=${canonicalUrl}' +\n      '&prop.color_depth=${screenColorDepth}' +\n      '&prop._referrer=${documentReferrer}' +\n      '&prop.title=${title}' +\n      '&prop.timezone=${timezone}' +\n      '&prop._time=${timestamp}' +\n      '&prop.resolution=${screenWidth} × ${screenHeight}',\n    'pageview':\n      'https://${apiEndpoint}/event/pixel${base}&collection=${pageViewName}',\n    'custom':\n      'https://${apiEndpoint}/event/pixel${base}&collection=${collection}',\n  },\n});\n\nexport {RAKAM_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst REPPUBLIKA_CONFIG = jsonLiteral({\n  'requests': {\n    'host': 'https://t5.mindtake.com',\n    'basePrefix': '/tag/cid/',\n    'baseSuffix':\n      'Service=${service}&Category=${category}&' +\n      'Url=${sourceUrl}&Device=${device}&uid=${random}',\n    'pageview': '${host}${basePrefix}${code}/track.gif?${baseSuffix}',\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {REPPUBLIKA_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst RETARGETLY_CONFIG = jsonLiteral({\n  'requests': {\n    'host': 'https://api.retargetly.com',\n    'page':\n      '${host}/api?id=${accountId}&src=${sourceId}&url=${sourceUrl}' +\n      '&n=${title}&ref=${documentReferrer}&ua=${userAgent}' +\n      '&random=${random}&bl=${browserLanguage}&source=amp',\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n  'triggers': {\n    'trackPageview': {\n      'on': 'visible',\n      'request': 'page',\n    },\n  },\n});\n\nexport {RETARGETLY_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst SEGMENT_CONFIG = jsonLiteral({\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n  'vars': {\n    'anonymousId': 'CLIENT_ID(AMP_ECID_GOOGLE,,_ga)',\n  },\n  'requests': {\n    'host': 'https://api.segment.io/v1/pixel',\n    'base':\n      '?writeKey=${writeKey}' +\n      '&context.library.name=amp' +\n      '&anonymousId=${anonymousId}' +\n      '&context.locale=${browserLanguage}' +\n      '&context.page.path=${canonicalPath}' +\n      '&context.page.url=${canonicalUrl}' +\n      '&context.page.referrer=${documentReferrer}' +\n      '&context.page.title=${title}' +\n      '&context.screen.width=${screenWidth}' +\n      '&context.screen.height=${screenHeight}',\n    'page': '${host}/page${base}&name=${name}',\n    'track': '${host}/track${base}&event=${event}',\n  },\n  'triggers': {\n    'page': {\n      'on': 'visible',\n      'request': 'page',\n    },\n  },\n  'linkers': {\n    'segment': {\n      'ids': {\n        's_amp_id': '${anonymousId}',\n      },\n      'proxyOnly': false,\n    },\n  },\n  'cookies': {\n    '_ga': {\n      'value': 'LINKER_PARAM(segment, s_amp_id)',\n    },\n  },\n});\n\nexport {SEGMENT_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst SHINYSTAT_CONFIG = jsonLiteral({\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n  'requests': {\n    'base': 'https://amp.shinystat.com/cgi-bin/shinyamp.cgi',\n    'commpar':\n      'AMP=1&RM=${random}' +\n      '&USER=${account}' +\n      '&PAG=${page}' +\n      '&HR=${sourceUrl}' +\n      '&REFER=${documentReferrer}' +\n      '&RES=${screenWidth}X${screenHeight}' +\n      '&COLOR=${screenColorDepth}' +\n      '&CID=${clientId(AMP_CID)}' +\n      '&PAGID=${pageViewId}' +\n      '&TITL=${title}' +\n      '&RQC=${requestCount}',\n    'pagepar': '&VIE=${viewer}&PLT=${pageLoadTime}',\n    'eventpar': '&SSXL=1',\n    'linkpar': '&LINK=${outboundLink}',\n    'pageview': '${base}?${commpar}${pagepar}',\n    'event': '${base}?${commpar}${eventpar}',\n    'link': '${base}?${commpar}${linkpar}',\n  },\n  'triggers': {\n    'pageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n});\n\nexport {SHINYSTAT_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst SIMPLEREACH_CONFIG = jsonLiteral({\n  'vars': {\n    'pid': '',\n    'published_at': '',\n    'authors': [],\n    'channels': [],\n    'tags': [],\n  },\n  'requests': {\n    'host': 'https://edge.simplereach.com',\n    'baseParams':\n      'amp=true' +\n      '&pid=${pid}' +\n      '&title=${title}' +\n      '&url=${canonicalUrl}' +\n      '&date=${published_at}' +\n      '&authors=${authors}' +\n      '&channels=${categories}' +\n      '&tags=${tags}' +\n      '&referrer=${documentReferrer}' +\n      '&page_url=${sourceUrl}' +\n      '&user_id=${clientId(sr_amp_id)}' +\n      '&domain=${canonicalHost}' +\n      '&article_id=${article_id}' +\n      '&ignore_metadata=${ignore_metadata}',\n    'visible': '${host}/n?${baseParams}',\n    'timer': '${host}/t?${baseParams}&t=5000&e=5000',\n  },\n  'triggers': {\n    'visible': {\n      'on': 'visible',\n      'request': 'visible',\n    },\n    'timer': {\n      'on': 'timer',\n      'timerSpec': {\n        'interval': 5,\n        'maxTimerLength': 1200,\n      },\n      'request': 'timer',\n    },\n  },\n});\n\nexport {SIMPLEREACH_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst SNOWPLOW_CONFIG = jsonLiteral({\n  'vars': {\n    'duid': 'CLIENT_ID(_sp_id)',\n  },\n  'requests': {\n    'aaVersion': 'amp-0.3',\n    'basePrefix':\n      'https://${collectorHost}/i?url=${canonicalUrl}&page=${title}&' +\n      'res=${screenWidth}x${screenHeight}&stm=${timestamp}&' +\n      'tz=${timezoneCode}&aid=${appId}&p=web&tv=${aaVersion}&' +\n      'cd=${screenColorDepth}&cs=${documentCharset}&' +\n      'duid=${duid}&' +\n      'lang=${browserLanguage}&refr=${documentReferrer}&' +\n      'vp=${viewportWidth}x${viewportHeight}&' +\n      'ds=${scrollWidth}x${scrollHeight}',\n    'pageView': '${basePrefix}&e=pv',\n    'structEvent':\n      '${basePrefix}&e=se&' +\n      'se_ca=${structEventCategory}&se_ac=${structEventAction}&' +\n      'se_la=${structEventLabel}&se_pr=${structEventProperty}&' +\n      'se_va=${structEventValue}',\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {SNOWPLOW_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst TEAANALYTICS_CONFIG = jsonLiteral({\n  vars: {\n    userUniqueId: '${clientId(__tea_sdk__user_unique_id)}',\n    debug: 0,\n  },\n  requests: {\n    domain: 'https://${channel}/v1/amp',\n    commonParams:\n      'user.user_unique_id=${userUniqueId}' +\n      '&header.app_id=${app_id}' +\n      '&header.language=${browserLanguage}' +\n      '&header.screen_height=${screenHeight}' +\n      '&header.screen_width=${screenWidth}' +\n      '&header.resolution=${screenHeight}x${screenWidth}' +\n      '&header.tz_offset=${timezone}' +\n      '&header.tz_name=${timezoneCode}' +\n      '&header.referrer=${documentReferrer}' +\n      '&header.custom.user_agent=${userAgent}' +\n      '&event.local_time_ms=${timestamp}' +\n      '&event.params._staging_flag=${debug}' +\n      '&verbose=${debug}',\n    base: '${domain}?${commonParams}&rnd=${random}',\n    pageview:\n      '${base}' +\n      '&event=predefine_pageview' +\n      '&event.params.url=${sourceUrl}' +\n      '&event.params.url_path=${sourcePath}' +\n      '&event.params.title=${title}',\n    event: '${base}',\n  },\n});\n\nexport {TEAANALYTICS_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst TEALIUMCOLLECT_CONFIG = jsonLiteral({\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n  'vars': {\n    'account': 'TEALIUM_ACCOUNT',\n    'profile': 'TEALIUM_PROFILE',\n    'datasource': 'TEALIUM_DATASOURCE',\n    'visitor_id': 'CLIENT_ID(AMP_ECID_GOOGLE,,_ga)',\n  },\n  'requests': {\n    'host': 'https://collect.tealiumiq.com',\n    'base':\n      '${host}/event/?${tealium}&' +\n      '${dom1}&${dom2}&${datetime}&' +\n      'tealium_event=${tealium_event}&' +\n      'amp_version=${ampVersion}&' +\n      'amp_request_count=${requestCount}',\n    'tealium':\n      'tealium_account=${account}&' +\n      'tealium_profile=${profile}&' +\n      'tealium_datasource=${datasource}&' +\n      'tealium_visitor_id=${visitor_id}',\n    'dom1':\n      'url=${sourceUrl}&ampdoc_url=${ampdocUrl}&' +\n      'domain=${sourceHost}&pathname=${sourcePath}&' +\n      'amp_hostname=${ampdocHostname}&' +\n      'canonical_hostname=${canonicalHostname}',\n    'dom2':\n      'title=${title}&' +\n      'viewport_width=${availableScreenWidth}&' +\n      'viewport_height=${availableScreenHeight}',\n    'datetime': 'timestamp=${timestamp}&tz=${timezone}&lang=${browserLanguage}',\n    'pageview':\n      '${base}&referrer=${documentReferrer}&' +\n      'screen_size=${screenWidth}x${screenHeight}&' +\n      'content_load_ms=${contentLoadTime}&' +\n      'page_view_id=${pageViewId}',\n    'event': '${base}&scroll_y=${scrollTop}&scroll_x=${scrollLeft}',\n  },\n  'triggers': {\n    'defaultPageview': {\n      'on': 'visible',\n      'request': 'pageview',\n      'vars': {\n        'tealium_event': 'screen_view',\n      },\n    },\n  },\n});\n\nexport {TEALIUMCOLLECT_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst TOP100_CONFIG = jsonLiteral({\n  'vars': {\n    'pid': '',\n    'rid': 'PAGE_VIEW_ID',\n    'ruid': 'CLIENT_ID(ruid)',\n    'version': '1.0.0',\n  },\n  'requests': {\n    'host': 'https://kraken.rambler.ru',\n    'base':\n      '${host}/cnt/?pid=${pid}' +\n      '&rid=${rid}' +\n      '&v=${version}' +\n      '&rn=${random}' +\n      '&ruid=${ruid}' +\n      '&ct=amp',\n    'pageview': '${base}&et=pv${_pageData}${_screenData}',\n    '_screenData':\n      '&sr=${screenWidth}x${screenHeight}' +\n      '&cd=${screenColorDepth}-bit' +\n      '&bs=${scrollWidth}x${scrollHeight}',\n    '_pageData':\n      '&pt=${title}' +\n      '&rf=${documentReferrer}' +\n      '&en=${documentCharset}' +\n      '&la=${browserLanguage}' +\n      '&tz=${timezone}',\n  },\n  'triggers': {\n    'trackPageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {TOP100_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst TOPMAILRU_CONFIG = jsonLiteral({\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n  'vars': {\n    'url': '${sourceUrl}',\n    'referrer': '${documentReferrer}',\n  },\n  'requests': {\n    'pageView': '${_domain}/counter?${_basicMessage};title=${title}',\n    'reachGoal':\n      '${_domain}/tracker?${_basicMessage};title=${title}' +\n      ';e=RG%3A${value}%2F${goal}',\n    'sendEvent':\n      '${_domain}/tracker?${_basicMessage}' +\n      ';e=CE%3A${value}%2F${category}%3B${action}%3B${label}',\n    '_domain': 'https://top-fwz1.mail.ru',\n    '_basicMessage':\n      'js=13;id=${id};u=${url};r=${referrer}' +\n      ';s=${screenWidth}*${screenHeight}' +\n      ';vp=${viewportWidth}*${viewportHeight}' +\n      ';st=${start};gender=${gender};age=${age}' +\n      ';pid=${pid};userid=${userid};device=${device}' +\n      ';params=${params};_=${random}',\n  },\n  'triggers': {\n    'pageView': {\n      'on': 'visible',\n      'request': 'pageView',\n    },\n  },\n});\n\nexport {TOPMAILRU_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst TREASUREDATA_CONFIG = jsonLiteral({\n  'vars': {\n    'host': 'in.treasuredata.com',\n    'writeKey': '',\n    'database': '',\n    'table': 'events',\n  },\n  'requests': {\n    'base': 'https://${host}/postback/v3/event/${database}',\n    'baseParams':\n      'td_write_key=${writeKey}' +\n      '&td_global_id=td_global_id' +\n      '&td_client_id=CLIENT_ID(_td)' +\n      '&td_charset=DOCUMENT_CHARSET' +\n      '&td_language=BROWSER_LANGUAGE' +\n      '&td_color=SCREEN_COLOR_DEPTH' +\n      '&td_screen=${screenWidth}x${scrollHeight}' +\n      '&td_viewport=${availableScreenWidth}x${availableScreenHeight}' +\n      '&td_title=TITLE' +\n      '&td_url=SOURCE_URL' +\n      '&td_user_agent=USER_AGENT' +\n      '&td_host=SOURCE_HOST' +\n      '&td_path=SOURCE_PATH' +\n      '&td_referrer=DOCUMENT_REFERRER' +\n      '&td_ip=td_ip',\n    'pageview': '${base}/${table}?${baseParams}',\n    'event': '${base}/${table}?${baseParams}',\n  },\n});\n\nexport {TREASUREDATA_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst UMENGANALYTICS_CONFIG = jsonLiteral({\n  'vars': {\n    'siteid': '',\n    'initial_view_time': '',\n    'eventName': '',\n    'eventProps': '',\n  },\n  'requests': {\n    'base':\n      'https://b.cnzz.com/utrack?' +\n      '&_siteid=${siteid}' +\n      '&_distinct_id=${clientId(umeng_amp_id)}' +\n      '&_t=${timestamp}' +\n      '&_s=google' +\n      '&_b=web' +\n      '&_r=${externalReferrer}' +\n      '&_h=${screenHeight}' +\n      '&_w=${screenWidth}' +\n      '&_ivt=${initial_view_time}',\n    'pageview': '${base}&_ename=$w_page_view&_eprops=${eventProps}',\n    'event': '${base}&_ename=${eventName}&_eprops=${eventProps}',\n  },\n  'triggers': {\n    'defaultPageview': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {UMENGANALYTICS_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst UPSCORE_CONFIG = jsonLiteral({\n  'requests': {\n    'host': 'https://hit-pool.upscore.com/amp?',\n    'basePrefix':\n      'u_id=${clientId(upscore)}&' +\n      'hit_id=${pageViewId}&' +\n      'scTop=${scrollTop}&' +\n      'scHeight=${scrollHeight}&' +\n      'vHeight=${viewportHeight}&' +\n      'domain=${domain}&' +\n      'load=${domInteractiveTime}&' +\n      'timespent=${totalEngagedTime}',\n    'initialHit':\n      'author=${author}&' +\n      'creator=${creator}&' +\n      'o_id=${object_id}&' +\n      'o_type=${object_type}&' +\n      'pubdate=${pubdate}&' +\n      'ref=${documentReferrer}&' +\n      'section=${section}&' +\n      'url=${ampdocUrl}&' +\n      'agent=${userAgent}&' +\n      'location=${ampGeo(ISOCountry)}',\n    'finalbeat': '${host}${basePrefix}&type=final',\n    'heartbeat': '${host}${basePrefix}&type=pulse',\n    'pageview': '${host}${basePrefix}&${initialHit}&type=init',\n  },\n  'triggers': {\n    'initHit': {\n      'on': 'visible',\n      'request': 'pageview',\n    },\n    'pulse': {\n      'on': 'timer',\n      'timerSpec': {\n        'interval': 10,\n        'immediate': false,\n        'stopSpec': {\n          'on': 'hidden',\n        },\n      },\n      'request': 'heartbeat',\n    },\n    'final': {\n      'on': 'hidden',\n      'visibilitySpec': {\n        'totalTimeMin': 5000,\n      },\n      'request': 'finalbeat',\n    },\n  },\n  'transport': {\n    'beacon': true,\n    'xhrpost': true,\n    'image': false,\n  },\n});\n\nexport {UPSCORE_CONFIG};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst VPONANALYTICS_CONFIG = jsonLiteral({\n  'vars': {\n    'ctid': '${clientId(vpadn-ctid)}',\n  },\n  'requests': {\n    'host': 'https://tags-dmp.vpadn.com',\n    'sync': 'https://ids-dmp.vpadn.com/set?t=${timestamp}&dn=&ctid=${ctid}',\n    'scroll':\n      '${host}/et?t=${timestamp}&sdkn=j&sdkv=1.2.0&lk=${licence_key}' +\n      '&en=UTF-8&ctid=${ctid}&ev=element_interact&' +\n      'pl={\"name\":\"${category}\",\"action\":\"${action}\",' +\n      '\"value\":\"${documentReferrer}\"}',\n    'event':\n      '${host}/et?t=${timestamp}&sdkn=j&sdkv=1.2.0&lk=${licence_key}' +\n      '&en=UTF-8&ctid=${ctid}&ev=${ev_name}&pl=${payload}',\n    'elementInteract':\n      '${host}/et?t=${timestamp}&sdkn=j&' +\n      'sdkv=1.2.0&lk=${licence_key}' +\n      '&en=UTF-8&ctid=${ctid}&ev=element_interact&' +\n      'pl={\"name\":\"${category}\",\"action\":\"${action}\",' +\n      '\"value\":\"${label}\"}',\n  },\n  'extraUrlParams': {\n    'is_amp': '1',\n    'page_id': '${pageViewId}',\n  },\n  'triggers': {\n    'cookieSync': {\n      'on': 'visible',\n      'request': 'sync',\n    },\n    'trackPageview': {\n      'on': 'visible',\n      'request': 'event',\n      'vars': {\n        'ev_name': 'page_view',\n        'payload':\n          '{\"title\":\"${title}\",\"current\":\"${canonicalUrl}\"' +\n          ',\"previous\":\"${documentReferrer}\"}',\n      },\n    },\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {VPONANALYTICS_CONFIG};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst WEBENGAGE_CONFIG = jsonLiteral({\n  'requests': {\n    'base':\n      'https://c.${region}.webengage.com/amp?licenseCode=${licenseCode}&luid=${clientId(we_luid)}&pageUrl=${canonicalUrl}&pageTitle=${title}&referrer=${documentReferrer}&vh=${viewportHeight}&vw=${viewportWidth}&category=application',\n    'wePageview': {\n      'baseUrl': '${base}&eventName=Page Viewed',\n    },\n  },\n  'extraUrlParams': {\n    'isAmp': 1,\n  },\n  'triggers': {\n    'wePageviewTrigger': {\n      'on': 'visible',\n      'request': 'wePageview',\n    },\n  },\n});\n\nexport {WEBENGAGE_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst WEBTREKK_CONFIG = jsonLiteral({\n  'requests': {\n    'trackURL': 'https://${trackDomain}/${trackId}/wt',\n    'parameterPrefix':\n      '?p=432,${contentId},1,' +\n      '${screenWidth}x${screenHeight},${screenColorDepth},1,' +\n      '${timestamp},${documentReferrer},${viewportWidth}x' +\n      '${viewportHeight},0&tz=${timezone}' +\n      '&eid=${clientId(amp-wt3-eid)}&la=${browserLanguage}',\n    'parameterSuffix': '&pu=${sourceUrl}',\n    'pageParameter':\n      '&cp1=${pageParameter1}' +\n      '&cp2=${pageParameter2}&cp3=${pageParameter3}' +\n      '&cp4=${pageParameter4}&cp5=${pageParameter5}' +\n      '&cp6=${pageParameter6}&cp7=${pageParameter7}' +\n      '&cp8=${pageParameter8}&cp9=${pageParameter9}' +\n      '&cp10=${pageParameter10}',\n    'pageCategories':\n      '&cg1=${pageCategory1}' +\n      '&cg2=${pageCategory2}&cg3=${pageCategory3}' +\n      '&cg4=${pageCategory4}&cg5=${pageCategory5}' +\n      '&cg6=${pageCategory6}&cg7=${pageCategory7}' +\n      '&cg8=${pageCategory8}&cg9=${pageCategory9}' +\n      '&cg10=${pageCategory10}',\n    'pageview':\n      '${trackURL}${parameterPrefix}${pageParameter}' +\n      '${pageCategories}${parameterSuffix}',\n    'actionParameter':\n      '&ck1=${actionParameter1}' +\n      '&ck2=${actionParameter2}&ck3=${actionParameter3}' +\n      '&ck4=${actionParameter4}&ck5=${actionParameter5}',\n    'event':\n      '${trackURL}${parameterPrefix}&ct=${actionName}' +\n      '${actionParameter}${parameterSuffix}',\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {WEBTREKK_CONFIG};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonLiteral} from '../../../../src/json';\n\nconst WEBTREKK_V2_CONFIG = jsonLiteral({\n  'vars': {\n    'actionName': 'webtrekk_ignore',\n    'contentId': '${title}',\n    'mediaName': '${id}',\n    'everId': '${clientId(amp-wt3-eid)}',\n  },\n  'requests': {\n    'trackURL': 'https://${trackDomain}/${trackId}/wt',\n    'basePrefix':\n      '?p=440,${contentId},1,' +\n      '${screenWidth}x${screenHeight},${screenColorDepth},1,',\n    'baseSuffix':\n      ',${documentReferrer},' +\n      '${viewportWidth}x${viewportHeight},0' +\n      '&tz=${timezone}&eid=${everId}&la=${browserLanguage}',\n    'parameterPrefix': '${basePrefix}${timestamp}${baseSuffix}',\n    'parameterSuffix': '&pu=${sourceUrl}&eor=1',\n    'pageview':\n      '${trackURL}${parameterPrefix}&${extraUrlParams}' +\n      '&cp570=${pageLoadTime}${parameterSuffix}',\n    'event':\n      '${trackURL}${parameterPrefix}&ct=${actionName}' +\n      '&${extraUrlParams}${parameterSuffix}',\n    'scroll':\n      '${trackURL}${parameterPrefix}&ct=${actionName}' +\n      '&ck540=${verticalScrollBoundary}${parameterSuffix}',\n    'mediaPrefix': '${trackURL}${basePrefix}${baseSuffix}&mi=${mediaName}',\n    'mediaSuffix':\n      '&mt1=${currentTime}&mt2=${duration}' +\n      '&${extraUrlParams}${parameterSuffix}&x=${playedTotal}',\n    'mediaPlay': '${mediaPrefix}&mk=play${mediaSuffix}',\n    'mediaPause': '${mediaPrefix}&mk=pause${mediaSuffix}',\n    'mediaPosition': '${mediaPrefix}&mk=pos${mediaSuffix}',\n    'mediaEnded': '${mediaPrefix}&mk=eof${mediaSuffix}',\n  },\n  'extraUrlParamsReplaceMap': {\n    'pageParameter': 'cp',\n    'contentGroup': 'cg',\n    'actionParameter': 'ck',\n    'sessionParameter': 'cs',\n    'ecommerceParameter': 'cb',\n    'urmCategory': 'uc',\n    'campaignParameter': 'cc',\n    'mediaCategory': 'mg',\n  },\n  'transport': {\n    'beacon': false,\n    'xhrpost': false,\n    'image': true,\n  },\n});\n\nexport {WEBTREKK_V2_CONFIG};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {VisibilityManager} from './visibility-manager';\nimport {dev, devAssert} from '../../../src/log';\nimport {dict} from '../../../src/utils/object';\nimport {getMinOpacity} from './opacity';\n\nconst TAG = 'amp-analytics/visibility-manager';\n\nexport class VisibilityManagerForMApp extends VisibilityManager {\n  /**\n   *\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {!../../../src/inabox/host-services.VisibilityInterface} visibilityInterface\n   */\n  constructor(ampdoc, visibilityInterface) {\n    super(/* parent */ null, ampdoc);\n\n    /**\n     * In VisibilityManagerForMApp case,\n     */\n\n    /** @const @private {!../../../src/inabox/host-services.VisibilityInterface} */\n    this.visibilityInterface_ = visibilityInterface;\n\n    /** @const @private {boolean} */\n    this.backgroundedAtStart_ = !ampdoc.isVisible();\n\n    /** @private {?../../../src/layout-rect.LayoutRectDef} */\n    this.intersectionRect_ = null;\n\n    /** @private {boolean} */\n    this.disposed_ = false;\n\n    // Initate the listener\n    this.visibilityInterface_.onVisibilityChange(\n      this.onVisibilityChangeHandler_.bind(this)\n    );\n  }\n\n  /** @override */\n  dispose() {\n    super.dispose();\n    this.disposed_ = true;\n  }\n\n  /** @override */\n  getStartTime() {\n    // AmpDoc.getFirstVisibleTime depend on the visibilitychange API and\n    // document['hidden']\n    // Expect the ampdoc is always visible in webview\n    return dev().assertNumber(this.ampdoc.getFirstVisibleTime());\n  }\n\n  /** @override */\n  isBackgrounded() {\n    // Listens to visibilitychange event, in theory this never fires\n    return !this.ampdoc.isVisible();\n  }\n\n  /** @override */\n  isBackgroundedAtStart() {\n    // Return the first visible state. In theory this is always true in mApp\n    return this.backgroundedAtStart_;\n  }\n\n  /** @override */\n  getRootMinOpacity() {\n    // Copied the implementation from VisibilityManagerForDoc,\n    // doesn't count iframe opacity\n    const root = this.ampdoc.getRootNode();\n    const rootElement = dev().assertElement(\n      root.documentElement || root.body || root\n    );\n    return getMinOpacity(rootElement);\n  }\n\n  /** @override */\n  listenElement() {\n    // #listenElement not supported in mApp\n    devAssert(\n      false,\n      '%s: element level visibility not supported, ' +\n        'getElementIntersectionRect should not be called in ' +\n        'VisibilityManager for mApp',\n      TAG\n    );\n    return () => {};\n  }\n\n  /**\n   * @override\n   */\n  getRootLayoutBox() {\n    // By the time `#getRootLayoutBox` is called, it is guaranteed that\n    // onVisibilityChangeHandler has been called at least once\n    return /** @type {!../../../src/layout-rect.LayoutRectDef} */ (devAssert(\n      this.intersectionRect_\n    ));\n  }\n\n  /**\n   * @param {!../../../src/inabox/host-services.VisibilityDataDef} visibilityData\n   * @private\n   */\n  onVisibilityChangeHandler_(visibilityData) {\n    if (this.disposed_) {\n      return;\n    }\n    //TODO: Need discussion\n    // rootVisibility is set by hostAPI, instead of ampdoc.isVisible\n    let ratio = visibilityData.visibleRatio;\n    // Convert to valid ratio range in [0, 1]\n    ratio = Math.min(Math.max(0, ratio), 1);\n    this.setRootVisibility(ratio);\n    this.intersectionRect_ = visibilityData.visibleRect;\n  }\n\n  /**\n   * @override\n   */\n  observe() {\n    devAssert(\n      false,\n      '%s: element level visibility not supported, ' +\n        'getElementIntersectionRect should not be called in ' +\n        'VisibilityManager for mApp',\n      TAG\n    );\n    return () => {};\n  }\n\n  /**\n   * @override\n   */\n  getElementVisibility() {\n    devAssert(\n      false,\n      '%s: element level visibility not supported, ' +\n        'getElementIntersectionRect should not be called in ' +\n        'VisibilityManager for mApp',\n      TAG\n    );\n    return 0;\n  }\n\n  /**\n   * @override\n   * @return {?JsonObject}\n   */\n  getElementIntersectionRect() {\n    dev().error(\n      TAG,\n      'element level visibility not supported, ' +\n        'getElementIntersectionRect should not be called in ' +\n        'VisibilityManager for mApp'\n    );\n    return dict({});\n  }\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_THRESHOLD,\n  IntersectionObserverPolyfill,\n  nativeIntersectionObserverSupported,\n} from '../../../src/intersection-observer-polyfill';\nimport {Services} from '../../../src/services';\nimport {VisibilityModel} from './visibility-model';\nimport {dev, user} from '../../../src/log';\nimport {dict, map} from '../../../src/utils/object';\nimport {getFriendlyIframeEmbedOptional} from '../../../src/iframe-helper';\nimport {getMinOpacity} from './opacity';\nimport {getMode} from '../../../src/mode';\nimport {getParentWindowFrameElement} from '../../../src/service';\nimport {isArray, isFiniteNumber} from '../../../src/types';\nimport {\n  layoutPositionRelativeToScrolledViewport,\n  layoutRectLtwh,\n} from '../../../src/layout-rect';\n\nconst TAG = 'amp-analytics/visibility-manager';\n\nconst PROP = '__AMP_VIS';\nconst VISIBILITY_ID_PROP = '__AMP_VIS_ID';\n\n/** @type {number} */\nlet visibilityIdCounter = 1;\n\n/**\n * @param {!Element} element\n * @return {number}\n */\nfunction getElementId(element) {\n  let id = element[VISIBILITY_ID_PROP];\n  if (!id) {\n    id = ++visibilityIdCounter;\n    element[VISIBILITY_ID_PROP] = id;\n  }\n  return id;\n}\n\n/**\n * @param {!Node} rootNode\n * @return {!VisibilityManager}\n */\nexport function provideVisibilityManager(rootNode) {\n  if (!rootNode[PROP]) {\n    rootNode[PROP] = createVisibilityManager(rootNode);\n  }\n  return rootNode[PROP];\n}\n\n/**\n * @param {!Node} rootNode\n * @return {!VisibilityManager}\n */\nfunction createVisibilityManager(rootNode) {\n  // TODO(#22733): cleanup when ampdoc-fie is launched.\n  const ampdoc = Services.ampdoc(rootNode);\n  const frame = getParentWindowFrameElement(rootNode);\n  const embed = frame && getFriendlyIframeEmbedOptional(frame);\n  if (embed && frame && frame.ownerDocument) {\n    return new VisibilityManagerForEmbed(\n      provideVisibilityManager(frame.ownerDocument),\n      embed\n    );\n  }\n  return new VisibilityManagerForDoc(ampdoc);\n}\n\n/**\n * A base class for `VisibilityManagerForDoc` and `VisibilityManagerForEmbed`.\n * The instance of this class corresponds 1:1 to `AnalyticsRoot`. It represents\n * a collection of all visibility triggers declared within the `AnalyticsRoot`.\n * @implements {../../../src/service.Disposable}\n * @abstract\n */\nexport class VisibilityManager {\n  /**\n   * @param {?VisibilityManager} parent\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(parent, ampdoc) {\n    /** @const @protected */\n    this.parent = parent;\n\n    /** @const @protected */\n    this.ampdoc = ampdoc;\n\n    /** @const @private */\n    this.resources_ = Services.resourcesForDoc(ampdoc);\n\n    /** @private {number} */\n    this.rootVisibility_ = 0;\n\n    /** @const @private {!Array<!VisibilityModel>}> */\n    this.models_ = [];\n\n    /** @private {?Array<!VisibilityManager>} */\n    this.children_ = null;\n\n    /** @const @private {!Array<!UnlistenDef>} */\n    this.unsubscribe_ = [];\n\n    /** @private {number} Maximum scroll position attained */\n    this.maxScrollDepth_ = 0;\n\n    if (this.parent) {\n      this.parent.addChild_(this);\n    }\n\n    const viewport = Services.viewportForDoc(this.ampdoc);\n    viewport.onChanged(() => {\n      this.maybeUpdateMaxScrollDepth(viewport.getScrollTop());\n    });\n  }\n\n  /**\n   * @param {!VisibilityManager} child\n   * @private\n   */\n  addChild_(child) {\n    if (!this.children_) {\n      this.children_ = [];\n    }\n    this.children_.push(child);\n  }\n\n  /**\n   * @param {!VisibilityManager} child\n   * @private\n   */\n  removeChild_(child) {\n    if (this.children_) {\n      const index = this.children_.indexOf(child);\n      if (index != -1) {\n        this.children_.splice(index, 1);\n      }\n    }\n  }\n\n  /** @override */\n  dispose() {\n    // Give the chance for all events to complete.\n    this.setRootVisibility(0);\n\n    // Dispose all models.\n    for (let i = this.models_.length - 1; i >= 0; i--) {\n      this.models_[i].dispose();\n    }\n\n    // Unsubscribe everything else.\n    this.unsubscribe_.forEach(unsubscribe => {\n      unsubscribe();\n    });\n    this.unsubscribe_.length = 0;\n\n    if (this.parent) {\n      this.parent.removeChild_(this);\n    }\n    if (this.children_) {\n      for (let i = 0; i < this.children_.length; i++) {\n        this.children_[i].dispose();\n      }\n    }\n  }\n\n  /**\n   * @param {!UnlistenDef} handler\n   */\n  unsubscribe(handler) {\n    this.unsubscribe_.push(handler);\n  }\n\n  /**\n   * The start time from which all visibility events and times are measured.\n   * @return {number}\n   * @abstract\n   */\n  getStartTime() {}\n\n  /**\n   * Whether the visibility root is currently in the background.\n   * @return {boolean}\n   * @abstract\n   */\n  isBackgrounded() {}\n\n  /**\n   * Whether the visibility root has been created in the background mode.\n   * @return {boolean}\n   * @abstract\n   */\n  isBackgroundedAtStart() {}\n\n  /**\n   * Returns the root's, root's parent's and root's children's\n   * lowest opacity value\n   * @return {number}\n   * @abstract\n   */\n  getRootMinOpacity() {}\n\n  /**\n   * Returns the root's layout rect.\n   * @return {!../../../src/layout-rect.LayoutRectDef}\n   * @abstract\n   */\n  getRootLayoutBox() {}\n\n  /**\n   * @return {number}\n   */\n  getRootVisibility() {\n    if (!this.parent) {\n      return this.rootVisibility_;\n    }\n    return this.parent.getRootVisibility() > 0 ? this.rootVisibility_ : 0;\n  }\n\n  /**\n   * @param {number} visibility\n   */\n  setRootVisibility(visibility) {\n    this.rootVisibility_ = visibility;\n    this.updateModels_();\n    if (this.children_) {\n      for (let i = 0; i < this.children_.length; i++) {\n        this.children_[i].updateModels_();\n      }\n    }\n  }\n\n  /**\n   * Update the maximum amount that the user has scrolled down the page.\n   * @param {number} depth\n   */\n  maybeUpdateMaxScrollDepth(depth) {\n    if (depth > this.maxScrollDepth_) {\n      this.maxScrollDepth_ = depth;\n    }\n  }\n\n  /**\n   * Gets the maximum amount that the user has scrolled down the page.\n   * @return {number} depth\n   */\n  getMaxScrollDepth() {\n    return this.maxScrollDepth_;\n  }\n\n  /** @private */\n  updateModels_() {\n    for (let i = 0; i < this.models_.length; i++) {\n      this.models_[i].update();\n    }\n  }\n\n  /**\n   * Listens to the visibility events on the root as the whole and the given\n   * visibility spec. The visibility tracking can be deferred until\n   * `readyPromise` is resolved, if specified.\n   * @param {!JsonObject} spec\n   * @param {?Promise} readyPromise\n   * @param {?function():!Promise} createReportPromiseFunc\n   * @param {function(!JsonObject)} callback\n   * @return {!UnlistenDef}\n   */\n  listenRoot(spec, readyPromise, createReportPromiseFunc, callback) {\n    const calcVisibility = this.getRootVisibility.bind(this);\n    return this.createModelAndListen_(\n      calcVisibility,\n      spec,\n      readyPromise,\n      createReportPromiseFunc,\n      callback\n    );\n  }\n\n  /**\n   * Listens to the visibility events for the specified element and the given\n   * visibility spec. The visibility tracking can be deferred until\n   * `readyPromise` is resolved, if specified.\n   * @param {!Element} element\n   * @param {!JsonObject} spec\n   * @param {?Promise} readyPromise\n   * @param {?function():!Promise} createReportPromiseFunc\n   * @param {function(!JsonObject)} callback\n   * @return {!UnlistenDef}\n   */\n  listenElement(\n    element,\n    spec,\n    readyPromise,\n    createReportPromiseFunc,\n    callback\n  ) {\n    const calcVisibility = this.getElementVisibility.bind(this, element);\n    return this.createModelAndListen_(\n      calcVisibility,\n      spec,\n      readyPromise,\n      createReportPromiseFunc,\n      callback,\n      element\n    );\n  }\n\n  /**\n   * Create visibilityModel and listen to visible events.\n   * @param {function():number} calcVisibility\n   * @param {!JsonObject} spec\n   * @param {?Promise} readyPromise\n   * @param {?function():!Promise} createReportPromiseFunc\n   * @param {function(!JsonObject)} callback\n   * @param {!Element=} opt_element\n   * @return {!UnlistenDef}\n   */\n  createModelAndListen_(\n    calcVisibility,\n    spec,\n    readyPromise,\n    createReportPromiseFunc,\n    callback,\n    opt_element\n  ) {\n    if (\n      spec['visiblePercentageThresholds'] &&\n      spec['visiblePercentageMin'] == undefined &&\n      spec['visiblePercentageMax'] == undefined\n    ) {\n      const unlisteners = [];\n      const ranges = spec['visiblePercentageThresholds'];\n      if (!ranges || !isArray(ranges)) {\n        user().error(TAG, 'invalid visiblePercentageThresholds');\n        return () => {};\n      }\n      for (let i = 0; i < ranges.length; i++) {\n        const percents = ranges[i];\n        if (!isArray(percents) || percents.length != 2) {\n          user().error(\n            TAG,\n            'visiblePercentageThresholds entry length is not 2'\n          );\n          continue;\n        }\n        if (!isFiniteNumber(percents[0]) || !isFiniteNumber(percents[1])) {\n          // not valid number\n          user().error(\n            TAG,\n            'visiblePercentageThresholds entry is not valid number'\n          );\n          continue;\n        }\n        const min = Number(percents[0]);\n        const max = Number(percents[1]);\n        // Min and max must be valid percentages. Min may not be more than max.\n        // Max is inclusive. Min is usually exclusive, but there are two\n        // special cases: if min and max are both 0, or both 100, then both\n        // are inclusive. Otherwise it would not be possible to trigger an\n        // event on exactly 0% or 100%.\n        if (\n          min < 0 ||\n          max > 100 ||\n          min > max ||\n          (min == max && min != 100 && max != 0)\n        ) {\n          user().error(\n            TAG,\n            'visiblePercentageThresholds entry invalid min/max value'\n          );\n          continue;\n        }\n        const newSpec = spec;\n        newSpec['visiblePercentageMin'] = min;\n        newSpec['visiblePercentageMax'] = max;\n        const model = new VisibilityModel(newSpec, calcVisibility);\n        unlisteners.push(\n          this.listen_(\n            model,\n            spec,\n            readyPromise,\n            createReportPromiseFunc,\n            callback,\n            opt_element\n          )\n        );\n      }\n      return () => {\n        unlisteners.forEach(unlistener => unlistener());\n      };\n    }\n    const model = new VisibilityModel(spec, calcVisibility);\n    return this.listen_(\n      model,\n      spec,\n      readyPromise,\n      createReportPromiseFunc,\n      callback,\n      opt_element\n    );\n  }\n\n  /**\n   * @param {!VisibilityModel} model\n   * @param {!JsonObject} spec\n   * @param {?Promise} readyPromise\n   * @param {?function():!Promise} createReportPromiseFunc\n   * @param {function(!JsonObject)} callback\n   * @param {!Element=} opt_element\n   * @return {!UnlistenDef}\n   * @private\n   */\n  listen_(\n    model,\n    spec,\n    readyPromise,\n    createReportPromiseFunc,\n    callback,\n    opt_element\n  ) {\n    if (createReportPromiseFunc) {\n      model.setReportReady(createReportPromiseFunc);\n    }\n\n    const viewport = Services.viewportForDoc(this.ampdoc);\n    const scrollDepth = viewport.getScrollTop();\n    this.maybeUpdateMaxScrollDepth(scrollDepth);\n\n    // Block visibility.\n    if (readyPromise) {\n      model.setReady(false);\n      readyPromise.then(() => {\n        model.setReady(true);\n        model.maybeSetInitialScrollDepth(scrollDepth);\n      });\n    } else {\n      model.maybeSetInitialScrollDepth(scrollDepth);\n    }\n\n    // Process the event.\n    model.onTriggerEvent(() => {\n      const startTime = this.getStartTime();\n      const state = model.getState(startTime);\n\n      // Additional doc-level state.\n      state['backgrounded'] = this.isBackgrounded() ? 1 : 0;\n      state['backgroundedAtStart'] = this.isBackgroundedAtStart() ? 1 : 0;\n      state['totalTime'] = Date.now() - startTime;\n\n      // Optionally, element-level state.\n      let layoutBox;\n      if (opt_element) {\n        state['opacity'] = getMinOpacity(opt_element);\n        const resource = this.resources_.getResourceForElementOptional(\n          opt_element\n        );\n        layoutBox = resource\n          ? resource.getLayoutBox()\n          : viewport.getLayoutRect(opt_element);\n        const intersectionRatio = this.getElementVisibility(opt_element);\n        const intersectionRect = this.getElementIntersectionRect(opt_element);\n        Object.assign(\n          state,\n          dict({\n            'intersectionRatio': intersectionRatio,\n            'intersectionRect': JSON.stringify(intersectionRect),\n          })\n        );\n      } else {\n        state['opacity'] = this.getRootMinOpacity();\n        state['intersectionRatio'] = this.getRootVisibility();\n        layoutBox = this.getRootLayoutBox();\n      }\n      model.maybeDispose();\n\n      if (layoutBox) {\n        Object.assign(\n          state,\n          dict({\n            'elementX': layoutBox.left,\n            'elementY': layoutBox.top,\n            'elementWidth': layoutBox.width,\n            'elementHeight': layoutBox.height,\n          })\n        );\n        state['initialScrollDepth'] = layoutPositionRelativeToScrolledViewport(\n          layoutBox,\n          viewport,\n          model.getInitialScrollDepth()\n        );\n        state['maxScrollDepth'] = layoutPositionRelativeToScrolledViewport(\n          layoutBox,\n          viewport,\n          this.getMaxScrollDepth()\n        );\n      }\n      callback(state);\n    });\n\n    this.models_.push(model);\n    model.unsubscribe(() => {\n      const index = this.models_.indexOf(model);\n      if (index != -1) {\n        this.models_.splice(index, 1);\n      }\n    });\n\n    // Observe the element via InOb.\n    if (opt_element) {\n      // It's important that this happens after all the setup is done, b/c\n      // intersection observer can fire immedidately. Per spec, this should\n      // NOT happen. However, all of the existing InOb polyfills, as well as\n      // some versions of native implementations, make this mistake.\n      model.unsubscribe(this.observe(opt_element, () => model.update()));\n    }\n\n    // Start update.\n    model.update();\n    return function() {\n      model.dispose();\n    };\n  }\n\n  /**\n   * Observes the intersections of the specified element in the viewport.\n   * @param {!Element} unusedElement\n   * @param {function(number)} unusedListener\n   * @return {!UnlistenDef}\n   * @protected\n   * @abstract\n   */\n  observe(unusedElement, unusedListener) {}\n\n  /**\n   * @param {!Element} unusedElement\n   * @return {number}\n   * @abstract\n   */\n  getElementVisibility(unusedElement) {}\n\n  /**\n   * @param {!Element} unusedElement\n   * @return {?JsonObject}\n   * @abstract\n   */\n  getElementIntersectionRect(unusedElement) {}\n}\n\n/**\n * The implementation of `VisibilityManager` for an AMP document. Two\n * distinct modes are supported: the main AMP doc and a in-a-box doc.\n */\nexport class VisibilityManagerForDoc extends VisibilityManager {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    super(/* parent */ null, ampdoc);\n\n    /** @const @private */\n    this.viewport_ = Services.viewportForDoc(ampdoc);\n\n    /** @private {boolean} */\n    this.backgrounded_ = !ampdoc.isVisible();\n\n    /** @const @private {boolean} */\n    this.backgroundedAtStart_ = this.isBackgrounded();\n\n    /**\n     * @const\n     * @private {!Object<number, {\n     *   element: !Element,\n     *   intersectionRatio: number,\n     *   listeners: !Array<function(number)>\n     * }>}\n     */\n    this.trackedElements_ = map();\n\n    /** @private {?IntersectionObserver|?IntersectionObserverPolyfill} */\n    this.intersectionObserver_ = null;\n\n    if (getMode(this.ampdoc.win).runtime == 'inabox') {\n      // In-a-box: visibility depends on the InOb.\n      const root = this.ampdoc.getRootNode();\n      const rootElement = dev().assertElement(\n        root.documentElement || root.body || root\n      );\n      this.unsubscribe(\n        this.observe(rootElement, this.setRootVisibility.bind(this))\n      );\n    } else {\n      // Main document: visibility is based on the ampdoc.\n      this.setRootVisibility(this.ampdoc.isVisible() ? 1 : 0);\n      this.unsubscribe(\n        this.ampdoc.onVisibilityChanged(() => {\n          const isVisible = this.ampdoc.isVisible();\n          if (!isVisible) {\n            this.backgrounded_ = true;\n          }\n          this.setRootVisibility(isVisible ? 1 : 0);\n        })\n      );\n    }\n  }\n\n  /** @override */\n  dispose() {\n    super.dispose();\n    if (this.intersectionObserver_) {\n      this.intersectionObserver_.disconnect();\n      this.intersectionObserver_ = null;\n    }\n  }\n\n  /** @override */\n  getStartTime() {\n    return dev().assertNumber(this.ampdoc.getFirstVisibleTime());\n  }\n\n  /** @override */\n  isBackgrounded() {\n    return this.backgrounded_;\n  }\n\n  /** @override */\n  isBackgroundedAtStart() {\n    return this.backgroundedAtStart_;\n  }\n\n  /** @override */\n  getRootMinOpacity() {\n    const root = this.ampdoc.getRootNode();\n    const rootElement = dev().assertElement(\n      root.documentElement || root.body || root\n    );\n    return getMinOpacity(rootElement);\n  }\n\n  /** @override */\n  getRootLayoutBox() {\n    // This code is the same for \"in-a-box\" and standalone doc.\n    const root = this.ampdoc.getRootNode();\n    const rootElement = dev().assertElement(\n      root.documentElement || root.body || root\n    );\n    return this.viewport_.getLayoutRect(rootElement);\n  }\n\n  /** @override */\n  observe(element, listener) {\n    this.polyfillAmpElementIfNeeded_(element);\n\n    const id = getElementId(element);\n    let trackedElement = this.trackedElements_[id];\n    if (!trackedElement) {\n      trackedElement = {\n        element,\n        intersectionRatio: 0,\n        intersectionRect: null,\n        listeners: [],\n      };\n      this.trackedElements_[id] = trackedElement;\n    } else if (trackedElement.intersectionRatio > 0) {\n      // This has already been tracked and the `intersectionRatio` is fresh.\n      listener(trackedElement.intersectionRatio);\n    }\n    trackedElement.listeners.push(listener);\n    this.getIntersectionObserver_().observe(element);\n    return () => {\n      const trackedElement = this.trackedElements_[id];\n      if (trackedElement) {\n        const index = trackedElement.listeners.indexOf(listener);\n        if (index != -1) {\n          trackedElement.listeners.splice(index, 1);\n        }\n        if (trackedElement.listeners.length == 0) {\n          this.intersectionObserver_.unobserve(element);\n          delete this.trackedElements_[id];\n        }\n      }\n    };\n  }\n\n  /** @override */\n  getElementVisibility(element) {\n    if (this.getRootVisibility() == 0) {\n      return 0;\n    }\n    const id = getElementId(element);\n    const trackedElement = this.trackedElements_[id];\n    return (trackedElement && trackedElement.intersectionRatio) || 0;\n  }\n\n  /**\n   * Gets the intersection element.\n   *\n   * @param {!Element} element\n   * @return {?JsonObject}\n   */\n  getElementIntersectionRect(element) {\n    if (this.getElementVisibility(element) <= 0) {\n      return null;\n    }\n    const id = getElementId(element);\n    const trackedElement = this.trackedElements_[id];\n    if (trackedElement) {\n      return /** @type {!JsonObject} */ (trackedElement.intersectionRect);\n    }\n    return null;\n  }\n\n  /**\n   * @return {!IntersectionObserver|!IntersectionObserverPolyfill}\n   * @private\n   */\n  getIntersectionObserver_() {\n    if (!this.intersectionObserver_) {\n      this.intersectionObserver_ = this.createIntersectionObserver_();\n    }\n    return this.intersectionObserver_;\n  }\n\n  /**\n   * @return {!IntersectionObserver|!IntersectionObserverPolyfill}\n   * @private\n   */\n  createIntersectionObserver_() {\n    // Native.\n    const {win} = this.ampdoc;\n    if (nativeIntersectionObserverSupported(win)) {\n      return new win.IntersectionObserver(\n        this.onIntersectionChanges_.bind(this),\n        {threshold: DEFAULT_THRESHOLD}\n      );\n    }\n\n    // Polyfill.\n    const intersectionObserverPolyfill = new IntersectionObserverPolyfill(\n      this.onIntersectionChanges_.bind(this),\n      {threshold: DEFAULT_THRESHOLD}\n    );\n    const ticker = () => {\n      intersectionObserverPolyfill.tick(this.viewport_.getRect());\n    };\n    this.unsubscribe(this.viewport_.onScroll(ticker));\n    this.unsubscribe(this.viewport_.onChanged(ticker));\n    // Tick in the next event loop. That's how native InOb works.\n    setTimeout(ticker);\n    return intersectionObserverPolyfill;\n  }\n\n  /**\n   * @param {!Element} element\n   * @private\n   */\n  polyfillAmpElementIfNeeded_(element) {\n    const {win} = this.ampdoc;\n    if (nativeIntersectionObserverSupported(win)) {\n      return;\n    }\n\n    // InOb polyfill requires partial AmpElement implementation.\n    if (typeof element.getLayoutBox == 'function') {\n      return;\n    }\n    element.getLayoutBox = () => {\n      return this.viewport_.getLayoutRect(element);\n    };\n    element.getOwner = () => null;\n  }\n\n  /**\n   * @param {!Array<!IntersectionObserverEntry>} entries\n   * @private\n   */\n  onIntersectionChanges_(entries) {\n    entries.forEach(change => {\n      let intersection = change.intersectionRect;\n      // IntersectionRect type now changed from ClientRect to DOMRectReadOnly.\n      // TODO(@zhouyx): Fix all InOb related type.\n      intersection = layoutRectLtwh(\n        Number(intersection.left),\n        Number(intersection.top),\n        Number(intersection.width),\n        Number(intersection.height)\n      );\n      this.onIntersectionChange_(\n        change.target,\n        change.intersectionRatio,\n        intersection\n      );\n    });\n  }\n\n  /**\n   * @param {!Element} target\n   * @param {number} intersectionRatio\n   * @param {!../../../src/layout-rect.LayoutRectDef} intersectionRect\n   * @private\n   */\n  onIntersectionChange_(target, intersectionRatio, intersectionRect) {\n    intersectionRatio = Math.min(Math.max(intersectionRatio, 0), 1);\n    const id = getElementId(target);\n    const trackedElement = this.trackedElements_[id];\n    if (trackedElement) {\n      trackedElement.intersectionRatio = intersectionRatio;\n      trackedElement.intersectionRect = intersectionRect;\n      for (let i = 0; i < trackedElement.listeners.length; i++) {\n        trackedElement.listeners[i](intersectionRatio);\n      }\n    }\n  }\n}\n\n/**\n * The implementation of `VisibilityManager` for a FIE embed. This visibility\n * root delegates most of tracking functions to its parent, the ampdoc root.\n */\nexport class VisibilityManagerForEmbed extends VisibilityManager {\n  /**\n   * @param {!VisibilityManager} parent\n   * @param {!../../../src/friendly-iframe-embed.FriendlyIframeEmbed} embed\n   */\n  constructor(parent, embed) {\n    super(parent, parent.ampdoc);\n\n    /** @const */\n    this.embed = embed;\n\n    /** @const @private {boolean} */\n    this.backgroundedAtStart_ = this.parent.isBackgrounded();\n\n    this.unsubscribe(\n      this.parent.observe(\n        dev().assertElement(embed.host),\n        this.setRootVisibility.bind(this)\n      )\n    );\n  }\n\n  /** @override */\n  getStartTime() {\n    return this.embed.getStartTime();\n  }\n\n  /** @override */\n  isBackgrounded() {\n    return this.parent.isBackgrounded();\n  }\n\n  /** @override */\n  isBackgroundedAtStart() {\n    return this.backgroundedAtStart_;\n  }\n\n  /** @override */\n  getRootMinOpacity() {\n    const rootElement = dev().assertElement(this.embed.iframe);\n    return getMinOpacity(rootElement);\n  }\n\n  /**\n   * Gets the layout box of the embedded document. Note that this may be\n   * smaller than the size allocated by the host. In that case, the document\n   * will be centered, and the unfilled space will not be reflected in this\n   * return value.\n   * embed.iframe is used to calculate the root layoutbox, since it is more\n   * important for the embedded document to know its own size, rather than\n   * the size of the host rectangle which it may or may not entirely fill.\n   * embed.host is used to calculate the root visibility, however, since\n   * the visibility of the host element directly determines the embedded\n   * document's visibility.\n   * @override\n   */\n  getRootLayoutBox() {\n    const rootElement = dev().assertElement(this.embed.iframe);\n    return Services.viewportForDoc(this.ampdoc).getLayoutRect(rootElement);\n  }\n\n  /** @override */\n  observe(element, listener) {\n    return this.parent.observe(element, listener);\n  }\n\n  /** @override */\n  getElementVisibility(element) {\n    if (this.getRootVisibility() == 0) {\n      return 0;\n    }\n    return this.parent.getElementVisibility(element);\n  }\n\n  /**\n   * Returns intersecting element.\n   * @override\n   */\n  getElementIntersectionRect(element) {\n    if (this.getRootVisibility() == 0) {\n      return null;\n    }\n    return this.parent.getElementIntersectionRect(element);\n  }\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from '../../../src/utils/promise';\nimport {Observable} from '../../../src/observable';\nimport {devAssert} from '../../../src/log';\nimport {dict} from '../../../src/utils/object';\n\n/**\n * This class implements visibility calculations based on the\n * visibility ratio. It's used for documents, embeds and individual element.\n * @implements {../../../src/service.Disposable}\n */\nexport class VisibilityModel {\n  /**\n   * @param {!JsonObject} spec\n   * @param {function():number} calcVisibility\n   */\n  constructor(spec, calcVisibility) {\n    /** @const @private */\n    this.calcVisibility_ = calcVisibility;\n\n    /**\n     * Spec parameters.\n     * @private {!JsonObject}\n     */\n    this.spec_ = dict({\n      'visiblePercentageMin': Number(spec['visiblePercentageMin']) / 100 || 0,\n      'visiblePercentageMax': Number(spec['visiblePercentageMax']) / 100 || 1,\n      'totalTimeMin': Number(spec['totalTimeMin']) || 0,\n      'totalTimeMax': Number(spec['totalTimeMax']) || Infinity,\n      'continuousTimeMin': Number(spec['continuousTimeMin']) || 0,\n      'continuousTimeMax': Number(spec['continuousTimeMax']) || Infinity,\n    });\n    // Above, if visiblePercentageMax was not specified, assume 100%.\n    // Here, do allow 0% to be the value if that is what was specified.\n    if (String(spec['visiblePercentageMax']).trim() === '0') {\n      this.spec_['visiblePercentageMax'] = 0;\n    }\n\n    /**\n     * Accumulate visibility counters but do not fire the trigger until the\n     * ready promise resolves.\n     * @private @const {boolean}\n     */\n    this.ignoreVisibilityForReport_ = spec['reportWhen'] !== undefined;\n\n    /** @private {boolean} */\n    this.repeat_ = spec['repeat'] === true;\n\n    /** @private {?Observable} */\n    this.onTriggerObservable_ = new Observable();\n\n    const deferred = new Deferred();\n\n    /** @private */\n    this.eventPromise_ = deferred.promise;\n\n    /** @private {?function()} */\n    this.eventResolver_ = deferred.resolve;\n\n    this.eventPromise_.then(() => {\n      this.onTriggerObservable_.fire();\n    });\n\n    /** @private {!Array<!UnlistenDef>} */\n    this.unsubscribe_ = [];\n\n    /** @const @private {time} */\n    this.createdTime_ = Date.now();\n\n    // TODO(warrengm): Consider refactoring so that the ready defaults are\n    // false.\n\n    /** @private {boolean} */\n    this.ready_ = true;\n\n    /** @private {boolean} */\n    this.reportReady_ = true;\n\n    /** @private {?function():!Promise} */\n    this.createReportReadyPromise_ = null;\n\n    /** @private {?number} */\n    this.scheduledUpdateTimeoutId_ = null;\n\n    /** @private {boolean} */\n    this.matchesVisibility_ = false;\n\n    /** @private {boolean} */\n    this.everMatchedVisibility_ = false;\n\n    /** @private {time} duration in milliseconds */\n    this.continuousTime_ = 0;\n\n    /** @private {time} duration in milliseconds */\n    this.maxContinuousVisibleTime_ = 0;\n\n    /** @private {time} duration in milliseconds */\n    this.totalVisibleTime_ = 0;\n\n    /** @private {time} milliseconds since epoch */\n    this.firstSeenTime_ = 0;\n\n    /** @private {time} milliseconds since epoch */\n    this.lastSeenTime_ = 0;\n\n    /** @private {time} milliseconds since epoch */\n    this.firstVisibleTime_ = 0;\n\n    /** @private {time} milliseconds since epoch */\n    this.lastVisibleTime_ = 0;\n\n    /** @private {time} percent value in a [0, 1] range */\n    this.loadTimeVisibility_ = 0;\n\n    /** @private {number} percent value in a [0, 1] range */\n    this.minVisiblePercentage_ = 0;\n\n    /** @private {number} percent value in a [0, 1] range */\n    this.maxVisiblePercentage_ = 0;\n\n    /** @private {time} milliseconds since epoch */\n    this.lastVisibleUpdateTime_ = 0;\n\n    /** @private {number} Scroll position at ini-load time */\n    this.initialScrollDepth_ = 0;\n\n    /**\n     * @private {boolean} Whether scroll position at ini-load time has\n     * been set\n     */\n    this.initialScrollDepthAlreadySet_ = false;\n\n    /** @private {boolean} */\n    this.waitToReset_ = false;\n\n    /** @private {?number} */\n    this.scheduleRepeatId_ = null;\n  }\n\n  /**\n   * Refresh counter on visible reset.\n   * TODO: Right now all state value are scoped state values that gets reset.\n   * We may need to add support to global state values,\n   * that never reset like globalTotalVisibleTime.\n   * Note: loadTimeVisibility is an exception.\n   * @private\n   */\n  reset_() {\n    devAssert(\n      !this.eventResolver_,\n      'Attempt to refresh visible event before previous one resolve'\n    );\n    const deferred = new Deferred();\n    this.eventPromise_ = deferred.promise;\n    this.eventResolver_ = deferred.resolve;\n\n    this.eventPromise_.then(() => {\n      this.onTriggerObservable_.fire();\n    });\n    this.scheduleRepeatId_ = null;\n    this.everMatchedVisibility_ = false;\n    this.matchesVisibility_ = false;\n    this.continuousTime_ = 0;\n    this.maxContinuousVisibleTime_ = 0;\n    this.totalVisibleTime_ = 0;\n    this.firstVisibleTime_ = 0;\n    this.firstSeenTime_ = 0;\n    this.lastSeenTime_ = 0;\n    this.lastVisibleTime_ = 0;\n    this.minVisiblePercentage_ = 0;\n    this.maxVisiblePercentage_ = 0;\n    this.lastVisibleUpdateTime_ = 0;\n    this.waitToReset_ = false;\n  }\n\n  /**\n   * Function that visibilityManager can used to dispose model or reset model\n   */\n  maybeDispose() {\n    if (!this.repeat_) {\n      this.dispose();\n    }\n  }\n\n  /** @override */\n  dispose() {\n    if (this.scheduledUpdateTimeoutId_) {\n      clearTimeout(this.scheduledUpdateTimeoutId_);\n      this.scheduledUpdateTimeoutId_ = null;\n    }\n    if (this.scheduleRepeatId_) {\n      clearTimeout(this.scheduleRepeatId_);\n      this.scheduleRepeatId_ = null;\n    }\n    this.unsubscribe_.forEach(unsubscribe => {\n      unsubscribe();\n    });\n    this.unsubscribe_.length = 0;\n    this.eventResolver_ = null;\n    if (this.onTriggerObservable_) {\n      this.onTriggerObservable_.removeAll();\n      this.onTriggerObservable_ = null;\n    }\n  }\n\n  /**\n   * Adds the unsubscribe handler that will be called when this visibility\n   * model is destroyed.\n   * @param {!UnlistenDef} handler\n   */\n  unsubscribe(handler) {\n    this.unsubscribe_.push(handler);\n  }\n\n  /**\n   * Adds the event handler that will be called when all visibility conditions\n   * have been met.\n   * @param {function()} handler\n   */\n  onTriggerEvent(handler) {\n    if (this.onTriggerObservable_) {\n      this.onTriggerObservable_.add(handler);\n    }\n    if (this.eventPromise_ && !this.eventResolver_) {\n      // If eventPromise has already resolved, need to call handler manually.\n      handler();\n    }\n  }\n\n  /**\n   * Sets whether this object is ready. Ready means that visibility is\n   * ready to be calculated, e.g. because an element has been\n   * sufficiently rendered.\n   * @param {boolean} ready\n   */\n  setReady(ready) {\n    this.ready_ = ready;\n    this.update();\n  }\n\n  /**\n   * Sets that the model needs to wait on extra report ready promise\n   * after all visibility conditions have been met to call report handler\n   * @param {function():!Promise} callback\n   */\n  setReportReady(callback) {\n    this.reportReady_ = false;\n    this.createReportReadyPromise_ = callback;\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  getVisibility_() {\n    return this.ready_ ? this.calcVisibility_() : 0;\n  }\n\n  /**\n   * Runs the calculation cycle.\n   */\n  update() {\n    this.update_(this.getVisibility_());\n  }\n\n  /**\n   * Returns the calculated state of visibility.\n   * @param {time} startTime\n   * @return {!JsonObject}\n   */\n  getState(startTime) {\n    return dict({\n      // Observed times, relative to the `startTime`.\n      'firstSeenTime': timeBase(this.firstSeenTime_, startTime),\n      'lastSeenTime': timeBase(this.lastSeenTime_, startTime),\n      'lastVisibleTime': timeBase(this.lastVisibleTime_, startTime),\n      'firstVisibleTime': timeBase(this.firstVisibleTime_, startTime),\n\n      // Durations.\n      'maxContinuousVisibleTime': this.maxContinuousVisibleTime_,\n      'totalVisibleTime': this.totalVisibleTime_,\n\n      // Visibility percents.\n      'loadTimeVisibility': this.loadTimeVisibility_ * 100 || 0,\n      'minVisiblePercentage': this.minVisiblePercentage_ * 100,\n      'maxVisiblePercentage': this.maxVisiblePercentage_ * 100,\n    });\n  }\n\n  /**\n   * @param {number} visibility\n   * @private\n   */\n  update_(visibility) {\n    // Update state and check if all conditions are satisfied\n    if (this.waitToReset_) {\n      if (!this.isVisibilityMatch_(visibility)) {\n        // We were waiting for a condition to become unmet, and now it has\n        this.reset_();\n      }\n      return;\n    }\n    if (!this.eventResolver_) {\n      return;\n    }\n\n    // When ignoreVisibilityForReport_ is true, we update counters but fire the\n    // event when the report ready promise is resolved.\n    const conditionsMet =\n      this.updateCounters_(visibility) || this.ignoreVisibilityForReport_;\n    if (conditionsMet) {\n      if (this.scheduledUpdateTimeoutId_) {\n        clearTimeout(this.scheduledUpdateTimeoutId_);\n        this.scheduledUpdateTimeoutId_ = null;\n      }\n      if (this.reportReady_) {\n        // TODO(jonkeller): Can we eliminate eventResolver_?\n        this.eventResolver_();\n        this.eventResolver_ = null;\n        if (this.repeat_) {\n          this.waitToReset_ = true;\n          this.continuousTime_ = 0;\n        }\n      } else if (this.createReportReadyPromise_) {\n        // Report when report ready promise resolve\n        const reportReadyPromise = this.createReportReadyPromise_();\n        this.createReportReadyPromise_ = null;\n        reportReadyPromise.then(() => {\n          this.reportReady_ = true;\n          // Need to update one more time in case time exceeds\n          // maxContinuousVisibleTime.\n          this.update();\n        });\n      }\n    } else if (this.matchesVisibility_ && !this.scheduledUpdateTimeoutId_) {\n      // There is unmet duration condition, schedule a check\n      const timeToWait = this.computeTimeToWait_();\n      if (timeToWait > 0) {\n        this.scheduledUpdateTimeoutId_ = setTimeout(() => {\n          this.scheduledUpdateTimeoutId_ = null;\n          this.update();\n        }, timeToWait);\n      }\n    } else if (!this.matchesVisibility_ && this.scheduledUpdateTimeoutId_) {\n      clearTimeout(this.scheduledUpdateTimeoutId_);\n      this.scheduledUpdateTimeoutId_ = null;\n    }\n  }\n\n  /**\n   * Check if visibility fall into the percentage range\n   * @param {number} visibility\n   * @return {boolean}\n   */\n  isVisibilityMatch_(visibility) {\n    devAssert(\n      visibility >= 0 && visibility <= 1,\n      'invalid visibility value: %s',\n      visibility\n    );\n    // Special case: If visiblePercentageMin is 100%, then it doesn't make\n    // sense to do the usual (min, max] since that would never be true.\n    if (this.spec_['visiblePercentageMin'] == 1) {\n      return visibility == 1;\n    }\n    // Special case: If visiblePercentageMax is 0%, then we\n    // want to ping when the creative becomes not visible.\n    if (this.spec_['visiblePercentageMax'] == 0) {\n      return visibility == 0;\n    }\n    return (\n      visibility > this.spec_['visiblePercentageMin'] &&\n      visibility <= this.spec_['visiblePercentageMax']\n    );\n  }\n\n  /**\n   * @param {number} visibility\n   * @return {boolean} true\n   * @private\n   */\n  updateCounters_(visibility) {\n    devAssert(\n      visibility >= 0 && visibility <= 1,\n      'invalid visibility value: %s',\n      visibility\n    );\n    const now = Date.now();\n\n    if (visibility > 0) {\n      this.firstSeenTime_ = this.firstSeenTime_ || now;\n      this.lastSeenTime_ = now;\n      // Consider it as load time visibility if this happens within 300ms of\n      // page load.\n      if (!this.loadTimeVisibility_ && now - this.createdTime_ < 300) {\n        this.loadTimeVisibility_ = visibility;\n      }\n    }\n\n    const prevMatchesVisibility = this.matchesVisibility_;\n    const timeSinceLastUpdate = this.lastVisibleUpdateTime_\n      ? now - this.lastVisibleUpdateTime_\n      : 0;\n    this.matchesVisibility_ = this.isVisibilityMatch_(visibility);\n    if (this.matchesVisibility_) {\n      this.everMatchedVisibility_ = true;\n      if (prevMatchesVisibility) {\n        // Keep counting.\n        this.totalVisibleTime_ += timeSinceLastUpdate;\n        this.continuousTime_ += timeSinceLastUpdate;\n        this.maxContinuousVisibleTime_ = Math.max(\n          this.maxContinuousVisibleTime_,\n          this.continuousTime_\n        );\n      } else {\n        // The resource came into view: start counting.\n        devAssert(!this.lastVisibleUpdateTime_);\n        this.firstVisibleTime_ = this.firstVisibleTime_ || now;\n      }\n      this.lastVisibleUpdateTime_ = now;\n      this.minVisiblePercentage_ =\n        this.minVisiblePercentage_ > 0\n          ? Math.min(this.minVisiblePercentage_, visibility)\n          : visibility;\n      this.maxVisiblePercentage_ = Math.max(\n        this.maxVisiblePercentage_,\n        visibility\n      );\n      this.lastVisibleTime_ = now;\n    } else if (prevMatchesVisibility) {\n      // The resource went out of view. Do final calculations and reset state.\n      devAssert(this.lastVisibleUpdateTime_ > 0);\n\n      this.maxContinuousVisibleTime_ = Math.max(\n        this.maxContinuousVisibleTime_,\n        this.continuousTime_ + timeSinceLastUpdate\n      );\n\n      // Reset for next visibility event.\n      this.lastVisibleUpdateTime_ = 0;\n      this.totalVisibleTime_ += timeSinceLastUpdate;\n      this.continuousTime_ = 0; // Clear only after max is calculated above.\n      this.lastVisibleTime_ = now;\n    }\n\n    return (\n      this.everMatchedVisibility_ &&\n      this.totalVisibleTime_ >= this.spec_['totalTimeMin'] &&\n      this.totalVisibleTime_ <= this.spec_['totalTimeMax'] &&\n      this.maxContinuousVisibleTime_ >= this.spec_['continuousTimeMin'] &&\n      this.maxContinuousVisibleTime_ <= this.spec_['continuousTimeMax']\n    );\n  }\n\n  /**\n   * Set the amount that the user had scrolled down the page at the time of\n   * page loading.\n   * @param {number} depth\n   */\n  maybeSetInitialScrollDepth(depth) {\n    if (!this.initialScrollDepthAlreadySet_) {\n      this.initialScrollDepth_ = depth;\n      this.initialScrollDepthAlreadySet_ = true;\n    }\n  }\n\n  /**\n   * Gets the amount that the user had scrolled down the page, at the time of\n   * ini-load.\n   * @return {number} depth\n   */\n  getInitialScrollDepth() {\n    return this.initialScrollDepth_;\n  }\n\n  /**\n   * Computes time, assuming the object is currently visible, that it'd take\n   * it to match all timing requirements.\n   * @return {time}\n   * @private\n   */\n  computeTimeToWait_() {\n    const waitForContinuousTime = Math.max(\n      this.spec_['continuousTimeMin'] - this.continuousTime_,\n      0\n    );\n    const waitForTotalTime = Math.max(\n      this.spec_['totalTimeMin'] - this.totalVisibleTime_,\n      0\n    );\n    const maxWaitTime = Math.max(waitForContinuousTime, waitForTotalTime);\n    return Math.min(\n      maxWaitTime,\n      waitForContinuousTime || Infinity,\n      waitForTotalTime || Infinity\n    );\n  }\n}\n\n/**\n * Calculates the specified time based on the given `baseTime`.\n * @param {time} time\n * @param {time} baseTime\n * @return {time}\n */\nfunction timeBase(time, baseTime) {\n  return time >= baseTime ? time - baseTime : 0;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dev, devAssert} from './log';\nimport {dict} from './utils/object';\nimport {internalListenImplementation} from './event-helper-listen';\nimport {parseJson} from './json';\n\n/** @const */\nconst AMP_MESSAGE_PREFIX = 'amp-';\nexport const CONSTANTS = {\n  responseTypeSuffix: '-result',\n  messageIdFieldName: 'messageId',\n  payloadFieldName: 'payload',\n  contentFieldName: 'content',\n};\n\n/** @enum {string} */\nexport const MessageType = {\n  // For amp-ad\n  SEND_EMBED_STATE: 'send-embed-state',\n  EMBED_STATE: 'embed-state',\n  SEND_EMBED_CONTEXT: 'send-embed-context',\n  EMBED_CONTEXT: 'embed-context',\n  SEND_INTERSECTIONS: 'send-intersections',\n  INTERSECTION: 'intersection',\n  EMBED_SIZE: 'embed-size',\n  EMBED_SIZE_CHANGED: 'embed-size-changed',\n  EMBED_SIZE_DENIED: 'embed-size-denied',\n  NO_CONTENT: 'no-content',\n  GET_HTML: 'get-html',\n  GET_CONSENT_STATE: 'get-consent-state',\n\n  // For the frame to be placed in full overlay mode for lightboxes\n  FULL_OVERLAY_FRAME: 'full-overlay-frame',\n  FULL_OVERLAY_FRAME_RESPONSE: 'full-overlay-frame-response',\n  CANCEL_FULL_OVERLAY_FRAME: 'cancel-full-overlay-frame',\n  CANCEL_FULL_OVERLAY_FRAME_RESPONSE: 'cancel-full-overlay-frame-response',\n\n  // For amp-inabox\n  SEND_POSITIONS: 'send-positions',\n  POSITION: 'position',\n\n  // For amp-analytics' iframe-transport\n  SEND_IFRAME_TRANSPORT_EVENTS: 'send-iframe-transport-events',\n  IFRAME_TRANSPORT_EVENTS: 'iframe-transport-events',\n  IFRAME_TRANSPORT_RESPONSE: 'iframe-transport-response',\n\n  // For user-error-in-iframe\n  USER_ERROR_IN_IFRAME: 'user-error-in-iframe',\n};\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Serialize an AMP post message. Output looks like:\n * 'amp-011481323099490{\"type\":\"position\",\"sentinel\":\"12345\",\"foo\":\"bar\"}'\n * @param {string} type\n * @param {string} sentinel\n * @param {JsonObject=} data\n * @param {?string=} rtvVersion\n * @return {string}\n */\nexport function serializeMessage(\n  type,\n  sentinel,\n  data = dict(),\n  rtvVersion = null\n) {\n  // TODO: consider wrap the data in a \"data\" field. { type, sentinal, data }\n  const message = data;\n  message['type'] = type;\n  message['sentinel'] = sentinel;\n  return AMP_MESSAGE_PREFIX + (rtvVersion || '') + JSON.stringify(message);\n}\n\n/**\n * Deserialize an AMP post message.\n * Returns null if it's not valid AMP message format.\n *\n * @param {*} message\n * @return {?JsonObject|undefined}\n */\nexport function deserializeMessage(message) {\n  if (!isAmpMessage(message)) {\n    return null;\n  }\n  const startPos = message.indexOf('{');\n  devAssert(startPos != -1, 'JSON missing in %s', message);\n  try {\n    return parseJson(message.substr(startPos));\n  } catch (e) {\n    dev().error('MESSAGING', 'Failed to parse message: ' + message, e);\n    return null;\n  }\n}\n\n/**\n *  Returns true if message looks like it is an AMP postMessage\n *  @param {*} message\n *  @return {boolean}\n */\nexport function isAmpMessage(message) {\n  return (\n    typeof message == 'string' &&\n    message.indexOf(AMP_MESSAGE_PREFIX) == 0 &&\n    message.indexOf('{') != -1\n  );\n}\n\n/** @typedef {{creativeId: string, message: string}} */\nexport let IframeTransportEvent;\n// An event, and the transport ID of the amp-analytics tags that\n// generated it. For instance if the creative with transport\n// ID 2 sends \"hi\", then an IframeTransportEvent would look like:\n// { creativeId: \"2\", message: \"hi\" }\n// If the creative with transport ID 2 sent that, and also sent \"hello\",\n// and the creative with transport ID 3 sends \"goodbye\" then an *array* of 3\n// AmpAnalyticsIframeTransportEvent would be sent to the 3p frame like so:\n// [\n//   { creativeId: \"2\", message: \"hi\" }, // An AmpAnalyticsIframeTransportEvent\n//   { creativeId: \"2\", message: \"hello\" }, // Another\n//   { creativeId: \"3\", message: \"goodbye\" } // And another\n// ]\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {computedStyle} from './style';\nimport {dev} from './log';\nimport {getParentWindowFrameElement} from './service';\n\nconst AD_CONTAINER_PROP = '__AMP__AD_CONTAINER';\n\n/**\n * Tags that are allowed to have fixed positioning\n * @const {!Object<string, boolean>}\n */\nconst CONTAINERS = {\n  'AMP-FX-FLYING-CARPET': true,\n  'AMP-LIGHTBOX': true,\n  'AMP-STICKY-AD': true,\n  'AMP-LIGHTBOX-GALLERY': true,\n};\n\n/**\n * Determines if an element is fixed-positioned.\n * OK to use, because it's only called from onLayoutMeasure\n * @param {!Element} el\n * @param {!Window} win\n * @return {boolean}\n */\nfunction isPositionFixed(el, win) {\n  const {position} = computedStyle(win, el);\n  // We consider sticky positions as fixed, since they can be fixed.\n  return position == 'fixed' || position == 'sticky';\n}\n\n/**\n * @param {!Element} element\n * @param {!Window} win\n * @return {boolean} whether the element position is allowed. If the element\n * belongs to CONTAINERS, it is allowed to be position fixed.\n * If the element has a position fixed ancestor, it is not allowed.\n * This should only be called when a layout on the page was just forced\n * anyway.\n */\nexport function isAdPositionAllowed(element, win) {\n  let hasFixedAncestor = false;\n  let containers = 0;\n  let el = element;\n  do {\n    if (CONTAINERS[el.tagName]) {\n      // The containers must not themselves be contained in a fixed-position\n      // element. Continue the search.\n      containers++;\n      hasFixedAncestor = false;\n    } else if (isPositionFixed(dev().assertElement(el), win)) {\n      // Because certain blessed elements may contain a position fixed\n      // container (which contain an ad), we continue to search the\n      // ancestry tree.\n      hasFixedAncestor = true;\n    }\n    el = el.parentElement;\n  } while (el && el.tagName != 'BODY');\n  return !hasFixedAncestor && containers <= 1;\n}\n\n/**\n * Returns the blessed container element tagName if the ad is contained by one.\n * This is called during layout measure.\n * @param {!Element} element\n * @return {?string}\n */\nexport function getAdContainer(element) {\n  if (element[AD_CONTAINER_PROP] === undefined) {\n    let el = element.parentElement;\n    while (el && el.tagName != 'BODY') {\n      if (CONTAINERS[el.tagName]) {\n        return (element[AD_CONTAINER_PROP] = el.tagName);\n      }\n      el = el.parentElement;\n    }\n    element[AD_CONTAINER_PROP] = null;\n  }\n  return element[AD_CONTAINER_PROP];\n}\n\n/**\n * Gets the resource ID of the amp-ad element containing the passed node.\n * If there is no containing amp-ad tag, then null will be returned.\n * TODO(jonkeller): Investigate whether non-A4A use case is needed. Issue 11436\n * @param {!Element} node\n * @param {!Window} topWin\n * @return {?string}\n */\nexport function getAmpAdResourceId(node, topWin) {\n  try {\n    const frameParent = getParentWindowFrameElement(node, topWin).parentElement;\n    if (frameParent.nodeName == 'AMP-AD') {\n      return String(frameParent.getResourceId());\n    }\n  } catch (e) {}\n  // Whether we entered the catch above (e.g. due to attempt to access\n  // across xdomain boundary), or failed to enter the if further above, the\n  // node is not within a friendly amp-ad tag. So, there is no amp-ad\n  // resource ID. How to handle that is up to the caller, but see TODO above.\n  return null;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Commonly used signals across different elements and documents.\n * @enum {string}\n */\nexport const CommonSignals = {\n  /**\n   * The element has been upgraded from ElementStub to its real implementation.\n   */\n  UPGRADED: 'upgraded',\n\n  /**\n   * The element has been built.\n   */\n  BUILT: 'built',\n\n  /**\n   * The element has started loading.\n   * LOAD_START triggers at the start of the layoutCallback.\n   */\n  LOAD_START: 'load-start',\n\n  /**\n   * Rendering has been confirmed to have been started.\n   * It is a signal to indicate meaningful display (e.g. text could be displayed\n   * CSS is correctly installed/applied).\n   *\n   * Elements can optionally implement RENDER_START signal. (e.g. ad, shadowdoc)\n   * if it want to define its own meaningful display time and toggle visibility.\n   *\n   * Simpler elements's RENDER_START can be equal to the start of the\n   * buildCallback\n   */\n  RENDER_START: 'render-start',\n\n  /**\n   * The element has been loaded.\n   * LOAD_END triggers at the end of the layoutCallback.\n   *\n   */\n  LOAD_END: 'load-end',\n\n  /**\n   * The initial contents of an element/document/embed have been loaded.\n   * INI_LOAD is an optional signal, implemented by ads, story, and elements\n   * that consist of other resources.\n   * It instructs that all critical resources has been loaded, and can be used\n   * for more accurate visibility measurement.\n   * When an element doesn't consist multiple child resources, LOAD_END signal\n   * can be used to indicate resource load completion.\n   * Note: Based on the implementation, INI_LOAD can trigger before or after\n   * LOAD_END.\n   */\n  INI_LOAD: 'ini-load',\n\n  /**\n   * The element has been unlaid out.\n   */\n  UNLOAD: 'unload',\n};\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex'];\n\nconst cdnProxyRegex =\n  typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex'];\n\n/** @type {!Object<string, string|boolean|RegExp|Array<RegExp>>} */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex: thirdPartyFrameRegex || /^d-\\d+\\.ampproject\\.net$/,\n  cdn: env['cdnUrl'] || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex:\n    cdnProxyRegex || /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] || 'https://amp-error-reporting.appspot.com/r',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/master/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.dev$/,\n  ],\n};\n\nexport const config = {\n  urls,\n};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This file will be imported by 3P scripts.\n\n/**\n * Possible consent policy state to proceed with.\n * @enum {number}\n */\nexport const CONSENT_POLICY_STATE = {\n  // Enum value has external dependency. Please do not change existing value.\n  // If new values are added, please notify the AMP for Ads team to assure\n  // correct Real Time Config behavior is maintained for Fast Fetch.\n  SUFFICIENT: 1,\n  INSUFFICIENT: 2,\n  UNKNOWN_NOT_REQUIRED: 3,\n  UNKNOWN: 4,\n};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONSENT_POLICY_STATE, // eslint-disable-line no-unused-vars\n} from './consent-state';\nimport {Services} from './services';\nimport {user} from './log';\n\n/**\n * Returns a promise that resolve when all consent state the policy wait\n * for resolve. Or if consent service is not available.\n * @param {!Element|!ShadowRoot} element\n * @param {string=} policyId\n * @return {!Promise<?CONSENT_POLICY_STATE>}\n */\nexport function getConsentPolicyState(element, policyId = 'default') {\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    consentPolicy => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.whenPolicyResolved(/** @type {string} */ (policyId));\n    }\n  );\n}\n\n/**\n * Returns a promise that resolves to a sharedData retrieved from consent\n * remote endpoint.\n * @param {!Element|!ShadowRoot} element\n * @param {string} policyId\n * @return {!Promise<?Object>}\n */\nexport function getConsentPolicySharedData(element, policyId) {\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    consentPolicy => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.getMergedSharedData(\n        /** @type {string} */ (policyId)\n      );\n    }\n  );\n}\n\n/**\n * TODO(zhouyx): Combine with getConsentPolicyState and return a consentInfo\n * object.\n * @param {!Element|!ShadowRoot} element\n * @param {string} policyId\n * @return {!Promise<string>}\n */\nexport function getConsentPolicyInfo(element, policyId) {\n  // Return the stored consent string.\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    consentPolicy => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.getConsentStringInfo(\n        /** @type {string} */ (policyId)\n      );\n    }\n  );\n}\n\n/**\n * Determine if an element needs to be blocked by consent based on metaTags.\n * @param {*} element\n * @return {boolean}\n */\nexport function shouldBlockOnConsentByMeta(element) {\n  const ampdoc = element.getAmpDoc();\n  let content = Services.documentInfoForDoc(ampdoc).metaTags[\n    'amp-consent-blocking'\n  ];\n\n  if (!content) {\n    return false;\n  }\n\n  // validator enforce uniqueness of <meta name='amp-consent-blocking'>\n  // content will not be an array.\n  if (typeof content !== 'string') {\n    user().error(\n      'CONSENT',\n      'Invalid amp-consent-blocking value, ignore meta tag'\n    );\n    return false;\n  }\n\n  // Handles whitespace\n  content = content\n    .toUpperCase()\n    .replace(/\\s/g, '')\n    .split(',');\n\n  if (content.includes(element.tagName)) {\n    return true;\n  }\n  return false;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {endsWith} from './string';\nimport {\n  getSourceOrigin,\n  isProxyOrigin,\n  parseUrlDeprecated,\n  tryDecodeUriComponent,\n} from './url';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\nconst TEST_COOKIE_NAME = '-test-amp-cookie-tmp';\n\n/** @enum {string} */\nexport const SameSite = {\n  LAX: 'Lax',\n  STRICT: 'Strict',\n  NONE: 'None',\n};\n\n/**\n * Returns the value of the cookie. The cookie access is restricted and must\n * go through the privacy review. Before using this method please file a\n * GitHub issue with \"Privacy Review\" label.\n *\n * Returns the cookie's value or `null`.\n *\n * @param {!Window} win\n * @param {string} name\n * @return {?string}\n */\nexport function getCookie(win, name) {\n  const cookieString = tryGetDocumentCookie_(win);\n  if (!cookieString) {\n    return null;\n  }\n  const cookies = cookieString.split(';');\n  for (let i = 0; i < cookies.length; i++) {\n    const cookie = cookies[i].trim();\n    const eq = cookie.indexOf('=');\n    if (eq == -1) {\n      continue;\n    }\n    if (tryDecodeUriComponent(cookie.substring(0, eq).trim()) == name) {\n      const value = cookie.substring(eq + 1).trim();\n      return tryDecodeUriComponent(value, value);\n    }\n  }\n  return null;\n}\n\n/**\n * This method should not be inlined to prevent TryCatch deoptimization.\n * @param {!Window} win\n * @return {string}\n * @noinline\n */\nfunction tryGetDocumentCookie_(win) {\n  try {\n    return win.document.cookie;\n  } catch (e) {\n    // Act as if no cookie is available. Exceptions can be thrown when\n    // AMP docs are opened on origins that do not allow setting\n    // cookies such as null origins.\n    return '';\n  }\n}\n\n/**\n * Sets the value of the cookie. The cookie access is restricted and must\n * go through the privacy review. Before using this method please file a\n * GitHub issue with \"Privacy Review\" label.\n *\n * @param {!Window} win\n * @param {string} name\n * @param {string} value\n * @param {time} expirationTime\n * @param {{\n *   highestAvailableDomain:(boolean|undefined),\n *   domain:(string|undefined),\n *   sameSite: (!SameSite|undefined),\n * }=} options\n *     - highestAvailableDomain: If true, set the cookie at the widest domain\n *       scope allowed by the browser. E.g. on example.com if we are currently\n *       on www.example.com.\n *     - domain: Explicit domain to set. domain overrides HigestAvailableDomain\n *     - allowOnProxyOrigin: Allow setting a cookie on the AMP Cache.\n *     - sameSite: The SameSite value to use when setting the cookie.\n */\nexport function setCookie(win, name, value, expirationTime, options = {}) {\n  checkOriginForSettingCookie(win, options, name);\n  let domain = undefined;\n  // Respect explicitly set domain over higestAvailabeDomain\n  if (options.domain) {\n    domain = options.domain;\n  } else if (options.highestAvailableDomain) {\n    domain = /** @type {string} */ (getHighestAvailableDomain(win));\n  }\n  trySetCookie(win, name, value, expirationTime, domain, options.sameSite);\n}\n\n/**\n * Attemp to find the HighestAvailableDomain on\n * @param {!Window} win\n * @return {?string}\n */\nexport function getHighestAvailableDomain(win) {\n  // <meta name='amp-cookie-scope'>. Need to respect the meta first.\n\n  // Note: The same logic applies to shadow docs. Where all shadow docs are\n  // considered to be in the same origin. And only the <meta> from\n  // shell will be respected. (Header from shadow doc will be removed)\n  const metaTag =\n    win.document.head &&\n    win.document.head.querySelector(\"meta[name='amp-cookie-scope']\");\n\n  if (metaTag) {\n    // The content value could be an empty string. Return null instead\n    const cookieScope = metaTag.getAttribute('content') || '';\n    // Verify the validness of the amp-cookie-scope meta value\n    const sourceOrigin = getSourceOrigin(win.location.href);\n    // Verify the meta tag content value is valid\n    if (endsWith(sourceOrigin, '.' + cookieScope)) {\n      return cookieScope;\n    } else {\n      // When the amp-cookie-scope value is invalid, fallback to the exact origin\n      // the document is contained in.\n      // sourceOrigin in the format of 'https://xxx or http://xxx'\n      return sourceOrigin.split('://')[1];\n    }\n  }\n\n  if (!isProxyOrigin(win.location.href)) {\n    const parts = win.location.hostname.split('.');\n    let domain = parts[parts.length - 1];\n    const testCookieName = getTempCookieName(win);\n    for (let i = parts.length - 2; i >= 0; i--) {\n      domain = parts[i] + '.' + domain;\n      // Try set a cookie for testing only, expire after 1 sec\n      trySetCookie(win, testCookieName, 'delete', Date.now() + 1000, domain);\n      if (getCookie(win, testCookieName) == 'delete') {\n        // Remove the cookie for testing\n        trySetCookie(win, testCookieName, 'delete', Date.now() - 1000, domain);\n        return domain;\n      }\n    }\n  }\n\n  // Proxy origin w/o <meta name='amp-cookie-scope>\n  // We cannot calculate the etld+1 without the public suffix list.\n  // Return null instead.\n  // Note: This should not affect cookie writing because we don't allow writing\n  // cookie to highestAvailableDomain on proxy origin\n  // In the case of link decoration on proxy origin,\n  // we expect the correct meta tag to be\n  // set by publisher or cache order for AMP runtime to find all subdomains.\n  return null;\n}\n\n/**\n * Attempt to set a cookie with the given params.\n *\n * @param {!Window} win\n * @param {string} name\n * @param {string} value\n * @param {time} expirationTime\n * @param {string|undefined} domain\n * @param {!SameSite=} sameSite\n */\nfunction trySetCookie(win, name, value, expirationTime, domain, sameSite) {\n  // We do not allow setting cookies on the domain that contains both\n  // the cdn. and www. hosts.\n  // Note: we need to allow cdn.ampproject.org in order to optin to experiments\n  if (domain == 'ampproject.org') {\n    // Actively delete them.\n    value = 'delete';\n    expirationTime = 0;\n  }\n  const cookie =\n    encodeURIComponent(name) +\n    '=' +\n    encodeURIComponent(value) +\n    '; path=/' +\n    (domain ? '; domain=' + domain : '') +\n    '; expires=' +\n    new Date(expirationTime).toUTCString() +\n    getSameSiteString(win, sameSite);\n  try {\n    win.document.cookie = cookie;\n  } catch (ignore) {\n    // Do not throw if setting the cookie failed Exceptions can be thrown\n    // when AMP docs are opened on origins that do not allow setting\n    // cookies such as null origins.\n  }\n}\n\n/**\n * Gets the cookie string to use for SameSite. This only sets the SameSite\n * value if specified, falling back to the browser default. The default value\n * is equivalent to SameSite.NONE, but is planned to be set to SameSite.LAX in\n * Chrome 80.\n *\n * Note: In Safari 12, if the value is set to SameSite.NONE, it is treated by\n * the browser as SameSite.STRICT.\n * @param {Window} win\n * @param {!SameSite|undefined} sameSite\n * @return {string} The string to use when setting the cookie.\n */\nfunction getSameSiteString(win, sameSite) {\n  if (!sameSite) {\n    return '';\n  }\n\n  return `; SameSite=${sameSite}`;\n}\n\n/**\n * Throws if a given cookie should not be set on the given origin.\n * This is a defense-in-depth. Callers should never run into this.\n *\n * @param {!Window} win\n * @param {!Object} options\n * @param {string} name For the error message.\n */\nfunction checkOriginForSettingCookie(win, options, name) {\n  if (options.allowOnProxyOrigin) {\n    userAssert(\n      !options.highestAvailableDomain,\n      'Could not support higestAvailable Domain on proxy origin, ' +\n        'specify domain explicitly'\n    );\n    return;\n  }\n  userAssert(\n    !isProxyOrigin(win.location.href),\n    `Should never attempt to set cookie on proxy origin: ${name}`\n  );\n  const current = parseUrlDeprecated(win.location.href).hostname.toLowerCase();\n  const proxy = parseUrlDeprecated(urls.cdn).hostname.toLowerCase();\n  userAssert(\n    !(current == proxy || endsWith(current, '.' + proxy)),\n    'Should never attempt to set cookie on proxy origin. (in depth check): ' +\n      name\n  );\n}\n\n/**\n * Return a temporary cookie name for testing only\n * @param {!Window} win\n * @return {string}\n */\nfunction getTempCookieName(win) {\n  let testCookieName = TEST_COOKIE_NAME;\n  const counter = 0;\n  while (getCookie(win, testCookieName)) {\n    // test cookie name conflict, append counter to test cookie name\n    testCookieName = TEST_COOKIE_NAME + counter;\n  }\n  return testCookieName;\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssEscape} from '../third_party/css-escape/css-escape';\nimport {devAssert} from './log';\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nexport function assertIsName(name) {\n  devAssert(/^[\\w-]+$/.test(name));\n}\n\n/**\n * @type {boolean|undefined}\n */\nlet scopeSelectorSupported;\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\nexport function isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return (scopeSelectorSupported = testScopeSelector(el));\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\nfunction testScopeSelector(el) {\n  try {\n    const doc = el.ownerDocument;\n    const testElement = doc.createElement('div');\n    const testChild = doc.createElement('div');\n    testElement.appendChild(testChild);\n    // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n    return testElement./*OK*/ querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\nexport function prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, `$&${distribute} `);\n}\n\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n */\nexport function escapeCssSelectorIdent(ident) {\n  return cssEscape(ident);\n}\n\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\nexport function escapeCssSelectorNth(ident) {\n  const escaped = String(ident);\n  // Ensure it doesn't close the nth-child psuedo class.\n  devAssert(escaped.indexOf(')') === -1);\n  return escaped;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './utils/promise';\nimport {\n  assertIsName,\n  isScopeSelectorSupported,\n  prependSelectorsWith,\n} from './css';\nimport {dev, devAssert} from './log';\nimport {dict} from './utils/object';\nimport {includes, startsWith} from './string';\nimport {toWin} from './types';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise(resolve => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise(resolve => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node} after\n */\nexport function insertAfterOrAtStart(root, element, after) {\n  const before = after ? after.nextSibling : root.firstChild;\n  root.insertBefore(element, before);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (n = node; !!n.parentNode && !isShadowRoot(n); n = n.parentNode) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {*} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  // TODO(#22733): remove in preference to dom's `rootNodeFor`.\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\nexport function closest(element, callback, opt_stopAt) {\n  for (let el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\nexport function closestNode(node, callback) {\n  for (let n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\nexport function closestAncestorElementBySelector(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  return closest(element, el => {\n    return matches(el, selector);\n  });\n}\n\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\nexport function ancestorElements(child, predicate) {\n  const ancestors = [];\n  for (\n    let ancestor = child.parentElement;\n    ancestor;\n    ancestor = ancestor.parentElement\n  ) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n  return ancestors;\n}\n\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\nexport function ancestorElementsByTag(child, tagName) {\n  assertIsName(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, el => {\n    return el.tagName == tagName;\n  });\n}\n\n/**\n * Finds the first child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function childElement(parent, callback) {\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\nexport function childElements(parent, callback) {\n  const children = [];\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function lastChildElement(parent, callback) {\n  for (\n    let child = parent.lastElementChild;\n    child;\n    child = child.previousElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\nexport function childNodes(parent, callback) {\n  const nodes = [];\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function childElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelector(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function lastChildElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return lastChildElement(parent, el => {\n    return el.hasAttribute(attr);\n  });\n}\n\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {?Element}\n */\nexport function childElementByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelector(parent, `> ${tagName}`);\n}\n\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> ${tagName}`);\n}\n\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\nexport function matches(el, selector) {\n  const matcher =\n    el.matches ||\n    el.webkitMatchesSelector ||\n    el.mozMatchesSelector ||\n    el.msMatchesSelector ||\n    el.oMatchesSelector;\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n  return false; // IE8 always returns false.\n}\n\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\nexport function elementByTag(element, tagName) {\n  assertIsName(tagName);\n  return element./*OK*/ querySelector(tagName);\n}\n\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nfunction scopedQuerySelectionFallback(root, selector) {\n  const unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  const scopedSelector = prependSelectorsWith(selector, `.${unique}`);\n  const elements = root./*OK*/ querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {?Element}\n */\nexport function scopedQuerySelector(root, selector) {\n  if (isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelector(prependSelectorsWith(selector, ':scope'));\n  }\n\n  // Only IE.\n  const fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nexport function scopedQuerySelectorAll(root, selector) {\n  if (isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelectorAll(\n      prependSelectorsWith(selector, ':scope')\n    );\n  }\n\n  // Only IE.\n  return scopedQuerySelectionFallback(root, selector);\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!Element} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || (key => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    startsWith(tag, 'AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!Element} element\n * @return {!Promise<!Element>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(element);\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Replacement for `Element.requestFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n * @param {!Element} element\n */\nexport function fullscreenEnter(element) {\n  const requestFs =\n    element.requestFullscreen ||\n    element.requestFullScreen ||\n    element.webkitRequestFullscreen ||\n    element.webkitEnterFullscreen ||\n    element.msRequestFullscreen ||\n    element.mozRequestFullScreen;\n  if (requestFs) {\n    requestFs.call(element);\n  }\n}\n\n/**\n * Replacement for `Document.exitFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/exitFullscreen\n * @param {!Element} element\n */\nexport function fullscreenExit(element) {\n  const elementBoundExit =\n    element.cancelFullScreen ||\n    element.exitFullscreen ||\n    element.webkitExitFullscreen ||\n    element.webkitCancelFullScreen ||\n    element.mozCancelFullScreen ||\n    element.msExitFullscreen;\n  if (elementBoundExit) {\n    elementBoundExit.call(element);\n    return;\n  }\n  const {ownerDocument} = element;\n  if (!ownerDocument) {\n    return;\n  }\n  const docBoundExit =\n    ownerDocument.cancelFullScreen ||\n    ownerDocument.exitFullscreencancelFullScreen ||\n    ownerDocument.webkitExitFullscreencancelFullScreen ||\n    ownerDocument.webkitCancelFullScreencancelFullScreen ||\n    ownerDocument.mozCancelFullScreencancelFullScreen ||\n    ownerDocument.msExitFullscreen;\n  if (docBoundExit) {\n    docBoundExit.call(ownerDocument);\n  }\n}\n\n/**\n * Replacement for `Document.fullscreenElement`.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenElement\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isFullscreenElement(element) {\n  const {webkitDisplayingFullscreen} = element;\n  if (webkitDisplayingFullscreen !== undefined) {\n    return webkitDisplayingFullscreen;\n  }\n  const {ownerDocument} = element;\n  if (!ownerDocument) {\n    return false;\n  }\n  const fullscreenElement =\n    ownerDocument.fullscreenElement ||\n    ownerDocument.webkitFullscreenElement ||\n    ownerDocument.mozFullScreenElement ||\n    ownerDocument.webkitCurrentFullScreenElement;\n  return fullscreenElement == element;\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!Element} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport {\n  getAmpdoc,\n  getExistingServiceForDocInEmbedScope,\n  getService,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n  getTopWindow,\n} from './service';\nimport {toWin} from './types';\nimport {userAssert} from './log';\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementService(win, id, extension, opt_element) {\n  return getElementServiceIfAvailable(win, id, extension, opt_element).then(\n    service => assertService(service, id, extension)\n  );\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(win, id, extension, opt_element) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(win, id, extension, opt_element);\n}\n\n/**\n * @param {!Window} win\n * @param {string} elementName Name of an extended custom element.\n * @return {boolean} Whether this element is scheduled to be loaded.\n */\nfunction isElementScheduled(win, elementName) {\n  // Set in custom-element.js\n  if (!win.__AMP_EXTENDED_ELEMENTS) {\n    return false;\n  }\n  return !!win.__AMP_EXTENDED_ELEMENTS[elementName];\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then(service => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .waitForBodyOpen()\n    .then(() =>\n      waitForExtensionIfPresent(ampdoc.win, extension, ampdoc.win.document.head)\n    )\n    .then(() => {\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      } else if (isElementScheduled(ampdoc.win, extension)) {\n        return getServicePromiseForDoc(element, id);\n      }\n      return null;\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getExistingServiceForDocInEmbedScope(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  const win = toWin(element.ownerDocument.defaultView);\n  const topWin = getTopWindow(win);\n  // In embeds, doc services are stored on the embed window.\n  if (win !== topWin) {\n    return getElementServicePromiseOrNull(win, id, extension);\n  } else {\n    // Only fallback to element's ampdoc (top-level) if not embedded.\n    return getElementServiceIfAvailableForDoc(element, id, extension);\n  }\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (userAssert(\n    service,\n    'Service %s was requested to be provided through %s, ' +\n      'but %s is not loaded in the current page. To fix this ' +\n      'problem load the JavaScript file for %s in this page.',\n    id,\n    extension,\n    extension,\n    extension\n  ));\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Array<string>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  const scripts = {};\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const name =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    scripts[name] = true;\n  }\n  return Object.keys(scripts);\n}\n\n/**\n * Waits for body to be present then verifies that an extension script is\n * present in head for installation.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} extensionId\n * @return {!Promise<boolean>}\n */\nexport function isExtensionScriptInNode(ampdoc, extensionId) {\n  return ampdoc.waitForBodyOpen().then(() => {\n    return extensionScriptInNode(ampdoc.getHeadNode(), extensionId);\n  });\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @param {string} extensionId\n * @return {boolean}\n * @private\n */\nfunction extensionScriptInNode(head, extensionId) {\n  return extensionScriptsInNode(head).includes(extensionId);\n}\n\n/**\n * Waits for an extension if its script is present\n * @param {!Window} win\n * @param {string} extension\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Promise}\n * @private\n */\nfunction waitForExtensionIfPresent(win, extension, head) {\n  /**\n   * If there is an extension script wait for it to load before trying\n   * to get the service. Prevents a race condition when everything but\n   * the extensions is in cache. If there is no script then it's either\n   * not present, or the service was defined by a test. In those cases\n   * we don't wait around for an extension that does not exist.\n   */\n\n  // TODO(jpettitt) investigate registerExtension to short circuit\n  // the dom call in extensionScriptsInNode()\n  if (!extensionScriptInNode(head, extension)) {\n    return Promise.resolve();\n  }\n\n  const extensions = getService(win, 'extensions');\n  return /** @type {!Promise<?Object>} */ (extensions.waitForExtension(\n    win,\n    extension\n  ));\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(win, id, extension, opt_element) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => waitForExtensionIfPresent(win, extension, win.document.head))\n    .then(() => {\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      } else if (isElementScheduled(win, extension)) {\n        return getServicePromise(win, id);\n      }\n      return null;\n    });\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet optsSupported;\n\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function internalListenImplementation(\n  element,\n  eventType,\n  listener,\n  opt_evtListenerOpts\n) {\n  let localElement = element;\n  let localListener = listener;\n  /**\n   * @type {?Function}\n   */\n  let wrapped;\n\n  wrapped = event => {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n      throw e;\n    }\n  };\n  const optsSupported = detectEvtListenerOptsSupport();\n  let capture = false;\n  if (opt_evtListenerOpts) {\n    capture = opt_evtListenerOpts.capture;\n  }\n  localElement.addEventListener(\n    eventType,\n    wrapped,\n    optsSupported ? opt_evtListenerOpts : capture\n  );\n  return () => {\n    if (localElement) {\n      localElement.removeEventListener(\n        eventType,\n        wrapped,\n        optsSupported ? opt_evtListenerOpts : capture\n      );\n    }\n    // Ensure these are GC'd\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\nexport function detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    const options = {\n      get capture() {\n        optsSupported = true;\n      },\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return optsSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\nexport function resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalListenImplementation} from './event-helper-listen';\nimport {lastChildElement} from './dom';\nimport {user} from './log';\n\n/** @const {string}  */\nconst LOAD_FAILURE_PREFIX = 'Failed to load:';\n\n/** @const {string} */\nexport const MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\nexport function createCustomEvent(win, type, detail, opt_eventInit) {\n  const eventInit = /** @type {!CustomEventInit} */ ({detail});\n  Object.assign(eventInit, opt_eventInit);\n  // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n  if (typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    const e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(\n      type,\n      !!eventInit.bubbles,\n      !!eventInit.cancelable,\n      detail\n    );\n    return e;\n  }\n}\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getData(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.data);\n}\n\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getDetail(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.detail);\n}\n\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  let localListener = listener;\n  const unlisten = internalListenImplementation(\n    element,\n    eventType,\n    event => {\n      try {\n        localListener(event);\n      } finally {\n        // Ensure listener is GC'd\n        localListener = null;\n        unlisten();\n      }\n    },\n    opt_evtListenerOpts\n  );\n  return unlisten;\n}\n\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\nexport function listenOncePromise(\n  element,\n  eventType,\n  opt_evtListenerOpts,\n  opt_cancel\n) {\n  let unlisten;\n  const eventPromise = new Promise(resolve => {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n  return eventPromise;\n}\n\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nexport function isLoaded(eleOrWindow) {\n  return !!(\n    eleOrWindow.complete ||\n    eleOrWindow.readyState == 'complete' ||\n    (isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0) ||\n    // If the passed in thing is a Window, infer loaded state from\n    //\n    (eleOrWindow.document && eleOrWindow.document.readyState == 'complete')\n  );\n}\n\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\nexport function loadPromise(eleOrWindow) {\n  let unlistenLoad;\n  let unlistenError;\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n  const isMediaElement = isHTMLMediaElement(eleOrWindow);\n  if (\n    isMediaElement &&\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc\n  ) {\n    return Promise.reject(eleOrWindow);\n  }\n  const loadingPromise = new Promise((resolve, reject) => {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true,\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    }\n    // Don't unlisten on error for Windows.\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n    let errorTarget = eleOrWindow;\n    // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = lastChildElement(\n        eleOrWindow,\n        child => child.tagName === 'SOURCE'\n      );\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n\n  return loadingPromise.then(\n    () => {\n      if (unlistenError) {\n        unlistenError();\n      }\n      return eleOrWindow;\n    },\n    () => {\n      if (unlistenLoad) {\n        unlistenLoad();\n      }\n      failedToLoad(eleOrWindow);\n    }\n  );\n}\n\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] =\n      eleOrWindow.currentSrc || true;\n  }\n\n  // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n  let target = eleOrWindow;\n  if (target && target.src) {\n    target = target.src;\n  }\n  throw user().createError(LOAD_FAILURE_PREFIX, target);\n}\n\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\nexport function isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\nimport {dev, user} from './log';\nimport {getMode} from './mode';\nimport {hasOwn} from './utils/object';\nimport {parseQueryString} from './url';\n\n/** @const {string} */\nconst TAG = 'EXPERIMENTS';\n\n/** @const {string} */\nconst LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n\n/** @const {string} */\nconst TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n\n/**\n * @typedef {{\n *   isTrafficEligible: function(!Window):boolean,\n *   branches: !Array<string>\n * }}\n */\nexport let ExperimentInfo;\n\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCanary(win) {\n  return !!(win.AMP_CONFIG && win.AMP_CONFIG.canary);\n}\n\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\nexport function getBinaryType(win) {\n  return win.AMP_CONFIG && win.AMP_CONFIG.type\n    ? win.AMP_CONFIG.type\n    : 'unknown';\n}\n\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\nexport function isExperimentOn(win, experimentId) {\n  const toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\nexport function toggleExperiment(\n  win,\n  experimentId,\n  opt_on,\n  opt_transientExperiment\n) {\n  const currentlyOn = isExperimentOn(win, /*OK*/ experimentId);\n  const on = !!(opt_on !== undefined ? opt_on : !currentlyOn);\n  if (on != currentlyOn) {\n    const toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      const storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles);\n      // Avoid affecting tests that spy/stub warn().\n      if (!getMode().test) {\n        user().warn(\n          TAG,\n          '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental',\n          experimentId,\n          on ? 'enabled' : 'disabled',\n          win.location.hostname\n        );\n      }\n    }\n  }\n  return on;\n}\n\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nexport function experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n  win[TOGGLES_WINDOW_PROPERTY] = Object.create(null);\n  const toggles = win[TOGGLES_WINDOW_PROPERTY];\n\n  // Read the default config of this build.\n  if (win.AMP_CONFIG) {\n    for (const experimentId in win.AMP_CONFIG) {\n      const frequency = win.AMP_CONFIG[experimentId];\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  }\n  // Read document level override from meta tag.\n  if (\n    win.AMP_CONFIG &&\n    Array.isArray(win.AMP_CONFIG['allow-doc-opt-in']) &&\n    win.AMP_CONFIG['allow-doc-opt-in'].length > 0\n  ) {\n    const allowed = win.AMP_CONFIG['allow-doc-opt-in'];\n    const meta = win.document.head.querySelector(\n      'meta[name=\"amp-experiments-opt-in\"]'\n    );\n    if (meta) {\n      const optedInExperiments = meta.getAttribute('content').split(',');\n      for (let i = 0; i < optedInExperiments.length; i++) {\n        if (allowed.indexOf(optedInExperiments[i]) != -1) {\n          toggles[optedInExperiments[i]] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  if (\n    win.AMP_CONFIG &&\n    Array.isArray(win.AMP_CONFIG['allow-url-opt-in']) &&\n    win.AMP_CONFIG['allow-url-opt-in'].length > 0\n  ) {\n    const allowed = win.AMP_CONFIG['allow-url-opt-in'];\n    const hash = win.location.originalHash || win.location.hash;\n    const params = parseQueryString(hash);\n    for (let i = 0; i < allowed.length; i++) {\n      const param = params[`e-${allowed[i]}`];\n      if (param == '1') {\n        toggles[allowed[i]] = true;\n      }\n      if (param == '0') {\n        toggles[allowed[i]] = false;\n      }\n    }\n  }\n  return toggles;\n}\n\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {Object<string, boolean>}\n */\nexport function experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nfunction getExperimentToggles(win) {\n  let experimentsString = '';\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch (e) {\n    dev().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n  const tokens = experimentsString ? experimentsString.split(/\\s*,\\s*/g) : [];\n\n  const toggles = Object.create(null);\n  for (let i = 0; i < tokens.length; i++) {\n    if (tokens[i].length == 0) {\n      continue;\n    }\n    if (tokens[i][0] == '-') {\n      toggles[tokens[i].substr(1)] = false;\n    } else {\n      toggles[tokens[i]] = true;\n    }\n  }\n  return toggles;\n}\n\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\nfunction saveExperimentToggles(win, toggles) {\n  const experimentIds = [];\n  for (const experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n  try {\n    if ('localStorage' in win) {\n      win.localStorage.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n    }\n  } catch (e) {\n    user().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\nexport function getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\nexport const RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng,\n};\n\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\nfunction selectRandomItem(arr) {\n  const rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return arr[Math.floor(rn * arr.length)] || null;\n}\n\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Object<string, !ExperimentInfo>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\nexport function randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  const selectedExperiments = {};\n  for (const experimentName in experiments) {\n    // Skip experimentName if it is not a key of experiments object or if it\n    // has already been populated by some other property.\n    if (!hasOwn(experiments, experimentName)) {\n      continue;\n    }\n    if (hasOwn(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (\n      !experiments[experimentName].isTrafficEligible ||\n      !experiments[experimentName].isTrafficEligible(win)\n    ) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    }\n\n    // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n    if (\n      !win.__AMP_EXPERIMENT_BRANCHES[experimentName] &&\n      isExperimentOn(win, /*OK*/ experimentName)\n    ) {\n      const {branches} = experiments[experimentName];\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(\n        branches\n      );\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n  return selectedExperiments;\n}\n\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\nexport function getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES\n    ? win.__AMP_EXPERIMENT_BRANCHES[experimentName]\n    : null;\n}\n\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\nexport function forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {addAttributesToElement, closestAncestorElementBySelector} from './dom';\nimport {deserializeMessage, isAmpMessage} from './3p-frame-messaging';\nimport {dev, devAssert} from './log';\nimport {dict} from './utils/object';\nimport {getData} from './event-helper';\nimport {parseUrlDeprecated} from './url';\nimport {remove} from './utils/array';\nimport {setStyle, toggle} from './style';\nimport {tryParseJson} from './json';\n\n/**\n * Sentinel used to force unlistening after a iframe is detached.\n * @type {string}\n */\nconst UNLISTEN_SENTINEL = 'unlisten';\n\n/**\n * The iframe feature policy that forces the iframe to pause when it's not\n * display.\n * See https://github.com/dtapuska/iframe-freeze.\n */\nconst EXECUTION_WHILE_NOT_RENDERED = 'execution-while-not-rendered';\n\n/**\n * @typedef {{\n *   frame: !Element,\n *   events: !Object<string, !Array<function(!JsonObject)>>\n * }}\n */\nlet WindowEventsDef;\n\n/**\n * Returns a mapping from a URL's origin to an array of windows and their\n * listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {boolean=} opt_create create the mapping if it does not exist\n * @return {?Object<string, !Array<!WindowEventsDef>>}\n */\nfunction getListenFors(parentWin, opt_create) {\n  let {listeningFors} = parentWin;\n\n  if (!listeningFors && opt_create) {\n    listeningFors = parentWin.listeningFors = Object.create(null);\n  }\n  return listeningFors || null;\n}\n\n/**\n * Returns an array of WindowEventsDef that have had any listenFor listeners\n * registered for this sentinel.\n * @param {?Window} parentWin the window that created the iframe\n * @param {string} sentinel the sentinel of the message\n * @param {boolean=} opt_create create the array if it does not exist\n * @return {?Array<!WindowEventsDef>}\n */\nfunction getListenForSentinel(parentWin, sentinel, opt_create) {\n  const listeningFors = getListenFors(parentWin, opt_create);\n  if (!listeningFors) {\n    return listeningFors;\n  }\n\n  let listenSentinel = listeningFors[sentinel];\n  if (!listenSentinel && opt_create) {\n    listenSentinel = listeningFors[sentinel] = [];\n  }\n  return listenSentinel || null;\n}\n\n/**\n * Returns an mapping of event names to listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {!Element} iframe the iframe element who's context will trigger the\n *     event\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @return {?Object<string, !Array<function(!JsonObject, !Window, string, !MessageEvent)>>}\n */\nfunction getOrCreateListenForEvents(parentWin, iframe, opt_is3P) {\n  const sentinel = getSentinel_(iframe, opt_is3P);\n  const listenSentinel = getListenForSentinel(parentWin, sentinel, true);\n\n  let windowEvents;\n  for (let i = 0; i < listenSentinel.length; i++) {\n    const we = listenSentinel[i];\n    if (we.frame === iframe) {\n      windowEvents = we;\n      break;\n    }\n  }\n\n  if (!windowEvents) {\n    windowEvents = {\n      frame: iframe,\n      events: Object.create(null),\n    };\n    listenSentinel.push(windowEvents);\n  }\n\n  return windowEvents.events;\n}\n\n/**\n * Returns an mapping of event names to listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {string} sentinel the sentinel of the message\n * @param {string} origin the source window's origin\n * @param {?Window} triggerWin the window that triggered the event\n * @return {?Object<string, !Array<function(!JsonObject, !Window, string, !MessageEvent)>>}\n */\nfunction getListenForEvents(parentWin, sentinel, origin, triggerWin) {\n  const listenSentinel = getListenForSentinel(parentWin, sentinel);\n\n  if (!listenSentinel) {\n    return listenSentinel;\n  }\n\n  // Find the entry for the frame.\n  // TODO(@nekodo): Add a WeakMap<Window, WindowEventsDef> cache to\n  //     speed up this process.\n  let windowEvents;\n  for (let i = 0; i < listenSentinel.length; i++) {\n    const we = listenSentinel[i];\n    const {contentWindow} = we.frame;\n    if (!contentWindow) {\n      setTimeout(dropListenSentinel, 0, listenSentinel);\n    } else if (\n      triggerWin == contentWindow ||\n      isDescendantWindow(contentWindow, triggerWin)\n    ) {\n      // 3p code path, we may accept messages from nested frames.\n      windowEvents = we;\n      break;\n    }\n  }\n\n  return windowEvents ? windowEvents.events : null;\n}\n\n/**\n * Checks whether one window is a descendant of another by climbing\n * the parent chain.\n * @param {?Window} ancestor potential ancestor window\n * @param {?Window} descendant potential descendant window\n * @return {boolean}\n */\nfunction isDescendantWindow(ancestor, descendant) {\n  for (let win = descendant; win && win != win.parent; win = win.parent) {\n    if (win == ancestor) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Removes any listenFors registed on listenSentinel that do not have\n * a contentWindow (the frame was removed from the DOM tree).\n * @param {!Array<!WindowEventsDef>} listenSentinel\n */\nfunction dropListenSentinel(listenSentinel) {\n  const noopData = dict({'sentinel': UNLISTEN_SENTINEL});\n\n  for (let i = listenSentinel.length - 1; i >= 0; i--) {\n    const windowEvents = listenSentinel[i];\n\n    if (!windowEvents.frame.contentWindow) {\n      listenSentinel.splice(i, 1);\n\n      const {events} = windowEvents;\n      for (const name in events) {\n        // Splice here, so that each unlisten does not shift the array\n        events[name].splice(0, Infinity).forEach(event => {\n          event(noopData);\n        });\n      }\n    }\n  }\n}\n\n/**\n * Registers the global listenFor event listener if it has yet to be.\n * @param {?Window} parentWin\n */\nfunction registerGlobalListenerIfNeeded(parentWin) {\n  if (parentWin.listeningFors) {\n    return;\n  }\n  const listenForListener = function(event) {\n    if (!getData(event)) {\n      return;\n    }\n    const data = parseIfNeeded(getData(event));\n\n    if (!data || !data['sentinel']) {\n      return;\n    }\n\n    const listenForEvents = getListenForEvents(\n      parentWin,\n      data['sentinel'],\n      event.origin,\n      event.source\n    );\n    if (!listenForEvents) {\n      return;\n    }\n\n    let listeners = listenForEvents[data['type']];\n    if (!listeners) {\n      return;\n    }\n\n    // We slice to avoid issues with adding another listener or unlistening\n    // during iteration. We could move to a Doubly Linked List with\n    // backtracking, but that's overly complicated.\n    listeners = listeners.slice();\n    for (let i = 0; i < listeners.length; i++) {\n      const listener = listeners[i];\n      listener(data, event.source, event.origin, event);\n    }\n  };\n\n  parentWin.addEventListener('message', listenForListener);\n}\n\n/**\n * Allows listening for message from the iframe. Returns an unlisten\n * function to remove the listener.\n *\n * @param {?Element} iframe\n * @param {string} typeOfMessage\n * @param {?function(!JsonObject, !Window, string, !MessageEvent)} callback Called when a\n *     message of this type arrives for this iframe.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @param {boolean=} opt_includingNestedWindows set to true if messages from\n *     nested frames should also be accepted.\n * @param {boolean=} opt_allowOpaqueOrigin set to true if messages from\n       opaque origins (origin == null) are allowed.\n * @return {!UnlistenDef}\n */\nexport function listenFor(\n  iframe,\n  typeOfMessage,\n  callback,\n  opt_is3P,\n  opt_includingNestedWindows,\n  opt_allowOpaqueOrigin\n) {\n  devAssert(iframe.src, 'only iframes with src supported');\n  devAssert(\n    !iframe.parentNode,\n    'cannot register events on an attached ' +\n      'iframe. It will cause hair-pulling bugs like #2942'\n  );\n  devAssert(callback);\n  const parentWin = iframe.ownerDocument.defaultView;\n\n  registerGlobalListenerIfNeeded(parentWin);\n\n  const listenForEvents = getOrCreateListenForEvents(\n    parentWin,\n    iframe,\n    opt_is3P\n  );\n\n  const iframeOrigin = parseUrlDeprecated(iframe.src).origin;\n  let events =\n    listenForEvents[typeOfMessage] || (listenForEvents[typeOfMessage] = []);\n\n  let unlisten;\n  let listener = function(data, source, origin, event) {\n    const sentinel = data['sentinel'];\n\n    // Exclude messages that don't satisfy amp sentinel rules.\n    if (sentinel == 'amp') {\n      // For `amp` sentinel, nested windows are not allowed\n      if (source != iframe.contentWindow) {\n        return;\n      }\n\n      // For `amp` sentinel origin must match unless opaque origin is allowed\n      const isOpaqueAndAllowed = origin == 'null' && opt_allowOpaqueOrigin;\n      if (iframeOrigin != origin && !isOpaqueAndAllowed) {\n        return;\n      }\n    }\n\n    // Exclude nested frames if necessary.\n    // Note that the source was already verified to be either the contentWindow\n    // of the iframe itself or a descendant window within it.\n    if (!opt_includingNestedWindows && source != iframe.contentWindow) {\n      return;\n    }\n\n    if (data.sentinel == UNLISTEN_SENTINEL) {\n      unlisten();\n      return;\n    }\n    callback(data, source, origin, event);\n  };\n\n  events.push(listener);\n\n  return (unlisten = function() {\n    if (listener) {\n      const index = events.indexOf(listener);\n      if (index > -1) {\n        events.splice(index, 1);\n      }\n      // Make sure references to the unlisten function do not keep\n      // alive too much.\n      listener = null;\n      events = null;\n      callback = null;\n    }\n  });\n}\n\n/**\n * Returns a promise that resolves when one of given messages has been observed\n * for the first time. And remove listener for all other messages.\n * @param {!Element} iframe\n * @param {string|!Array<string>} typeOfMessages\n * @param {boolean=} opt_is3P\n * @return {!Promise<!{data: !JsonObject, source: !Window, origin: string, event: !MessageEvent}>}\n */\nexport function listenForOncePromise(iframe, typeOfMessages, opt_is3P) {\n  const unlistenList = [];\n  if (typeof typeOfMessages == 'string') {\n    typeOfMessages = [typeOfMessages];\n  }\n  return new Promise(resolve => {\n    for (let i = 0; i < typeOfMessages.length; i++) {\n      const message = typeOfMessages[i];\n      const unlisten = listenFor(\n        iframe,\n        message,\n        (data, source, origin, event) => {\n          for (let i = 0; i < unlistenList.length; i++) {\n            unlistenList[i]();\n          }\n          resolve({data, source, origin, event});\n        },\n        opt_is3P\n      );\n      unlistenList.push(unlisten);\n    }\n  });\n}\n\n/**\n * Posts a message to the iframe.\n * @param {!Element} iframe The iframe.\n * @param {string} type Type of the message.\n * @param {!JsonObject} object Message payload.\n * @param {string} targetOrigin origin of the target.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n */\nexport function postMessage(iframe, type, object, targetOrigin, opt_is3P) {\n  postMessageToWindows(\n    iframe,\n    [{win: iframe.contentWindow, origin: targetOrigin}],\n    type,\n    object,\n    opt_is3P\n  );\n}\n\n/**\n * Posts an identical message to multiple target windows with the same\n * sentinel.\n * The message is serialized only once.\n * @param {!Element} iframe The iframe.\n * @param {!Array<{win: !Window, origin: string}>} targets to send the message\n *     to, pairs of window and its origin.\n * @param {string} type Type of the message.\n * @param {!JsonObject} object Message payload.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n */\nexport function postMessageToWindows(iframe, targets, type, object, opt_is3P) {\n  if (!iframe.contentWindow) {\n    return;\n  }\n  object['type'] = type;\n  object['sentinel'] = getSentinel_(iframe, opt_is3P);\n  let payload = object;\n  if (opt_is3P) {\n    // Serialize ourselves because that is much faster in Chrome.\n    payload = 'amp-' + JSON.stringify(object);\n  }\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i];\n    target.win./*OK*/ postMessage(payload, target.origin);\n  }\n}\n\n/**\n * Gets the sentinel string.\n * @param {!Element} iframe The iframe.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @return {string} Sentinel string.\n * @private\n */\nfunction getSentinel_(iframe, opt_is3P) {\n  return opt_is3P ? iframe.getAttribute('data-amp-3p-sentinel') : 'amp';\n}\n\n/**\n * JSON parses event.data if it needs to be\n * @param {*} data\n * @return {?JsonObject} object message\n * @private\n * @visibleForTesting\n */\nexport function parseIfNeeded(data) {\n  if (typeof data == 'string') {\n    if (data.charAt(0) == '{') {\n      data =\n        tryParseJson(data, e => {\n          dev().warn(\n            'IFRAME-HELPER',\n            'Postmessage could not be parsed. ' +\n              'Is it in a valid JSON format?',\n            e\n          );\n        }) || null;\n    } else if (isAmpMessage(data)) {\n      data = deserializeMessage(data);\n    } else {\n      data = null;\n    }\n  }\n  return /** @type {?JsonObject} */ (data);\n}\n\n/**\n * Manages a postMessage API for an iframe with a subscription message and\n * a way to broadcast messages to all subscribed windows, which\n * in turn must all be descendants of the contentWindow of the iframe.\n */\nexport class SubscriptionApi {\n  /**\n   * @param {!Element} iframe The iframe.\n   * @param {string} type Type of the subscription message.\n   * @param {boolean} is3p set to true if the iframe is 3p.\n   * @param {function(!JsonObject, !Window, string)} requestCallback Callback\n   *     invoked whenever a new window subscribes.\n   */\n  constructor(iframe, type, is3p, requestCallback) {\n    /** @private @const {!Element} */\n    this.iframe_ = iframe;\n    /** @private @const {boolean} */\n    this.is3p_ = is3p;\n    /** @private @const {!Array<{win: !Window, origin: string}>} */\n    this.clientWindows_ = [];\n\n    /** @private @const {!UnlistenDef} */\n    this.unlisten_ = listenFor(\n      this.iframe_,\n      type,\n      (data, source, origin) => {\n        // This message might be from any window within the iframe, we need\n        // to keep track of which windows want to be sent updates.\n        if (!this.clientWindows_.some(entry => entry.win == source)) {\n          this.clientWindows_.push({win: source, origin});\n        }\n        requestCallback(data, source, origin);\n      },\n      this.is3p_,\n      // For 3P frames we also allow nested frames within them to subscribe..\n      this.is3p_ /* opt_includingNestedWindows */\n    );\n  }\n\n  /**\n   * Sends a message to all subscribed windows.\n   * @param {string} type Type of the message.\n   * @param {!JsonObject} data Message payload.\n   */\n  send(type, data) {\n    // Remove clients that have been removed from the DOM.\n    remove(this.clientWindows_, client => !client.win.parent);\n    postMessageToWindows(\n      this.iframe_,\n      this.clientWindows_,\n      type,\n      data,\n      this.is3p_\n    );\n  }\n\n  /**\n   * Destroys iframe.\n   */\n  destroy() {\n    this.unlisten_();\n    this.clientWindows_.length = 0;\n  }\n}\n\n/**\n * @param {!Element} element\n * @return {boolean}\n */\nexport function looksLikeTrackingIframe(element) {\n  const box = element.getLayoutBox();\n  // This heuristic is subject to change.\n  if (box.width > 10 || box.height > 10) {\n    return false;\n  }\n  // Iframe is not tracking iframe if open with user interaction\n  return !closestAncestorElementBySelector(element, '.i-amphtml-overlay');\n}\n\n// Most common ad sizes\n// Array of [width, height] pairs.\nconst adSizes = [[300, 250], [320, 50], [300, 50], [320, 100]];\n\n/**\n * Guess whether this element might be an ad.\n * @param {!Element} element An amp-iframe element.\n * @return {boolean}\n * @visibleForTesting\n */\nexport function isAdLike(element) {\n  const box = element.getLayoutBox();\n  const {height, width} = box;\n  for (let i = 0; i < adSizes.length; i++) {\n    const refWidth = adSizes[i][0];\n    const refHeight = adSizes[i][1];\n    if (refHeight > height) {\n      continue;\n    }\n    if (refWidth > width) {\n      continue;\n    }\n    // Fuzzy matching to account for padding.\n    if (height - refHeight <= 20 && width - refWidth <= 20) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @param {!Element} iframe\n * @return {!Element}\n * @private\n */\nexport function disableScrollingOnIframe(iframe) {\n  addAttributesToElement(iframe, dict({'scrolling': 'no'}));\n\n  // This shouldn't work, but it does on Firefox.\n  // https://stackoverflow.com/a/15494969\n  setStyle(iframe, 'overflow', 'hidden');\n\n  return iframe;\n}\n\n/**\n * Returns true if win's properties can be accessed and win is defined.\n * This functioned is used to determine if a window is cross-domained\n * from the perspective of the current window.\n * @param {!Window} win\n * @return {boolean}\n * @private\n */\nexport function canInspectWindow(win) {\n  // TODO: this is not reliable.  The compiler assumes that property reads are\n  // side-effect free.  The recommended fix is to use goog.reflect.sinkValue\n  // but since we're not using the closure library I'm not sure how to do this.\n  // See https://github.com/google/closure-compiler/issues/3156\n  try {\n    // win['test'] could be truthy but not true the compiler shouldn't be able\n    // to optimize this check away.\n    return !!win.location.href && (win['test'] || true);\n  } catch (unusedErr) {\n    // eslint-disable-line no-unused-vars\n    return false;\n  }\n}\n\n/** @const {string} */\nexport const FIE_EMBED_PROP = '__AMP_EMBED__';\n\n/**\n * Returns the embed created using `installFriendlyIframeEmbed` or `null`.\n * Caution: This will only return the FIE after the iframe has 'loaded'. If you\n * are checking before this signal you may be in a race condition that returns\n * null.\n * @param {!HTMLIFrameElement} iframe\n * @return {?./friendly-iframe-embed.FriendlyIframeEmbed}\n */\nexport function getFriendlyIframeEmbedOptional(iframe) {\n  return /** @type {?./friendly-iframe-embed.FriendlyIframeEmbed} */ (iframe[\n    FIE_EMBED_PROP\n  ]);\n}\n\n/**\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isInFie(element) {\n  return (\n    element.classList.contains('i-amphtml-fie') ||\n    !!closestAncestorElementBySelector(element, '.i-amphtml-fie')\n  );\n}\n\n/**\n * @param {!HTMLIFrameElement} iframe\n */\nexport function makePausable(iframe) {\n  const oldAllow = (iframe.getAttribute('allow') || '').trim();\n  iframe.setAttribute(\n    'allow',\n    `${EXECUTION_WHILE_NOT_RENDERED} 'none';` + oldAllow\n  );\n}\n\n/**\n * @param {!HTMLIFrameElement} iframe\n * @return {boolean}\n */\nexport function isPausable(iframe) {\n  return (\n    !!iframe.featurePolicy &&\n    iframe.featurePolicy.features().indexOf(EXECUTION_WHILE_NOT_RENDERED) !=\n      -1 &&\n    !iframe.featurePolicy.allowsFeature(EXECUTION_WHILE_NOT_RENDERED)\n  );\n}\n\n/**\n * @param {!HTMLIFrameElement} iframe\n * @param {boolean} paused\n */\nexport function setPaused(iframe, paused) {\n  toggle(iframe, !paused);\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './utils/promise';\nimport {Services} from './services';\nimport {\n  addParamsToUrl,\n  isProxyOrigin,\n  parseQueryString,\n  parseUrlDeprecated,\n} from './url';\nimport {dev, user, userAssert} from './log';\nimport {getMode} from './mode';\nimport {isExperimentOn} from './experiments';\n\nconst TIMEOUT_VALUE = 8000;\n\nlet trackImpressionPromise = null;\n\nconst DEFAULT_APPEND_URL_PARAM = ['gclid', 'gclsrc'];\n\n/**\n * These domains are trusted with more sensitive viewer operations such as\n * sending impression requests. If you believe your domain should be here,\n * file the issue on GitHub to discuss. The process will be similar\n * (but somewhat more stringent) to the one described in the [3p/README.md](\n * https://github.com/ampproject/amphtml/blob/master/3p/README.md)\n *\n * @export {!Array<!RegExp>}\n */\nconst TRUSTED_REFERRER_HOSTS = [\n  /**\n   * Twitter's link wrapper domains:\n   * - t.co\n   */\n  /^t.co$/,\n];\n\n/**\n * A function to get the trackImpressionPromise;\n * @return {!Promise}\n */\nexport function getTrackImpressionPromise() {\n  return userAssert(trackImpressionPromise, 'E#19457 trackImpressionPromise');\n}\n\n/**\n * Function that reset the trackImpressionPromise only for testing\n * @visibleForTesting\n */\nexport function resetTrackImpressionPromiseForTesting() {\n  trackImpressionPromise = null;\n}\n\n/**\n * Emit a HTTP request to a destination defined on the incoming URL.\n * Launched for trusted viewer. Otherwise guarded by experiment.\n * @param {!Window} win\n */\nexport function maybeTrackImpression(win) {\n  const deferred = new Deferred();\n  const {promise, resolve: resolveImpression} = deferred;\n\n  trackImpressionPromise = Services.timerFor(win)\n    .timeoutPromise(TIMEOUT_VALUE, promise, 'TrackImpressionPromise timeout')\n    .catch(error => {\n      dev().warn('IMPRESSION', error);\n    });\n\n  const viewer = Services.viewerForDoc(win.document.documentElement);\n  const isTrustedViewerPromise = viewer.isTrustedViewer();\n  const isTrustedReferrerPromise = viewer\n    .getReferrerUrl()\n    .then(referrer => isTrustedReferrer(referrer));\n  Promise.all([isTrustedViewerPromise, isTrustedReferrerPromise]).then(\n    results => {\n      const isTrustedViewer = results[0];\n      const isTrustedReferrer = results[1];\n      // Enable the feature in the case of trusted viewer,\n      // or trusted referrer\n      // or with experiment turned on\n      if (\n        !isTrustedViewer &&\n        !isTrustedReferrer &&\n        !isExperimentOn(win, 'alp')\n      ) {\n        resolveImpression();\n        return;\n      }\n\n      const replaceUrlPromise = handleReplaceUrl(win);\n      const clickUrlPromise = handleClickUrl(win);\n\n      Promise.all([replaceUrlPromise, clickUrlPromise]).then(\n        () => {\n          resolveImpression();\n        },\n        () => {}\n      );\n    }\n  );\n}\n\n/**\n * Signal that impression tracking is not relevant in this environment.\n */\nexport function doNotTrackImpression() {\n  trackImpressionPromise = Promise.resolve();\n}\n\n/**\n * Handle the getReplaceUrl and return a promise when url is replaced Only\n * handles replaceUrl when viewer indicates AMP to do so. Viewer should indicate\n * by setting the legacy replaceUrl init param and add `replaceUrl` to its\n * capability param. Future plan is to change the type of legacy init replaceUrl\n * param from url string to boolean value. Please NOTE replaceUrl and adLocation\n * will never arrive at same time, so there is no race condition on the order of\n * handling url replacement.\n * @param {!Window} win\n * @return {!Promise}\n */\nfunction handleReplaceUrl(win) {\n  const viewer = Services.viewerForDoc(win.document.documentElement);\n\n  // ReplaceUrl substitution doesn't have to wait until the document is visible\n  if (!viewer.getParam('replaceUrl')) {\n    // The init replaceUrl param serve as a signal on whether replaceUrl is\n    // required for this doc.\n    return Promise.resolve();\n  }\n\n  if (!viewer.hasCapability('replaceUrl')) {\n    // If Viewer is not capability of providing async replaceUrl, use the legacy\n    // init replaceUrl param.\n    viewer.replaceUrl(viewer.getParam('replaceUrl') || null);\n    return Promise.resolve();\n  }\n\n  // request async replaceUrl is viewer support getReplaceUrl.\n  return viewer\n    .sendMessageAwaitResponse('getReplaceUrl', /* data */ undefined)\n    .then(\n      response => {\n        if (!response || typeof response != 'object') {\n          dev().warn('IMPRESSION', 'get invalid replaceUrl response');\n          return;\n        }\n        viewer.replaceUrl(response['replaceUrl'] || null);\n      },\n      err => {\n        dev().warn('IMPRESSION', 'Error request replaceUrl from viewer', err);\n      }\n    );\n}\n\n/**\n * @param {string} referrer\n * @return {boolean}\n * @visibleForTesting\n */\nexport function isTrustedReferrer(referrer) {\n  const url = parseUrlDeprecated(referrer);\n  if (url.protocol != 'https:') {\n    return false;\n  }\n  return TRUSTED_REFERRER_HOSTS.some(th => th.test(url.hostname));\n}\n\n/**\n * Perform the impression request if it has been provided via\n * the click param in the viewer arguments. Returns a promise.\n * @param {!Window} win\n * @return {!Promise}\n */\nfunction handleClickUrl(win) {\n  const ampdoc = Services.ampdoc(win.document.documentElement);\n  const viewer = Services.viewerForDoc(ampdoc);\n\n  /** @const {?string} */\n  const clickUrl = viewer.getParam('click');\n  if (!clickUrl) {\n    return Promise.resolve();\n  }\n\n  if (clickUrl.indexOf('https://') != 0) {\n    user().warn(\n      'IMPRESSION',\n      'click fragment param should start with https://. Found ',\n      clickUrl\n    );\n    return Promise.resolve();\n  }\n\n  if (win.location.hash) {\n    // This is typically done using replaceState inside the viewer.\n    // If for some reason it failed, get rid of the fragment here to\n    // avoid duplicate tracking.\n    win.location.hash = '';\n  }\n\n  // TODO(@zhouyx) need test with a real response.\n  return ampdoc\n    .whenFirstVisible()\n    .then(() => {\n      return invoke(win, dev().assertString(clickUrl));\n    })\n    .then(response => {\n      applyResponse(win, response);\n    })\n    .catch(err => {\n      user().warn('IMPRESSION', 'Error on request clickUrl: ', err);\n    });\n}\n\n/**\n * Send the url to ad server and wait for its response\n * @param {!Window} win\n * @param {string} clickUrl\n * @return {!Promise<?JsonObject>}\n */\nfunction invoke(win, clickUrl) {\n  if (getMode().localDev && !getMode().test) {\n    clickUrl = 'http://localhost:8000/impression-proxy?url=' + clickUrl;\n  }\n  return Services.xhrFor(win)\n    .fetchJson(clickUrl, {\n      credentials: 'include',\n    })\n    .then(res => {\n      // Treat 204 no content response specially\n      if (res.status == 204) {\n        return null;\n      }\n      return res.json();\n    });\n}\n\n/**\n * parse the response back from ad server\n * Set for analytics purposes\n * @param {!Window} win\n * @param {?JsonObject} response\n */\nfunction applyResponse(win, response) {\n  if (!response) {\n    return;\n  }\n\n  const adLocation = response['location'];\n  const adTracking = response['tracking_url'];\n\n  // If there is a tracking_url, need to track it\n  // Otherwise track the location\n  const trackUrl = adTracking || adLocation;\n\n  if (trackUrl && !isProxyOrigin(trackUrl)) {\n    // To request the provided trackUrl for tracking purposes.\n    new Image().src = trackUrl;\n  }\n\n  // Replace the location href params with new location params we get (if any).\n  if (adLocation) {\n    if (!win.history.replaceState) {\n      return;\n    }\n\n    const viewer = Services.viewerForDoc(win.document.documentElement);\n    const currentHref = win.location.href;\n    const url = parseUrlDeprecated(adLocation);\n    const params = parseQueryString(url.search);\n    const newHref = addParamsToUrl(currentHref, params);\n    // TODO: Avoid overwriting the fragment parameter.\n    win.history.replaceState(null, '', newHref);\n    viewer.maybeUpdateFragmentForCct();\n  }\n}\n\n/**\n * Return a promise that whether appending extra url params to outgoing link is\n * required.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @return {!Promise<boolean>}\n */\nexport function shouldAppendExtraParams(ampdoc) {\n  return ampdoc.whenReady().then(() => {\n    return !!ampdoc\n      .getBody()\n      .querySelector('amp-analytics[type=googleanalytics]');\n  });\n}\n\n/**\n * Return the extra url params string that should be appended to outgoing link\n * @param {!Window} win\n * @param {!Element} target\n * @return {string}\n */\nexport function getExtraParamsUrl(win, target) {\n  // Get an array with extra params that needs to append.\n  const url = parseUrlDeprecated(win.location.href);\n  const params = parseQueryString(url.search);\n  const appendParams = [];\n  for (let i = 0; i < DEFAULT_APPEND_URL_PARAM.length; i++) {\n    const param = DEFAULT_APPEND_URL_PARAM[i];\n    if (typeof params[param] !== 'undefined') {\n      appendParams.push(param);\n    }\n  }\n\n  // Check if the param already exists\n  const additionalUrlParams = target.getAttribute('data-amp-addparams');\n  let {href} = target;\n  if (additionalUrlParams) {\n    href = addParamsToUrl(href, parseQueryString(additionalUrlParams));\n  }\n  const loc = parseUrlDeprecated(href);\n  const existParams = parseQueryString(loc.search);\n  for (let i = appendParams.length - 1; i >= 0; i--) {\n    const param = appendParams[i];\n    if (typeof existParams[param] !== 'undefined') {\n      appendParams.splice(i, 1);\n    }\n  }\n  return getQueryParamUrl(appendParams);\n}\n\n/**\n * Helper method to convert an query param array to string\n * @param {!Array<string>} params\n * @return {string}\n */\nfunction getQueryParamUrl(params) {\n  let url = '';\n  for (let i = 0; i < params.length; i++) {\n    const param = params[i];\n    url +=\n      i == 0\n        ? `${param}=QUERY_PARAM(${param})`\n        : `&${param}=QUERY_PARAM(${param})`;\n  }\n  return url;\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../services';\nimport {\n  getServicePromiseForDoc,\n  registerServiceBuilderForDoc,\n  rejectServicePromiseForDoc,\n} from '../service';\n\nconst ServiceNames = {\n  VISIBILITY: 'host-visibility',\n  FULLSCREEN: 'host-fullscreen',\n  EXIT: 'host-exit',\n};\n\n/**\n * Error object for various host services. It is passed around in case\n * of host service failures for proper error handling.\n *\n * - fallback: if the caller should fallback to other impl\n *\n * @typedef {{\n *   fallback: boolean\n * }}\n */\nexport let HostServiceError;\n\n/**\n * A set of service interfaces that is used when the AMP document is loaded\n * in an environment that does not provide regular web APIs for things like\n * - open URL\n * - scroll events, IntersectionObserver\n * - expand to fullscreen\n *\n * The consumers of those services should get the service by calling\n * XXXForDoc(), which returns a Promise that resolves to the service Object,\n * or gets rejected with an error Object. (See HostServiceError)\n *\n * The providers of those services should install the service by calling\n * installXXXServiceForDoc() when it's available, or\n * rejectXXXServiceForDoc() when there is a failure.\n */\nexport class HostServices {\n  /**\n   * @param {!Element|!../service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {boolean}\n   */\n  static isAvailable(elementOrAmpDoc) {\n    const head = Services.ampdoc(elementOrAmpDoc).getHeadNode();\n    return !!head.querySelector('script[host-service]');\n  }\n\n  /**\n   * @param {!Element|!../service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!VisibilityInterface>}\n   */\n  static visibilityForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!VisibilityInterface>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      ServiceNames.VISIBILITY\n    ));\n  }\n\n  /**\n   * @param {!Element|!../service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @param {function(new:Object, !../service/ampdoc-impl.AmpDoc)} impl\n   */\n  static installVisibilityServiceForDoc(elementOrAmpDoc, impl) {\n    registerServiceBuilderForDoc(\n      elementOrAmpDoc,\n      ServiceNames.VISIBILITY,\n      impl,\n      /* opt_instantiate */ true\n    );\n  }\n\n  /**\n   * @param {!Element|!../service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @param {!HostServiceError} error\n   */\n  static rejectVisibilityServiceForDoc(elementOrAmpDoc, error) {\n    rejectServicePromiseForDoc(elementOrAmpDoc, ServiceNames.VISIBILITY, error);\n  }\n\n  /**\n   * @param {!Element|!../service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!FullscreenInterface>}\n   */\n  static fullscreenForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!FullscreenInterface>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      ServiceNames.FULLSCREEN\n    ));\n  }\n\n  /**\n   * @param {!Element|!../service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @param {function(new:Object, !../service/ampdoc-impl.AmpDoc)} impl\n   */\n  static installFullscreenServiceForDoc(elementOrAmpDoc, impl) {\n    registerServiceBuilderForDoc(\n      elementOrAmpDoc,\n      ServiceNames.FULLSCREEN,\n      impl,\n      /* opt_instantiate */ true\n    );\n  }\n\n  /**\n   * @param {!Element|!../service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @param {!HostServiceError} error\n   */\n  static rejectFullscreenServiceForDoc(elementOrAmpDoc, error) {\n    rejectServicePromiseForDoc(elementOrAmpDoc, ServiceNames.FULLSCREEN, error);\n  }\n\n  /**\n   * @param {!Element|!../service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!ExitInterface>}\n   */\n  static exitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!ExitInterface>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      ServiceNames.EXIT\n    ));\n  }\n\n  /**\n   * @param {!Element|!../service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @param {function(new:Object, !../service/ampdoc-impl.AmpDoc)} impl\n   */\n  static installExitServiceForDoc(elementOrAmpDoc, impl) {\n    registerServiceBuilderForDoc(\n      elementOrAmpDoc,\n      ServiceNames.EXIT,\n      impl,\n      /* opt_instantiate */ true\n    );\n  }\n\n  /**\n   * @param {!Element|!../service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @param {!HostServiceError} error\n   */\n  static rejectExitServiceForDoc(elementOrAmpDoc, error) {\n    rejectServicePromiseForDoc(elementOrAmpDoc, ServiceNames.EXIT, error);\n  }\n}\n\n/**\n * VisibilityInterface defines interface provided by host for visibility\n * detection.\n *\n * @interface\n */\nexport class VisibilityInterface {\n  /**\n   * Register a callback for visibility change events.\n   *\n   * @param {function(!VisibilityDataDef)} unusedCallback\n   */\n  onVisibilityChange(unusedCallback) {}\n}\n\n/**\n * The structure that combines position and size for an element. The exact\n * interpretation of position and size depends on the use case.\n *\n * @typedef {{\n *   visibleRect: (?../layout-rect.LayoutRectDef),\n *   visibleRatio: number\n * }}\n */\nexport let VisibilityDataDef;\n\n/**\n * FullscreenInterface defines interface provided by host to enable/disable\n * fullscreen mode.\n *\n * @interface\n */\nexport class FullscreenInterface {\n  /**\n   * Request to expand the given element to fullscreen overlay.\n   *\n   * @param {!Element} unusedTargetElement\n   * @return {!Promise<boolean>} promise resolves to a boolean\n   *     indicating if the request was fulfilled\n   */\n  enterFullscreenOverlay(unusedTargetElement) {}\n\n  /**\n   * Request to exit from fullscreen overlay.\n   *\n   * @param {!Element} unusedTargetElement\n   * @return {!Promise<boolean>} promise resolves to a boolean\n   *     indicating if the request was fulfilled\n   */\n  exitFullscreenOverlay(unusedTargetElement) {}\n}\n\n/**\n * ExitInterface defines interface provided by host for navigating out.\n *\n * @interface\n */\nexport class ExitInterface {\n  /**\n   * Request to navigate to URL.\n   *\n   * @param {string} unusedUrl\n   * @return {!Promise<boolean>} promise resolves to a boolean\n   *     indicating if the request was fulfilled\n   */\n  openUrl(unusedUrl) {}\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {READY_SCAN_SIGNAL} from './service/resources-interface';\nimport {Services} from './services';\n\n/** @const {!Array<string>} */\nconst EXCLUDE_INI_LOAD = [\n  'AMP-AD',\n  'AMP-ANALYTICS',\n  'AMP-PIXEL',\n  'AMP-AD-EXIT',\n];\n\n/**\n * Returns the promise that will be resolved when all content elements\n * have been loaded in the initially visible set.\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {!Window} hostWin\n * @param {!./layout-rect.LayoutRectDef} rect\n * @param {boolean=} opt_isInPrerender signifies if we are in prerender mode.\n * @return {!Promise}\n */\nexport function whenContentIniLoad(\n  elementOrAmpDoc,\n  hostWin,\n  rect,\n  opt_isInPrerender\n) {\n  const ampdoc = Services.ampdoc(elementOrAmpDoc);\n  return getMeasuredResources(ampdoc, hostWin, r => {\n    // TODO(jridgewell): Remove isFixed check here once the position\n    // is calculted correctly in a separate layer for embeds.\n    if (\n      !r.isDisplayed() ||\n      (!r.overlaps(rect) && !r.isFixed()) ||\n      (opt_isInPrerender && !r.prerenderAllowed())\n    ) {\n      return false;\n    }\n    return true;\n  }).then(resources => {\n    const promises = [];\n    resources.forEach(r => {\n      if (!EXCLUDE_INI_LOAD.includes(r.element.tagName)) {\n        promises.push(r.loadedOnce());\n      }\n    });\n    return Promise.all(promises);\n  });\n}\n\n/**\n * Returns a subset of resources which are (1) belong to the specified host\n * window, and (2) meet the filterFn given.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {!Window} hostWin\n * @param {function(!./service/resource.Resource):boolean} filterFn\n * @return {!Promise<!Array<!./service/resource.Resource>>}\n */\nexport function getMeasuredResources(ampdoc, hostWin, filterFn) {\n  // First, wait for the `ready-scan` signal. Waiting for each element\n  // individually is too expensive and `ready-scan` will cover most of\n  // the initially parsed elements.\n  // TODO(jridgewell): this path should be switched to use a future\n  // \"layer has been measured\" signal.\n  return ampdoc\n    .signals()\n    .whenSignal(READY_SCAN_SIGNAL)\n    .then(() => {\n      // Second, wait for any left-over elements to complete measuring.\n      const measurePromiseArray = [];\n      const resources = Services.resourcesForDoc(ampdoc);\n      resources.get().forEach(r => {\n        if (!r.hasBeenMeasured() && r.hostWin == hostWin && !r.hasOwner()) {\n          measurePromiseArray.push(r.getPageLayoutBoxAsync());\n        }\n      });\n      return Promise.all(measurePromiseArray);\n    })\n    .then(() => {\n      const resources = Services.resourcesForDoc(ampdoc);\n      return resources.get().filter(r => {\n        return (\n          r.hostWin == hostWin &&\n          !r.hasOwner() &&\n          r.hasBeenMeasured() &&\n          filterFn(r)\n        );\n      });\n    });\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Pass} from './pass';\nimport {Services} from './services';\nimport {SubscriptionApi} from './iframe-helper';\nimport {dev, devAssert} from './log';\nimport {dict} from './utils/object';\nimport {isArray, isFiniteNumber} from './types';\nimport {layoutRectLtwh, moveLayoutRect, rectIntersection} from './layout-rect';\n\n/**\n * The structure that defines the rectangle used in intersection observers.\n *\n * @typedef {{\n *   top: number,\n *   bottom: number,\n *   left: number,\n *   right: number,\n *   width: number,\n *   height: number,\n *   x: number,\n *   y: number,\n * }}\n */\nexport let DOMRect;\n\nexport const DEFAULT_THRESHOLD = [\n  0,\n  0.05,\n  0.1,\n  0.15,\n  0.2,\n  0.25,\n  0.3,\n  0.35,\n  0.4,\n  0.45,\n  0.5,\n  0.55,\n  0.6,\n  0.65,\n  0.7,\n  0.75,\n  0.8,\n  0.85,\n  0.9,\n  0.95,\n  1,\n];\n\n/** @typedef {{\n *    element: !Element,\n *    currentThresholdSlot: number,\n *  }}\n */\nlet ElementIntersectionStateDef;\n\n/** @const @private */\nconst TAG = 'INTERSECTION-OBSERVER';\n\n/** @const @private */\nconst INIT_TIME = Date.now();\n\n/**\n * A function to get the element's current IntersectionObserverEntry\n * regardless of the intersetion ratio. Only available when element is not\n * nested in a container iframe.\n * TODO: support opt_iframe if there's valid use cases.\n * @param {!./layout-rect.LayoutRectDef} element element's rect\n * @param {?./layout-rect.LayoutRectDef} owner element's owner rect\n * @param {!./layout-rect.LayoutRectDef} hostViewport hostViewport's rect\n * @return {!IntersectionObserverEntry} A change entry.\n */\nexport function getIntersectionChangeEntry(element, owner, hostViewport) {\n  const intersection =\n    rectIntersection(element, owner, hostViewport) ||\n    layoutRectLtwh(0, 0, 0, 0);\n  const ratio = intersectionRatio(intersection, element);\n  return calculateChangeEntry(element, hostViewport, intersection, ratio);\n}\n\n/**\n * @param {!Window} win\n * @return {boolean}\n */\nexport function nativeIntersectionObserverSupported(win) {\n  return (\n    'IntersectionObserver' in win &&\n    'IntersectionObserverEntry' in win &&\n    'intersectionRatio' in win.IntersectionObserverEntry.prototype\n  );\n}\n\n/**\n * A class to help amp-iframe and amp-ad nested iframe listen to intersection\n * change.\n */\nexport class IntersectionObserverApi {\n  /**\n   * @param {!AMP.BaseElement} baseElement\n   * @param {!Element} iframe\n   * @param {boolean=} opt_is3p\n   */\n  constructor(baseElement, iframe, opt_is3p) {\n    /** @private @const {!AMP.BaseElement} */\n    this.baseElement_ = baseElement;\n\n    /** @private {?IntersectionObserverPolyfill} */\n    this.intersectionObserver_ = null;\n\n    /** @private {boolean} */\n    this.shouldObserve_ = false;\n\n    /** @private {boolean} */\n    this.isInViewport_ = false;\n\n    /** @private {?function()} */\n    this.unlistenOnDestroy_ = null;\n\n    /** @private {!./service/viewport/viewport-interface.ViewportInterface} */\n    this.viewport_ = baseElement.getViewport();\n\n    /** @private {?SubscriptionApi} */\n    this.subscriptionApi_ = new SubscriptionApi(\n      iframe,\n      'send-intersections',\n      opt_is3p || false,\n      () => {\n        this.startSendingIntersection_();\n      }\n    );\n\n    this.intersectionObserver_ = new IntersectionObserverPolyfill(\n      entries => {\n        // Remove target info from cross origin iframe.\n        for (let i = 0; i < entries.length; i++) {\n          delete entries[i]['target'];\n        }\n        this.subscriptionApi_.send('intersection', dict({'changes': entries}));\n      },\n      {threshold: DEFAULT_THRESHOLD}\n    );\n    this.intersectionObserver_.tick(this.viewport_.getRect());\n\n    /** @const {function()} */\n    this.fire = () => {\n      if (!this.shouldObserve_ || !this.isInViewport_) {\n        return;\n      }\n      this.intersectionObserver_.tick(this.viewport_.getRect());\n    };\n  }\n\n  /**\n   * Function to start listening to viewport event. and observer intersection\n   * change on the element.\n   */\n  startSendingIntersection_() {\n    this.shouldObserve_ = true;\n    this.intersectionObserver_.observe(this.baseElement_.element);\n    this.baseElement_.getVsync().measure(() => {\n      this.isInViewport_ = this.baseElement_.isInViewport();\n      this.fire();\n    });\n\n    const unlistenViewportScroll = this.viewport_.onScroll(this.fire);\n    const unlistenViewportChange = this.viewport_.onChanged(this.fire);\n    this.unlistenOnDestroy_ = () => {\n      unlistenViewportScroll();\n      unlistenViewportChange();\n    };\n  }\n\n  /**\n   * Enable to the PositionObserver to listen to viewport events\n   * @param {boolean} inViewport\n   */\n  onViewportCallback(inViewport) {\n    this.isInViewport_ = inViewport;\n  }\n\n  /**\n   * Clean all listenrs\n   */\n  destroy() {\n    this.shouldObserve_ = false;\n    this.intersectionObserver_.disconnect();\n    this.intersectionObserver_ = null;\n    if (this.unlistenOnDestroy_) {\n      this.unlistenOnDestroy_();\n      this.unlistenOnDestroy_ = null;\n    }\n    this.subscriptionApi_.destroy();\n    this.subscriptionApi_ = null;\n  }\n}\n\n/**\n * The IntersectionObserverPolyfill class lets any element receive its\n * intersection data with the viewport. It acts like native browser supported\n * IntersectionObserver.\n * The IntersectionObserver receives a callback function and an optional option\n * as params. Whenever the element intersection ratio cross a threshold value,\n * IntersectionObserverPolyfill will call the provided callback function with\n * the change entry. Only Works with one document for now.\n * @visibleForTesting\n */\nexport class IntersectionObserverPolyfill {\n  /**\n   * @param {function(!Array<!IntersectionObserverEntry>)} callback\n   * @param {Object=} opt_option\n   */\n  constructor(callback, opt_option) {\n    /** @private @const {function(!Array<!IntersectionObserverEntry>)} */\n    this.callback_ = callback;\n\n    // The input threshold can be a number or an array of numbers.\n    let threshold = opt_option && opt_option.threshold;\n    if (threshold) {\n      threshold = isArray(threshold) ? threshold : [threshold];\n    } else {\n      threshold = [0];\n    }\n\n    for (let i = 0; i < threshold.length; i++) {\n      devAssert(\n        isFiniteNumber(threshold[i]),\n        'Threshold should be a finite number or an array of finite numbers'\n      );\n    }\n\n    /**\n     * A list of threshold, sorted in increasing numeric order\n     * @private @const {!Array}\n     */\n    this.threshold_ = threshold.sort();\n    devAssert(\n      this.threshold_[0] >= 0 &&\n        this.threshold_[this.threshold_.length - 1] <= 1,\n      'Threshold should be in the range from \"[0, 1]\"'\n    );\n\n    /** @private {?./layout-rect.LayoutRectDef} */\n    this.lastViewportRect_ = null;\n\n    /** @private {./layout-rect.LayoutRectDef|undefined} */\n    this.lastIframeRect_ = undefined;\n\n    /**\n     * Store a list of observed elements and their current threshold slot which\n     * their intersection ratio fills, range from [0, this.threshold_.length]\n     * @private {Array<!ElementIntersectionStateDef>}\n     */\n    this.observeEntries_ = [];\n\n    /**\n     * Mutation observer to fire off on visibility changes\n     * @private {?function()}\n     */\n    this.hiddenObserverUnlistener_ = null;\n\n    /** @private {Pass} */\n    this.mutationPass_ = null;\n  }\n\n  /**\n   * Function to unobserve all elements.\n   * and clean up the polyfill.\n   */\n  disconnect() {\n    this.observeEntries_.length = 0;\n    this.disconnectMutationObserver_();\n  }\n\n  /**\n   * Provide a way to observe the intersection change for a specific element\n   * Please note IntersectionObserverPolyfill only support AMP element now\n   * TODO: Support non AMP element\n   * @param {!Element} element\n   */\n  observe(element) {\n    // Check the element is an AMP element.\n    devAssert(element.getLayoutBox);\n\n    // If the element already exists in current observeEntries, do nothing\n    for (let i = 0; i < this.observeEntries_.length; i++) {\n      if (this.observeEntries_[i].element === element) {\n        dev().warn(TAG, 'should observe same element once');\n        return;\n      }\n    }\n\n    const newState = {\n      element,\n      currentThresholdSlot: 0,\n    };\n\n    // Get the new observed element's first changeEntry based on last viewport\n    if (this.lastViewportRect_) {\n      const change = this.getValidIntersectionChangeEntry_(\n        newState,\n        this.lastViewportRect_,\n        this.lastIframeRect_\n      );\n      if (change) {\n        this.callback_([change]);\n      }\n    }\n\n    // Add a mutation observer to tick ourself\n    // TODO (@torch2424): Allow this to observe elements,\n    // from multiple documents.\n    const ampdoc = Services.ampdoc(element);\n    if (ampdoc.win.MutationObserver && !this.hiddenObserverUnlistener_) {\n      this.mutationPass_ = new Pass(\n        ampdoc.win,\n        this.handleMutationObserverPass_.bind(this, element)\n      );\n      const hiddenObserver = Services.hiddenObserverForDoc(element);\n      this.hiddenObserverUnlistener_ = hiddenObserver.add(\n        this.handleMutationObserverNotification_.bind(this)\n      );\n    }\n\n    // push new observed element\n    this.observeEntries_.push(newState);\n  }\n\n  /**\n   * Provide a way to unobserve intersection change for a specified element\n   * @param {!Element} element\n   */\n  unobserve(element) {\n    // find the unobserved element in observeEntries\n    for (let i = 0; i < this.observeEntries_.length; i++) {\n      if (this.observeEntries_[i].element === element) {\n        this.observeEntries_.splice(i, 1);\n        if (this.observeEntries_.length <= 0) {\n          this.disconnectMutationObserver_();\n        }\n        return;\n      }\n    }\n    dev().warn(TAG, 'unobserve non-observed element');\n  }\n\n  /**\n   * Tick function that update the DOMRect of the root of observed elements.\n   * Caller needs to make sure to pass in the correct container.\n   * Note: the opt_iframe param is the iframe position relative to the host doc,\n   * The iframe must be a non-scrollable iframe.\n   * @param {!./layout-rect.LayoutRectDef} hostViewport\n   * @param {./layout-rect.LayoutRectDef=} opt_iframe\n   */\n  tick(hostViewport, opt_iframe) {\n    if (opt_iframe) {\n      // If element inside an iframe. Adjust origin to the iframe.left/top.\n      hostViewport = moveLayoutRect(\n        hostViewport,\n        -opt_iframe.left,\n        -opt_iframe.top\n      );\n      opt_iframe = moveLayoutRect(\n        opt_iframe,\n        -opt_iframe.left,\n        -opt_iframe.top\n      );\n    }\n\n    this.lastViewportRect_ = hostViewport;\n    this.lastIframeRect_ = opt_iframe;\n\n    const changes = [];\n\n    for (let i = 0; i < this.observeEntries_.length; i++) {\n      const change = this.getValidIntersectionChangeEntry_(\n        this.observeEntries_[i],\n        hostViewport,\n        opt_iframe\n      );\n      if (change) {\n        changes.push(change);\n      }\n    }\n\n    if (changes.length) {\n      this.callback_(changes);\n    }\n  }\n\n  /**\n   * Return a change entry for one element that should be compatible with\n   * IntersectionObserverEntry if it's valid with current config.\n   * When the new intersection ratio doesn't cross one of a threshold value,\n   * the function will return null.\n   *\n   * @param {!ElementIntersectionStateDef} state\n   * @param {!./layout-rect.LayoutRectDef} hostViewport hostViewport's rect\n   * @param {./layout-rect.LayoutRectDef=} opt_iframe iframe container rect\n   *    If opt_iframe is provided, all LayoutRect has position relative to\n   *    the iframe. If opt_iframe is not provided,\n   *    all LayoutRect has position relative to the host document.\n   * @return {?IntersectionObserverEntry} A valid change entry or null if ratio\n   * @private\n   */\n  getValidIntersectionChangeEntry_(state, hostViewport, opt_iframe) {\n    const {element} = state;\n\n    const elementRect = element.getLayoutBox();\n    const owner = element.getOwner();\n    const ownerRect = owner && owner.getLayoutBox();\n\n    // calculate intersectionRect. that the element intersects with hostViewport\n    // and intersects with owner element and container iframe if exists.\n    const intersectionRect =\n      rectIntersection(elementRect, ownerRect, hostViewport, opt_iframe) ||\n      layoutRectLtwh(0, 0, 0, 0);\n    // calculate ratio, call callback based on new ratio value.\n    const ratio = intersectionRatio(intersectionRect, elementRect);\n    const newThresholdSlot = getThresholdSlot(this.threshold_, ratio);\n\n    if (newThresholdSlot == state.currentThresholdSlot) {\n      return null;\n    }\n    state.currentThresholdSlot = newThresholdSlot;\n\n    // To get same behavior as native IntersectionObserver set hostViewport null\n    // if inside an iframe\n    const changeEntry = calculateChangeEntry(\n      elementRect,\n      opt_iframe ? null : hostViewport,\n      intersectionRect,\n      ratio\n    );\n    changeEntry.target = element;\n    return changeEntry;\n  }\n\n  /**\n   * Handle Mutation Oberserver events\n   * @private\n   */\n  handleMutationObserverNotification_() {\n    if (this.mutationPass_.isPending()) {\n      return;\n    }\n\n    // Wait one animation frame so that other mutations may arrive.\n    this.mutationPass_.schedule(16);\n  }\n\n  /**\n   * Handle Mutation Observer Pass\n   * This performas the tick, and is wrapped in a paas\n   * To handle throttling of the observer\n   * @param {!Element} element\n   * @private\n   */\n  handleMutationObserverPass_(element) {\n    const viewport = Services.viewportForDoc(element);\n    const resources = Services.resourcesForDoc(element);\n    resources.onNextPass(() => {\n      this.tick(viewport.getRect());\n    });\n  }\n\n  /**\n   * Clean up the mutation observer\n   * @private\n   */\n  disconnectMutationObserver_() {\n    if (this.hiddenObserverUnlistener_) {\n      this.hiddenObserverUnlistener_();\n    }\n    this.hiddenObserverUnlistener_ = null;\n    if (this.mutationPass_) {\n      this.mutationPass_.cancel();\n    }\n    this.mutationPass_ = null;\n  }\n}\n\n/**\n * Returns the ratio of the smaller box's area to the larger box's area.\n * @param {!./layout-rect.LayoutRectDef} smaller\n * @param {!./layout-rect.LayoutRectDef} larger\n * @return {number}\n * @visibleForTesting\n */\nexport function intersectionRatio(smaller, larger) {\n  const smallerBoxArea = smaller.width * smaller.height;\n  const largerBoxArea = larger.width * larger.height;\n\n  // Check for a divide by zero\n  return largerBoxArea === 0 ? 0 : smallerBoxArea / largerBoxArea;\n}\n\n/**\n * Returns the slot number that the current ratio fills in.\n * @param {!Array} sortedThreshold valid sorted IoB threshold\n * @param {number} ratio Range from [0, 1]\n * @return {number} Range from [0, threshold.length]\n * @visibleForTesting\n */\nexport function getThresholdSlot(sortedThreshold, ratio) {\n  let startIdx = 0;\n  let endIdx = sortedThreshold.length;\n  // 0 is a special case that does not fit into [small, large) range\n  if (ratio == 0) {\n    return 0;\n  }\n  let mid = ((startIdx + endIdx) / 2) | 0;\n  while (startIdx < mid) {\n    const midValue = sortedThreshold[mid];\n    // In the range of [small, large)\n    if (ratio < midValue) {\n      endIdx = mid;\n    } else {\n      startIdx = mid;\n    }\n    mid = ((startIdx + endIdx) / 2) | 0;\n  }\n  return endIdx;\n}\n\n/**\n * Helper function to calculate the IntersectionObserver change entry.\n * @param {!./layout-rect.LayoutRectDef} element element's rect\n * @param {?./layout-rect.LayoutRectDef} hostViewport hostViewport's rect\n * @param {!./layout-rect.LayoutRectDef} intersection\n * @param {number} ratio\n * @return {!IntersectionObserverEntry}}\n */\nfunction calculateChangeEntry(element, hostViewport, intersection, ratio) {\n  // If element not in an iframe.\n  // adjust all LayoutRect to hostViewport Origin.\n  let boundingClientRect = element;\n  let rootBounds = hostViewport;\n  // If no hostViewport is provided, element is inside an non-scrollable iframe.\n  // Every Layoutrect has already adjust their origin according to iframe\n  // rect origin. LayoutRect position is relative to iframe origin,\n  // thus relative to iframe's viewport origin because the viewport is at the\n  // iframe origin. No need to adjust position here.\n\n  if (hostViewport) {\n    // If element not in an iframe.\n    // adjust all LayoutRect to hostViewport Origin.\n    rootBounds = /** @type {!./layout-rect.LayoutRectDef} */ (rootBounds);\n    intersection = moveLayoutRect(\n      intersection,\n      -hostViewport.left,\n      -hostViewport.top\n    );\n    // The element is relative to (0, 0), while the viewport moves. So, we must\n    // adjust.\n    boundingClientRect = moveLayoutRect(\n      boundingClientRect,\n      -hostViewport.left,\n      -hostViewport.top\n    );\n    // Now, move the viewport to (0, 0)\n    rootBounds = moveLayoutRect(\n      rootBounds,\n      -hostViewport.left,\n      -hostViewport.top\n    );\n  }\n\n  return /** @type {!IntersectionObserverEntry} */ ({\n    time:\n      typeof performance !== 'undefined' && performance.now\n        ? performance.now()\n        : Date.now() - INIT_TIME,\n    rootBounds,\n    boundingClientRect,\n    intersectionRect: intersection,\n    intersectionRatio: ratio,\n  });\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n\nimport {childElementsByTag, isJsonScriptTag} from './dom';\nimport {isObject} from './types';\n\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {*} should be string|number|boolean|null\n */\nlet JSONScalarDef;\n\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {*} should be !Object<string, ?JSONValueDef>\n */\nlet JSONObjectDef;\n\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {*} should be !Array<?JSONValueDef>\n */\nlet JSONArrayDef;\n\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {*} should be !JSONScalarDef|!JSONObjectDef|!JSONArrayDef\n */\nlet JSONValueDef;\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = Object.create(null);\n  for (const k in obj) {\n    if (!hasOwnProperty(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (let i = 0; i < parts.length; i++) {\n    const part = parts[i];\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      hasOwnProperty(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {*} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function parseJson(json) {\n  return /** @type {?JsonObject} */ (JSON.parse(/** @type {string} */ (json)));\n}\n\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {*} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    if (opt_onFailed) {\n      opt_onFailed(e);\n    }\n    return null;\n  }\n}\n\n/**\n * Helper method to get the json config from an element <script> tag\n * @param {!Element} element\n * @return {?JsonObject}\n * @throws {!Error} If element does not have exactly one <script> child\n * with type=\"application/json\", or if the <script> contents are not valid JSON.\n */\nexport function getChildJsonConfig(element) {\n  const scripts = childElementsByTag(element, 'script');\n  const n = scripts.length;\n  if (n !== 1) {\n    throw new Error(`Found ${scripts.length} <script> children. Expected 1.`);\n  }\n  const script = scripts[0];\n  if (!isJsonScriptTag(script)) {\n    throw new Error('<script> child must have type=\"application/json\"');\n  }\n  try {\n    return parseJson(script.textContent);\n  } catch (unusedError) {\n    throw new Error('Failed to parse <script> contents. Is it valid JSON?');\n  }\n}\n\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\nexport function deepEquals(a, b, depth = 5) {\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n  const queue = [{a, b, depth}];\n  while (queue.length > 0) {\n    const {a, b, depth} = queue.shift();\n    // Only check deep equality if depth > 0.\n    if (depth > 0) {\n      if (typeof a !== typeof b) {\n        return false;\n      } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          queue.push({a: a[i], b: b[i], depth: depth - 1});\n        }\n        continue;\n      } else if (a && b && typeof a === 'object' && typeof b === 'object') {\n        const keysA = Object.keys(/** @type {!Object} */ (a));\n        const keysB = Object.keys(/** @type {!Object} */ (b));\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n        for (let i = 0; i < keysA.length; i++) {\n          const k = keysA[i];\n          queue.push({a: a[k], b: b[k], depth: depth - 1});\n        }\n        continue;\n      }\n    }\n    // If we get here, then depth == 0 or (a, b) are primitives.\n    if (a !== b) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {*} obj\n * @param {string} key\n * @return {boolean}\n */\nfunction hasOwnProperty(obj, key) {\n  if (obj == null || typeof obj != 'object') {\n    return false;\n  }\n  return Object.prototype.hasOwnProperty.call(\n    /** @type {!Object} */ (obj),\n    key\n  );\n}\n\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\nexport function jsonConfiguration(obj) {\n  return /** @type {!JsonObject} */ (obj);\n}\n\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {!Object|!Array|string|number|boolean|null} value\n * @return {!InternalJsonLiteralTypeDef}\n */\nexport function jsonLiteral(value) {\n  return /** @type {!InternalJsonLiteralTypeDef} */ (value);\n}\n\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\nexport function includeJsonLiteral(value) {\n  return value;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The structure that combines position and size for an element. The exact\n * interpretation of position and size depends on the use case.\n *\n * @typedef {{\n *   top: number,\n *   bottom: number,\n *   left: number,\n *   right: number,\n *   width: number,\n *   height: number,\n *   x: number,\n *   y: number\n * }}\n */\nexport let LayoutRectDef;\n\n/**\n * The structure that represents the margins of an Element.\n *\n * @typedef {{\n *   top: number,\n *   right: number,\n *   bottom: number,\n *   left: number\n * }}\n */\nexport let LayoutMarginsDef;\n\n/**\n * The structure that represents a requested change to the margins of an\n * Element. Any new values specified will replace existing ones (rather than\n * being additive).\n *\n * @typedef {{\n *   top: (number|undefined),\n *   right: (number|undefined),\n *   bottom: (number|undefined),\n *   left: (number|undefined)\n * }}\n */\nexport let LayoutMarginsChangeDef;\n\n/**\n * RelativePositions\n *\n * Describes the relative position of an element to another (whether the\n * first is inside the second, on top of the second or on the bottom\n * @enum {string}\n */\nexport const RelativePositions = {\n  INSIDE: 'inside',\n  TOP: 'top',\n  BOTTOM: 'bottom',\n};\n\n/**\n * Creates a layout rect based on the left, top, width and height parameters\n * in that order.\n * @param {number} left\n * @param {number} top\n * @param {number} width\n * @param {number} height\n * @return {!LayoutRectDef}\n */\nexport function layoutRectLtwh(left, top, width, height) {\n  return {\n    left,\n    top,\n    width,\n    height,\n    bottom: top + height,\n    right: left + width,\n    x: left,\n    y: top,\n  };\n}\n\n/**\n * Creates a layout rect based on the DOMRect, e.g. obtained from calling\n * getBoundingClientRect.\n * @param {!ClientRect} rect\n * @return {!LayoutRectDef}\n */\nexport function layoutRectFromDomRect(rect) {\n  return layoutRectLtwh(\n    Number(rect.left),\n    Number(rect.top),\n    Number(rect.width),\n    Number(rect.height)\n  );\n}\n\n/**\n * Returns true if the specified two rects overlap by a single pixel.\n * @param {!LayoutRectDef} r1\n * @param {!LayoutRectDef} r2\n * @return {boolean}\n */\nexport function layoutRectsOverlap(r1, r2) {\n  return (\n    r1.top <= r2.bottom &&\n    r2.top <= r1.bottom &&\n    r1.left <= r2.right &&\n    r2.left <= r1.right\n  );\n}\n\n/**\n * Returns the intersection between a, b or null if there is none.\n * @param {...?LayoutRectDef|undefined} var_args\n * @return {?LayoutRectDef}\n */\nexport function rectIntersection(var_args) {\n  let x0 = -Infinity;\n  let x1 = Infinity;\n  let y0 = -Infinity;\n  let y1 = Infinity;\n  for (let i = 0; i < arguments.length; i++) {\n    const current = arguments[i];\n    if (!current) {\n      continue;\n    }\n    x0 = Math.max(x0, current.left);\n    x1 = Math.min(x1, current.left + current.width);\n    y0 = Math.max(y0, current.top);\n    y1 = Math.min(y1, current.top + current.height);\n    if (x1 < x0 || y1 < y0) {\n      return null;\n    }\n  }\n  if (x1 == Infinity) {\n    return null;\n  }\n  return layoutRectLtwh(x0, y0, x1 - x0, y1 - y0);\n}\n\n/**\n * Returns the position of r2 relative to r1\n * @param {!LayoutRectDef} r1\n * @param {!LayoutRectDef} r2\n * @return {RelativePositions}\n */\nexport function layoutRectsRelativePos(r1, r2) {\n  if (r1.top < r2.top) {\n    return RelativePositions.TOP;\n  } else if (r1.bottom > r2.bottom) {\n    return RelativePositions.BOTTOM;\n  } else {\n    return RelativePositions.INSIDE;\n  }\n}\n\n/**\n * Determines if any portion of a layoutBox would be onscreen in the given\n * viewport, when scrolled to the specified position.\n * @param {!LayoutRectDef} layoutBox\n * @param {!./service/viewport/viewport-interface.ViewportInterface} viewport\n * @param {number} scrollPos\n * @return {RelativePositions}\n */\nexport function layoutPositionRelativeToScrolledViewport(\n  layoutBox,\n  viewport,\n  scrollPos\n) {\n  const scrollLayoutBox = layoutRectFromDomRect(\n    /** @type {!ClientRect} */ ({\n      top: scrollPos,\n      bottom: scrollPos + viewport.getHeight(),\n      left: 0,\n      right: viewport.getWidth(),\n    })\n  );\n  if (layoutRectsOverlap(layoutBox, scrollLayoutBox)) {\n    return RelativePositions.INSIDE;\n  } else {\n    return layoutRectsRelativePos(layoutBox, scrollLayoutBox);\n  }\n}\n\n/**\n * Expand the layout rect using multiples of width and height.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dw Expansion in width, specified as a multiple of width.\n * @param {number} dh Expansion in height, specified as a multiple of height.\n * @return {!LayoutRectDef}\n */\nexport function expandLayoutRect(rect, dw, dh) {\n  return layoutRectLtwh(\n    rect.left - rect.width * dw,\n    rect.top - rect.height * dh,\n    rect.width * (1 + dw * 2),\n    rect.height * (1 + dh * 2)\n  );\n}\n\n/**\n * Moves the layout rect using dx and dy.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dx Move horizontally with this value.\n * @param {number} dy Move vertically with this value.\n * @return {!LayoutRectDef}\n */\nexport function moveLayoutRect(rect, dx, dy) {\n  if ((dx == 0 && dy == 0) || (rect.width == 0 && rect.height == 0)) {\n    return rect;\n  }\n  return layoutRectLtwh(rect.left + dx, rect.top + dy, rect.width, rect.height);\n}\n\n/**\n * @param {!LayoutMarginsDef} margins\n * @param {!LayoutMarginsChangeDef} change\n * @return {boolean}\n */\nexport function areMarginsChanged(margins, change) {\n  return (\n    (change.top !== undefined && change.top != margins.top) ||\n    (change.right !== undefined && change.right != margins.right) ||\n    (change.bottom !== undefined && change.bottom != margins.bottom) ||\n    (change.left !== undefined && change.left != margins.left)\n  );\n}\n\n/**\n * @param {!LayoutRectDef} from\n * @param {!LayoutRectDef} to\n * @return {boolean}\n */\nexport function layoutRectSizeEquals(from, to) {\n  return from.width == to.width && from.height === to.height;\n}\n\n/**\n * @param {?LayoutRectDef} r1\n * @param {?LayoutRectDef} r2\n * @return {boolean}\n */\nexport function layoutRectEquals(r1, r2) {\n  if (!r1 || !r2) {\n    return false;\n  }\n  return (\n    r1.left == r2.left &&\n    r1.top == r2.top &&\n    r1.width == r2.width &&\n    r1.height == r2.height\n  );\n}\n\n/**\n * @param {LayoutMarginsChangeDef|undefined} marginsChange\n * @return {LayoutMarginsChangeDef|undefined}\n */\nexport function cloneLayoutMarginsChangeDef(marginsChange) {\n  if (!marginsChange) {\n    return marginsChange;\n  }\n  return {\n    top: marginsChange.top,\n    bottom: marginsChange.bottom,\n    left: marginsChange.left,\n    right: marginsChange.right,\n  };\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implements element layout. See https://goo.gl/9avXuT for\n * details.\n */\n\nimport {dev, devAssert, userAssert} from './log';\nimport {htmlFor} from './static-template';\nimport {isFiniteNumber} from './types';\nimport {setStyle, setStyles, toggle} from './style';\nimport {startsWith} from './string';\n\n/**\n * @enum {string}\n */\nexport const Layout = {\n  NODISPLAY: 'nodisplay',\n  FIXED: 'fixed',\n  FIXED_HEIGHT: 'fixed-height',\n  RESPONSIVE: 'responsive',\n  CONTAINER: 'container',\n  FILL: 'fill',\n  FLEX_ITEM: 'flex-item',\n  FLUID: 'fluid',\n  INTRINSIC: 'intrinsic',\n};\n\n/**\n * Layout priorities to use with BaseElement#getLayoutPriority() and\n * BaseElement#updateLayoutPriority().\n * @enum {number}\n */\nexport const LayoutPriority = {\n  CONTENT: 0,\n  METADATA: 1,\n  ADS: 2,\n  BACKGROUND: 3,\n};\n\n/**\n * CSS Length type. E.g. \"1px\" or \"20vh\".\n * @typedef {string}\n */\nexport let LengthDef;\n\n/**\n * @typedef {{\n *   width: string,\n *   height: string\n * }}\n */\nlet DimensionsDef;\n\n/**\n * The set of elements with natural dimensions, that is, elements\n * which have a known dimension either based on their value specified here,\n * or, if the value is null, a dimension specific to the browser.\n * `hasNaturalDimensions` checks for membership in this set.\n * `getNaturalDimensions` determines the dimensions for an element in the\n *    set and caches it.\n * @type {!Object<string, ?DimensionsDef>}\n * @private  Visible for testing only!\n */\nexport const naturalDimensions_ = {\n  'AMP-PIXEL': {width: '0px', height: '0px'},\n  'AMP-ANALYTICS': {width: '1px', height: '1px'},\n  // TODO(dvoytenko): audio should have width:auto.\n  'AMP-AUDIO': null,\n  'AMP-SOCIAL-SHARE': {width: '60px', height: '44px'},\n};\n\n/**\n * Elements that the progress can be shown for. This set has to be externalized\n * since the element's implementation may not be downloaded yet.\n * This list does not include video players which are found via regex later.\n * @enum {boolean}\n * @private  Visible for testing only!\n */\nexport const LOADING_ELEMENTS_ = {\n  'AMP-AD': true,\n  'AMP-ANIM': true,\n  'AMP-EMBED': true,\n  'AMP-FACEBOOK': true,\n  'AMP-FACEBOOK-COMMENTS': true,\n  'AMP-FACEBOOK-PAGE': true,\n  'AMP-GOOGLE-DOCUMENT-EMBED': true,\n  'AMP-IFRAME': true,\n  'AMP-IMG': true,\n  'AMP-INSTAGRAM': true,\n  'AMP-LIST': true,\n  'AMP-PINTEREST': true,\n  'AMP-PLAYBUZZ': true,\n  'AMP-TWITTER': true,\n};\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they are listed individually.\n * @private @const {!RegExp}\n */\nconst videoPlayerTagNameRe = /^amp\\-(video|.+player)|AMP-BRIGHTCOVE|AMP-DAILYMOTION|AMP-YOUTUBE|AMP-VIMEO|AMP-IMA-VIDEO/i;\n\n/**\n * @param {string} s\n * @return {Layout|undefined} Returns undefined in case of failure to parse\n *   the layout string.\n */\nexport function parseLayout(s) {\n  for (const k in Layout) {\n    if (Layout[k] == s) {\n      return Layout[k];\n    }\n  }\n  return undefined;\n}\n\n/**\n * @param {!Layout} layout\n * @return {string}\n */\nexport function getLayoutClass(layout) {\n  return 'i-amphtml-layout-' + layout;\n}\n\n/**\n * Whether an element with this layout inherently defines the size.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeDefined(layout) {\n  return (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.FILL ||\n    layout == Layout.FLEX_ITEM ||\n    layout == Layout.FLUID ||\n    layout == Layout.INTRINSIC\n  );\n}\n\n/**\n * Whether an element with this layout has a fixed dimension.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeFixed(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT;\n}\n\n/**\n * Whether the tag is an internal (service) AMP tag.\n * @param {!Node|string} tag\n * @return {boolean}\n */\nexport function isInternalElement(tag) {\n  const tagName = typeof tag == 'string' ? tag : tag.tagName;\n  return tagName && startsWith(tagName.toLowerCase(), 'i-');\n}\n\n/**\n * Parses the CSS length value. If no units specified, the assumed value is\n * \"px\". Returns undefined in case of parsing error.\n * @param {string|undefined|null} s\n * @return {!LengthDef|undefined}\n */\nexport function parseLength(s) {\n  if (typeof s == 'number') {\n    return s + 'px';\n  }\n  if (!s) {\n    return undefined;\n  }\n  if (!/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)?$/.test(s)) {\n    return undefined;\n  }\n  if (/^\\d+(\\.\\d+)?$/.test(s)) {\n    return s + 'px';\n  }\n  return s;\n}\n\n/**\n * Asserts that the supplied value is a non-percent CSS Length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLength(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)$/.test(length),\n    'Invalid length value: %s',\n    length\n  );\n  return /** @type {!LengthDef} */ (length);\n}\n\n/**\n * Asserts that the supplied value is a CSS Length value\n * (including percent unit).\n * @param {!LengthDef|string} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLengthOrPercent(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|%)$/.test(length),\n    'Invalid length or percent value: %s',\n    length\n  );\n  return length;\n}\n\n/**\n * Returns units from the CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {string}\n */\nexport function getLengthUnits(length) {\n  assertLength(length);\n  dev().assertString(length);\n  const m = userAssert(\n    length.match(/[a-z]+/i),\n    'Failed to read units from %s',\n    length\n  );\n  return m[0];\n}\n\n/**\n * Returns the numeric value of a CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {number|undefined}\n */\nexport function getLengthNumeral(length) {\n  const res = parseFloat(length);\n  return isFiniteNumber(res) ? res : undefined;\n}\n\n/**\n * Determines whether the tagName is a known element that has natural dimensions\n * in our runtime or the browser.\n * @param {string} tagName The element tag name.\n * @return {boolean}\n */\nexport function hasNaturalDimensions(tagName) {\n  tagName = tagName.toUpperCase();\n  return naturalDimensions_[tagName] !== undefined;\n}\n\n/**\n * Determines the default dimensions for an element which could vary across\n * different browser implementations, like <audio> for instance.\n * This operation can only be completed for an element whitelisted by\n * `hasNaturalDimensions`.\n * @param {!Element} element\n * @return {DimensionsDef}\n */\nexport function getNaturalDimensions(element) {\n  const tagName = element.tagName.toUpperCase();\n  devAssert(naturalDimensions_[tagName] !== undefined);\n  if (!naturalDimensions_[tagName]) {\n    const doc = element.ownerDocument;\n    const naturalTagName = tagName.replace(/^AMP\\-/, '');\n    const temp = doc.createElement(naturalTagName);\n    // For audio, should no-op elsewhere.\n    temp.controls = true;\n    setStyles(temp, {\n      position: 'absolute',\n      visibility: 'hidden',\n    });\n    doc.body.appendChild(temp);\n    naturalDimensions_[tagName] = {\n      width: (temp./*OK*/ offsetWidth || 1) + 'px',\n      height: (temp./*OK*/ offsetHeight || 1) + 'px',\n    };\n    doc.body.removeChild(temp);\n  }\n  return /** @type {DimensionsDef} */ (naturalDimensions_[tagName]);\n}\n\n/**\n * Whether the loading can be shown for the specified elemeent. This set has\n * to be externalized since the element's implementation may not be\n * downloaded yet.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isLoadingAllowed(element) {\n  const tagName = element.tagName.toUpperCase();\n  return LOADING_ELEMENTS_[tagName] || isIframeVideoPlayerComponent(tagName);\n}\n\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they're present in the LOADING_ELEMENTS_ whitelist.\n * @param {string} tagName\n * @return {boolean}\n */\nexport function isIframeVideoPlayerComponent(tagName) {\n  if (tagName == 'AMP-VIDEO') {\n    return false;\n  }\n  return videoPlayerTagNameRe.test(tagName);\n}\n\n/**\n * Applies layout to the element. Visible for testing only.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this method is used for server-side rendering (SSR) and\n * any changes made to it must be made in coordination with caches that\n * implement SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @param {!Element} element\n * @return {!Layout}\n */\nexport function applyStaticLayout(element) {\n  // Check if the layout has already been done by server-side rendering or\n  // client-side rendering and the element was cloned. The document may be\n  // visible to the user if the boilerplate was removed so please take care in\n  // making changes here.\n  const completedLayoutAttr = element.getAttribute('i-amphtml-layout');\n  if (completedLayoutAttr) {\n    const layout = /** @type {!Layout} */ (devAssert(\n      parseLayout(completedLayoutAttr)\n    ));\n    if (\n      (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) &&\n      element.firstElementChild\n    ) {\n      // Find sizer, but assume that it might not have been parsed yet.\n      element.sizerElement =\n        element.querySelector('i-amphtml-sizer') || undefined;\n    } else if (layout == Layout.NODISPLAY) {\n      toggle(element, false);\n      // TODO(jridgewell): Temporary hack while SSR still adds an inline\n      // `display: none`\n      element['style']['display'] = '';\n    }\n    return layout;\n  }\n\n  // If the layout was already done by server-side rendering (SSR), then the\n  // code below will not run. Any changes below will necessitate a change to SSR\n  // and must be coordinated with caches that implement SSR. See bit.ly/amp-ssr.\n\n  // Parse layout from the element.\n  const layoutAttr = element.getAttribute('layout');\n  const widthAttr = element.getAttribute('width');\n  const heightAttr = element.getAttribute('height');\n  const sizesAttr = element.getAttribute('sizes');\n  const heightsAttr = element.getAttribute('heights');\n\n  // Input layout attributes.\n  const inputLayout = layoutAttr ? parseLayout(layoutAttr) : null;\n  userAssert(inputLayout !== undefined, 'Unknown layout: %s', layoutAttr);\n  /** @const {string|null|undefined} */\n  const inputWidth =\n    widthAttr && widthAttr != 'auto' ? parseLength(widthAttr) : widthAttr;\n  userAssert(inputWidth !== undefined, 'Invalid width value: %s', widthAttr);\n  /** @const {string|null|undefined} */\n  const inputHeight =\n    heightAttr && heightAttr != 'fluid' ? parseLength(heightAttr) : heightAttr;\n  userAssert(inputHeight !== undefined, 'Invalid height value: %s', heightAttr);\n\n  // Effective layout attributes. These are effectively constants.\n  let width;\n  let height;\n  let layout;\n\n  // Calculate effective width and height.\n  if (\n    (!inputLayout ||\n      inputLayout == Layout.FIXED ||\n      inputLayout == Layout.FIXED_HEIGHT) &&\n    (!inputWidth || !inputHeight) &&\n    hasNaturalDimensions(element.tagName)\n  ) {\n    // Default width and height: handle elements that do not specify a\n    // width/height and are defined to have natural browser dimensions.\n    const dimensions = getNaturalDimensions(element);\n    width =\n      inputWidth || inputLayout == Layout.FIXED_HEIGHT\n        ? inputWidth\n        : dimensions.width;\n    height = inputHeight || dimensions.height;\n  } else {\n    width = inputWidth;\n    height = inputHeight;\n  }\n\n  // Calculate effective layout.\n  if (inputLayout) {\n    layout = inputLayout;\n  } else if (!width && !height) {\n    layout = Layout.CONTAINER;\n  } else if (height == 'fluid') {\n    layout = Layout.FLUID;\n  } else if (height && (!width || width == 'auto')) {\n    layout = Layout.FIXED_HEIGHT;\n  } else if (height && width && (sizesAttr || heightsAttr)) {\n    layout = Layout.RESPONSIVE;\n  } else {\n    layout = Layout.FIXED;\n  }\n\n  // Verify layout attributes.\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(height, 'Expected height to be available: %s', heightAttr);\n  }\n  if (layout == Layout.FIXED_HEIGHT) {\n    userAssert(\n      !width || width == 'auto',\n      'Expected width to be either absent or equal \"auto\" ' +\n        'for fixed-height layout: %s',\n      widthAttr\n    );\n  }\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(\n      width && width != 'auto',\n      'Expected width to be available and not equal to \"auto\": %s',\n      widthAttr\n    );\n  }\n\n  if (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    userAssert(\n      getLengthUnits(width) == getLengthUnits(height),\n      'Length units should be the same for width and height: %s, %s',\n      widthAttr,\n      heightAttr\n    );\n  } else {\n    userAssert(\n      heightsAttr === null,\n      'Unexpected \"heights\" attribute for none-responsive layout'\n    );\n  }\n\n  // Apply UI.\n  element.classList.add(getLayoutClass(layout));\n  if (isLayoutSizeDefined(layout)) {\n    element.classList.add('i-amphtml-layout-size-defined');\n  }\n  if (layout == Layout.NODISPLAY) {\n    // CSS defines layout=nodisplay automatically with `display:none`. Thus\n    // no additional styling is needed.\n    toggle(element, false);\n    // TODO(jridgewell): Temporary hack while SSR still adds an inline\n    // `display: none`\n    element['style']['display'] = '';\n  } else if (layout == Layout.FIXED) {\n    setStyles(element, {\n      width: dev().assertString(width),\n      height: dev().assertString(height),\n    });\n  } else if (layout == Layout.FIXED_HEIGHT) {\n    setStyle(element, 'height', dev().assertString(height));\n  } else if (layout == Layout.RESPONSIVE) {\n    const sizer = element.ownerDocument.createElement('i-amphtml-sizer');\n    setStyles(sizer, {\n      paddingTop:\n        (getLengthNumeral(height) / getLengthNumeral(width)) * 100 + '%',\n    });\n    element.insertBefore(sizer, element.firstChild);\n    element.sizerElement = sizer;\n  } else if (layout == Layout.INTRINSIC) {\n    // Intrinsic uses an svg inside the sizer element rather than the padding\n    // trick Note a naked svg won't work becasue other thing expect the\n    // i-amphtml-sizer element\n    const sizer = htmlFor(element)`\n      <i-amphtml-sizer class=\"i-amphtml-sizer\">\n        <img alt=\"\" role=\"presentation\" aria-hidden=\"true\"\n             class=\"i-amphtml-intrinsic-sizer\" />\n      </i-amphtml-sizer>`;\n    const intrinsicSizer = sizer.firstElementChild;\n    intrinsicSizer.setAttribute(\n      'src',\n      `data:image/svg+xml;charset=utf-8,<svg height=\"${height}\" width=\"${width}\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"/>`\n    );\n    element.insertBefore(sizer, element.firstChild);\n    element.sizerElement = sizer;\n  } else if (layout == Layout.FILL) {\n    // Do nothing.\n  } else if (layout == Layout.CONTAINER) {\n    // Do nothing. Elements themselves will check whether the supplied\n    // layout value is acceptable. In particular container is only OK\n    // sometimes.\n  } else if (layout == Layout.FLEX_ITEM) {\n    // Set height and width to a flex item if they exist.\n    // The size set to a flex item could be overridden by `display: flex` later.\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    if (height) {\n      setStyle(element, 'height', height);\n    }\n  } else if (layout == Layout.FLUID) {\n    element.classList.add('i-amphtml-layout-awaiting-size');\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    setStyle(element, 'height', 0);\n  }\n  // Mark the element as having completed static layout, in case it is cloned\n  // in the future.\n  element.setAttribute('i-amphtml-layout', layout);\n  return layout;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\nimport {getModeObject} from './mode-object';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray, isEnumValue} from './types';\nimport {once} from './utils/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n * @private Visible for testing only.\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error.js to break cyclic\n * dependency.\n * @param {function(*, !Element=)|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = arg =>\n  encodeURIComponent(String(elementStringOrPassthru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don’t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(!./mode.ModeDef):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(!./mode.ModeDef):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then(response => response.json(), noop)\n        .then(opt_messages => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    // Delegate to the specific resolver.\n    return this.levelFunc_(getModeObject());\n  }\n\n  /**\n   * @param {string} tag\n   * @param {string} level\n   * @param {!Array} messages\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() != LogLevel.OFF) {\n      let fn = this.win.console.log;\n      if (level == 'ERROR') {\n        fn = this.win.console.error || fn;\n      } else if (level == 'INFO') {\n        fn = this.win.console.info || fn;\n      } else if (level == 'WARN') {\n        fn = this.win.console.warn || fn;\n      }\n      const args = this.maybeExpandMessageArgs_(messages);\n      // Prefix console message with \"[tag]\".\n      const prefix = `[${tag}]`;\n      if (typeof args[0] === 'string') {\n        // Prepend string to avoid breaking string substitutions e.g. %s.\n        args[0] = prefix + ' ' + args[0];\n      } else {\n        args.unshift(prefix);\n      }\n      fn.apply(this.win.console, args);\n    }\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  fine(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.FINE) {\n      this.msg_(tag, 'FINE', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  info(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.INFO) {\n      this.msg_(tag, 'INFO', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  warn(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.WARN) {\n      this.msg_(tag, 'WARN', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} var_args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.ERROR) {\n      this.msg_(tag, 'ERROR', Array.prototype.slice.call(arguments, 1));\n    } else {\n      const error = createErrorVargs.apply(\n        null,\n        Array.prototype.slice.call(arguments, 1)\n      );\n      this.prepareError_(error);\n      return error;\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * NOTE: for an explanation of the tempate R implementation see\n   * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {R} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is `null` or `undefined`.\n   * @template T\n   * @template R :=\n   *     mapunion(T, (V) =>\n   *         cond(eq(V, 'null'),\n   *             none(),\n   *             cond(eq(V, 'undefined'),\n   *                 none(),\n   *                 V)))\n   *  =:\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    let firstElement;\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n    if (!shouldBeTrueish) {\n      const message = opt_message || 'Assertion failed';\n      const splitMessage = message.split('%s');\n      const first = splitMessage.shift();\n      let formatted = first;\n      const messageArray = [];\n      let i = 2;\n      pushIfNonEmpty(messageArray, first);\n      while (splitMessage.length > 0) {\n        const nextConstant = splitMessage.shift();\n        const val = arguments[i++];\n        if (val && val.tagName) {\n          firstElement = val;\n        }\n        messageArray.push(val);\n        pushIfNonEmpty(messageArray, nextConstant.trim());\n        formatted += stringOrElementString(val) + nextConstant;\n      }\n      const e = new Error(formatted);\n      e.fromAssert = true;\n      e.associatedElement = firstElement;\n      e.messageArray = messageArray;\n      this.prepareError_(e);\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n      throw e;\n    }\n    return shouldBeTrueish;\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    const shouldBeTrueish = shouldBeElement && shouldBeElement.nodeType == 1;\n    this.assertType_(\n      shouldBeElement,\n      shouldBeTrueish,\n      'Element expected',\n      opt_message\n    );\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    this.assertType_(\n      shouldBeString,\n      typeof shouldBeString == 'string',\n      'String expected',\n      opt_message\n    );\n    return /** @type {string} */ (shouldBeString);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    this.assertType_(\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    );\n    return /** @type {number} */ (shouldBeNumber);\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    this.assertType_(\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    );\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    this.assertType_(\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    );\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n\n  /**\n   * Asserts and returns the enum value. If the enum doesn't contain such a\n   * value, the error is thrown.\n   *\n   * @param {!Object<T>} enumObj\n   * @param {string} s\n   * @param {string=} opt_enumName\n   * @return {T}\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertEnumValue(enumObj, s, opt_enumName) {\n    if (isEnumValue(enumObj, s)) {\n      return s;\n    }\n    this.assert(false, 'Unknown %s value: \"%s\"', opt_enumName || 'enum', s);\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n\n  /**\n   * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n   *\n   * It understands array-based \"id\"-contracted messages.\n   *\n   * Otherwise creates a sprintf syntax string containing the optional message or the\n   * default. An interpolation token is added at the end to include the `subject`.\n   * @param {*} subject\n   * @param {*} assertion\n   * @param {string} defaultMessage\n   * @param {!Array|string=} opt_message\n   * @private\n   */\n  assertType_(subject, assertion, defaultMessage, opt_message) {\n    if (isArray(opt_message)) {\n      this.assert(assertion, opt_message.concat(subject));\n    } else {\n      this.assert(assertion, `${opt_message || defaultMessage}: %s`, subject);\n    }\n  }\n}\n\n/**\n * @param {string|!Element} val\n * @return {string}\n */\nconst stringOrElementString = val =>\n  /** @type {string} */ (elementStringOrPassthru(val));\n\n/**\n * @param {*} val\n * @return {*}\n */\nfunction elementStringOrPassthru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (val && val.nodeType == 1) {\n    return val.tagName.toLowerCase() + (val.id ? '#' + val.id : '');\n  }\n  return val;\n}\n\n/**\n * @param {!Array} array\n * @param {*} val\n */\nfunction pushIfNonEmpty(array, val) {\n  if (val != '') {\n    array.push(val);\n  }\n}\n\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\nexport function duplicateErrorIfNecessary(error) {\n  const messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n  if (messageProperty && messageProperty.writable) {\n    return error;\n  }\n\n  const {message, stack} = error;\n  const e = new Error(message);\n  // Copy all the extraneous things we attach.\n  for (const prop in error) {\n    e[prop] = error[prop];\n  }\n  // Ensure these are copied.\n  e.stack = stack;\n  return e;\n}\n\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\nexport function createErrorVargs(var_args) {\n  let error = null;\n  let message = '';\n  for (let i = 0; i < arguments.length; i++) {\n    const arg = arguments[i];\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n  return error;\n}\n\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\nexport function rethrowAsync(var_args) {\n  const error = createErrorVargs.apply(null, arguments);\n  setTimeout(() => {\n    // reportError is installed globally per window in the entry point.\n    self.__AMP_REPORT_ERROR(error);\n    throw error;\n  });\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?Function}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log contructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log contructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    mode => {\n      const logNum = parseInt(mode.log, 10);\n      if (mode.development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, mode => {\n    const logNum = parseInt(mode.log, 10);\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\n\n/**\n * Provides info about the current app. This return value may be cached and\n * passed around as it will always be DCE'd.\n * @param {?Window=} opt_win\n * @return {!./mode.ModeDef}\n */\nexport function getModeObject(opt_win) {\n  return {\n    localDev: getMode(opt_win).localDev,\n    development: getMode(opt_win).development,\n    filter: getMode(opt_win).filter,\n    minified: getMode(opt_win).minified,\n    lite: getMode(opt_win).lite,\n    test: getMode(opt_win).test,\n    log: getMode(opt_win).log,\n    version: getMode(opt_win).version,\n    rtvVersion: getMode(opt_win).rtvVersion,\n    singlePassType: getMode(opt_win).singlePassType,\n  };\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString_} from './url-parse-query-string';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   filter: (string|undefined),\n *   minified: boolean,\n *   lite: boolean,\n *   test: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   singlePassType: (string|undefined)\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_DEV is only replaced when `gulp dist` is called without the\n  // --fortesting flag.\n  const IS_DEV = true;\n  const IS_MINIFIED = false;\n\n  const localDevEnabled = !!AMP_CONFIG.localDev;\n  const runningTests =\n    !!AMP_CONFIG.test || (IS_DEV && !!(win.__AMP_TEST || win.__karma__));\n  const runningTestsOnIe = win.__karma__ && win.__karma__.config.amp.testOnIe;\n  const isLocalDev = IS_DEV && (localDevEnabled || runningTests);\n  const hashQuery = parseQueryString_(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location.originalHash || win.location.hash\n  );\n  const singlePassType = AMP_CONFIG.spt;\n\n  const searchQuery = parseQueryString_(win.location.search);\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win, isLocalDev);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `gulp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    // Triggers validation or enable pub level logging. Validation can be\n    // bypassed via #validate=0.\n    // Note that AMP_DEV_MODE flag is used for testing purposes.\n    // Use Array.indexOf instead of Array.includes because of #24219\n    development: !!(\n      ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].indexOf(\n        hashQuery['development']\n      ) >= 0 || win.AMP_DEV_MODE\n    ),\n    examiner: hashQuery['development'] == '2',\n    // Allows filtering validation errors by error category. For the\n    // available categories, see ErrorCategory in validator/validator.proto.\n    filter: hashQuery['filter'],\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    // amp-user-location override\n    userLocationOverride: hashQuery['amp-user-location'],\n    minified: IS_MINIFIED,\n    // Whether document is in an amp-lite viewer. It signal that the user\n    // would prefer to use less bandwidth.\n    lite: searchQuery['amp_lite'] != undefined,\n    test: runningTests,\n    testIe: runningTestsOnIe,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n    singlePassType,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n */\nfunction getRtvVersion(win, isLocalDev) {\n  // If it's local dev then we won't actually have a full version so\n  // just use the version.\n  if (isLocalDev) {\n    return internalRuntimeVersion();\n  }\n\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win, isLocalDev) {\n  return getRtvVersion(win, isLocalDev);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This class helps to manage observers. Observers can be added, removed or\n * fired through and instance of this class.\n * @template TYPE\n */\nexport class Observable {\n  /**\n   * Creates an instance of Observable.\n   */\n  constructor() {\n    /** @type {?Array<function(TYPE)>} */\n    this.handlers_ = null;\n  }\n\n  /**\n   * Adds the observer to this instance.\n   * @param {function(TYPE)} handler Observer's handler.\n   * @return {!UnlistenDef}\n   */\n  add(handler) {\n    if (!this.handlers_) {\n      this.handlers_ = [];\n    }\n    this.handlers_.push(handler);\n    return () => {\n      this.remove(handler);\n    };\n  }\n\n  /**\n   * Removes the observer from this instance.\n   * @param {function(TYPE)} handler Observer's instance.\n   */\n  remove(handler) {\n    if (!this.handlers_) {\n      return;\n    }\n    const index = this.handlers_.indexOf(handler);\n    if (index > -1) {\n      this.handlers_.splice(index, 1);\n    }\n  }\n\n  /**\n   * Removes all observers.\n   */\n  removeAll() {\n    if (!this.handlers_) {\n      return;\n    }\n    this.handlers_.length = 0;\n  }\n\n  /**\n   * Fires an event. All observers are called.\n   * @param {TYPE=} opt_event\n   */\n  fire(opt_event) {\n    if (!this.handlers_) {\n      return;\n    }\n    const handlers = this.handlers_;\n    for (let i = 0; i < handlers.length; i++) {\n      const handler = handlers[i];\n      handler(opt_event);\n    }\n  }\n\n  /**\n   * Returns number of handlers. Mostly needed for tests.\n   * @return {number}\n   */\n  getHandlerCount() {\n    if (!this.handlers_) {\n      return 0;\n    }\n    return this.handlers_.length;\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\n\n/**\n * Pass class helps to manage single-pass process. A pass is scheduled using\n * delay method. Only one pass can be pending at a time. If no pass is pending\n * the process is considered to be \"idle\".\n */\nexport class Pass {\n  /**\n   * Creates a new Pass instance.\n   * @param {!Window} win\n   * @param {function()} handler Handler to be executed when pass is triggered.\n   * @param {number=} opt_defaultDelay Default delay to be used when schedule\n   *   is called without one.\n   */\n  constructor(win, handler, opt_defaultDelay) {\n    this.timer_ = Services.timerFor(win);\n\n    /** @private @const {function()} */\n    this.handler_ = handler;\n\n    /** @private @const {number} */\n    this.defaultDelay_ = opt_defaultDelay || 0;\n\n    /** @private {number|string} */\n    this.scheduled_ = -1;\n\n    /** @private {number} */\n    this.nextTime_ = 0;\n\n    /** @private {boolean} */\n    this.running_ = false;\n\n    /**\n     * @private\n     * @const {function()}\n     */\n    this.boundPass_ = () => {\n      this.pass_();\n    };\n  }\n\n  /**\n   * Whether or not a pass is currently pending.\n   * @return {boolean}\n   */\n  isPending() {\n    return this.scheduled_ != -1;\n  }\n\n  /**\n   * Tries to schedule a new pass optionally with specified delay. If the new\n   * requested pass is requested before the pending pass, the pending pass is\n   * canceled. If the new pass is requested after the pending pass, the newly\n   * requested pass is ignored.\n   *\n   * Returns {@code true} if the pass has been scheduled and {@code false} if\n   * ignored.\n   *\n   * @param {number=} opt_delay Delay to schedule the pass. If not specified\n   *   the default delay is used, falling back to 0.\n   * @return {boolean}\n   */\n  schedule(opt_delay) {\n    let delay = opt_delay || this.defaultDelay_;\n    if (this.running_ && delay < 10) {\n      // If we get called recursively, wait at least 10ms for the next\n      // execution.\n      delay = 10;\n    }\n\n    const nextTime = Date.now() + delay;\n    // Schedule anew if nothing is scheduled currently or if the new time is\n    // sooner then previously requested.\n    if (!this.isPending() || nextTime - this.nextTime_ < -10) {\n      this.cancel();\n      this.nextTime_ = nextTime;\n      this.scheduled_ = this.timer_.delay(this.boundPass_, delay);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   *\n   */\n  pass_() {\n    this.scheduled_ = -1;\n    this.nextTime_ = 0;\n    this.running_ = true;\n    this.handler_();\n    this.running_ = false;\n  }\n\n  /**\n   * Cancels the pending pass if any.\n   */\n  cancel() {\n    if (this.isPending()) {\n      this.timer_.cancel(this.scheduled_);\n      this.scheduled_ = -1;\n    }\n  }\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {WindowInterface} from '../src/window-interface';\nimport {createElementWithAttributes} from '../src/dom';\nimport {dict} from '../src/utils/object';\nimport {user} from '../src/log';\n\n/** @const {string} */\nconst TAG = 'pixel';\n\n/**\n * @param {!Window} win\n * @param {string} src\n * @param {?string=} referrerPolicy\n * @return {!Element}\n */\nexport function createPixel(win, src, referrerPolicy) {\n  if (referrerPolicy && referrerPolicy !== 'no-referrer') {\n    user().error(TAG, 'Unsupported referrerPolicy: %s', referrerPolicy);\n  }\n\n  return referrerPolicy === 'no-referrer'\n    ? createNoReferrerPixel(win, src)\n    : createImagePixel(win, src);\n}\n\n/**\n * @param {!Window} win\n * @param {string} src\n * @return {!Element}\n */\nfunction createNoReferrerPixel(win, src) {\n  if (isReferrerPolicySupported()) {\n    return createImagePixel(win, src, true);\n  } else {\n    // if \"referrerPolicy\" is not supported, use iframe wrapper\n    // to scrub the referrer.\n    const iframe = createElementWithAttributes(\n      /** @type {!Document} */ (win.document),\n      'iframe',\n      dict({\n        'src': 'about:blank',\n        'style': 'display:none',\n      })\n    );\n    win.document.body.appendChild(iframe);\n    createImagePixel(iframe.contentWindow, src);\n    return iframe;\n  }\n}\n\n/**\n * @param {!Window} win\n * @param {string} src\n * @param {boolean=} noReferrer\n * @return {!Image}\n */\nfunction createImagePixel(win, src, noReferrer = false) {\n  const Image = WindowInterface.getImage(win);\n  const image = new Image();\n  if (noReferrer) {\n    image.referrerPolicy = 'no-referrer';\n  }\n  image.src = src;\n  return image;\n}\n\n/**\n * Check if element attribute \"referrerPolicy\" is supported by the browser.\n * Safari 11.1 does not support it yet.\n *\n * @return {boolean}\n */\nfunction isReferrerPolicySupported() {\n  return 'referrerPolicy' in Image.prototype;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from './utils/promise';\nimport {dev, devAssert} from './log';\nimport {isExperimentOn} from './experiments';\nimport {toWin} from './types';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (?function(new:Object, !Window)|\n *          ?function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Services must implement this interface to be embeddable in FIEs.\n * @interface\n */\nexport class EmbeddableService {\n  /**\n   * Installs a new instance of the service in the given FIE window.\n   * @param {!Window} unusedEmbedWin\n   * @param {!./service/ampdoc-impl.AmpDoc} unusedAmpDoc\n   */\n  static installInEmbedWindow(unusedEmbedWin, unusedAmpDoc) {}\n}\n\n/**\n * Returns a service with the given id. Assumes that it has been constructed\n * already.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\nexport function getExistingServiceForDocInEmbedScope(element, id) {\n  // TODO(#22733): completely remove this method once ampdoc-fie launches.\n  const document = element.ownerDocument;\n  const win = toWin(document.defaultView);\n  const topWin = getTopWindow(win);\n  // First, try to resolve via local embed window (if applicable).\n  const isEmbed = win != topWin;\n  const ampdocFieExperimentOn = isExperimentOn(topWin, 'ampdoc-fie');\n  if (isEmbed && !ampdocFieExperimentOn) {\n    if (isServiceRegistered(win, id)) {\n      return getServiceInternal(win, id);\n    }\n    // Fallback from FIE to parent is intentionally unsupported for safety.\n    return null;\n  } else {\n    // Resolve via the element's ampdoc.\n    return getServiceForDocOrNullInternal(element, id);\n  }\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedScope(embedWin, id, service) {\n  const topWin = getTopWindow(embedWin);\n  devAssert(\n    embedWin != topWin,\n    'Service override can only be installed in embed window: %s',\n    id\n  );\n  devAssert(\n    !isServiceRegistered(embedWin, id),\n    'Service override has already been installed: %s',\n    id\n  );\n  const ampdocFieExperimentOn = isExperimentOn(topWin, 'ampdoc-fie');\n  if (ampdocFieExperimentOn) {\n    const ampdoc = getAmpdoc(embedWin.document);\n    registerServiceInternal(\n      getAmpdocServiceHolder(ampdoc),\n      ampdoc,\n      id,\n      () => service,\n      /* override */ true\n    );\n  } else {\n    registerServiceInternal(embedWin, embedWin, id, () => service);\n    getServiceInternal(embedWin, id); // Force service to build.\n  }\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\nfunction getServiceForDocOrNullInternal(element, id) {\n  const ampdoc = getAmpdoc(element);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = toWin(\n      /** @type {!Document} */ (nodeOrDoc.ownerDocument || nodeOrDoc)\n        .defaultView\n    );\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (getService(\n    win,\n    'ampdoc'\n  ));\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n * @template T\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.ctor = null;\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n */\nfunction registerServiceInternal(holder, context, id, ctor, opt_override) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n    };\n  }\n\n  if (!opt_override && (s.ctor || s.obj)) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  // TODO(dvoytenko): Consider marking holder as destroyed for later-arriving\n  // service to be canceled automatically.\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then(instance =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * Adopts an embeddable (implements `EmbeddableService` interface) service\n * in embed scope.\n * @param {!Window} embedWin\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} serviceClass\n * @suppress {missingProperties}\n * @return {boolean}\n */\nexport function installServiceInEmbedIfEmbeddable(embedWin, serviceClass) {\n  const isEmbeddableService =\n    typeof serviceClass.installInEmbedWindow === 'function';\n  if (!isEmbeddableService) {\n    return false;\n  }\n  const frameElement = dev().assertElement(\n    embedWin.frameElement,\n    'frameElement not found for embed'\n  );\n  const ampdoc = getAmpdoc(frameElement);\n  serviceClass.installInEmbedWindow(embedWin, ampdoc);\n  return true;\n}\n\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    () => service\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have an implementation or a constructor.\n  return !!(service && (service.ctor || service.obj));\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, resolve, reject} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../services';\nimport {dev} from '../log';\nimport {dict} from '../utils/object';\nimport {getSourceOrigin} from '../url';\n\n/**\n * The Client ID service key.\n * @const @private {string}\n */\nconst SERVICE_KEY_ = 'AIzaSyDKtqGxnoeIqVM33Uf7hRSa3GJxuzR7mLc';\n\n/**\n * Tag for debug logging.\n * @const @private {string}\n */\nconst TAG_ = 'CacheCidApi';\n\n/**\n * The URL for the cache-served CID API.\n * @const @private {string}\n */\nconst CACHE_API_URL = 'https://ampcid.google.com/v1/cache:getClientId?key=';\n\n/**\n * The XHR timeout in milliseconds for requests to the CID API.\n * @const @private {number}\n */\nconst TIMEOUT_ = 30000;\n\n/**\n * Exposes CID API for cache-served pages without a viewer.\n */\nexport class CacheCidApi {\n  /** @param {!./ampdoc-impl.AmpDoc} ampdoc */\n  constructor(ampdoc) {\n    /** @private {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n\n    /** @private {!./viewer-interface.ViewerInterface} */\n    this.viewer_ = Services.viewerForDoc(this.ampdoc_);\n\n    /** @private {?Promise<?string>} */\n    this.publisherCidPromise_ = null;\n\n    /** @private {!./timer-impl.Timer} */\n    this.timer_ = Services.timerFor(this.ampdoc_.win);\n  }\n\n  /**\n   * Returns true if the page is embedded in CCT and is served by a proxy.\n   * @return {boolean}\n   */\n  isSupported() {\n    return this.viewer_.isCctEmbedded() && this.viewer_.isProxyOrigin();\n  }\n\n  /**\n   * Returns scoped CID retrieved from the Viewer.\n   * @param {string} scope\n   * @return {!Promise<?string>}\n   */\n  getScopedCid(scope) {\n    if (!this.viewer_.isCctEmbedded()) {\n      return /** @type {!Promise<?string>} */ (Promise.resolve(null));\n    }\n\n    if (!this.publisherCidPromise_) {\n      const url = CACHE_API_URL + SERVICE_KEY_;\n      this.publisherCidPromise_ = this.fetchCid_(url);\n    }\n\n    return this.publisherCidPromise_.then(publisherCid => {\n      return publisherCid ? this.scopeCid_(publisherCid, scope) : null;\n    });\n  }\n\n  /**\n   * Returns scoped CID retrieved from the Viewer.\n   * @param {string} url\n   * @param {boolean=} useAlternate\n   * @return {!Promise<?string>}\n   */\n  fetchCid_(url, useAlternate = true) {\n    const payload = dict({\n      'publisherOrigin': getSourceOrigin(this.ampdoc_.win.location),\n    });\n\n    // Make the XHR request to the cache endpoint.\n    const timeoutMessage = 'fetchCidTimeout';\n    return this.timer_\n      .timeoutPromise(\n        TIMEOUT_,\n        Services.xhrFor(this.ampdoc_.win).fetchJson(url, {\n          method: 'POST',\n          ampCors: false,\n          credentials: 'include',\n          mode: 'cors',\n          body: payload,\n        }),\n        timeoutMessage\n      )\n      .then(res => {\n        return res.json().then(response => {\n          if (response['optOut']) {\n            return null;\n          }\n          const cid = response['publisherClientId'];\n          if (!cid && useAlternate && response['alternateUrl']) {\n            // If an alternate url is provided, try again with the alternate url\n            // The client is still responsible for appending API keys to the URL.\n            const alt = `${response['alternateUrl']}?key=${SERVICE_KEY_}`;\n            return this.fetchCid_(dev().assertString(alt), false);\n          }\n          return cid;\n        });\n      })\n      .catch(e => {\n        if (e && e.response) {\n          e.response.json().then(res => {\n            dev().error(TAG_, JSON.stringify(res));\n          });\n        } else {\n          const isTimeout = e && e.message == timeoutMessage;\n          if (isTimeout) {\n            dev().expectedError(TAG_, e);\n          } else {\n            dev().error(TAG_, e);\n          }\n        }\n        return null;\n      });\n  }\n\n  /**\n   * Returns scoped CID extracted from the fetched publisherCid.\n   * @param {string} publisherCid\n   * @param {string} scope\n   * @return {!Promise<string>}\n   */\n  scopeCid_(publisherCid, scope) {\n    const text = publisherCid + ';' + scope;\n    return Services.cryptoFor(this.ampdoc_.win)\n      .sha384Base64(text)\n      .then(enc => {\n        return 'amp-' + enc;\n      });\n  }\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../services';\nimport {WindowInterface} from '../window-interface';\nimport {dev} from '../log';\nimport {dict} from '../utils/object';\nimport {getCookie, setCookie} from '../cookies';\nimport {isProxyOrigin, parseUrlDeprecated} from '../url';\n\nconst GOOGLE_API_URL =\n  'https://ampcid.google.com/v1/publisher:getClientId?key=';\n\nconst TAG = 'GoogleCidApi';\nconst AMP_TOKEN = 'AMP_TOKEN';\n\n/** @enum {string} */\nexport const TokenStatus = {\n  RETRIEVING: '$RETRIEVING',\n  OPT_OUT: '$OPT_OUT',\n  NOT_FOUND: '$NOT_FOUND',\n  ERROR: '$ERROR',\n};\n\nconst TIMEOUT = 30000;\nconst HOUR = 60 * 60 * 1000;\nconst DAY = 24 * HOUR;\nconst YEAR = 365 * DAY;\n\n/**\n * Client impl for Google CID API\n */\nexport class GoogleCidApi {\n  /** @param {!./ampdoc-impl.AmpDoc} ampdoc */\n  constructor(ampdoc) {\n    /**\n     * @private {!Window}\n     */\n    this.win_ = ampdoc.win;\n    /**\n     * @private {!./timer-impl.Timer}\n     */\n    this.timer_ = Services.timerFor(this.win_);\n\n    /**\n     * @private {!Object<string, !Promise<?string>>}\n     */\n    this.cidPromise_ = {};\n\n    const {canonicalUrl} = Services.documentInfoForDoc(ampdoc);\n\n    /** @private {?string} */\n    this.canonicalOrigin_ = canonicalUrl\n      ? parseUrlDeprecated(canonicalUrl).origin\n      : null;\n  }\n\n  /**\n   * @param {string} apiKey\n   * @param {string} scope\n   * @return {!Promise<?string>}\n   */\n  getScopedCid(apiKey, scope) {\n    if (this.cidPromise_[scope]) {\n      return this.cidPromise_[scope];\n    }\n    let token;\n    // Block the request if a previous request is on flight\n    // Poll every 200ms. Longer interval means longer latency for the 2nd CID.\n    return (this.cidPromise_[scope] = this.timer_\n      .poll(200, () => {\n        token = getCookie(this.win_, AMP_TOKEN);\n        return token !== TokenStatus.RETRIEVING;\n      })\n      .then(() => {\n        if (token === TokenStatus.OPT_OUT) {\n          return TokenStatus.OPT_OUT;\n        }\n        // If the page referrer is proxy origin, we force to use API even the\n        // token indicates a previous fetch returned nothing\n        const forceFetch =\n          token === TokenStatus.NOT_FOUND && this.isReferrerProxyOrigin_();\n\n        // Token is in a special state, fallback to existing cookie\n        if (!forceFetch && this.isStatusToken_(token)) {\n          return null;\n        }\n\n        if (!token || this.isStatusToken_(token)) {\n          this.persistToken_(TokenStatus.RETRIEVING, TIMEOUT);\n        }\n\n        const url = GOOGLE_API_URL + apiKey;\n        return this.fetchCid_(dev().assertString(url), scope, token)\n          .then(response => {\n            const cid = this.handleResponse_(response);\n            if (!cid && response['alternateUrl']) {\n              // If an alternate url is provided, try again with the alternate\n              // url The client is still responsible for appending API keys to\n              // the URL.\n              const altUrl = `${response['alternateUrl']}?key=${apiKey}`;\n              return this.fetchCid_(\n                dev().assertString(altUrl),\n                scope,\n                token\n              ).then(this.handleResponse_.bind(this));\n            }\n            return cid;\n          })\n          .catch(e => {\n            this.persistToken_(TokenStatus.ERROR, TIMEOUT);\n            if (e && e.response) {\n              e.response.json().then(res => {\n                dev().error(TAG, JSON.stringify(res));\n              });\n            } else {\n              dev().error(TAG, e);\n            }\n            return null;\n          });\n      }));\n  }\n\n  /**\n   * @param {string} url\n   * @param {string} scope\n   * @param {?string} token\n   * @return {!Promise<!JsonObject>}\n   */\n  fetchCid_(url, scope, token) {\n    const payload = dict({\n      'originScope': scope,\n      'canonicalOrigin': this.canonicalOrigin_,\n    });\n    if (token) {\n      payload['securityToken'] = token;\n    }\n    return this.timer_.timeoutPromise(\n      TIMEOUT,\n      Services.xhrFor(this.win_)\n        .fetchJson(url, {\n          method: 'POST',\n          ampCors: false,\n          credentials: 'include',\n          mode: 'cors',\n          body: payload,\n        })\n        .then(res => res.json())\n    );\n  }\n\n  /**\n   * @param {!JsonObject} res\n   * @return {?string}\n   */\n  handleResponse_(res) {\n    if (res['optOut']) {\n      this.persistToken_(TokenStatus.OPT_OUT, YEAR);\n      return TokenStatus.OPT_OUT;\n    }\n    if (res['clientId']) {\n      this.persistToken_(res['securityToken'], YEAR);\n      return res['clientId'];\n    }\n    if (res['alternateUrl']) {\n      return null;\n    }\n    this.persistToken_(TokenStatus.NOT_FOUND, HOUR);\n    return null;\n  }\n\n  /**\n   * @param {string|undefined} tokenValue\n   * @param {number} expires\n   */\n  persistToken_(tokenValue, expires) {\n    if (tokenValue) {\n      setCookie(this.win_, AMP_TOKEN, tokenValue, this.expiresIn_(expires), {\n        highestAvailableDomain: true,\n      });\n    }\n  }\n\n  /**\n   * @param {number} time\n   * @return {number}\n   */\n  expiresIn_(time) {\n    return this.win_.Date.now() + time;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isReferrerProxyOrigin_() {\n    return isProxyOrigin(WindowInterface.getDocumentReferrer(this.win_));\n  }\n\n  /**\n   * @param {?string} token\n   * @return {boolean}\n   */\n  isStatusToken_(token) {\n    return /** @type {boolean} */ (token && token[0] === '$');\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides per AMP document source origin and use case\n * persistent client identifiers for use in analytics and similar use\n * cases.\n *\n * For details, see https://goo.gl/Mwaacs\n */\n\nimport {GoogleCidApi, TokenStatus} from './cid-api';\nimport {dev, rethrowAsync, user, userAssert} from '../log';\nimport {getCookie, setCookie} from '../cookies';\nimport {getServiceForDoc, registerServiceBuilderForDoc} from '../service';\nimport {getSourceOrigin, isProxyOrigin, parseUrlDeprecated} from '../url';\nimport {parseJson, tryParseJson} from '../json';\n\nimport {CacheCidApi} from './cache-cid-api';\nimport {Services} from '../services';\nimport {ViewerCidApi} from './viewer-cid-api';\nimport {base64UrlEncodeFromBytes} from '../utils/base64';\nimport {dict} from '../utils/object';\nimport {getCryptoRandomBytesArray} from '../utils/bytes';\nimport {isIframed} from '../dom';\nimport {tryResolve} from '../utils/promise';\n\nconst ONE_DAY_MILLIS = 24 * 3600 * 1000;\n\n/**\n * We ignore base cids that are older than (roughly) one year.\n */\nexport const BASE_CID_MAX_AGE_MILLIS = 365 * ONE_DAY_MILLIS;\n\nconst SCOPE_NAME_VALIDATOR = /^[a-zA-Z0-9-_.]+$/;\n\nconst CID_OPTOUT_STORAGE_KEY = 'amp-cid-optout';\n\nconst CID_OPTOUT_VIEWER_MESSAGE = 'cidOptOut';\n\n/**\n * Tag for debug logging.\n * @const @private {string}\n */\nconst TAG_ = 'CID';\n\n/**\n * The name of the Google CID API as it appears in the meta tag to opt-in.\n * @const @private {string}\n */\nconst GOOGLE_CID_API_META_NAME = 'amp-google-client-id-api';\n\n/**\n * The mapping from analytics providers to CID scopes.\n * @const @private {Object<string, string>}\n */\nconst CID_API_SCOPE_WHITELIST = {\n  'googleanalytics': 'AMP_ECID_GOOGLE',\n};\n\n/**\n * The mapping from analytics providers to their CID API service keys.\n * @const @private {Object<string, string>}\n */\nconst API_KEYS = {\n  'googleanalytics': 'AIzaSyA65lEHUEizIsNtlbNo-l2K18dT680nsaM',\n};\n\n/**\n * A base cid string value and the time it was last read / stored.\n * @typedef {{time: time, cid: string}}\n */\nlet BaseCidInfoDef;\n\n/**\n * The \"get CID\" parameters.\n * - createCookieIfNotPresent: Whether CID is allowed to create a cookie when.\n *   Default value is `false`.\n * @typedef {{\n *   scope: string,\n *   createCookieIfNotPresent: (boolean|undefined),\n *   cookieName: (string|undefined),\n * }}\n */\nlet GetCidDef;\n\n/**\n * @interface\n */\nexport class CidDef {\n  /**\n   * @param {!GetCidDef} unusedGetCidStruct an object provides CID scope name for\n   *     proxy case and cookie name for non-proxy case.\n   * @param {!Promise} unusedConsent Promise for when the user has given consent\n   *     (if deemed necessary by the publisher) for use of the client\n   *     identifier.\n   * @param {!Promise=} opt_persistenceConsent Dedicated promise for when\n   *     it is OK to persist a new tracking identifier. This could be\n   *     supplied ONLY by the code that supplies the actual consent\n   *     cookie.\n   *     If this is given, the consent param should be a resolved promise\n   *     because this call should be only made in order to get consent.\n   *     The consent promise passed to other calls should then itself\n   *     depend on the opt_persistenceConsent promise (and the actual\n   *     consent, of course).\n   * @return {!Promise<?string>} A client identifier that should be used\n   *      within the current source origin and externalCidScope. Might be\n   *      null if user has opted out of cid or no identifier was found\n   *      or it could be made.\n   *      This promise may take a long time to resolve if consent isn't\n   *      given.\n   */\n  get(unusedGetCidStruct, unusedConsent, opt_persistenceConsent) {}\n\n  /**\n   * User will be opted out of Cid issuance for all scopes.\n   * When opted-out Cid service will reject all `get` requests.\n   *\n   * @return {!Promise}\n   */\n  optOut() {}\n}\n\n/**\n * @implements {CidDef}\n */\nclass Cid {\n  /** @param {!./ampdoc-impl.AmpDoc} ampdoc */\n  constructor(ampdoc) {\n    /** @const */\n    this.ampdoc = ampdoc;\n\n    /**\n     * Cached base cid once read from storage to avoid repeated\n     * reads.\n     * @private {?Promise<string>}\n     * @restricted\n     */\n    this.baseCid_ = null;\n\n    /**\n     * Cache to store external cids. Scope is used as the key and cookie value\n     * is the value.\n     * @private {!Object<string, !Promise<string>>}\n     * @restricted\n     */\n    this.externalCidCache_ = Object.create(null);\n\n    /**\n     * @private @const {!CacheCidApi}\n     */\n    this.cacheCidApi_ = new CacheCidApi(ampdoc);\n\n    /**\n     * @private {!ViewerCidApi}\n     */\n    this.viewerCidApi_ = new ViewerCidApi(ampdoc);\n\n    this.cidApi_ = new GoogleCidApi(ampdoc);\n\n    /** @private {?Object<string, string>} */\n    this.apiKeyMap_ = null;\n  }\n\n  /** @override */\n  get(getCidStruct, consent, opt_persistenceConsent) {\n    userAssert(\n      SCOPE_NAME_VALIDATOR.test(getCidStruct.scope) &&\n        SCOPE_NAME_VALIDATOR.test(getCidStruct.cookieName),\n      'The CID scope and cookie name must only use the characters ' +\n        '[a-zA-Z0-9-_.]+\\nInstead found: %s',\n      getCidStruct.scope\n    );\n    return consent\n      .then(() => {\n        return this.ampdoc.whenFirstVisible();\n      })\n      .then(() => {\n        // Check if user has globally opted out of CID, we do this after\n        // consent check since user can optout during consent process.\n        return isOptedOutOfCid(this.ampdoc);\n      })\n      .then(optedOut => {\n        if (optedOut) {\n          return '';\n        }\n        const cidPromise = this.getExternalCid_(\n          getCidStruct,\n          opt_persistenceConsent || consent\n        );\n        // Getting the CID might involve an HTTP request. We timeout after 10s.\n        return Services.timerFor(this.ampdoc.win)\n          .timeoutPromise(\n            10000,\n            cidPromise,\n            `Getting cid for \"${getCidStruct.scope}\" timed out`\n          )\n          .catch(error => {\n            rethrowAsync(error);\n          });\n      });\n  }\n\n  /** @override */\n  optOut() {\n    return optOutOfCid(this.ampdoc);\n  }\n\n  /**\n   * Returns the \"external cid\". This is a cid for a specific purpose\n   * (Say Analytics provider X). It is unique per user, userAssert, that purpose\n   * and the AMP origin site.\n   * @param {!GetCidDef} getCidStruct\n   * @param {!Promise} persistenceConsent\n   * @return {!Promise<?string>}\n   */\n  getExternalCid_(getCidStruct, persistenceConsent) {\n    const {scope} = getCidStruct;\n    /** @const {!Location} */\n    const url = parseUrlDeprecated(this.ampdoc.win.location.href);\n    if (!isProxyOrigin(url)) {\n      const apiKey = this.isScopeOptedIn_(scope);\n      if (apiKey) {\n        return this.cidApi_.getScopedCid(apiKey, scope).then(scopedCid => {\n          if (scopedCid == TokenStatus.OPT_OUT) {\n            return null;\n          }\n          if (scopedCid) {\n            const cookieName = getCidStruct.cookieName || scope;\n            setCidCookie(this.ampdoc.win, cookieName, scopedCid);\n            return scopedCid;\n          }\n          return getOrCreateCookie(this, getCidStruct, persistenceConsent);\n        });\n      }\n      return getOrCreateCookie(this, getCidStruct, persistenceConsent);\n    }\n\n    return this.viewerCidApi_.isSupported().then(supported => {\n      if (supported) {\n        const apiKey = this.isScopeOptedIn_(scope);\n        return this.viewerCidApi_.getScopedCid(apiKey, scope);\n      }\n\n      if (this.cacheCidApi_.isSupported() && this.isScopeOptedIn_(scope)) {\n        return this.cacheCidApi_.getScopedCid(scope).then(scopedCid => {\n          if (scopedCid) {\n            return scopedCid;\n          }\n          return this.scopeBaseCid_(persistenceConsent, scope, url);\n        });\n      }\n      return this.scopeBaseCid_(persistenceConsent, scope, url);\n    });\n  }\n\n  /**\n   *\n   * @param {!Promise} persistenceConsent\n   * @param {*} scope\n   * @param {!Location} url\n   * @return {*}\n   */\n  scopeBaseCid_(persistenceConsent, scope, url) {\n    return getBaseCid(this, persistenceConsent).then(baseCid => {\n      return Services.cryptoFor(this.ampdoc.win).sha384Base64(\n        baseCid + getProxySourceOrigin(url) + scope\n      );\n    });\n  }\n\n  /**\n   * Checks if the page has opted in CID API for the given scope.\n   * Returns the API key that should be used, or null if page hasn't opted in.\n   *\n   * @param {string} scope\n   * @return {string|undefined}\n   */\n  isScopeOptedIn_(scope) {\n    if (!this.apiKeyMap_) {\n      this.apiKeyMap_ = this.getOptedInScopes_();\n    }\n    return this.apiKeyMap_[scope];\n  }\n\n  /**\n   * Reads meta tags for opted in scopes.  Meta tags will have the form\n   * <meta name=\"provider-api-name\" content=\"provider-name\">\n   * @return {!Object<string, string>}\n   */\n  getOptedInScopes_() {\n    const apiKeyMap = {};\n    const optInMeta = this.ampdoc.win.document.head./*OK*/ querySelector(\n      `meta[name=${GOOGLE_CID_API_META_NAME}]`\n    );\n    if (optInMeta && optInMeta.hasAttribute('content')) {\n      const list = optInMeta.getAttribute('content').split(',');\n      list.forEach(item => {\n        item = item.trim();\n        if (item.indexOf('=') > 0) {\n          const pair = item.split('=');\n          const scope = pair[0].trim();\n          apiKeyMap[scope] = pair[1].trim();\n        } else {\n          const clientName = item;\n          const scope = CID_API_SCOPE_WHITELIST[clientName];\n          if (scope) {\n            apiKeyMap[scope] = API_KEYS[clientName];\n          } else {\n            user().warn(\n              TAG_,\n              `Unsupported client for Google CID API: ${clientName}.` +\n                `Please remove or correct ${optInMeta./*OK*/ outerHTML}`\n            );\n          }\n        }\n      });\n    }\n    return apiKeyMap;\n  }\n}\n\n/**\n * User will be opted out of Cid issuance for all scopes.\n * When opted-out Cid service will reject all `get` requests.\n *\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @return {!Promise}\n * @visibleForTesting\n */\nexport function optOutOfCid(ampdoc) {\n  // Tell the viewer that user has opted out.\n  Services.viewerForDoc(ampdoc)./*OK*/ sendMessage(\n    CID_OPTOUT_VIEWER_MESSAGE,\n    dict()\n  );\n\n  // Store the optout bit in storage\n  return Services.storageForDoc(ampdoc).then(storage => {\n    return storage.set(CID_OPTOUT_STORAGE_KEY, true);\n  });\n}\n\n/**\n * Whether user has opted out of Cid issuance for all scopes.\n *\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @return {!Promise<boolean>}\n * @visibleForTesting\n */\nexport function isOptedOutOfCid(ampdoc) {\n  return Services.storageForDoc(ampdoc)\n    .then(storage => {\n      return storage.get(CID_OPTOUT_STORAGE_KEY).then(val => !!val);\n    })\n    .catch(() => {\n      // If we fail to read the flag, assume not opted out.\n      return false;\n    });\n}\n\n/**\n * Sets a new CID cookie for expire 1 year from now.\n * @param {!Window} win\n * @param {string} scope\n * @param {string} cookie\n */\nfunction setCidCookie(win, scope, cookie) {\n  const expiration = Date.now() + BASE_CID_MAX_AGE_MILLIS;\n  setCookie(win, scope, cookie, expiration, {\n    highestAvailableDomain: true,\n  });\n}\n\n/**\n * If cookie exists it's returned immediately. Otherwise, if instructed, the\n * new cookie is created.\n *\n * @param {!Cid} cid\n * @param {!GetCidDef} getCidStruct\n * @param {!Promise} persistenceConsent\n * @return {!Promise<?string>}\n */\nfunction getOrCreateCookie(cid, getCidStruct, persistenceConsent) {\n  const {win} = cid.ampdoc;\n  const {scope} = getCidStruct;\n  const cookieName = getCidStruct.cookieName || scope;\n  const existingCookie = getCookie(win, cookieName);\n\n  if (!existingCookie && !getCidStruct.createCookieIfNotPresent) {\n    return /** @type {!Promise<?string>} */ (Promise.resolve(null));\n  }\n\n  if (cid.externalCidCache_[scope]) {\n    return /** @type {!Promise<?string>} */ (cid.externalCidCache_[scope]);\n  }\n\n  if (existingCookie) {\n    // If we created the cookie, update it's expiration time.\n    if (/^amp-/.test(existingCookie)) {\n      setCidCookie(win, cookieName, existingCookie);\n    }\n    return /** @type {!Promise<?string>} */ (Promise.resolve(existingCookie));\n  }\n\n  const newCookiePromise = getRandomString64(win)\n    // Create new cookie, always prefixed with \"amp-\", so that we can see from\n    // the value whether we created it.\n    .then(randomStr => 'amp-' + randomStr);\n\n  // Store it as a cookie based on the persistence consent.\n  Promise.all([newCookiePromise, persistenceConsent]).then(results => {\n    // The initial CID generation is inherently racy. First one that gets\n    // consent wins.\n    const newCookie = results[0];\n    const relookup = getCookie(win, cookieName);\n    if (!relookup) {\n      setCidCookie(win, cookieName, newCookie);\n    }\n  });\n  return (cid.externalCidCache_[scope] = newCookiePromise);\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin. Throws an error if the doc is not on a proxy origin.\n * @param {!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n * @visibleForTesting BUT if this is needed elsewhere it could be\n *     factored into its own package.\n */\nexport function getProxySourceOrigin(url) {\n  userAssert(isProxyOrigin(url), 'Expected proxy origin %s', url.origin);\n  return getSourceOrigin(url);\n}\n\n/**\n * Returns the base cid for the current user(). This string must not\n * be exposed to users without hashing with the current source origin\n * and the externalCidScope.\n * On a proxy this value is the same for a user across all source\n * origins.\n * @param {!Cid} cid\n * @param {!Promise} persistenceConsent\n * @return {!Promise<string>}\n */\nfunction getBaseCid(cid, persistenceConsent) {\n  if (cid.baseCid_) {\n    return cid.baseCid_;\n  }\n  const {win} = cid.ampdoc;\n\n  return (cid.baseCid_ = read(cid.ampdoc).then(stored => {\n    let needsToStore = false;\n    let baseCid;\n\n    // See if we have a stored base cid and whether it is still valid\n    // in terms of expiration.\n    if (stored && !isExpired(stored)) {\n      baseCid = Promise.resolve(stored.cid);\n      if (shouldUpdateStoredTime(stored)) {\n        needsToStore = true;\n      }\n    } else {\n      // We need to make a new one.\n      baseCid = Services.cryptoFor(win).sha384Base64(getEntropy(win));\n      needsToStore = true;\n    }\n\n    if (needsToStore) {\n      baseCid.then(baseCid => {\n        store(cid.ampdoc, persistenceConsent, baseCid);\n      });\n    }\n\n    return baseCid;\n  }));\n}\n\n/**\n * Stores a new cidString in localStorage. Adds the current time to the\n * stored value.\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @param {!Promise} persistenceConsent\n * @param {string} cidString Actual cid string to store.\n */\nfunction store(ampdoc, persistenceConsent, cidString) {\n  const {win} = ampdoc;\n  if (isIframed(win)) {\n    // If we are being embedded, try to save the base cid to the viewer.\n    viewerBaseCid(ampdoc, createCidData(cidString));\n  } else {\n    // To use local storage, we need user's consent.\n    persistenceConsent.then(() => {\n      try {\n        win.localStorage.setItem('amp-cid', createCidData(cidString));\n      } catch (ignore) {\n        // Setting localStorage may fail. In practice we don't expect that to\n        // happen a lot (since we don't go anywhere near the quota, but\n        // in particular in Safari private browsing mode it always fails.\n        // In that case we just don't store anything, which is just fine.\n      }\n    });\n  }\n}\n\n/**\n * Get/set the Base CID from/to the viewer.\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @param {string=} opt_data Stringified JSON object {cid, time}.\n * @return {!Promise<string|undefined>}\n */\nexport function viewerBaseCid(ampdoc, opt_data) {\n  const viewer = Services.viewerForDoc(ampdoc);\n  return viewer.isTrustedViewer().then(trusted => {\n    if (!trusted) {\n      return undefined;\n    }\n    // TODO(lannka, #11060): clean up when all Viewers get migrated\n    dev().expectedError('CID', 'Viewer does not provide cap=cid');\n    return viewer.sendMessageAwaitResponse('cid', opt_data).then(data => {\n      // For backward compatibility: #4029\n      if (data && !tryParseJson(data)) {\n        // TODO(lannka, #11060): clean up when all Viewers get migrated\n        dev().expectedError('CID', 'invalid cid format');\n        return JSON.stringify(\n          dict({\n            'time': Date.now(), // CID returned from old API is always fresh\n            'cid': data,\n          })\n        );\n      }\n      return data;\n    });\n  });\n}\n\n/**\n * Creates a JSON object that contains the given CID and the current time as\n * a timestamp.\n * @param {string} cidString\n * @return {string}\n */\nfunction createCidData(cidString) {\n  return JSON.stringify(\n    dict({\n      'time': Date.now(),\n      'cid': cidString,\n    })\n  );\n}\n\n/**\n * Gets the persisted CID data as a promise. It tries to read from\n * localStorage first then from viewer if it is in embedded mode.\n * Returns null if none was found.\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @return {!Promise<?BaseCidInfoDef>}\n */\nfunction read(ampdoc) {\n  const {win} = ampdoc;\n  let data;\n  try {\n    data = win.localStorage.getItem('amp-cid');\n  } catch (ignore) {\n    // If reading from localStorage fails, we assume it is empty.\n  }\n  let dataPromise = Promise.resolve(data);\n  if (!data && isIframed(win)) {\n    // If we are being embedded, try to get the base cid from the viewer.\n    dataPromise = viewerBaseCid(ampdoc);\n  }\n  return dataPromise.then(data => {\n    if (!data) {\n      return null;\n    }\n    const item = parseJson(data);\n    return {\n      time: item['time'],\n      cid: item['cid'],\n    };\n  });\n}\n\n/**\n * Whether the retrieved cid object is expired and should be ignored.\n * @param {!BaseCidInfoDef} storedCidInfo\n * @return {boolean}\n */\nfunction isExpired(storedCidInfo) {\n  const createdTime = storedCidInfo.time;\n  const now = Date.now();\n  return createdTime + BASE_CID_MAX_AGE_MILLIS < now;\n}\n\n/**\n * Whether we should write a new timestamp to the stored cid value.\n * We say yes if it is older than 1 day, so we only do this max once\n * per day to avoid writing to localStorage all the time.\n * @param {!BaseCidInfoDef} storedCidInfo\n * @return {boolean}\n */\nfunction shouldUpdateStoredTime(storedCidInfo) {\n  const createdTime = storedCidInfo.time;\n  const now = Date.now();\n  return createdTime + ONE_DAY_MILLIS < now;\n}\n\n/**\n * Returns an array with a total of 128 of random values based on the\n * `win.crypto.getRandomValues` API. If that is not available concatenates\n * a string of other values that might be hard to guess including\n * `Math.random` and the current time.\n * @param {!Window} win\n * @return {!Uint8Array|string} Entropy.\n */\nfunction getEntropy(win) {\n  // Use win.crypto.getRandomValues to get 128 bits of random value\n  const uint8array = getCryptoRandomBytesArray(win, 16); // 128 bit\n  if (uint8array) {\n    return uint8array;\n  }\n\n  // Support for legacy browsers.\n  return String(\n    win.location.href +\n      Date.now() +\n      win.Math.random() +\n      win.screen.width +\n      win.screen.height\n  );\n}\n\n/**\n * Produces an external CID for use in a cookie.\n * @param {!Window} win\n * @return {!Promise<string>} The cid\n */\nexport function getRandomString64(win) {\n  const entropy = getEntropy(win);\n  if (typeof entropy == 'string') {\n    return Services.cryptoFor(win).sha384Base64(entropy);\n  } else {\n    // If our entropy is a pure random number, we can just directly turn it\n    // into base 64\n    const cast = /** @type {!Uint8Array} */ (entropy);\n    return tryResolve(() =>\n      base64UrlEncodeFromBytes(cast)\n        // Remove trailing padding\n        .replace(/\\.+$/, '')\n    );\n  }\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @return {*} TODO(#23582): Specify return type\n */\nexport function installCidService(ampdoc) {\n  return registerServiceBuilderForDoc(ampdoc, 'cid', Cid);\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @return {!Cid}\n * @private visible for testing\n */\nexport function cidServiceForDocForTesting(ampdoc) {\n  registerServiceBuilderForDoc(ampdoc, 'cid', Cid);\n  return getServiceForDoc(ampdoc, 'cid');\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from '../mode';\nimport {urls} from '../config';\n\n/**\n * Internal structure that maintains the state of an extension through loading.\n *\n * @typedef {{\n *   extensionId: (string|undefined),\n *   extensionVersion: (string|undefined),\n * }}\n * @private\n */\nlet ExtensionInfoDef;\n\n/**\n * Calculate the base url for any scripts.\n * @param {!Location} location The window's location\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateScriptBaseUrl(location, opt_isLocalDev) {\n  if (opt_isLocalDev) {\n    let prefix = `${location.protocol}//${location.host}`;\n    if (location.protocol == 'about:') {\n      prefix = '';\n    }\n    return `${prefix}/dist`;\n  }\n  return urls.cdn;\n}\n\n/**\n * Calculates if we need a single pass folder or not.\n *\n * @return {string}\n */\nfunction getSinglePassExperimentPath() {\n  return getMode().singlePassType ? `${getMode().singlePassType}/` : '';\n}\n\n/**\n * Calculate script url for an extension.\n * @param {!Location} location The window's location\n * @param {string} extensionId\n * @param {string=} opt_extensionVersion\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateExtensionScriptUrl(\n  location,\n  extensionId,\n  opt_extensionVersion,\n  opt_isLocalDev\n) {\n  const base = calculateScriptBaseUrl(location, opt_isLocalDev);\n  const rtv = getMode().rtvVersion;\n  if (opt_extensionVersion == null) {\n    opt_extensionVersion = '0.1';\n  }\n  const extensionVersion = opt_extensionVersion\n    ? '-' + opt_extensionVersion\n    : '';\n  const spPath = getSinglePassExperimentPath();\n  return `${base}/rtv/${rtv}/${spPath}v0/${extensionId}${extensionVersion}.js`;\n}\n\n/**\n * Calculate script url for an entry point.\n * If `opt_rtv` is true, returns the URL matching the current RTV.\n * @param {!Location} location The window's location\n * @param {string} entryPoint\n * @param {boolean=} isLocalDev\n * @param {boolean=} opt_rtv\n * @return {string}\n */\nexport function calculateEntryPointScriptUrl(\n  location,\n  entryPoint,\n  isLocalDev,\n  opt_rtv\n) {\n  const base = calculateScriptBaseUrl(location, isLocalDev);\n  if (opt_rtv) {\n    const spPath = getSinglePassExperimentPath();\n    return `${base}/rtv/${getMode().rtvVersion}/${spPath}${entryPoint}.js`;\n  }\n  return `${base}/${entryPoint}.js`;\n}\n\n/**\n * Parse the extension version from a given script URL.\n * @param {string} scriptUrl\n * @return {!ExtensionInfoDef}\n */\nexport function parseExtensionUrl(scriptUrl) {\n  const regex = /^(.*)\\/(.*)-([0-9.]+)\\.js$/i;\n  const matches = scriptUrl.match(regex);\n\n  return {\n    extensionId: matches ? matches[2] : undefined,\n    extensionVersion: matches ? matches[3] : undefined,\n  };\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../services';\nimport {dev, user} from '../log';\nimport {htmlFor} from '../static-template';\nimport {isExperimentOn} from '../experiments';\n\n/** @const {number} */\nconst NTH_FRAME = 200;\n\nexport class JankMeter {\n  /**\n   * @param {!Window} win\n   */\n  constructor(win) {\n    /** @private {!Window} */\n    this.win_ = win;\n    /** @private {number} */\n    this.badFrameCnt_ = 0;\n    /** @private {number} */\n    this.totalFrameCnt_ = 0;\n    /** @private {number} */\n    this.longTaskChild_ = 0;\n    /** @private {number} */\n    this.longTaskSelf_ = 0;\n    /** @private {?number} */\n    this.scheduledTime_ = null;\n    /** @private {?./performance-impl.Performance} */\n    this.perf_ = Services.performanceForOrNull(win);\n\n    /** @private {?BatteryManager} */\n    this.batteryManager_ = null;\n    /** @private {?number} */\n    this.batteryLevelStart_ = null;\n    this.initializeBatteryManager_();\n\n    /** @private {?PerformanceObserver} */\n    this.longTaskObserver_ = null;\n    this.initializeLongTaskObserver_();\n  }\n\n  /**\n   * Callback for scheduled.\n   */\n  onScheduled() {\n    if (!this.isEnabled_()) {\n      return;\n    }\n    // only take the first schedule for the current frame.\n    if (this.scheduledTime_ == null) {\n      this.scheduledTime_ = this.win_.Date.now();\n    }\n  }\n\n  /**\n   * Callback for run.\n   */\n  onRun() {\n    if (!this.isEnabled_() || this.scheduledTime_ == null) {\n      return;\n    }\n    const paintLatency = this.win_.Date.now() - this.scheduledTime_;\n    this.scheduledTime_ = null;\n    this.totalFrameCnt_++;\n    if (paintLatency > 16) {\n      this.badFrameCnt_++;\n      dev().info('JANK', 'Paint latency: ' + paintLatency + 'ms');\n    }\n\n    // Report metrics on Nth frame, so we have sort of normalized numbers.\n    if (this.perf_ && this.totalFrameCnt_ == NTH_FRAME) {\n      // gfp: Good Frame Probability\n      const gfp = this.calculateGfp_();\n      this.perf_.tickDelta('gfp', gfp);\n      // bf: Bad Frames\n      this.perf_.tickDelta('bf', this.badFrameCnt_);\n      if (this.longTaskObserver_) {\n        // lts: Long Tasks of Self frame\n        this.perf_.tickDelta('lts', this.longTaskSelf_);\n        // ltc: Long Tasks of Child frames\n        this.perf_.tickDelta('ltc', this.longTaskChild_);\n        this.longTaskObserver_.disconnect();\n        this.longTaskObserver_ = null;\n      }\n      let batteryDrop = 0;\n      if (this.batteryManager_ && this.batteryLevelStart_ != null) {\n        batteryDrop = this.win_.Math.max(\n          0,\n          this.win_.Math.floor(\n            this.batteryManager_.level * 100 - this.batteryLevelStart_\n          )\n        );\n        // bd: Battery Drop\n        this.perf_.tickDelta('bd', batteryDrop);\n      }\n      this.perf_.flush();\n      if (isJankMeterEnabled(this.win_)) {\n        this.displayMeterDisplay_(batteryDrop);\n      }\n    }\n  }\n\n  /**\n   * Returns if is enabled\n   *\n   * @return {?boolean}\n   */\n  isEnabled_() {\n    return (\n      isJankMeterEnabled(this.win_) ||\n      (this.perf_ &&\n        this.perf_.isPerformanceTrackingOn() &&\n        this.totalFrameCnt_ < NTH_FRAME)\n    );\n  }\n\n  /**\n   * @param {number} batteryDrop\n   * @private\n   */\n  displayMeterDisplay_(batteryDrop) {\n    const doc = this.win_.document;\n    const display = htmlFor(doc)`\n      <div class=\"i-amphtml-jank-meter\"></div>`;\n    display.textContent =\n      `bf:${this.badFrameCnt_}, lts: ${this.longTaskSelf_}, ` +\n      `ltc:${this.longTaskChild_}, bd:${batteryDrop}`;\n    doc.body.appendChild(display);\n  }\n\n  /**\n   * Calculate Good Frame Probability, which is a value range from 0 to 100.\n   * @return {number}\n   * @private\n   */\n  calculateGfp_() {\n    return this.win_.Math.floor(\n      ((this.totalFrameCnt_ - this.badFrameCnt_) / this.totalFrameCnt_) * 100\n    );\n  }\n\n  /**\n   * Initializes long task observer.\n   */\n  initializeLongTaskObserver_() {\n    if (!this.isEnabled_() || !isLongTaskApiSupported(this.win_)) {\n      return;\n    }\n    this.longTaskObserver_ = new this.win_.PerformanceObserver(entryList => {\n      const entries = entryList.getEntries();\n      for (let i = 0; i < entries.length; i++) {\n        if (entries[i].entryType == 'longtask') {\n          // longtask is any task with duration of bigger than 50ms\n          // we sum up the number of 50ms a task spans.\n          const span = this.win_.Math.floor(entries[i].duration / 50);\n          if (entries[i].name == 'cross-origin-descendant') {\n            this.longTaskChild_ += span;\n            user().info(\n              'LONGTASK',\n              `from child frame ${entries[i].duration}ms`\n            );\n          } else {\n            this.longTaskSelf_ += span;\n            dev().info('LONGTASK', `from self frame ${entries[i].duration}ms`);\n          }\n        }\n      }\n    });\n    this.longTaskObserver_.observe({entryTypes: ['longtask']});\n  }\n\n  /**\n   * Initializes battery manager.\n   */\n  initializeBatteryManager_() {\n    if (isBatteryApiSupported(this.win_)) {\n      this.win_.navigator.getBattery().then(battery => {\n        this.batteryManager_ = battery;\n        this.batteryLevelStart_ = battery.level * 100;\n      });\n    }\n  }\n}\n\n/**\n * @param {!Window} win\n * @return {boolean}\n */\nfunction isJankMeterEnabled(win) {\n  return isExperimentOn(win, 'jank-meter');\n}\n\n/**\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isLongTaskApiSupported(win) {\n  return (\n    !!win.PerformanceObserver &&\n    !!win['TaskAttributionTiming'] &&\n    'containerName' in win['TaskAttributionTiming'].prototype\n  );\n}\n\n/**\n * @param {!Window} unusedWin\n * @return {boolean}\n */\nfunction isBatteryApiSupported(unusedWin) {\n  // TODO: (@lannka, #9749)\n  return false;\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\n/**\n * @interface\n */\nexport class MutatorInterface {\n  /**\n   * Requests the runtime to change the element's size. When the size is\n   * successfully updated then the opt_callback is called.\n   * @param {!Element} element\n   * @param {number|undefined} newHeight\n   * @param {number|undefined} newWidth\n   * @param {function()=} opt_callback A callback function.\n   * @param {!../layout-rect.LayoutMarginsChangeDef=} opt_newMargins\n   */\n  changeSize(element, newHeight, newWidth, opt_callback, opt_newMargins) {}\n\n  /**\n   * Return a promise that requests the runtime to update the size of\n   * this element to the specified value.\n   * The runtime will schedule this request and attempt to process it\n   * as soon as possible. However, unlike in {@link changeSize}, the runtime\n   * may refuse to make a change in which case it will reject promise, call the\n   * `overflowCallback` method on the target resource with the height value.\n   * Overflow callback is expected to provide the reader with the user action\n   * to update the height manually.\n   * Note that the runtime does not call the `overflowCallback` method if the\n   * requested height is 0 or negative.\n   * If the height is successfully updated then the promise is resolved.\n   * @param {!Element} element\n   * @param {number|undefined} newHeight\n   * @param {number|undefined} newWidth\n   * @param {!../layout-rect.LayoutMarginsChangeDef=} opt_newMargins\n   * @return {!Promise}\n   * @param {?Event=} opt_event\n   */\n  attemptChangeSize(element, newHeight, newWidth, opt_newMargins, opt_event) {}\n\n  /**\n   * Expands the element.\n   * @param {!Element} element\n   */\n  expandElement(element) {}\n\n  /**\n   * Return a promise that requests runtime to collapse this element.\n   * The runtime will schedule this request and first attempt to resize\n   * the element to height and width 0. If success runtime will set element\n   * display to none, and notify element owner of this collapse.\n   * @param {!Element} element\n   * @return {!Promise}\n   */\n  attemptCollapse(element) {}\n\n  /**\n   * Collapses the element: ensures that it's `display:none`, notifies its\n   * owner and updates the layout box.\n   * @param {!Element} element\n   */\n  collapseElement(element) {}\n\n  /**\n   * Runs the specified measure, which is called in the \"measure\" vsync phase.\n   * This is simply a proxy to the privileged vsync service.\n   *\n   * @param {function()} measurer\n   * @return {!Promise}\n   */\n  measureElement(measurer) {}\n\n  /**\n   * Runs the specified mutation on the element and ensures that remeasures and\n   * layouts performed for the affected elements.\n   *\n   * This method should be called whenever a significant mutations are done\n   * on the DOM that could affect layout of elements inside this subtree or\n   * its siblings. The top-most affected element should be specified as the\n   * first argument to this method and all the mutation work should be done\n   * in the mutator callback which is called in the \"mutation\" vsync phase.\n   *\n   * @param {!Element} element\n   * @param {function()} mutator\n   * @return {!Promise}\n   */\n  mutateElement(element, mutator) {}\n\n  /**\n   * Runs the specified mutation on the element and ensures that remeasures and\n   * layouts performed for the affected elements.\n   *\n   * This method should be called whenever a significant mutations are done\n   * on the DOM that could affect layout of elements inside this subtree or\n   * its siblings. The top-most affected element should be specified as the\n   * first argument to this method and all the mutation work should be done\n   * in the mutator callback which is called in the \"mutation\" vsync phase.\n   *\n   * @param {!Element} element\n   * @param {?function()} measurer\n   * @param {function()} mutator\n   * @return {!Promise}\n   */\n  measureMutateElement(element, measurer, mutator) {}\n}\n/* eslint-enable no-unused-vars */\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../services';\nimport {\n  closestAncestorElementBySelector,\n  isIframed,\n  openWindowDialog,\n  tryFocus,\n} from '../dom';\nimport {dev, user, userAssert} from '../log';\nimport {dict} from '../utils/object';\nimport {escapeCssSelectorIdent} from '../css';\nimport {getExtraParamsUrl, shouldAppendExtraParams} from '../impression';\nimport {getMode} from '../mode';\nimport {\n  installServiceInEmbedScope,\n  registerServiceBuilderForDoc,\n} from '../service';\nimport {toWin} from '../types';\nimport PriorityQueue from '../utils/priority-queue';\n\nconst TAG = 'navigation';\n/** @private @const {string} */\nconst EVENT_TYPE_CLICK = 'click';\n/** @private @const {string} */\nconst EVENT_TYPE_CONTEXT_MENU = 'contextmenu';\nconst VALID_TARGETS = ['_top', '_blank'];\n\n/** @private @const {string} */\nconst ORIG_HREF_ATTRIBUTE = 'data-a4a-orig-href';\n\n/**\n * Key used for retargeting event target originating from shadow DOM.\n * @const {string}\n */\nconst AMP_CUSTOM_LINKER_TARGET = '__AMP_CUSTOM_LINKER_TARGET__';\n\n/**\n * @enum {number} Priority reserved for extensions in anchor mutations.\n * The higher the priority, the sooner it's invoked.\n */\nexport const Priority = {\n  LINK_REWRITER_MANAGER: 0,\n  ANALYTICS_LINKER: 2,\n};\n\n/**\n * Install navigation service for ampdoc, which handles navigations from anchor\n * tag clicks and other runtime features like AMP.navigateTo().\n *\n * Immediately instantiates the service.\n *\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installGlobalNavigationHandlerForDoc(ampdoc) {\n  registerServiceBuilderForDoc(\n    ampdoc,\n    TAG,\n    Navigation,\n    /* opt_instantiate */ true\n  );\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @param {!Event} e\n * @visibleForTesting\n */\nexport function maybeExpandUrlParamsForTesting(ampdoc, e) {\n  maybeExpandUrlParams(ampdoc, e);\n}\n\n/**\n * Intercept any click on the current document and prevent any\n * linking to an identifier from pushing into the history stack.\n * @implements {../service.EmbeddableService}\n * @visibleForTesting\n */\nexport class Navigation {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   * @param {(!Document|!ShadowRoot)=} opt_rootNode\n   */\n  constructor(ampdoc, opt_rootNode) {\n    // TODO(#22733): remove subroooting once ampdoc-fie is launched.\n\n    /** @const {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampdoc;\n\n    /** @private @const {!Document|!ShadowRoot} */\n    this.rootNode_ = opt_rootNode || ampdoc.getRootNode();\n\n    /** @private @const {!./viewport/viewport-interface.ViewportInterface} */\n    this.viewport_ = Services.viewportForDoc(this.ampdoc);\n\n    /** @private @const {!./viewer-interface.ViewerInterface} */\n    this.viewer_ = Services.viewerForDoc(this.ampdoc);\n\n    /** @private @const {!./history-impl.History} */\n    this.history_ = Services.historyForDoc(this.ampdoc);\n\n    /** @private @const {!./platform-impl.Platform} */\n    this.platform_ = Services.platformFor(this.ampdoc.win);\n\n    /** @private @const {boolean} */\n    this.isIosSafari_ = this.platform_.isIos() && this.platform_.isSafari();\n\n    /** @private @const {boolean} */\n    this.isIframed_ =\n      isIframed(this.ampdoc.win) && this.viewer_.isOvertakeHistory();\n\n    /** @private @const {boolean} */\n    this.isEmbed_ =\n      this.rootNode_ != this.ampdoc.getRootNode() || !!this.ampdoc.getParent();\n\n    /** @private @const {boolean} */\n    this.isInABox_ = getMode(this.ampdoc.win).runtime == 'inabox';\n\n    /**\n     * Must use URL parsing scoped to `rootNode_` for correct FIE behavior.\n     * @private @const {!Element|!ShadowRoot}\n     */\n    this.serviceContext_ =\n      /** @type {!Element|!ShadowRoot} */ (this.rootNode_.nodeType ==\n      Node.DOCUMENT_NODE\n        ? this.rootNode_.documentElement\n        : this.rootNode_);\n\n    /** @private @const {!function(!Event)|undefined} */\n    this.boundHandle_ = this.handle_.bind(this);\n    this.rootNode_.addEventListener(EVENT_TYPE_CLICK, this.boundHandle_);\n    this.rootNode_.addEventListener(EVENT_TYPE_CONTEXT_MENU, this.boundHandle_);\n    /** @private {boolean} */\n    this.appendExtraParams_ = false;\n    shouldAppendExtraParams(this.ampdoc).then(res => {\n      this.appendExtraParams_ = res;\n    });\n\n    /**\n     * Lazy-generated list of A2A-enabled navigation features.\n     * @private {?Array<string>}\n     */\n    this.a2aFeatures_ = null;\n\n    /**\n     * @type {!PriorityQueue<function(!Element, !Event)>}\n     * @private\n     * @const\n     */\n    this.anchorMutators_ = new PriorityQueue();\n\n    /**\n     * @type {!PriorityQueue<function(string)>}\n     * @private\n     * @const\n     */\n    this.navigateToMutators_ = new PriorityQueue();\n  }\n\n  /**\n   * Registers a handler that performs URL replacement on the href\n   * of an ad click.\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   * @param {!Window} win\n   */\n  static installAnchorClickInterceptor(ampdoc, win) {\n    win.document.documentElement.addEventListener(\n      'click',\n      maybeExpandUrlParams.bind(null, ampdoc),\n      /* capture */ true\n    );\n  }\n\n  /**\n   * @param {!Window} embedWin\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   * @nocollapse\n   */\n  static installInEmbedWindow(embedWin, ampdoc) {\n    installServiceInEmbedScope(\n      embedWin,\n      TAG,\n      new Navigation(ampdoc, embedWin.document)\n    );\n  }\n\n  /**\n   * Removes all event listeners.\n   */\n  cleanup() {\n    if (this.boundHandle_) {\n      this.rootNode_.removeEventListener(EVENT_TYPE_CLICK, this.boundHandle_);\n      this.rootNode_.removeEventListener(\n        EVENT_TYPE_CONTEXT_MENU,\n        this.boundHandle_\n      );\n    }\n  }\n\n  /**\n   * Opens a new window with the specified target.\n   *\n   * @param {!Window} win A window to use to open a new window.\n   * @param {string} url THe URL to open.\n   * @param {string} target The target for the newly opened window.\n   * @param {boolean} opener Whether or not the new window should have acccess\n   *   to the opener (win).\n   */\n  openWindow(win, url, target, opener) {\n    let options = '';\n    // We don't pass noopener for Chrome since it opens a new window without\n    // tabs. Instead, we remove the opener property from the newly opened\n    // window.\n    // Note: for Safari, we need to use noopener instead of clearing the opener\n    // property.\n    if ((this.platform_.isIos() || !this.platform_.isChrome()) && !opener) {\n      options += 'noopener';\n    }\n\n    const newWin = openWindowDialog(win, url, target, options);\n    // For Chrome, since we cannot use noopener.\n    if (newWin && !opener) {\n      newWin.opener = null;\n    }\n  }\n\n  /**\n   * Navigates a window to a URL.\n   *\n   * If opt_requestedBy matches a feature name in a <meta> tag with attribute\n   * name=\"amp-to-amp-navigation\", then treats the URL as an AMP URL (A2A).\n   *\n   * @param {!Window} win\n   * @param {string} url\n   * @param {string=} opt_requestedBy\n   * @param {!{\n   *   target: (string|undefined),\n   *   opener: (boolean|undefined),\n   * }=} opt_options\n   */\n  navigateTo(\n    win,\n    url,\n    opt_requestedBy,\n    {target = '_top', opener = false} = {}\n  ) {\n    url = this.applyNavigateToMutators_(url);\n    const urlService = Services.urlForDoc(this.serviceContext_);\n    if (!urlService.isProtocolValid(url)) {\n      user().error(TAG, 'Cannot navigate to invalid protocol: ' + url);\n      return;\n    }\n\n    userAssert(\n      VALID_TARGETS.includes(target),\n      `Target '${target}' not supported.`\n    );\n\n    // Resolve navigateTos relative to the source URL, not the proxy URL.\n    url = urlService.getSourceUrl(url);\n\n    // If we have a target of \"_blank\", we will want to open a new window. A\n    // target of \"_top\" should behave like it would on an anchor tag and\n    // update the URL.\n    if (target == '_blank') {\n      this.openWindow(win, url, target, opener);\n      return;\n    }\n\n    // If this redirect was requested by a feature that opted into A2A,\n    // try to ask the viewer to navigate this AMP URL.\n    if (opt_requestedBy) {\n      if (!this.a2aFeatures_) {\n        this.a2aFeatures_ = this.queryA2AFeatures_();\n      }\n      if (this.a2aFeatures_.includes(opt_requestedBy)) {\n        if (this.navigateToAmpUrl(url, opt_requestedBy)) {\n          return;\n        }\n      }\n    }\n\n    // Otherwise, perform normal behavior of navigating the top frame.\n    win.top.location.href = url;\n  }\n\n  /**\n   * Requests A2A navigation to the given destination. If the viewer does\n   * not support this operation, does nothing.\n   * The URL is assumed to be in AMP Cache format already.\n   * @param {string} url An AMP article URL.\n   * @param {string} requestedBy Informational string about the entity that\n   *     requested the navigation.\n   * @return {boolean} Returns true if navigation message was sent to viewer.\n   *     Otherwise, returns false.\n   */\n  navigateToAmpUrl(url, requestedBy) {\n    if (this.viewer_.hasCapability('a2a')) {\n      this.viewer_.sendMessage(\n        'a2aNavigate',\n        dict({\n          'url': url,\n          'requestedBy': requestedBy,\n        })\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {!Array<string>}\n   * @private\n   */\n  queryA2AFeatures_() {\n    const meta = this.rootNode_.querySelector(\n      'meta[name=\"amp-to-amp-navigation\"]'\n    );\n    if (meta && meta.hasAttribute('content')) {\n      return meta\n        .getAttribute('content')\n        .split(',')\n        .map(s => s.trim());\n    }\n    return [];\n  }\n\n  /**\n   * Intercept any click on the current document and prevent any\n   * linking to an identifier from pushing into the history stack.\n   *\n   * This also handles custom protocols (e.g. whatsapp://) when iframed\n   * on iOS Safari.\n   *\n   * @param {!Event} e\n   * @private\n   */\n  handle_(e) {\n    if (e.defaultPrevented) {\n      return;\n    }\n    const element = dev().assertElement(\n      e[AMP_CUSTOM_LINKER_TARGET] || e.target\n    );\n    const target = closestAncestorElementBySelector(element, 'A');\n    if (!target || !target.href) {\n      return;\n    }\n\n    if (e.type == EVENT_TYPE_CLICK) {\n      this.handleClick_(target, e);\n    } else if (e.type == EVENT_TYPE_CONTEXT_MENU) {\n      this.handleContextMenuClick_(target, e);\n    }\n  }\n\n  /**\n   * @param {!Element} target\n   * @param {!Event} e\n   * @private\n   */\n  handleClick_(target, e) {\n    this.expandVarsForAnchor_(target);\n\n    let tgtLoc = this.parseUrl_(target.href);\n\n    // Handle AMP-to-AMP navigation if rel=amphtml.\n    if (this.handleA2AClick_(e, target, tgtLoc)) {\n      return;\n    }\n\n    // Handle navigating to custom protocol if applicable.\n    if (this.handleCustomProtocolClick_(e, target, tgtLoc)) {\n      return;\n    }\n\n    // In test mode, we're not able to properly fix the anchor tag's base URL.\n    // So, we have to use the (mocked) window's location instead.\n    const baseHref =\n      getMode().test && !this.isEmbed_ ? this.ampdoc.win.location.href : '';\n    const curLoc = this.parseUrl_(baseHref);\n    const tgtHref = getHref(tgtLoc);\n    const curHref = getHref(curLoc);\n\n    if (tgtHref != curHref) {\n      // Only apply anchor mutator if this is an external navigation\n      this.applyAnchorMutators_(target, e);\n      tgtLoc = this.parseUrl_(target.href);\n    }\n\n    // Finally, handle normal click-navigation behavior.\n    this.handleNavClick_(e, target, tgtLoc, curLoc);\n  }\n\n  /**\n   * @param {!Element} target\n   * @param {!Event} e\n   * @private\n   */\n  handleContextMenuClick_(target, e) {\n    // Handles contextmenu click. Note that currently this only deals\n    // with url variable substitution and expansion, as there is\n    // straightforward way of determining what the user clicked in the\n    // context menu, required for A2A navigation and custom link protocol\n    // handling.\n    // TODO(alabiaga): investigate fix for handling A2A and custom link\n    // protocols.\n    this.expandVarsForAnchor_(target);\n    this.applyAnchorMutators_(target, e);\n  }\n\n  /**\n   * Apply anchor transformations.\n   * @param {!Element} target\n   * @param {!Event} e\n   */\n  applyAnchorMutators_(target, e) {\n    this.anchorMutators_.forEach(anchorMutator => {\n      anchorMutator(target, e);\n    });\n  }\n\n  /**\n   * Apply URL transformations for AMP.navigateTo.\n   * @param {string} url\n   * @return {string}\n   */\n  applyNavigateToMutators_(url) {\n    this.navigateToMutators_.forEach(mutator => {\n      url = mutator(url);\n    });\n    return url;\n  }\n\n  /**\n   * @param {!Element} el\n   * @private\n   */\n  expandVarsForAnchor_(el) {\n    // First check if need to handle external link decoration.\n    let defaultExpandParamsUrl = null;\n    if (this.appendExtraParams_ && !this.isEmbed_) {\n      // Only decorate outgoing link when needed to and is not in FIE.\n      defaultExpandParamsUrl = getExtraParamsUrl(this.ampdoc.win, el);\n    }\n\n    const urlReplacements = Services.urlReplacementsForDoc(el);\n    urlReplacements.maybeExpandLink(el, defaultExpandParamsUrl);\n  }\n\n  /**\n   * Handles clicking on a custom protocol link.\n   * Returns true if the navigation was handled. Otherwise, returns false.\n   * @param {!Event} e\n   * @param {!Element} target\n   * @param {!Location} location\n   * @return {boolean}\n   * @private\n   */\n  handleCustomProtocolClick_(e, target, location) {\n    // Handle custom protocols only if the document is iframed.\n    if (!this.isIframed_) {\n      return false;\n    }\n\n    /** @const {!Window} */\n    const win = toWin(target.ownerDocument.defaultView);\n    const url = target.href;\n    const {protocol} = location;\n\n    // On Safari iOS, custom protocol links will fail to open apps when the\n    // document is iframed - in order to go around this, we set the top.location\n    // to the custom protocol href.\n    const isFTP = protocol == 'ftp:';\n\n    // In case of FTP Links in embedded documents always open then in _blank.\n    if (isFTP) {\n      openWindowDialog(win, url, '_blank');\n      e.preventDefault();\n      return true;\n    }\n\n    const isNormalProtocol = /^(https?|mailto):$/.test(protocol);\n    if (this.isIosSafari_ && !isNormalProtocol) {\n      openWindowDialog(win, url, '_top');\n      // Without preventing default the page would should an alert error twice\n      // in the case where there's no app to handle the custom protocol.\n      e.preventDefault();\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Handles clicking on an AMP link.\n   * Returns true if the navigation was handled. Otherwise, returns false.\n   * @param {!Event} e\n   * @param {!Element} target\n   * @param {!Location} location\n   * @return {boolean}\n   * @private\n   */\n  handleA2AClick_(e, target, location) {\n    if (!target.hasAttribute('rel')) {\n      return false;\n    }\n    const relations = target\n      .getAttribute('rel')\n      .split(' ')\n      .map(s => s.trim());\n    if (!relations.includes('amphtml')) {\n      return false;\n    }\n    // The viewer may not support the capability for navigating AMP links.\n    if (this.navigateToAmpUrl(location.href, '<a rel=amphtml>')) {\n      e.preventDefault();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handles clicking on a link with hash navigation.\n   * @param {!Event} e\n   * @param {!Element} target\n   * @param {!Location} tgtLoc\n   * @param {!Location} curLoc\n   * @private\n   */\n  handleNavClick_(e, target, tgtLoc, curLoc) {\n    const tgtHref = getHref(tgtLoc);\n    const curHref = getHref(curLoc);\n\n    // If the current target anchor link is the same origin + path\n    // as the current document then we know we are just linking to an\n    // identifier in the document. Otherwise, it's an external navigation.\n    if (!tgtLoc.hash || tgtHref != curHref) {\n      if (this.isEmbed_ || this.isInABox_) {\n        // Target in the embed must be either _top or _blank. If none specified,\n        // force to _blank.\n        const targetAttr = (target.getAttribute('target') || '').toLowerCase();\n        if (targetAttr != '_top' && targetAttr != '_blank') {\n          target.setAttribute('target', '_blank');\n        }\n        return; // bail early.\n      }\n\n      // Accessibility fix for IE browser.\n      // Issue: anchor navigation in IE changes visual focus of the browser\n      // and shifts to the element being linked to,\n      // where the input focus stays where it was.\n      // @see https://humanwhocodes.com/blog/2013/01/15/fixing-skip-to-content-links/\n      // @see https://github.com/ampproject/amphtml/issues/18671\n      if (Services.platformFor(this.ampdoc.win).isIe()) {\n        const internalTargetElmId = tgtLoc.hash.substring(1);\n        const internalElm = this.ampdoc.getElementById(internalTargetElmId);\n        if (internalElm) {\n          if (\n            !/^(?:a|select|input|button|textarea)$/i.test(internalElm.tagName)\n          ) {\n            internalElm.tabIndex = -1;\n          }\n          tryFocus(internalElm);\n        }\n      }\n      return;\n    }\n\n    this.handleInternalNavigation_(e, tgtLoc, curLoc);\n  }\n\n  /**\n   * Handles clicking on an internal link\n   * @param {!Event} e\n   * @param {!Location} tgtLoc\n   * @param {!Location} curLoc\n   * @private\n   */\n  handleInternalNavigation_(e, tgtLoc, curLoc) {\n    // We prevent default so that the current click does not push\n    // into the history stack as this messes up the external documents\n    // history which contains the amp document.\n    e.preventDefault();\n\n    // For an embed, do not perform scrolling or global history push - both have\n    // significant UX and browser problems.\n    if (this.isEmbed_) {\n      return;\n    }\n\n    // Look for the referenced element.\n    const hash = tgtLoc.hash.slice(1);\n    let elem = null;\n    if (hash) {\n      const escapedHash = escapeCssSelectorIdent(hash);\n      elem =\n        this.rootNode_.getElementById(hash) ||\n        // Fallback to anchor[name] if element with id is not found.\n        // Linking to an anchor element with name is obsolete in html5.\n        this.rootNode_./*OK*/ querySelector(`a[name=\"${escapedHash}\"]`);\n    }\n\n    // If possible do update the URL with the hash. As explained above\n    // we do `replace` to avoid messing with the container's history.\n    if (tgtLoc.hash != curLoc.hash) {\n      this.history_.replaceStateForTarget(tgtLoc.hash).then(() => {\n        this.scrollToElement_(elem, hash);\n      });\n    } else {\n      // If the hash did not update just scroll to the element.\n      this.scrollToElement_(elem, hash);\n    }\n  }\n\n  /**\n   * @param {function(!Element, !Event)} callback\n   * @param {number} priority\n   */\n  registerAnchorMutator(callback, priority) {\n    this.anchorMutators_.enqueue(callback, priority);\n  }\n\n  /**\n   * @param {function(string)} callback\n   * @param {number} priority\n   */\n  registerNavigateToMutator(callback, priority) {\n    this.navigateToMutators_.enqueue(callback, priority);\n  }\n\n  /**\n   * Scrolls the page to the given element.\n   * @param {?Element} elem\n   * @param {string} hash\n   * @private\n   */\n  scrollToElement_(elem, hash) {\n    // Scroll to the element if found.\n    if (elem) {\n      // The first call to scrollIntoView overrides browsers' default scrolling\n      // behavior. The second call insides setTimeout allows us to scroll to\n      // that element properly. Without doing this, the viewport will not catch\n      // the updated scroll position on iOS Safari and hence calculate the wrong\n      // scrollTop for the scrollbar jumping the user back to the top for\n      // failing to calculate the new jumped offset. Without the first call\n      // there will be a visual jump due to browser scroll. See\n      // https://github.com/ampproject/amphtml/issues/5334 for more details.\n      this.viewport_./*OK*/ scrollIntoView(elem);\n      Services.timerFor(this.ampdoc.win).delay(\n        () => this.viewport_./*OK*/ scrollIntoView(dev().assertElement(elem)),\n        1\n      );\n    } else {\n      dev().warn(\n        TAG,\n        `failed to find element with id=${hash} or a[name=${hash}]`\n      );\n    }\n  }\n\n  /**\n   * @param {string} url\n   * @return {!Location}\n   * @private\n   */\n  parseUrl_(url) {\n    return Services.urlForDoc(this.serviceContext_).parse(url);\n  }\n}\n\n/**\n * Handle click on links and replace variables in the click URL.\n * The function changes the actual href value and stores the\n * template in the ORIGINAL_HREF_ATTRIBUTE attribute\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @param {!Event} e\n */\nfunction maybeExpandUrlParams(ampdoc, e) {\n  const target = closestAncestorElementBySelector(\n    dev().assertElement(e.target),\n    'A'\n  );\n  if (!target || !target.href) {\n    // Not a click on a link.\n    return;\n  }\n  const hrefToExpand =\n    target.getAttribute(ORIG_HREF_ATTRIBUTE) || target.getAttribute('href');\n  if (!hrefToExpand) {\n    return;\n  }\n  const vars = {\n    'CLICK_X': () => {\n      return e.pageX;\n    },\n    'CLICK_Y': () => {\n      return e.pageY;\n    },\n  };\n  const newHref = Services.urlReplacementsForDoc(target).expandUrlSync(\n    hrefToExpand,\n    vars,\n    undefined,\n    /* opt_whitelist */ {\n      // For now we only allow to replace the click location vars\n      // and nothing else.\n      // NOTE: Addition to this whitelist requires additional review.\n      'CLICK_X': true,\n      'CLICK_Y': true,\n    }\n  );\n  if (newHref != hrefToExpand) {\n    // Store original value so that later clicks can be processed with\n    // freshest values.\n    if (!target.getAttribute(ORIG_HREF_ATTRIBUTE)) {\n      target.setAttribute(ORIG_HREF_ATTRIBUTE, hrefToExpand);\n    }\n    target.setAttribute('href', newHref);\n  }\n}\n\n/**\n * Calculate and return the href from the Location\n * @param {!Location} location\n * @return {string}\n */\nfunction getHref(location) {\n  return `${location.origin}${location.pathname}${location.search}`;\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MutatorInterface} from './mutator-interface';\n\n/** @const {string} */\nexport const READY_SCAN_SIGNAL = 'ready-scan';\n\n/* eslint-disable no-unused-vars */\n/**\n * @interface\n */\nexport class ResourcesInterface extends MutatorInterface {\n  /**\n   * Returns a list of resources.\n   * @return {!Array<!./resource.Resource>}\n   * @export\n   */\n  get() {}\n\n  /**\n   * @return {!./ampdoc-impl.AmpDoc}\n   */\n  getAmpdoc() {}\n\n  /**\n   * Returns the {@link Resource} instance corresponding to the specified AMP\n   * Element. If no Resource is found, the exception is thrown.\n   * @param {!AmpElement} element\n   * @return {!./resource.Resource}\n   */\n  getResourceForElement(element) {}\n\n  /**\n   * Returns the {@link Resource} instance corresponding to the specified AMP\n   * Element. Returns null if no resource is found.\n   * @param {!AmpElement} element\n   * @return {?./resource.Resource}\n   */\n  getResourceForElementOptional(element) {}\n\n  /**\n   * Returns the direction the user last scrolled.\n   *  - -1 for scrolling up\n   *  - 1 for scrolling down\n   *  - Defaults to 1\n   * TODO(lannka): this method should not belong to resources.\n   * @return {number}\n   */\n  getScrollDirection() {}\n\n  /**\n   * Signals that an element has been added to the DOM. Resources manager\n   * will start tracking it from this point on.\n   * @param {!AmpElement} element\n   */\n  add(element) {}\n\n  /**\n   * Signals that an element has been upgraded to the DOM. Resources manager\n   * will perform build and enable layout/viewport signals for this element.\n   * @param {!AmpElement} element\n   */\n  upgraded(element) {}\n\n  /**\n   * Signals that an element has been removed to the DOM. Resources manager\n   * will stop tracking it from this point on.\n   * @param {!AmpElement} element\n   */\n  remove(element) {}\n\n  /**\n   * Schedules layout or preload for the specified resource.\n   * @param {!./resource.Resource} resource\n   * @param {boolean} layout\n   * @param {number=} opt_parentPriority\n   * @param {boolean=} opt_forceOutsideViewport\n   * @package\n   */\n  scheduleLayoutOrPreload(\n    resource,\n    layout,\n    opt_parentPriority,\n    opt_forceOutsideViewport\n  ) {}\n\n  /**\n   * Schedules the work pass at the latest with the specified delay.\n   * @param {number=} opt_delay\n   * @param {boolean=} opt_relayoutAll\n   * @return {boolean}\n   */\n  schedulePass(opt_delay, opt_relayoutAll) {}\n\n  /**\n   * Registers a callback to be called when the next pass happens.\n   * @param {function()} callback\n   */\n  onNextPass(callback) {}\n\n  /**\n   * @return {!Promise} when first pass executed.\n   */\n  whenFirstPass() {}\n\n  /**\n   * Called when main AMP binary is fully initialized.\n   * May never be called in Shadow Mode.\n   */\n  ampInitComplete() {}\n\n  /**\n   * Updates the priority of the resource. If there are tasks currently\n   * scheduled, their priority is updated as well.\n   * @param {!Element} element\n   * @param {number} newLayoutPriority\n   */\n  updateLayoutPriority(element, newLayoutPriority) {}\n}\n/* eslint-enable no-unused-vars */\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../services';\nimport {dict} from '../utils/object';\nimport {parseUrlDeprecated} from '../url';\n\n/**\n * Exposes CID API if provided by the Viewer.\n */\nexport class ViewerCidApi {\n  /**\n   * Creates an instance of ViewerCidApi.\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @private {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n\n    /** @private {!./viewer-interface.ViewerInterface} */\n    this.viewer_ = Services.viewerForDoc(this.ampdoc_);\n\n    const {canonicalUrl} = Services.documentInfoForDoc(this.ampdoc_);\n\n    /** @private {?string} */\n    this.canonicalOrigin_ = canonicalUrl\n      ? parseUrlDeprecated(canonicalUrl).origin\n      : null;\n  }\n\n  /**\n   * Resolves to true if Viewer is trusted and supports CID API.\n   * @return {!Promise<boolean>}\n   */\n  isSupported() {\n    if (!this.viewer_.hasCapability('cid')) {\n      return Promise.resolve(false);\n    }\n    return this.viewer_.isTrustedViewer();\n  }\n\n  /**\n   * Returns scoped CID retrieved from the Viewer.\n   * @param {string|undefined} apiKey\n   * @param {string} scope\n   * @return {!Promise<?JsonObject|string|undefined>}\n   */\n  getScopedCid(apiKey, scope) {\n    const payload = dict({\n      'scope': scope,\n      'clientIdApi': !!apiKey,\n      'canonicalOrigin': this.canonicalOrigin_,\n    });\n    if (apiKey) {\n      payload['apiKey'] = apiKey;\n    }\n    return this.viewer_.sendMessageAwaitResponse('cid', payload);\n  }\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getAmpdoc,\n  getExistingServiceForDocInEmbedScope,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServicePromiseForDoc,\n} from './service';\nimport {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from './element-service';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (getElementServiceForDoc(\n      element,\n      'access',\n      'amp-access'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'access',\n      'amp-access'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (getElementServiceForDoc(\n      element,\n      'subscriptions',\n      'amp-subscriptions'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'subscriptions',\n      'amp-subscriptions'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'action'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'standard-actions'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (getElementServiceForDoc(\n      element,\n      'activity',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (getService(\n      window,\n      'ampdoc'\n    ));\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (getElementServiceForDoc(\n      element,\n      'amp-analytics-instrumentation',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'amp-analytics-instrumentation',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (getService(\n      window,\n      'batched-xhr'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (getElementServiceIfAvailableForDocInEmbedScope(\n      element,\n      'bind',\n      'amp-bind'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'cid'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'navigation'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (getElementServiceForDoc(\n      element,\n      'loader',\n      'amp-loader'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (getElementServiceForDoc(\n      element,\n      'standalone',\n      'amp-standalone'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (getService(\n      window,\n      'crypto'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'documentInfo'\n    )).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (getService(\n      window,\n      'extensions'\n    ));\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'form-submit-service'\n    ));\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'hidden-observer'\n    ));\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'history'\n    ));\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'inputmask',\n      'amp-inputmask'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'owners'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (getService(\n      window,\n      'performance'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (getExistingServiceOrNull(\n      window,\n      'performance'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (getService(\n      window,\n      'platform'\n    ));\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (getServiceForDoc(\n      element,\n      'position-observer'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'resources'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'resources'\n    ));\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?{incomingFragment: string, outgoingFragment: string}>}\n   */\n  static shareTrackingForOrNull(win) {\n    return /** @type {!Promise<?{incomingFragment: string, outgoingFragment: string}>} */ (getElementServiceIfAvailable(\n      win,\n      'share-tracking',\n      'amp-share-tracking',\n      true\n    ));\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (getElementServiceIfAvailable(win, 'localization', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  static localizationService(win) {\n    return getService(win, 'localization');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (getElementServiceIfAvailable(win, 'story-analytics', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreServiceV01(win) {\n    return getService(win, 'story-store');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestServiceV01(win) {\n    return getService(win, 'story-request-v01');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNullV01(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (getElementServiceIfAvailable(win, 'localization-v01', 'amp-story', true))\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  static localizationServiceV01(win) {\n    return getService(win, 'localization-v01');\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>}\n   */\n  static viewerIntegrationVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>} */\n      (getElementServiceIfAvailable(\n        win,\n        'viewer-integration-variable',\n        'amp-viewer-integration',\n        true\n      ))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'storage'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesFor(window) {\n    return /** @type {!./service/template-impl.Templates} */ (getService(\n      window,\n      'templates'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (getService(\n      window,\n      'timer'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'url-replace'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (getElementServiceForDoc(\n        element,\n        'userNotificationManager',\n        'amp-user-notification'\n      ))\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (getElementServiceIfAvailableForDoc(\n        element,\n        'consentPolicyManager',\n        'amp-consent'\n      ))\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'geo',\n      'amp-geo',\n      true\n    ));\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>}\n   */\n  static userLocationForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'user-location',\n      'amp-user-location',\n      true\n    ));\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'url'\n    ));\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'variant',\n      'amp-experiment',\n      true\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'video-manager'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>}\n   */\n  static viewerAssistanceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>} */\n      (getElementServiceIfAvailableForDoc(\n        element,\n        'amp-viewer-assistance',\n        'amp-viewer-assistance'\n      ))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'viewer'\n    ));\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'viewer'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (getService(\n      window,\n      'vsync'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'viewport'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from './log';\nimport {map} from './utils/object.js';\n\nlet htmlContainer;\nlet svgContainer;\n\n/**\n * Creates the html helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\nexport function htmlFor(nodeOrDoc) {\n  const doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n  if (!htmlContainer || htmlContainer.ownerDocument !== doc) {\n    htmlContainer = doc.createElement('div');\n  }\n\n  return html;\n}\n\n/**\n * Creates the svg helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\nexport function svgFor(nodeOrDoc) {\n  const doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n  if (!svgContainer || svgContainer.ownerDocument !== svgContainer) {\n    svgContainer = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  }\n\n  return svg;\n}\n\n/**\n * A tagged template literal helper to generate static SVG trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const circle = svg`<circle cx=\"60\" cy=\"60\" r=\"22\"></circle>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction svg(strings) {\n  return createNode(svgContainer, strings);\n}\n\n/**\n * A tagged template literal helper to generate static DOM trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const div = html`<div><span></span></div>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction html(strings) {\n  return createNode(htmlContainer, strings);\n}\n\n/**\n * Helper used by html and svg string literal functions.\n * @param {!Element} container\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction createNode(container, strings) {\n  devAssert(strings.length === 1, 'Improper html template tag usage.');\n  container./*OK*/ innerHTML = strings[0];\n\n  const el = container.firstElementChild;\n  devAssert(el, 'No elements in template');\n  devAssert(!el.nextElementSibling, 'Too many root elements in template');\n\n  // Clear to free memory.\n  container.removeChild(el);\n\n  return el;\n}\n\n/**\n * Queries an element for all elements with a \"ref\" attribute, removing\n * the attribute afterwards.\n * Returns a named map of all ref elements.\n *\n * @param {!Element} root\n * @return {!Object<string, !Element>}\n */\nexport function htmlRefs(root) {\n  const elements = root.querySelectorAll('[ref]');\n  const refs = map();\n\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n    const ref = devAssert(element.getAttribute('ref'), 'Empty ref attr');\n    element.removeAttribute('ref');\n    devAssert(refs[ref] === undefined, 'Duplicate ref');\n    refs[ref] = element;\n  }\n\n  return refs;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.startsWith.\n * @param {string} string\n * @param {string} prefix\n * @return {boolean}\n */\nexport function startsWith(string, prefix) {\n  if (prefix.length > string.length) {\n    return false;\n  }\n  return string.lastIndexOf(prefix, 0) == 0;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {*} TODO(#23582): Specify return type\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {dev, devAssert} from './log';\nimport {map} from './utils/object.js';\nimport {startsWith} from './string';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\n/**\n * @export\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @export\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (startsWith(camelCase, '--')) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      styles[k].toString(),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (propertyName) {\n    element.style[propertyName] = /** @type {string} */ (opt_units\n      ? value + opt_units\n      : value);\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  if (style === 'display') {\n    dev().error(\n      'STYLE',\n      '`display` style detected. You must use toggle instead.'\n    );\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    dev().error(\n      'STYLE',\n      '`display` style detected in styles. You must use toggle instead.'\n    );\n  }\n  return styles;\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x}, ${opt_y})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n  return `rotate(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!Object<string, string>}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return /** @type {!Object<string, string>} */ (style) || map();\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst toString_ = Object.prototype.toString;\n\n/**\n * Returns the ECMA [[Class]] of a value\n * @param {*} value\n * @return {string}\n */\nfunction toString(value) {\n  return toString_.call(value);\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport function isArray(value) {\n  return Array.isArray(value);\n}\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString(value) === '[object Object]';\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Checks whether `s` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} s\n * @return {boolean}\n * @template T\n */\nexport function isEnumValue(enumObj, s) {\n  for (const k in enumObj) {\n    if (enumObj[k] === s) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {!Window|null} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {tryDecodeUriComponent_} from './url-try-decode-uri-component';\n\nconst regex = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * DO NOT import the function from this file. Instead, import parseQueryString\n * from `src/url.js`.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString_(queryString) {\n  const params = /** @type {!JsonObject} */ (Object.create(null));\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = regex.exec(queryString))) {\n    const name = tryDecodeUriComponent_(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent_(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * DO NOT import the function from this file. Instead, import\n * tryDecodeUriComponent from `src/url.js`.\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent_(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LruCache} from './utils/lru-cache';\nimport {dict, hasOwn} from './utils/object';\nimport {endsWith, startsWith} from './string';\nimport {getMode} from './mode';\nimport {isArray} from './types';\nimport {parseQueryString_} from './url-parse-query-string';\nimport {tryDecodeUriComponent_} from './url-try-decode-uri-component';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\n/**\n * @type {!JsonObject}\n */\nconst SERVING_TYPE_PREFIX = dict({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n  // Actions viewer\n  'action': true,\n});\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet a;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet cache;\n\n/** @private @const Matches amp_js_* parameters in query string. */\nconst AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n\n/** @private @const Matches amp_gsa parameters in query string. */\nconst AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n\n/** @private @const Matches amp_r parameters in query string. */\nconst AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n\n/** @private @const Matches amp_kit parameters in query string. */\nconst AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n\n/** @private @const Matches usqp parameters from goog experiment in query string. */\nconst GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\n\nconst INVALID_PROTOCOLS = [\n  /*eslint no-script-url: 0*/ 'javascript:',\n  /*eslint no-script-url: 0*/ 'data:',\n  /*eslint no-script-url: 0*/ 'vbscript:',\n];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a = /** @type {!HTMLAnchorElement} */ (self.document.createElement('a'));\n    cache = self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, opt_nocache ? null : cache);\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(a, url, opt_cache) {\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = getMode().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  const field = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    const v = params[k];\n    if (v == null) {\n      continue;\n    } else if (isArray(v)) {\n      for (let i = 0; i < v.length; i++) {\n        const sv = /** @type {string} */ (v[i]);\n        s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n      }\n    } else {\n      const sv = /** @type {string} */ (v);\n      s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  // (erwinm, #4560): type cast necessary until #4560 is fixed.\n  const theUrlString = /** @type {string} */ (urlString);\n  userAssert(\n    isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    theUrlString\n  );\n  return theUrlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * This function is implemented in a separate file to avoid a circular\n * dependency.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  return parseQueryString_(queryString);\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.cdnProxyRegex.test(url.origin);\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.localhostRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const parsed = parseUrlDeprecated(url);\n  const search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const search = urlSearch\n    .replace(AMP_JS_PARAMS_REGEX, '')\n    .replace(AMP_GSA_PARAMS_REGEX, '')\n    .replace(AMP_R_PARAMS_REGEX, '')\n    .replace(AMP_KIT_PARAMS_REGEX, '')\n    .replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '')\n    .replace(/^[?&]/, ''); // Removes first ? or &.\n  return search ? '?' + search : '';\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}=[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX[prefix],\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  if (typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private Visible for testing.\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (startsWith(relativeUrlString.toLowerCase(), relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (startsWith(relativeUrlString, '//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (startsWith(relativeUrlString, '/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} opt_fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, opt_fallback) {\n  return tryDecodeUriComponent_(component, opt_fallback);\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n  }\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {bytesToString, stringToBytes, utf8Decode, utf8Encode} from './bytes';\n\n/**\n * Character mapping from base64url to base64.\n * @const {!Object<string, string>}\n */\nconst base64UrlDecodeSubs = {'-': '+', '_': '/', '.': '='};\n\n/**\n * Character mapping from base64 to base64url.\n * @const {!Object<string, string>}\n */\nconst base64UrlEncodeSubs = {'+': '-', '/': '_', '=': '.'};\n\n/**\n * Converts a string which is in base64url encoding into a Uint8Array\n * containing the decoded value.\n * @param {string} str\n * @return {!Uint8Array}\n */\nexport function base64UrlDecodeToBytes(str) {\n  const encoded = atob(str.replace(/[-_.]/g, ch => base64UrlDecodeSubs[ch]));\n  return stringToBytes(encoded);\n}\n\n/**\n * Converts a string which is in base64 encoding into a Uint8Array\n * containing the decoded value.\n * @param {string} str\n * @return {!Uint8Array}\n */\nexport function base64DecodeToBytes(str) {\n  return stringToBytes(atob(str));\n}\n\n/**\n * Converts a bytes array into base64url encoded string.\n * base64url is defined in RFC 4648. It is sometimes referred to as \"web safe\".\n * @param {!Uint8Array} bytes\n * @return {string}\n */\nexport function base64UrlEncodeFromBytes(bytes) {\n  const str = bytesToString(bytes);\n  return btoa(str).replace(/[+/=]/g, ch => base64UrlEncodeSubs[ch]);\n}\n\n/**\n * Converts a string into base64url encoded string.\n * base64url is defined in RFC 4648. It is sometimes referred to as \"web safe\".\n * @param {string} str\n * @return {string}\n */\nexport function base64UrlEncodeFromString(str) {\n  const bytes = utf8Encode(str);\n  return base64UrlEncodeFromBytes(bytes);\n}\n\n/**\n * Decode a base64url encoded string by `base64UrlEncodeFromString`\n * @param {string} str\n * @return {string}\n */\nexport function base64UrlDecodeFromString(str) {\n  const bytes = base64UrlDecodeToBytes(str);\n  return utf8Decode(bytes);\n}\n\n/**\n * Converts a bytes array into base64 encoded string.\n * @param {!Uint8Array} bytes\n * @return {string}\n */\nexport function base64EncodeFromBytes(bytes) {\n  return btoa(bytesToString(bytes));\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../log';\n\n/**\n * Interpret a byte array as a UTF-8 string.\n * @param {!BufferSource} bytes\n * @return {string}\n */\nexport function utf8Decode(bytes) {\n  if (typeof TextDecoder !== 'undefined') {\n    return new TextDecoder('utf-8').decode(bytes);\n  }\n  const asciiString = bytesToString(new Uint8Array(bytes.buffer || bytes));\n  return decodeURIComponent(escape(asciiString));\n}\n\n/**\n * Turn a string into UTF-8 bytes.\n * @param {string} string\n * @return {!Uint8Array}\n */\nexport function utf8Encode(string) {\n  if (typeof TextEncoder !== 'undefined') {\n    return new TextEncoder('utf-8').encode(string);\n  }\n  return stringToBytes(unescape(encodeURIComponent(string)));\n}\n\n/**\n * Converts a string which holds 8-bit code points, such as the result of atob,\n * into a Uint8Array with the corresponding bytes.\n * If you have a string of characters, you probably want to be using utf8Encode.\n * @param {string} str\n * @return {!Uint8Array}\n */\nexport function stringToBytes(str) {\n  const bytes = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    const charCode = str.charCodeAt(i);\n    devAssert(charCode <= 255, 'Characters must be in range [0,255]');\n    bytes[i] = charCode;\n  }\n  return bytes;\n}\n\n/**\n * Converts a 8-bit bytes array into a string\n * @param {!Uint8Array} bytes\n * @return {string}\n */\nexport function bytesToString(bytes) {\n  // Intentionally avoids String.fromCharCode.apply so we don't suffer a\n  // stack overflow. #10495, https://jsperf.com/bytesToString-2\n  const array = new Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = String.fromCharCode(bytes[i]);\n  }\n  return array.join('');\n}\n\n/**\n * Converts a 4-item byte array to an unsigned integer.\n * Assumes bytes are big endian.\n * @param {!Uint8Array} bytes\n * @return {number}\n */\nexport function bytesToUInt32(bytes) {\n  if (bytes.length != 4) {\n    throw new Error('Received byte array with length != 4');\n  }\n  const val =\n    ((bytes[0] & 0xff) << 24) |\n    ((bytes[1] & 0xff) << 16) |\n    ((bytes[2] & 0xff) << 8) |\n    (bytes[3] & 0xff);\n  // Convert to unsigned.\n  return val >>> 0;\n}\n\n/**\n * Generate a random bytes array with specific length using\n * win.crypto.getRandomValues. Return null if it is not available.\n * @param {!Window} win\n * @param {number} length\n * @return {?Uint8Array}\n */\nexport function getCryptoRandomBytesArray(win, length) {\n  if (!win.crypto || !win.crypto.getRandomValues) {\n    return null;\n  }\n\n  // Widely available in browsers we support:\n  // http://caniuse.com/#search=getRandomValues\n  const uint8array = new Uint8Array(length);\n  win.crypto.getRandomValues(uint8array);\n  return uint8array;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// TODO(rsimha, #15334): Enable this rule.\n/* eslint jsdoc/check-types: 0 */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nexport function once(fn) {\n  let evaluated = false;\n  let retValue = null;\n  let callback = fn;\n  return (...args) => {\n    if (!evaluated) {\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n    return retValue;\n  };\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dev} from '../log';\n\n/** @const {string} */\nconst TAG = 'lru-cache';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = Object.create(null);\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    dev().warn(TAG, 'Trimming LRU cache');\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isObject} from '../types';\n\n/* @const */\nconst hasOwn_ = Object.prototype.hasOwnProperty;\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {t, s, d} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    Object.keys(s).forEach(key => {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          return;\n        }\n      }\n      t[key] = newValue;\n    });\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A priority queue backed with sorted array.\n * @template T\n */\nexport default class PriorityQueue {\n  /**\n   * Creates an instance of PriorityQueue.\n   */\n  constructor() {\n    /** @private @const {Array<{item: T, priority: number}>} */\n    this.queue_ = [];\n  }\n\n  /**\n   * Returns the max priority item without dequeueing it.\n   * @return {T}\n   */\n  peek() {\n    const l = this.queue_.length;\n    if (!l) {\n      return null;\n    }\n    return this.queue_[l - 1].item;\n  }\n\n  /**\n   * Enqueues an item with the given priority.\n   * @param {T} item\n   * @param {number} priority\n   */\n  enqueue(item, priority) {\n    if (isNaN(priority)) {\n      throw new Error('Priority must not be NaN.');\n    }\n    const i = this.binarySearch_(priority);\n    this.queue_.splice(i, 0, {item, priority});\n  }\n\n  /**\n   * Returns index at which item with `target` priority should be inserted.\n   * @param {number} target\n   * @return {number}\n   * @private\n   */\n  binarySearch_(target) {\n    let i = -1;\n    let lo = 0;\n    let hi = this.queue_.length;\n    while (lo <= hi) {\n      i = Math.floor((lo + hi) / 2);\n      // This means `target` is the new max priority in the queue.\n      if (i === this.queue_.length) {\n        break;\n      }\n      // Stop searching once p[i] >= target AND p[i-1] < target.\n      // This way, we'll return the index of the first occurence of `target`\n      // priority (if any), which preserves FIFO order of same-priority items.\n      if (this.queue_[i].priority < target) {\n        lo = i + 1;\n      } else if (i > 0 && this.queue_[i - 1].priority >= target) {\n        hi = i - 1;\n      } else {\n        break;\n      }\n    }\n    return i;\n  }\n\n  /**\n   * @param {function(T)} callback\n   */\n  forEach(callback) {\n    let index = this.queue_.length;\n    while (index--) {\n      callback(this.queue_[index].item);\n    }\n  }\n\n  /**\n   * Dequeues the max priority item.\n   * Items with the same priority are dequeued in FIFO order.\n   * @return {T}\n   */\n  dequeue() {\n    if (!this.queue_.length) {\n      return null;\n    }\n    return this.queue_.pop().item;\n  }\n\n  /**\n   * The number of items in the queue.\n   * @return {number}\n   */\n  get length() {\n    return this.queue_.length;\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /**\n   * Creates an instance of Deferred.\n   */\n  constructor() {\n    let resolve, reject;\n\n    /**\n     * @const {!Promise<T>}\n     */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n\n    /**\n     * @const {function(T=)}\n     */\n    this.resolve = resolve;\n\n    /**\n     * @const {function(*=)}\n     */\n    this.reject = reject;\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise(resolve => {\n    resolve(fn());\n  });\n}\n\n/**\n * Returns a promise which resolves if a threshold amount of the given promises\n * resolve, and rejects otherwise.\n * @param {!Array<!Promise>} promises The array of promises to test.\n * @param {number} count The number of promises that must resolve for the\n *     returned promise to resolve.\n * @return {!Promise} A promise that resolves if any of the given promises\n *     resolve, and which rejects otherwise.\n */\nexport function some(promises, count = 1) {\n  return new Promise((resolve, reject) => {\n    count = Math.max(count, 0);\n    const extra = promises.length - count;\n    if (extra < 0) {\n      reject(new Error('not enough promises to resolve'));\n    }\n    if (promises.length == 0) {\n      resolve([]);\n    }\n    const values = [];\n    const reasons = [];\n\n    const onFulfilled = value => {\n      if (values.length < count) {\n        values.push(value);\n      }\n      if (values.length == count) {\n        resolve(values);\n      }\n    };\n    const onRejected = reason => {\n      if (reasons.length <= extra) {\n        reasons.push(reason);\n      }\n      if (reasons.length > extra) {\n        reject(reasons);\n      }\n    };\n    for (let i = 0; i < promises.length; i++) {\n      Promise.resolve(promises[i]).then(onFulfilled, onRejected);\n    }\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!Promise>=} opt_promises\n   */\n  constructor(opt_promises) {\n    let resolve_, reject_;\n    /** @private @const {!Promise} */\n    this.promise_ = new Promise((resolve, reject) => {\n      resolve_ = resolve;\n      reject_ = reject;\n    });\n\n    /** @private */\n    this.resolve_ = resolve_;\n\n    /** @private */\n    this.reject_ = reject_;\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (let i = 0; i < opt_promises.length; i++) {\n        this.add(opt_promises[i]);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!Promise} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    Promise.resolve(promise).then(\n      result => {\n        if (this.count_ === countAtAdd) {\n          this.resolve_(result);\n        }\n      },\n      error => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.reject_(error);\n        }\n      }\n    );\n    return this.promise_;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.promise_.then(opt_resolve, opt_reject);\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const MIN_VISIBILITY_RATIO_FOR_AUTOPLAY = 0.5;\n\n/**\n * VideoInterface defines a common video API which any AMP component that plays\n * videos is expected to implement.\n *\n * AMP runtime uses this common API to provide consistent video experience and\n * analytics across all video players.\n *\n * Components implementing this interface must also extend\n * {@link ./base-element.BaseElement} and register with the\n * Video Manager {@link ./service/video-manager-impl.VideoManager} during\n * their `builtCallback`.\n *\n * @interface\n */\nexport class VideoInterface {\n  /**\n   * Whether the component supports video playback in the current platform.\n   * If false, component will be not treated as a video component.\n   * @return {boolean}\n   */\n  supportsPlatform() {}\n\n  /**\n   * Whether users can interact with the video such as pausing it.\n   * Example of non-interactive videos include design background videos where\n   * all controls are hidden from the user.\n   *\n   * @return {boolean}\n   */\n  isInteractive() {}\n\n  /**\n   * Current playback time in seconds at time of trigger\n   * @return {number}\n   */\n  getCurrentTime() {}\n\n  /**\n   * Total duration of the video in seconds\n   * @return {number}\n   */\n  getDuration() {}\n\n  /**\n   * Get a 2d array of start and stop times that the user has watched.\n   * @return {!Array<Array<number>>}\n   */\n  getPlayedRanges() {}\n\n  /**\n   * Plays the video..\n   *\n   * @param {boolean} unusedIsAutoplay Whether the call to the `play` method is\n   * triggered by the autoplay functionality. Video players can use this hint\n   * to make decisions such as not playing pre-roll video ads.\n   */\n  play(unusedIsAutoplay) {}\n\n  /**\n   * Pauses the video.\n   */\n  pause() {}\n\n  /**\n   * Mutes the video.\n   */\n  mute() {}\n\n  /**\n   * Unmutes the video.\n   */\n  unmute() {}\n\n  /**\n   * Makes the video UI controls visible.\n   *\n   * AMP will not call this method if `controls` attribute is not set.\n   */\n  showControls() {}\n\n  /**\n   * Hides the video UI controls.\n   *\n   * AMP will not call this method if `controls` attribute is not set.\n   */\n  hideControls() {}\n\n  /**\n   * Returns video's meta data (artwork, title, artist, album, etc.) for use\n   * with the Media Session API\n   * artwork (Array): URL to the poster image (preferably a 512x512 PNG)\n   * title (string): Name of the video\n   * artist (string): Name of the video's author/artist\n   * album (string): Name of the video's album if it exists\n   * @return {!./mediasession-helper.MetadataDef|undefined} metadata\n   */\n  getMetadata() {}\n\n  /**\n   * If this returns true then it will be assumed that the player implements\n   * a feature to enter fullscreen on device rotation internally, so that the\n   * video manager does not override it. If not, the video manager will\n   * implement this feature automatically for videos with the attribute\n   * `rotate-to-fullscreen`.\n   *\n   * @return {boolean}\n   */\n  preimplementsAutoFullscreen() {}\n\n  /**\n   * If this returns true then it will be assumed that the player implements\n   * the MediaSession API internally so that the video manager does not override\n   * it. If not, the video manager will use the metadata variable as well as\n   * inferred meta-data to update the video's Media Session notification.\n   *\n   * @return {boolean}\n   */\n  preimplementsMediaSessionAPI() {}\n\n  /**\n   * Enables fullscreen on the internal video element\n   * NOTE: While implementing, keep in mind that Safari/iOS do not allow taking\n   * any element other than <video> to fullscreen, if the player has an internal\n   * implementation of fullscreen (flash for example) then check\n   * if Services.platformFor(this.win).isSafari is true and use the internal\n   * implementation instead. If not, it is recommended to take the iframe\n   * to fullscreen using fullscreenEnter from dom.js\n   */\n  fullscreenEnter() {}\n\n  /**\n   * Quits fullscreen mode\n   */\n  fullscreenExit() {}\n\n  /**\n   * Returns whether the video is currently in fullscreen mode or not\n   * @return {boolean}\n   */\n  isFullscreen() {}\n\n  /**\n   * Seeks the video to a specified time.\n   * @param {number} unusedTimeSeconds\n   */\n  seekTo(unusedTimeSeconds) {}\n}\n\n/**\n * Attributes\n *\n * Components implementing the VideoInterface are expected to support\n * the following attributes.\n *\n * @const {!Object<string, string>}\n */\nexport const VideoAttributes = {\n  /**\n   * autoplay\n   *\n   * Whether the developer has configured autoplay on the component.\n   * This is normally done by setting `autoplay` attribute on the component.\n   *\n   * AMP runtime manages autoplay behavior itself using methods such as `play`,\n   * `pause`, `showControls`, `hideControls`, `mute`, etc.. therefore components\n   * should not propagate the autoplay attribute to the underlying player\n   * implementation.\n   *\n   * When a video is requested to autoplay, AMP will automatically\n   * mute and hide the controls for the video, when video is 75% visible in\n   * the viewport, AMP will play the video and later pauses it when 25%\n   * or more of the video exits the viewport. If an auto-playing video also has\n   * controls, AMP will install a tap\n   * handler on the video, and when an end-user taps the video, AMP will show\n   * the controls.\n   *\n   */\n  AUTOPLAY: 'autoplay',\n  /**\n   * dock\n   *\n   * Setting the `dock` attribute on the component makes the video minimize\n   * to the corner when scrolled out of view and has been interacted with.\n   */\n  DOCK: 'dock',\n  /**\n   * rotate-to-fullscreen\n   *\n   * If enabled, this automatically expands the currently visible video and\n   * playing to fullscreen when the user changes the device's orientation to\n   * landscape if the video was started following a user interaction\n   * (not autoplay)\n   *\n   * Dependent upon browser support of\n   * http://caniuse.com/#feat=screen-orientation\n   * and http://caniuse.com/#feat=fullscreen\n   */\n  ROTATE_TO_FULLSCREEN: 'rotate-to-fullscreen',\n  /**\n   * noaudio\n   *\n   * If set and autoplay, the equalizer icon will not be displayed.\n   */\n  NO_AUDIO: 'noaudio',\n};\n\n/**\n * Events\n *\n * Components implementing the VideoInterface are expected to dispatch\n * the following DOM events.\n *\n * @const {!Object<string, string>}\n */\nexport const VideoEvents = {\n  /**\n   * registered\n   *\n   * Fired when the video player element is built and has been registered with\n   * the video manager.\n   *\n   * @event registered\n   */\n  REGISTERED: 'registered',\n\n  /**\n   * load\n   *\n   * Fired when the video player is loaded and calls to methods such as `play()`\n   * are allowed.\n   *\n   * @event load\n   */\n  LOAD: 'load',\n\n  /**\n   * loadedmetadata\n   *\n   * Fired when the video's metadata becomes available (e.g. duration).\n   *\n   * @event loadedmetadata\n   */\n  LOADEDMETADATA: 'loadedmetadata',\n\n  /**\n   * playing\n   *\n   * Fired when the video begins playing.\n   *\n   * @event playing\n   */\n  PLAYING: 'playing',\n\n  /**\n   * pause\n   *\n   * Fired when the video pauses.\n   *\n   * @event pause\n   */\n  PAUSE: 'pause',\n\n  /**\n   * ended\n   *\n   * Fired when the video ends.\n   *\n   * This event should be fired in addition to `pause` when video ends.\n   *\n   * @event ended\n   */\n  ENDED: 'ended',\n\n  /**\n   * muted\n   *\n   * Fired when the video is muted.\n   *\n   * @event muted\n   */\n  MUTED: 'muted',\n\n  /**\n   * unmuted\n   *\n   * Fired when the video is unmuted.\n   *\n   * @event unmuted\n   */\n  UNMUTED: 'unmuted',\n\n  /**\n   * amp:video:visibility\n   *\n   * Fired when the video's visibility changes. Normally fired\n   * from `viewportCallback`.\n   *\n   * @event amp:video:visibility\n   * @property {boolean} visible Whether the video player is visible or not.\n   */\n  VISIBILITY: 'amp:video:visibility',\n\n  /**\n   * reload\n   *\n   * Fired when the video's src changes.\n   *\n   * @event reloaded\n   */\n  RELOAD: 'reloaded',\n\n  /**\n   * pre/mid/post Ad start\n   *\n   * Fired when an Ad starts playing.\n   *\n   * This is used to remove any overlay shims during Ad play during autoplay\n   * or minimized-to-corner version of the player.\n   *\n   * @event ad_start\n   */\n  AD_START: 'ad_start',\n\n  /**\n   * pre/mid/post Ad ends\n   *\n   * Fired when an Ad ends playing.\n   *\n   * This is used to restore any overlay shims during Ad play during autoplay\n   * or minimized-to-corner version of the player.\n   *\n   * @event ad_end\n   */\n  AD_END: 'ad_end',\n\n  /**\n   * A 3p video player can send signals for analytics whose meaning doesn't\n   * fit for other events. In this case, a `tick` event is sent with additional\n   * information in its data property.\n   *\n   * @event amp:video:tick\n   */\n  CUSTOM_TICK: 'amp:video:tick',\n};\n\n/** @typedef {string} */\nexport let PlayingStateDef;\n\n/**\n * Playing States\n *\n * Internal playing states used to distinguish between video playing on user's\n * command and videos playing automatically\n *\n * @const {!Object<string, PlayingStateDef>}\n */\nexport const PlayingStates = {\n  /**\n   * playing_manual\n   *\n   * When the video user manually interacted with the video and the video\n   * is now playing\n   *\n   * @event playing_manual\n   */\n  PLAYING_MANUAL: 'playing_manual',\n\n  /**\n   * playing_auto\n   *\n   * When the video has autoplay and the user hasn't interacted with it yet\n   *\n   * @event playing_auto\n   */\n  PLAYING_AUTO: 'playing_auto',\n\n  /**\n   * paused\n   *\n   * When the video is paused.\n   *\n   * @event paused\n   */\n  PAUSED: 'paused',\n};\n\n/** @enum {string} */\nexport const VideoAnalyticsEvents = {\n  /**\n   * video-ended\n   *\n   * Indicates that a video ended.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-ended\n   */\n  ENDED: 'video-ended',\n\n  /**\n   * video-pause\n   *\n   * Indicates that a video paused.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-pause\n   */\n  PAUSE: 'video-pause',\n\n  /**\n   * video-play\n   *\n   * Indicates that a video began to play.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-play\n   */\n  PLAY: 'video-play',\n\n  /**\n   * video-session\n   *\n   * Indicates that some segment of the video played.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-session\n   */\n  SESSION: 'video-session',\n\n  /**\n   * video-session-visible\n   *\n   * Indicates that some segment of the video played in the viewport.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-session-visible\n   */\n  SESSION_VISIBLE: 'video-session-visible',\n\n  /**\n   * video-seconds-played\n   *\n   * Indicates that a video was playing when the\n   * video-seconds-played interval fired.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-session-visible\n   */\n  SECONDS_PLAYED: 'video-seconds-played',\n\n  /**\n   * video-hosted-custom\n   *\n   * Indicates that a custom event incoming from a 3p frame is to be logged.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-custom\n   */\n  CUSTOM: 'video-hosted-custom',\n\n  /**\n   * video-percentage-played\n   *\n   * Indicates that a percentage interval has been played.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-custom\n   */\n  PERCENTAGE_PLAYED: 'video-percentage-played',\n\n  /**\n   * video-ad-start\n   *\n   * Indicates that an ad begins to play.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-ad-start\n   */\n  AD_START: 'video-ad-start',\n\n  /**\n   * video-ad-end\n   *\n   * Indicates that an ad ended.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-ad-end\n   */\n  AD_END: 'video-ad-end',\n};\n\n/**\n * This key can't predictably collide with custom var names as defined in\n * analytics user configuration.\n * @type {string}\n */\nexport const videoAnalyticsCustomEventTypeKey = '__amp:eventType';\n\n/**\n * Helper union type to be used internally, so that the compiler treats\n * `VideoInterface` objects as `BaseElement`s, which they should be anyway.\n *\n * WARNING: Don't use this at the service level. Its `register` method should\n * only allow `VideoInterface` as a guarding measure.\n *\n * @typedef {!VideoInterface|!./base-element.BaseElement}\n */\nexport let VideoOrBaseElementDef;\n\n/**\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isDockable(element) {\n  return element.hasAttribute(VideoAttributes.DOCK);\n}\n\n/** @enum {string} */\nexport const VideoServiceSignals = {\n  USER_INTERACTED: 'user-interacted',\n  AUTOPLAY_DELEGATED: 'autoplay-delegated',\n};\n\n/** @param {!AmpElement|!VideoOrBaseElementDef} video */\nexport function delegateAutoplay(video) {\n  video.signals().signal(VideoServiceSignals.AUTOPLAY_DELEGATED);\n}\n\n/** @param {!AmpElement|!VideoOrBaseElementDef} video */\nexport function userInteractedWith(video) {\n  video.signals().signal(VideoServiceSignals.USER_INTERACTED);\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An interface to interact with browser window object.\n * Mainly used to mock out read only APIs in test.\n * See test-helper.js#mockWindowInterface\n */\nexport class WindowInterface {\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {!Location}\n   */\n  static getLocation(win) {\n    return win.location;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {string}\n   */\n  static getDocumentReferrer(win) {\n    return win.document.referrer;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {string}\n   */\n  static getHostname(win) {\n    return win.location.hostname;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {string}\n   */\n  static getUserAgent(win) {\n    return win.navigator.userAgent;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {string}\n   */\n  static getUserLanguage(win) {\n    return win.navigator.userLanguage || win.navigator.language;\n  }\n\n  /**\n   * @static\n   * @return {number}\n   */\n  static getDevicePixelRatio() {\n    // No matter the window, the device-pixel-ratio is always one.\n    return self.devicePixelRatio || 1;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {function(string,(ArrayBufferView|Blob|FormData|null|string)=):boolean|undefined}\n   */\n  static getSendBeacon(win) {\n    if (!win.navigator.sendBeacon) {\n      return undefined;\n    }\n    return win.navigator.sendBeacon.bind(win.navigator);\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {function(new:XMLHttpRequest)}\n   */\n  static getXMLHttpRequest(win) {\n    return win.XMLHttpRequest;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {function(new:Image)}\n   */\n  static getImage(win) {\n    return win.Image;\n  }\n}\n","/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n"]}