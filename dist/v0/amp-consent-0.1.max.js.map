{"version":3,"sources":["regexp/wrapper","node_modules/browser-pack/_prelude.js","amp-consent.js","build/amp-consent-0.1.css.js","extensions/amp-consent/0.1/amp-consent.js","extensions/amp-consent/0.1/cmps.js","extensions/amp-consent/0.1/consent-config.js","extensions/amp-consent/0.1/consent-info.js","extensions/amp-consent/0.1/consent-policy-manager.js","extensions/amp-consent/0.1/consent-state-manager.js","extensions/amp-consent/0.1/consent-ui.js","extensions/amp-geo/0.1/amp-geo-in-group.js","src/config.js","src/consent-state.js","src/css.js","src/dom.js","src/element-service.js","src/event-helper-listen.js","src/event-helper.js","src/experiments.js","src/internal-version.js","src/json.js","src/log.js","src/mode-object.js","src/mode.js","src/observable.js","src/service.js","src/service/notification-ui-manager.js","src/services.js","src/static-template.js","src/string.js","src/style.js","src/types.js","src/url-parse-query-string.js","src/url-try-decode-uri-component.js","src/url.js","src/utils/function.js","src/utils/lru-cache.js","src/utils/object.js","src/utils/promise.js","third_party/css-escape/css-escape.js"],"names":[],"mappings":"AAAA;ACAA;ACCA;AACA;AACA;AACA;ACJO;ADMP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEGA;AFDA;AEMA;AFJA;AEKA;AFHA;AEIA;AFFA;AEGA;AFDA;AEEA;AFAA;AECA;AFCA;AEAA;AFEA;AEDA;AFGA;AECA;AFCA;AEAA;AFEA;AEGA;AFDA;AEEA;AFAA;AECA;AFCA;AEAA;AFEA;AEDA;AFGA;AEFA;AFIA;AEHA;AFKA;AACA;AACA;AELA;AACA;AACA;AAEA;AFMA;AACA;AACA;AACA;AELO;AACL;AACA;AACA;AAHyB;AFW3B;AACA;AACA;AACA;AACA;AACA;AACA;AEVE;AACA;AAAqB;AFavB;AEZI;AAEA;AFaJ;AEZI;AAEA;AFaJ;AEZI;AAEA;AFaJ;AEZI;AAEA;AFaJ;AEZI;AAEA;AFaJ;AEZI;AAEA;AFaJ;AEZI;AAEA;AFaJ;AEZI;AAEA;AFaJ;AEZI;AAEA;AAEA;AFYJ;AEXI;AAEA;AFYJ;AEXI;AAEA;AFYJ;AEXI;AAEA;AFYJ;AEXI;AAvCmB;AAwCpB;AAED;AFaF;AACA;AACA;AACA;AACA;AEfI;AACA;AACD;AAED;AFgBF;AACA;AACA;AEjBkB;AFmBlB;AElBI;AAKA;AAEA;AFeJ;AEZI;AFcJ;AEZI;AACE;AAKD;AAED;AFSJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AETI;AAEA;AAEE;AAAuB;AAGzB;AFQJ;AEPI;AACE;AACA;AFSN;AEPM;AACD;AFSL;AEPI;AAIE;AAA6B;AAAsC;AFQzE;AEPM;AACE;AAAuB;AFU/B;AERM;AACE;AAAwB;AFWhC;AETM;AACE;AAID;AACF;AAED;AAIE;AACA;AAA4B;AAAqC;AAClE;AAED;AAIE;AAA8B;AAAuC;AACtE;AAED;AAKE;AACD;AACF;AAED;AFFF;AACA;AACA;AACA;AACA;AECwB;AFCxB;AEAI;AACE;AACD;AAED;AACE;AACD;AAED;AACE;AACD;AAED;AACE;AACD;AAED;AACD;AAED;AFHF;AACA;AACA;AACA;AACA;AEEgC;AFAhC;AECI;AACE;AACE;AACD;AFCP;AECM;AACA;AFCN;AECM;AACE;AACD;AFCP;AECM;AACE;AACA;AACD;AFCP;AEAM;AAIE;AACE;AAMA;AACD;AFNT;AEOQ;AACE;AACE;AAMD;AFVX;AEWU;AACD;AFTT;AEUQ;AACD;AFRP;AEUM;AFRN;AEUM;AACE;AACE;AFRV;AESU;AFPV;AEQU;AACD;AACF;AACF;AACF;AAED;AFPF;AACA;AACA;AACA;AACA;AACA;AEOI;AACE;AACD;AFLL;AEOI;AACE;AACA;AACA;AACA;AACA;AACA;AACD;AFLL;AEOI;AACE;AACA;AACD;AFLL;AEOI;AACA;AAGD;AAED;AFRF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEO+B;AFL/B;AEMI;AACE;AACD;AFJL;AEMI;AACE;AFJN;AEKM;AACD;AAED;AACA;AACA;AACD;AAED;AFLF;AACA;AACA;AACA;AACA;AEKI;AACE;AACD;AFHL;AEKI;AACA;AFHJ;AEKI;AACE;AACA;AACD;AFHL;AEKI;AACD;AAED;AFJF;AACA;AACA;AACA;AACA;AACA;AACA;AEII;AACE;AACA;AACD;AFFL;AEII;AACE;AACA;AACD;AFFL;AEII;AACE;AACA;AACD;AFFL;AEII;AACE;AACA;AAID;AACC;AACA;AAID;AACC;AAGD;AFVL;AACA;AEYI;AACD;AAED;AFXF;AACA;AACA;AACA;AACA;AEUU;AFRV;AESI;AACA;AAEA;AAEI;AACD;AAEC;AACE;AACD;AFVT;AEWQ;AACD;AAGA;AAEH;AACD;AAED;AFbF;AACA;AACA;AACA;AACA;AACA;AACA;AEY+B;AFV/B;AEWI;AAKA;AFbJ;AEcI;AACE;AACA;AACD;AACC;AAEI;AAIE;AFhBZ;AACA;AEsBY;AACD;AFpBX;AEqBU;AACD;AAEJ;AFpBL;AEqBI;AACE;AACD;AACF;AAED;AFpBF;AACA;AACA;AACA;AACA;AEoBI;AACA;AACE;AACE;AACD;AFlBP;AEmBM;AACD;AAED;AACD;AAED;AFnBF;AACA;AACA;AACA;AACA;AEkBsB;AFhBtB;AEiBI;AACA;AACE;AACE;AACD;AACF;AACF;AAED;AFhBF;AACA;AACA;AACA;AACA;AACA;AACA;AEgBI;AACE;AACA;AACD;AACF;AAED;AFfF;AACA;AACA;AACA;AACA;AACA;AACA;AEcsB;AFZtB;AEaI;AACE;AACD;AFXL;AEYI;AACE;AACD;AACC;AACA;AACE;AACA;AAAgB;AAA4B;AAC1C;AACA;AACA;AACA;AAJ0C;AFHpD;AESQ;AACE;AACD;AFPT;AEQQ;AACE;AACA;AACA;AAHW;AAKb;AACA;AFNR;AEOQ;AFLR;AEMQ;AACA;AACA;AACE;AAEW;AAAA;AACZ;AACF;AACF;AFJL;AEKI;AACD;AAED;AFJF;AACA;AACA;AACA;AACA;AACA;AACA;AEGmC;AFDnC;AEEI;AAEE;AAA4B;AFAlC;AEOI;AACE;AACE;AACA;AACD;AFLP;AEMM;AACE;AACA;AACA;AFJR;AEOQ;AACD;AFLP;AACA;AEMM;AFJN;AEKM;AAEA;AACA;AACD;AACF;AAED;AFLF;AACA;AACA;AACA;AACA;AEIwB;AFFxB;AEGI;AACE;AACD;AFDL;AEGI;AACE;AACE;AAEA;AFFR;AEGO;AACF;AAED;AACE;AACE;AACD;AACF;AACF;AFFH;AACA;AACA;AACA;AACA;AECA;AACE;AACA;AACA;AACA;AACD;AFCD;AACA;AACA;AACA;AACA;AACA;AACA;AG7lBA;AH+lBA;AG/mBA;AHinBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG7mBA;AH+mBA;AACA;AACA;AACA;AACA;AACA;AACA;AG5mBO;AH8mBP;AACA;AG7mBA;AACE;AACE;AACA;AACA;AAHqB;AAKxB;AH+mBD;AG7mBA;AACE;AACA;AACA;AAHqB;AAMvB;AACE;AACA;AACA;AAH0B;AHknB5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIppBA;AJspBA;AIrpBA;AJupBA;AItpBA;AJwpBA;AIvpBA;AJypBA;AIxpBA;AJ0pBA;AIzpBA;AJ2pBA;AI1pBA;AJ4pBA;AIlrBA;AJorBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIzqBA;AAEA;AACE;AACA;AACA;AACA;AAJyC;AJ+qB3C;AACA;AACA;AACA;AI1qBE;AACA;AACE;AACA;AAEA;AJ2qBJ;AI1qBI;AAEA;AJ2qBJ;AI1qBI;AACD;AAED;AJ2qBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI7qBI;AACE;AACD;AJ+qBL;AI9qBI;AACD;AAED;AJ+qBF;AACA;AACA;AACA;AACA;AACA;AACA;AI/qBI;AJirBJ;AIhrBI;AACE;AACA;AAKD;AJ8qBL;AI5qBI;AACE;AACA;AACD;AJ8qBL;AACA;AI7qBI;AAEA;AJ8qBJ;AIxqBI;AACE;AJ0qBN;AIxqBM;AACA;AJ0qBN;AIzqBM;AACE;AJ2qBR;AI1qBQ;AACE;AACA;AACA;AACD;AACF;AACF;AJ4qBL;AI1qBI;AACA;AACD;AAED;AJ2qBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI3qBI;AACE;AAA4B;AAM9B;AAEA;AAAe;AAA4B;AAM3C;AJqqBJ;AI/pBI;AACE;AACA;AJiqBN;AI/pBM;AACE;AACE;AAKA;AACD;AACF;AACF;AJ6pBL;AI3pBI;AACD;AAED;AJ4pBF;AACA;AACA;AACA;AACA;AACA;AI5pBI;AACA;AACA;AACE;AACD;AACC;AACD;AACF;AAED;AJ6pBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI7pBI;AACE;AACD;AJ+pBL;AI7pBI;AJ+pBJ;AI9pBI;AACE;AACD;AJgqBL;AI/pBI;AACA;AACA;AACA;AACD;AAED;AJgqBF;AACA;AACA;AACA;AACA;AACA;AIhqBI;AJkqBJ;AI7pBI;AACE;AACA;AACD;AACF;AJ+pBH;AACA;AACA;AI9pBA;AJgqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIlqBO;AACL;AACA;AAEA;AAEA;AACE;AADoB;AJoqBxB;AI/pBE;AAOA;AACE;AACA;AACA;AAHqB;AAMvB;AACE;AACA;AACE;AACA;AAFS;AAIX;AANsB;AASxB;AAEA;AAEA;AJupBF;AIrpBE;AACE;AACD;AJupBH;AIrpBE;AAEA;AACD;AJspBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK/5BA;ALi6BA;AKh6BA;ALk6BA;AKj6BA;ALm6BA;AKr7BA;ALu7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKj7BA;ALm7BA;AACA;AACA;AACA;AACA;AACA;AACA;AKj7BA;AACE;AACA;AACA;AAHkB;AAMpB;ALk7BA;AACA;AACA;AKj7BO;AACL;AACA;AACA;AACA;AACA;AAEA;AACA;ALk7BF;AK17BkC;AAWlC;ALk7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKl7BO;AAEP;ALm7BA;AACA;AACA;AACA;AACA;AACA;AACA;AKp7BO;AACL;AACE;AAKD;ALk7BH;AKj7BE;AACE;AACA;AACD;ALm7BH;AKl7BE;AACE;AACD;ALo7BH;AKl7BE;AACA;AAKD;AAED;AL+6BA;AACA;AACA;AACA;AACA;AACA;AK/6BO;AACL;AACE;AACD;ALi7BH;AKh7BE;AACE;AACD;ALk7BH;AKj7BE;AACD;AAED;ALk7BA;AACA;AACA;AACA;AACA;AACA;AACA;AKl7BO;AACL;AACE;AACD;ALo7BH;AKn7BE;AAIE;AACD;ALk7BH;AKj7BE;AACE;AACE;AACD;AACF;ALm7BH;AKl7BE;AACD;AAED;ALm7BA;AACA;AACA;AACA;AACA;AACA;AACA;AKn7BO;AACL;AAKE;AACA;AACD;ALi7BH;AKh7BE;AACA;ALk7BF;AKj7BE;AACE;AACD;AACC;AACD;AACC;AACA;AACD;ALm7BH;AKj7BE;AACE;AACD;ALm7BH;AKj7BE;AACE;AACD;ALm7BH;AKj7BE;AACE;AACD;ALm7BH;AKj7BE;AACD;AAED;ALk7BA;AACA;AACA;AACA;AACA;AACA;AKl7BO;AACL;AACE;AACD;ALo7BH;AKn7BE;AACE;AACD;ALq7BH;AKp7BE;AACD;AAED;ALq7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKr7BO;AACL;AACE;AACD;ALu7BH;AKt7BE;AACE;AAGA;AAEA;ALq7BJ;AKp7BI;AACE;AACD;AACC;AACD;ALs7BL;AKr7BI;AACD;ALu7BH;AKt7BE;AACD;AAED;ALu7BA;AACA;AACA;AACA;AACA;AACA;AKv7BA;AACE;AACA;AACD;AAED;ALw7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKx7BO;AAKL;AACE;AACA;AACA;AAHK;AAKR;AAED;ALq7BA;AACA;AACA;AACA;AACA;AACA;AKr7BA;AACE;AACE;AACD;AACC;AACD;ALu7BH;AKt7BE;AACD;AAED;ALu7BA;AACA;AACA;AACA;AACA;AACA;AKv7BO;AACL;AACE;AACD;ALy7BH;AKx7BE;AAID;AAED;ALs7BA;AACA;AACA;AACA;AACA;AACA;AKt7BO;AACL;AACE;AACD;ALw7BH;AKt7BE;AACE;AACD;ALw7BH;AKt7BE;AACD;ALw7BD;AACA;AACA;AACA;AACA;AACA;AACA;AMzsCA;AN2sCA;AM1sCA;AN4sCA;AM3sCA;AN6sCA;AM5sCA;AN8sCA;AM7sCA;AN+sCA;AM9sCA;ANgtCA;AM/sCA;ANitCA;AMhtCA;ANktCA;AMjtCA;ANmtCA;AM3uCA;AN6uCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMhuCA;AACA;AAEA;AACE;AACA;AACA;AACA;AAJuB;ANsuCzB;AACA;AACA;AACA;AMjuCE;ANmuCF;AACA;AACA;AMjuCE;AACE;AACA;AAEA;ANkuCJ;AMjuCI;AAEA;ANkuCJ;AMjuCI;AAEA;ANkuCJ;AMjuCI;AAKA;AN+tCJ;AM9tCI;AAEA;AAEA;AN8tCJ;AM7tCI;AAEA;AN8tCJ;AM7tCI;AAEA;AN8tCJ;AM7tCI;AAEA;AN8tCJ;AM7tCI;AAEA;AN8tCJ;AM7tCI;AAEA;AN8tCJ;AM7tCI;AACD;AAED;AN8tCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AM9tCI;AACD;AAED;AN+tCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMjuCI;AACA;AACD;AAED;ANkuCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMnuCkD;ANquClD;AMpuCI;AACE;AACA;AACA;AACA;AACA;AACD;ANsuCL;AMpuCI;ANsuCJ;AMruCI;AACE;AAIA;AACD;ANouCL;AMluCI;AAEA;ANmuCJ;AMjuCI;AACE;AACA;AACD;ANmuCL;AMjuCI;AACE;AACE;AACA;AACD;ANmuCP;AMluCM;AACE;AACD;ANouCP;AMnuCM;AACE;AACD;AACF;AACF;AAED;ANouCF;AACA;AACA;AACA;AACA;AACA;AMruCU;ANuuCV;AMtuCI;AACA;AACE;AACE;AACE;ANwuCV;AMvuCU;AACE;ANyuCZ;AMxuCY;AACD;AACF;AACF;AACF;AACF;AAED;ANyuCF;AACA;AACA;AACA;AACA;AACA;AMzuCI;AACD;AAED;AN0uCF;AACA;AACA;AACA;AACA;AACA;AM1uCI;AACA;AACA;AACA;AN4uCJ;AM3uCI;AACE;AACA;AACD;AN6uCL;AM3uCI;AACE;AN6uCN;AMzuCM;AACE;AACD;AACF;AACC;AACA;AACE;AACD;AN2uCP;AACA;AM1uCM;AACD;AACC;AACD;AN4uCL;AM3uCI;AACD;AAED;AN4uCF;AACA;AACA;AACA;AACA;AACA;AACA;AM7uC+B;AN+uC/B;AM9uCI;AACA;AACE;AAKA;AACD;AN4uCL;AM3uCI;AACE;AACE;AACD;AACF;AACF;AAED;AN4uCF;AACA;AACA;AACA;AACA;AACA;AACA;AM7uC8B;AN+uC9B;AM9uCI;AACA;AACE;AAKA;AACD;AN4uCL;AM3uCI;AACE;AACE;AACD;AACF;AACF;AAED;AN4uCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AM7uCgC;AN+uChC;AM9uCI;AACQ;AAAA;AAEJ;AACD;AACJ;AAED;AN+uCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMhvCiC;ANkvCjC;AMjvCI;AACE;AACD;AACF;AAED;ANkvCF;AACA;AACA;AACA;AACA;AACA;AACA;AMlvCI;AACE;AACD;ANovCL;AMnvCI;AACE;AACD;ANqvCL;AMpvCI;AAAO;AAAyB;AAAhC;AAED;ANwvCH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AM5vCE;AN8vCF;AACA;AACA;AM5vCE;AACE;AACA;AAEA;AAEA;AN4vCJ;AM3vCI;AAEA;AN4vCJ;AM3vCI;AAEA;AN4vCJ;AM3vCI;AAEA;AN4vCJ;AM3vCI;AAID;AAED;ANyvCF;AACA;AACA;AACA;AACA;AACA;AACA;AM5vCoB;AN8vCpB;AM7vCI;AAEA;AACA;AN8vCJ;AM5vCI;AACE;AACA;AACE;AN8vCR;AACA;AACA;AACA;AACA;AM5vCQ;AAIE;AACD;AAIC;AAKD;ANovCT;AMnvCQ;AACD;AACC;AACD;ANqvCP;AMpvCM;AAKD;ANkvCL;AMhvCI;AACE;AACE;AACA;ANkvCR;AMjvCQ;AACD;AACF;AACF;AAED;ANkvCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMnvCsC;AAApB;AAAoB;ANuvCtC;AMtvCI;AACE;AACA;AACD;ANwvCL;AMtvCI;AACE;AACA;AACD;ANwvCL;AMtvCI;AACE;AACD;AACC;AACD;AACC;AACD;AACC;AACD;ANwvCL;AMtvCI;AACE;AACA;AACD;AACF;AAED;ANuvCF;AACA;AACA;AACA;AACA;AACA;AACA;AMvvCI;AACD;AAED;ANwvCF;AACA;AACA;AACA;AACA;AACA;AMxvCI;AACD;AAED;ANyvCF;AACA;AACA;AACA;AACA;AACA;AACA;AMzvCI;AACD;AN2vCH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOrrDA;APurDA;AO3qDA;AP6qDA;AO5qDA;AP8qDA;AO7qDA;AP+qDA;AO9qDA;APgrDA;AO/qDA;APirDA;AOjtDA;APmtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO9rDA;AACA;APgsDA;AACA;AACA;AACA;AOhsDE;APksDF;AACA;AACA;AOhsDE;AACE;AACA;AAEA;APisDJ;AOhsDI;AAEA;APisDJ;AOhsDI;AAEA;APisDJ;AOhsDI;AAEA;APisDJ;AOhsDI;AAEA;APisDJ;AOhsDI;AACD;AAED;APisDF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOnsDI;AACE;AAOA;AACD;AP+rDL;AO7rDI;AAEA;AP8rDJ;AO5rDI;AACE;AACA;AACD;AACF;AAED;AP6rDF;AACA;AACA;AACA;AACA;AACA;AACA;AO7rDI;AACE;AACA;AACD;AP+rDL;AO7rDI;AP+rDJ;AO7rDI;AACE;AACD;AACF;AAED;AP8rDF;AACA;AACA;AACA;AACA;AACA;AO9rDI;AACA;AACD;AAED;AP+rDF;AACA;AACA;AACA;AACA;AACA;AO/rDI;AACA;AACE;AACE;AACD;APisDP;AOhsDM;AACD;AACF;AAED;APisDF;AACA;AACA;AACA;AACA;AACA;AOjsDI;AAEA;AAMA;AP6rDJ;AO1rDI;AACE;AACD;AACF;AAED;AP2rDF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO3rDI;AACA;AACD;AAED;AP4rDF;AACA;AACA;AACA;AACA;AACA;AO5rDI;AACD;AAED;AP6rDF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO7rDI;AACA;AACD;AAED;AP8rDF;AACA;AACA;AACA;AACA;AACA;AO9rDI;AACE;AACD;APgsDL;AO/rDI;AACE;AACA;AACA;AACD;APisDL;AOhsDI;AACD;APksDH;AACA;AACA;AOjsDA;APmsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOvsDE;APysDF;AACA;AACA;AACA;AACA;AOvsDE;AACE;AACA;AAEA;APwsDJ;AOvsDI;AAKA;APqsDJ;AOpsDI;AAEA;APqsDJ;AOpsDI;AAEA;APqsDJ;AOpsDI;AAEA;APqsDJ;AOpsDI;AAEA;APqsDJ;AOpsDI;AAEA;APqsDJ;AOpsDI;AAEA;APqsDJ;AOpsDI;APssDJ;AOrsDI;AACE;AACD;AAED;APssDJ;AACA;AOtsDI;AACD;AAED;APusDF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO1sDgB;AP4sDhB;AO3sDI;AACA;AACA;AACA;AACE;AACE;AACA;AACA;AACD;AP6sDP;AO5sDM;AACD;AACF;AAED;AP6sDF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO7sDI;AAEA;AAEA;AP6sDJ;AO3sDI;AACE;AACA;AAIA;AACD;AAGD;APwsDJ;AACA;AOxsDI;AP0sDJ;AOzsDI;AACE;AAKD;AACC;AACA;AACA;AAID;APosDL;AOlsDI;APosDJ;AO9rDI;AACE;AACA;AACA;AACD;APgsDL;AACA;AO9rDI;AACD;AAED;AP+rDF;AACA;AACA;AACA;AACA;AACA;AOhsDkC;APksDlC;AOjsDI;AACE;AAOE;AACA;AACD;AP6rDP;AO3rDM;AP6rDN;AO5rDM;AACE;AACA;AACA;AACA;AAMA;APyrDR;AOxrDQ;AP0rDR;AOxrDQ;AACD;AP0rDP;AOxrDM;AP0rDN;AOtrDM;AACE;AACA;AACA;AACD;APwrDP;AOvrDM;AACA;APyrDN;AOxrDM;AACD;AACF;AAED;APyrDF;AACA;AACA;AACA;AACA;AACA;AO1rDQ;AP4rDR;AO3rDI;AACE;AACA;AACD;AP6rDL;AO3rDI;AACA;AAEI;AACA;AACD;AAEC;AACE;AACA;AACD;AP2rDT;AOzrDQ;AACA;AP2rDR;AOzrDQ;AACE;AACA;AP2rDV;AOxrDU;AACA;AACD;AAED;AACA;APyrDR;AACA;AOzrDQ;AACA;AACD;AAEC;AACA;AACD;AACJ;AAED;APyrDF;AACA;AACA;AACA;AACA;AACA;AACA;AO1rDsC;AP4rDtC;AO3rDI;AACE;AACD;AP6rDL;AO5rDI;AACE;AACA;AACD;AP8rDL;AO7rDI;AP+rDJ;AO5rDI;AACE;AACG;AAAkB;AAAnB;AAGH;AP8rDL;AO7rDI;AACE;AAAgB;AAA4B;AAC1C;AACA;AACA;AAH0C;APqsDlD;AOhsDM;AACE;AACD;APksDP;AOjsDM;APmsDN;AOhsDM;AACE;AACD;APksDP;AOjsDM;AACE;AACA;AACA;AACA;AAJW;APwsDnB;AOlsDM;AACE;AACE;AAAuB;AAG1B;AACF;AACF;APmsDH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQ/oEA;ARipEA;AQhpEA;ARkpEA;AQjpEA;ARmpEA;AQlpEA;ARopEA;AQnpEA;ARqpEA;AQppEA;ARspEA;AQ/oEA;ARipEA;AQhpEA;ARkpEA;AQjpEA;ARmpEA;AQlpEA;ARopEA;AQnpEA;ARqpEA;AQppEA;ARspEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQhqEA;AACA;AACA;AACA;ARkqEA;AQ/pEO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAR8B;AR0qEhC;AACA;AACA;AACA;AACA;AQlqEE;ARoqEF;AACA;AACA;AACA;AQlqEE;AACE;AACA;AAEA;ARmqEJ;AQlqEI;AAEA;ARmqEJ;AQlqEI;AAEA;ARmqEJ;AQlqEI;AAEA;ARmqEJ;AQlqEI;AAEA;ARmqEJ;AQlqEI;AAEA;ARmqEJ;AQlqEI;AAEA;ARmqEJ;AQlqEI;AAKA;ARgqEJ;AQ/pEI;AAEA;ARgqEJ;AQ/pEI;AAEA;ARgqEJ;AQ/pEI;AAEA;ARgqEJ;AQ/pEI;AAEA;ARgqEJ;AQ/pEI;AAEA;ARgqEJ;AQ/pEI;AAEA;ARgqEJ;AQ/pEI;AAEA;ARgqEJ;AQ/pEI;AAEA;ARgqEJ;AQ/pEI;AAEA;ARgqEJ;AQ/pEI;AAEA;ARgqEJ;AQ/pEI;AAEA;ARgqEJ;AQ/pEI;AAEA;ARgqEJ;AQ/pEI;AAEA;ARgqEJ;AQ/pEI;AAEA;ARgqEJ;AQ/pEI;AAEA;AACD;AAED;AR+pEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQjqEI;AACE;ARmqEN;AQlqEM;AACE;AAKD;ARgqEP;AQ/pEM;AACA;AACA;AACD;ARiqEL;AQhqEI;AACA;ARkqEJ;AQjqEI;AACE;AACA;ARmqEN;AQlqEM;AACE;AAKD;ARgqEP;AQ/pEM;AACD;AACC;AACA;AACA;AACA;AACA;AACD;AACF;AAED;ARgqEF;AACA;AACA;AACA;AACA;AACA;AQjqE8B;ARmqE9B;AQlqEI;AACE;AACA;AACD;ARoqEL;AQnqEI;AAL0B;AAO1B;AACA;ARqqEJ;AQnqEI;ARqqEJ;AQpqEI;AACE;AACE;AACA;AACA;AACA;AACA;AACE;AACE;AACD;ARsqEX;AQpqEU;ARsqEV;AQpqEU;ARsqEV;AQpqEU;AACE;AAAS;AAAO;AACjB;AACF;AACF;AACF;AACC;AACE;AACE;AACD;ARwqET;AQtqEQ;ARwqER;AQtqEQ;AACE;ARwqEV;AQtqEU;AAGA;AACA;ARsqEV;AACA;AQtqEU;ARwqEV;AQnqEU;AAAS;AAAO;AACjB;AACF;AAGD;AACA;ARqqEN;AACA;AQrqEM;AACE;AACQ;AAAA;AACA;AAAA;AACT;AACC;AACD;AACF;ARyqEL;AQvqEI;AACD;AAED;ARwqEF;AACA;AACA;AACA;AACA;AQzqES;AR2qET;AQ1qEI;AACE;AACA;AACD;AR4qEL;AQ1qEI;AACE;AACE;AACD;AR4qEP;AQ1qEM;AAAyB;AAEvB;AACA;AACD;AR4qEP;AACA;AQ1qEM;AR4qEN;AACA;AQ3qEM;AR6qEN;AACA;AQ5qEM;AAGA;AACA;AACA;AACA;AACA;AR4qEN;AACA;AQ5qEM;AR8qEN;AQ7qEM;AACA;AR+qEN;AQ7qEM;AACE;AAAoC;AAAO;ARirEnD;AQhrEQ;AACD;AACC;AACA;AACA;AAAoC;AAAO;AAC5C;AACF;AACF;AAED;ARmrEF;AACA;AACA;AACA;AACA;AACA;AQnrEI;AACA;ARqrEJ;AQlrEI;AACE;AAIE;ARirER;AQ/qEQ;AACE;AACD;AACC;AAKD;AACF;AACC;AAKD;AACF;ARyqEL;AACA;AQvqEI;AACE;AACD;ARyqEL;AQvqEI;AACD;AAED;ARwqEF;AACA;AACA;AACA;AACA;AQxqEI;AACE;AACD;AR0qEL;AQxqEI;AAEA;AAGE;AAAmB;AAVJ;AAcjB;AAEA;AAEA;AACD;AAED;ARmqEF;AACA;AACA;AACA;AACA;AACA;AACA;AQnqEI;AACA;AACA;AACA;ARqqEJ;AQpqEI;AACE;AACD;ARsqEL;AQrqEI;AARsC;AAUtC;ARuqEJ;AQrqEI;AACD;AAED;ARsqEF;AACA;AACA;AACA;AACA;AACA;AACA;AQtqEI;ARwqEJ;AQvqEI;AACA;AAEA;AACD;AAED;ARuqEF;AACA;AACA;AACA;AACA;AACA;AQvqEI;AACA;AACA;AAEA;AAaA;AACA;AACD;AAED;AR2pEF;AACA;AACA;AACA;AACA;AACA;AACA;AQ5pE+C;AR8pE/C;AQ7pEI;AAIA;AACE;AAGI;AACE;AACA;AACA;AACA;AAGA;AACA;AACA;AATU;AAWb;AACJ;AACF;AAED;ARupEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQxpEqC;AR0pErC;AQzpEI;AADiC;AR6pErC;AQ1pEI;AACE;AAKD;ARwpEL;AQvpEI;AACA;AAEA;AAGE;ARspEN;AQrpEM;ARupEN;AQtpEM;AACD;AAED;AAII;AACD;AAEJ;AAED;ARkpEF;AACA;AACA;AACA;AACA;AACA;AQnpEgB;ARqpEhB;AQrpEgB;AAEZ;AACA;AACA;AAGA;ARopEJ;AQnpEI;AAEA;ARopEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQnpEI;AACE;ARqpEN;AQppEM;AACE;AACA;ARspER;AQrpEQ;AACD;AACF;AACF;AAED;ARspEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQvpEiB;ARypEjB;AQrpEI;AAEA;AACA;ARspEJ;AQrpEI;AACE;AAGE;AAAmB;AAEtB;ARqpEL;AQppEI;AACA;AACA;AACA;AACA;AACA;AACD;AAED;ARqpEF;AACA;AACA;AACA;AACA;AACA;AQrpEI;AACE;AACA;AAFsB;AAIzB;AAED;ARspEF;AACA;AACA;AACA;AACA;AQtpEI;AACA;AACE;AACE;AADkB;AAGrB;ARwpEL;AQvpEI;AACE;AAD+B;AR2pErC;AQxpEI;AAAwB;AAEtB;AACD;AACF;AAED;ARypEF;AACA;AACA;AACA;AACA;AACA;AACA;AQzpEI;AACE;AACD;AR2pEL;AQzpEI;AACE;AACA;AACA;AACA;AACD;AR2pEL;AQ1pEI;AAA0B;AAAc;AACxC;AACD;AAED;AR6pEF;AACA;AACA;AACA;AACA;AACA;AACA;AQ7pEI;AACE;AACD;AR+pEL;AQ7pEI;AACE;AAA0B;AAAc;AACzC;ARiqEL;AQhqEI;AACD;AAED;ARiqEF;AACA;AACA;AACA;AACA;AACA;AQjqEI;AACE;AACA;AACD;AACF;AAED;ARkqEF;AACA;AACA;AACA;AACA;AACA;AQlqEI;AACE;AACA;AACD;AACF;AAED;ARmqEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQpqE+B;ARsqE/B;AQrqEI;AACE;AACA;AACD;ARuqEL;AQrqEI;ARuqEJ;AQtqEI;AACE;AACD;ARwqEL;AQtqEI;AACE;AAAkB;AAA4B;AAC/C;AR0qEL;AQxqEI;AACE;AACA;AACE;AACD;AR0qEP;AQxqEM;AACE;AACD;AACF;AACF;AR0qEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AS91FA;ATg2FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AS91FA;ATg2FA;AACA;AS91FO;AACL;AACA;AACA;AAH0B;ATo2F5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AU93FA;AVg4FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AU93FA;AVg4FA;AACA;AACA;AACA;AACA;AACA;AU93FA;AAEA;AAKA;AAKA;AVu3FA;AUt3FO;AACL;AACA;AACA;AACA;AVw3FF;AUv3FE;AVy3FF;AACA;AUv3FE;AAEA;AACA;AAEA;AVu3FF;AUt3FE;AVw3FF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AUt3FE;AAvBkB;AVg5FpB;AUn3FO;AACL;AADoB;AVu3FtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AW/7FA;AXi8FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AW97FA;AXg8FA;AW97FA;AXg8FA;AACA;AACA;AW97FO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AAPkC;AXw8FpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY19FA;AZ49FA;AY39FA;AZ69FA;AY9+FA;AZg/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY3+FA;AZ6+FA;AACA;AACA;AACA;AACA;AY3+FO;AACL;AACD;AAED;AZ4+FA;AACA;AACA;AACA;AY5+FA;AAEA;AZ6+FA;AACA;AACA;AACA;AY5+FO;AACL;AACD;AAED;AZ6+FA;AACA;AACA;AACA;AACA;AACA;AY7+FO;AACL;AACE;AACD;AZ++FH;AY7+FE;AACD;AAED;AZ8+FA;AACA;AACA;AACA;AACA;AACA;AY9+FA;AACE;AACE;AACA;AACA;AACA;AAEA;AZ++FJ;AY9+FI;AAAmB;AAAO;AAC3B;AACC;AACD;AACF;AAED;AZi/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYj/FO;AACL;AACD;AAED;AZk/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYl/FO;AACL;AACD;AAED;AZm/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYn/FO;AACL;AZq/FF;AYn/FE;AACA;AACD;AZq/FD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AavpGA;AbypGA;AaxpGA;Ab0pGA;AarpGA;AbupGA;AatpGA;AbwpGA;AavpGA;AbypGA;AaxpGA;Ab0pGA;AanrGA;AbqrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AavqGA;AACE;AACA;AACA;AACA;AACA;AACA;AANwB;AAQ1B;AAEA;AbwqGA;AavqGO;AAEP;AbwqGA;AACA;AaxqGO;AAEP;AbyqGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa1qGO;AACL;AACE;AACA;AACD;AACD;Ab4qGF;AACA;Aa5qGE;Ab8qGF;Aa7qGE;AACE;AACA;AACE;AACE;AACA;AACD;AACF;AACD;AAA0B;AAAD;AAC1B;AACC;AACA;AACE;AACE;AACA;AACD;AACF;AAAE;AAAmB;AACvB;AACF;AAED;AbkrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AalrGO;AACL;AACE;AACD;AACF;AAED;AbmrGA;AACA;AACA;AACA;AACA;AACA;AanrGO;AACL;AAAkC;AAAA;AACnC;AAED;AbsrGA;AACA;AACA;AACA;AACA;AACA;AatrGO;AACL;AAA0B;AAAA;AAC3B;AAED;AbyrGA;AACA;AACA;AACA;AACA;AazrGO;AACL;AACE;AACD;AACF;AAED;Ab0rGA;AACA;AACA;AACA;AACA;Aa1rGO;AACL;AACE;AACD;AACF;AAED;Ab2rGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa3rGO;AACL;Ab6rGF;Aa5rGE;AACE;AACD;Ab8rGH;Aa7rGE;AACD;AAED;Ab8rGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa9rGO;AACL;AACA;AACD;AAED;Ab+rGA;AACA;AACA;AACA;AACA;AACA;AACA;Aa/rGO;AACL;AACE;AACD;AbisGH;AahsGE;AACD;AAED;AbisGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AajsGO;AACL;AACA;AACD;AAED;AbksGA;AACA;AACA;AACA;AACA;AACA;AACA;AalsGO;AACL;AbosGF;AansGE;AACE;AACD;AbqsGH;AACA;AansGE;AbqsGF;AapsGE;AACE;AbssGJ;AarsGI;AACE;AACD;AACC;AACD;AACF;AbusGH;AatsGE;AACD;AAED;AbusGA;AACA;AACA;AACA;AACA;AACA;AavsGO;AACL;AACE;AACA;AACD;AbysGH;AaxsGE;Ab0sGF;AaxsGE;Ab0sGF;AazsGE;AACD;AAED;Ab0sGA;AACA;AACA;AACA;AACA;AACA;Aa1sGO;AACL;AACA;AACE;AACD;AAED;Ab2sGF;AACA;Aa3sGE;AACE;AACD;Ab6sGH;Aa5sGE;AACoB;AAAwB;AAG7C;AAED;Ab4sGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa5sGO;AACL;AACE;AACE;AACD;AACF;Ab8sGH;Aa7sGE;AACD;AAED;Ab8sGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa9sGO;AACL;AACE;AACE;AACD;AACF;AbgtGH;Aa/sGE;AACD;AAED;AbgtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AahtGO;AACL;AACE;AACD;AbktGH;AahtGE;AACE;AACD;AACF;AAED;AbitGA;AACA;AACA;AACA;AACA;AACA;AACA;AajtGO;AACL;AbmtGF;AaltGE;AAKE;AACE;AACD;AACF;AbgtGH;Aa/sGE;AACD;AAED;AbgtGA;AACA;AACA;AACA;AACA;AACA;AACA;AahtGO;AACL;AACA;AACA;AACE;AACD;AACF;AAED;AbitGA;AACA;AACA;AACA;AACA;AACA;AACA;AajtGO;AACL;AAKE;AACE;AACD;AACF;Ab+sGH;Aa9sGE;AACD;AAED;Ab+sGA;AACA;AACA;AACA;AACA;AACA;AACA;Aa/sGO;AACL;AbitGF;AahtGE;AAKE;AACE;AACD;AACF;Ab8sGH;Aa7sGE;AACD;AAED;Ab8sGA;AACA;AACA;AACA;AACA;AACA;AACA;Aa9sGO;AACL;AAKE;AACE;AACD;AACF;Ab4sGH;Aa3sGE;AACD;AAED;Ab4sGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa5sGO;AACL;Ab8sGF;Aa7sGE;AACE;AACE;AACD;AACF;Ab+sGH;Aa9sGE;AACD;AAED;Ab+sGA;AACA;AACA;AACA;AACA;AACA;AACA;Aa/sGO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AbmtGA;AACA;AACA;AACA;AACA;AACA;AACA;AantGO;AACL;AACA;AACE;AACD;AACF;AAED;AbotGA;AACA;AACA;AACA;AACA;AACA;AACA;AaptGO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AbwtGA;AACA;AACA;AACA;AACA;AACA;AACA;AaxtGO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;Ab4tGA;AACA;AACA;AACA;AACA;AACA;AACA;Aa5tGO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AbguGA;AACA;AACA;AACA;AACA;AACA;AACA;AahuGO;AACL;AbkuGF;Aa5tGE;AACE;AACD;Ab8tGH;Aa7tGE;AACD;AAED;Ab8tGA;AACA;AACA;AACA;AACA;AACA;AACA;Aa9tGO;AACL;AACA;AAAe;AAAO;AACvB;AAED;AbiuGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AajuGA;AACE;AACA;AACA;AACA;AAAsB;AAAO;AAC7B;AACA;AACD;AAED;AbouGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AapuGO;AACL;AACE;AAAY;AAAO;AACpB;AbwuGH;AACA;AatuGE;AACA;AACD;AAED;AbuuGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AavuGO;AACL;AACE;AAAY;AAAO;AAGpB;AbyuGH;AACA;AavuGE;AACD;AAED;AbwuGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AaxuGO;AAKL;AAA6D;AAAA;AbwuG/D;AazuGE;AAGA;AACA;AbyuGF;AaxuGE;AACE;Ab0uGJ;AazuGI;AACE;Ab2uGN;Aa1uGM;AACD;AACF;Ab4uGH;Aa3uGE;AACD;AAED;Ab4uGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa5uGO;AACL;Ab8uGF;Aa7uGE;AACE;AACE;AACD;AACF;Ab+uGH;Aa3uGE;AACD;AAED;Ab4uGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa5uGO;AACL;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAED;Ab6uGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa7uGO;AAAqC;AbgvG5C;Aa9uGE;AACE;AACD;AACF;AAED;Ab+uGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa/uGO;AACL;AACA;AACA;AACA;AbivGF;AahvGE;AACE;AACD;AACC;AACD;AbkvGH;AACA;AahvGE;AACE;AACD;AbkvGH;AajvGE;AACD;AAED;AbkvGA;AACA;AACA;AACA;AACA;AACA;AalvGO;AACL;AAKD;AAED;Ab+uGA;AACA;AACA;AACA;AACA;AACA;Aa/uGO;AACL;AAID;AAED;Ab6uGA;AACA;AACA;AACA;AACA;AACA;Aa7uGO;AACL;AAIA;AACD;AAED;Ab2uGA;AACA;AACA;AACA;AACA;AACA;Aa3uGO;AACL;AACE;AACD;Ab6uGH;Aa5uGE;AACD;AAED;Ab6uGA;AACA;AACA;AACA;AACA;Aa7uGA;AACE;AACD;AAED;Ab8uGA;AACA;AACA;AACA;AACA;AACA;Aa9uGO;AACL;AACE;AAAQ;AAAO;AAChB;AAEA;AACF;AAED;AbgvGA;AACA;AACA;AACA;AACA;AACA;AahvGO;AACL;AACD;AAED;AbivGA;AACA;AACA;AACA;AACA;AACA;AajvGO;AACL;AAEA;AbkvGF;AajvGE;AAGE;AAEH;AAED;Ab+uGA;AACA;AACA;AACA;AACA;AACA;AACA;Aa/uGO;AACL;AbivGF;AahvGE;AACE;AACA;AACD;AAED;AbivGF;AACA;AajvGE;AACE;AACA;AACA;AACD;AbmvGH;AajvGE;AACD;AAED;AbkvGA;AACA;AACA;AACA;AACA;AACA;AalvGO;AACL;AbovGF;Aa7uGE;AACE;AACD;AACF;AAED;Ab8uGA;AACA;AACA;AACA;AACA;AACA;Aa9uGO;AACL;AbgvGF;AazuGE;AACE;AACA;AACD;Ab2uGH;AatvGwC;AbwvGxC;Aa3uGE;AACE;AACD;Ab6uGH;Aa5uGE;Ab8uGF;AavuGE;AACE;AACD;AACF;AAED;AbwuGA;AACA;AACA;AACA;AACA;AACA;AACA;AaxuGO;AAAsC;Ab2uG7C;AazuGE;AACE;AACD;Ab2uGH;Aa/uG6C;AbivG7C;Aa3uGE;AACE;AACD;Ab6uGH;Aa5uGE;AAKA;AACD;AAED;AbyuGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AazuGO;AACL;AACD;AAED;Ab0uGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa1uGO;AACL;AACE;AACD;Ab4uGH;Aa1uGE;AACA;Ab4uGF;AaxuGE;AACE;AACD;Ab0uGH;AACA;AaxuGE;AACD;AAED;AbyuGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AazuGO;AACL;AACA;Ab2uGF;AazuGE;AACE;AACE;AACD;AACC;AACD;AACF;Ab2uGH;AazuGE;AACD;AAED;Ab0uGA;AACA;AACA;AACA;AACA;Aa1uGO;AAAwC;AAE7C;AAAwB;AAAO;AAC/B;AAAsC;AAAO;AAC7C;AACD;AbgvGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcxoIA;Ad0oIA;AczoIA;Ad2oIA;AcjoIA;AdmoIA;AcloIA;AdooIA;AACA;AACA;AACA;AACA;AcpqIA;AdsqIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ActpIA;AdwpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ActpIO;AACL;AACS;AAAA;AAEV;AAED;AdupIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcvpIO;AACL;AdypIF;AcxpIE;AACE;AAAO;AAAkC;AAAzC;AACD;Ad6pIH;Ac5pIE;AACD;AAED;Ad6pIA;AACA;AACA;AACA;AACA;AACA;Ac7pIA;AACE;AACA;AACE;AACD;Ad+pIH;Ac9pIE;AACD;AAED;Ad+pIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac/pIO;AACL;AAKc;AAAA;AACf;AAED;Ad6pIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac7pIO;AAML;Ad0pIF;AczpIE;AACE;AAAO;AAAkC;AAAzC;AACD;Ad8pIH;Ac7pIE;AACA;AAEQ;AAAA;AAIJ;AACA;AACA;AACE;AACD;AACC;AACD;Ad4pIP;Ac3pIM;AACD;AACJ;AAED;Ad4pIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac5pIO;AAKL;Ad0pIF;AczpIE;AACE;AAAO;AAAkC;AAAzC;AACD;Ad8pIH;Ac7pIE;AACA;Ad+pIF;Ac7pIE;AACE;AACD;AACC;AACA;AACD;AACF;AAED;Ad8pIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac9pIA;AACE;AAAO;AAAwB;AAA/B;AAUD;AAED;AdypIA;AACA;AACA;AACA;AACA;AACA;AczpIO;AACL;AACA;AACE;AACD;Ad2pIH;Ac1pIE;AAEA;Ad2pIF;Ac1pIE;Ad4pIF;AczpIE;AACE;AACA;AAGA;AACD;AdypIH;AcxpIE;AACD;AAED;AdypIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AczpIO;AACL;AACE;AACD;AACF;AAED;Ad0pIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac1pIA;AACE;AACD;AAED;Ad2pIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac3pIA;AACE;Ad6pIF;AACA;AACA;AACA;AACA;AACA;Ac1pIE;AACA;AACA;AACE;AACD;Ad4pIH;Ac1pIE;AACA;AAAO;AAAkC;AAAzC;AAID;AAED;Ad2pIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac3pIA;AACE;AAEQ;AAAA;AAEJ;AACA;AACA;AACE;AACD;AACC;AACD;Ad4pIP;Ac3pIM;AACD;AACJ;Ad6pID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aen9IA;Afq9IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aen9IA;Afq9IA;AACA;AACA;AACA;Aen9IA;AAEA;Afo9IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aen9IO;AAML;AACA;AACA;Afg9IF;AACA;AACA;Ae/8IE;Afi9IF;Ae/8IE;AACE;AACE;AACD;AACC;AACA;Afi9IN;Aeh9IM;AACD;AACF;Afk9IH;Aej9IE;AACA;Afm9IF;Ael9IE;AACE;AACD;Afo9IH;Aen9IE;AAKA;AACE;AACE;AAKD;Af68IL;AACA;Ae58II;AACA;AACA;AACD;AACF;AAED;Af68IA;AACA;AACA;AACA;AACA;AACA;AACA;Ae78IO;AACL;AACA;AACE;AACD;Af+8IH;Ae78IE;Af+8IF;Ae98IE;AACE;AACA;AACE;AACE;AACD;Afg9IP;Aen9IoB;AAKhB;AACA;AACD;AAEA;Afg9IH;Ae/8IE;AACD;AAED;Afg9IA;AACA;AACA;AACA;Aeh9IO;AACL;AACD;Afk9ID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBrkJA;AhBukJA;AgBtkJA;AhBwkJA;AgBvkJA;AhBykJA;AgB3lJA;AhB6lJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBvlJA;AACA;AAEA;AhBwlJA;AgBvlJO;AAEP;AhBwlJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBzlJO;AACL;AAAkB;AAAiC;AAAC;AAAD;AACnD;AAEA;AhB8lJF;AgB7lJE;AACE;AACD;AACC;AACA;AACA;AAMA;AACD;AACF;AAED;AhBylJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBzlJO;AACL;AAMD;AAED;AhBqlJA;AACA;AACA;AACA;AACA;AACA;AgBrlJO;AACL;AAAO;AAA6C;AAApD;AACD;AAED;AhBylJA;AACA;AACA;AACA;AACA;AACA;AgBzlJO;AACL;AAAO;AAA6C;AAApD;AACD;AAED;AhB6lJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB7lJO;AACL;AACA;AAII;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAGH;AACD;AAED;AhBylJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBzlJO;AAML;AACA;AACE;AACD;AACD;AhBslJF;AgBrlJE;AACE;AACD;AhBulJH;AgBtlJE;AACD;AAED;AhBulJA;AACA;AACA;AACA;AACA;AACA;AgBvlJO;AACL;AAKE;AACC;AAEJ;AAED;AhBmlJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBnlJO;AACL;AACA;AhBqlJF;AgBplJE;AACE;AACD;AhBslJH;AgBrlJE;AhBulJF;AgBtlJE;AAIE;AACD;AhBqlJH;AgBplJE;AACE;AACA;AACA;AACE;AACA;AACA;AACE;AADgE;AAGnE;AACC;AACD;AhBslJL;AACA;AgBrlJI;AACE;AACD;AhBulJL;AgBtlJI;AAEA;AACA;AhBulJJ;AgBtlJI;AACE;AAEO;AAAA;AhBwlJb;AgBtlJM;AACE;AACD;AACF;AhBwlJL;AgBvlJI;AACD;AAED;AAEI;AACE;AACD;AhBulJP;AgBtlJM;AACD;AAEC;AACE;AACD;AhBulJP;AgBtlJM;AACD;AAEJ;AAED;AhBslJA;AACA;AACA;AACA;AACA;AACA;AgBtlJA;AACE;AACA;AACA;AACA;AACE;AAED;AAGD;AhBqlJF;AACA;AgBrlJE;AhBulJF;AgBtlJE;AACE;AACD;AhBwlJH;AgBvlJE;AACD;AAED;AhBwlJA;AACA;AACA;AACA;AACA;AACA;AgBxlJA;AACE;AACD;AAED;AhBylJA;AACA;AACA;AACA;AACA;AACA;AgBzlJO;AACL;AACD;AhB2lJD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBl2JA;AjBo2JA;AiBn2JA;AjBq2JA;AiBp2JA;AjBs2JA;AiBr2JA;AjBu2JA;AiBj4JA;AjBm4JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBj4JA;AjBm4JA;AACA;AACA;AACA;AACA;AACA;AiB53JA;AACA;AAEA;AjB63JA;AiB53JA;AAEA;AjB63JA;AiB53JA;AAEA;AjB63JA;AACA;AACA;AACA;AACA;AACA;AiB53JO;AAEP;AjB63JA;AACA;AACA;AACA;AACA;AACA;AACA;AiB93JO;AACL;AACD;AAED;AjB+3JA;AACA;AACA;AACA;AACA;AACA;AiB/3JO;AACL;AAGD;AAED;AjB83JA;AACA;AACA;AACA;AACA;AACA;AACA;AiB93JO;AACL;AACA;AACD;AAED;AjB+3JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiB/3JO;AAML;AAAwC;AAAO;AAC/C;AjB83JF;AiB73JE;AACE;AACA;AjB+3JJ;AiB73JI;AACE;AACA;AACA;AjB+3JN;AiB73JM;AACE;AAOD;AACF;AACF;AjBy3JH;AiBx3JE;AACD;AAED;AjBy3JA;AACA;AACA;AACA;AACA;AACA;AACA;AiBz3JO;AACL;AACE;AACD;AjB23JH;AiB13JE;AACA;AjB43JF;AiBz3JE;AACE;AACE;AjB23JN;AiB13JM;AACE;AACD;AACF;AACF;AjB43JH;AACA;AiB33JE;AAKE;AACA;AjBy3JJ;AiBt3JI;AACE;AjBw3JN;AiBv3JM;AACE;AACE;AACD;AACF;AACF;AACF;AjBy3JH;AiBv3JE;AjBy3JF;AiBv3JE;AAKE;AACA;AACA;AjBq3JJ;AiBp3JI;AACE;AjBs3JN;AiBr3JM;AACE;AACD;AjBu3JP;AiBt3JM;AACE;AACD;AACF;AACF;AjBw3JH;AiBv3JE;AACD;AAED;AjBw3JA;AACA;AACA;AACA;AACA;AACA;AACA;AiBx3JO;AACL;AACD;AAED;AjBy3JA;AACA;AACA;AACA;AACA;AACA;AiBz3JA;AACE;AjB23JF;AiB13JE;AACE;AACE;AACD;AACF;AACC;AACD;AjB43JH;AiB33JE;AAEA;AjB43JF;AiB33JE;AACE;AACE;AACD;AjB63JL;AiB53JI;AACE;AACD;AACC;AACD;AACF;AjB83JH;AiB73JE;AACD;AAED;AjB83JA;AACA;AACA;AACA;AACA;AACA;AiB93JA;AACE;AjBg4JF;AiB/3JE;AACE;AACD;AjBi4JH;AiBh4JE;AACE;AACE;AACD;AACF;AACC;AACD;AACF;AAED;AjBi4JA;AACA;AACA;AACA;AACA;AACA;AACA;AiBj4JO;AACL;AACD;AAED;AjBk4JA;AACA;AACA;AACA;AACA;AACA;AiBl4JO;AACL;AACA;AACD;AAED;AjBm4JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBn4JA;AACE;AACA;AACD;AAED;AjBo4JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBp4JO;AACL;AADsC;AAIxC;AjBq4JA;AACA;AACA;AACA;AACA;AACA;AACA;AiBt4JA;AACE;AACA;AACD;AAED;AjBu4JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBv4JO;AACL;AACA;AjBy4JF;AiBx4JE;AACE;AACA;AACA;AACE;AACD;AjB04JL;AiBz4JI;AACE;AAEA;AACD;AjB04JL;AiBx4JI;AAIE;AACA;AACD;AAGD;AACA;AjBq4JJ;AACA;AiBr4JI;AAEsB;AAAO;AAC3B;AAEA;AAGA;AAED;AACF;AjBm4JH;AiBl4JE;AACD;AAED;AjBm4JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBn4JO;AACL;AAGD;AAED;AjBk4JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBl4JO;AACL;AACA;AACA;AACD;AjBo4JD;AACA;AACA;AACA;AACA;AACA;AACA;AkB5wKA;AlB8wKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB5wKA;AlB8wKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB5wKO;AACL;AACD;AlB8wKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBlyKA;AnBoyKA;AmBnyKA;AnBqyKA;AmB3zKA;AnB6zKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB3zKA;AnB6zKA;AACA;AACA;AmBvzKA;AACA;AnByzKA;AmBvzKA;AnByzKA;AACA;AACA;AmBvzKA;AAEA;AnBwzKA;AACA;AACA;AACA;AmBvzKA;AAEA;AnBwzKA;AACA;AACA;AACA;AmBvzKA;AAEA;AnBwzKA;AACA;AACA;AACA;AmBvzKA;AAEA;AnBwzKA;AACA;AACA;AACA;AACA;AmBvzKO;AACL;AnByzKF;AmBxzKE;AACE;AACE;AACD;AnB0zKL;AmBzzKI;AACA;AACD;AnB2zKH;AmB1zKE;AAAO;AAA4B;AAAnC;AACD;AAED;AnB8zKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB9zKO;AACL;AACA;AACE;AACD;AnBg0KH;AACA;AmB/zKE;AACA;AnBi0KF;AmBh0KE;AACE;AnBk0KJ;AmBj0KI;AAME;AACA;AACD;AnB8zKL;AmB7zKI;AACA;AACD;AnB+zKH;AmB9zKE;AACD;AAED;AnB+zKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB/zKO;AACL;AAAO;AAA4B;AAAW;AAAuB;AAArE;AACD;AAED;AnBq0KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBr0KO;AACL;AACE;AACD;AACC;AACE;AACD;AnBu0KL;AmBt0KI;AACD;AACF;AAED;AnBu0KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBv0KO;AACL;AACA;AnBy0KF;AmBx0KE;AACE;AACD;AnB00KH;AmBz0KE;AnB20KF;AmB10KE;AACE;AACD;AnB40KH;AmB30KE;AACE;AACD;AACC;AACD;AACF;AAED;AnB40KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB50KO;AAAqC;AAAX;AAAW;AnBi1K5C;AmBh1KE;AACE;AACD;AnBk1KH;AmBj1KE;AACE;AACD;AACD;AnBm1KF;AACA;AmBn1KE;AAAgB;AAAG;AAAG;AAAP;AnBy1KjB;AmBx1KE;AAAyB;AAAA;AAAA;AAAA;AnB81K3B;AACA;AmB51KI;AACE;AACE;AACD;AACC;AACE;AACD;AnB81KT;AmB71KQ;AACE;AAAY;AAAS;AAAS;AAAnB;AACZ;AnBm2KT;AmBl2KQ;AACD;AACC;AAA0B;AAAwB;AAClD;AAA0B;AAAwB;AnBw2K1D;AmBv2KQ;AACE;AACD;AnBy2KT;AmBx2KQ;AACE;AACA;AAAY;AAAS;AAAS;AAAnB;AACZ;AnB82KT;AmB72KQ;AACD;AACF;AnB+2KL;AACA;AmB92KI;AACE;AACD;AACF;AnBg3KH;AmB/2KE;AACD;AAED;AnBg3KA;AACA;AACA;AACA;AACA;AACA;AmBh3KA;AACE;AACE;AACD;AnBk3KH;AmBj3KE;AACE;AAAwB;AAG3B;AAED;AnBi3KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBj3KO;AACL;AAAO;AAA4B;AAAnC;AACD;AAED;AnBq3KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBr3KO;AACL;AAAO;AAA4C;AAAnD;AACD;AAED;AnBy3KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBz3KO;AACL;AACD;AnB23KD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBpoLA;ApBsoLA;AoBroLA;ApBuoLA;AoBtoLA;ApBwoLA;AoBvoLA;ApByoLA;AoBxoLA;ApB0oLA;AoBzoLA;ApB2oLA;AoBhqLA;ApBkqLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBxpLA;AAEA;ApBypLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBzpLO;AAEP;ApB0pLA;AACA;AACA;AACA;AACA;AACA;AoB1pLO;AAEP;ApB2pLA;AACA;AACA;AACA;AACA;AACA;AoB5pLO;AACL;AACD;AAED;ApB6pLA;AACA;AACA;AACA;AACA;AoB7pLO;AACL;AACD;AAED;ApB8pLA;AACA;AACA;AACA;AACA;AoB9pLO;AACL;AACA;AACA;AACA;AACA;AALsB;AAQxB;ApB+pLA;AACA;AACA;AACA;AACA;AACA;AACA;AoBhqLO;AACL;AACD;AAED;ApBiqLA;AACA;AACA;AACA;AACA;AoBjqLA;AAEA;ApBkqLA;AACA;AACA;AoBjqLO;AACL;AACD;AAED;ApBkqLA;AACA;AACA;AACA;AACA;AACA;AACA;AoBlqLA;AAAsB;AAAA;AAEtB;ApBqqLA;AACA;AACA;AACA;AACA;AACA;AACA;AoBrqLA;AAA2B;AAEvB;AAAA;AAFuB;AAM3B;ApBsqLA;AACA;AACA;AACA;AACA;AACA;AoBtqLA;AAAuC;AAAA;AAGvC;ApBwqLA;AACA;AACA;AACA;AACA;AoBxqLA;AAAwC;AAAA;AAGxC;ApB0qLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoB5qLE;ApB8qLF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoB5qLE;AAA6C;ApB+qL/C;AoB/qL+C;AAAjB;AAAiB;ApBmrL/C;AoBlrLI;ApBorLJ;AACA;AACA;AACA;AoBlrLI;AAEA;ApBmrLJ;AoBlrLI;AAEA;ApBmrLJ;AoBlrLI;AAEA;ApBmrLJ;AoBlrLI;AAEA;ApBmrLJ;AoBlrLI;AAEA;AACE;AAEgB;AAAA;AAEZ;AACE;AAAiB;AAA4B;AAC9C;AACF;AACJ;AACF;AAED;ApBmrLF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBrrLI;AACD;AAED;ApBsrLF;AACA;AACA;AACA;AACA;AACA;AoBtrLI;AACA;AACE;AACD;ApBwrLL;AACA;AoBtrLI;AACE;AACD;ApBwrLL;AACA;AoBtrLI;AACE;AACD;ApBwrLL;AACA;AoBtrLI;AACE;AACD;ApBwrLL;AACA;AoBtrLI;AACD;AAED;ApBurLF;AACA;AACA;AACA;AACA;AACA;AACA;AoBvrLI;AACE;ApByrLN;AoBxrLM;AACE;AACD;AACC;AACD;AACC;AACD;ApB0rLP;AoBzrLM;ApB2rLN;AoBzrLM;ApB2rLN;AoB1rLM;AACE;AACA;AACD;AACC;AACD;ApB4rLP;AoB3rLM;AACD;AACF;AAED;ApB4rLF;AACA;AACA;AACA;AACA;AACA;AoB5rLI;AACD;AAED;ApB6rLF;AACA;AACA;AACA;AACA;AACA;AACA;AoB7rLI;AACE;AACD;AACF;AAED;ApB8rLF;AACA;AACA;AACA;AACA;AACA;AACA;AoB9rLI;AACE;AACD;AACF;AAED;ApB+rLF;AACA;AACA;AACA;AACA;AACA;AACA;AoB/rLI;AACE;AACD;AACF;AAED;ApBgsLF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBhsLI;AACE;AACD;AACC;AAIA;AACA;AACD;AACF;AAED;ApB8rLF;AACA;AACA;AACA;AACA;AACA;AACA;AoB9rLI;ApBgsLJ;AoB/rLI;AACE;ApBisLN;AoB/rLM;AACD;AACF;AAED;ApBgsLF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBhsLI;ApBksLJ;AoBjsLI;AACE;ApBmsLN;AoBjsLM;AACD;AACF;AAED;ApBksLF;AACA;AACA;AACA;AACA;AACA;AACA;AoBlsLI;AACA;AACA;AACD;AAED;ApBmsLF;AACA;AACA;AACA;AACA;AACA;AACA;AoBnsLI;AACA;AACA;AACA;AACD;AAED;ApBosLF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBpsLI;ApBssLJ;AoBrsLI;AACE;AAG4B;AAAuB;AAGpD;ApBosLL;AoBnsLI;AACE;AACA;AACA;AACA;AACA;AACA;AACA;ApBqsLN;AoBpsLM;AACE;AACA;ApBssLR;AoBrsLQ;AACE;AACD;ApBusLT;AoBtsLQ;AACA;AACA;AACD;ApBwsLP;AoBvsLM;AACA;AACA;AACA;AACA;ApBysLN;AoBvsLM;ApBysLN;AoBxsLM;AACD;ApB0sLL;AoBzsLI;AACD;AAED;ApB0sLF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoB1sLI;AACA;AAMA;AAAO;AAAyB;AAAhC;AACD;AAED;ApBysLF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBzsLI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;ApBwsLF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBxsLI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;ApBusLF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBvsLI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;ApBssLF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBtsLI;AAMA;AAAO;AAAwB;AAA/B;AACD;AAED;ApBqsLF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBrsLI;AACE;AACD;ApBusLL;AoBtsLI;AACD;AAED;ApBusLF;AACA;AACA;AACA;AACA;AACA;AoBvsLI;ApBysLJ;AoBxsLI;AACE;AACE;AACD;AACC;AACD;AACF;AACC;AACD;AACF;AAED;ApBysLF;AACA;AACA;AACA;AACA;AACA;AACA;AoBzsLI;AACE;AAA+B;AAAuB;AACvD;ApB6sLL;AoB5sLI;AACD;AAED;ApB6sLF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoB7sLI;AACA;AAEA;AACA;AACA;ApB8sLJ;AoB7sLI;AACE;AACD;ApB+sLL;AoB9sLI;AACE;AACD;ApBgtLL;AoB/sLI;AACD;AAED;ApBgtLF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBhtLI;AACE;AACD;AACC;AACD;AACF;ApBktLH;AACA;AACA;AoBjtLA;ApBmtLA;AACA;AACA;AACA;AACA;AACA;AACA;AoBrtLA;AAAiC;AAC/B;AAAuB;AADQ;AAAA;AAGjC;ApB0tLA;AACA;AACA;AACA;AACA;AoB1tLA;AACE;AACA;AACE;AACD;ApB4tLH;AoB3tLE;AACD;AAED;ApB4tLA;AACA;AACA;AACA;AACA;AoB5tLA;AACE;AACE;AACD;AACF;AAED;ApB6tLA;AACA;AACA;AACA;AACA;AACA;AoB7tLO;AACL;ApB+tLF;AoB9tLE;AACE;AACD;ApBguLH;AoBpuLiD;AAAA;AAO/C;ApBiuLF;AoB/tLE;AACE;AACD;ApBiuLH;AACA;AoBhuLE;AACA;AACD;AAED;ApBiuLA;AACA;AACA;AACA;AACA;AACA;AoBjuLO;AACL;AACA;ApBmuLF;AoBluLE;AACE;ApBouLJ;AoBnuLI;AACE;AACD;AACC;AACE;AACD;ApBquLP;AoBpuLM;AACD;AACF;ApBsuLH;AoBpuLE;AACE;AACD;AACC;AACD;ApBsuLH;AoBruLE;AACD;AAED;ApBsuLA;AACA;AACA;AACA;AACA;AACA;AoBtuLO;AACL;AACA;AACE;AACA;ApBwuLJ;AoBvuLI;AACD;AACF;AAED;ApBwuLA;AACA;AACA;AACA;AACA;AACA;AoBxuLA;AACE;AACA;AACA;AAHiC;AAMnC;AAEA;ApBwuLA;AACA;AACA;AACA;AACA;AACA;AoBvuLA;AAEA;ApBwuLA;AACA;AACA;AoBvuLO;AACL;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;ApBwuLF;AoBvuLE;AACA;AACD;AAED;ApBwuLA;AACA;AACA;AACA;AoBxuLO;AACL;AACD;AAED;ApByuLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBzuLO;AACL;AACE;AACD;ApB2uLH;AoB1uLE;AACE;AACD;AACC;AACE;AACD;ApB4uLL;AoB3uLI;AACD;AACF;AAED;ApB4uLA;AACA;AACA;AACA;AACA;AACA;AoB5uLA;AACE;AACE;AACD;ApB8uLH;AoB7uLE;AAGI;ApB6uLN;AoB5uLM;AACE;AACD;ApB8uLP;AoB7uLM;AACD;AAGJ;AAED;ApB4uLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoB5uLO;AACL;AACE;AACD;ApB8uLH;AoB7uLE;AACE;AACD;ApB+uLH;AoB9uLE;AACE;ApBgvLJ;AoB/uLI;AACE;AACD;ApBivLL;AoBhvLI;AACE;AACD;ApBkvLL;AoBjvLI;AACD;AACF;AAED;ApBkvLA;AACA;AACA;AACA;AACA;AACA;AoBlvLO;AACL;AACE;AACD;ApBovLH;AoBnvLE;AACD;AAED;ApBovLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBpvLO;AAaL;AACE;AACD;ApB0uLH;AoBzuLE;AAAa;AAAc;AAa5B;AAED;ApBguLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBhuLO;AAaL;AAAc;AAAc;AAa7B;ApB4sLD;AACA;AACA;AACA;AACA;AACA;AACA;AqB1qNA;ArB4qNA;AqB5rNA;ArB8rNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB1rNA;ArB4rNA;AACA;AACA;AACA;AACA;AqB1rNO;AACL;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVK;AAYR;ArB4rND;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB1tNA;AtB4tNA;AsB3tNA;AtB6tNA;AsB9uNA;AtBgvNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB3uNA;AtB6uNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB3uNO;AAEP;AtB4uNA;AACA;AACA;AACA;AACA;AACA;AsB5uNA;AAEA;AtB6uNA;AACA;AACA;AACA;AACA;AsB5uNO;AACL;AtB8uNF;AsB7uNE;AACE;AACD;AtB+uNH;AsB9uNE;AACD;AAED;AtB+uNA;AACA;AACA;AACA;AACA;AACA;AsB/uNA;AACE;AACA;AAGA;AACA;AACA;AtB+uNF;AsB9uNE;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEE;AACA;AAEF;AAEA;AtB2uNF;AsBzuNE;AACE;AACD;AAGD;AACA;AACA;AtByuNF;AACA;AsBzuNE;AACE;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BK;AA8BR;AAED;AtBsuNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBtuNA;AACE;AACA;AACA;AACE;AACD;AtBwuNH;AsBtuNE;AACE;AACD;AAGD;AACA;AACA;AACA;AtBsuNF;AACA;AsBtuNE;AACD;AAED;AtBuuNA;AACA;AACA;AACA;AACA;AACA;AACA;AsBvuNO;AACL;AACD;AAED;AtBwuNA;AACA;AsBxuNO;AACL;AACD;AtB0uND;AACA;AACA;AACA;AACA;AACA;AACA;AuBv5NA;AvBy5NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBv5NA;AvBy5NA;AACA;AACA;AACA;AACA;AACA;AACA;AuBz5NE;AvB25NF;AACA;AuBz5NE;AACE;AACA;AACD;AAED;AvB05NF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB75Ne;AvB+5Nf;AuB95NI;AACE;AACD;AvBg6NL;AuB/5NI;AACA;AACE;AACD;AACF;AAED;AvBg6NF;AACA;AACA;AACA;AACA;AACA;AuBh6NI;AACE;AACD;AvBk6NL;AuBj6NI;AvBm6NJ;AuBl6NI;AACE;AACD;AACF;AAED;AvBm6NF;AACA;AACA;AACA;AACA;AuBn6NI;AACE;AACD;AvBq6NL;AuBp6NI;AACD;AAED;AvBq6NF;AACA;AACA;AACA;AACA;AACA;AuBr6NI;AACE;AACD;AvBu6NL;AuBt6NI;AvBw6NJ;AuBv6NI;AACE;AACA;AACD;AACF;AAED;AvBw6NF;AACA;AACA;AACA;AACA;AACA;AuBx6NI;AACE;AACD;AvB06NL;AuBz6NI;AACD;AvB26NH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBrhOA;AxBuhOA;AwBthOA;AxBwhOA;AwBvhOA;AxByhOA;AwBxhOA;AxB0hOA;AwBnjOA;AxBqjOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBnjOA;AxBqjOA;AACA;AACA;AACA;AACA;AwB9iOA;AxBgjOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwB9iOA;AAEA;AxB+iOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBpjOE;AxBsjOF;AACA;AACA;AACA;AACA;AACA;AACA;AwBrjOA;AxBujOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwB7jOE;AxB+jOF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwB9jOA;AxBgkOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBlkOO;AACL;AACA;AACA;AACA;AxBokOF;AwBlkOE;AACA;AxBokOF;AwBnkOE;AACE;AACE;AACD;AxBqkOL;AACA;AwBpkOI;AACD;AACC;AACA;AACD;AACF;AAED;AxBqkOA;AACA;AACA;AACA;AACA;AACA;AACA;AwBrkOO;AACL;AACA;AAKA;AAKA;AxB+jOF;AwB9jOE;AACE;AACA;AAIE;AAAA;AACA;AAAe;AAElB;AACC;AAAgD;AAAA;AAChD;AACD;AACF;AAED;AxB+jOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwB/jOO;AACL;AACA;AxBikOF;AwBhkOE;AACE;AACD;AACF;AAED;AxBikOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBjkOO;AAML;AACA;AACA;AxB8jOF;AwB7jOE;AACE;AACD;AACF;AAED;AxB8jOA;AACA;AACA;AACA;AACA;AACA;AACA;AwB9jOO;AACL;AACA;AACA;AACD;AAED;AxB+jOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwB/jOO;AACL;AACA;AACD;AAED;AxBgkOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBhkOO;AACL;AACD;AAED;AxBikOA;AACA;AACA;AACA;AACA;AACA;AACA;AwBjkOO;AACL;AxBmkOF;AwBlkOE;AACE;AACD;AACC;AACD;AACF;AAED;AxBmkOA;AACA;AACA;AACA;AACA;AACA;AACA;AwBnkOO;AACL;AACD;AAED;AxBokOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBpkOO;AACL;AACA;AACA;AACD;AAED;AxBqkOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBrkOA;AACE;AACA;AxBukOF;AwBtkOE;AACE;AACD;AACC;AACD;AACF;AAED;AxBukOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBvkOO;AACL;AACD;AAED;AxBwkOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBxkOO;AACL;AAID;AAED;AxBskOA;AACA;AACA;AACA;AACA;AACA;AwBtkOO;AACL;AACA;AACD;AAED;AxBukOA;AACA;AACA;AACA;AACA;AACA;AwBvkOO;AACL;AACD;AAED;AxBwkOA;AACA;AACA;AACA;AACA;AACA;AACA;AwBxkOO;AACL;AACD;AAED;AxBykOA;AACA;AACA;AACA;AACA;AACA;AACA;AwBzkOO;AACL;AACA;AxB2kOF;AwB1kOE;AACE;AACE;AAAO;AAAmC;AAA1C;AACD;AAEA;AACF;AxB8kOH;AwB7kOE;AACD;AAED;AxB8kOA;AACA;AACA;AACA;AACA;AwB9kOO;AACL;AACE;AACE;AAAyB;AAG3B;AAAuC;AAAsB;AAC9D;AxBilOH;AwBhlOE;AAAO;AAA8C;AAArD;AACD;AAED;AxBolOA;AACA;AACA;AACA;AACA;AwBplOA;AACE;AACA;AACD;AAED;AxBqlOA;AACA;AACA;AACA;AACA;AACA;AACA;AwBrlOA;AACE;AAAO;AAAqD;AAA5D;AAID;AAED;AxBslOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBtlOA;AACE;AAIA;AACA;AxBqlOF;AwBplOE;AACE;AACA;AACA;AACA;AACA;AACA;AAEA;AxBqlOJ;AwBplOI;AACE;AACD;AACF;AxBslOH;AwBrlOE;AACD;AAED;AxBslOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBtlOA;AACE;AACA;AxBwlOF;AwBtlOE;AACE;AACE;AACA;AACA;AACA;AACA;AACA;AANiB;AAQpB;AxBwlOH;AwBtlOE;AACE;AACA;AACD;AxBwlOH;AwBtlOE;AACA;AAGA;AxBslOF;AwBrlOE;AACE;AACA;AACD;AACF;AAED;AxBslOA;AACA;AACA;AACA;AACA;AACA;AwBtlOA;AACE;AxBwlOF;AwBvlOE;AACE;AACD;AAGD;AACA;AxBulOF;AACA;AwBvlOE;AACA;AACA;AAAO;AAAkC;AAAzC;AACD;AAED;AxB2lOA;AACA;AACA;AACA;AACA;AACA;AwB3lOA;AACE;AACA;AxB6lOF;AwB5lOE;AACE;AACE;AACD;AxB8lOL;AwB7lOI;AACD;AxB+lOH;AwB7lOE;AACA;AACD;AAED;AxB8lOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwB9lOA;AACE;AACA;AxBgmOF;AwB/lOE;AACE;AACE;AACD;AACC;AACA;AACA;AAAoC;AAAwB;AAC7D;AACF;AxBmmOH;AwBlmOE;AACD;AAED;AxBmmOA;AACA;AACA;AACA;AACA;AACA;AwBnmOA;AACE;AxBqmOF;AwBpmOE;AACE;AACD;AxBsmOH;AwBrmOE;AACD;AAED;AxBsmOA;AACA;AACA;AACA;AACA;AACA;AwBtmOO;AACL;AACD;AAED;AxBumOA;AACA;AACA;AACA;AACA;AACA;AACA;AwBvmOO;AACL;AACA;AAAO;AAA4B;AAAnC;AACD;AAED;AxB2mOA;AACA;AACA;AACA;AACA;AACA;AwB3mOO;AACL;AACD;AAED;AxB4mOA;AACA;AACA;AACA;AACA;AACA;AwB5mOO;AACL;AACD;AAED;AxB6mOA;AACA;AACA;AACA;AwB7mOA;AACE;AACA;AACA;AxB+mOF;AwBlnOyC;AAKrC;AACE;AACD;AxBgnOL;AwB/mOI;AxBinOJ;AwBhnOI;AACE;AACD;AACC;AAAmC;AAAA;AAGpC;AAfoC;AxBkoOzC;AwB9nOE;AAA2B;AxBioO7B;AwBjoO6B;AAY1B;AACF;AAED;AxBunOA;AACA;AACA;AACA;AACA;AwBvnOA;AACE;AACE;AACD;AxBynOH;AwBxnOE;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAED;AxBynOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBznOO;AACL;AxB2nOF;AwBznOE;AACE;AACD;AxB2nOH;AwB1nOE;AAIA;AACA;AACA;AACD;AAED;AxBwnOA;AACA;AACA;AACA;AACA;AwBxnOO;AACL;AAIA;AAIE;AAAA;AAEH;AAED;AxBmnOA;AACA;AACA;AACA;AACA;AACA;AwBnnOO;AACL;AACE;AACD;AACF;AAED;AxBonOA;AACA;AACA;AACA;AACA;AACA;AwBpnOA;AACE;AxBsnOF;AwBpnOE;AACD;AAED;AxBqnOA;AACA;AwBrnOA;AACE;AADuC;AAAA;AAAA;AAGvC;AxBynOF;AwBxnOE;AACE;AACA;AACA;AACA;AACA;AACA;AANK;AAQR;AxB0nOD;AACA;AACA;AACA;AACA;AACA;AACA;AyBjyPA;AzBmyPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBhyPO;AzBkyPP;AACA;AACA;AACA;AACA;AyBnyPE;AzBqyPF;AACA;AyBnyPE;AACE;AACA;AAEA;AzBoyPJ;AyBnyPI;AAEA;AzBoyPJ;AyBnyPI;AzBqyPJ;AyBnyPI;AzBqyPJ;AACA;AyBryPI;AACD;AAED;AzBsyPF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBxyPI;AzB0yPJ;AyBzyPI;AACE;AACD;AACF;AAED;AzB0yPF;AACA;AACA;AACA;AACA;AACA;AyB1yPI;AzB4yPJ;AyB3yPI;AACE;AACD;AACF;AAED;AzB4yPF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyB7yPmB;AzB+yPnB;AyB9yPI;AACE;AACD;AzBgzPL;AyB/yPI;AACA;AACE;AACE;AzBizPR;AyBhzPQ;AACE;AACD;AACF;AACF;AACD;AACA;AACD;AzBkzPH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B53PA;A1B83PA;A0Bt3PA;A1Bw3PA;A0Bh5PA;A1Bk5PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Bj4PA;AACO;A1Bm4PP;AACA;AACA;AACA;AACA;AACA;AACA;A0Bt4PE;A1Bw4PF;AACA;AACA;AACA;A0Bt4PE;A1Bw4PF;AACA;AACA;AACA;AACA;A0Bt4PI;AAAO;AAAiF;AAAxF;AAKD;AAED;A1Bs4PF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Bt4PI;AAAO;AAAiF;AAAxF;AAKD;AAED;A1Bs4PF;AACA;AACA;AACA;AACA;AACA;AACA;A0Bt4PI;AAAO;AAA+C;AAAtD;AAKD;AAED;A1Bs4PF;AACA;AACA;AACA;AACA;AACA;AACA;A0Bt4PI;AAAO;AAA+C;AAAtD;AAKD;AAED;A1Bs4PF;AACA;AACA;AACA;AACA;AACA;A0Bt4PI;AAAO;AAAqD;AAA5D;AAID;AAED;A1Bu4PF;AACA;AACA;AACA;AACA;AACA;A0Bv4PI;AAAO;AAAiE;AAAxE;AAID;AAED;A1Bw4PF;AACA;AACA;AACA;AACA;AACA;A0Bx4PI;AAAO;AAAkF;AAAzF;AAKD;AAED;A1Bw4PF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Bx4PI;AAAO;AAAqD;AAA5D;AAID;AAED;A1By4PF;AACA;AACA;AACA;AACA;AACA;AACA;A0Bz4PI;AACD;AAED;A1B04PF;AACA;AACA;AACA;AACA;AACA;AACA;A0B34PyD;AAAvB;AAAuB;A1B+4PzD;A0B94PI;AACE;AACA;AACA;AAAmC;AAAO;AAI3C;A1B+4PL;A0B94PI;AAAO;AAAkG;AAAzG;AAKD;AAED;A1B84PF;AACA;AACA;AACA;AACA;AACA;A0B94PI;AAAO;AAAkG;AAAzG;AAKD;AAED;A1B84PF;AACA;AACA;AACA;AACA;AACA;A0B94PI;AAAO;AAAuD;AAA9D;AAID;AAED;A1B+4PF;AACA;AACA;AACA;AACA;AACA;A0B/4PI;AAAO;AAAqE;AAA5E;AAKD;AAED;A1B+4PF;AACA;AACA;AACA;AACA;AACA;A0B/4PI;AAAO;AAAqD;AAA5D;AAID;AAED;A1Bg5PF;AACA;AACA;AACA;AACA;AACA;A0Bh5PI;AAAO;AAAiD;AAAxD;AAID;AAED;A1Bi5PF;AACA;AACA;AACA;AACA;AACA;A0Bj5PI;AAAO;AAAiF;AAAxF;AAKD;AAED;A1Bi5PF;AACA;AACA;AACA;AACA;AACA;A0Bj5PI;AAAO;AAA6F;AAApG;AAKD;AAED;A1Bi5PF;AACA;AACA;AACA;AACA;AACA;A0Bj5PI;AAAO;AAA8C;AAArD;AAID;AAED;A1Bk5PF;AACA;AACA;AACA;AACA;AACA;A0Bl5PI;AAAO;AAAsD;AAA7D;AAID;AAED;A1Bm5PF;AACA;AACA;AACA;AACA;AACA;A0Bn5PI;AAAO;AAAsD;AAA7D;AAID;AAED;A1Bo5PF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Bp5PI;AAAO;AAA2F;AAAlG;AAID;AAED;A1Bq5PF;AACA;AACA;AACA;AACA;AACA;AACA;A0Br5PI;AAAO;AAA+D;AAAtE;AAID;AAED;A1Bs5PF;AACA;AACA;AACA;AACA;AACA;AACA;A0Bt5PI;AAAO;AAAgD;AAAvD;AAID;AAED;A1Bu5PF;AACA;AACA;AACA;AACA;AACA;A0Bv5PI;AACD;AAED;A1Bw5PF;AACA;AACA;AACA;AACA;AACA;AACA;A0Bx5PI;AAAO;AAA6F;AAApG;AAKD;AAED;A1Bw5PF;AACA;AACA;AACA;AACA;AACA;A0Bx5PI;AAAO;AAA4D;AAAnE;AAID;AAED;A1By5PF;AACA;AACA;AACA;AACA;AACA;A0Bz5PI;AAAO;AAAuD;AAA9D;AAID;AAED;A1B05PF;AACA;AACA;AACA;AACA;AACA;A0B15PI;AAAO;AAAuD;AAA9D;AAID;AAED;A1B25PF;AACA;AACA;AACA;AACA;AACA;A0B35PI;AAAO;AAAkD;AAAzD;AAID;AAED;A1B45PF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B55PI;AAAO;AAAqF;AAA5F;AAID;AAED;A1B65PF;AACA;AACA;AACA;AACA;AACA;A0B75PI;AAAO;AAAkE;AAAzE;AAID;AAED;A1B85PF;AACA;AACA;AACA;AACA;AACA;A0B95PI;AAAO;AAA4E;AAAnF;AAID;AAED;A1B+5PF;AACA;AACA;AACA;AACA;AACA;A0B/5PI;AAAO;AAAgF;AAAvF;AAMD;AAED;A1B85PF;AACA;AACA;AACA;AACA;AACA;AACA;A0B95PI;AACE;AACC;AAFH;AAID;AAED;A1B+5PF;AACA;AACA;AACA;AACA;AACA;A0B/5PI;AACE;AACC;AAFH;AAID;AAED;A1Bg6PF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Bh6PI;AACE;AACC;AAFH;AAID;AAED;A1Bi6PF;AACA;AACA;AACA;AACA;AACA;A0Bj6PI;AACE;AACC;AAFH;AAID;AAED;A1Bk6PF;AACA;AACA;AACA;AACA;AACA;A0Bl6PI;AACE;AACC;AAFH;AAID;AAED;A1Bm6PF;AACA;AACA;AACA;AACA;AACA;A0Bn6PI;AACE;AACC;AAFH;AAID;AAED;A1Bo6PF;AACA;AACA;AACA;AACA;AACA;A0Bp6PI;AACE;AACC;AAFH;AAID;AAED;A1Bq6PF;AACA;AACA;AACA;AACA;AACA;A0Br6PI;AACE;AACC;AAFH;AAID;AAED;A1Bs6PF;AACA;AACA;AACA;AACA;AACA;A0Bt6PI;AACD;AAED;A1Bu6PF;AACA;AACA;AACA;AACA;AACA;AACA;A0Bv6PI;AACE;AACC;AAFH;AAID;AAED;A1Bw6PF;AACA;AACA;AACA;AACA;AACA;A0Bx6PI;AACE;AACC;AAFH;AAID;AAED;A1By6PF;AACA;AACA;AACA;AACA;AACA;AACA;A0Bz6PI;AACD;AAED;A1B06PF;AACA;AACA;AACA;AACA;AACA;AACA;A0B16PI;AACD;AAED;A1B26PF;AACA;AACA;AACA;AACA;AACA;AACA;A0B36PI;AACE;AACC;AAFH;AAID;AAED;A1B46PF;AACA;AACA;AACA;AACA;AACA;AACA;A0B56PI;AACD;AAED;A1B66PF;AACA;AACA;AACA;AACA;AACA;A0B76PI;AACE;AACC;AAFH;AASD;AAED;A1By6PF;AACA;AACA;AACA;AACA;AACA;A0Bz6PI;AACE;AACC;AAFH;AAID;AAED;A1B06PF;AACA;AACA;AACA;AACA;AACA;A0B16PI;AAAO;AAA0D;AAAjE;AAID;AAED;A1B26PF;AACA;AACA;AACA;AACA;AACA;A0B36PI;AAAO;AAAmD;AAA1D;AAID;AAED;A1B46PF;AACA;AACA;AACA;AACA;AACA;A0B56PI;AACA;AAAO;AAA4C;AAAnD;AAID;AAED;A1B66PF;AACA;AACA;AACA;AACA;AACA;A0B76PI;AAAO;AAAiE;AAAxE;AAID;AAED;A1B86PF;AACA;AACA;AACA;AACA;AACA;A0B96PI;AACE;AACC;AAFH;AAQD;AAED;A1B26PF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B36PI;AACE;AACC;AAFH;AAQD;AAED;A1Bw6PF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Bx6PI;AAAO;AAAoE;AAA3E;AAMD;AAED;A1Bu6PF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Bv6PI;AAAO;AAAyG;AAAhH;AAMD;AAED;A1Bs6PF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Bt6PI;AAAO;AAAwC;AAA/C;AAID;AAED;A1Bu6PF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Bv6PI;AAAO;AAA6E;AAApF;AAMD;AAED;A1Bs6PF;AACA;AACA;AACA;AACA;AACA;A0Bt6PI;AAAO;AAA2D;AAAlE;AAID;AAED;A1Bu6PF;AACA;AACA;AACA;AACA;AACA;A0Bv6PI;AACE;AACC;AAFH;AAQD;AAED;A1Bo6PF;AACA;AACA;AACA;AACA;AACA;A0Bp6PI;AAAO;AAA4D;AAAnE;AAID;AAED;A1Bq6PF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Br6PI;AAAO;AAAsE;AAA7E;AAID;AAED;A1Bs6PF;AACA;AACA;AACA;AACA;AACA;A0Bt6PI;AAAO;AAA4C;AAAnD;AAID;AAED;A1Bu6PF;AACA;AACA;AACA;AACA;AACA;A0Bv6PI;AAAO;AAAyE;AAAhF;AAID;AAED;A1Bw6PF;AACA;AACA;AACA;AACA;AACA;A0Bx6PI;AAAO;AAAwC;AAA/C;AACD;A1B66PH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2B/uRA;A3BivRA;A2BhvRA;A3BkvRA;A2BnwRA;A3BqwRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2B/vRA;AACA;AAEA;A3BgwRA;AACA;AACA;AACA;AACA;AACA;A2B/vRO;AACL;A3BiwRF;A2BhwRE;AACE;AACD;A3BkwRH;A2BhwRE;AACD;AAED;A3BiwRA;AACA;AACA;AACA;AACA;AACA;AACA;A2BjwRO;AACL;A3BmwRF;A2BlwRE;AACE;AACD;A3BowRH;A2BlwRE;AACD;AAED;A3BmwRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2BnwRA;AACE;AACD;AAED;A3BowRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2BpwRA;AACE;AACD;AAED;A3BqwRA;AACA;AACA;AACA;AACA;AACA;AACA;A2BrwRA;AACE;AACA;AAAU;AAAO;AAEjB;AACA;AACA;A3BwwRF;A2BrwRE;AAEA;AACD;AAED;A3BqwRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2BrwRO;AACL;AACA;A3BuwRF;A2BrwRE;AACE;AACA;AACA;AACA;AACA;AACD;A3BuwRH;A2BrwRE;AACD;A3BuwRD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Bx5RA;A5B05RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Bx5RA;A5B05RA;AACA;AACA;AACA;A4Bx5RA;AACE;AACD;AAED;A5By5RA;AACA;AACA;AACA;AACA;A4Bz5RA;AACE;AACD;AAED;A5B05RA;AACA;AACA;AACA;AACA;AACA;A4B15RO;AACL;AACD;AAED;A5B25RA;AACA;AACA;AACA;AACA;AACA;AACA;A4B35RO;AACL;AACD;AAED;A5B45RA;AACA;AACA;AACA;AACA;A4B55RO;AACL;AACD;AAED;A5B65RA;AACA;AACA;AACA;AACA;AACA;AACA;A4B75RO;AACL;AACA;AACD;AAED;A5B85RA;AACA;AACA;AACA;AACA;AACA;AACA;A4B95RO;AACL;AACE;AACD;A5Bg6RH;A4B/5RE;AACD;AAED;A5Bg6RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Bh6RO;AACL;AACE;AACD;A5Bk6RH;A4Bj6RE;AACE;AACD;A5Bm6RH;A4Bl6RE;AACD;AAED;A5Bm6RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Bn6RO;AACL;A5Bq6RF;A4Bt6RoE;AAGhE;AACA;AACE;AACA;AACD;A5Bs6RL;A4Br6RI;AACE;AACD;AAV+D;A5Bk7RpE;A4Bh7RE;AAAwC;A5Bm7R1C;A4Bn7R0C;AASvC;A5B66RH;A4B56RE;AACD;AAED;A5B66RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4B76RO;AAA2B;AAEhC;A5B+6RF;A4B96RE;AACE;AACD;A5Bg7RH;AACA;A4B/6RE;AACD;AAED;A5Bg7RA;AACA;AACA;AACA;AACA;AACA;A4Bh7RO;AACL;AACA;AACE;AACD;A5Bk7RH;A4Bh7RE;AACD;AAED;A5Bi7RA;AACA;AACA;AACA;AACA;AACA;A4Bj7RO;AACL;AACE;AACD;A5Bm7RH;A4Bj7RE;AACD;AAED;A5Bk7RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Bl7RO;AACL;AACE;AACD;A5Bo7RH;A4Bn7RE;AACA;A5Bq7RF;A4Bp7RE;AACE;AACD;A5Bs7RH;A4Br7RE;AACD;A5Bu7RD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B/nSA;A7BioSA;A6BhoSA;A7BkoSA;A6BjoSA;A7BmoSA;A6BtpSA;A7BwpSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BrpSA;A7BupSA;A6BlpSA;AACA;AAEA;A7BmpSA;A6BlpSA;AAEA;A7BmpSA;AACA;AACA;AACA;AACA;A6BlpSO;AACL;AACD;AAED;A7BmpSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BnpSA;AACE;AACE;A7BqpSJ;A6BppSI;AACE;AACD;AACF;A7BspSH;A6BrpSE;AACD;AAED;A7BspSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BtpSO;AACL;AACE;AACA;AACD;A7BwpSH;A6BvpSE;AACE;AACD;A7BypSH;A6BxpSE;A7B0pSF;A6BzpSE;AACE;A7B2pSJ;A6B1pSI;AACE;AACA;A7B4pSN;A6B1pSM;AACE;AACD;AACF;A7B4pSL;A6B3pSI;AACE;AACD;AACF;A7B6pSH;A6B5pSE;AACD;AAED;A7B6pSA;AACA;AACA;AACA;AACA;AACA;AACA;A6B7pSO;AAA6C;A7BgqSpD;A6B9pSE;AACE;AAKD;AACF;AAED;A7B2pSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B3pSO;AACL;A7B6pSF;A6BxpSE;AACE;AAA8B;AAAuB;AAGtD;AACF;AAED;A7BypSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BzpSO;AACL;A7B2pSF;A6BtpSE;AACE;AACD;A7BwpSH;A6BvpSE;AACD;AAED;A7BwpSA;AACA;AACA;AACA;AACA;AACA;AACA;A6BxpSO;AACL;AACE;AACD;AACF;AAED;A7BypSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BzpSO;AACL;AACE;AAID;A7BwpSH;A6BvpSE;AACD;AAED;A7BwpSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BxpSO;AACL;AACE;AAID;A7BupSH;A6BtpSE;AACD;AAED;A7BupSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BvpSO;AAAsC;AAE3C;AAIA;AAMA;AACD;AAED;A7BgpSA;AACA;AACA;AACA;AACA;AACA;A6BhpSO;AACL;AACE;AACD;A7BkpSH;A6BjpSE;AACE;AACD;AACC;AACD;AACF;AAED;A7BkpSA;AACA;AACA;AACA;AACA;AACA;A6BlpSO;AACL;AACD;AAED;A7BmpSA;AACA;AACA;AACA;AACA;AACA;A6BnpSO;AACL;AACD;AAED;A7BopSA;AACA;AACA;AACA;AACA;AACA;A6BppSO;AACL;AACE;AACD;A7BspSH;A6BrpSE;AACD;AAED;A7BspSA;AACA;AACA;AACA;AACA;AACA;AACA;A6BtpSO;AACL;AACE;AACD;A7BwpSH;A6BvpSE;AACE;AACD;A7BypSH;A6BxpSE;AACE;AACD;A7B0pSH;A6BzpSE;AACD;AAED;A7B0pSA;AACA;AACA;AACA;AACA;AACA;A6B1pSO;AACL;AACD;AAED;A7B2pSA;AACA;AACA;AACA;AACA;AACA;A6B3pSO;AACL;AACE;AACD;A7B6pSH;A6B5pSE;AACD;AAED;A7B6pSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B7pSO;AACL;AAID;AAED;A7B2pSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B3pSO;AACL;AAAc;AAAqC;AACnD;AAAO;AAAwC;AAA/C;AACD;AAED;A7BiqSA;AACA;AACA;AACA;AACA;AACA;A6BjqSO;AACL;AACE;AACD;AACF;AAED;A7BkqSA;AACA;AACA;AACA;AACA;AACA;A6BlqSO;AACL;AACE;AACD;A7BoqSH;A6BlqSE;AACE;AACD;AACF;A7BoqSD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BxhTA;A9B0hTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BxhTA;AACA;AAEA;A9ByhTA;AACA;AACA;AACA;AACA;A8BxhTA;AACE;AACD;AAED;A9ByhTA;AACA;AACA;AACA;AACA;AACA;A8BzhTO;AACL;AACD;AAED;A9B0hTA;AACA;AACA;AACA;AACA;AACA;AACA;A8B1hTO;AACL;AACD;AAED;A9B2hTA;AACA;AACA;AACA;AACA;AACA;A8B3hTO;AACL;AACD;AAED;A9B4hTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8B5hTO;AACL;AACD;AAED;A9B6hTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8B7hTO;AACL;AACE;AACE;AACD;AACF;A9B+hTH;A8B9hTE;AACD;AAED;A9B+hTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8B/hTO;AACL;AAAO;AAAwB;AAA/B;AACD;A9BoiTD;AACA;AACA;AACA;AACA;AACA;AACA;A+B1nTA;A/B4nTA;A+B5oTA;A/B8oTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BzoTA;AAEA;A/B0oTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BzoTO;AACL;AAAe;AAA4B;A/B6oT7C;A+B5oTE;AACE;AACD;A/B8oTH;A+B5oTE;A/B8oTF;A+B7oTE;AACE;AACA;AAGA;AACD;A/B6oTH;A+B5oTE;AACD;A/B8oTD;AACA;AACA;AACA;AACA;AACA;AACA;AgCjsTA;AhCmsTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCjsTA;AhCmsTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCjsTO;AAA0D;AAAf;AAAe;AhCssTjE;AgCrsTE;AACE;AACD;AACC;AACD;AACF;AhCusTD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiC1vTA;AjC4vTA;AiC3vTA;AjC6vTA;AiC5vTA;AjC8vTA;AiC7vTA;AjC+vTA;AiC9vTA;AjCgwTA;AiC/vTA;AjCiwTA;AiChwTA;AjCkwTA;AiCjwTA;AjCmwTA;AiClwTA;AjCowTA;AiC5xTA;AjC8xTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiClxTA;AjCoxTA;AACA;AiClxTA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAV+B;AAajC;AjCmxTA;AACA;AACA;AACA;AiClxTA;AAEA;AjCmxTA;AACA;AACA;AACA;AACA;AACA;AiClxTA;AAEA;AjCmxTA;AiClxTA;AAEA;AjCmxTA;AiClxTA;AAEA;AjCmxTA;AiClxTA;AAEA;AjCmxTA;AiClxTA;AAEA;AjCmxTA;AiClxTA;AAEA;AACE;AAA4B;AAC5B;AAA4B;AAC5B;AAA4B;AAG9B;AjCoxTA;AiCnxTO;AAEP;AjCoxTA;AACA;AACA;AACA;AACA;AACA;AACA;AiCrxTO;AACL;AACD;AAED;AjCsxTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCtxTO;AACL;AACE;AAAI;AAAmC;AACvC;AACD;AjC0xTH;AiCxxTE;AACD;AAED;AjCyxTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCzxTO;AACL;AACE;AACD;AjC2xTH;AiCzxTE;AAGA;AjCyxTF;AiCxxTE;AACE;AACD;AjC0xTH;AiCxxTE;AAAa;AAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AjC4xTJ;AiCryTyC;AAavC;AjC2xTF;AiC1xTE;AACE;AACD;AAGD;AjC0xTF;AACA;AiC1xTE;AAIE;AACA;AACD;AAGD;AjCuxTF;AACA;AiCvxTE;AjCyxTF;AiCxxTE;AACE;AACD;AACC;AACD;AACC;AACD;AjC0xTH;AiCzxTE;AjC2xTF;AiCxxTE;AjC0xTF;AiCxxTE;AACE;AACD;AjC0xTH;AiCxxTE;AACD;AAED;AjCyxTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCzxTO;AAKL;AACE;AACD;AjCuxTH;AiCtxTE;AACA;AAEA;AAOA;AACA;AACD;AACD;AjCixTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCjxTO;AACL;AACA;AACD;AAED;AjCkxTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiClxTO;AACL;AACD;AAED;AjCmxTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCnxTO;AACL;AACA;AACA;AACA;AjCqxTF;AiCpxTE;AACE;AACE;AACD;AACF;AjCsxTH;AiCrxTE;AACD;AAED;AjCsxTA;AACA;AACA;AACA;AACA;AACA;AACA;AiCtxTO;AACL;AjCwxTF;AiCvxTE;AACE;AjCyxTJ;AiCxxTI;AACE;AACD;AACC;AACE;AAAW;AAAuB;AAClC;AACD;AACF;AACC;AAAW;AAAuB;AAClC;AACD;AACF;AjC8xTH;AiC7xTE;AACD;AAED;AjC8xTA;AACA;AACA;AACA;AACA;AACA;AiC9xTO;AACL;AACE;AACD;AjCgyTH;AiC/xTE;AAMD;AAED;AjC2xTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiC3xTO;AAIL;AADA;AACA;AjC4xTF;AiC3xTE;AjC6xTF;AiCtxTE;AAAqB;AAAuB;AAC5C;AASA;AACD;AAED;AjCixTA;AACA;AACA;AACA;AACA;AACA;AiCjxTO;AACL;AAKA;AACD;AAED;AjC8wTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiC9wTO;AACL;AACD;AAED;AjC+wTA;AACA;AACA;AACA;AACA;AACA;AACA;AiC/wTO;AACL;AjCixTF;AiChxTE;AACE;AACD;AjCkxTH;AiCjxTE;AACD;AAED;AjCkxTA;AACA;AACA;AACA;AACA;AACA;AACA;AiClxTO;AACL;AjCoxTF;AiCnxTE;AACE;AACD;AjCqxTH;AiCpxTE;AACD;AAED;AjCqxTA;AACA;AACA;AACA;AACA;AACA;AiCrxTO;AACL;AACE;AACD;AjCuxTH;AiCtxTE;AACD;AAED;AjCuxTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCvxTO;AACL;AACE;AACD;AjCyxTH;AiCxxTE;AACE;AACD;AjC0xTH;AiCzxTE;AACA;AACD;AAED;AjC0xTA;AACA;AACA;AACA;AACA;AACA;AiC1xTO;AACL;AACE;AACD;AjC4xTH;AiC3xTE;AACD;AAED;AjC4xTA;AACA;AACA;AACA;AACA;AACA;AACA;AiC5xTO;AACL;AACE;AACD;AjC8xTH;AiC7xTE;AACE;AACD;AjC+xTH;AiC9xTE;AACD;AAED;AjC+xTA;AACA;AACA;AACA;AACA;AACA;AiC/xTO;AACL;AACA;AACA;AACD;AAED;AjCgyTA;AACA;AACA;AACA;AACA;AACA;AiChyTO;AACL;AjCkyTF;AiCjyTE;AACE;AACD;AjCmyTH;AiClyTE;AACA;AACD;AAED;AjCmyTA;AACA;AACA;AACA;AACA;AACA;AACA;AiCnyTA;AACE;AACE;AACD;AjCqyTH;AiCpyTE;AjCsyTF;AiC/xTE;AACD;AAED;AjCgyTA;AACA;AACA;AACA;AACA;AACA;AACA;AiChyTO;AACL;AACA;AACA;AACE;AACD;AjCkyTH;AiCjyTE;AACA;AACA;AACD;AAED;AjCkyTA;AACA;AACA;AACA;AACA;AACA;AACA;AiClyTO;AACL;AACE;AACD;AjCoyTH;AACA;AiClyTE;AACE;AACD;AAGD;AACA;AACA;AjCkyTF;AACA;AiClyTE;AACA;AACA;AAKA;AACA;AjCgyTF;AiC3xTE;AACA;AACA;AAMD;AAED;AjCuxTA;AACA;AACA;AACA;AACA;AACA;AACA;AiCvxTO;AACL;AACD;AAED;AjCwxTA;AACA;AACA;AACA;AACA;AACA;AACA;AiCxxTO;AACL;AACE;AACD;AjC0xTH;AiCzxTE;AACE;AACD;AjC2xTH;AiC1xTE;AACD;AAED;AjC2xTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiC3xTO;AACL;AACE;AACD;AjC6xTH;AiC5xTE;AACA;AjC8xTF;AiC3xTE;AACE;AACD;AjC6xTH;AACA;AiC3xTE;AACE;AACD;AjC6xTH;AACA;AiC3xTE;AACE;AACD;AjC6xTH;AACA;AiC3xTE;AAKD;AAED;AjCwxTA;AACA;AACA;AACA;AACA;AACA;AACA;AiCxxTO;AACL;AACA;AACA;AACD;AAED;AjCyxTA;AACA;AACA;AACA;AACA;AiCzxTO;AACL;AACA;AACA;AAKD;AAED;AjCsxTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCtxTO;AACL;AACD;AjCwxTD;AACA;AACA;AACA;AACA;AACA;AACA;AkCz6UA;AlC26UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCx6UA;AlC06UA;AkCz6UA;AlC26UA;AkCz6UA;AlC26UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCz6UO;AACL;AACA;AACA;AACA;AACE;AAAgB;AADP;AACO;AlC86UpB;AkC76UM;AACA;AACA;AACD;AlC+6UL;AkC96UI;AACD;AACF;AlCg7UD;AACA;AACA;AACA;AACA;AACA;AACA;AmCj9UA;AnCm9UA;AmCn+UA;AnCq+UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCj+UA;AACA;AAEA;AnCk+UA;AACA;AACA;AACA;AACA;AACA;AmCn+UE;AnCq+UF;AACA;AmCn+UE;AACE;AACA;AAEA;AnCo+UJ;AmCn+UI;AAEA;AnCo+UJ;AACA;AACA;AACA;AmCn+UI;AAEA;AnCo+UJ;AmCn+UI;AACD;AAED;AnCo+UF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCt+UI;AACD;AAED;AnCu+UF;AACA;AACA;AACA;AACA;AACA;AmCv+UI;AnCy+UJ;AmCx+UI;AACE;AACA;AACD;AnC0+UL;AmCz+UI;AACD;AAED;AnC0+UF;AACA;AACA;AACA;AACA;AACA;AmC1+UI;AACE;AACD;AnC4+UL;AmC3+UI;AAAoB;AAAS;AAAV;AACnB;AACD;AAED;AnC++UF;AACA;AACA;AACA;AACA;AmC/+UI;AACE;AACD;AnCi/UL;AmC/+UI;AACA;AACA;AACA;AnCi/UJ;AmCh/UI;AAAyB;AnCm/U7B;AmCj/UM;AACE;AACA;AACD;AACF;AnCm/UL;AmCj/UI;AACE;AACA;AACD;AACF;AnCm/UH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoC3lVA;ApC6lVA;AoC7mVA;ApC+mVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoC3mVA;AACA;AAEA;ApC4mVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoC3mVO;AACL;ApC6mVF;AoC5mVE;AACE;AACD;ApC8mVH;AoC7mVE;AACD;AAED;ApC8mVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoC9mVO;AACL;AACA;AACA;AAAO;AAA4B;AAAnC;AACD;AAED;ApCknVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoClnVO;AACL;AACD;AAED;ApCmnVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCnnVO;AACL;AACE;AACD;AACC;AACD;AACF;AAED;ApConVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCpnVO;AAA+C;AAAZ;AAAY;ApCynVtD;AoCxnVE;AACA;AAEA;ApCynVF;AoCxnVE;AACA;AAAY;AAAW;AAAW;AAAvB;ApC8nVb;AoCpoVsD;AAAA;AAAA;AAAA;AAAA;ApC0oVtD;AoC/nVI;AACE;AACD;ApCioVL;AoChoVI;ApCkoVJ;AoCjoVI;AACE;AACD;ApCmoVL;AoCloVI;AACE;AACA;AACD;ApCooVL;AoCnoVI;AACE;AAEA;ApCooVN;AoCnoVM;AACE;ApCqoVR;AoCpoVQ;AACE;AAAY;AAAa;AAAa;AAA3B;AACX;AACD;AACF;ApC0oVP;AoCzoVM;AACD;AAlCiD;ApC8qVtD;AoCrqVE;AAAyB;ApCwqV3B;AoCxqV2B;AA0BxB;ApCipVH;AoChpVE;AACD;AAED;ApCipVA;AACA;AACA;AACA;AACA;AACA;AoCjpVO;AACL;AACE;AACE;AACD;ApCmpVL;AoClpVI;AACD;AACF;ApCopVD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqC5yVA;ArC8yVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqC5yVA;ArC8yVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqC5yVE;ArC8yVF;AACA;AqC5yVE;AACE;AAEA;ArC6yVJ;AACA;AACA;AqC5yVI;AAAmB;AAAO;AACxB;AACA;AACD;AAED;ArC+yVJ;AACA;AACA;AqC9yVI;AAEA;ArC+yVJ;AACA;AACA;AqC9yVI;AACD;AAGH;ArC8yVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqChzVO;AACL;AACE;AACD;AACF;AAED;ArCizVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqCjzVO;AAAmC;AAAX;AAAW;ArCszV1C;AqCrzVE;AACE;AACA;ArCuzVJ;AqCtzVI;AACE;AACD;ArCwzVL;AqCvzVI;AACE;AACD;ArCyzVL;AqCxzVI;AACA;ArC0zVJ;AqCxzVI;AACE;AACE;AACD;ArC0zVP;AqCzzVM;AACE;AACD;AACF;ArC2zVL;AqC1zVI;AACE;AACE;AACD;ArC4zVP;AqC3zVM;AACE;AACD;AACF;ArC6zVL;AqC5zVI;AACE;AACD;AACF;AACF;AAED;ArC6zVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqC/zVE;ArCi0VF;AACA;AqC/zVE;AACE;AACA;ArCi0VJ;AqCh0VI;AACE;AACA;AACD;AAED;ArCi0VJ;AqCh0VI;AAEA;ArCi0VJ;AqCh0VI;AAEA;ArCi0VJ;AqCh0VI;ArCk0VJ;AqCh0VI;AACE;AACE;AACD;AACF;AACF;AAED;ArCi0VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqCp0Ve;ArCs0Vf;AqCr0VI;AACA;AAEI;AACE;AACD;AACF;AAEC;AACA;AACA;AACE;AACD;AACF;AAEH;AACD;AAED;ArCm0VF;AACA;AACA;AqCn0VI;AACD;ArCq0VH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCrgWA;AtCugWA;AsCpgWA;AtCsgWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCpgWA;AtCsgWA;AsCpgWA;AACE;AACA;AACE;AACD;AtCsgWH;AACA;AsCrgWE;AACE;AACD;AAED;AACA;AtCsgWF;AACA;AsCtgWE;AACE;AACD;AAED;AtCugWF;AACA;AsCvgWE;AACD;AAED;AtCwgWA;AACA;AACA;AACA;AACA;AACA;AsCxgWO;AACL;AACD;AtC0gWD;AACA;AACA;AF5jWA;AACA","file":"amp-consent-0.1.max.js","sourcesContent":["(self.AMP=self.AMP||[]).push({n:\"amp-consent\",v:\"1910112036280\",f:(function(AMP,_){\n$1\n})});","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.CSS = void 0;\nvar CSS = \"amp-consent{position:fixed;bottom:0;left:0;overflow:hidden!important;background:hsla(0,0%,100%,0.7);width:100%;z-index:2147483645}amp-consent[i-amphtml-notbuilt]>*{display:none!important}amp-consent>*{max-height:100vh!important}amp-consent.amp-active{visibility:visible}amp-consent.amp-hidden{visibility:hidden}@keyframes amp-consent-ui-placeholder-spin{0%{transform:rotate(0deg)}to{transform:rotate(360deg)}}.i-amphtml-consent-ui-placeholder{width:100%;height:100%;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}.i-amphtml-consent-ui-placeholder>svg{width:30px;height:30px;fill:none;stroke-width:1.5px;transform-origin:50% 50%;animation:amp-consent-ui-placeholder-spin 1000ms linear infinite}.i-amphtml-consent-ui-fill{position:absolute;top:0;left:0;width:100%}iframe.i-amphtml-consent-ui-fill{border:none}amp-consent.i-amphtml-consent-ui-iframe-active{width:100%!important;height:100vh!important;padding:0px!important;margin:0px!important;overflow:auto!important;transform:translate3d(0px,100vh,0px)!important}amp-consent.i-amphtml-consent-ui-iframe-active.i-amphtml-consent-ui-enable-border{border-top-left-radius:8px!important;border-top-right-radius:8px!important;box-shadow:0 0 5px 0 rgba(0,0,0,0.2)!important}amp-consent.i-amphtml-consent-ui-iframe-active.i-amphtml-consent-ui-in{transition:transform 0.5s ease-out!important}amp-consent.i-amphtml-consent-ui-iframe-active.i-amphtml-consent-ui-in.i-amphtml-consent-ui-iframe-fullscreen{top:0px!important;transform:translateZ(0px)!important;border-top-left-radius:0px!important;border-top-right-radius:0px!important}amp-consent.i-amphtml-consent-ui-in.i-amphtml-consent-ui-iframe-fullscreen>.i-amphtml-consent-ui-fill{height:100%!important}@keyframes i-amphtml-consent-ui-mask{0%{opacity:0.0}to{opacity:0.2}}.i-amphtml-consent-ui-mask{position:fixed!important;top:0!important;left:0!important;width:100vw!important;height:100vh!important;opacity:0.2;animation:i-amphtml-consent-ui-mask 0.25s ease-in;background-image:none!important;background-color:#000;z-index:2147483644}\\n/*# sourceURL=/extensions/amp-consent/0.1/amp-consent.css*/\";\nexports.CSS = CSS;\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.AmpConsent = exports.ACTION_TYPE = void 0;\n\nvar _consentInfo = require(\"./consent-info\");\n\nvar _ampConsent = require(\"../../../build/amp-consent-0.1.css\");\n\nvar _consentConfig = require(\"./consent-config\");\n\nvar _consentPolicyManager = require(\"./consent-policy-manager\");\n\nvar _consentStateManager = require(\"./consent-state-manager\");\n\nvar _consentUi = require(\"./consent-ui\");\n\nvar _promise = require(\"../../../src/utils/promise\");\n\nvar _ampGeoInGroup = require(\"../../amp-geo/0.1/amp-geo-in-group\");\n\nvar _notificationUiManager = require(\"../../../src/service/notification-ui-manager\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _url = require(\"../../../src/url\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _eventHelper = require(\"../../../src/event-helper\");\n\nvar _service = require(\"../../../src/service\");\n\nvar _types = require(\"../../../src/types\");\n\nvar _experiments = require(\"../../../src/experiments\");\n\nvar _style = require(\"../../../src/style\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar CONSENT_STATE_MANAGER = 'consentStateManager';\nvar CONSENT_POLICY_MANAGER = 'consentPolicyManager';\nvar TAG = 'amp-consent';\n/**\n * @enum {string}\n * @visibleForTesting\n */\n\nvar ACTION_TYPE = {\n  ACCEPT: 'accept',\n  REJECT: 'reject',\n  DISMISS: 'dismiss'\n};\nexports.ACTION_TYPE = ACTION_TYPE;\n\nvar AmpConsent =\n/*#__PURE__*/\nfunction (_AMP$BaseElement) {\n  _inheritsLoose(AmpConsent, _AMP$BaseElement);\n\n  /** @param {!AmpElement} element */\n  function AmpConsent(element) {\n    var _this;\n\n    _this = _AMP$BaseElement.call(this, element) || this;\n    /** @private {?ConsentStateManager} */\n\n    _this.consentStateManager_ = null;\n    /** @private {?ConsentPolicyManager} */\n\n    _this.consentPolicyManager_ = null;\n    /** @private {?NotificationUiManager} */\n\n    _this.notificationUiManager_ = null;\n    /** @private {?ConsentUI} */\n\n    _this.consentUI_ = null;\n    /** @private {?JsonObject} */\n\n    _this.consentConfig_ = null;\n    /** @private {?JsonObject} */\n\n    _this.policyConfig_ = null;\n    /** @private {?ConsentUI} */\n\n    _this.postPromptUI_ = null;\n    /** @private {?function()} */\n\n    _this.dialogResolver_ = null;\n    _this.isPromptUIOn_ = false;\n    /** @private {boolean} */\n\n    _this.consentUIPending_ = false;\n    /** @const @private {!../../../src/service/vsync-impl.Vsync} */\n\n    _this.vsync_ = _this.getVsync();\n    /** @private {?Promise<?JsonObject>} */\n\n    _this.remoteConfigPromise_ = null;\n    /** @private {?string} */\n\n    _this.consentId_ = null;\n    return _this;\n  }\n  /** @override */\n\n\n  var _proto = AmpConsent.prototype;\n\n  _proto.getConsentPolicy = function getConsentPolicy() {\n    // amp-consent should not be blocked by itself\n    return null;\n  }\n  /** @override */\n  ;\n\n  _proto.buildCallback = function buildCallback() {\n    var _this2 = this;\n\n    (0, _log.userAssert)(this.element.getAttribute('id'), 'amp-consent should have an id');\n    var config = new _consentConfig.ConsentConfig(this.element);\n    this.consentConfig_ = config.getConsentConfig(); // ConsentConfig has verified that there's one and only one consent instance\n\n    this.consentId_ = this.consentConfig_['consentInstanceId'];\n\n    if (this.consentConfig_['postPromptUI']) {\n      this.postPromptUI_ = new _consentUi.ConsentUI(this, (0, _object.dict)({}), this.consentConfig_['postPromptUI']);\n    }\n    /**\n     * Deprecated Format\n     * {\n     *   'consentInstanceId': {\n     *     'checkConsentHref': ...,\n     *     'promptUI': ...\n     *   }\n     * }\n     *\n     * New Format\n     * {\n     *   'consentInstanceId': ...\n     *   'checkConsentHref': ...\n     *   'promptUI': ...\n     *   'postPromptUI': ...\n     * }\n     */\n\n\n    var policyConfig = this.consentConfig_['policy'] || (0, _object.dict)({});\n    this.policyConfig_ = (0, _consentConfig.expandPolicyConfig)(policyConfig,\n    /** @type {string} */\n    this.consentId_);\n    var children = this.getRealChildren();\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      (0, _style.toggle)(child, false); // <amp-consent> will manually schedule layout for its children.\n\n      _services.Services.ownersForDoc(this.element).setOwner(child, this.element);\n    }\n\n    var consentPolicyManagerPromise = (0, _service.getServicePromiseForDoc)(this.getAmpDoc(), CONSENT_POLICY_MANAGER).then(function (manager) {\n      _this2.consentPolicyManager_ =\n      /** @type {!ConsentPolicyManager} */\n      manager;\n\n      _this2.consentPolicyManager_.setLegacyConsentInstanceId(\n      /** @type {string} */\n      _this2.consentId_);\n\n      var policyKeys = Object.keys(\n      /** @type {!Object} */\n      _this2.policyConfig_);\n\n      for (var _i = 0; _i < policyKeys.length; _i++) {\n        _this2.consentPolicyManager_.registerConsentPolicyInstance(policyKeys[_i], _this2.policyConfig_[policyKeys[_i]]);\n      }\n    });\n    var consentStateManagerPromise = (0, _service.getServicePromiseForDoc)(this.getAmpDoc(), CONSENT_STATE_MANAGER).then(function (manager) {\n      manager.registerConsentInstance(_this2.consentId_, _this2.consentConfig_);\n      _this2.consentStateManager_ =\n      /** @type {!ConsentStateManager} */\n      manager;\n    });\n    var notificationUiManagerPromise = (0, _service.getServicePromiseForDoc)(this.getAmpDoc(), _notificationUiManager.NOTIFICATION_UI_MANAGER).then(function (manager) {\n      _this2.notificationUiManager_ =\n      /** @type {!NotificationUiManager} */\n      manager;\n    });\n    Promise.all([consentStateManagerPromise, notificationUiManagerPromise, consentPolicyManagerPromise]).then(function () {\n      _this2.init_();\n    });\n  }\n  /**\n   * Register a list of user action functions\n   */\n  ;\n\n  _proto.enableInteractions_ = function enableInteractions_() {\n    var _this3 = this;\n\n    this.registerAction('accept', function () {\n      _this3.handleAction_(ACTION_TYPE.ACCEPT);\n    });\n    this.registerAction('reject', function () {\n      _this3.handleAction_(ACTION_TYPE.REJECT);\n    });\n    this.registerAction('dismiss', function () {\n      _this3.handleAction_(ACTION_TYPE.DISMISS);\n    });\n    this.registerAction('prompt', function () {\n      _this3.scheduleDisplay_(true);\n    });\n    this.enableExternalInteractions_();\n  }\n  /**\n   * Listen to external consent flow iframe's response\n   */\n  ;\n\n  _proto.enableExternalInteractions_ = function enableExternalInteractions_() {\n    var _this4 = this;\n\n    this.win.addEventListener('message', function (event) {\n      if (!_this4.isPromptUIOn_) {\n        return;\n      }\n\n      var consentString;\n      var data = (0, _eventHelper.getData)(event);\n\n      if (!data || data['type'] != 'consent-response') {\n        return;\n      }\n\n      if (!data['action']) {\n        (0, _log.user)().error(TAG, 'consent-response message missing required info');\n        return;\n      }\n\n      if ((0, _experiments.isExperimentOn)(_this4.win, 'amp-consent-v2') && data['info'] !== undefined) {\n        if (typeof data['info'] != 'string') {\n          (0, _log.user)().error(TAG, 'consent-response info only supports string, ' + '%s, treated as undefined', data['info']);\n          data['info'] = undefined;\n        }\n\n        if (data['action'] === ACTION_TYPE.DISMISS) {\n          if (data['info']) {\n            _this4.user().error(TAG, 'Consent string value %s not applicable on user dismiss, ' + 'stored value will be kept and used', consentString);\n          }\n\n          data['info'] = undefined;\n        }\n\n        consentString = data['info'];\n      }\n\n      var iframes = _this4.element.querySelectorAll('iframe');\n\n      for (var i = 0; i < iframes.length; i++) {\n        if (iframes[i].contentWindow === event.source) {\n          var action = data['action'];\n\n          _this4.handleAction_(action, consentString);\n\n          return;\n        }\n      }\n    });\n  }\n  /**\n   * Returns a promise that attempt to show prompt UI\n   * @param {boolean} isActionPromptTrigger\n   */\n  ;\n\n  _proto.scheduleDisplay_ = function scheduleDisplay_(isActionPromptTrigger) {\n    if (!this.notificationUiManager_) {\n      (0, _log.dev)().error(TAG, 'notification ui manager not found');\n    }\n\n    if (this.consentUIPending_) {\n      // Already pending to be shown. Do nothing.\n      // This is to prevent postPromptUI trying to prompt the dialog, while\n      // the prompt is waiting for previous amp-user-notification prompt to be\n      // resolved first.\n      // So prompt window won't be added to notificationUI queue duplicately.\n      return;\n    }\n\n    if (!this.consentUI_) {\n      // If consent UI not found. Do nothing.\n      return;\n    }\n\n    this.consentUIPending_ = true;\n    this.notificationUiManager_.registerUI(this.show_.bind(this, isActionPromptTrigger));\n  }\n  /**\n   * Show prompt UI\n   * Do not invoke the function except in scheduleDisplay_\n   * @param {boolean} isActionPromptTrigger\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.show_ = function show_(isActionPromptTrigger) {\n    var _this5 = this;\n\n    if (this.isPromptUIOn_) {\n      (0, _log.dev)().error(TAG, 'Attempt to show an already displayed prompt UI');\n    }\n\n    this.vsync_.mutate(function () {\n      _this5.consentUI_.show(isActionPromptTrigger);\n\n      _this5.isPromptUIOn_ = true;\n    });\n    var deferred = new _promise.Deferred();\n    this.dialogResolver_ = deferred.resolve;\n    return deferred.promise;\n  }\n  /**\n   * Hide current prompt UI\n   */\n  ;\n\n  _proto.hide_ = function hide_() {\n    if (!this.isPromptUIOn_) {\n      (0, _log.dev)().error(TAG, '%s no consent ui to hide');\n    }\n\n    this.consentUI_.hide();\n    this.isPromptUIOn_ = false;\n\n    if (this.dialogResolver_) {\n      this.dialogResolver_();\n      this.dialogResolver_ = null;\n    }\n\n    this.consentUIPending_ = false;\n  }\n  /**\n   * Handler User action\n   * @param {string} action\n   * @param {string=} consentString\n   */\n  ;\n\n  _proto.handleAction_ = function handleAction_(action, consentString) {\n    if (!(0, _types.isEnumValue)(ACTION_TYPE, action)) {\n      // Unrecognized action\n      return;\n    }\n\n    if (!this.isPromptUIOn_) {\n      // No consent prompt to act to\n      return;\n    }\n\n    if (!this.consentStateManager_) {\n      (0, _log.dev)().error(TAG, 'No consent state manager');\n      return;\n    }\n\n    if (action == ACTION_TYPE.ACCEPT) {\n      //accept\n      this.consentStateManager_.updateConsentInstanceState(_consentInfo.CONSENT_ITEM_STATE.ACCEPTED, consentString);\n    } else if (action == ACTION_TYPE.REJECT) {\n      // reject\n      this.consentStateManager_.updateConsentInstanceState(_consentInfo.CONSENT_ITEM_STATE.REJECTED, consentString);\n    } else if (action == ACTION_TYPE.DISMISS) {\n      this.consentStateManager_.updateConsentInstanceState(_consentInfo.CONSENT_ITEM_STATE.DISMISSED);\n    } // Hide current dialog\n\n\n    this.hide_();\n  }\n  /**\n   * Init the amp-consent by registering and initiate consent instance.\n   */\n  ;\n\n  _proto.init_ = function init_() {\n    var _this6 = this;\n\n    this.passSharedData_();\n    this.maybeSetDirtyBit_();\n    this.getConsentRequiredPromise_().then(function (isConsentRequired) {\n      return _this6.initPromptUI_(isConsentRequired);\n    }).then(function (isPostPromptUIRequired) {\n      if (isPostPromptUIRequired) {\n        _this6.handlePostPromptUI_();\n      }\n\n      _this6.consentPolicyManager_.enableTimeout();\n    }).catch(function (unusedError) {// TODO: Handle errors\n    });\n    this.enableInteractions_();\n  }\n  /**\n   * Returns a promise that resolve when amp-consent knows\n   * if the consent is required.\n   * @return {!Promise<boolean>}\n   */\n  ;\n\n  _proto.getConsentRequiredPromise_ = function getConsentRequiredPromise_() {\n    var _this7 = this;\n\n    (0, _log.userAssert)(this.consentConfig_['checkConsentHref'] || this.consentConfig_['promptIfUnknownForGeoGroup'], 'neither checkConsentHref nor promptIfUnknownForGeoGroup is defined');\n    var consentRequiredPromise = null;\n\n    if (this.consentConfig_['promptIfUnknownForGeoGroup']) {\n      var geoGroup = this.consentConfig_['promptIfUnknownForGeoGroup'];\n      consentRequiredPromise = this.isConsentRequiredGeo_(geoGroup);\n    } else {\n      consentRequiredPromise = this.getConsentRemote_().then(function (remoteConfigResponse) {\n        if (!remoteConfigResponse || !(0, _object.hasOwn)(remoteConfigResponse, 'promptIfUnknown')) {\n          _this7.user().error(TAG, 'Expecting promptIfUnknown from ' + 'checkConsentHref when promptIfUnknownForGeoGroup is not ' + 'specified'); // Set to false if not defined\n\n\n          return false;\n        }\n\n        return !!remoteConfigResponse['promptIfUnknown'];\n      });\n    }\n\n    return consentRequiredPromise.then(function (required) {\n      return !!required;\n    });\n  }\n  /**\n   * Blindly pass sharedData\n   */\n  ;\n\n  _proto.passSharedData_ = function passSharedData_() {\n    var responsePromise = this.getConsentRemote_();\n    var sharedDataPromise = responsePromise.then(function (response) {\n      if (!response || response['sharedData'] === undefined) {\n        return null;\n      }\n\n      return response['sharedData'];\n    });\n    this.consentStateManager_.setConsentInstanceSharedData(sharedDataPromise);\n  }\n  /**\n   * Set dirtyBit of the local consent value based on server response\n   */\n  ;\n\n  _proto.maybeSetDirtyBit_ = function maybeSetDirtyBit_() {\n    var _this8 = this;\n\n    var responsePromise = this.getConsentRemote_();\n    responsePromise.then(function (response) {\n      if (response && !!response['forcePromptOnNext']) {\n        _this8.consentStateManager_.setDirtyBit();\n      }\n    });\n  }\n  /**\n   * Returns a promise that if user is in the given geoGroup\n   * @param {string} geoGroup\n   * @return {Promise<boolean>}\n   */\n  ;\n\n  _proto.isConsentRequiredGeo_ = function isConsentRequiredGeo_(geoGroup) {\n    return _services.Services.geoForDocOrNull(this.element).then(function (geo) {\n      (0, _log.userAssert)(geo, 'requires <amp-geo> to use promptIfUnknownForGeoGroup');\n      return geo.isInCountryGroup(geoGroup) == _ampGeoInGroup.GEO_IN_GROUP.IN;\n    });\n  }\n  /**\n   * Get localStored consent info, and send request to get consent from endpoint\n   * if there is checkConsentHref specified.\n   * @return {!Promise<?JsonObject>}\n   */\n  ;\n\n  _proto.getConsentRemote_ = function getConsentRemote_() {\n    var _this9 = this;\n\n    if (this.remoteConfigPromise_) {\n      return this.remoteConfigPromise_;\n    }\n\n    if (!this.consentConfig_['checkConsentHref']) {\n      this.remoteConfigPromise_ = Promise.resolve(null);\n    } else {\n      var storeConsentPromise = this.consentStateManager_.getLastConsentInstanceInfo();\n      this.remoteConfigPromise_ = storeConsentPromise.then(function (storedInfo) {\n        // Note: Expect the request to look different in following versions.\n        var request =\n        /** @type {!JsonObject} */\n        {\n          'consentInstanceId': _this9.consentId_,\n          'consentStateValue': (0, _consentInfo.getConsentStateValue)(storedInfo['consentState']),\n          'consentString': storedInfo['consentString'],\n          'isDirty': !!storedInfo['isDirty']\n        };\n\n        if (_this9.consentConfig_['clientConfig']) {\n          request['clientConfig'] = _this9.consentConfig_['clientConfig'];\n        }\n\n        var init = {\n          credentials: 'include',\n          method: 'POST',\n          body: request\n        };\n        var href = _this9.consentConfig_['checkConsentHref'];\n        (0, _url.assertHttpsUrl)(href, _this9.element);\n\n        var ampdoc = _this9.getAmpDoc();\n\n        var sourceBase = (0, _url.getSourceUrl)(ampdoc.getUrl());\n        var resolvedHref = (0, _url.resolveRelativeUrl)(href, sourceBase);\n        return ampdoc.whenFirstVisible().then(function () {\n          return _services.Services.xhrFor(_this9.win).fetchJson(resolvedHref, init).then(function (res) {\n            return res.json();\n          });\n        });\n      });\n    }\n\n    return this.remoteConfigPromise_;\n  }\n  /**\n   * Handle Prompt UI.\n   * @param {boolean} isConsentRequired\n   * @return {Promise<boolean>}\n   */\n  ;\n\n  _proto.initPromptUI_ = function initPromptUI_(isConsentRequired) {\n    var _this10 = this;\n\n    this.consentUI_ = new _consentUi.ConsentUI(this,\n    /** @type {!JsonObject} */\n    (0, _log.devAssert)(this.consentConfig_, 'consent config not found')); // Get current consent state\n\n    return this.consentStateManager_.getConsentInstanceInfo().then(function (info) {\n      if ((0, _consentInfo.hasStoredValue)(info)) {\n        // Has user stored value, no need to prompt\n        return true;\n      }\n\n      if (!isConsentRequired) {\n        // no need to prompt if remote reponse say so\n        // Also no need to display postPromptUI\n        _this10.consentStateManager_.updateConsentInstanceState(_consentInfo.CONSENT_ITEM_STATE.NOT_REQUIRED);\n\n        return false;\n      } // Prompt\n\n\n      _this10.scheduleDisplay_(false);\n\n      return true; // TODO(@zhouyx):\n      // Race condition on consent state change between schedule to\n      // display and display. Add one more check before display\n    });\n  }\n  /**\n   * Handles the display of postPromptUI\n   */\n  ;\n\n  _proto.handlePostPromptUI_ = function handlePostPromptUI_() {\n    var _this11 = this;\n\n    if (!this.postPromptUI_) {\n      return;\n    }\n\n    this.notificationUiManager_.onQueueEmpty(function () {\n      _this11.vsync_.mutate(function () {\n        _this11.postPromptUI_.show(false); // Will need to scheduleLayout for postPromptUI\n        // upon request for using AMP component.\n\n      });\n    });\n    this.notificationUiManager_.onQueueNotEmpty(function () {\n      _this11.vsync_.mutate(function () {\n        _this11.postPromptUI_.hide();\n      });\n    });\n  };\n\n  return AmpConsent;\n}(AMP.BaseElement);\n\nexports.AmpConsent = AmpConsent;\nAMP.extension('amp-consent', '0.1', function (AMP) {\n  AMP.registerElement('amp-consent', AmpConsent, _ampConsent.CSS);\n  AMP.registerServiceForDoc(_notificationUiManager.NOTIFICATION_UI_MANAGER, _notificationUiManager.NotificationUiManager);\n  AMP.registerServiceForDoc(CONSENT_STATE_MANAGER, _consentStateManager.ConsentStateManager);\n  AMP.registerServiceForDoc(CONSENT_POLICY_MANAGER, _consentPolicyManager.ConsentPolicyManager);\n});\n\n},{\"../../../build/amp-consent-0.1.css\":1,\"../../../src/event-helper\":16,\"../../../src/experiments\":17,\"../../../src/log\":20,\"../../../src/service\":24,\"../../../src/service/notification-ui-manager\":25,\"../../../src/services\":26,\"../../../src/style\":29,\"../../../src/types\":30,\"../../../src/url\":33,\"../../../src/utils/object\":36,\"../../../src/utils/promise\":37,\"../../amp-geo/0.1/amp-geo-in-group\":9,\"./consent-config\":4,\"./consent-info\":5,\"./consent-policy-manager\":6,\"./consent-state-manager\":7,\"./consent-ui\":8}],3:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.CMP_CONFIG = void 0;\n\nvar _mode = require(\"../../../src/mode\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The CMP config should looks like\n * {\n *   'consentInstanceId': string, // The key to store consent information\n *   'checkConsentHref': url, // remote endpoint\n *   'promptUISrc': url, // the src for prompt iframe window\n * }\n */\nvar CMP_CONFIG = {};\nexports.CMP_CONFIG = CMP_CONFIG;\n\nif ((0, _mode.getMode)().test || (0, _mode.getMode)().localDev) {\n  CMP_CONFIG['_ping_'] = {\n    'consentInstanceId': '_ping_',\n    'checkConsentHref': '/get-consent-v1',\n    'promptUISrc': '/test/manual/diy-consent.html'\n  };\n}\n\nCMP_CONFIG['didomi'] = {\n  'consentInstanceId': 'didomi',\n  'checkConsentHref': 'https://api.privacy-center.org/amp/check-consent',\n  'promptUISrc': 'https://sdk-amp.privacy-center.org/loader.html'\n};\nCMP_CONFIG['SourcePoint'] = {\n  'consentInstanceId': 'SourcePoint',\n  'checkConsentHref': 'https://sourcepoint.mgr.consensu.org/consent/v2/amp',\n  'promptUISrc': 'https://amp.pm.sourcepoint.mgr.consensu.org/'\n};\n\n},{\"../../../src/mode\":22}],4:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.expandPolicyConfig = expandPolicyConfig;\nexports.ConsentConfig = void 0;\n\nvar _cmps = require(\"./cmps\");\n\nvar _consentState = require(\"../../../src/consent-state\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _json = require(\"../../../src/json\");\n\nvar _experiments = require(\"../../../src/experiments\");\n\nvar _types = require(\"../../../src/types\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TAG = 'amp-consent/consent-config';\nvar ALLOWED_DEPR_CONSENTINSTANCE_ATTRS = {\n  'promptUI': true,\n  'checkConsentHref': true,\n  'promptIfUnknownForGeoGroup': true,\n  'onUpdateHref': true\n};\n\nvar ConsentConfig =\n/*#__PURE__*/\nfunction () {\n  /** @param {!Element} element */\n  function ConsentConfig(element) {\n    /** @private {!Element} */\n    this.element_ = element;\n    /** @private {!Window} */\n\n    this.win_ = (0, _types.toWin)(element.ownerDocument.defaultView);\n    /** @private {?JsonObject} */\n\n    this.config_ = null;\n  }\n  /**\n   * Read validate and return the config\n   * @return {!JsonObject}\n   */\n\n\n  var _proto = ConsentConfig.prototype;\n\n  _proto.getConsentConfig = function getConsentConfig() {\n    if (!this.config_) {\n      this.config_ = this.validateAndParseConfig_();\n    }\n\n    return this.config_;\n  }\n  /**\n   * Convert the inline config to new format\n   * @param {!JsonObject} config\n   * @return {!Object}\n   */\n  ;\n\n  _proto.convertInlineConfigFormat_ = function convertInlineConfigFormat_(config) {\n    var consentsConfigDepr = config['consents'];\n\n    if (!(0, _experiments.isExperimentOn)(this.win_, 'amp-consent-v2')) {\n      (0, _log.userAssert)(consentsConfigDepr, '%s: consents config is required', TAG);\n      (0, _log.userAssert)(Object.keys(consentsConfigDepr).length != 0, \"%s: can't find consent instance\", TAG);\n    }\n\n    if (!config['consents']) {\n      // New format, return\n      return config;\n    } // Assert single consent instance\n\n\n    var keys = Object.keys(consentsConfigDepr);\n    (0, _log.userAssert)(keys.length <= 1, '%s: only single consent instance is supported', TAG);\n\n    if (keys.length > 0) {\n      config['consentInstanceId'] = keys[0]; // Copy config['consents']['key'] to config\n\n      var consentInstanceConfigDepr = config['consents'][keys[0]];\n      var attrs = Object.keys(consentInstanceConfigDepr);\n\n      for (var i = 0; i < attrs.length; i++) {\n        var attr = attrs[i];\n\n        if (!config[attr] && ALLOWED_DEPR_CONSENTINSTANCE_ATTRS[attr]) {\n          // Do not override if has been specified, or the attr is not supported\n          // in consent instance before\n          config[attrs[i]] = consentInstanceConfigDepr[attrs[i]];\n        }\n      }\n    }\n\n    delete config['consents'];\n    return config;\n  }\n  /**\n   * Read and parse consent config\n   * An example valid config json looks like\n   * {\n   *  \"consentInstanceId\": \"ABC\",\n   *  \"checkConsentHref\": \"https://fake.com\"\n   * }\n   * @return {!JsonObject}\n   */\n  ;\n\n  _proto.validateAndParseConfig_ = function validateAndParseConfig_() {\n    var inlineConfig = this.convertInlineConfigFormat_(\n    /** @type {!JsonObject} */\n    (0, _log.userAssert)(this.getInlineConfig_(), '%s: Inline config not found'));\n    var cmpConfig = this.getCMPConfig_();\n    var config =\n    /** @type {!JsonObject} */\n    (0, _object.deepMerge)(cmpConfig || {}, inlineConfig || {}, 1);\n    (0, _log.userAssert)(config['consentInstanceId'], '%s: consentInstanceId to store consent info is required', TAG);\n\n    if (config['policy']) {\n      // Only respect 'default' consent policy;\n      var keys = Object.keys(config['policy']); // TODO (@zhouyx): Validate waitFor value\n\n      for (var i = 0; i < keys.length; i++) {\n        if (keys[i] != 'default') {\n          (0, _log.user)().warn(TAG, 'policy %s is currently not supported and will be ignored', keys[i]);\n          delete config['policy'][keys[i]];\n        }\n      }\n    }\n\n    return config;\n  }\n  /**\n   * Read the inline config from publisher\n   * @return {?JsonObject}\n   */\n  ;\n\n  _proto.getInlineConfig_ = function getInlineConfig_() {\n    // All consent config within the amp-consent component. There will be only\n    // one single amp-consent allowed in page.\n    try {\n      return (0, _json.getChildJsonConfig)(this.element_);\n    } catch (e) {\n      throw (0, _log.user)(this.element_).createError('%s: %s', TAG, e);\n    }\n  }\n  /**\n   * Read and format the CMP config\n   * The returned CMP config should looks like\n   * {\n   *  \"consentInstanceId\": \"foo\",\n   *  \"checkConsentHref\": \"https://fake.com\",\n   *  \"promptUISrc\": \"https://fake.com/promptUI.html\",\n   *  \"uiConfig\": {\n   *    \"overlay\": true\n   *   }\n   * }\n   * @return {?JsonObject}\n   */\n  ;\n\n  _proto.getCMPConfig_ = function getCMPConfig_() {\n    if (!(0, _experiments.isExperimentOn)(this.win_, 'amp-consent-v2')) {\n      return null;\n    }\n\n    var type = this.element_.getAttribute('type');\n\n    if (!type) {\n      return null;\n    }\n\n    (0, _log.userAssert)(_cmps.CMP_CONFIG[type], '%s: invalid CMP type %s', TAG, type);\n    var importConfig = _cmps.CMP_CONFIG[type];\n    this.validateCMPConfig_(importConfig);\n    return importConfig;\n  }\n  /**\n   * Check if the CMP config is valid\n   * @param {!JsonObject} config\n   */\n  ;\n\n  _proto.validateCMPConfig_ = function validateCMPConfig_(config) {\n    var assertValues = ['consentInstanceId', 'checkConsentHref', 'promptUISrc'];\n\n    for (var i = 0; i < assertValues.length; i++) {\n      var attribute = assertValues[i];\n      (0, _log.devAssert)(config[attribute], 'CMP config must specify %s', attribute);\n    }\n  };\n\n  return ConsentConfig;\n}();\n/**\n * Expand the passed in policyConfig and generate predefined policy entires\n * @param {!JsonObject} policyConfig\n * @param {string} consentId\n * @return {!JsonObject}\n */\n\n\nexports.ConsentConfig = ConsentConfig;\n\nfunction expandPolicyConfig(policyConfig, consentId) {\n  // Generate default policy\n  var defaultWaitForItems = {};\n  defaultWaitForItems[consentId] = undefined;\n  var defaultPolicy = {\n    'waitFor': defaultWaitForItems\n  }; // TODO(@zhouyx): unblockOn is internal now.\n\n  var unblockOnAll = [_consentState.CONSENT_POLICY_STATE.UNKNOWN, _consentState.CONSENT_POLICY_STATE.SUFFICIENT, _consentState.CONSENT_POLICY_STATE.INSUFFICIENT, _consentState.CONSENT_POLICY_STATE.UNKNOWN_NOT_REQUIRED];\n  var predefinedNone = {\n    'waitFor': defaultWaitForItems,\n    // Experimental config, do not expose\n    'unblockOn': unblockOnAll\n  };\n  var rejectAllOnZero = {\n    'waitFor': defaultWaitForItems,\n    'timeout': {\n      'seconds': 0,\n      'fallbackAction': 'reject'\n    },\n    'unblockOn': unblockOnAll\n  };\n  policyConfig['_till_responded'] = predefinedNone;\n  policyConfig['_till_accepted'] = defaultPolicy;\n  policyConfig['_auto_reject'] = rejectAllOnZero;\n\n  if (policyConfig && policyConfig['default']) {\n    return policyConfig;\n  }\n\n  policyConfig['default'] = defaultPolicy;\n  return policyConfig;\n}\n\n},{\"../../../src/consent-state\":11,\"../../../src/experiments\":17,\"../../../src/json\":19,\"../../../src/log\":20,\"../../../src/types\":30,\"../../../src/utils/object\":36,\"./cmps\":3}],5:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getStoredConsentInfo = getStoredConsentInfo;\nexports.hasDirtyBit = hasDirtyBit;\nexports.recalculateConsentStateValue = recalculateConsentStateValue;\nexports.composeStoreValue = composeStoreValue;\nexports.calculateLegacyStateValue = calculateLegacyStateValue;\nexports.isConsentInfoStoredValueSame = isConsentInfoStoredValueSame;\nexports.constructConsentInfo = constructConsentInfo;\nexports.hasStoredValue = hasStoredValue;\nexports.getConsentStateValue = getConsentStateValue;\nexports.ConsentInfoDef = exports.CONSENT_ITEM_STATE = void 0;\n\nvar _log = require(\"../../../src/log\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _types = require(\"../../../src/types\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Key values for retriving/storing consent info object.\n * STATE: Set when user accept or reject consent.\n * STRING: Set when a consent string is used to store more granular consent info\n * on vendors.\n * DITRYBIT: Set when the stored consent info need to be revoked next time.\n * @enum {string}\n */\nvar STORAGE_KEY = {\n  STATE: 's',\n  STRING: 'r',\n  IS_DIRTY: 'd'\n};\n/**\n * @enum {number}\n */\n\nvar CONSENT_ITEM_STATE = {\n  ACCEPTED: 1,\n  REJECTED: 2,\n  DISMISSED: 3,\n  NOT_REQUIRED: 4,\n  UNKNOWN: 5 // TODO(@zhouyx): Seperate UI state from consent state. Add consent\n  // requirement state ui_state = {pending, active, complete} consent_state =\n  // {unknown, accepted, rejected}\n\n};\n/**\n * @typedef {{\n *  consentState: CONSENT_ITEM_STATE,\n *  consentString: (string|undefined),\n *  isDirty: (boolean|undefined),\n * }}\n */\n\nexports.CONSENT_ITEM_STATE = CONSENT_ITEM_STATE;\nvar ConsentInfoDef;\n/**\n * Convert the legacy storage value to Consent Info\n * @param {boolean|Object|undefined} value\n * @return {ConsentInfoDef}\n */\n\nexports.ConsentInfoDef = ConsentInfoDef;\n\nfunction getStoredConsentInfo(value) {\n  if (value === undefined) {\n    return constructConsentInfo(CONSENT_ITEM_STATE.UNKNOWN, undefined, undefined);\n  }\n\n  if (typeof value === 'boolean') {\n    // legacy format\n    return getLegacyStoredConsentInfo(value);\n  }\n\n  if (!(0, _types.isObject)(value)) {\n    throw (0, _log.dev)().createError('Invalid stored consent value');\n  }\n\n  var consentState = convertValueToState(value[STORAGE_KEY.STATE]);\n  return constructConsentInfo(consentState, value[STORAGE_KEY.STRING], value[STORAGE_KEY.IS_DIRTY] && value[STORAGE_KEY.IS_DIRTY] === 1);\n}\n/**\n * Helper function to detect if stored consent has dirtyBit set\n * @param {?ConsentInfoDef} consentInfo\n * @return {boolean}\n */\n\n\nfunction hasDirtyBit(consentInfo) {\n  if (!consentInfo) {\n    return false;\n  }\n\n  if ((0, _object.hasOwn)(consentInfo, 'isDirty') && consentInfo['isDirty'] == true) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * Return the new consent state value based on stored state and new state\n * @param {!CONSENT_ITEM_STATE} newState\n * @param {!CONSENT_ITEM_STATE} previousState\n * @return {!CONSENT_ITEM_STATE}\n */\n\n\nfunction recalculateConsentStateValue(newState, previousState) {\n  if (!(0, _types.isEnumValue)(CONSENT_ITEM_STATE, newState)) {\n    newState = CONSENT_ITEM_STATE.UNKNOWN;\n  }\n\n  if (newState == CONSENT_ITEM_STATE.DISMISSED || newState == CONSENT_ITEM_STATE.UNKNOWN) {\n    return previousState || CONSENT_ITEM_STATE.UNKNOWN;\n  }\n\n  if (newState == CONSENT_ITEM_STATE.NOT_REQUIRED) {\n    if (previousState && previousState != CONSENT_ITEM_STATE.UNKNOWN) {\n      return previousState;\n    }\n  }\n\n  return newState;\n}\n/**\n * Compose the value to store to localStorage based on the consentInfo\n * @param {!ConsentInfoDef} consentInfo\n * @param {boolean=} opt_forceNew\n * @return {?boolean|Object}\n */\n\n\nfunction composeStoreValue(consentInfo, opt_forceNew) {\n  if (!opt_forceNew && !consentInfo['consentString'] && consentInfo['isDirty'] === undefined) {\n    // TODO: Remove after turn on amp-consent-v2\n    return calculateLegacyStateValue(consentInfo['consentState']);\n  }\n\n  var obj = (0, _object.map)();\n  var consentState = consentInfo['consentState'];\n\n  if (consentState == CONSENT_ITEM_STATE.ACCEPTED) {\n    obj[STORAGE_KEY.STATE] = 1;\n  } else if (consentState == CONSENT_ITEM_STATE.REJECTED) {\n    obj[STORAGE_KEY.STATE] = 0;\n  } else {\n    // Only store consentString and dirtyBit with reject/accept action\n    return null;\n  }\n\n  if (consentInfo['consentString']) {\n    obj[STORAGE_KEY.STRING] = consentInfo['consentString'];\n  }\n\n  if (consentInfo['isDirty'] === true) {\n    obj[STORAGE_KEY.IS_DIRTY] = 1;\n  }\n\n  if (Object.keys(obj) == 0) {\n    return null;\n  }\n\n  return obj;\n}\n/**\n * Convert the consentState to legacy boolean stored value\n * @param {!CONSENT_ITEM_STATE} consentState\n * @return {?boolean}\n */\n\n\nfunction calculateLegacyStateValue(consentState) {\n  if (consentState == CONSENT_ITEM_STATE.ACCEPTED) {\n    return true;\n  }\n\n  if (consentState == CONSENT_ITEM_STATE.REJECTED) {\n    return false;\n  }\n\n  return null;\n}\n/**\n * Compare two consentInfo.\n * Return true if they can be converted to the same stored value.\n * @param {?ConsentInfoDef} infoA\n * @param {?ConsentInfoDef} infoB\n * @param {boolean=} opt_isDirty\n * @return {boolean}\n */\n\n\nfunction isConsentInfoStoredValueSame(infoA, infoB, opt_isDirty) {\n  if (!infoA && !infoB) {\n    return true;\n  }\n\n  if (infoA && infoB) {\n    var stateEqual = calculateLegacyStateValue(infoA['consentState']) === calculateLegacyStateValue(infoB['consentState']);\n    var stringEqual = (infoA['consentString'] || '') === (infoB['consentString'] || '');\n    var isDirtyEqual;\n\n    if (opt_isDirty) {\n      isDirtyEqual = !!infoA['isDirty'] === !!opt_isDirty;\n    } else {\n      isDirtyEqual = !!infoA['isDirty'] === !!infoB['isDirty'];\n    }\n\n    return stateEqual && stringEqual && isDirtyEqual;\n  }\n\n  return false;\n}\n/**\n * Convert the legacy boolean stored value to consentInfo object\n * @param {boolean} value\n * @return {!ConsentInfoDef}\n */\n\n\nfunction getLegacyStoredConsentInfo(value) {\n  var state = convertValueToState(value);\n  return constructConsentInfo(state, undefined, undefined);\n}\n/**\n * Construct the consentInfo object from values\n * @param {CONSENT_ITEM_STATE} consentState\n * @param {string=} opt_consentString\n * @param {boolean=} opt_isDirty\n * @return {!ConsentInfoDef}\n */\n\n\nfunction constructConsentInfo(consentState, opt_consentString, opt_isDirty) {\n  return {\n    'consentState': consentState,\n    'consentString': opt_consentString,\n    'isDirty': opt_isDirty\n  };\n}\n/**\n * Helper function to convert stored value to CONSENT_ITEM_STATE value\n * @param {*} value\n * @return {!CONSENT_ITEM_STATE}\n */\n\n\nfunction convertValueToState(value) {\n  if (value === true || value === 1) {\n    return CONSENT_ITEM_STATE.ACCEPTED;\n  } else if (value === false || value === 0) {\n    return CONSENT_ITEM_STATE.REJECTED;\n  }\n\n  return CONSENT_ITEM_STATE.UNKNOWN;\n}\n/**\n *\n * @param {!ConsentInfoDef} info\n * @return {boolean}\n */\n\n\nfunction hasStoredValue(info) {\n  if (info['consentString']) {\n    return true;\n  }\n\n  return info['consentState'] === CONSENT_ITEM_STATE.ACCEPTED || info['consentState'] === CONSENT_ITEM_STATE.REJECTED;\n}\n/**\n * Convert the CONSENT_ITEM_STATE back to readable string\n * @param {!CONSENT_ITEM_STATE} enumState\n * @return {string}\n */\n\n\nfunction getConsentStateValue(enumState) {\n  if (enumState === CONSENT_ITEM_STATE.ACCEPTED) {\n    return 'accepted';\n  }\n\n  if (enumState === CONSENT_ITEM_STATE.REJECTED) {\n    return 'rejected';\n  }\n\n  return 'unknown';\n}\n\n},{\"../../../src/log\":20,\"../../../src/types\":30,\"../../../src/utils/object\":36}],6:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.ConsentPolicyInstance = exports.ConsentPolicyManager = void 0;\n\nvar _consentInfo = require(\"./consent-info\");\n\nvar _consentState = require(\"../../../src/consent-state\");\n\nvar _promise = require(\"../../../src/utils/promise\");\n\nvar _observable = require(\"../../../src/observable\");\n\nvar _service = require(\"../../../src/service\");\n\nvar _experiments = require(\"../../../src/experiments\");\n\nvar _types = require(\"../../../src/types\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _log = require(\"../../../src/log\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar CONSENT_STATE_MANAGER = 'consentStateManager';\nvar TAG = 'consent-policy-manager';\nvar WHITELIST_POLICY = {\n  'default': true,\n  '_till_responded': true,\n  '_till_accepted': true,\n  '_auto_reject': true\n};\n\nvar ConsentPolicyManager =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of ConsentPolicyManager.\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  function ConsentPolicyManager(ampdoc) {\n    /** @private {!../../../src/service/ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n    /** @private {!Object<string, ?Deferred>} */\n\n    this.policyInstancesDeferred_ = (0, _object.map)();\n    /** @private {!Object<string, ConsentPolicyInstance>} */\n\n    this.instances_ = (0, _object.map)();\n    /** @private {!Promise} */\n\n    this.ConsentStateManagerPromise_ = (0, _service.getServicePromiseForDoc)(this.ampdoc_, CONSENT_STATE_MANAGER);\n    /** @private {!Deferred} */\n\n    this.consentPromptInitiated_ = new _promise.Deferred();\n    var consentValueInitiated = new _promise.Deferred();\n    /** @private {!Promise} */\n\n    this.consentValueInitiatedPromise_ = consentValueInitiated.promise;\n    /** @private {?function()} */\n\n    this.consentValueInitiatedResolver_ = consentValueInitiated.resolve;\n    /** @private {!Observable} */\n\n    this.consentStateChangeObservables_ = new _observable.Observable();\n    /** @private {?string} */\n\n    this.consentInstanceIdDepr_ = null;\n    /** @private {?CONSENT_ITEM_STATE} */\n\n    this.consentState_ = null;\n    /** @private {?string} */\n\n    this.consentString_ = null;\n  }\n  /**\n   * Is Multi-consent experiment enabled?\n   *\n   * @param {!Window} win\n   * @return {boolean}\n   */\n\n\n  ConsentPolicyManager.isMultiSupported = function isMultiSupported(win) {\n    return (0, _experiments.isExperimentOn)(win, 'multi-consent');\n  }\n  /**\n   *\n   * @param {string} consentInstanceId\n   */\n  ;\n\n  var _proto = ConsentPolicyManager.prototype;\n\n  _proto.setLegacyConsentInstanceId = function setLegacyConsentInstanceId(consentInstanceId) {\n    this.consentInstanceIdDepr_ = consentInstanceId;\n    this.init_();\n  }\n  /**\n   * Register the policy instance\n   * Example policy config format:\n   * {\n   *   \"waitFor\": {\n   *     \"consentABC\": []\n   *   }\n   *   \"timeout\": {\n   *     \"seconds\": 1,\n   *     \"fallbackAction\": 'reject'\n   *   }\n   * }\n   *\n   * TODO: Add support to timeout\n   * @param {string} policyId\n   * @param {!JsonObject} config\n   */\n  ;\n\n  _proto.registerConsentPolicyInstance = function registerConsentPolicyInstance(policyId, config) {\n    var _this = this;\n\n    if (this.instances_[policyId]) {\n      // Note <amp-next-page> could wait for the same consent policy.\n      // Return without thowing error.\n      // TODO: Make sure multiple consentPolicyManager services is installed\n      // for every <amp-next-page>\n      return;\n    }\n\n    var waitFor = Object.keys(config['waitFor'] || {});\n\n    if (waitFor.length !== 1 || waitFor[0] !== this.consentInstanceIdDepr_) {\n      (0, _log.user)().error(TAG, 'invalid waitFor value, consent policy will never resolve');\n      return;\n    }\n\n    var instance = new ConsentPolicyInstance(config);\n    this.instances_[policyId] = instance;\n\n    if (this.policyInstancesDeferred_[policyId]) {\n      this.policyInstancesDeferred_[policyId].resolve();\n      this.policyInstancesDeferred_[policyId] = null;\n    }\n\n    this.consentValueInitiatedPromise_.then(function () {\n      if (_this.consentState_) {\n        // Has initial consent state value. Evaluate immediately\n        instance.evaluate(_this.consentState_);\n      }\n\n      _this.consentStateChangeObservables_.add(function (state) {\n        instance.evaluate(state);\n      });\n\n      _this.consentPromptInitiated_.promise.then(function () {\n        instance.startTimeout(_this.ampdoc_.win);\n      });\n    });\n  }\n  /**\n   * Helper method to register to listen to consent instance value change\n   * and get the initial consent value\n   */\n  ;\n\n  _proto.init_ = function init_() {\n    var _this2 = this;\n\n    // Set up handler to listen to consent instance value change.\n    this.ConsentStateManagerPromise_.then(function (manager) {\n      manager.whenConsentReady().then(function () {\n        manager.onConsentStateChange(function (info) {\n          _this2.consentStateChangeHandler_(info);\n\n          if (_this2.consentValueInitiatedResolver_) {\n            _this2.consentValueInitiatedResolver_();\n\n            _this2.consentValueInitiatedResolver_ = null;\n          }\n        });\n      });\n    });\n  }\n  /**\n   * Inform consent policy manager that all consent instances\n   * state has been initiated with remote value. And ready to start timeout\n   */\n  ;\n\n  _proto.enableTimeout = function enableTimeout() {\n    this.consentPromptInitiated_.resolve();\n  }\n  /**\n   * Handle initial consent instance value and following consent value change\n   * @param {!ConsentInfoDef} info\n   */\n  ;\n\n  _proto.consentStateChangeHandler_ = function consentStateChangeHandler_(info) {\n    var state = info['consentState'];\n    var consentStr = info['consentString'];\n    var prevConsentStr = this.consentString_;\n    this.consentString_ = consentStr;\n\n    if (state === _consentInfo.CONSENT_ITEM_STATE.UNKNOWN) {\n      // consent state has not been resolved yet.\n      return;\n    }\n\n    if (state == _consentInfo.CONSENT_ITEM_STATE.NOT_REQUIRED) {\n      var shouldOverwrite = this.consentState_ != _consentInfo.CONSENT_ITEM_STATE.ACCEPTED && this.consentState_ != _consentInfo.CONSENT_ITEM_STATE.REJECTED; // Ignore the consent item state and overwrite state value.\n\n      if (shouldOverwrite) {\n        this.consentState_ = _consentInfo.CONSENT_ITEM_STATE.NOT_REQUIRED;\n      }\n    } else if (state == _consentInfo.CONSENT_ITEM_STATE.DISMISSED) {\n      // When dismissed, use the old value\n      if (this.consentState_ === null) {\n        this.consentState_ = _consentInfo.CONSENT_ITEM_STATE.UNKNOWN;\n      } // consentString doesn't change with dismiss action\n\n\n      this.consentString_ = prevConsentStr;\n    } else {\n      this.consentState_ = state;\n    }\n\n    this.consentStateChangeObservables_.fire(this.consentState_);\n  }\n  /**\n   * Used to wait for policy to resolve;\n   * @param {string} policyId\n   * @return {!Promise<CONSENT_POLICY_STATE>}\n   */\n  ;\n\n  _proto.whenPolicyResolved = function whenPolicyResolved(policyId) {\n    var _this3 = this;\n\n    // If customized policy is not supported\n    if (!WHITELIST_POLICY[policyId]) {\n      (0, _log.user)().error(TAG, 'can not find policy %s, only predefined policies are supported', policyId);\n      return Promise.resolve(_consentState.CONSENT_POLICY_STATE.UNKNOWN);\n    }\n\n    return this.whenPolicyInstanceRegistered_(policyId).then(function () {\n      return _this3.instances_[policyId].getReadyPromise().then(function () {\n        return _this3.instances_[policyId].getCurrentPolicyStatus();\n      });\n    });\n  }\n  /**\n   * Wait for policy to resolve and check if it should be unblocked\n   * @param {string} policyId\n   * @return {!Promise<boolean>}\n   */\n  ;\n\n  _proto.whenPolicyUnblock = function whenPolicyUnblock(policyId) {\n    var _this4 = this;\n\n    // If customized policy is not supported\n    if (!WHITELIST_POLICY[policyId]) {\n      (0, _log.user)().error(TAG, 'can not find policy %s, only predefined policies are supported', policyId);\n      return Promise.resolve(false);\n    }\n\n    return this.whenPolicyInstanceRegistered_(policyId).then(function () {\n      return _this4.instances_[policyId].getReadyPromise().then(function () {\n        return _this4.instances_[policyId].shouldUnblock();\n      });\n    });\n  }\n  /**\n   * Get shared data of a policy. If multiple consent instances return\n   * sharedData, a merge will be done. For any conflict keys, the value from\n   * later consent instance (as defined in the policy config) will override\n   * the previous ones.\n   *\n   * @param {string} policyId\n   * @return {!Promise<Object>}\n   */\n  ;\n\n  _proto.getMergedSharedData = function getMergedSharedData(policyId) {\n    var _this5 = this;\n\n    return this.whenPolicyResolved(policyId).then(function () {\n      return _this5.ConsentStateManagerPromise_;\n    }).then(function (manager) {\n      return manager.getConsentInstanceSharedData();\n    });\n  }\n  /**\n   * Get the consent string value of a policy. Return a promise that resolves\n   * when the policy resolves.\n   * @param {string} policyId\n   * @return {!Promise<?string>}\n   */\n  ;\n\n  _proto.getConsentStringInfo = function getConsentStringInfo(policyId) {\n    var _this6 = this;\n\n    return this.whenPolicyResolved(policyId).then(function () {\n      return _this6.consentString_;\n    });\n  }\n  /**\n   * Wait for policy instance to be registered.\n   * @param {string} policyId\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.whenPolicyInstanceRegistered_ = function whenPolicyInstanceRegistered_(policyId) {\n    if (this.instances_[policyId]) {\n      return Promise.resolve();\n    }\n\n    if (!this.policyInstancesDeferred_[policyId]) {\n      this.policyInstancesDeferred_[policyId] = new _promise.Deferred();\n    }\n\n    return (\n      /** @type {!Promise} */\n      this.policyInstancesDeferred_[policyId].promise\n    );\n  };\n\n  return ConsentPolicyManager;\n}();\n\nexports.ConsentPolicyManager = ConsentPolicyManager;\n\nvar ConsentPolicyInstance =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of ConsentPolicyInstance.\n   * @param {!JsonObject} config\n   */\n  function ConsentPolicyInstance(config) {\n    /** @private {!JsonObject} */\n    this.config_ = config;\n    var readyDeferred = new _promise.Deferred();\n    /** @private {!Promise} */\n\n    this.readyPromise_ = readyDeferred.promise;\n    /** @private {?function()} */\n\n    this.readyResolver_ = readyDeferred.resolve;\n    /** @private {CONSENT_POLICY_STATE} */\n\n    this.status_ = _consentState.CONSENT_POLICY_STATE.UNKNOWN;\n    /** @private {!Array<CONSENT_POLICY_STATE>} */\n\n    this.unblockStateLists_ = config['unblockOn'] || [_consentState.CONSENT_POLICY_STATE.SUFFICIENT, _consentState.CONSENT_POLICY_STATE.UNKNOWN_NOT_REQUIRED];\n  }\n  /**\n   * @param {Window} win\n   */\n\n\n  var _proto2 = ConsentPolicyInstance.prototype;\n\n  _proto2.startTimeout = function startTimeout(win) {\n    var _this7 = this;\n\n    var timeoutConfig = this.config_['timeout'];\n    var timeoutSecond = null;\n    var fallbackState;\n\n    if (timeoutConfig != undefined) {\n      // timeoutConfig could equal to 0;\n      if ((0, _types.isObject)(timeoutConfig)) {\n        /**\n         * \"timeout\": {\n         *   \"seconds\" : 1,\n         *   \"fallbackAction\": \"reject\"\n         * }\n         */\n        if (timeoutConfig['fallbackAction'] && timeoutConfig['fallbackAction'] == 'reject') {\n          fallbackState = _consentInfo.CONSENT_ITEM_STATE.REJECTED;\n        } else if (timeoutConfig['fallbackAction'] && timeoutConfig['fallbackAction'] != 'dismiss') {\n          (0, _log.user)().error(TAG, 'unsupported fallbackAction %s', timeoutConfig['fallbackAction']);\n        }\n\n        timeoutSecond = timeoutConfig['seconds'];\n      } else {\n        timeoutSecond = timeoutConfig;\n      }\n\n      (0, _log.userAssert)((0, _types.isFiniteNumber)(timeoutSecond), 'invalid timeout value %s', timeoutSecond);\n    }\n\n    if (timeoutSecond != null) {\n      win.setTimeout(function () {\n        // Force evaluate on timeout\n        fallbackState = fallbackState || _consentInfo.CONSENT_ITEM_STATE.UNKNOWN;\n\n        _this7.evaluate(fallbackState, true);\n      }, timeoutSecond * 1000);\n    }\n  }\n  /**\n   * Evaluate the incoming consent state and determine if the policy instance\n   * should be resolved and what the policy state should be.\n   * @param {CONSENT_ITEM_STATE} state\n   * @param {boolean} isFallback\n   */\n  ;\n\n  _proto2.evaluate = function evaluate(state, isFallback) {\n    if (isFallback === void 0) {\n      isFallback = false;\n    }\n\n    if (!state) {\n      // Not ready for evaluate yet\n      return;\n    }\n\n    if (isFallback && !this.readyResolver_) {\n      // Discard fallback state if consent status has resolve before timeout.\n      return;\n    }\n\n    if (state === _consentInfo.CONSENT_ITEM_STATE.ACCEPTED) {\n      this.status_ = _consentState.CONSENT_POLICY_STATE.SUFFICIENT;\n    } else if (state === _consentInfo.CONSENT_ITEM_STATE.REJECTED) {\n      this.status_ = _consentState.CONSENT_POLICY_STATE.INSUFFICIENT;\n    } else if (state === _consentInfo.CONSENT_ITEM_STATE.NOT_REQUIRED) {\n      this.status_ = _consentState.CONSENT_POLICY_STATE.UNKNOWN_NOT_REQUIRED;\n    } else {\n      this.status_ = _consentState.CONSENT_POLICY_STATE.UNKNOWN;\n    }\n\n    if (this.readyResolver_) {\n      this.readyResolver_();\n      this.readyResolver_ = null;\n    }\n  }\n  /**\n   * Return a promise that resolved when policy ready.\n   * Note: the promise can be reset if use toggle consent state\n   * @return {!Promise}\n   */\n  ;\n\n  _proto2.getReadyPromise = function getReadyPromise() {\n    return this.readyPromise_;\n  }\n  /**\n   * Returns the current consent policy state\n   * @return {CONSENT_POLICY_STATE}\n   */\n  ;\n\n  _proto2.getCurrentPolicyStatus = function getCurrentPolicyStatus() {\n    return this.status_;\n  }\n  /**\n   * Returns whether the current consent policy state should be unblocked\n   * Caller need to make sure that policy status has resolved\n   * @return {boolean}\n   */\n  ;\n\n  _proto2.shouldUnblock = function shouldUnblock() {\n    return this.unblockStateLists_.indexOf(this.status_) > -1;\n  };\n\n  return ConsentPolicyInstance;\n}();\n\nexports.ConsentPolicyInstance = ConsentPolicyInstance;\n\n},{\"../../../src/consent-state\":11,\"../../../src/experiments\":17,\"../../../src/log\":20,\"../../../src/observable\":23,\"../../../src/service\":24,\"../../../src/types\":30,\"../../../src/utils/object\":36,\"../../../src/utils/promise\":37,\"./consent-info\":5}],7:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.ConsentInstance = exports.ConsentStateManager = void 0;\n\nvar _consentInfo = require(\"./consent-info\");\n\nvar _promise = require(\"../../../src/utils/promise\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _url = require(\"../../../src/url\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _experiments = require(\"../../../src/experiments\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TAG = 'CONSENT-STATE-MANAGER';\nvar CID_SCOPE = 'AMP-CONSENT';\n\nvar ConsentStateManager =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of ConsentStateManager.\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  function ConsentStateManager(ampdoc) {\n    /** @private {!../../../src/service/ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n    /** @private {?string} */\n\n    this.instanceId_ = null;\n    /** @private {?ConsentInstance} */\n\n    this.instance_ = null;\n    /** @private {?function(!ConsentInfoDef)} */\n\n    this.consentChangeHandler_ = null;\n    /** @private {?Promise} */\n\n    this.consentReadyPromise_ = null;\n    /** @private {?function()} */\n\n    this.consentReadyResolver_ = null;\n  }\n  /**\n   * Register and create a consent instance to manage state\n   * @param {string} instanceId\n   * @param {!Object} config\n   */\n\n\n  var _proto = ConsentStateManager.prototype;\n\n  _proto.registerConsentInstance = function registerConsentInstance(instanceId, config) {\n    if (this.instance_) {\n      (0, _log.dev)().error(TAG, 'Cannot register consent instance %s, ' + 'instance %s has already been registered.', instanceId, this.instanceId_);\n      return;\n    }\n\n    this.instanceId_ = instanceId;\n    this.instance_ = new ConsentInstance(this.ampdoc_, instanceId, config);\n\n    if (this.consentReadyResolver_) {\n      this.consentReadyResolver_();\n      this.consentReadyResolver_ = null;\n    }\n  }\n  /**\n   * Update consent instance state\n   * @param {CONSENT_ITEM_STATE} state\n   * @param {string=} consentStr\n   */\n  ;\n\n  _proto.updateConsentInstanceState = function updateConsentInstanceState(state, consentStr) {\n    if (!this.instance_) {\n      (0, _log.dev)().error(TAG, 'instance not registered');\n      return;\n    }\n\n    this.instance_.update(state, consentStr);\n\n    if (this.consentChangeHandler_) {\n      this.consentChangeHandler_((0, _consentInfo.constructConsentInfo)(state, consentStr));\n    }\n  }\n  /**\n   * Get last consent instance stored.\n   * @return {Promise<!ConsentInfoDef>}\n   */\n  ;\n\n  _proto.getLastConsentInstanceInfo = function getLastConsentInstanceInfo() {\n    (0, _log.devAssert)(this.instance_, '%s: cannot find the instance', TAG);\n    return this.instance_.get();\n  }\n  /**\n   * Get local consent instance state\n   * @return {Promise<!ConsentInfoDef>}\n   */\n  ;\n\n  _proto.getConsentInstanceInfo = function getConsentInstanceInfo() {\n    (0, _log.devAssert)(this.instance_, '%s: cannot find the instance', TAG);\n    return this.instance_.get().then(function (info) {\n      if ((0, _consentInfo.hasDirtyBit)(info)) {\n        return (0, _consentInfo.constructConsentInfo)(_consentInfo.CONSENT_ITEM_STATE.UNKNOWN);\n      }\n\n      return info;\n    });\n  }\n  /**\n   * Register the handler for every consent state change.\n   * @param {function(!ConsentInfoDef)} handler\n   */\n  ;\n\n  _proto.onConsentStateChange = function onConsentStateChange(handler) {\n    (0, _log.devAssert)(this.instance_, '%s: cannot find the instance', TAG);\n    (0, _log.devAssert)(!this.consentChangeHandler_, '%s: Duplicate consent change handler, will be ignored', TAG);\n    this.consentChangeHandler_ = handler; // Fire first consent instance state.\n\n    this.getConsentInstanceInfo().then(function (info) {\n      handler(info);\n    });\n  }\n  /**\n   * Sets a promise which resolves to a shareData object that is to be returned\n   * from the remote endpoint.\n   *\n   * @param {Promise<?Object>} sharedDataPromise\n   */\n  ;\n\n  _proto.setConsentInstanceSharedData = function setConsentInstanceSharedData(sharedDataPromise) {\n    (0, _log.devAssert)(this.instance_, '%s: cannot find the instance', TAG);\n    this.instance_.sharedDataPromise = sharedDataPromise;\n  }\n  /**\n   * Sets the dirty bit so current consent info won't be used for\n   * decision making on next visit\n   */\n  ;\n\n  _proto.setDirtyBit = function setDirtyBit() {\n    this.instance_.setDirtyBit();\n  }\n  /**\n   * Returns a promise that resolves to a shareData object that is returned\n   * from the remote endpoint.\n   *\n   * @return {?Promise<?Object>}\n   */\n  ;\n\n  _proto.getConsentInstanceSharedData = function getConsentInstanceSharedData() {\n    (0, _log.devAssert)(this.instance_, '%s: cannot find the instance', TAG);\n    return this.instance_.sharedDataPromise;\n  }\n  /**\n   * Returns a promise that's resolved when consent instance is ready.\n   * @return {*} TODO(#23582): Specify return type\n   */\n  ;\n\n  _proto.whenConsentReady = function whenConsentReady() {\n    if (this.instance_) {\n      return Promise.resolve();\n    }\n\n    if (!this.consentReadyPromise_) {\n      var deferred = new _promise.Deferred();\n      this.consentReadyPromise_ = deferred.promise;\n      this.consentReadyResolver_ = deferred.resolve;\n    }\n\n    return this.consentReadyPromise_;\n  };\n\n  return ConsentStateManager;\n}();\n/**\n * @visibleForTesting\n */\n\n\nexports.ConsentStateManager = ConsentStateManager;\n\nvar ConsentInstance =\n/*#__PURE__*/\nfunction () {\n  /**\n   *\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {string} id\n   * @param {!Object} config\n   */\n  function ConsentInstance(ampdoc, id, config) {\n    /** @private {!../../../src/service/ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n    /** @private {boolean} */\n\n    this.isAmpConsentV2ExperimentOn_ = (0, _experiments.isExperimentOn)(ampdoc.win, 'amp-consent-v2');\n    /** @private {string} */\n\n    this.id_ = id;\n    /** @public {?Promise<Object>} */\n\n    this.sharedDataPromise = null;\n    /** @private {Promise<!../../../src/service/storage-impl.Storage>} */\n\n    this.storagePromise_ = _services.Services.storageForDoc(ampdoc);\n    /** @private {?ConsentInfoDef}*/\n\n    this.localConsentInfo_ = null;\n    /** @private {?ConsentInfoDef} */\n\n    this.savedConsentInfo_ = null;\n    /** @private {string} */\n\n    this.storageKey_ = 'amp-consent:' + id;\n    /** @private {?string} */\n\n    this.onUpdateHref_ = config['onUpdateHref'] || null;\n\n    if (this.onUpdateHref_) {\n      (0, _url.assertHttpsUrl)(this.onUpdateHref_, 'AMP-CONSENT');\n    }\n    /** @private {boolean|undefined} */\n\n\n    this.hasDirtyBitNext_ = undefined;\n  }\n  /**\n   * Set dirtyBit to current consent info. Refresh stored consent value with\n   * dirtyBit\n   * @return {*} TODO(#23582): Specify return type\n   */\n\n\n  var _proto2 = ConsentInstance.prototype;\n\n  _proto2.setDirtyBit = function setDirtyBit() {\n    var _this = this;\n\n    // Note: this.hasDirtyBitNext_ is only set to true when 'forcePromptNext'\n    // is set to true and we need to set dirtyBit for next visit.\n    this.hasDirtyBitNext_ = true;\n    return this.get().then(function (info) {\n      if ((0, _consentInfo.hasDirtyBit)(info)) {\n        // Current stored value has dirtyBit and is no longer valid.\n        // No need to update with dirtyBit\n        return;\n      }\n\n      _this.update(info['consentState'], info['consentString'], true);\n    });\n  }\n  /**\n   * Update the local consent state list\n   * @param {!CONSENT_ITEM_STATE} state\n   * @param {string=} consentString\n   * @param {boolean=} opt_systemUpdate\n   */\n  ;\n\n  _proto2.update = function update(state, consentString, opt_systemUpdate) {\n    var localState = this.localConsentInfo_ && this.localConsentInfo_['consentState'];\n    var localConsentStr = this.localConsentInfo_ && this.localConsentInfo_['consentString'];\n    var calculatedState = (0, _consentInfo.recalculateConsentStateValue)(state, localState);\n\n    if (state === _consentInfo.CONSENT_ITEM_STATE.DISMISSED) {\n      // If state is dismissed, use the old consent string.\n      this.localConsentInfo_ = (0, _consentInfo.constructConsentInfo)(calculatedState, localConsentStr);\n      return;\n    } // Any user update makes the current state valid, thus remove dirtyBit\n    // from localConsentInfo_\n\n\n    var oldValue = this.localConsentInfo_;\n\n    if (opt_systemUpdate && (0, _consentInfo.hasDirtyBit)(oldValue)) {\n      this.localConsentInfo_ = (0, _consentInfo.constructConsentInfo)(calculatedState, consentString, true);\n    } else {\n      // Any user update makes the current state valid, thus remove dirtyBit\n      // from localConsentInfo_\n      this.localConsentInfo_ = (0, _consentInfo.constructConsentInfo)(calculatedState, consentString);\n    }\n\n    var newConsentInfo = (0, _consentInfo.constructConsentInfo)(calculatedState, consentString, this.hasDirtyBitNext_);\n\n    if ((0, _consentInfo.isConsentInfoStoredValueSame)(newConsentInfo, this.savedConsentInfo_)) {\n      // Only update/save to localstorage if it's not dismiss\n      // And the value is different from what is stored.\n      return;\n    } // TODO(@zhouyx): Need force update to update timestamp\n\n\n    this.updateStoredValue_(newConsentInfo);\n  }\n  /**\n   * Write the new value to localStorage and send updateHrefRequest\n   * @param {!ConsentInfoDef} consentInfo\n   */\n  ;\n\n  _proto2.updateStoredValue_ = function updateStoredValue_(consentInfo) {\n    var _this2 = this;\n\n    this.storagePromise_.then(function (storage) {\n      if (!(0, _consentInfo.isConsentInfoStoredValueSame)(consentInfo, _this2.localConsentInfo_, _this2.hasDirtyBitNext_)) {\n        // If state has changed. do not store outdated value.\n        return;\n      }\n\n      var consentStr = consentInfo['consentString'];\n\n      if (consentStr && consentStr.length > 150) {\n        // Verify the length of consentString.\n        // 150 * 2 (utf8Encode) * 4/3 (base64) = 400 bytes.\n        // TODO: Need utf8Encode if necessary.\n        (0, _log.user)().error(TAG, 'Cannot store consentString which length exceeds 150 ' + 'Previous stored consentInfo will be cleared'); // If new consentInfo value cannot be stored, need to remove previous\n        // value\n\n        storage.remove(_this2.storageKey_); // TODO: Good to have a way to inform CMP service in this case\n\n        return;\n      }\n\n      var value = (0, _consentInfo.composeStoreValue)(consentInfo, _this2.isAmpConsentV2ExperimentOn_);\n\n      if (value == null) {\n        // Value can be false, do not use !value check\n        // Nothing to store to localStorage\n        return;\n      }\n\n      _this2.savedConsentInfo_ = consentInfo;\n      storage.setNonBoolean(_this2.storageKey_, value);\n\n      _this2.sendUpdateHrefRequest_(consentInfo);\n    });\n  }\n  /**\n   * Get the local consent state list\n   * @return {!Promise<!ConsentInfoDef>}\n   */\n  ;\n\n  _proto2.get = function get() {\n    var _this3 = this;\n\n    if (this.localConsentInfo_) {\n      // Return the local value if it has been processed before\n      return Promise.resolve(this.localConsentInfo_);\n    }\n\n    var storage;\n    return this.storagePromise_.then(function (s) {\n      storage = s;\n      return storage.get(_this3.storageKey_);\n    }).then(function (storedValue) {\n      if (_this3.localConsentInfo_) {\n        // If local value has been updated, return most updated value;\n        return _this3.localConsentInfo_;\n      }\n\n      var consentInfo = (0, _consentInfo.getStoredConsentInfo)(storedValue);\n      _this3.savedConsentInfo_ = consentInfo;\n\n      if ((0, _consentInfo.hasDirtyBit)(consentInfo)) {\n        // clear stored value.\n        _this3.sendUpdateHrefRequest_((0, _consentInfo.constructConsentInfo)(_consentInfo.CONSENT_ITEM_STATE.UNKNOWN));\n\n        storage.remove(_this3.storageKey_);\n        _this3.savedConsentInfo_ = null;\n      } // Note: this.localConsentInfo dirtyBit can only be set to false\n      // if the stored value has dirtyBit.\n      // Any local update reset the value to true.\n\n\n      _this3.localConsentInfo_ = consentInfo;\n      return _this3.localConsentInfo_;\n    }).catch(function (e) {\n      (0, _log.dev)().error(TAG, 'Failed to read storage', e);\n      return (0, _consentInfo.constructConsentInfo)(_consentInfo.CONSENT_ITEM_STATE.UNKNOWN);\n    });\n  }\n  /**\n   * send a POST request to the updateHref with userId with fixed scope\n   * and consentInstanceIds\n   * @param {!ConsentInfoDef} consentInfo\n   */\n  ;\n\n  _proto2.sendUpdateHrefRequest_ = function sendUpdateHrefRequest_(consentInfo) {\n    var _this4 = this;\n\n    if (!this.onUpdateHref_) {\n      return;\n    }\n\n    if ((0, _consentInfo.hasDirtyBit)(consentInfo)) {\n      // No need to send update request if the stored consent info is dirty\n      return;\n    }\n\n    var legacyConsentState = (0, _consentInfo.calculateLegacyStateValue)(consentInfo['consentState']);\n\n    var cidPromise = _services.Services.cidForDoc(this.ampdoc_).then(function (cid) {\n      return cid.get({\n        scope: CID_SCOPE,\n        createCookieIfNotPresent: true\n      }, Promise.resolve());\n    });\n\n    cidPromise.then(function (userId) {\n      var request =\n      /** @type {!JsonObject} */\n      {\n        // Unfortunately we need to keep the name to be backward compatible\n        'consentInstanceId': _this4.id_,\n        'ampUserId': userId\n      };\n\n      if (legacyConsentState != null) {\n        request['consentState'] = legacyConsentState;\n      }\n\n      request['consentStateValue'] = (0, _consentInfo.getConsentStateValue)(consentInfo['consentState']);\n\n      if (consentInfo['consentString']) {\n        request['consentString'] = consentInfo['consentString'];\n      }\n\n      var init = {\n        credentials: 'include',\n        method: 'POST',\n        body: request,\n        ampCors: false\n      };\n\n      _this4.ampdoc_.whenFirstVisible().then(function () {\n        _services.Services.xhrFor(_this4.ampdoc_.win).fetchJson(\n        /** @type {string} */\n        _this4.onUpdateHref_, init);\n      });\n    });\n  };\n\n  return ConsentInstance;\n}();\n\nexports.ConsentInstance = ConsentInstance;\n\n},{\"../../../src/experiments\":17,\"../../../src/log\":20,\"../../../src/services\":26,\"../../../src/url\":33,\"../../../src/utils/promise\":37,\"./consent-info\":5}],8:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.ConsentUI = exports.consentUiClasses = void 0;\n\nvar _promise = require(\"../../../src/utils/promise\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _url = require(\"../../../src/url\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _dom = require(\"../../../src/dom\");\n\nvar _consentInfo = require(\"./consent-info\");\n\nvar _eventHelper = require(\"../../../src/event-helper\");\n\nvar _service = require(\"../../../src/service\");\n\nvar _staticTemplate = require(\"../../../src/static-template\");\n\nvar _experiments = require(\"../../../src/experiments\");\n\nvar _style = require(\"../../../src/style\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n      <svg viewBox=\\\"0 0 40 40\\\">\\n        <defs>\\n          <linearGradient id=\\\"grad\\\">\\n            <stop stop-color=\\\"rgb(105, 105, 105)\\\"></stop>\\n            <stop offset=\\\"100%\\\"\\n            stop-color=\\\"rgb(105, 105, 105)\\\"\\n            stop-opacity=\\\"0\\\"></stop>\\n          </linearGradient>\\n        </defs>\\n        <path d=\\\"M11,4.4 A18,18, 0,1,0, 38,20\\\" stroke=\\\"url(#grad)\\\"></path>\\n      </svg>\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) { if (!raw) { raw = strings.slice(0); } strings.raw = raw; return strings; }\n\nvar TAG = 'amp-consent-ui';\nvar CONSENT_STATE_MANAGER = 'consentStateManager';\nvar DEFAULT_INITIAL_HEIGHT = '30vh';\nvar DEFAULT_ENABLE_BORDER = true; // Classes for consent UI\n\nvar consentUiClasses = {\n  iframeFullscreen: 'i-amphtml-consent-ui-iframe-fullscreen',\n  iframeActive: 'i-amphtml-consent-ui-iframe-active',\n  in: 'i-amphtml-consent-ui-in',\n  loading: 'i-amphtml-consent-ui-loading',\n  fill: 'i-amphtml-consent-ui-fill',\n  placeholder: 'i-amphtml-consent-ui-placeholder',\n  mask: 'i-amphtml-consent-ui-mask',\n  enableBorder: 'i-amphtml-consent-ui-enable-border'\n};\nexports.consentUiClasses = consentUiClasses;\n\nvar ConsentUI =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!AMP.BaseElement} baseInstance\n   * @param {!JsonObject} config\n   * @param {string=} opt_postPromptUI\n   */\n  function ConsentUI(baseInstance, config, opt_postPromptUI) {\n    /** @private {!AMP.BaseElement} */\n    this.baseInstance_ = baseInstance;\n    /** @private {boolean} */\n\n    this.isCreatedIframe_ = false;\n    /** @private {boolean} */\n\n    this.isPostPrompt_ = false;\n    /** @private {boolean} */\n\n    this.isVisible_ = false;\n    /** @private {boolean} */\n\n    this.isIframeVisible_ = false;\n    /** @private {boolean} */\n\n    this.isFullscreen_ = false;\n    /** @private {?Element} */\n\n    this.ui_ = null;\n    /** @private {boolean} */\n\n    this.overlayEnabled_ = (0, _experiments.isExperimentOn)(baseInstance.win, 'amp-consent-v2') && config['uiConfig'] && config['uiConfig']['overlay'] === true;\n    /** @private {boolean} */\n\n    this.scrollEnabled_ = true;\n    /** @private {?Element} */\n\n    this.maskElement_ = null;\n    /** @private {?Element} */\n\n    this.elementWithFocusBeforeShowing_ = null;\n    /** @private {!../../../src/service/ampdoc-impl.AmpDoc} */\n\n    this.ampdoc_ = baseInstance.getAmpDoc();\n    /** @private {!../../../src/service/viewport/viewport-interface.ViewportInterface} */\n\n    this.viewport_ = _services.Services.viewportForDoc(this.ampdoc_);\n    /** @private {?../../../src/service/viewer-interface.ViewerInterface} */\n\n    this.viewer_ = _services.Services.viewerForDoc(this.ampdoc_);\n    /** @private {!Element} */\n\n    this.parent_ = baseInstance.element;\n    /** @private {!Window} */\n\n    this.win_ = baseInstance.win;\n    /** @private @const {!Document} */\n\n    this.document_ = this.win_.document;\n    /** @private {?Deferred} */\n\n    this.iframeReady_ = null;\n    /** @private {?JsonObject} */\n\n    this.clientConfig_ = null;\n    /** @private {?Element} */\n\n    this.placeholder_ = null;\n    /** @private {string} */\n\n    this.initialHeight_ = DEFAULT_INITIAL_HEIGHT;\n    /** @private {boolean} */\n\n    this.enableBorder_ = DEFAULT_ENABLE_BORDER;\n    /** @private @const {!Function} */\n\n    this.boundHandleIframeMessages_ = this.handleIframeMessages_.bind(this);\n    this.init_(config, opt_postPromptUI);\n  }\n  /**\n   * @param {!JsonObject} config\n   * @param {string=} opt_postPromptUI\n   */\n\n\n  var _proto = ConsentUI.prototype;\n\n  _proto.init_ = function init_(config, opt_postPromptUI) {\n    if (opt_postPromptUI) {\n      var postPromptUI = this.ampdoc_.getElementById(opt_postPromptUI);\n\n      if (!postPromptUI) {\n        (0, _log.user)().error(TAG, 'postPromptUI element with id=%s not found', opt_postPromptUI);\n      }\n\n      this.ui_ = (0, _log.dev)().assertElement(postPromptUI);\n      this.isPostPrompt_ = true;\n      return;\n    }\n\n    var promptUI = config['promptUI'];\n    var promptUISrc = config['promptUISrc'];\n\n    if (promptUI) {\n      // Always respect promptUI first\n      var promptElement = this.ampdoc_.getElementById(promptUI);\n\n      if (!promptElement || !this.parent_.contains(promptElement)) {\n        (0, _log.user)().error(TAG, 'child element of <amp-consent> with promptUI id %s not found', promptUI);\n      }\n\n      this.ui_ = (0, _log.dev)().assertElement(promptElement);\n    } else if (promptUISrc && (0, _experiments.isExperimentOn)(this.win_, 'amp-consent-v2')) {\n      // Create an iframe element with the provided src\n      this.isCreatedIframe_ = true;\n      this.ui_ = this.createPromptIframeFromSrc_(promptUISrc);\n      this.placeholder_ = this.createPlaceholder_();\n      this.clientConfig_ = config['clientConfig'] || null;\n    }\n  }\n  /**\n   * Display the UI.\n   * @param {boolean} isActionPromptTrigger\n   */\n  ;\n\n  _proto.show = function show(isActionPromptTrigger) {\n    var _this = this;\n\n    if (!this.ui_) {\n      // No prompt UI specified, nothing to do\n      return;\n    }\n\n    (0, _style.toggle)((0, _log.dev)().assertElement(this.parent_), true);\n    var classList = this.parent_.classList;\n    classList.add('amp-active');\n    classList.remove('amp-hidden'); // Add to fixed layer\n\n    this.baseInstance_.getViewport().addToFixedLayer(this.parent_);\n\n    if (this.isCreatedIframe_) {\n      this.loadIframe_(isActionPromptTrigger).then(function () {\n        // It is safe to assume that the loadIframe_ promise will resolve\n        // before resetIframe_. Because the iframe needs to be shown first\n        // being hidden. CMP iframe is responsible to call consent-iframe-ready\n        // API before consent-response API.\n        _this.baseInstance_.mutateElement(function () {\n          if (!_this.isPostPrompt_) {\n            _this.elementWithFocusBeforeShowing_ = _this.document_.activeElement;\n          }\n\n          _this.maybeShowOverlay_();\n\n          _this.showIframe_();\n\n          if (!_this.isPostPrompt_) {\n            _this.ui_.\n            /*OK*/\n            focus();\n          }\n        });\n      });\n    } else {\n      var show = function show() {\n        if (!_this.ui_) {\n          return;\n        }\n\n        (0, _style.toggle)(_this.ui_, true);\n\n        if (!_this.isPostPrompt_) {\n          _this.elementWithFocusBeforeShowing_ = _this.document_.activeElement;\n\n          _this.maybeShowOverlay_(); // scheduleLayout is required everytime because some AMP element may\n          // get un laid out after toggle display (#unlayoutOnPause)\n          // for example <amp-iframe>\n\n\n          _services.Services.ownersForDoc(_this.baseInstance_.element).scheduleLayout(_this.baseInstance_.element, _this.ui_);\n\n          _this.ui_.\n          /*OK*/\n          focus();\n        }\n      }; // If the UI is an AMP Element, wait until it's built before showing it,\n      // to avoid race conditions where the UI would be hidden by the runtime\n      // at build time. (see #18841).\n\n\n      if ((0, _dom.isAmpElement)(this.ui_)) {\n        (0, _dom.whenUpgradedToCustomElement)(this.ui_).then(function () {\n          return _this.ui_.whenBuilt();\n        }).then(function () {\n          return show();\n        });\n      } else {\n        show();\n      }\n    }\n\n    this.isVisible_ = true;\n  }\n  /**\n   * Hide the UI\n   */\n  ;\n\n  _proto.hide = function hide() {\n    var _this2 = this;\n\n    if (!this.ui_) {\n      // Nothing to hide from;\n      return;\n    }\n\n    this.baseInstance_.mutateElement(function () {\n      if (_this2.isCreatedIframe_) {\n        _this2.resetIframe_();\n      }\n\n      if (!_this2.isPostPrompt_) {\n        var classList = _this2.parent_.classList;\n        classList.remove('amp-active');\n        classList.add('amp-hidden');\n      } // Hide the overlay\n\n\n      _this2.maybeHideOverlay_(); // Enable the scroll, in case we were fullscreen with no overlay\n\n\n      _this2.enableScroll_(); // Reset any animation styles set by style attribute\n\n\n      _this2.resetAnimationStyles_(); // NOTE (torch2424): This is very sensitive. Fixed layer applies\n      // a `top: calc(0px)` in order to fix some bugs, thus\n      // We should be careful in moving this around as\n      // `removeFromFixedLayer` will remove the `top` styling.\n      // This will preserve The animation,\n      // and prevent element flashing.\n\n\n      _this2.baseInstance_.getViewport().removeFromFixedLayer(_this2.parent_);\n\n      (0, _style.toggle)((0, _log.dev)().assertElement(_this2.ui_), false);\n      _this2.isVisible_ = false;\n\n      if (_this2.elementWithFocusBeforeShowing_) {\n        _this2.elementWithFocusBeforeShowing_.\n        /*OK*/\n        focus();\n\n        _this2.elementWithFocusBeforeShowing_ = null;\n      } else if (_this2.win_.document.body.children.length > 0) {\n        // TODO (torch2424): Find if the first child can not be\n        // focusable due to styling.\n        _this2.win_.document.body.children[0].\n        /*OK*/\n        focus();\n      }\n    });\n  }\n  /**\n   * Handle the ready event from the CMP iframe\n   * @param {!JsonObject} data\n   */\n  ;\n\n  _proto.handleReady_ = function handleReady_(data) {\n    this.initialHeight_ = DEFAULT_INITIAL_HEIGHT;\n    this.enableBorder_ = DEFAULT_ENABLE_BORDER; // Set our initial height\n\n    if (data['initialHeight']) {\n      if (typeof data['initialHeight'] === 'string' && data['initialHeight'].indexOf('vh') >= 0) {\n        var dataHeight = parseInt(data['initialHeight'], 10);\n\n        if (dataHeight >= 10 && dataHeight <= 60) {\n          this.initialHeight_ = dataHeight + \"vh\";\n        } else {\n          (0, _log.user)().error(TAG, \"Inavlid initial height: \" + data['initialHeight'] + \".\" + 'Minimum: 10vh. Maximum: 60vh.');\n        }\n      } else {\n        (0, _log.user)().error(TAG, \"Inavlid initial height: \" + data['initialHeight'] + \".\" + 'Must be a string in \"vh\" units.');\n      }\n    } // Enable/disable our border\n\n\n    if (data['border'] === false) {\n      this.enableBorder_ = false;\n    }\n\n    this.iframeReady_.resolve();\n  }\n  /**\n   * Enter the fullscreen state for the UI\n   */\n  ;\n\n  _proto.enterFullscreen_ = function enterFullscreen_() {\n    if (!this.ui_ || !this.isVisible_ || this.isFullscreen_) {\n      return;\n    }\n\n    this.resetAnimationStyles_();\n    this.viewer_.sendMessage('requestFullOverlay', (0, _object.dict)(),\n    /* cancelUnsent */\n    true);\n    var classList = this.parent_.classList;\n    classList.add(consentUiClasses.iframeFullscreen);\n    this.disableScroll_();\n    this.isFullscreen_ = true;\n  }\n  /**\n   * Create the iframe if promptUISrc is valid\n   * @param {string} promptUISrc\n   * @return {!Element}\n   */\n  ;\n\n  _proto.createPromptIframeFromSrc_ = function createPromptIframeFromSrc_(promptUISrc) {\n    var iframe = this.parent_.ownerDocument.createElement('iframe');\n    var sandbox = ['allow-scripts', 'allow-popups'];\n    iframe.src = (0, _url.assertHttpsUrl)(promptUISrc, this.parent_);\n    var allowSameOrigin = this.allowSameOrigin_(iframe.src);\n\n    if (allowSameOrigin) {\n      sandbox.push('allow-same-origin');\n    }\n\n    iframe.setAttribute('sandbox', sandbox.join(' '));\n    var classList = iframe.classList;\n    classList.add(consentUiClasses.fill); // Append iframe lazily to save resources.\n\n    return iframe;\n  }\n  /**\n   * Determines if allow-same-origin should be enabled for the prompt iframe\n   * @param {string} src\n   * @return {boolean}\n   */\n  ;\n\n  _proto.allowSameOrigin_ = function allowSameOrigin_(src) {\n    var urlService = _services.Services.urlForDoc(this.parent_);\n\n    var srcUrl = urlService.parse(src);\n    var containerUrl = urlService.parse(this.ampdoc_.getUrl());\n    return srcUrl.origin != containerUrl.origin;\n  }\n  /**\n   * Create the default placeholder\n   * @return {!Element}\n   */\n  ;\n\n  _proto.createPlaceholder_ = function createPlaceholder_() {\n    var placeholder = this.parent_.ownerDocument.createElement('placeholder');\n    (0, _style.toggle)(placeholder, false);\n    placeholder.classList.add(consentUiClasses.placeholder);\n    var loadingSpinner = (0, _staticTemplate.htmlFor)(placeholder)(_templateObject());\n    placeholder.appendChild(loadingSpinner);\n    return placeholder;\n  }\n  /**\n   * Get the client information that needs to be passed to cmp iframe\n   * @param {boolean} isActionPromptTrigger\n   * @return {!Promise<JsonObject>}\n   */\n  ;\n\n  _proto.getClientInfoPromise_ = function getClientInfoPromise_(isActionPromptTrigger) {\n    var _this3 = this;\n\n    var consentStatePromise = (0, _service.getServicePromiseForDoc)(this.ampdoc_, CONSENT_STATE_MANAGER);\n    return consentStatePromise.then(function (consentStateManager) {\n      return consentStateManager.getLastConsentInstanceInfo().then(function (consentInfo) {\n        return (0, _object.dict)({\n          'clientConfig': _this3.clientConfig_,\n          // consentState to be deprecated\n          'consentState': (0, _consentInfo.getConsentStateValue)(consentInfo['consentState']),\n          'consentStateValue': (0, _consentInfo.getConsentStateValue)(consentInfo['consentState']),\n          'consentString': consentInfo['consentString'],\n          'promptTrigger': isActionPromptTrigger ? 'action' : 'load',\n          'isDirty': !!consentInfo['isDirty']\n        });\n      });\n    });\n  }\n  /**\n   * Apply placeholder\n   * Set up event listener to handle UI related messages.\n   * @param {boolean} isActionPromptTrigger\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.loadIframe_ = function loadIframe_(isActionPromptTrigger) {\n    var _this4 = this;\n\n    this.iframeReady_ = new _promise.Deferred();\n    var classList = this.parent_.classList;\n\n    if (!(0, _dom.elementByTag)(this.parent_, 'placeholder')) {\n      (0, _dom.insertAfterOrAtStart)(this.parent_, (0, _log.dev)().assertElement(this.placeholder_), null);\n    }\n\n    classList.add(consentUiClasses.loading);\n    (0, _style.toggle)((0, _log.dev)().assertElement(this.ui_), false);\n    var iframePromise = this.getClientInfoPromise_(isActionPromptTrigger).then(function (clientInfo) {\n      _this4.ui_.setAttribute('name', JSON.stringify(clientInfo));\n\n      _this4.win_.addEventListener('message', _this4.boundHandleIframeMessages_);\n\n      (0, _dom.insertAfterOrAtStart)(_this4.parent_, (0, _log.dev)().assertElement(_this4.ui_), null);\n    });\n    return Promise.all([iframePromise, this.iframeReady_.promise, this.baseInstance_.mutateElement(function () {\n      (0, _style.toggle)((0, _log.dev)().assertElement(_this4.placeholder_), true);\n    })]);\n  }\n  /**\n   * Hide the placeholder\n   * Apply animation to show the iframe\n   */\n  ;\n\n  _proto.showIframe_ = function showIframe_() {\n    var _this5 = this;\n\n    var classList = this.parent_.classList;\n    classList.add(consentUiClasses.iframeActive);\n    (0, _style.toggle)((0, _log.dev)().assertElement(this.placeholder_), false);\n    (0, _style.toggle)((0, _log.dev)().assertElement(this.ui_), true); // Remove transition styles added by the fixed layer\n    // Transform styles applied by us for the animation.\n\n    this.resetAnimationStyles_();\n    /**\n     * Waiting for mutation twice here.\n     * First mutation is for when the correct elements,\n     * are shown/hidden, and the iframe active class\n     * pushes it out of view.\n     * Second, is for the loading class to be removed.\n     * This will avoid race conditions with the slidein transition.\n     */\n\n    this.baseInstance_.mutateElement(function () {\n      classList.remove(consentUiClasses.loading);\n\n      _this5.baseInstance_.mutateElement(function () {\n        classList.add(consentUiClasses.in);\n        _this5.isIframeVisible_ = true;\n\n        _this5.applyInitialStyles_();\n      });\n    });\n  }\n  /**\n   * Remove the iframe from doc\n   * Remove event listener\n   * Reset UI state\n   * Takes in a function to call after our transition has ended\n   */\n  ;\n\n  _proto.resetIframe_ = function resetIframe_() {\n    var classList = this.parent_.classList; // Remove the iframe active to go back to our normal height\n\n    classList.remove(consentUiClasses.iframeActive);\n    this.win_.removeEventListener('message', this.boundHandleIframeMessages_);\n    classList.remove(consentUiClasses.iframeFullscreen);\n\n    if (this.isFullscreen_) {\n      this.viewer_.sendMessage('cancelFullOverlay', (0, _object.dict)(),\n      /* cancelUnsent */\n      true);\n    }\n\n    this.isFullscreen_ = false;\n    classList.remove(consentUiClasses.in);\n    this.isIframeVisible_ = false;\n    this.ui_.removeAttribute('name');\n    (0, _style.toggle)((0, _log.dev)().assertElement(this.placeholder_), false);\n    (0, _dom.removeElement)((0, _log.dev)().assertElement(this.ui_));\n  }\n  /**\n   * Reset transition and transform styles\n   * Set by the fixed layer, and us\n   */\n  ;\n\n  _proto.resetAnimationStyles_ = function resetAnimationStyles_() {\n    (0, _style.setStyles)(this.parent_, {\n      transform: '',\n      transition: ''\n    });\n  }\n  /**\n   * Apply styles for ready event\n   */\n  ;\n\n  _proto.applyInitialStyles_ = function applyInitialStyles_() {\n    // Apply our initial height and border\n    if (this.ui_) {\n      (0, _style.setStyles)(this.ui_, {\n        height: this.initialHeight_\n      });\n    }\n\n    (0, _style.setImportantStyles)(this.parent_, {\n      transform: \"translate3d(0px, calc(100% - \" + this.initialHeight_ + \"), 0px)\"\n    });\n\n    if (this.enableBorder_) {\n      var classList = this.parent_.classList;\n      classList.add(consentUiClasses.enableBorder);\n    }\n  }\n  /**\n   * Shows the overlay (mask element, and lock scrolling)\n   * if the overlay is enabled\n   * @private\n   */\n  ;\n\n  _proto.maybeShowOverlay_ = function maybeShowOverlay_() {\n    if (!this.overlayEnabled_) {\n      return;\n    }\n\n    if (!this.maskElement_) {\n      var mask = this.win_.document.createElement('div');\n      mask.classList.add(consentUiClasses.mask);\n      this.parent_.ownerDocument.body.appendChild(mask);\n      this.maskElement_ = mask;\n    }\n\n    (0, _style.toggle)(this.maskElement_,\n    /* display */\n    true);\n    this.disableScroll_();\n  }\n  /**\n   * Hides the overlay (mask element, and lock scrolling)\n   * if the overlay is enabled\n   * @private\n   */\n  ;\n\n  _proto.maybeHideOverlay_ = function maybeHideOverlay_() {\n    if (!this.overlayEnabled_) {\n      return;\n    }\n\n    if (this.maskElement_) {\n      (0, _style.toggle)(this.maskElement_,\n      /* display */\n      false);\n    }\n\n    this.enableScroll_();\n  }\n  /**\n   * Disables scrolling on the document\n   * @private\n   */\n  ;\n\n  _proto.disableScroll_ = function disableScroll_() {\n    if (this.scrollEnabled_) {\n      this.viewport_.enterOverlayMode();\n      this.scrollEnabled_ = false;\n    }\n  }\n  /**\n   * Disables scrolling on the document\n   * @private\n   */\n  ;\n\n  _proto.enableScroll_ = function enableScroll_() {\n    if (!this.scrollEnabled_) {\n      this.viewport_.leaveOverlayMode();\n      this.scrollEnabled_ = true;\n    }\n  }\n  /**\n   * Listen to iframe messages and handle events.\n   * Current supported APIs:\n   *\n   * Required message from iframe to hide placeholder and display iframe\n   * {\n   *   type: 'consent-ui',\n   *   action: 'ready',\n   *   initialHeight: '30vh',\n   *   border: true\n   * }\n   *\n   * Enter Fullscreen\n   * {\n   *   type: 'consent-ui',\n   *   action: 'enter-fullscreen'\n   * }\n   *\n   * @param {!Event} event\n   */\n  ;\n\n  _proto.handleIframeMessages_ = function handleIframeMessages_(event) {\n    var _this6 = this;\n\n    if (this.ui_.contentWindow !== event.source) {\n      // Ignore messages from else where\n      return;\n    }\n\n    var data = (0, _eventHelper.getData)(event);\n\n    if (!data || data['type'] != 'consent-ui') {\n      return;\n    }\n\n    if (data['action'] === 'ready') {\n      this.handleReady_(\n      /** @type {!JsonObject} */\n      data);\n    }\n\n    if (data['action'] === 'enter-fullscreen') {\n      // TODO (@torch2424) Send response back if enter fullscreen was succesful\n      if (!this.isIframeVisible_) {\n        return;\n      }\n\n      this.baseInstance_.mutateElement(function () {\n        _this6.enterFullscreen_();\n      });\n    }\n  };\n\n  return ConsentUI;\n}();\n\nexports.ConsentUI = ConsentUI;\n\n},{\"../../../src/dom\":13,\"../../../src/event-helper\":16,\"../../../src/experiments\":17,\"../../../src/log\":20,\"../../../src/service\":24,\"../../../src/services\":26,\"../../../src/static-template\":27,\"../../../src/style\":29,\"../../../src/url\":33,\"../../../src/utils/object\":36,\"../../../src/utils/promise\":37,\"./consent-info\":5}],9:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.GEO_IN_GROUP = void 0;\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @enum {number}\n */\nvar GEO_IN_GROUP = {\n  NOT_DEFINED: 1,\n  IN: 2,\n  NOT_IN: 3\n};\nexports.GEO_IN_GROUP = GEO_IN_GROUP;\n\n},{}],10:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.config = exports.urls = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nvar env = self.AMP_CONFIG || {};\nvar thirdPartyFrameRegex = typeof env['thirdPartyFrameRegex'] == 'string' ? new RegExp(env['thirdPartyFrameRegex']) : env['thirdPartyFrameRegex'];\nvar cdnProxyRegex = typeof env['cdnProxyRegex'] == 'string' ? new RegExp(env['cdnProxyRegex']) : env['cdnProxyRegex'];\n/** @type {!Object<string, string|boolean|RegExp|Array<RegExp>>} */\n\nvar urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex: thirdPartyFrameRegex || /^d-\\d+\\.ampproject\\.net$/,\n  cdn: env['cdnUrl'] || 'https://cdn.ampproject.org',\n\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex: cdnProxyRegex || /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting: env['errorReportingUrl'] || 'https://amp-error-reporting.appspot.com/r',\n  localDev: env['localDev'] || false,\n\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/master/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [/(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/, /(^|\\.)gmail\\.dev$/]\n};\nexports.urls = urls;\nvar config = {\n  urls: urls\n};\nexports.config = config;\n\n},{}],11:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.CONSENT_POLICY_STATE = void 0;\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file will be imported by 3P scripts.\n\n/**\n * Possible consent policy state to proceed with.\n * @enum {number}\n */\nvar CONSENT_POLICY_STATE = {\n  // Enum value has external dependency. Please do not change existing value.\n  // If new values are added, please notify the AMP for Ads team to assure\n  // correct Real Time Config behavior is maintained for Fast Fetch.\n  SUFFICIENT: 1,\n  INSUFFICIENT: 2,\n  UNKNOWN_NOT_REQUIRED: 3,\n  UNKNOWN: 4\n};\nexports.CONSENT_POLICY_STATE = CONSENT_POLICY_STATE;\n\n},{}],12:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.assertIsName = assertIsName;\nexports.setScopeSelectorSupportedForTesting = setScopeSelectorSupportedForTesting;\nexports.isScopeSelectorSupported = isScopeSelectorSupported;\nexports.prependSelectorsWith = prependSelectorsWith;\nexports.escapeCssSelectorIdent = escapeCssSelectorIdent;\nexports.escapeCssSelectorNth = escapeCssSelectorNth;\n\nvar _cssEscape = require(\"../third_party/css-escape/css-escape\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nfunction assertIsName(name) {\n  (0, _log.devAssert)(/^[\\w-]+$/.test(name));\n}\n/**\n * @type {boolean|undefined}\n */\n\n\nvar scopeSelectorSupported;\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\n\nfunction setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\n\n\nfunction isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return scopeSelectorSupported = testScopeSelector(el);\n}\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\n\n\nfunction testScopeSelector(el) {\n  try {\n    var doc = el.ownerDocument;\n    var testElement = doc.createElement('div');\n    var testChild = doc.createElement('div');\n    testElement.appendChild(testChild); // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n\n    return testElement.\n    /*OK*/\n    querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\n\n\nfunction prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, \"$&\" + distribute + \" \");\n}\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n */\n\n\nfunction escapeCssSelectorIdent(ident) {\n  return (0, _cssEscape.cssEscape)(ident);\n}\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\n\n\nfunction escapeCssSelectorNth(ident) {\n  var escaped = String(ident); // Ensure it doesn't close the nth-child psuedo class.\n\n  (0, _log.devAssert)(escaped.indexOf(')') === -1);\n  return escaped;\n}\n\n},{\"../third_party/css-escape/css-escape\":38,\"./log\":20}],13:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.waitForChild = waitForChild;\nexports.waitForChildPromise = waitForChildPromise;\nexports.waitForBodyOpen = waitForBodyOpen;\nexports.waitForBodyOpenPromise = waitForBodyOpenPromise;\nexports.removeElement = removeElement;\nexports.removeChildren = removeChildren;\nexports.copyChildren = copyChildren;\nexports.insertAfterOrAtStart = insertAfterOrAtStart;\nexports.addAttributesToElement = addAttributesToElement;\nexports.createElementWithAttributes = createElementWithAttributes;\nexports.isConnectedNode = isConnectedNode;\nexports.rootNodeFor = rootNodeFor;\nexports.isShadowRoot = isShadowRoot;\nexports.closest = closest;\nexports.closestNode = closestNode;\nexports.closestAncestorElementBySelector = closestAncestorElementBySelector;\nexports.ancestorElements = ancestorElements;\nexports.ancestorElementsByTag = ancestorElementsByTag;\nexports.childElement = childElement;\nexports.childElements = childElements;\nexports.lastChildElement = lastChildElement;\nexports.childNodes = childNodes;\nexports.childElementByAttr = childElementByAttr;\nexports.lastChildElementByAttr = lastChildElementByAttr;\nexports.childElementsByAttr = childElementsByAttr;\nexports.childElementByTag = childElementByTag;\nexports.childElementsByTag = childElementsByTag;\nexports.matches = matches;\nexports.elementByTag = elementByTag;\nexports.scopedQuerySelector = scopedQuerySelector;\nexports.scopedQuerySelectorAll = scopedQuerySelectorAll;\nexports.getDataParamsFromAttributes = getDataParamsFromAttributes;\nexports.hasNextNodeInDocumentOrder = hasNextNodeInDocumentOrder;\nexports.templateContentClone = templateContentClone;\nexports.iterateCursor = iterateCursor;\nexports.openWindowDialog = openWindowDialog;\nexports.isJsonScriptTag = isJsonScriptTag;\nexports.isJsonLdScriptTag = isJsonLdScriptTag;\nexports.isRTL = isRTL;\nexports.escapeHtml = escapeHtml;\nexports.tryFocus = tryFocus;\nexports.isIframed = isIframed;\nexports.isAmpElement = isAmpElement;\nexports.whenUpgradedToCustomElement = whenUpgradedToCustomElement;\nexports.fullscreenEnter = fullscreenEnter;\nexports.fullscreenExit = fullscreenExit;\nexports.isFullscreenElement = isFullscreenElement;\nexports.isEnabled = isEnabled;\nexports.domOrderComparator = domOrderComparator;\nexports.toggleAttribute = toggleAttribute;\nexports.getVerticalScrollbarWidth = getVerticalScrollbarWidth;\nexports.UPGRADE_TO_CUSTOMELEMENT_RESOLVER = exports.UPGRADE_TO_CUSTOMELEMENT_PROMISE = void 0;\n\nvar _promise = require(\"./utils/promise\");\n\nvar _css = require(\"./css\");\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object\");\n\nvar _string = require(\"./string\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;'\n};\nvar HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n/** @const {string} */\n\nvar UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n/** @const {string} */\n\nexports.UPGRADE_TO_CUSTOMELEMENT_PROMISE = UPGRADE_TO_CUSTOMELEMENT_PROMISE;\nvar UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\n\nexports.UPGRADE_TO_CUSTOMELEMENT_RESOLVER = UPGRADE_TO_CUSTOMELEMENT_RESOLVER;\n\nfunction waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n\n\n  var win = (0, _types.toWin)(parent.ownerDocument.defaultView);\n\n  if (win.MutationObserver) {\n    /** @const {MutationObserver} */\n    var observer = new win.MutationObserver(function () {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {\n      childList: true\n    });\n  } else {\n    /** @const {number} */\n    var interval = win.setInterval(function () {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    },\n    /* milliseconds */\n    5);\n  }\n}\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\n\n\nfunction waitForChildPromise(parent, checkFunc) {\n  return new Promise(function (resolve) {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\n\n\nfunction waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, function () {\n    return !!doc.body;\n  }, callback);\n}\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\n\n\nfunction waitForBodyOpenPromise(doc) {\n  return new Promise(function (resolve) {\n    return waitForBodyOpen(doc, resolve);\n  });\n}\n/**\n * Removes the element.\n * @param {!Element} element\n */\n\n\nfunction removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element} parent\n */\n\n\nfunction removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\n\n\nfunction copyChildren(from, to) {\n  var frag = to.ownerDocument.createDocumentFragment();\n\n  for (var n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n\n  to.appendChild(frag);\n}\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node} after\n */\n\n\nfunction insertAfterOrAtStart(root, element, after) {\n  var before = after ? after.nextSibling : root.firstChild;\n  root.insertBefore(element, before);\n}\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\n\n\nfunction addAttributesToElement(element, attributes) {\n  for (var attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n\n  return element;\n}\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\n\n\nfunction createElementWithAttributes(doc, tagName, attributes) {\n  var element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\n\n\nfunction isConnectedNode(node) {\n  var connected = node.isConnected;\n\n  if (connected !== undefined) {\n    return connected;\n  } // \"An element is connected if its shadow-including root is a document.\"\n\n\n  var n = node;\n\n  do {\n    n = rootNodeFor(n);\n\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\n\n\nfunction rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n\n  var n; // Check isShadowRoot() is only needed for the polyfill case.\n\n  for (n = node; !!n.parentNode && !isShadowRoot(n); n = n.parentNode) {}\n\n  return n;\n}\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isShadowRoot(value) {\n  // TODO(#22733): remove in preference to dom's `rootNodeFor`.\n  if (!value) {\n    return false;\n  } // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n\n\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n\n  return value.nodeType ==\n  /* DOCUMENT_FRAGMENT */\n  11 && Object.prototype.toString.call(value) === '[object ShadowRoot]';\n}\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\n\n\nfunction closest(element, callback, opt_stopAt) {\n  for (var el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\n\n\nfunction closestNode(node, callback) {\n  for (var n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\n\n\nfunction closestAncestorElementBySelector(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  return closest(element, function (el) {\n    return matches(el, selector);\n  });\n}\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\n\n\nfunction ancestorElements(child, predicate) {\n  var ancestors = [];\n\n  for (var ancestor = child.parentElement; ancestor; ancestor = ancestor.parentElement) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n\n  return ancestors;\n}\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\n\n\nfunction ancestorElementsByTag(child, tagName) {\n  (0, _css.assertIsName)(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, function (el) {\n    return el.tagName == tagName;\n  });\n}\n/**\n * Finds the first child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\n\n\nfunction childElement(parent, callback) {\n  for (var child = parent.firstElementChild; child; child = child.nextElementSibling) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\n\n\nfunction childElements(parent, callback) {\n  var children = [];\n\n  for (var child = parent.firstElementChild; child; child = child.nextElementSibling) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n\n  return children;\n}\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\n\n\nfunction lastChildElement(parent, callback) {\n  for (var child = parent.lastElementChild; child; child = child.previousElementSibling) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\n\n\nfunction childNodes(parent, callback) {\n  var nodes = [];\n\n  for (var child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n\n  return nodes;\n}\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\n\n\nfunction childElementByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return (\n    /*OK*/\n    scopedQuerySelector(parent, \"> [\" + attr + \"]\")\n  );\n}\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\n\n\nfunction lastChildElementByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return lastChildElement(parent, function (el) {\n    return el.hasAttribute(attr);\n  });\n}\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\n\n\nfunction childElementsByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return (\n    /*OK*/\n    scopedQuerySelectorAll(parent, \"> [\" + attr + \"]\")\n  );\n}\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {?Element}\n */\n\n\nfunction childElementByTag(parent, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return (\n    /*OK*/\n    scopedQuerySelector(parent, \"> \" + tagName)\n  );\n}\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\n\n\nfunction childElementsByTag(parent, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return (\n    /*OK*/\n    scopedQuerySelectorAll(parent, \"> \" + tagName)\n  );\n}\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\n\n\nfunction matches(el, selector) {\n  var matcher = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector || el.oMatchesSelector;\n\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n\n  return false; // IE8 always returns false.\n}\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\n\n\nfunction elementByTag(element, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return element.\n  /*OK*/\n  querySelector(tagName);\n}\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\n\n\nfunction scopedQuerySelectionFallback(root, selector) {\n  var unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  var scopedSelector = (0, _css.prependSelectorsWith)(selector, \".\" + unique);\n  var elements = root.\n  /*OK*/\n  querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {?Element}\n */\n\n\nfunction scopedQuerySelector(root, selector) {\n  if ((0, _css.isScopeSelectorSupported)(root)) {\n    return root.\n    /*OK*/\n    querySelector((0, _css.prependSelectorsWith)(selector, ':scope'));\n  } // Only IE.\n\n\n  var fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\n\n\nfunction scopedQuerySelectorAll(root, selector) {\n  if ((0, _css.isScopeSelectorSupported)(root)) {\n    return root.\n    /*OK*/\n    querySelectorAll((0, _css.prependSelectorsWith)(selector, ':scope'));\n  } // Only IE.\n\n\n  return scopedQuerySelectionFallback(root, selector);\n}\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!Element} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\n\n\nfunction getDataParamsFromAttributes(element, opt_computeParamNameFunc, opt_paramPattern) {\n  var computeParamNameFunc = opt_computeParamNameFunc || function (key) {\n    return key;\n  };\n\n  var dataset = element.dataset;\n  var params = (0, _object.dict)();\n  var paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n\n  for (var key in dataset) {\n    var _matches = key.match(paramPattern);\n\n    if (_matches) {\n      var param = _matches[1][0].toLowerCase() + _matches[1].substr(1);\n\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n\n  return params;\n}\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\n\n\nfunction hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  var currentElement = element;\n\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while ((currentElement = currentElement.parentNode) && currentElement != opt_stopNode);\n\n  return false;\n}\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\n\n\nfunction templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    var content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\n\n\nfunction iterateCursor(iterable, cb) {\n  var length = iterable.length;\n\n  for (var i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\n\n\nfunction openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  var res;\n\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    (0, _log.dev)().error('DOM', 'Failed to open url on target: ', target, e);\n  } // Then try with `_top` target.\n\n\n  if (!res && target != '_top' && !(0, _string.includes)(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n\n  return res;\n}\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isJsonScriptTag(element) {\n  return element.tagName == 'SCRIPT' && element.hasAttribute('type') && element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON';\n}\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isJsonLdScriptTag(element) {\n  return element.tagName == 'SCRIPT' && element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON';\n}\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\n\n\nfunction isRTL(doc) {\n  var dir = doc.body.getAttribute('dir') || doc.documentElement.getAttribute('dir') || 'ltr';\n  return dir == 'rtl';\n}\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\n\n\nfunction escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n/**\n * @param {string} c\n * @return {string}\n */\n\n\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\n\n\nfunction tryFocus(element) {\n  try {\n    element.\n    /*OK*/\n    focus();\n  } catch (e) {// IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nfunction isIframed(win) {\n  return win.parent && win.parent != win;\n}\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isAmpElement(element) {\n  var tag = element.tagName; // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n\n  return (0, _string.startsWith)(tag, 'AMP-') && // Some \"amp-*\" elements are not really AMP elements. :smh:\n  !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY');\n}\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!Element} element\n * @return {!Promise<!Element>}\n */\n\n\nfunction whenUpgradedToCustomElement(element) {\n  (0, _log.devAssert)(isAmpElement(element), 'element is not AmpElement');\n\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(element);\n  } // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n\n\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    var deferred = new _promise.Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n/**\n * Replacement for `Element.requestFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n * @param {!Element} element\n */\n\n\nfunction fullscreenEnter(element) {\n  var requestFs = element.requestFullscreen || element.requestFullScreen || element.webkitRequestFullscreen || element.webkitEnterFullscreen || element.msRequestFullscreen || element.mozRequestFullScreen;\n\n  if (requestFs) {\n    requestFs.call(element);\n  }\n}\n/**\n * Replacement for `Document.exitFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/exitFullscreen\n * @param {!Element} element\n */\n\n\nfunction fullscreenExit(element) {\n  var elementBoundExit = element.cancelFullScreen || element.exitFullscreen || element.webkitExitFullscreen || element.webkitCancelFullScreen || element.mozCancelFullScreen || element.msExitFullscreen;\n\n  if (elementBoundExit) {\n    elementBoundExit.call(element);\n    return;\n  }\n\n  var ownerDocument = element.ownerDocument;\n\n  if (!ownerDocument) {\n    return;\n  }\n\n  var docBoundExit = ownerDocument.cancelFullScreen || ownerDocument.exitFullscreencancelFullScreen || ownerDocument.webkitExitFullscreencancelFullScreen || ownerDocument.webkitCancelFullScreencancelFullScreen || ownerDocument.mozCancelFullScreencancelFullScreen || ownerDocument.msExitFullscreen;\n\n  if (docBoundExit) {\n    docBoundExit.call(ownerDocument);\n  }\n}\n/**\n * Replacement for `Document.fullscreenElement`.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenElement\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isFullscreenElement(element) {\n  var webkitDisplayingFullscreen = element.webkitDisplayingFullscreen;\n\n  if (webkitDisplayingFullscreen !== undefined) {\n    return webkitDisplayingFullscreen;\n  }\n\n  var ownerDocument = element.ownerDocument;\n\n  if (!ownerDocument) {\n    return false;\n  }\n\n  var fullscreenElement = ownerDocument.fullscreenElement || ownerDocument.webkitFullscreenElement || ownerDocument.mozFullScreenElement || ownerDocument.webkitCurrentFullScreenElement;\n  return fullscreenElement == element;\n}\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!Element} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\n\n\nfunction isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\n\n\nfunction domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  var pos = element1.compareDocumentPosition(element2);\n  var precedingOrContains = Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS; // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n\n  if (pos & precedingOrContains) {\n    return 1;\n  } // if fe2 is following or contained by fe1, then fe1 is before fe2\n\n\n  return -1;\n}\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\n\n\nfunction toggleAttribute(element, name, forced) {\n  var hasAttribute = element.hasAttribute(name);\n  var enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\n\n\nfunction getVerticalScrollbarWidth(win) {\n  var documentElement = win.document.documentElement;\n  var windowWidth = win.\n  /*OK*/\n  innerWidth;\n  var documentWidth = documentElement.\n  /*OK*/\n  clientWidth;\n  return windowWidth - documentWidth;\n}\n\n},{\"./css\":12,\"./log\":20,\"./string\":28,\"./types\":30,\"./utils/object\":36,\"./utils/promise\":37}],14:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getElementService = getElementService;\nexports.getElementServiceIfAvailable = getElementServiceIfAvailable;\nexports.getElementServiceForDoc = getElementServiceForDoc;\nexports.getElementServiceIfAvailableForDoc = getElementServiceIfAvailableForDoc;\nexports.getElementServiceIfAvailableForDocInEmbedScope = getElementServiceIfAvailableForDocInEmbedScope;\nexports.extensionScriptsInNode = extensionScriptsInNode;\nexports.isExtensionScriptInNode = isExtensionScriptInNode;\n\nvar dom = _interopRequireWildcard(require(\"./dom\"));\n\nvar _service = require(\"./service\");\n\nvar _types = require(\"./types\");\n\nvar _log = require(\"./log\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nfunction getElementService(win, id, extension, opt_element) {\n  return getElementServiceIfAvailable(win, id, extension, opt_element).then(function (service) {\n    return assertService(service, id, extension);\n  });\n}\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailable(win, id, extension, opt_element) {\n  var s = (0, _service.getServicePromiseOrNull)(win, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      s\n    );\n  }\n\n  return getElementServicePromiseOrNull(win, id, extension, opt_element);\n}\n/**\n * @param {!Window} win\n * @param {string} elementName Name of an extended custom element.\n * @return {boolean} Whether this element is scheduled to be loaded.\n */\n\n\nfunction isElementScheduled(win, elementName) {\n  // Set in custom-element.js\n  if (!win.__AMP_EXTENDED_ELEMENTS) {\n    return false;\n  }\n\n  return !!win.__AMP_EXTENDED_ELEMENTS[elementName];\n}\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\n\n\nfunction getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(element, id, extension, opt_element).then(function (service) {\n    return assertService(service, id, extension);\n  });\n}\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailableForDoc(element, id, extension, opt_element) {\n  var s = (0, _service.getServicePromiseOrNullForDoc)(element, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      s\n    );\n  }\n\n  var ampdoc = (0, _service.getAmpdoc)(element);\n  return ampdoc.waitForBodyOpen().then(function () {\n    return waitForExtensionIfPresent(ampdoc.win, extension, ampdoc.win.document.head);\n  }).then(function () {\n    // If this service is provided by an element, then we can't depend on\n    // the service (they may not use the element).\n    if (opt_element) {\n      return (0, _service.getServicePromiseOrNullForDoc)(element, id);\n    } else if (isElementScheduled(ampdoc.win, extension)) {\n      return (0, _service.getServicePromiseForDoc)(element, id);\n    }\n\n    return null;\n  });\n}\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailableForDocInEmbedScope(element, id, extension) {\n  var s = (0, _service.getExistingServiceForDocInEmbedScope)(element, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      Promise.resolve(s)\n    );\n  }\n\n  var win = (0, _types.toWin)(element.ownerDocument.defaultView);\n  var topWin = (0, _service.getTopWindow)(win); // In embeds, doc services are stored on the embed window.\n\n  if (win !== topWin) {\n    return getElementServicePromiseOrNull(win, id, extension);\n  } else {\n    // Only fallback to element's ampdoc (top-level) if not embedded.\n    return getElementServiceIfAvailableForDoc(element, id, extension);\n  }\n}\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction assertService(service, id, extension) {\n  return (\n    /** @type {!Object} */\n    (0, _log.userAssert)(service, 'Service %s was requested to be provided through %s, ' + 'but %s is not loaded in the current page. To fix this ' + 'problem load the JavaScript file for %s in this page.', id, extension, extension, extension)\n  );\n}\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Array<string>}\n */\n\n\nfunction extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n\n  var scripts = {}; // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n\n  var list = head.querySelectorAll('script[custom-element],script[custom-template]');\n\n  for (var i = 0; i < list.length; i++) {\n    var script = list[i];\n    var name = script.getAttribute('custom-element') || script.getAttribute('custom-template');\n    scripts[name] = true;\n  }\n\n  return Object.keys(scripts);\n}\n/**\n * Waits for body to be present then verifies that an extension script is\n * present in head for installation.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} extensionId\n * @return {!Promise<boolean>}\n */\n\n\nfunction isExtensionScriptInNode(ampdoc, extensionId) {\n  return ampdoc.waitForBodyOpen().then(function () {\n    return extensionScriptInNode(ampdoc.getHeadNode(), extensionId);\n  });\n}\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @param {string} extensionId\n * @return {boolean}\n * @private\n */\n\n\nfunction extensionScriptInNode(head, extensionId) {\n  return extensionScriptsInNode(head).includes(extensionId);\n}\n/**\n * Waits for an extension if its script is present\n * @param {!Window} win\n * @param {string} extension\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Promise}\n * @private\n */\n\n\nfunction waitForExtensionIfPresent(win, extension, head) {\n  /**\n   * If there is an extension script wait for it to load before trying\n   * to get the service. Prevents a race condition when everything but\n   * the extensions is in cache. If there is no script then it's either\n   * not present, or the service was defined by a test. In those cases\n   * we don't wait around for an extension that does not exist.\n   */\n  // TODO(jpettitt) investigate registerExtension to short circuit\n  // the dom call in extensionScriptsInNode()\n  if (!extensionScriptInNode(head, extension)) {\n    return Promise.resolve();\n  }\n\n  var extensions = (0, _service.getService)(win, 'extensions');\n  return (\n    /** @type {!Promise<?Object>} */\n    extensions.waitForExtension(win, extension)\n  );\n}\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\n\n\nfunction getElementServicePromiseOrNull(win, id, extension, opt_element) {\n  return dom.waitForBodyOpenPromise(win.document).then(function () {\n    return waitForExtensionIfPresent(win, extension, win.document.head);\n  }).then(function () {\n    // If this service is provided by an element, then we can't depend on\n    // the service (they may not use the element).\n    if (opt_element) {\n      return (0, _service.getServicePromiseOrNull)(win, id);\n    } else if (isElementScheduled(win, extension)) {\n      return (0, _service.getServicePromise)(win, id);\n    }\n\n    return null;\n  });\n}\n\n},{\"./dom\":13,\"./log\":20,\"./service\":24,\"./types\":30}],15:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.internalListenImplementation = internalListenImplementation;\nexports.detectEvtListenerOptsSupport = detectEvtListenerOptsSupport;\nexports.resetEvtListenerOptsSupportForTesting = resetEvtListenerOptsSupportForTesting;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nvar optsSupported;\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\nfunction internalListenImplementation(element, eventType, listener, opt_evtListenerOpts) {\n  var localElement = element;\n  var localListener = listener;\n  /**\n   * @type {?Function}\n   */\n\n  var wrapped;\n\n  wrapped = function wrapped(event) {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n\n      throw e;\n    }\n  };\n\n  var optsSupported = detectEvtListenerOptsSupport();\n  var capture = false;\n\n  if (opt_evtListenerOpts) {\n    capture = opt_evtListenerOpts.capture;\n  }\n\n  localElement.addEventListener(eventType, wrapped, optsSupported ? opt_evtListenerOpts : capture);\n  return function () {\n    if (localElement) {\n      localElement.removeEventListener(eventType, wrapped, optsSupported ? opt_evtListenerOpts : capture);\n    } // Ensure these are GC'd\n\n\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\n\n\nfunction detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    var options = {\n      get capture() {\n        optsSupported = true;\n      }\n\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {// EventListenerOptions are not supported\n  }\n\n  return optsSupported;\n}\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\n\n\nfunction resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n\n},{}],16:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.createCustomEvent = createCustomEvent;\nexports.listen = listen;\nexports.getData = getData;\nexports.getDetail = getDetail;\nexports.listenOnce = listenOnce;\nexports.listenOncePromise = listenOncePromise;\nexports.isLoaded = isLoaded;\nexports.loadPromise = loadPromise;\nexports.isLoadErrorMessage = isLoadErrorMessage;\nexports.MEDIA_LOAD_FAILURE_SRC_PROPERTY = void 0;\n\nvar _eventHelperListen = require(\"./event-helper-listen\");\n\nvar _dom = require(\"./dom\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string}  */\nvar LOAD_FAILURE_PREFIX = 'Failed to load:';\n/** @const {string} */\n\nvar MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\n\nexports.MEDIA_LOAD_FAILURE_SRC_PROPERTY = MEDIA_LOAD_FAILURE_SRC_PROPERTY;\n\nfunction createCustomEvent(win, type, detail, opt_eventInit) {\n  var eventInit =\n  /** @type {!CustomEventInit} */\n  {\n    detail: detail\n  };\n  Object.assign(eventInit, opt_eventInit); // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n\n  if (typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    var e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(type, !!eventInit.bubbles, !!eventInit.cancelable, detail);\n    return e;\n  }\n}\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\n\nfunction listen(element, eventType, listener, opt_evtListenerOpts) {\n  return (0, _eventHelperListen.internalListenImplementation)(element, eventType, listener, opt_evtListenerOpts);\n}\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\n\n\nfunction getData(event) {\n  return (\n    /** @type {?JsonObject|string|undefined} */\n    event.data\n  );\n}\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\n\n\nfunction getDetail(event) {\n  return (\n    /** @type {?JsonObject|string|undefined} */\n    event.detail\n  );\n}\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\n\nfunction listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  var localListener = listener;\n  var unlisten = (0, _eventHelperListen.internalListenImplementation)(element, eventType, function (event) {\n    try {\n      localListener(event);\n    } finally {\n      // Ensure listener is GC'd\n      localListener = null;\n      unlisten();\n    }\n  }, opt_evtListenerOpts);\n  return unlisten;\n}\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\n\n\nfunction listenOncePromise(element, eventType, opt_evtListenerOpts, opt_cancel) {\n  var unlisten;\n  var eventPromise = new Promise(function (resolve) {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n\n  return eventPromise;\n}\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\n\n\nfunction isLoaded(eleOrWindow) {\n  return !!(eleOrWindow.complete || eleOrWindow.readyState == 'complete' || isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0 || // If the passed in thing is a Window, infer loaded state from\n  //\n  eleOrWindow.document && eleOrWindow.document.readyState == 'complete');\n}\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\n\n\nfunction loadPromise(eleOrWindow) {\n  var unlistenLoad;\n  var unlistenError;\n\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n\n  var isMediaElement = isHTMLMediaElement(eleOrWindow);\n\n  if (isMediaElement && eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc) {\n    return Promise.reject(eleOrWindow);\n  }\n\n  var loadingPromise = new Promise(function (resolve, reject) {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    } // Don't unlisten on error for Windows.\n\n\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n\n    var errorTarget = eleOrWindow; // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = (0, _dom.lastChildElement)(eleOrWindow, function (child) {\n        return child.tagName === 'SOURCE';\n      });\n\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n  return loadingPromise.then(function () {\n    if (unlistenError) {\n      unlistenError();\n    }\n\n    return eleOrWindow;\n  }, function () {\n    if (unlistenLoad) {\n      unlistenLoad();\n    }\n\n    failedToLoad(eleOrWindow);\n  });\n}\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\n\n\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] = eleOrWindow.currentSrc || true;\n  } // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n\n\n  var target = eleOrWindow;\n\n  if (target && target.src) {\n    target = target.src;\n  }\n\n  throw (0, _log.user)().createError(LOAD_FAILURE_PREFIX, target);\n}\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\n\n\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\n\n\nfunction isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n\n},{\"./dom\":13,\"./event-helper-listen\":15,\"./log\":20}],17:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isCanary = isCanary;\nexports.getBinaryType = getBinaryType;\nexports.isExperimentOn = isExperimentOn;\nexports.toggleExperiment = toggleExperiment;\nexports.experimentToggles = experimentToggles;\nexports.experimentTogglesOrNull = experimentTogglesOrNull;\nexports.getExperimentTogglesForTesting = getExperimentTogglesForTesting;\nexports.resetExperimentTogglesForTesting = resetExperimentTogglesForTesting;\nexports.randomlySelectUnsetExperiments = randomlySelectUnsetExperiments;\nexports.getExperimentBranch = getExperimentBranch;\nexports.forceExperimentBranch = forceExperimentBranch;\nexports.RANDOM_NUMBER_GENERATORS = exports.ExperimentInfo = void 0;\n\nvar _log = require(\"./log\");\n\nvar _mode = require(\"./mode\");\n\nvar _object = require(\"./utils/object\");\n\nvar _url = require(\"./url\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\n/** @const {string} */\nvar TAG = 'EXPERIMENTS';\n/** @const {string} */\n\nvar LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n/** @const {string} */\n\nvar TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n/**\n * @typedef {{\n *   isTrafficEligible: function(!Window):boolean,\n *   branches: !Array<string>\n * }}\n */\n\nvar ExperimentInfo;\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\n\nexports.ExperimentInfo = ExperimentInfo;\n\nfunction isCanary(win) {\n  return !!(win.AMP_CONFIG && win.AMP_CONFIG.canary);\n}\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\n\n\nfunction getBinaryType(win) {\n  return win.AMP_CONFIG && win.AMP_CONFIG.type ? win.AMP_CONFIG.type : 'unknown';\n}\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\n\n\nfunction isExperimentOn(win, experimentId) {\n  var toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\n\n\nfunction toggleExperiment(win, experimentId, opt_on, opt_transientExperiment) {\n  var currentlyOn = isExperimentOn(win,\n  /*OK*/\n  experimentId);\n  var on = !!(opt_on !== undefined ? opt_on : !currentlyOn);\n\n  if (on != currentlyOn) {\n    var toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      var storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles); // Avoid affecting tests that spy/stub warn().\n\n      if (!(0, _mode.getMode)().test) {\n        (0, _log.user)().warn(TAG, '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental', experimentId, on ? 'enabled' : 'disabled', win.location.hostname);\n      }\n    }\n  }\n\n  return on;\n}\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\n\n\nfunction experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n\n  win[TOGGLES_WINDOW_PROPERTY] = Object.create(null);\n  var toggles = win[TOGGLES_WINDOW_PROPERTY]; // Read the default config of this build.\n\n  if (win.AMP_CONFIG) {\n    for (var experimentId in win.AMP_CONFIG) {\n      var frequency = win.AMP_CONFIG[experimentId];\n\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  } // Read document level override from meta tag.\n\n\n  if (win.AMP_CONFIG && Array.isArray(win.AMP_CONFIG['allow-doc-opt-in']) && win.AMP_CONFIG['allow-doc-opt-in'].length > 0) {\n    var allowed = win.AMP_CONFIG['allow-doc-opt-in'];\n    var meta = win.document.head.querySelector('meta[name=\"amp-experiments-opt-in\"]');\n\n    if (meta) {\n      var optedInExperiments = meta.getAttribute('content').split(',');\n\n      for (var i = 0; i < optedInExperiments.length; i++) {\n        if (allowed.indexOf(optedInExperiments[i]) != -1) {\n          toggles[optedInExperiments[i]] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  if (win.AMP_CONFIG && Array.isArray(win.AMP_CONFIG['allow-url-opt-in']) && win.AMP_CONFIG['allow-url-opt-in'].length > 0) {\n    var _allowed = win.AMP_CONFIG['allow-url-opt-in'];\n    var hash = win.location.originalHash || win.location.hash;\n    var params = (0, _url.parseQueryString)(hash);\n\n    for (var _i = 0; _i < _allowed.length; _i++) {\n      var param = params[\"e-\" + _allowed[_i]];\n\n      if (param == '1') {\n        toggles[_allowed[_i]] = true;\n      }\n\n      if (param == '0') {\n        toggles[_allowed[_i]] = false;\n      }\n    }\n  }\n\n  return toggles;\n}\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {Object<string, boolean>}\n */\n\n\nfunction experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\n\n\nfunction getExperimentToggles(win) {\n  var experimentsString = '';\n\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch (e) {\n    (0, _log.dev)().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n\n  var tokens = experimentsString ? experimentsString.split(/\\s*,\\s*/g) : [];\n  var toggles = Object.create(null);\n\n  for (var i = 0; i < tokens.length; i++) {\n    if (tokens[i].length == 0) {\n      continue;\n    }\n\n    if (tokens[i][0] == '-') {\n      toggles[tokens[i].substr(1)] = false;\n    } else {\n      toggles[tokens[i]] = true;\n    }\n  }\n\n  return toggles;\n}\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\n\n\nfunction saveExperimentToggles(win, toggles) {\n  var experimentIds = [];\n\n  for (var experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n\n  try {\n    if ('localStorage' in win) {\n      win.localStorage.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n    }\n  } catch (e) {\n    (0, _log.user)().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\n\n\nfunction getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\n\n\nfunction resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\n\n\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\n\n\nvar RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng\n};\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\n\nexports.RANDOM_NUMBER_GENERATORS = RANDOM_NUMBER_GENERATORS;\n\nfunction selectRandomItem(arr) {\n  var rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return arr[Math.floor(rn * arr.length)] || null;\n}\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Object<string, !ExperimentInfo>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\n\n\nfunction randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  var selectedExperiments = {};\n\n  for (var experimentName in experiments) {\n    // Skip experimentName if it is not a key of experiments object or if it\n    // has already been populated by some other property.\n    if (!(0, _object.hasOwn)(experiments, experimentName)) {\n      continue;\n    }\n\n    if ((0, _object.hasOwn)(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] = win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (!experiments[experimentName].isTrafficEligible || !experiments[experimentName].isTrafficEligible(win)) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    } // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n\n\n    if (!win.__AMP_EXPERIMENT_BRANCHES[experimentName] && isExperimentOn(win,\n    /*OK*/\n    experimentName)) {\n      var branches = experiments[experimentName].branches;\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(branches);\n      selectedExperiments[experimentName] = win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n\n  return selectedExperiments;\n}\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\n\n\nfunction getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES ? win.__AMP_EXPERIMENT_BRANCHES[experimentName] : null;\n}\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\n\n\nfunction forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n\n},{\"./log\":20,\"./mode\":22,\"./url\":33,\"./utils/object\":36}],18:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.internalRuntimeVersion = internalRuntimeVersion;\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nfunction internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n\n},{}],19:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.recreateNonProtoObject = recreateNonProtoObject;\nexports.getValueForExpr = getValueForExpr;\nexports.parseJson = parseJson;\nexports.tryParseJson = tryParseJson;\nexports.getChildJsonConfig = getChildJsonConfig;\nexports.deepEquals = deepEquals;\nexports.jsonConfiguration = jsonConfiguration;\nexports.jsonLiteral = jsonLiteral;\nexports.includeJsonLiteral = includeJsonLiteral;\n\nvar _dom = require(\"./dom\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {*} should be string|number|boolean|null\n */\nvar JSONScalarDef;\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {*} should be !Object<string, ?JSONValueDef>\n */\n\nvar JSONObjectDef;\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {*} should be !Array<?JSONValueDef>\n */\n\nvar JSONArrayDef;\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {*} should be !JSONScalarDef|!JSONObjectDef|!JSONArrayDef\n */\n\nvar JSONValueDef;\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\n\nfunction recreateNonProtoObject(obj) {\n  var copy = Object.create(null);\n\n  for (var k in obj) {\n    if (!hasOwnProperty(obj, k)) {\n      continue;\n    }\n\n    var v = obj[k];\n    copy[k] = (0, _types.isObject)(v) ? recreateNonProtoObject(v) : v;\n  }\n\n  return (\n    /** @type {!JsonObject} */\n    copy\n  );\n}\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\n\n\nfunction getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  } // Otherwise, navigate via properties.\n\n\n  var parts = expr.split('.');\n  var value = obj;\n\n  for (var i = 0; i < parts.length; i++) {\n    var part = parts[i];\n\n    if (part && value && value[part] !== undefined && hasOwnProperty(value, part)) {\n      value = value[part];\n      continue;\n    }\n\n    value = undefined;\n    break;\n  }\n\n  return value;\n}\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {*} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\n\n\nfunction parseJson(json) {\n  return (\n    /** @type {?JsonObject} */\n    JSON.parse(\n    /** @type {string} */\n    json)\n  );\n}\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {*} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\n\n\nfunction tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    if (opt_onFailed) {\n      opt_onFailed(e);\n    }\n\n    return null;\n  }\n}\n/**\n * Helper method to get the json config from an element <script> tag\n * @param {!Element} element\n * @return {?JsonObject}\n * @throws {!Error} If element does not have exactly one <script> child\n * with type=\"application/json\", or if the <script> contents are not valid JSON.\n */\n\n\nfunction getChildJsonConfig(element) {\n  var scripts = (0, _dom.childElementsByTag)(element, 'script');\n  var n = scripts.length;\n\n  if (n !== 1) {\n    throw new Error(\"Found \" + scripts.length + \" <script> children. Expected 1.\");\n  }\n\n  var script = scripts[0];\n\n  if (!(0, _dom.isJsonScriptTag)(script)) {\n    throw new Error('<script> child must have type=\"application/json\"');\n  }\n\n  try {\n    return parseJson(script.textContent);\n  } catch (unusedError) {\n    throw new Error('Failed to parse <script> contents. Is it valid JSON?');\n  }\n}\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\n\n\nfunction deepEquals(a, b, depth) {\n  if (depth === void 0) {\n    depth = 5;\n  }\n\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n\n\n  var queue = [{\n    a: a,\n    b: b,\n    depth: depth\n  }];\n\n  while (queue.length > 0) {\n    var _queue$shift = queue.shift(),\n        _a = _queue$shift.a,\n        _b = _queue$shift.b,\n        _depth = _queue$shift.depth; // Only check deep equality if depth > 0.\n\n\n    if (_depth > 0) {\n      if (typeof _a !== typeof _b) {\n        return false;\n      } else if (Array.isArray(_a) && Array.isArray(_b)) {\n        if (_a.length !== _b.length) {\n          return false;\n        }\n\n        for (var i = 0; i < _a.length; i++) {\n          queue.push({\n            a: _a[i],\n            b: _b[i],\n            depth: _depth - 1\n          });\n        }\n\n        continue;\n      } else if (_a && _b && typeof _a === 'object' && typeof _b === 'object') {\n        var keysA = Object.keys(\n        /** @type {!Object} */\n        _a);\n        var keysB = Object.keys(\n        /** @type {!Object} */\n        _b);\n\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n\n        for (var _i = 0; _i < keysA.length; _i++) {\n          var k = keysA[_i];\n          queue.push({\n            a: _a[k],\n            b: _b[k],\n            depth: _depth - 1\n          });\n        }\n\n        continue;\n      }\n    } // If we get here, then depth == 0 or (a, b) are primitives.\n\n\n    if (_a !== _b) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @param {*} obj\n * @param {string} key\n * @return {boolean}\n */\n\n\nfunction hasOwnProperty(obj, key) {\n  if (obj == null || typeof obj != 'object') {\n    return false;\n  }\n\n  return Object.prototype.hasOwnProperty.call(\n  /** @type {!Object} */\n  obj, key);\n}\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\n\n\nfunction jsonConfiguration(obj) {\n  return (\n    /** @type {!JsonObject} */\n    obj\n  );\n}\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {!Object|!Array|string|number|boolean|null} value\n * @return {!InternalJsonLiteralTypeDef}\n */\n\n\nfunction jsonLiteral(value) {\n  return (\n    /** @type {!InternalJsonLiteralTypeDef} */\n    value\n  );\n}\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\n\n\nfunction includeJsonLiteral(value) {\n  return value;\n}\n\n},{\"./dom\":13,\"./types\":30}],20:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isUserErrorMessage = isUserErrorMessage;\nexports.isUserErrorEmbed = isUserErrorEmbed;\nexports.setReportError = setReportError;\nexports.overrideLogLevel = overrideLogLevel;\nexports.duplicateErrorIfNecessary = duplicateErrorIfNecessary;\nexports.createErrorVargs = createErrorVargs;\nexports.rethrowAsync = rethrowAsync;\nexports.initLogConstructor = initLogConstructor;\nexports.resetLogConstructorForTesting = resetLogConstructorForTesting;\nexports.user = user;\nexports.dev = dev;\nexports.isFromEmbed = isFromEmbed;\nexports.devAssert = devAssert;\nexports.userAssert = userAssert;\nexports.Log = exports.LogLevel = exports.USER_ERROR_EMBED_SENTINEL = exports.USER_ERROR_SENTINEL = void 0;\n\nvar _mode = require(\"./mode\");\n\nvar _modeObject = require(\"./mode-object\");\n\nvar _internalVersion = require(\"./internal-version\");\n\nvar _types = require(\"./types\");\n\nvar _function = require(\"./utils/function\");\n\nvar _config = require(\"./config\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar noop = function noop() {};\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\n\n\nvar USER_ERROR_SENTINEL = \"\\u200B\\u200B\\u200B\";\n/**\n * Four zero width space.\n *\n * @const {string}\n */\n\nexports.USER_ERROR_SENTINEL = USER_ERROR_SENTINEL;\nvar USER_ERROR_EMBED_SENTINEL = \"\\u200B\\u200B\\u200B\\u200B\";\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\n\nexports.USER_ERROR_EMBED_SENTINEL = USER_ERROR_EMBED_SENTINEL;\n\nfunction isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\n\n\nfunction isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n/**\n * @enum {number}\n * @private Visible for testing only.\n */\n\n\nvar LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4\n};\n/**\n * Sets reportError function. Called from error.js to break cyclic\n * dependency.\n * @param {function(*, !Element=)|undefined} fn\n */\n\nexports.LogLevel = LogLevel;\n\nfunction setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\n\n\nvar levelOverride_ = undefined;\n/**\n * @param {!LogLevel} level\n */\n\nfunction overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\n\n\nvar messageUrlRtv = function messageUrlRtv() {\n  return \"01\" + (0, _internalVersion.internalRuntimeVersion)();\n};\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\n\n\nvar externalMessageUrl = function externalMessageUrl(id, interpolatedParts) {\n  return interpolatedParts.reduce(function (prefix, arg) {\n    return prefix + \"&s[]=\" + messageArgToEncodedComponent(arg);\n  }, \"https://log.amp.dev/?v=\" + messageUrlRtv() + \"&id=\" + encodeURIComponent(id));\n};\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\n\n\nvar externalMessagesSimpleTableUrl = function externalMessagesSimpleTableUrl() {\n  return _config.urls.cdn + \"/rtv/\" + messageUrlRtv() + \"/log-messages.simple.json\";\n};\n/**\n * @param {*} arg\n * @return {string}\n */\n\n\nvar messageArgToEncodedComponent = function messageArgToEncodedComponent(arg) {\n  return encodeURIComponent(String(elementStringOrPassthru(arg)));\n};\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don’t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\n\n\nvar Log =\n/*#__PURE__*/\nfunction () {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(!./mode.ModeDef):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  function Log(win, levelFunc, opt_suffix) {\n    var _this = this;\n\n    if (opt_suffix === void 0) {\n      opt_suffix = '';\n    }\n\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = (0, _mode.getMode)().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n    /** @private @const {function(!./mode.ModeDef):!LogLevel} */\n\n    this.levelFunc_ = levelFunc;\n    /** @private @const {!LogLevel} */\n\n    this.level_ = this.defaultLevel_();\n    /** @private @const {string} */\n\n    this.suffix_ = opt_suffix;\n    /** @private {?JsonObject} */\n\n    this.messages_ = null;\n    this.fetchExternalMessagesOnce_ = (0, _function.once)(function () {\n      win.fetch(externalMessagesSimpleTableUrl()).then(function (response) {\n        return response.json();\n      }, noop).then(function (opt_messages) {\n        if (opt_messages) {\n          _this.messages_ =\n          /** @type {!JsonObject} */\n          opt_messages;\n        }\n      });\n    });\n  }\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n\n\n  var _proto = Log.prototype;\n\n  _proto.getLevel_ = function getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  ;\n\n  _proto.defaultLevel_ = function defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    } // Logging has been explicitly disabled.\n\n\n    if ((0, _mode.getMode)().log == '0') {\n      return LogLevel.OFF;\n    } // Logging is enabled for tests directly.\n\n\n    if ((0, _mode.getMode)().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    } // LocalDev by default allows INFO level, unless overriden by `#log`.\n\n\n    if ((0, _mode.getMode)().localDev && !(0, _mode.getMode)().log) {\n      return LogLevel.INFO;\n    } // Delegate to the specific resolver.\n\n\n    return this.levelFunc_((0, _modeObject.getModeObject)());\n  }\n  /**\n   * @param {string} tag\n   * @param {string} level\n   * @param {!Array} messages\n   */\n  ;\n\n  _proto.msg_ = function msg_(tag, level, messages) {\n    if (this.getLevel_() != LogLevel.OFF) {\n      var fn = this.win.console.log;\n\n      if (level == 'ERROR') {\n        fn = this.win.console.error || fn;\n      } else if (level == 'INFO') {\n        fn = this.win.console.info || fn;\n      } else if (level == 'WARN') {\n        fn = this.win.console.warn || fn;\n      }\n\n      var args = this.maybeExpandMessageArgs_(messages); // Prefix console message with \"[tag]\".\n\n      var prefix = \"[\" + tag + \"]\";\n\n      if (typeof args[0] === 'string') {\n        // Prepend string to avoid breaking string substitutions e.g. %s.\n        args[0] = prefix + ' ' + args[0];\n      } else {\n        args.unshift(prefix);\n      }\n\n      fn.apply(this.win.console, args);\n    }\n  }\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isEnabled = function isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.fine = function fine(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.FINE) {\n      this.msg_(tag, 'FINE', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.info = function info(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.INFO) {\n      this.msg_(tag, 'INFO', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.warn = function warn(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.WARN) {\n      this.msg_(tag, 'WARN', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} var_args\n   * @return {!Error|undefined}\n   * @private\n   */\n  ;\n\n  _proto.error_ = function error_(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.ERROR) {\n      this.msg_(tag, 'ERROR', Array.prototype.slice.call(arguments, 1));\n    } else {\n      var error = createErrorVargs.apply(null, Array.prototype.slice.call(arguments, 1));\n      this.prepareError_(error);\n      return error;\n    }\n  }\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.error = function error(tag, var_args) {\n    var error = this.error_.apply(this, arguments);\n\n    if (error) {\n      error.name = tag || error.name; // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.expectedError = function expectedError(unusedTag, var_args) {\n    var error = this.error_.apply(this, arguments);\n\n    if (error) {\n      error.expected = true; // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  ;\n\n  _proto.createError = function createError(var_args) {\n    var error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  ;\n\n  _proto.createExpectedError = function createExpectedError(var_args) {\n    var error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * NOTE: for an explanation of the tempate R implementation see\n   * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {R} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is `null` or `undefined`.\n   * @template T\n   * @template R :=\n   *     mapunion(T, (V) =>\n   *         cond(eq(V, 'null'),\n   *             none(),\n   *             cond(eq(V, 'undefined'),\n   *                 none(),\n   *                 V)))\n   *  =:\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assert = function assert(shouldBeTrueish, opt_message, var_args) {\n    var firstElement;\n\n    if ((0, _types.isArray)(opt_message)) {\n      return this.assert.apply(this, [shouldBeTrueish].concat(this.expandMessageArgs_(\n      /** @type {!Array} */\n      opt_message)));\n    }\n\n    if (!shouldBeTrueish) {\n      var message = opt_message || 'Assertion failed';\n      var splitMessage = message.split('%s');\n      var first = splitMessage.shift();\n      var formatted = first;\n      var messageArray = [];\n      var i = 2;\n      pushIfNonEmpty(messageArray, first);\n\n      while (splitMessage.length > 0) {\n        var nextConstant = splitMessage.shift();\n        var val = arguments[i++];\n\n        if (val && val.tagName) {\n          firstElement = val;\n        }\n\n        messageArray.push(val);\n        pushIfNonEmpty(messageArray, nextConstant.trim());\n        formatted += stringOrElementString(val) + nextConstant;\n      }\n\n      var e = new Error(formatted);\n      e.fromAssert = true;\n      e.associatedElement = firstElement;\n      e.messageArray = messageArray;\n      this.prepareError_(e); // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(e);\n\n      throw e;\n    }\n\n    return shouldBeTrueish;\n  }\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertElement = function assertElement(shouldBeElement, opt_message) {\n    var shouldBeTrueish = shouldBeElement && shouldBeElement.nodeType == 1;\n    this.assertType_(shouldBeElement, shouldBeTrueish, 'Element expected', opt_message);\n    return (\n      /** @type {!Element} */\n      shouldBeElement\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertString = function assertString(shouldBeString, opt_message) {\n    this.assertType_(shouldBeString, typeof shouldBeString == 'string', 'String expected', opt_message);\n    return (\n      /** @type {string} */\n      shouldBeString\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertNumber = function assertNumber(shouldBeNumber, opt_message) {\n    this.assertType_(shouldBeNumber, typeof shouldBeNumber == 'number', 'Number expected', opt_message);\n    return (\n      /** @type {number} */\n      shouldBeNumber\n    );\n  }\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertArray = function assertArray(shouldBeArray, opt_message) {\n    this.assertType_(shouldBeArray, (0, _types.isArray)(shouldBeArray), 'Array expected', opt_message);\n    return (\n      /** @type {!Array} */\n      shouldBeArray\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertBoolean = function assertBoolean(shouldBeBoolean, opt_message) {\n    this.assertType_(shouldBeBoolean, !!shouldBeBoolean === shouldBeBoolean, 'Boolean expected', opt_message);\n    return (\n      /** @type {boolean} */\n      shouldBeBoolean\n    );\n  }\n  /**\n   * Asserts and returns the enum value. If the enum doesn't contain such a\n   * value, the error is thrown.\n   *\n   * @param {!Object<T>} enumObj\n   * @param {string} s\n   * @param {string=} opt_enumName\n   * @return {T}\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertEnumValue = function assertEnumValue(enumObj, s, opt_enumName) {\n    if ((0, _types.isEnumValue)(enumObj, s)) {\n      return s;\n    }\n\n    this.assert(false, 'Unknown %s value: \"%s\"', opt_enumName || 'enum', s);\n  }\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  ;\n\n  _proto.prepareError_ = function prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  ;\n\n  _proto.maybeExpandMessageArgs_ = function maybeExpandMessageArgs_(args) {\n    if ((0, _types.isArray)(args[0])) {\n      return this.expandMessageArgs_(\n      /** @type {!Array} */\n      args[0]);\n    }\n\n    return args;\n  }\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  ;\n\n  _proto.expandMessageArgs_ = function expandMessageArgs_(parts) {\n    // First value should exist.\n    var id = parts.shift(); // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n\n    if ((0, _mode.getMode)(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n\n    return [\"More info at \" + externalMessageUrl(id, parts)];\n  }\n  /**\n   * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n   *\n   * It understands array-based \"id\"-contracted messages.\n   *\n   * Otherwise creates a sprintf syntax string containing the optional message or the\n   * default. An interpolation token is added at the end to include the `subject`.\n   * @param {*} subject\n   * @param {*} assertion\n   * @param {string} defaultMessage\n   * @param {!Array|string=} opt_message\n   * @private\n   */\n  ;\n\n  _proto.assertType_ = function assertType_(subject, assertion, defaultMessage, opt_message) {\n    if ((0, _types.isArray)(opt_message)) {\n      this.assert(assertion, opt_message.concat(subject));\n    } else {\n      this.assert(assertion, (opt_message || defaultMessage) + \": %s\", subject);\n    }\n  };\n\n  return Log;\n}();\n/**\n * @param {string|!Element} val\n * @return {string}\n */\n\n\nexports.Log = Log;\n\nvar stringOrElementString = function stringOrElementString(val) {\n  return (\n    /** @type {string} */\n    elementStringOrPassthru(val)\n  );\n};\n/**\n * @param {*} val\n * @return {*}\n */\n\n\nfunction elementStringOrPassthru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (val && val.nodeType == 1) {\n    return val.tagName.toLowerCase() + (val.id ? '#' + val.id : '');\n  }\n\n  return val;\n}\n/**\n * @param {!Array} array\n * @param {*} val\n */\n\n\nfunction pushIfNonEmpty(array, val) {\n  if (val != '') {\n    array.push(val);\n  }\n}\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\n\n\nfunction duplicateErrorIfNecessary(error) {\n  var messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n\n  if (messageProperty && messageProperty.writable) {\n    return error;\n  }\n\n  var message = error.message,\n      stack = error.stack;\n  var e = new Error(message); // Copy all the extraneous things we attach.\n\n  for (var prop in error) {\n    e[prop] = error[prop];\n  } // Ensure these are copied.\n\n\n  e.stack = stack;\n  return e;\n}\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\n\n\nfunction createErrorVargs(var_args) {\n  var error = null;\n  var message = '';\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n\n  return error;\n}\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\n\n\nfunction rethrowAsync(var_args) {\n  var error = createErrorVargs.apply(null, arguments);\n  setTimeout(function () {\n    // reportError is installed globally per window in the entry point.\n    self.__AMP_REPORT_ERROR(error);\n\n    throw error;\n  });\n}\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\n\n\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null\n};\nvar logs = self.__AMP_LOG;\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?Function}\n */\n\nvar logConstructor = null;\n/**\n * Initializes log contructor.\n */\n\nfunction initLogConstructor() {\n  logConstructor = Log; // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n\n  dev();\n  user();\n}\n/**\n * Resets log contructor for testing.\n */\n\n\nfunction resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\n\n\nfunction user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n\n    return logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL);\n  }\n}\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\n\n\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n\n  return new logConstructor(self, function (mode) {\n    var logNum = parseInt(mode.log, 10);\n\n    if (mode.development || logNum >= 1) {\n      return LogLevel.FINE;\n    }\n\n    return LogLevel.WARN;\n  }, suffix);\n}\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\n\n\nfunction dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n\n  return logs.dev = new logConstructor(self, function (mode) {\n    var logNum = parseInt(mode.log, 10);\n\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n\n    return LogLevel.OFF;\n  });\n}\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\n\n\nfunction isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n\n  return opt_element.ownerDocument.defaultView != win;\n}\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction devAssert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9) {\n  if ((0, _mode.getMode)().minified) {\n    return shouldBeTrueish;\n  }\n\n  return dev().\n  /*Orig call*/\n  assert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9);\n}\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction userAssert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9) {\n  return user().\n  /*Orig call*/\n  assert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9);\n}\n\n},{\"./config\":10,\"./internal-version\":18,\"./mode\":22,\"./mode-object\":21,\"./types\":30,\"./utils/function\":34}],21:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getModeObject = getModeObject;\n\nvar _mode = require(\"./mode\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides info about the current app. This return value may be cached and\n * passed around as it will always be DCE'd.\n * @param {?Window=} opt_win\n * @return {!./mode.ModeDef}\n */\nfunction getModeObject(opt_win) {\n  return {\n    localDev: (0, _mode.getMode)(opt_win).localDev,\n    development: (0, _mode.getMode)(opt_win).development,\n    filter: (0, _mode.getMode)(opt_win).filter,\n    minified: (0, _mode.getMode)(opt_win).minified,\n    lite: (0, _mode.getMode)(opt_win).lite,\n    test: (0, _mode.getMode)(opt_win).test,\n    log: (0, _mode.getMode)(opt_win).log,\n    version: (0, _mode.getMode)(opt_win).version,\n    rtvVersion: (0, _mode.getMode)(opt_win).rtvVersion,\n    singlePassType: (0, _mode.getMode)(opt_win).singlePassType\n  };\n}\n\n},{\"./mode\":22}],22:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getMode = getMode;\nexports.getRtvVersionForTesting = getRtvVersionForTesting;\nexports.resetRtvVersionForTesting = resetRtvVersionForTesting;\nexports.ModeDef = void 0;\n\nvar _internalVersion = require(\"./internal-version\");\n\nvar _urlParseQueryString = require(\"./url-parse-query-string\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   filter: (string|undefined),\n *   minified: boolean,\n *   lite: boolean,\n *   test: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   singlePassType: (string|undefined)\n * }}\n */\nvar ModeDef;\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\n\nexports.ModeDef = ModeDef;\nvar rtvVersion = '';\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\n\nfunction getMode(opt_win) {\n  var win = opt_win || self;\n\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n\n  return win.__AMP_MODE = getMode_(win);\n}\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\n\n\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  var AMP_CONFIG = self.AMP_CONFIG || {}; // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_DEV is only replaced when `gulp dist` is called without the\n  // --fortesting flag.\n\n  var IS_DEV = true;\n  var IS_MINIFIED = false;\n  var localDevEnabled = !!AMP_CONFIG.localDev;\n  var runningTests = !!AMP_CONFIG.test || IS_DEV && !!(win.__AMP_TEST || win.__karma__);\n  var runningTestsOnIe = win.__karma__ && win.__karma__.config.amp.testOnIe;\n  var isLocalDev = IS_DEV && (localDevEnabled || runningTests);\n  var hashQuery = (0, _urlParseQueryString.parseQueryString_)( // location.originalHash is set by the viewer when it removes the fragment\n  // from the URL.\n  win.location.originalHash || win.location.hash);\n  var singlePassType = AMP_CONFIG.spt;\n  var searchQuery = (0, _urlParseQueryString.parseQueryString_)(win.location.search);\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win, isLocalDev);\n  } // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `gulp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n\n\n  return {\n    localDev: isLocalDev,\n    // Triggers validation or enable pub level logging. Validation can be\n    // bypassed via #validate=0.\n    // Note that AMP_DEV_MODE flag is used for testing purposes.\n    // Use Array.indexOf instead of Array.includes because of #24219\n    development: !!(['1', 'actions', 'amp', 'amp4ads', 'amp4email'].indexOf(hashQuery['development']) >= 0 || win.AMP_DEV_MODE),\n    examiner: hashQuery['development'] == '2',\n    // Allows filtering validation errors by error category. For the\n    // available categories, see ErrorCategory in validator/validator.proto.\n    filter: hashQuery['filter'],\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    // amp-user-location override\n    userLocationOverride: hashQuery['amp-user-location'],\n    minified: IS_MINIFIED,\n    // Whether document is in an amp-lite viewer. It signal that the user\n    // would prefer to use less bandwidth.\n    lite: searchQuery['amp_lite'] != undefined,\n    test: runningTests,\n    testIe: runningTestsOnIe,\n    log: hashQuery['log'],\n    version: (0, _internalVersion.internalRuntimeVersion)(),\n    rtvVersion: rtvVersion,\n    singlePassType: singlePassType\n  };\n}\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n */\n\n\nfunction getRtvVersion(win, isLocalDev) {\n  // If it's local dev then we won't actually have a full version so\n  // just use the version.\n  if (isLocalDev) {\n    return (0, _internalVersion.internalRuntimeVersion)();\n  }\n\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  } // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n\n\n  return \"01\" + (0, _internalVersion.internalRuntimeVersion)();\n}\n/**\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n * @visibleForTesting\n */\n\n\nfunction getRtvVersionForTesting(win, isLocalDev) {\n  return getRtvVersion(win, isLocalDev);\n}\n/** @visibleForTesting */\n\n\nfunction resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n\n},{\"./internal-version\":18,\"./url-parse-query-string\":31}],23:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.Observable = void 0;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This class helps to manage observers. Observers can be added, removed or\n * fired through and instance of this class.\n * @template TYPE\n */\nvar Observable =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of Observable.\n   */\n  function Observable() {\n    /** @type {?Array<function(TYPE)>} */\n    this.handlers_ = null;\n  }\n  /**\n   * Adds the observer to this instance.\n   * @param {function(TYPE)} handler Observer's handler.\n   * @return {!UnlistenDef}\n   */\n\n\n  var _proto = Observable.prototype;\n\n  _proto.add = function add(handler) {\n    var _this = this;\n\n    if (!this.handlers_) {\n      this.handlers_ = [];\n    }\n\n    this.handlers_.push(handler);\n    return function () {\n      _this.remove(handler);\n    };\n  }\n  /**\n   * Removes the observer from this instance.\n   * @param {function(TYPE)} handler Observer's instance.\n   */\n  ;\n\n  _proto.remove = function remove(handler) {\n    if (!this.handlers_) {\n      return;\n    }\n\n    var index = this.handlers_.indexOf(handler);\n\n    if (index > -1) {\n      this.handlers_.splice(index, 1);\n    }\n  }\n  /**\n   * Removes all observers.\n   */\n  ;\n\n  _proto.removeAll = function removeAll() {\n    if (!this.handlers_) {\n      return;\n    }\n\n    this.handlers_.length = 0;\n  }\n  /**\n   * Fires an event. All observers are called.\n   * @param {TYPE=} opt_event\n   */\n  ;\n\n  _proto.fire = function fire(opt_event) {\n    if (!this.handlers_) {\n      return;\n    }\n\n    var handlers = this.handlers_;\n\n    for (var i = 0; i < handlers.length; i++) {\n      var handler = handlers[i];\n      handler(opt_event);\n    }\n  }\n  /**\n   * Returns number of handlers. Mostly needed for tests.\n   * @return {number}\n   */\n  ;\n\n  _proto.getHandlerCount = function getHandlerCount() {\n    if (!this.handlers_) {\n      return 0;\n    }\n\n    return this.handlers_.length;\n  };\n\n  return Observable;\n}();\n\nexports.Observable = Observable;\n\n},{}],24:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getExistingServiceForDocInEmbedScope = getExistingServiceForDocInEmbedScope;\nexports.installServiceInEmbedScope = installServiceInEmbedScope;\nexports.registerServiceBuilder = registerServiceBuilder;\nexports.registerServiceBuilderForDoc = registerServiceBuilderForDoc;\nexports.rejectServicePromiseForDoc = rejectServicePromiseForDoc;\nexports.getService = getService;\nexports.getServicePromise = getServicePromise;\nexports.getExistingServiceOrNull = getExistingServiceOrNull;\nexports.getServicePromiseOrNull = getServicePromiseOrNull;\nexports.getServiceForDoc = getServiceForDoc;\nexports.getServicePromiseForDoc = getServicePromiseForDoc;\nexports.getServicePromiseOrNullForDoc = getServicePromiseOrNullForDoc;\nexports.setParentWindow = setParentWindow;\nexports.getParentWindow = getParentWindow;\nexports.getTopWindow = getTopWindow;\nexports.getParentWindowFrameElement = getParentWindowFrameElement;\nexports.getAmpdoc = getAmpdoc;\nexports.isDisposable = isDisposable;\nexports.assertDisposable = assertDisposable;\nexports.disposeServicesForDoc = disposeServicesForDoc;\nexports.disposeServicesForEmbed = disposeServicesForEmbed;\nexports.installServiceInEmbedIfEmbeddable = installServiceInEmbedIfEmbeddable;\nexports.adoptServiceForEmbedDoc = adoptServiceForEmbedDoc;\nexports.resetServiceForTesting = resetServiceForTesting;\nexports.EmbeddableService = exports.Disposable = void 0;\n\nvar _promise = require(\"./utils/promise\");\n\nvar _log = require(\"./log\");\n\nvar _experiments = require(\"./experiments\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (?function(new:Object, !Window)|\n *          ?function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nvar ServiceHolderDef;\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\n\nvar Disposable =\n/*#__PURE__*/\nfunction () {\n  function Disposable() {}\n\n  var _proto = Disposable.prototype;\n\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  _proto.dispose = function dispose() {};\n\n  return Disposable;\n}();\n/**\n * Services must implement this interface to be embeddable in FIEs.\n * @interface\n */\n\n\nexports.Disposable = Disposable;\n\nvar EmbeddableService =\n/*#__PURE__*/\nfunction () {\n  function EmbeddableService() {}\n\n  /**\n   * Installs a new instance of the service in the given FIE window.\n   * @param {!Window} unusedEmbedWin\n   * @param {!./service/ampdoc-impl.AmpDoc} unusedAmpDoc\n   */\n  EmbeddableService.installInEmbedWindow = function installInEmbedWindow(unusedEmbedWin, unusedAmpDoc) {};\n\n  return EmbeddableService;\n}();\n/**\n * Returns a service with the given id. Assumes that it has been constructed\n * already.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\n\n\nexports.EmbeddableService = EmbeddableService;\n\nfunction getExistingServiceForDocInEmbedScope(element, id) {\n  // TODO(#22733): completely remove this method once ampdoc-fie launches.\n  var document = element.ownerDocument;\n  var win = (0, _types.toWin)(document.defaultView);\n  var topWin = getTopWindow(win); // First, try to resolve via local embed window (if applicable).\n\n  var isEmbed = win != topWin;\n  var ampdocFieExperimentOn = (0, _experiments.isExperimentOn)(topWin, 'ampdoc-fie');\n\n  if (isEmbed && !ampdocFieExperimentOn) {\n    if (isServiceRegistered(win, id)) {\n      return getServiceInternal(win, id);\n    } // Fallback from FIE to parent is intentionally unsupported for safety.\n\n\n    return null;\n  } else {\n    // Resolve via the element's ampdoc.\n    return getServiceForDocOrNullInternal(element, id);\n  }\n}\n/**\n * Installs a service override on amp-doc level.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {!Object} service The service.\n */\n\n\nfunction installServiceInEmbedScope(embedWin, id, service) {\n  var topWin = getTopWindow(embedWin);\n  (0, _log.devAssert)(embedWin != topWin, 'Service override can only be installed in embed window: %s', id);\n  (0, _log.devAssert)(!isServiceRegistered(embedWin, id), 'Service override has already been installed: %s', id);\n  var ampdocFieExperimentOn = (0, _experiments.isExperimentOn)(topWin, 'ampdoc-fie');\n\n  if (ampdocFieExperimentOn) {\n    var ampdoc = getAmpdoc(embedWin.document);\n    registerServiceInternal(getAmpdocServiceHolder(ampdoc), ampdoc, id, function () {\n      return service;\n    },\n    /* override */\n    true);\n  } else {\n    registerServiceInternal(embedWin, embedWin, id, function () {\n      return service;\n    });\n    getServiceInternal(embedWin, id); // Force service to build.\n  }\n}\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\n\n\nfunction registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\n\n\nfunction registerServiceBuilderForDoc(nodeOrDoc, id, constructor, opt_instantiate) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\n\n\nfunction rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\n\n\nfunction getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\n\n\nfunction getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\n\n\nfunction getServiceForDoc(elementOrAmpDoc, id) {\n  var ampdoc = getAmpdoc(elementOrAmpDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\n\n\nfunction getServiceForDocOrNullInternal(element, id) {\n  var ampdoc = getAmpdoc(element);\n  var holder = getAmpdocServiceHolder(ampdoc);\n\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\n\n\nfunction setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\n\n\nfunction getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\n\n\nfunction getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\n\n\nfunction getParentWindowFrameElement(node, opt_topWin) {\n  var childWin = (node.ownerDocument || node).defaultView;\n  var topWin = opt_topWin || getTopWindow(childWin);\n\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return (\n        /** @type {?HTMLIFrameElement} */\n        childWin.frameElement\n      );\n    } catch (e) {// Ignore the error.\n    }\n  }\n\n  return null;\n}\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\n\n\nfunction getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    var win = (0, _types.toWin)(\n    /** @type {!Document} */\n    (nodeOrDoc.ownerDocument || nodeOrDoc).defaultView);\n    return getAmpdocService(win).getAmpDoc(\n    /** @type {!Node} */\n    nodeOrDoc);\n  }\n\n  return (\n    /** @type {!./service/ampdoc-impl.AmpDoc} */\n    nodeOrDoc\n  );\n}\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\n\n\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\n\n\nfunction getAmpdocService(win) {\n  return (\n    /** @type {!./service/ampdoc-impl.AmpDocService} */\n    getService(win, 'ampdoc')\n  );\n}\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n * @template T\n */\n\n\nfunction getServiceInternal(holder, id) {\n  (0, _log.devAssert)(isServiceRegistered(holder, id), \"Expected service \" + id + \" to be registered\");\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (!s.obj) {\n    (0, _log.devAssert)(s.ctor, \"Service \" + id + \" registered without ctor nor impl.\");\n    (0, _log.devAssert)(s.context, \"Service \" + id + \" registered without context.\");\n    s.obj = new s.ctor(s.context);\n    (0, _log.devAssert)(s.obj, \"Service \" + id + \" constructed to null.\");\n    s.ctor = null;\n    s.context = null; // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n\n  return s.obj;\n}\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n */\n\n\nfunction registerServiceInternal(holder, context, id, ctor, opt_override) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null\n    };\n  }\n\n  if (!opt_override && (s.ctor || s.obj)) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context; // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromiseInternal(holder, id) {\n  var cached = getServicePromiseOrNullInternal(holder, id);\n\n  if (cached) {\n    return cached;\n  } // Service is not registered.\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n\n\n  var services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return (\n    /** @type {!Promise<!Object>} */\n    services[id].promise\n  );\n}\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\n\n\nfunction rejectServicePromiseInternal(holder, id, error) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNullInternal(holder, id) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return s.promise = Promise.resolve(\n      /** @type {!Object} */\n      s.obj);\n    }\n  }\n\n  return null;\n}\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\n\n\nfunction getServices(holder) {\n  var services = holder.__AMP_SERVICES;\n\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n\n  return services;\n}\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\n\n\nfunction isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\n\n\nfunction assertDisposable(service) {\n  (0, _log.devAssert)(isDisposable(service), 'required to implement Disposable');\n  return (\n    /** @type {!Disposable} */\n    service\n  );\n}\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\n\n\nfunction disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\n\n\nfunction disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n/**\n * @param {!Object} holder Object holding the service instances.\n */\n\n\nfunction disposeServicesInternal(holder) {\n  // TODO(dvoytenko): Consider marking holder as destroyed for later-arriving\n  // service to be canceled automatically.\n  var services = getServices(holder);\n\n  var _loop = function _loop(id) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      return \"continue\";\n    }\n\n    var serviceHolder = services[id];\n\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then(function (instance) {\n        return disposeServiceInternal(id, instance);\n      });\n    }\n  };\n\n  for (var id in services) {\n    var _ret = _loop(id);\n\n    if (_ret === \"continue\") continue;\n  }\n}\n/**\n * @param {string} id\n * @param {!Object} service\n */\n\n\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    (0, _log.dev)().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n/**\n * Adopts an embeddable (implements `EmbeddableService` interface) service\n * in embed scope.\n * @param {!Window} embedWin\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} serviceClass\n * @suppress {missingProperties}\n * @return {boolean}\n */\n\n\nfunction installServiceInEmbedIfEmbeddable(embedWin, serviceClass) {\n  var isEmbeddableService = typeof serviceClass.installInEmbedWindow === 'function';\n\n  if (!isEmbeddableService) {\n    return false;\n  }\n\n  var frameElement = (0, _log.dev)().assertElement(embedWin.frameElement, 'frameElement not found for embed');\n  var ampdoc = getAmpdoc(frameElement);\n  serviceClass.installInEmbedWindow(embedWin, ampdoc);\n  return true;\n}\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\n\n\nfunction adoptServiceForEmbedDoc(ampdoc, id) {\n  var service = getServiceInternal(getAmpdocServiceHolder((0, _log.devAssert)(ampdoc.getParent())), id);\n  registerServiceInternal(getAmpdocServiceHolder(ampdoc), ampdoc, id, function () {\n    return service;\n  });\n}\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\n\n\nfunction resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\n\n\nfunction isServiceRegistered(holder, id) {\n  var service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id]; // All registered services must have an implementation or a constructor.\n\n  return !!(service && (service.ctor || service.obj));\n}\n/** @return {!ServiceHolderDef} */\n\n\nfunction emptyServiceHolderWithPromise() {\n  var deferred = new _promise.Deferred();\n  var promise = deferred.promise,\n      resolve = deferred.resolve,\n      reject = deferred.reject;\n  promise.catch(function () {}); // avoid uncaught exception when service gets rejected\n\n  return {\n    obj: null,\n    promise: promise,\n    resolve: resolve,\n    reject: reject,\n    context: null,\n    ctor: null\n  };\n}\n\n},{\"./experiments\":17,\"./log\":20,\"./types\":30,\"./utils/promise\":37}],25:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.NotificationUiManager = exports.NOTIFICATION_UI_MANAGER = void 0;\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar NOTIFICATION_UI_MANAGER = 'notificationUIManager';\nexports.NOTIFICATION_UI_MANAGER = NOTIFICATION_UI_MANAGER;\n\nvar NotificationUiManager =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of NotificationUiManager.\n   */\n  function NotificationUiManager() {\n    /** @private {number} */\n    this.queueSize_ = 0;\n    /** @private {!Promise} */\n\n    this.queuePromise_ = Promise.resolve();\n    /** @private {function()} */\n\n    this.queueEmptyHandler_ = function () {}; // Make this an observable if requested\n\n    /** @private {function()} */\n\n\n    this.queueNotEmptyHandler_ = function () {};\n  }\n  /**\n   * Register handler to be called when UI queue becomes empty\n   * @param {function()} handler\n   */\n\n\n  var _proto = NotificationUiManager.prototype;\n\n  _proto.onQueueEmpty = function onQueueEmpty(handler) {\n    this.queueEmptyHandler_ = handler;\n\n    if (this.queueSize_ == 0) {\n      handler();\n    }\n  }\n  /**\n   * Register handler to be called when UI queue becomes not empty\n   * @param {function()} handler\n   */\n  ;\n\n  _proto.onQueueNotEmpty = function onQueueNotEmpty(handler) {\n    this.queueNotEmptyHandler_ = handler;\n\n    if (this.queueSize_ > 0) {\n      handler();\n    }\n  }\n  /**\n   * Register to display UI. Notification will be blocked until previous one has\n   * been dismissed.\n   * @param {function():!Promise} show\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.registerUI = function registerUI(show) {\n    var _this = this;\n\n    if (this.queueSize_ == 0) {\n      this.queueNotEmptyHandler_();\n    }\n\n    this.queueSize_++;\n    var promise = this.queuePromise_.then(function () {\n      return show().then(function () {\n        _this.queueSize_--;\n\n        if (_this.queueSize_ == 0) {\n          _this.queueEmptyHandler_();\n        }\n      });\n    });\n    this.queuePromise_ = promise;\n    return promise;\n  };\n\n  return NotificationUiManager;\n}();\n\nexports.NotificationUiManager = NotificationUiManager;\n\n},{}],26:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.Services = exports.SubscriptionService = void 0;\n\nvar _service = require(\"./service\");\n\nvar _elementService = require(\"./element-service\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nvar SubscriptionService;\nexports.SubscriptionService = SubscriptionService;\n\nvar Services =\n/*#__PURE__*/\nfunction () {\n  function Services() {}\n\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  Services.accessServiceForDoc = function accessServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'access', 'amp-access')\n    );\n  }\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  ;\n\n  Services.accessServiceForDocOrNull = function accessServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'access', 'amp-access')\n    );\n  }\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  ;\n\n  Services.subscriptionsServiceForDoc = function subscriptionsServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!SubscriptionService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  ;\n\n  Services.subscriptionsServiceForDocOrNull = function subscriptionsServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?SubscriptionService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  ;\n\n  Services.actionServiceForDoc = function actionServiceForDoc(element) {\n    return (\n      /** @type {!./service/action-impl.ActionService} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'action')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  ;\n\n  Services.standardActionsForDoc = function standardActionsForDoc(element) {\n    return (\n      /** @type {!./service/standard-actions-impl.StandardActions} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'standard-actions')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  ;\n\n  Services.activityForDoc = function activityForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'activity', 'amp-analytics')\n    );\n  }\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  ;\n\n  Services.ampdocServiceFor = function ampdocServiceFor(window) {\n    return (\n      /** @type {!./service/ampdoc-impl.AmpDocService} */\n      (0, _service.getService)(window, 'ampdoc')\n    );\n  }\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  ;\n\n  Services.ampdoc = function ampdoc(nodeOrAmpDoc) {\n    return (0, _service.getAmpdoc)(nodeOrAmpDoc);\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  ;\n\n  Services.analyticsForDoc = function analyticsForDoc(element, loadAnalytics) {\n    if (loadAnalytics === void 0) {\n      loadAnalytics = false;\n    }\n\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      var ampdoc = (0, _service.getAmpdoc)(element);\n      Services.extensionsFor(ampdoc.win).\n      /*OK*/\n      installExtensionForDoc(ampdoc, 'amp-analytics');\n    }\n\n    return (\n      /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'amp-analytics-instrumentation', 'amp-analytics')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  ;\n\n  Services.analyticsForDocOrNull = function analyticsForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'amp-analytics-instrumentation', 'amp-analytics')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  ;\n\n  Services.batchedXhrFor = function batchedXhrFor(window) {\n    return (\n      /** @type {!./service/batched-xhr-impl.BatchedXhr} */\n      (0, _service.getService)(window, 'batched-xhr')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  ;\n\n  Services.bindForDocOrNull = function bindForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */\n      (0, _elementService.getElementServiceIfAvailableForDocInEmbedScope)(element, 'bind', 'amp-bind')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  ;\n\n  Services.cidForDoc = function cidForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/cid-impl.CidDef>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'cid')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  ;\n\n  Services.navigationForDoc = function navigationForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/navigation.Navigation} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'navigation')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  ;\n\n  Services.loaderServiceForDoc = function loaderServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'loader', 'amp-loader')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  ;\n\n  Services.standaloneServiceForDoc = function standaloneServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'standalone', 'amp-standalone')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  ;\n\n  Services.cryptoFor = function cryptoFor(window) {\n    return (\n      /** @type {!./service/crypto-impl.Crypto} */\n      (0, _service.getService)(window, 'crypto')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  ;\n\n  Services.documentInfoForDoc = function documentInfoForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/document-info-impl.DocInfo} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'documentInfo').get()\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  ;\n\n  Services.extensionsFor = function extensionsFor(window) {\n    return (\n      /** @type {!./service/extensions-impl.Extensions} */\n      (0, _service.getService)(window, 'extensions')\n    );\n  }\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  ;\n\n  Services.formSubmitForDoc = function formSubmitForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  ;\n\n  Services.hiddenObserverForDoc = function hiddenObserverForDoc(element) {\n    return (\n      /** @type {!./service/hidden-observer-impl.HiddenObserver} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'hidden-observer')\n    );\n  }\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  ;\n\n  Services.historyForDoc = function historyForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/history-impl.History} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'history')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  ;\n\n  Services.inputFor = function inputFor(win) {\n    return (0, _service.getService)(win, 'input');\n  }\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  ;\n\n  Services.inputmaskServiceForDocOrNull = function inputmaskServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  ;\n\n  Services.ownersForDoc = function ownersForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/owners-interface.OwnersInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'owners')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  ;\n\n  Services.performanceFor = function performanceFor(window) {\n    return (\n      /** @type {!./service/performance-impl.Performance}*/\n      (0, _service.getService)(window, 'performance')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  ;\n\n  Services.performanceForOrNull = function performanceForOrNull(window) {\n    return (\n      /** @type {!./service/performance-impl.Performance}*/\n      (0, _service.getExistingServiceOrNull)(window, 'performance')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  ;\n\n  Services.platformFor = function platformFor(window) {\n    return (\n      /** @type {!./service/platform-impl.Platform} */\n      (0, _service.getService)(window, 'platform')\n    );\n  }\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  ;\n\n  Services.positionObserverForDoc = function positionObserverForDoc(element) {\n    return (\n      /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */\n      (0, _service.getServiceForDoc)(element, 'position-observer')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  ;\n\n  Services.resourcesForDoc = function resourcesForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/resources-interface.ResourcesInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'resources')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  ;\n\n  Services.resourcesPromiseForDoc = function resourcesPromiseForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'resources')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?{incomingFragment: string, outgoingFragment: string}>}\n   */\n  ;\n\n  Services.shareTrackingForOrNull = function shareTrackingForOrNull(win) {\n    return (\n      /** @type {!Promise<?{incomingFragment: string, outgoingFragment: string}>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'share-tracking', 'amp-share-tracking', true)\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>}\n   */\n  ;\n\n  Services.storyVariableServiceForOrNull = function storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-variable', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  ;\n\n  Services.storyVariableService = function storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-variable')\n    );\n  }\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>}\n   */\n  ;\n\n  Services.storyStoreServiceForOrNull = function storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-store', 'amp-story')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  ;\n\n  Services.storyStoreService = function storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-store')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  ;\n\n  Services.storyMediaQueryService = function storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-media-query')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  ;\n\n  Services.storyRequestService = function storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-request')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  ;\n\n  Services.mediaPerformanceMetricsService = function mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (0, _service.getExistingServiceOrNull)(win, 'media-performance-metrics')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  ;\n\n  Services.localizationServiceForOrNull = function localizationServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'localization', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  ;\n\n  Services.localizationService = function localizationService(win) {\n    return (0, _service.getService)(win, 'localization');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  ;\n\n  Services.storyAnalyticsServiceForOrNull = function storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-analytics', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  ;\n\n  Services.storyAnalyticsService = function storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-analytics')\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService}\n   */\n  ;\n\n  Services.storyStoreServiceV01 = function storyStoreServiceV01(win) {\n    return (0, _service.getService)(win, 'story-store');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-request-service.AmpStoryRequestService}\n   */\n  ;\n\n  Services.storyRequestServiceV01 = function storyRequestServiceV01(win) {\n    return (0, _service.getService)(win, 'story-request-v01');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  ;\n\n  Services.localizationServiceForOrNullV01 = function localizationServiceForOrNullV01(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'localization-v01', 'amp-story', true)\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  ;\n\n  Services.localizationServiceV01 = function localizationServiceV01(win) {\n    return (0, _service.getService)(win, 'localization-v01');\n  }\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>}\n   */\n  ;\n\n  Services.viewerIntegrationVariableServiceForOrNull = function viewerIntegrationVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'viewer-integration-variable', 'amp-viewer-integration', true)\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  ;\n\n  Services.webAnimationServiceFor = function webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'web-animation', 'amp-animation')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  ;\n\n  Services.storageForDoc = function storageForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/storage-impl.Storage>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'storage')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/template-impl.Templates}\n   */\n  ;\n\n  Services.templatesFor = function templatesFor(window) {\n    return (\n      /** @type {!./service/template-impl.Templates} */\n      (0, _service.getService)(window, 'templates')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  ;\n\n  Services.timerFor = function timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return (\n      /** @type {!./service/timer-impl.Timer} */\n      (0, _service.getService)(window, 'timer')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  ;\n\n  Services.urlReplacementsForDoc = function urlReplacementsForDoc(element) {\n    return (\n      /** @type {!./service/url-replacements-impl.UrlReplacements} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'url-replace')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  ;\n\n  Services.userNotificationManagerForDoc = function userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'userNotificationManager', 'amp-user-notification')\n    );\n  }\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  ;\n\n  Services.consentPolicyServiceForDocOrNull = function consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'consentPolicyManager', 'amp-consent')\n    );\n  }\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  ;\n\n  Services.geoForDocOrNull = function geoForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'geo', 'amp-geo', true)\n    );\n  }\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>}\n   */\n  ;\n\n  Services.userLocationForDocOrNull = function userLocationForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'user-location', 'amp-user-location', true)\n    );\n  }\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  ;\n\n  Services.urlForDoc = function urlForDoc(element) {\n    return (\n      /** @type {!./service/url-impl.Url} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'url')\n    );\n  }\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  ;\n\n  Services.variantsForDocOrNull = function variantsForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'variant', 'amp-experiment', true)\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  ;\n\n  Services.videoManagerForDoc = function videoManagerForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/video-manager-impl.VideoManager} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'video-manager')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>}\n   */\n  ;\n\n  Services.viewerAssistanceForDocOrNull = function viewerAssistanceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'amp-viewer-assistance', 'amp-viewer-assistance')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  ;\n\n  Services.viewerForDoc = function viewerForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/viewer-interface.ViewerInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'viewer')\n    );\n  }\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  ;\n\n  Services.viewerPromiseForDoc = function viewerPromiseForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'viewer')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  ;\n\n  Services.vsyncFor = function vsyncFor(window) {\n    return (\n      /** @type {!./service/vsync-impl.Vsync} */\n      (0, _service.getService)(window, 'vsync')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  ;\n\n  Services.viewportForDoc = function viewportForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/viewport/viewport-interface.ViewportInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'viewport')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  ;\n\n  Services.xhrFor = function xhrFor(window) {\n    return (\n      /** @type {!./service/xhr-impl.Xhr} */\n      (0, _service.getService)(window, 'xhr')\n    );\n  };\n\n  return Services;\n}();\n\nexports.Services = Services;\n\n},{\"./element-service\":14,\"./service\":24}],27:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.htmlFor = htmlFor;\nexports.svgFor = svgFor;\nexports.htmlRefs = htmlRefs;\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object.js\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar htmlContainer;\nvar svgContainer;\n/**\n * Creates the html helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\n\nfunction htmlFor(nodeOrDoc) {\n  var doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n\n  if (!htmlContainer || htmlContainer.ownerDocument !== doc) {\n    htmlContainer = doc.createElement('div');\n  }\n\n  return html;\n}\n/**\n * Creates the svg helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\n\n\nfunction svgFor(nodeOrDoc) {\n  var doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n\n  if (!svgContainer || svgContainer.ownerDocument !== svgContainer) {\n    svgContainer = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  }\n\n  return svg;\n}\n/**\n * A tagged template literal helper to generate static SVG trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const circle = svg`<circle cx=\"60\" cy=\"60\" r=\"22\"></circle>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\n\n\nfunction svg(strings) {\n  return createNode(svgContainer, strings);\n}\n/**\n * A tagged template literal helper to generate static DOM trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const div = html`<div><span></span></div>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\n\n\nfunction html(strings) {\n  return createNode(htmlContainer, strings);\n}\n/**\n * Helper used by html and svg string literal functions.\n * @param {!Element} container\n * @param {!Array<string>} strings\n * @return {!Element}\n */\n\n\nfunction createNode(container, strings) {\n  (0, _log.devAssert)(strings.length === 1, 'Improper html template tag usage.');\n  container.\n  /*OK*/\n  innerHTML = strings[0];\n  var el = container.firstElementChild;\n  (0, _log.devAssert)(el, 'No elements in template');\n  (0, _log.devAssert)(!el.nextElementSibling, 'Too many root elements in template'); // Clear to free memory.\n\n  container.removeChild(el);\n  return el;\n}\n/**\n * Queries an element for all elements with a \"ref\" attribute, removing\n * the attribute afterwards.\n * Returns a named map of all ref elements.\n *\n * @param {!Element} root\n * @return {!Object<string, !Element>}\n */\n\n\nfunction htmlRefs(root) {\n  var elements = root.querySelectorAll('[ref]');\n  var refs = (0, _object.map)();\n\n  for (var i = 0; i < elements.length; i++) {\n    var element = elements[i];\n    var ref = (0, _log.devAssert)(element.getAttribute('ref'), 'Empty ref attr');\n    element.removeAttribute('ref');\n    (0, _log.devAssert)(refs[ref] === undefined, 'Duplicate ref');\n    refs[ref] = element;\n  }\n\n  return refs;\n}\n\n},{\"./log\":20,\"./utils/object.js\":36}],28:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.dashToCamelCase = dashToCamelCase;\nexports.camelCaseToDash = camelCaseToDash;\nexports.dashToUnderline = dashToUnderline;\nexports.endsWith = endsWith;\nexports.startsWith = startsWith;\nexports.includes = includes;\nexports.expandTemplate = expandTemplate;\nexports.stringHash32 = stringHash32;\nexports.trimEnd = trimEnd;\nexports.trimStart = trimStart;\nexports.padStart = padStart;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n/**\n * @param {string} match\n * @return {string}\n */\n\n\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\n\n\nfunction dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\n\n\nfunction camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\n\n\nfunction dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\n\n\nfunction endsWith(string, suffix) {\n  var index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n/**\n * Polyfill for String.prototype.startsWith.\n * @param {string} string\n * @param {string} prefix\n * @return {boolean}\n */\n\n\nfunction startsWith(string, prefix) {\n  if (prefix.length > string.length) {\n    return false;\n  }\n\n  return string.lastIndexOf(prefix, 0) == 0;\n}\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\n\n\nfunction includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + substring.length > string.length) {\n    return false;\n  }\n\n  return string.indexOf(substring, start) !== -1;\n}\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\n\n\nfunction expandTemplate(template, getter, opt_maxIterations) {\n  var maxIterations = opt_maxIterations || 1;\n\n  var _loop = function _loop(i) {\n    var matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, function (_a, b) {\n      matches++;\n      return getter(b);\n    });\n\n    if (!matches) {\n      return \"break\";\n    }\n  };\n\n  for (var i = 0; i < maxIterations; i++) {\n    var _ret = _loop(i);\n\n    if (_ret === \"break\") break;\n  }\n\n  return template;\n}\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\n\n\nfunction stringHash32(str) {\n  var length = str.length;\n  var hash = 5381;\n\n  for (var i = 0; i < length; i++) {\n    hash = hash * 33 ^ str.charCodeAt(i);\n  } // Convert from 32-bit signed to unsigned.\n\n\n  return String(hash >>> 0);\n}\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\n\n\nfunction trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\n\n\nfunction trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {*} TODO(#23582): Specify return type\n */\n\n\nfunction padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n\n  targetLength = targetLength - s.length;\n  var padding = padString;\n\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n\n  return padding.slice(0, targetLength) + s;\n}\n\n},{}],29:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.camelCaseToTitleCase = camelCaseToTitleCase;\nexports.getVendorJsPropertyName = getVendorJsPropertyName;\nexports.setImportantStyles = setImportantStyles;\nexports.setStyle = setStyle;\nexports.getStyle = getStyle;\nexports.setStyles = setStyles;\nexports.assertNotDisplay = assertNotDisplay;\nexports.assertDoesNotContainDisplay = assertDoesNotContainDisplay;\nexports.setInitialDisplay = setInitialDisplay;\nexports.toggle = toggle;\nexports.px = px;\nexports.deg = deg;\nexports.translateX = translateX;\nexports.translate = translate;\nexports.scale = scale;\nexports.rotate = rotate;\nexports.removeAlphaFromColor = removeAlphaFromColor;\nexports.computedStyle = computedStyle;\nexports.resetStyles = resetStyles;\nexports.propagateObjectFitStyles = propagateObjectFitStyles;\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object.js\");\n\nvar _string = require(\"./string\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\n\n/** @type {Object<string, string>} */\nvar propertyNameCache;\n/** @const {!Array<string>} */\n\nvar vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n/**\n * @export\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\n\nfunction camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\n\n\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (var i = 0; i < vendorPrefixes.length; i++) {\n    var propertyName = vendorPrefixes[i] + titleCase;\n\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n\n  return '';\n}\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @export\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\n\n\nfunction getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if ((0, _string.startsWith)(camelCase, '--')) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n\n  if (!propertyNameCache) {\n    propertyNameCache = (0, _object.map)();\n  }\n\n  var propertyName = propertyNameCache[camelCase];\n\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n\n    if (style[camelCase] === undefined) {\n      var titleCase = camelCaseToTitleCase(camelCase);\n      var prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n\n  return propertyName;\n}\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\n\n\nfunction setImportantStyles(element, styles) {\n  var style = element.style;\n\n  for (var k in styles) {\n    style.setProperty(getVendorJsPropertyName(style, k), styles[k].toString(), 'important');\n  }\n}\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\n\n\nfunction setStyle(element, property, value, opt_units, opt_bypassCache) {\n  var propertyName = getVendorJsPropertyName(element.style, property, opt_bypassCache);\n\n  if (propertyName) {\n    element.style[propertyName] =\n    /** @type {string} */\n    opt_units ? value + opt_units : value;\n  }\n}\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\n\n\nfunction getStyle(element, property, opt_bypassCache) {\n  var propertyName = getVendorJsPropertyName(element.style, property, opt_bypassCache);\n\n  if (!propertyName) {\n    return undefined;\n  }\n\n  return element.style[propertyName];\n}\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\n\n\nfunction setStyles(element, styles) {\n  for (var k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\n\n\nfunction assertNotDisplay(style) {\n  if (style === 'display') {\n    (0, _log.dev)().error('STYLE', '`display` style detected. You must use toggle instead.');\n  }\n\n  return style;\n}\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\n\n\nfunction assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    (0, _log.dev)().error('STYLE', '`display` style detected in styles. You must use toggle instead.');\n  }\n\n  return styles;\n}\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\n\n\nfunction setInitialDisplay(el, value) {\n  var style = el.style;\n  (0, _log.devAssert)(value !== '' && value !== 'none', 'Initial display value must not be \"none\". Use toggle instead.');\n  (0, _log.devAssert)(!style['display'], 'setInitialDisplay MUST NOT be used for ' + 'resetting the display style. If you are looking for display:none ' + 'toggling, use toggle instead.');\n  style['display'] = value;\n}\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\n\n\nfunction toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\n\n\nfunction px(value) {\n  return value + \"px\";\n}\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\n\n\nfunction deg(value) {\n  return value + \"deg\";\n}\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction translateX(value) {\n  if (typeof value == 'string') {\n    return \"translateX(\" + value + \")\";\n  }\n\n  return \"translateX(\" + px(value) + \")\";\n}\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\n\n\nfunction translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n\n  if (opt_y === undefined) {\n    return \"translate(\" + x + \")\";\n  }\n\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n\n  return \"translate(\" + x + \", \" + opt_y + \")\";\n}\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction scale(value) {\n  return \"scale(\" + value + \")\";\n}\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n\n  return \"rotate(\" + value + \")\";\n}\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\n\n\nfunction removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(/\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g, '($1,$2,$3, 1)');\n}\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!Object<string, string>}\n */\n\n\nfunction computedStyle(win, el) {\n  var style =\n  /** @type {?CSSStyleDeclaration} */\n  win.getComputedStyle(el);\n  return (\n    /** @type {!Object<string, string>} */\n    style || (0, _object.map)()\n  );\n}\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\n\n\nfunction resetStyles(element, properties) {\n  for (var i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\n\n\nfunction propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n},{\"./log\":20,\"./string\":28,\"./utils/object.js\":36}],30:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isArray = isArray;\nexports.toArray = toArray;\nexports.isObject = isObject;\nexports.isFiniteNumber = isFiniteNumber;\nexports.isEnumValue = isEnumValue;\nexports.toWin = toWin;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nvar toString_ = Object.prototype.toString;\n/**\n * Returns the ECMA [[Class]] of a value\n * @param {*} value\n * @return {string}\n */\n\nfunction toString(value) {\n  return toString_.call(value);\n}\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\n\n\nfunction toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  return toString(value) === '[object Object]';\n}\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n/**\n * Checks whether `s` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} s\n * @return {boolean}\n * @template T\n */\n\n\nfunction isEnumValue(enumObj, s) {\n  for (var k in enumObj) {\n    if (enumObj[k] === s) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {!Window|null} winOrNull\n * @return {!Window}\n */\n\n\nfunction toWin(winOrNull) {\n  return (\n    /** @type {!Window} */\n    winOrNull\n  );\n}\n\n},{}],31:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.parseQueryString_ = parseQueryString_;\n\nvar _urlTryDecodeUriComponent = require(\"./url-try-decode-uri-component\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar regex = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * DO NOT import the function from this file. Instead, import parseQueryString\n * from `src/url.js`.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\n\nfunction parseQueryString_(queryString) {\n  var params =\n  /** @type {!JsonObject} */\n  Object.create(null);\n\n  if (!queryString) {\n    return params;\n  }\n\n  var match;\n\n  while (match = regex.exec(queryString)) {\n    var name = (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(match[1], match[1]);\n    var value = match[2] ? (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(match[2].replace(/\\+/g, ' '), match[2]) : '';\n    params[name] = value;\n  }\n\n  return params;\n}\n\n},{\"./url-try-decode-uri-component\":32}],32:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.tryDecodeUriComponent_ = tryDecodeUriComponent_;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * DO NOT import the function from this file. Instead, import\n * tryDecodeUriComponent from `src/url.js`.\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nfunction tryDecodeUriComponent_(component, fallback) {\n  if (fallback === void 0) {\n    fallback = '';\n  }\n\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n},{}],33:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getWinOrigin = getWinOrigin;\nexports.parseUrlDeprecated = parseUrlDeprecated;\nexports.parseUrlWithA = parseUrlWithA;\nexports.appendEncodedParamStringToUrl = appendEncodedParamStringToUrl;\nexports.addParamToUrl = addParamToUrl;\nexports.addParamsToUrl = addParamsToUrl;\nexports.addMissingParamsToUrl = addMissingParamsToUrl;\nexports.serializeQueryString = serializeQueryString;\nexports.isSecureUrlDeprecated = isSecureUrlDeprecated;\nexports.assertHttpsUrl = assertHttpsUrl;\nexports.assertAbsoluteHttpOrHttpsUrl = assertAbsoluteHttpOrHttpsUrl;\nexports.parseQueryString = parseQueryString;\nexports.removeFragment = removeFragment;\nexports.getFragment = getFragment;\nexports.isProxyOrigin = isProxyOrigin;\nexports.getProxyServingType = getProxyServingType;\nexports.isLocalhostOrigin = isLocalhostOrigin;\nexports.isProtocolValid = isProtocolValid;\nexports.removeAmpJsParamsFromUrl = removeAmpJsParamsFromUrl;\nexports.removeSearch = removeSearch;\nexports.removeParamsFromSearch = removeParamsFromSearch;\nexports.getSourceUrl = getSourceUrl;\nexports.getSourceOrigin = getSourceOrigin;\nexports.resolveRelativeUrl = resolveRelativeUrl;\nexports.resolveRelativeUrlFallback_ = resolveRelativeUrlFallback_;\nexports.getCorsUrl = getCorsUrl;\nexports.checkCorsUrl = checkCorsUrl;\nexports.tryDecodeUriComponent = tryDecodeUriComponent;\nexports.SOURCE_ORIGIN_PARAM = void 0;\n\nvar _lruCache = require(\"./utils/lru-cache\");\n\nvar _object = require(\"./utils/object\");\n\nvar _string = require(\"./string\");\n\nvar _mode = require(\"./mode\");\n\nvar _types = require(\"./types\");\n\nvar _urlParseQueryString = require(\"./url-parse-query-string\");\n\nvar _urlTryDecodeUriComponent = require(\"./url-try-decode-uri-component\");\n\nvar _config = require(\"./config\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @type {!JsonObject}\n */\nvar SERVING_TYPE_PREFIX = (0, _object.dict)({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n  // Actions viewer\n  'action': true\n});\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\n\nvar a;\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\n\nvar cache;\n/** @private @const Matches amp_js_* parameters in query string. */\n\nvar AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n/** @private @const Matches amp_gsa parameters in query string. */\n\nvar AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n/** @private @const Matches amp_r parameters in query string. */\n\nvar AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n/** @private @const Matches amp_kit parameters in query string. */\n\nvar AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n/** @private @const Matches usqp parameters from goog experiment in query string. */\n\nvar GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\nvar INVALID_PROTOCOLS = [\n/*eslint no-script-url: 0*/\n'javascript:',\n/*eslint no-script-url: 0*/\n'data:',\n/*eslint no-script-url: 0*/\n'vbscript:'];\n/** @const {string} */\n\nvar SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\n\nexports.SOURCE_ORIGIN_PARAM = SOURCE_ORIGIN_PARAM;\n\nfunction getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n * @return {!Location}\n */\n\n\nfunction parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a =\n    /** @type {!HTMLAnchorElement} */\n    self.document.createElement('a');\n    cache = self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new _lruCache.LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, opt_nocache ? null : cache);\n}\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n * @return {!Location}\n * @restricted\n */\n\n\nfunction parseUrlWithA(a, url, opt_cache) {\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url; // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  var info =\n  /** @type {!Location} */\n  {\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null // Set below.\n\n  }; // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  } // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n\n\n  if (info.protocol == 'http:' && info.port == 80 || info.protocol == 'https:' && info.port == 443) {\n    info.port = '';\n    info.host = info.hostname;\n  } // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n\n\n  var origin;\n\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n\n  info.origin = origin; // Freeze during testing to avoid accidental mutation.\n\n  var frozen = (0, _mode.getMode)().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\n\n\nfunction appendEncodedParamStringToUrl(url, paramString, opt_addToFront) {\n  if (!paramString) {\n    return url;\n  }\n\n  var mainAndFragment = url.split('#', 2);\n  var mainAndQuery = mainAndFragment[0].split('?', 2);\n  var newUrl = mainAndQuery[0] + (mainAndQuery[1] ? opt_addToFront ? \"?\" + paramString + \"&\" + mainAndQuery[1] : \"?\" + mainAndQuery[1] + \"&\" + paramString : \"?\" + paramString);\n  newUrl += mainAndFragment[1] ? \"#\" + mainAndFragment[1] : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\n\n\nfunction addParamToUrl(url, key, value, opt_addToFront) {\n  var field = encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction addMissingParamsToUrl(url, params) {\n  var location = parseUrlDeprecated(url);\n  var existingParams = parseQueryString(location.search);\n  var paramsToAdd = (0, _object.dict)({});\n  var keys = Object.keys(params);\n\n  for (var i = 0; i < keys.length; i++) {\n    if (!(0, _object.hasOwn)(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n\n  return addParamsToUrl(url, paramsToAdd);\n}\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction serializeQueryString(params) {\n  var s = [];\n\n  for (var k in params) {\n    var v = params[k];\n\n    if (v == null) {\n      continue;\n    } else if ((0, _types.isArray)(v)) {\n      for (var i = 0; i < v.length; i++) {\n        var sv =\n        /** @type {string} */\n        v[i];\n        s.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(sv));\n      }\n    } else {\n      var _sv =\n      /** @type {string} */\n      v;\n      s.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(_sv));\n    }\n  }\n\n  return s.join('&');\n}\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\n\n\nfunction isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return url.protocol == 'https:' || url.hostname == 'localhost' || url.hostname == '127.0.0.1' || (0, _string.endsWith)(url.hostname, '.localhost');\n}\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\n\n\nfunction assertHttpsUrl(urlString, elementContext, sourceName) {\n  if (sourceName === void 0) {\n    sourceName = 'source';\n  }\n\n  (0, _log.userAssert)(urlString != null, '%s %s must be available', elementContext, sourceName); // (erwinm, #4560): type cast necessary until #4560 is fixed.\n\n  var theUrlString =\n  /** @type {string} */\n  urlString;\n  (0, _log.userAssert)(isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString), '%s %s must start with ' + '\"https://\" or \"//\" or be relative and served from ' + 'either https or from localhost. Invalid value: %s', elementContext, sourceName, theUrlString);\n  return theUrlString;\n}\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\n\n\nfunction assertAbsoluteHttpOrHttpsUrl(urlString) {\n  (0, _log.userAssert)(/^https?\\:/i.test(urlString), 'URL must start with \"http://\" or \"https://\". Invalid value: %s', urlString);\n  return parseUrlDeprecated(urlString).href;\n}\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * This function is implemented in a separate file to avoid a circular\n * dependency.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\n\n\nfunction parseQueryString(queryString) {\n  return (0, _urlParseQueryString.parseQueryString_)(queryString);\n}\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeFragment(url) {\n  var index = url.indexOf('#');\n\n  if (index == -1) {\n    return url;\n  }\n\n  return url.substring(0, index);\n}\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction getFragment(url) {\n  var index = url.indexOf('#');\n\n  if (index == -1) {\n    return '';\n  }\n\n  return url.substring(index);\n}\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\n\n\nfunction isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return _config.urls.cdnProxyRegex.test(url.origin);\n}\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\n\n\nfunction getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n\n  var path = url.pathname.split('/', 2);\n  return path[1];\n}\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\n\n\nfunction isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return _config.urls.localhostRegex.test(url.origin);\n}\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\n\n\nfunction isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeAmpJsParamsFromUrl(url) {\n  var parsed = parseUrlDeprecated(url);\n  var search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeSearch(url) {\n  var index = url.indexOf('?');\n\n  if (index == -1) {\n    return url;\n  }\n\n  var fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\n\n\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n\n  var search = urlSearch.replace(AMP_JS_PARAMS_REGEX, '').replace(AMP_GSA_PARAMS_REGEX, '').replace(AMP_R_PARAMS_REGEX, '').replace(AMP_KIT_PARAMS_REGEX, '').replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '').replace(/^[?&]/, ''); // Removes first ? or &.\n\n  return search ? '?' + search : '';\n}\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\n\n\nfunction removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n\n  var paramRegex = new RegExp(\"[?&]\" + paramName + \"=[^&]*\", 'g');\n  var search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\n\n\nfunction getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  } // Not a proxy URL - return the URL itself.\n\n\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  } // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n\n\n  var path = url.pathname.split('/');\n  var prefix = path[1];\n  (0, _log.userAssert)(SERVING_TYPE_PREFIX[prefix], 'Unknown path prefix in url %s', url.href);\n  var domainOrHttpsSignal = path[2];\n  var origin = domainOrHttpsSignal == 's' ? 'https://' + decodeURIComponent(path[3]) : 'http://' + decodeURIComponent(domainOrHttpsSignal); // Sanity test that what we found looks like a domain.\n\n  (0, _log.userAssert)(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return origin + path.join('/') + removeAmpJsParamsFromSearch(url.search) + (url.hash || '');\n}\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\n\n\nfunction getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\n\n\nfunction resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n\n  if (typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private Visible for testing.\n */\n\n\nfunction resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  var relativeUrl = parseUrlDeprecated(relativeUrlString); // Absolute URL.\n\n  if ((0, _string.startsWith)(relativeUrlString.toLowerCase(), relativeUrl.protocol)) {\n    return relativeUrl.href;\n  } // Protocol-relative URL.\n\n\n  if ((0, _string.startsWith)(relativeUrlString, '//')) {\n    return baseUrl.protocol + relativeUrlString;\n  } // Absolute path.\n\n\n  if ((0, _string.startsWith)(relativeUrlString, '/')) {\n    return baseUrl.origin + relativeUrlString;\n  } // Relative path.\n\n\n  return baseUrl.origin + baseUrl.pathname.replace(/\\/[^/]*$/, '/') + relativeUrlString;\n}\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\n\n\nfunction getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  var sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\n\n\nfunction checkCorsUrl(url) {\n  var parsedUrl = parseUrlDeprecated(url);\n  var query = parseQueryString(parsedUrl.search);\n  (0, _log.userAssert)(!(SOURCE_ORIGIN_PARAM in query), 'Source origin is not allowed in %s', url);\n}\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} opt_fallback\n * @return {string}\n */\n\n\nfunction tryDecodeUriComponent(component, opt_fallback) {\n  return (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(component, opt_fallback);\n}\n\n},{\"./config\":10,\"./log\":20,\"./mode\":22,\"./string\":28,\"./types\":30,\"./url-parse-query-string\":31,\"./url-try-decode-uri-component\":32,\"./utils/lru-cache\":35,\"./utils/object\":36}],34:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.once = once;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// TODO(rsimha, #15334): Enable this rule.\n\n/* eslint jsdoc/check-types: 0 */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nfunction once(fn) {\n  var evaluated = false;\n  var retValue = null;\n  var callback = fn;\n  return function () {\n    if (!evaluated) {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n\n    return retValue;\n  };\n}\n\n},{}],35:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.LruCache = void 0;\n\nvar _log = require(\"../log\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nvar TAG = 'lru-cache';\n/**\n * @template T\n */\n\nvar LruCache =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {number} capacity\n   */\n  function LruCache(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n    /** @private {number} */\n\n    this.size_ = 0;\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n\n    this.access_ = 0;\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n\n    this.cache_ = Object.create(null);\n  }\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n\n\n  var _proto = LruCache.prototype;\n\n  _proto.has = function has(key) {\n    return !!this.cache_[key];\n  }\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  ;\n\n  _proto.get = function get(key) {\n    var cacheable = this.cache_[key];\n\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n\n    return undefined;\n  }\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  ;\n\n  _proto.put = function put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n\n    this.cache_[key] = {\n      payload: payload,\n      access: this.access_\n    };\n    this.evict_();\n  }\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  ;\n\n  _proto.evict_ = function evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    (0, _log.dev)().warn(TAG, 'Trimming LRU cache');\n    var cache = this.cache_;\n    var oldest = this.access_ + 1;\n    var oldestKey;\n\n    for (var key in cache) {\n      var access = cache[key].access;\n\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  };\n\n  return LruCache;\n}();\n\nexports.LruCache = LruCache;\n\n},{\"../log\":20}],36:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.map = map;\nexports.dict = dict;\nexports.hasOwn = hasOwn;\nexports.ownProperty = ownProperty;\nexports.deepMerge = deepMerge;\nexports.omit = omit;\n\nvar _types = require(\"../types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nvar hasOwn_ = Object.prototype.hasOwnProperty;\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\n\nfunction map(opt_initial) {\n  var obj = Object.create(null);\n\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n\n  return obj;\n}\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\n\n\nfunction dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return (\n    /** @type {!JsonObject} */\n    opt_initial || {}\n  );\n}\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\n\n\nfunction hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\n\n\nfunction ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\n\n\nfunction deepMerge(target, source, depth) {\n  if (depth === void 0) {\n    depth = 10;\n  }\n\n  // Keep track of seen objects to detect recursive references.\n  var seen = [];\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n\n  var queue = [];\n  queue.push({\n    t: target,\n    s: source,\n    d: 0\n  }); // BFS to ensure objects don't have recursive references at shallower depths.\n\n  var _loop = function _loop() {\n    var _queue$shift = queue.shift(),\n        t = _queue$shift.t,\n        s = _queue$shift.s,\n        d = _queue$shift.d;\n\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n\n    seen.push(s);\n\n    if (t === s) {\n      return \"continue\";\n    }\n\n    if (d > depth) {\n      Object.assign(t, s);\n      return \"continue\";\n    }\n\n    Object.keys(s).forEach(function (key) {\n      var newValue = s[key]; // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n\n      if (hasOwn(t, key)) {\n        var oldValue = t[key];\n\n        if ((0, _types.isObject)(newValue) && (0, _types.isObject)(oldValue)) {\n          queue.push({\n            t: oldValue,\n            s: newValue,\n            d: d + 1\n          });\n          return;\n        }\n      }\n\n      t[key] = newValue;\n    });\n  };\n\n  while (queue.length > 0) {\n    var _ret = _loop();\n\n    if (_ret === \"continue\") continue;\n  }\n\n  return target;\n}\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\n\n\nfunction omit(o, props) {\n  return Object.keys(o).reduce(function (acc, key) {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n\n    return acc;\n  }, {});\n}\n\n},{\"../types\":30}],37:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.tryResolve = tryResolve;\nexports.some = some;\nexports.LastAddedResolver = exports.Deferred = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nvar Deferred =\n/**\n * Creates an instance of Deferred.\n */\nfunction Deferred() {\n  var resolve, reject;\n  /**\n   * @const {!Promise<T>}\n   */\n\n  this.promise = new\n  /*OK*/\n  Promise(function (res, rej) {\n    resolve = res;\n    reject = rej;\n  });\n  /**\n   * @const {function(T=)}\n   */\n\n  this.resolve = resolve;\n  /**\n   * @const {function(*=)}\n   */\n\n  this.reject = reject;\n};\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\n\n\nexports.Deferred = Deferred;\n\nfunction tryResolve(fn) {\n  return new Promise(function (resolve) {\n    resolve(fn());\n  });\n}\n/**\n * Returns a promise which resolves if a threshold amount of the given promises\n * resolve, and rejects otherwise.\n * @param {!Array<!Promise>} promises The array of promises to test.\n * @param {number} count The number of promises that must resolve for the\n *     returned promise to resolve.\n * @return {!Promise} A promise that resolves if any of the given promises\n *     resolve, and which rejects otherwise.\n */\n\n\nfunction some(promises, count) {\n  if (count === void 0) {\n    count = 1;\n  }\n\n  return new Promise(function (resolve, reject) {\n    count = Math.max(count, 0);\n    var extra = promises.length - count;\n\n    if (extra < 0) {\n      reject(new Error('not enough promises to resolve'));\n    }\n\n    if (promises.length == 0) {\n      resolve([]);\n    }\n\n    var values = [];\n    var reasons = [];\n\n    var onFulfilled = function onFulfilled(value) {\n      if (values.length < count) {\n        values.push(value);\n      }\n\n      if (values.length == count) {\n        resolve(values);\n      }\n    };\n\n    var onRejected = function onRejected(reason) {\n      if (reasons.length <= extra) {\n        reasons.push(reason);\n      }\n\n      if (reasons.length > extra) {\n        reject(reasons);\n      }\n    };\n\n    for (var i = 0; i < promises.length; i++) {\n      Promise.resolve(promises[i]).then(onFulfilled, onRejected);\n    }\n  });\n}\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\n\n\nvar LastAddedResolver =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Array<!Promise>=} opt_promises\n   */\n  function LastAddedResolver(opt_promises) {\n    var resolve_, reject_;\n    /** @private @const {!Promise} */\n\n    this.promise_ = new Promise(function (resolve, reject) {\n      resolve_ = resolve;\n      reject_ = reject;\n    });\n    /** @private */\n\n    this.resolve_ = resolve_;\n    /** @private */\n\n    this.reject_ = reject_;\n    /** @private */\n\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (var i = 0; i < opt_promises.length; i++) {\n        this.add(opt_promises[i]);\n      }\n    }\n  }\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!Promise} promise\n   * @return {!Promise}\n   */\n\n\n  var _proto = LastAddedResolver.prototype;\n\n  _proto.add = function add(promise) {\n    var _this = this;\n\n    var countAtAdd = ++this.count_;\n    Promise.resolve(promise).then(function (result) {\n      if (_this.count_ === countAtAdd) {\n        _this.resolve_(result);\n      }\n    }, function (error) {\n      // Don't follow behavior of Promise.all and Promise.race error so that\n      // this will only reject when most recently added promise fails.\n      if (_this.count_ === countAtAdd) {\n        _this.reject_(error);\n      }\n    });\n    return this.promise_;\n  }\n  /** @override */\n  ;\n\n  _proto.then = function then(opt_resolve, opt_reject) {\n    return this.promise_.then(opt_resolve, opt_reject);\n  };\n\n  return LastAddedResolver;\n}();\n\nexports.LastAddedResolver = LastAddedResolver;\n\n},{}],38:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.cssEscape = cssEscape;\n\n/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  } // Nil is the null terminator (group 1) capture\n\n\n  if (nil) {\n    return \"\\uFFFD\";\n  } // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n\n\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' ';\n  } // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n\n\n  return '\\\\' + match;\n}\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\n\n\nfunction cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n\n},{}]},{},[2])\n\n","export const CSS = \"amp-consent{position:fixed;bottom:0;left:0;overflow:hidden!important;background:hsla(0,0%,100%,0.7);width:100%;z-index:2147483645}amp-consent[i-amphtml-notbuilt]>*{display:none!important}amp-consent>*{max-height:100vh!important}amp-consent.amp-active{visibility:visible}amp-consent.amp-hidden{visibility:hidden}@keyframes amp-consent-ui-placeholder-spin{0%{transform:rotate(0deg)}to{transform:rotate(360deg)}}.i-amphtml-consent-ui-placeholder{width:100%;height:100%;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}.i-amphtml-consent-ui-placeholder>svg{width:30px;height:30px;fill:none;stroke-width:1.5px;transform-origin:50% 50%;animation:amp-consent-ui-placeholder-spin 1000ms linear infinite}.i-amphtml-consent-ui-fill{position:absolute;top:0;left:0;width:100%}iframe.i-amphtml-consent-ui-fill{border:none}amp-consent.i-amphtml-consent-ui-iframe-active{width:100%!important;height:100vh!important;padding:0px!important;margin:0px!important;overflow:auto!important;transform:translate3d(0px,100vh,0px)!important}amp-consent.i-amphtml-consent-ui-iframe-active.i-amphtml-consent-ui-enable-border{border-top-left-radius:8px!important;border-top-right-radius:8px!important;box-shadow:0 0 5px 0 rgba(0,0,0,0.2)!important}amp-consent.i-amphtml-consent-ui-iframe-active.i-amphtml-consent-ui-in{transition:transform 0.5s ease-out!important}amp-consent.i-amphtml-consent-ui-iframe-active.i-amphtml-consent-ui-in.i-amphtml-consent-ui-iframe-fullscreen{top:0px!important;transform:translateZ(0px)!important;border-top-left-radius:0px!important;border-top-right-radius:0px!important}amp-consent.i-amphtml-consent-ui-in.i-amphtml-consent-ui-iframe-fullscreen>.i-amphtml-consent-ui-fill{height:100%!important}@keyframes i-amphtml-consent-ui-mask{0%{opacity:0.0}to{opacity:0.2}}.i-amphtml-consent-ui-mask{position:fixed!important;top:0!important;left:0!important;width:100vw!important;height:100vh!important;opacity:0.2;animation:i-amphtml-consent-ui-mask 0.25s ease-in;background-image:none!important;background-color:#000;z-index:2147483644}\\n/*# sourceURL=/extensions/amp-consent/0.1/amp-consent.css*/\";\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONSENT_ITEM_STATE,\n  getConsentStateValue,\n  hasStoredValue,\n} from './consent-info';\nimport {CSS} from '../../../build/amp-consent-0.1.css';\nimport {ConsentConfig, expandPolicyConfig} from './consent-config';\nimport {ConsentPolicyManager} from './consent-policy-manager';\nimport {ConsentStateManager} from './consent-state-manager';\nimport {ConsentUI} from './consent-ui';\nimport {Deferred} from '../../../src/utils/promise';\nimport {GEO_IN_GROUP} from '../../amp-geo/0.1/amp-geo-in-group';\nimport {\n  NOTIFICATION_UI_MANAGER,\n  NotificationUiManager,\n} from '../../../src/service/notification-ui-manager';\nimport {Services} from '../../../src/services';\nimport {\n  assertHttpsUrl,\n  getSourceUrl,\n  resolveRelativeUrl,\n} from '../../../src/url';\nimport {dev, devAssert, user, userAssert} from '../../../src/log';\nimport {dict, hasOwn} from '../../../src/utils/object';\nimport {getData} from '../../../src/event-helper';\nimport {getServicePromiseForDoc} from '../../../src/service';\nimport {isEnumValue} from '../../../src/types';\nimport {isExperimentOn} from '../../../src/experiments';\nimport {toggle} from '../../../src/style';\n\nconst CONSENT_STATE_MANAGER = 'consentStateManager';\nconst CONSENT_POLICY_MANAGER = 'consentPolicyManager';\nconst TAG = 'amp-consent';\n\n/**\n * @enum {string}\n * @visibleForTesting\n */\nexport const ACTION_TYPE = {\n  ACCEPT: 'accept',\n  REJECT: 'reject',\n  DISMISS: 'dismiss',\n};\n\nexport class AmpConsent extends AMP.BaseElement {\n  /** @param {!AmpElement} element */\n  constructor(element) {\n    super(element);\n\n    /** @private {?ConsentStateManager} */\n    this.consentStateManager_ = null;\n\n    /** @private {?ConsentPolicyManager} */\n    this.consentPolicyManager_ = null;\n\n    /** @private {?NotificationUiManager} */\n    this.notificationUiManager_ = null;\n\n    /** @private {?ConsentUI} */\n    this.consentUI_ = null;\n\n    /** @private {?JsonObject} */\n    this.consentConfig_ = null;\n\n    /** @private {?JsonObject} */\n    this.policyConfig_ = null;\n\n    /** @private {?ConsentUI} */\n    this.postPromptUI_ = null;\n\n    /** @private {?function()} */\n    this.dialogResolver_ = null;\n\n    this.isPromptUIOn_ = false;\n\n    /** @private {boolean} */\n    this.consentUIPending_ = false;\n\n    /** @const @private {!../../../src/service/vsync-impl.Vsync} */\n    this.vsync_ = this.getVsync();\n\n    /** @private {?Promise<?JsonObject>} */\n    this.remoteConfigPromise_ = null;\n\n    /** @private {?string} */\n    this.consentId_ = null;\n  }\n\n  /** @override */\n  getConsentPolicy() {\n    // amp-consent should not be blocked by itself\n    return null;\n  }\n\n  /** @override */\n  buildCallback() {\n    userAssert(\n      this.element.getAttribute('id'),\n      'amp-consent should have an id'\n    );\n\n    const config = new ConsentConfig(this.element);\n\n    this.consentConfig_ = config.getConsentConfig();\n\n    // ConsentConfig has verified that there's one and only one consent instance\n    this.consentId_ = this.consentConfig_['consentInstanceId'];\n\n    if (this.consentConfig_['postPromptUI']) {\n      this.postPromptUI_ = new ConsentUI(\n        this,\n        dict({}),\n        this.consentConfig_['postPromptUI']\n      );\n    }\n\n    /**\n     * Deprecated Format\n     * {\n     *   'consentInstanceId': {\n     *     'checkConsentHref': ...,\n     *     'promptUI': ...\n     *   }\n     * }\n     *\n     * New Format\n     * {\n     *   'consentInstanceId': ...\n     *   'checkConsentHref': ...\n     *   'promptUI': ...\n     *   'postPromptUI': ...\n     * }\n     */\n    const policyConfig = this.consentConfig_['policy'] || dict({});\n\n    this.policyConfig_ = expandPolicyConfig(\n      policyConfig,\n      /** @type {string} */ (this.consentId_)\n    );\n\n    const children = this.getRealChildren();\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      toggle(child, false);\n      // <amp-consent> will manually schedule layout for its children.\n      Services.ownersForDoc(this.element).setOwner(child, this.element);\n    }\n\n    const consentPolicyManagerPromise = getServicePromiseForDoc(\n      this.getAmpDoc(),\n      CONSENT_POLICY_MANAGER\n    ).then(manager => {\n      this.consentPolicyManager_ = /** @type {!ConsentPolicyManager} */ (manager);\n      this.consentPolicyManager_.setLegacyConsentInstanceId(\n        /** @type {string} */ (this.consentId_)\n      );\n      const policyKeys = Object.keys(\n        /** @type {!Object} */ (this.policyConfig_)\n      );\n      for (let i = 0; i < policyKeys.length; i++) {\n        this.consentPolicyManager_.registerConsentPolicyInstance(\n          policyKeys[i],\n          this.policyConfig_[policyKeys[i]]\n        );\n      }\n    });\n\n    const consentStateManagerPromise = getServicePromiseForDoc(\n      this.getAmpDoc(),\n      CONSENT_STATE_MANAGER\n    ).then(manager => {\n      manager.registerConsentInstance(this.consentId_, this.consentConfig_);\n      this.consentStateManager_ = /** @type {!ConsentStateManager} */ (manager);\n    });\n\n    const notificationUiManagerPromise = getServicePromiseForDoc(\n      this.getAmpDoc(),\n      NOTIFICATION_UI_MANAGER\n    ).then(manager => {\n      this.notificationUiManager_ = /** @type {!NotificationUiManager} */ (manager);\n    });\n\n    Promise.all([\n      consentStateManagerPromise,\n      notificationUiManagerPromise,\n      consentPolicyManagerPromise,\n    ]).then(() => {\n      this.init_();\n    });\n  }\n\n  /**\n   * Register a list of user action functions\n   */\n  enableInteractions_() {\n    this.registerAction('accept', () => {\n      this.handleAction_(ACTION_TYPE.ACCEPT);\n    });\n\n    this.registerAction('reject', () => {\n      this.handleAction_(ACTION_TYPE.REJECT);\n    });\n\n    this.registerAction('dismiss', () => {\n      this.handleAction_(ACTION_TYPE.DISMISS);\n    });\n\n    this.registerAction('prompt', () => {\n      this.scheduleDisplay_(true);\n    });\n\n    this.enableExternalInteractions_();\n  }\n\n  /**\n   * Listen to external consent flow iframe's response\n   */\n  enableExternalInteractions_() {\n    this.win.addEventListener('message', event => {\n      if (!this.isPromptUIOn_) {\n        return;\n      }\n\n      let consentString;\n      const data = getData(event);\n\n      if (!data || data['type'] != 'consent-response') {\n        return;\n      }\n\n      if (!data['action']) {\n        user().error(TAG, 'consent-response message missing required info');\n        return;\n      }\n      if (\n        isExperimentOn(this.win, 'amp-consent-v2') &&\n        data['info'] !== undefined\n      ) {\n        if (typeof data['info'] != 'string') {\n          user().error(\n            TAG,\n            'consent-response info only supports string, ' +\n              '%s, treated as undefined',\n            data['info']\n          );\n          data['info'] = undefined;\n        }\n        if (data['action'] === ACTION_TYPE.DISMISS) {\n          if (data['info']) {\n            this.user().error(\n              TAG,\n              'Consent string value %s not applicable on user dismiss, ' +\n                'stored value will be kept and used',\n              consentString\n            );\n          }\n          data['info'] = undefined;\n        }\n        consentString = data['info'];\n      }\n\n      const iframes = this.element.querySelectorAll('iframe');\n\n      for (let i = 0; i < iframes.length; i++) {\n        if (iframes[i].contentWindow === event.source) {\n          const action = data['action'];\n          this.handleAction_(action, consentString);\n          return;\n        }\n      }\n    });\n  }\n\n  /**\n   * Returns a promise that attempt to show prompt UI\n   * @param {boolean} isActionPromptTrigger\n   */\n  scheduleDisplay_(isActionPromptTrigger) {\n    if (!this.notificationUiManager_) {\n      dev().error(TAG, 'notification ui manager not found');\n    }\n\n    if (this.consentUIPending_) {\n      // Already pending to be shown. Do nothing.\n      // This is to prevent postPromptUI trying to prompt the dialog, while\n      // the prompt is waiting for previous amp-user-notification prompt to be\n      // resolved first.\n      // So prompt window won't be added to notificationUI queue duplicately.\n      return;\n    }\n\n    if (!this.consentUI_) {\n      // If consent UI not found. Do nothing.\n      return;\n    }\n\n    this.consentUIPending_ = true;\n    this.notificationUiManager_.registerUI(\n      this.show_.bind(this, isActionPromptTrigger)\n    );\n  }\n\n  /**\n   * Show prompt UI\n   * Do not invoke the function except in scheduleDisplay_\n   * @param {boolean} isActionPromptTrigger\n   * @return {!Promise}\n   */\n  show_(isActionPromptTrigger) {\n    if (this.isPromptUIOn_) {\n      dev().error(TAG, 'Attempt to show an already displayed prompt UI');\n    }\n\n    this.vsync_.mutate(() => {\n      this.consentUI_.show(isActionPromptTrigger);\n      this.isPromptUIOn_ = true;\n    });\n\n    const deferred = new Deferred();\n    this.dialogResolver_ = deferred.resolve;\n    return deferred.promise;\n  }\n\n  /**\n   * Hide current prompt UI\n   */\n  hide_() {\n    if (!this.isPromptUIOn_) {\n      dev().error(TAG, '%s no consent ui to hide');\n    }\n\n    this.consentUI_.hide();\n    this.isPromptUIOn_ = false;\n\n    if (this.dialogResolver_) {\n      this.dialogResolver_();\n      this.dialogResolver_ = null;\n    }\n\n    this.consentUIPending_ = false;\n  }\n\n  /**\n   * Handler User action\n   * @param {string} action\n   * @param {string=} consentString\n   */\n  handleAction_(action, consentString) {\n    if (!isEnumValue(ACTION_TYPE, action)) {\n      // Unrecognized action\n      return;\n    }\n\n    if (!this.isPromptUIOn_) {\n      // No consent prompt to act to\n      return;\n    }\n\n    if (!this.consentStateManager_) {\n      dev().error(TAG, 'No consent state manager');\n      return;\n    }\n\n    if (action == ACTION_TYPE.ACCEPT) {\n      //accept\n      this.consentStateManager_.updateConsentInstanceState(\n        CONSENT_ITEM_STATE.ACCEPTED,\n        consentString\n      );\n    } else if (action == ACTION_TYPE.REJECT) {\n      // reject\n      this.consentStateManager_.updateConsentInstanceState(\n        CONSENT_ITEM_STATE.REJECTED,\n        consentString\n      );\n    } else if (action == ACTION_TYPE.DISMISS) {\n      this.consentStateManager_.updateConsentInstanceState(\n        CONSENT_ITEM_STATE.DISMISSED\n      );\n    }\n\n    // Hide current dialog\n    this.hide_();\n  }\n\n  /**\n   * Init the amp-consent by registering and initiate consent instance.\n   */\n  init_() {\n    this.passSharedData_();\n    this.maybeSetDirtyBit_();\n\n    this.getConsentRequiredPromise_()\n      .then(isConsentRequired => {\n        return this.initPromptUI_(isConsentRequired);\n      })\n      .then(isPostPromptUIRequired => {\n        if (isPostPromptUIRequired) {\n          this.handlePostPromptUI_();\n        }\n        this.consentPolicyManager_.enableTimeout();\n      })\n      .catch(unusedError => {\n        // TODO: Handle errors\n      });\n\n    this.enableInteractions_();\n  }\n\n  /**\n   * Returns a promise that resolve when amp-consent knows\n   * if the consent is required.\n   * @return {!Promise<boolean>}\n   */\n  getConsentRequiredPromise_() {\n    userAssert(\n      this.consentConfig_['checkConsentHref'] ||\n        this.consentConfig_['promptIfUnknownForGeoGroup'],\n      'neither checkConsentHref nor promptIfUnknownForGeoGroup is defined'\n    );\n    let consentRequiredPromise = null;\n    if (this.consentConfig_['promptIfUnknownForGeoGroup']) {\n      const geoGroup = this.consentConfig_['promptIfUnknownForGeoGroup'];\n      consentRequiredPromise = this.isConsentRequiredGeo_(geoGroup);\n    } else {\n      consentRequiredPromise = this.getConsentRemote_().then(\n        remoteConfigResponse => {\n          if (\n            !remoteConfigResponse ||\n            !hasOwn(remoteConfigResponse, 'promptIfUnknown')\n          ) {\n            this.user().error(\n              TAG,\n              'Expecting promptIfUnknown from ' +\n                'checkConsentHref when promptIfUnknownForGeoGroup is not ' +\n                'specified'\n            );\n            // Set to false if not defined\n            return false;\n          }\n          return !!remoteConfigResponse['promptIfUnknown'];\n        }\n      );\n    }\n    return consentRequiredPromise.then(required => {\n      return !!required;\n    });\n  }\n\n  /**\n   * Blindly pass sharedData\n   */\n  passSharedData_() {\n    const responsePromise = this.getConsentRemote_();\n    const sharedDataPromise = responsePromise.then(response => {\n      if (!response || response['sharedData'] === undefined) {\n        return null;\n      }\n      return response['sharedData'];\n    });\n\n    this.consentStateManager_.setConsentInstanceSharedData(sharedDataPromise);\n  }\n\n  /**\n   * Set dirtyBit of the local consent value based on server response\n   */\n  maybeSetDirtyBit_() {\n    const responsePromise = this.getConsentRemote_();\n    responsePromise.then(response => {\n      if (response && !!response['forcePromptOnNext']) {\n        this.consentStateManager_.setDirtyBit();\n      }\n    });\n  }\n\n  /**\n   * Returns a promise that if user is in the given geoGroup\n   * @param {string} geoGroup\n   * @return {Promise<boolean>}\n   */\n  isConsentRequiredGeo_(geoGroup) {\n    return Services.geoForDocOrNull(this.element).then(geo => {\n      userAssert(geo, 'requires <amp-geo> to use promptIfUnknownForGeoGroup');\n      return geo.isInCountryGroup(geoGroup) == GEO_IN_GROUP.IN;\n    });\n  }\n\n  /**\n   * Get localStored consent info, and send request to get consent from endpoint\n   * if there is checkConsentHref specified.\n   * @return {!Promise<?JsonObject>}\n   */\n  getConsentRemote_() {\n    if (this.remoteConfigPromise_) {\n      return this.remoteConfigPromise_;\n    }\n    if (!this.consentConfig_['checkConsentHref']) {\n      this.remoteConfigPromise_ = Promise.resolve(null);\n    } else {\n      const storeConsentPromise = this.consentStateManager_.getLastConsentInstanceInfo();\n      this.remoteConfigPromise_ = storeConsentPromise.then(storedInfo => {\n        // Note: Expect the request to look different in following versions.\n        const request = /** @type {!JsonObject} */ ({\n          'consentInstanceId': this.consentId_,\n          'consentStateValue': getConsentStateValue(storedInfo['consentState']),\n          'consentString': storedInfo['consentString'],\n          'isDirty': !!storedInfo['isDirty'],\n        });\n        if (this.consentConfig_['clientConfig']) {\n          request['clientConfig'] = this.consentConfig_['clientConfig'];\n        }\n        const init = {\n          credentials: 'include',\n          method: 'POST',\n          body: request,\n        };\n        const href = this.consentConfig_['checkConsentHref'];\n        assertHttpsUrl(href, this.element);\n        const ampdoc = this.getAmpDoc();\n        const sourceBase = getSourceUrl(ampdoc.getUrl());\n        const resolvedHref = resolveRelativeUrl(href, sourceBase);\n        return ampdoc.whenFirstVisible().then(() => {\n          return Services.xhrFor(this.win)\n            .fetchJson(resolvedHref, init)\n            .then(res => res.json());\n        });\n      });\n    }\n    return this.remoteConfigPromise_;\n  }\n\n  /**\n   * Handle Prompt UI.\n   * @param {boolean} isConsentRequired\n   * @return {Promise<boolean>}\n   */\n  initPromptUI_(isConsentRequired) {\n    this.consentUI_ = new ConsentUI(\n      this,\n      /** @type {!JsonObject} */ (devAssert(\n        this.consentConfig_,\n        'consent config not found'\n      ))\n    );\n\n    // Get current consent state\n    return this.consentStateManager_.getConsentInstanceInfo().then(info => {\n      if (hasStoredValue(info)) {\n        // Has user stored value, no need to prompt\n        return true;\n      }\n      if (!isConsentRequired) {\n        // no need to prompt if remote reponse say so\n        // Also no need to display postPromptUI\n        this.consentStateManager_.updateConsentInstanceState(\n          CONSENT_ITEM_STATE.NOT_REQUIRED\n        );\n        return false;\n      }\n      // Prompt\n      this.scheduleDisplay_(false);\n      return true;\n      // TODO(@zhouyx):\n      // Race condition on consent state change between schedule to\n      // display and display. Add one more check before display\n    });\n  }\n\n  /**\n   * Handles the display of postPromptUI\n   */\n  handlePostPromptUI_() {\n    if (!this.postPromptUI_) {\n      return;\n    }\n\n    this.notificationUiManager_.onQueueEmpty(() => {\n      this.vsync_.mutate(() => {\n        this.postPromptUI_.show(false);\n        // Will need to scheduleLayout for postPromptUI\n        // upon request for using AMP component.\n      });\n    });\n\n    this.notificationUiManager_.onQueueNotEmpty(() => {\n      this.vsync_.mutate(() => {\n        this.postPromptUI_.hide();\n      });\n    });\n  }\n}\n\nAMP.extension('amp-consent', '0.1', AMP => {\n  AMP.registerElement('amp-consent', AmpConsent, CSS);\n  AMP.registerServiceForDoc(NOTIFICATION_UI_MANAGER, NotificationUiManager);\n  AMP.registerServiceForDoc(CONSENT_STATE_MANAGER, ConsentStateManager);\n  AMP.registerServiceForDoc(CONSENT_POLICY_MANAGER, ConsentPolicyManager);\n});\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from '../../../src/mode';\n\n/**\n * The CMP config should looks like\n * {\n *   'consentInstanceId': string, // The key to store consent information\n *   'checkConsentHref': url, // remote endpoint\n *   'promptUISrc': url, // the src for prompt iframe window\n * }\n */\n\nexport const CMP_CONFIG = {};\n\nif (getMode().test || getMode().localDev) {\n  CMP_CONFIG['_ping_'] = {\n    'consentInstanceId': '_ping_',\n    'checkConsentHref': '/get-consent-v1',\n    'promptUISrc': '/test/manual/diy-consent.html',\n  };\n}\n\nCMP_CONFIG['didomi'] = {\n  'consentInstanceId': 'didomi',\n  'checkConsentHref': 'https://api.privacy-center.org/amp/check-consent',\n  'promptUISrc': 'https://sdk-amp.privacy-center.org/loader.html',\n};\n\nCMP_CONFIG['SourcePoint'] = {\n  'consentInstanceId': 'SourcePoint',\n  'checkConsentHref': 'https://sourcepoint.mgr.consensu.org/consent/v2/amp',\n  'promptUISrc': 'https://amp.pm.sourcepoint.mgr.consensu.org/',\n};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CMP_CONFIG} from './cmps';\nimport {CONSENT_POLICY_STATE} from '../../../src/consent-state';\nimport {deepMerge} from '../../../src/utils/object';\nimport {devAssert, user, userAssert} from '../../../src/log';\nimport {getChildJsonConfig} from '../../../src/json';\nimport {isExperimentOn} from '../../../src/experiments';\nimport {toWin} from '../../../src/types';\n\nconst TAG = 'amp-consent/consent-config';\n\nconst ALLOWED_DEPR_CONSENTINSTANCE_ATTRS = {\n  'promptUI': true,\n  'checkConsentHref': true,\n  'promptIfUnknownForGeoGroup': true,\n  'onUpdateHref': true,\n};\n\nexport class ConsentConfig {\n  /** @param {!Element} element */\n  constructor(element) {\n    /** @private {!Element} */\n    this.element_ = element;\n\n    /** @private {!Window} */\n    this.win_ = toWin(element.ownerDocument.defaultView);\n\n    /** @private {?JsonObject} */\n    this.config_ = null;\n  }\n\n  /**\n   * Read validate and return the config\n   * @return {!JsonObject}\n   */\n  getConsentConfig() {\n    if (!this.config_) {\n      this.config_ = this.validateAndParseConfig_();\n    }\n    return this.config_;\n  }\n\n  /**\n   * Convert the inline config to new format\n   * @param {!JsonObject} config\n   * @return {!Object}\n   */\n  convertInlineConfigFormat_(config) {\n    const consentsConfigDepr = config['consents'];\n    if (!isExperimentOn(this.win_, 'amp-consent-v2')) {\n      userAssert(consentsConfigDepr, '%s: consents config is required', TAG);\n      userAssert(\n        Object.keys(consentsConfigDepr).length != 0,\n        \"%s: can't find consent instance\",\n        TAG\n      );\n    }\n\n    if (!config['consents']) {\n      // New format, return\n      return config;\n    }\n    // Assert single consent instance\n    const keys = Object.keys(consentsConfigDepr);\n\n    userAssert(\n      keys.length <= 1,\n      '%s: only single consent instance is supported',\n      TAG\n    );\n\n    if (keys.length > 0) {\n      config['consentInstanceId'] = keys[0];\n      // Copy config['consents']['key'] to config\n      const consentInstanceConfigDepr = config['consents'][keys[0]];\n      const attrs = Object.keys(consentInstanceConfigDepr);\n      for (let i = 0; i < attrs.length; i++) {\n        const attr = attrs[i];\n        if (!config[attr] && ALLOWED_DEPR_CONSENTINSTANCE_ATTRS[attr]) {\n          // Do not override if has been specified, or the attr is not supported\n          // in consent instance before\n          config[attrs[i]] = consentInstanceConfigDepr[attrs[i]];\n        }\n      }\n    }\n\n    delete config['consents'];\n    return config;\n  }\n\n  /**\n   * Read and parse consent config\n   * An example valid config json looks like\n   * {\n   *  \"consentInstanceId\": \"ABC\",\n   *  \"checkConsentHref\": \"https://fake.com\"\n   * }\n   * @return {!JsonObject}\n   */\n  validateAndParseConfig_() {\n    const inlineConfig = this.convertInlineConfigFormat_(\n      /** @type {!JsonObject} */ (userAssert(\n        this.getInlineConfig_(),\n        '%s: Inline config not found'\n      ))\n    );\n\n    const cmpConfig = this.getCMPConfig_();\n\n    const config = /** @type {!JsonObject} */ (deepMerge(\n      cmpConfig || {},\n      inlineConfig || {},\n      1\n    ));\n\n    userAssert(\n      config['consentInstanceId'],\n      '%s: consentInstanceId to store consent info is required',\n      TAG\n    );\n\n    if (config['policy']) {\n      // Only respect 'default' consent policy;\n      const keys = Object.keys(config['policy']);\n      // TODO (@zhouyx): Validate waitFor value\n      for (let i = 0; i < keys.length; i++) {\n        if (keys[i] != 'default') {\n          user().warn(\n            TAG,\n            'policy %s is currently not supported and will be ignored',\n            keys[i]\n          );\n          delete config['policy'][keys[i]];\n        }\n      }\n    }\n\n    return config;\n  }\n\n  /**\n   * Read the inline config from publisher\n   * @return {?JsonObject}\n   */\n  getInlineConfig_() {\n    // All consent config within the amp-consent component. There will be only\n    // one single amp-consent allowed in page.\n    try {\n      return getChildJsonConfig(this.element_);\n    } catch (e) {\n      throw user(this.element_).createError('%s: %s', TAG, e);\n    }\n  }\n\n  /**\n   * Read and format the CMP config\n   * The returned CMP config should looks like\n   * {\n   *  \"consentInstanceId\": \"foo\",\n   *  \"checkConsentHref\": \"https://fake.com\",\n   *  \"promptUISrc\": \"https://fake.com/promptUI.html\",\n   *  \"uiConfig\": {\n   *    \"overlay\": true\n   *   }\n   * }\n   * @return {?JsonObject}\n   */\n  getCMPConfig_() {\n    if (!isExperimentOn(this.win_, 'amp-consent-v2')) {\n      return null;\n    }\n\n    const type = this.element_.getAttribute('type');\n    if (!type) {\n      return null;\n    }\n    userAssert(CMP_CONFIG[type], '%s: invalid CMP type %s', TAG, type);\n    const importConfig = CMP_CONFIG[type];\n    this.validateCMPConfig_(importConfig);\n    return importConfig;\n  }\n\n  /**\n   * Check if the CMP config is valid\n   * @param {!JsonObject} config\n   */\n  validateCMPConfig_(config) {\n    const assertValues = [\n      'consentInstanceId',\n      'checkConsentHref',\n      'promptUISrc',\n    ];\n    for (let i = 0; i < assertValues.length; i++) {\n      const attribute = assertValues[i];\n      devAssert(config[attribute], 'CMP config must specify %s', attribute);\n    }\n  }\n}\n\n/**\n * Expand the passed in policyConfig and generate predefined policy entires\n * @param {!JsonObject} policyConfig\n * @param {string} consentId\n * @return {!JsonObject}\n */\nexport function expandPolicyConfig(policyConfig, consentId) {\n  // Generate default policy\n  const defaultWaitForItems = {};\n\n  defaultWaitForItems[consentId] = undefined;\n\n  const defaultPolicy = {\n    'waitFor': defaultWaitForItems,\n  };\n\n  // TODO(@zhouyx): unblockOn is internal now.\n  const unblockOnAll = [\n    CONSENT_POLICY_STATE.UNKNOWN,\n    CONSENT_POLICY_STATE.SUFFICIENT,\n    CONSENT_POLICY_STATE.INSUFFICIENT,\n    CONSENT_POLICY_STATE.UNKNOWN_NOT_REQUIRED,\n  ];\n\n  const predefinedNone = {\n    'waitFor': defaultWaitForItems,\n    // Experimental config, do not expose\n    'unblockOn': unblockOnAll,\n  };\n\n  const rejectAllOnZero = {\n    'waitFor': defaultWaitForItems,\n    'timeout': {\n      'seconds': 0,\n      'fallbackAction': 'reject',\n    },\n    'unblockOn': unblockOnAll,\n  };\n\n  policyConfig['_till_responded'] = predefinedNone;\n\n  policyConfig['_till_accepted'] = defaultPolicy;\n\n  policyConfig['_auto_reject'] = rejectAllOnZero;\n\n  if (policyConfig && policyConfig['default']) {\n    return policyConfig;\n  }\n\n  policyConfig['default'] = defaultPolicy;\n\n  return policyConfig;\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dev} from '../../../src/log';\nimport {hasOwn, map} from '../../../src/utils/object';\nimport {isEnumValue, isObject} from '../../../src/types';\n\n/**\n * Key values for retriving/storing consent info object.\n * STATE: Set when user accept or reject consent.\n * STRING: Set when a consent string is used to store more granular consent info\n * on vendors.\n * DITRYBIT: Set when the stored consent info need to be revoked next time.\n * @enum {string}\n */\nconst STORAGE_KEY = {\n  STATE: 's',\n  STRING: 'r',\n  IS_DIRTY: 'd',\n};\n\n/**\n * @enum {number}\n */\nexport const CONSENT_ITEM_STATE = {\n  ACCEPTED: 1,\n  REJECTED: 2,\n  DISMISSED: 3,\n  NOT_REQUIRED: 4,\n  UNKNOWN: 5,\n  // TODO(@zhouyx): Seperate UI state from consent state. Add consent\n  // requirement state ui_state = {pending, active, complete} consent_state =\n  // {unknown, accepted, rejected}\n};\n\n/**\n * @typedef {{\n *  consentState: CONSENT_ITEM_STATE,\n *  consentString: (string|undefined),\n *  isDirty: (boolean|undefined),\n * }}\n */\nexport let ConsentInfoDef;\n\n/**\n * Convert the legacy storage value to Consent Info\n * @param {boolean|Object|undefined} value\n * @return {ConsentInfoDef}\n */\nexport function getStoredConsentInfo(value) {\n  if (value === undefined) {\n    return constructConsentInfo(\n      CONSENT_ITEM_STATE.UNKNOWN,\n      undefined,\n      undefined\n    );\n  }\n  if (typeof value === 'boolean') {\n    // legacy format\n    return getLegacyStoredConsentInfo(value);\n  }\n  if (!isObject(value)) {\n    throw dev().createError('Invalid stored consent value');\n  }\n\n  const consentState = convertValueToState(value[STORAGE_KEY.STATE]);\n  return constructConsentInfo(\n    consentState,\n    value[STORAGE_KEY.STRING],\n    value[STORAGE_KEY.IS_DIRTY] && value[STORAGE_KEY.IS_DIRTY] === 1\n  );\n}\n\n/**\n * Helper function to detect if stored consent has dirtyBit set\n * @param {?ConsentInfoDef} consentInfo\n * @return {boolean}\n */\nexport function hasDirtyBit(consentInfo) {\n  if (!consentInfo) {\n    return false;\n  }\n  if (hasOwn(consentInfo, 'isDirty') && consentInfo['isDirty'] == true) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Return the new consent state value based on stored state and new state\n * @param {!CONSENT_ITEM_STATE} newState\n * @param {!CONSENT_ITEM_STATE} previousState\n * @return {!CONSENT_ITEM_STATE}\n */\nexport function recalculateConsentStateValue(newState, previousState) {\n  if (!isEnumValue(CONSENT_ITEM_STATE, newState)) {\n    newState = CONSENT_ITEM_STATE.UNKNOWN;\n  }\n  if (\n    newState == CONSENT_ITEM_STATE.DISMISSED ||\n    newState == CONSENT_ITEM_STATE.UNKNOWN\n  ) {\n    return previousState || CONSENT_ITEM_STATE.UNKNOWN;\n  }\n  if (newState == CONSENT_ITEM_STATE.NOT_REQUIRED) {\n    if (previousState && previousState != CONSENT_ITEM_STATE.UNKNOWN) {\n      return previousState;\n    }\n  }\n  return newState;\n}\n\n/**\n * Compose the value to store to localStorage based on the consentInfo\n * @param {!ConsentInfoDef} consentInfo\n * @param {boolean=} opt_forceNew\n * @return {?boolean|Object}\n */\nexport function composeStoreValue(consentInfo, opt_forceNew) {\n  if (\n    !opt_forceNew &&\n    !consentInfo['consentString'] &&\n    consentInfo['isDirty'] === undefined\n  ) {\n    // TODO: Remove after turn on amp-consent-v2\n    return calculateLegacyStateValue(consentInfo['consentState']);\n  }\n  const obj = map();\n  const consentState = consentInfo['consentState'];\n  if (consentState == CONSENT_ITEM_STATE.ACCEPTED) {\n    obj[STORAGE_KEY.STATE] = 1;\n  } else if (consentState == CONSENT_ITEM_STATE.REJECTED) {\n    obj[STORAGE_KEY.STATE] = 0;\n  } else {\n    // Only store consentString and dirtyBit with reject/accept action\n    return null;\n  }\n\n  if (consentInfo['consentString']) {\n    obj[STORAGE_KEY.STRING] = consentInfo['consentString'];\n  }\n\n  if (consentInfo['isDirty'] === true) {\n    obj[STORAGE_KEY.IS_DIRTY] = 1;\n  }\n\n  if (Object.keys(obj) == 0) {\n    return null;\n  }\n\n  return obj;\n}\n\n/**\n * Convert the consentState to legacy boolean stored value\n * @param {!CONSENT_ITEM_STATE} consentState\n * @return {?boolean}\n */\nexport function calculateLegacyStateValue(consentState) {\n  if (consentState == CONSENT_ITEM_STATE.ACCEPTED) {\n    return true;\n  }\n  if (consentState == CONSENT_ITEM_STATE.REJECTED) {\n    return false;\n  }\n  return null;\n}\n\n/**\n * Compare two consentInfo.\n * Return true if they can be converted to the same stored value.\n * @param {?ConsentInfoDef} infoA\n * @param {?ConsentInfoDef} infoB\n * @param {boolean=} opt_isDirty\n * @return {boolean}\n */\nexport function isConsentInfoStoredValueSame(infoA, infoB, opt_isDirty) {\n  if (!infoA && !infoB) {\n    return true;\n  }\n  if (infoA && infoB) {\n    const stateEqual =\n      calculateLegacyStateValue(infoA['consentState']) ===\n      calculateLegacyStateValue(infoB['consentState']);\n    const stringEqual =\n      (infoA['consentString'] || '') === (infoB['consentString'] || '');\n    let isDirtyEqual;\n    if (opt_isDirty) {\n      isDirtyEqual = !!infoA['isDirty'] === !!opt_isDirty;\n    } else {\n      isDirtyEqual = !!infoA['isDirty'] === !!infoB['isDirty'];\n    }\n    return stateEqual && stringEqual && isDirtyEqual;\n  }\n  return false;\n}\n\n/**\n * Convert the legacy boolean stored value to consentInfo object\n * @param {boolean} value\n * @return {!ConsentInfoDef}\n */\nfunction getLegacyStoredConsentInfo(value) {\n  const state = convertValueToState(value);\n  return constructConsentInfo(state, undefined, undefined);\n}\n\n/**\n * Construct the consentInfo object from values\n * @param {CONSENT_ITEM_STATE} consentState\n * @param {string=} opt_consentString\n * @param {boolean=} opt_isDirty\n * @return {!ConsentInfoDef}\n */\nexport function constructConsentInfo(\n  consentState,\n  opt_consentString,\n  opt_isDirty\n) {\n  return {\n    'consentState': consentState,\n    'consentString': opt_consentString,\n    'isDirty': opt_isDirty,\n  };\n}\n\n/**\n * Helper function to convert stored value to CONSENT_ITEM_STATE value\n * @param {*} value\n * @return {!CONSENT_ITEM_STATE}\n */\nfunction convertValueToState(value) {\n  if (value === true || value === 1) {\n    return CONSENT_ITEM_STATE.ACCEPTED;\n  } else if (value === false || value === 0) {\n    return CONSENT_ITEM_STATE.REJECTED;\n  }\n  return CONSENT_ITEM_STATE.UNKNOWN;\n}\n\n/**\n *\n * @param {!ConsentInfoDef} info\n * @return {boolean}\n */\nexport function hasStoredValue(info) {\n  if (info['consentString']) {\n    return true;\n  }\n  return (\n    info['consentState'] === CONSENT_ITEM_STATE.ACCEPTED ||\n    info['consentState'] === CONSENT_ITEM_STATE.REJECTED\n  );\n}\n\n/**\n * Convert the CONSENT_ITEM_STATE back to readable string\n * @param {!CONSENT_ITEM_STATE} enumState\n * @return {string}\n */\nexport function getConsentStateValue(enumState) {\n  if (enumState === CONSENT_ITEM_STATE.ACCEPTED) {\n    return 'accepted';\n  }\n\n  if (enumState === CONSENT_ITEM_STATE.REJECTED) {\n    return 'rejected';\n  }\n\n  return 'unknown';\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CONSENT_ITEM_STATE, ConsentInfoDef} from './consent-info';\nimport {CONSENT_POLICY_STATE} from '../../../src/consent-state';\nimport {Deferred} from '../../../src/utils/promise';\nimport {Observable} from '../../../src/observable';\nimport {getServicePromiseForDoc} from '../../../src/service';\nimport {isExperimentOn} from '../../../src/experiments';\nimport {isFiniteNumber, isObject} from '../../../src/types';\nimport {map} from '../../../src/utils/object';\nimport {user, userAssert} from '../../../src/log';\n\nconst CONSENT_STATE_MANAGER = 'consentStateManager';\nconst TAG = 'consent-policy-manager';\n\nconst WHITELIST_POLICY = {\n  'default': true,\n  '_till_responded': true,\n  '_till_accepted': true,\n  '_auto_reject': true,\n};\n\nexport class ConsentPolicyManager {\n  /**\n   * Creates an instance of ConsentPolicyManager.\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @private {!../../../src/service/ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n\n    /** @private {!Object<string, ?Deferred>} */\n    this.policyInstancesDeferred_ = map();\n\n    /** @private {!Object<string, ConsentPolicyInstance>} */\n    this.instances_ = map();\n\n    /** @private {!Promise} */\n    this.ConsentStateManagerPromise_ = getServicePromiseForDoc(\n      this.ampdoc_,\n      CONSENT_STATE_MANAGER\n    );\n\n    /** @private {!Deferred} */\n    this.consentPromptInitiated_ = new Deferred();\n\n    const consentValueInitiated = new Deferred();\n\n    /** @private {!Promise} */\n    this.consentValueInitiatedPromise_ = consentValueInitiated.promise;\n\n    /** @private {?function()} */\n    this.consentValueInitiatedResolver_ = consentValueInitiated.resolve;\n\n    /** @private {!Observable} */\n    this.consentStateChangeObservables_ = new Observable();\n\n    /** @private {?string} */\n    this.consentInstanceIdDepr_ = null;\n\n    /** @private {?CONSENT_ITEM_STATE} */\n    this.consentState_ = null;\n\n    /** @private {?string} */\n    this.consentString_ = null;\n  }\n\n  /**\n   * Is Multi-consent experiment enabled?\n   *\n   * @param {!Window} win\n   * @return {boolean}\n   */\n  static isMultiSupported(win) {\n    return isExperimentOn(win, 'multi-consent');\n  }\n\n  /**\n   *\n   * @param {string} consentInstanceId\n   */\n  setLegacyConsentInstanceId(consentInstanceId) {\n    this.consentInstanceIdDepr_ = consentInstanceId;\n    this.init_();\n  }\n\n  /**\n   * Register the policy instance\n   * Example policy config format:\n   * {\n   *   \"waitFor\": {\n   *     \"consentABC\": []\n   *   }\n   *   \"timeout\": {\n   *     \"seconds\": 1,\n   *     \"fallbackAction\": 'reject'\n   *   }\n   * }\n   *\n   * TODO: Add support to timeout\n   * @param {string} policyId\n   * @param {!JsonObject} config\n   */\n  registerConsentPolicyInstance(policyId, config) {\n    if (this.instances_[policyId]) {\n      // Note <amp-next-page> could wait for the same consent policy.\n      // Return without thowing error.\n      // TODO: Make sure multiple consentPolicyManager services is installed\n      // for every <amp-next-page>\n      return;\n    }\n\n    const waitFor = Object.keys(config['waitFor'] || {});\n    if (waitFor.length !== 1 || waitFor[0] !== this.consentInstanceIdDepr_) {\n      user().error(\n        TAG,\n        'invalid waitFor value, consent policy will never resolve'\n      );\n      return;\n    }\n\n    const instance = new ConsentPolicyInstance(config);\n\n    this.instances_[policyId] = instance;\n\n    if (this.policyInstancesDeferred_[policyId]) {\n      this.policyInstancesDeferred_[policyId].resolve();\n      this.policyInstancesDeferred_[policyId] = null;\n    }\n\n    this.consentValueInitiatedPromise_.then(() => {\n      if (this.consentState_) {\n        // Has initial consent state value. Evaluate immediately\n        instance.evaluate(this.consentState_);\n      }\n      this.consentStateChangeObservables_.add(state => {\n        instance.evaluate(state);\n      });\n      this.consentPromptInitiated_.promise.then(() => {\n        instance.startTimeout(this.ampdoc_.win);\n      });\n    });\n  }\n\n  /**\n   * Helper method to register to listen to consent instance value change\n   * and get the initial consent value\n   */\n  init_() {\n    // Set up handler to listen to consent instance value change.\n    this.ConsentStateManagerPromise_.then(manager => {\n      manager.whenConsentReady().then(() => {\n        manager.onConsentStateChange(info => {\n          this.consentStateChangeHandler_(info);\n          if (this.consentValueInitiatedResolver_) {\n            this.consentValueInitiatedResolver_();\n            this.consentValueInitiatedResolver_ = null;\n          }\n        });\n      });\n    });\n  }\n\n  /**\n   * Inform consent policy manager that all consent instances\n   * state has been initiated with remote value. And ready to start timeout\n   */\n  enableTimeout() {\n    this.consentPromptInitiated_.resolve();\n  }\n\n  /**\n   * Handle initial consent instance value and following consent value change\n   * @param {!ConsentInfoDef} info\n   */\n  consentStateChangeHandler_(info) {\n    const state = info['consentState'];\n    const consentStr = info['consentString'];\n    const prevConsentStr = this.consentString_;\n    this.consentString_ = consentStr;\n    if (state === CONSENT_ITEM_STATE.UNKNOWN) {\n      // consent state has not been resolved yet.\n      return;\n    }\n\n    if (state == CONSENT_ITEM_STATE.NOT_REQUIRED) {\n      const shouldOverwrite =\n        this.consentState_ != CONSENT_ITEM_STATE.ACCEPTED &&\n        this.consentState_ != CONSENT_ITEM_STATE.REJECTED;\n      // Ignore the consent item state and overwrite state value.\n      if (shouldOverwrite) {\n        this.consentState_ = CONSENT_ITEM_STATE.NOT_REQUIRED;\n      }\n    } else if (state == CONSENT_ITEM_STATE.DISMISSED) {\n      // When dismissed, use the old value\n      if (this.consentState_ === null) {\n        this.consentState_ = CONSENT_ITEM_STATE.UNKNOWN;\n      }\n      // consentString doesn't change with dismiss action\n      this.consentString_ = prevConsentStr;\n    } else {\n      this.consentState_ = state;\n    }\n    this.consentStateChangeObservables_.fire(this.consentState_);\n  }\n\n  /**\n   * Used to wait for policy to resolve;\n   * @param {string} policyId\n   * @return {!Promise<CONSENT_POLICY_STATE>}\n   */\n  whenPolicyResolved(policyId) {\n    // If customized policy is not supported\n    if (!WHITELIST_POLICY[policyId]) {\n      user().error(\n        TAG,\n        'can not find policy %s, only predefined policies are supported',\n        policyId\n      );\n      return Promise.resolve(CONSENT_POLICY_STATE.UNKNOWN);\n    }\n    return this.whenPolicyInstanceRegistered_(policyId).then(() => {\n      return this.instances_[policyId].getReadyPromise().then(() => {\n        return this.instances_[policyId].getCurrentPolicyStatus();\n      });\n    });\n  }\n\n  /**\n   * Wait for policy to resolve and check if it should be unblocked\n   * @param {string} policyId\n   * @return {!Promise<boolean>}\n   */\n  whenPolicyUnblock(policyId) {\n    // If customized policy is not supported\n    if (!WHITELIST_POLICY[policyId]) {\n      user().error(\n        TAG,\n        'can not find policy %s, only predefined policies are supported',\n        policyId\n      );\n      return Promise.resolve(false);\n    }\n    return this.whenPolicyInstanceRegistered_(policyId).then(() => {\n      return this.instances_[policyId].getReadyPromise().then(() => {\n        return this.instances_[policyId].shouldUnblock();\n      });\n    });\n  }\n\n  /**\n   * Get shared data of a policy. If multiple consent instances return\n   * sharedData, a merge will be done. For any conflict keys, the value from\n   * later consent instance (as defined in the policy config) will override\n   * the previous ones.\n   *\n   * @param {string} policyId\n   * @return {!Promise<Object>}\n   */\n  getMergedSharedData(policyId) {\n    return this.whenPolicyResolved(policyId)\n      .then(() => this.ConsentStateManagerPromise_)\n      .then(manager => {\n        return manager.getConsentInstanceSharedData();\n      });\n  }\n\n  /**\n   * Get the consent string value of a policy. Return a promise that resolves\n   * when the policy resolves.\n   * @param {string} policyId\n   * @return {!Promise<?string>}\n   */\n  getConsentStringInfo(policyId) {\n    return this.whenPolicyResolved(policyId).then(() => {\n      return this.consentString_;\n    });\n  }\n\n  /**\n   * Wait for policy instance to be registered.\n   * @param {string} policyId\n   * @return {!Promise}\n   */\n  whenPolicyInstanceRegistered_(policyId) {\n    if (this.instances_[policyId]) {\n      return Promise.resolve();\n    }\n    if (!this.policyInstancesDeferred_[policyId]) {\n      this.policyInstancesDeferred_[policyId] = new Deferred();\n    }\n    return /** @type {!Promise} */ (this.policyInstancesDeferred_[policyId]\n      .promise);\n  }\n}\n\nexport class ConsentPolicyInstance {\n  /**\n   * Creates an instance of ConsentPolicyInstance.\n   * @param {!JsonObject} config\n   */\n  constructor(config) {\n    /** @private {!JsonObject} */\n    this.config_ = config;\n\n    const readyDeferred = new Deferred();\n\n    /** @private {!Promise} */\n    this.readyPromise_ = readyDeferred.promise;\n\n    /** @private {?function()} */\n    this.readyResolver_ = readyDeferred.resolve;\n\n    /** @private {CONSENT_POLICY_STATE} */\n    this.status_ = CONSENT_POLICY_STATE.UNKNOWN;\n\n    /** @private {!Array<CONSENT_POLICY_STATE>} */\n    this.unblockStateLists_ = config['unblockOn'] || [\n      CONSENT_POLICY_STATE.SUFFICIENT,\n      CONSENT_POLICY_STATE.UNKNOWN_NOT_REQUIRED,\n    ];\n  }\n\n  /**\n   * @param {Window} win\n   */\n  startTimeout(win) {\n    const timeoutConfig = this.config_['timeout'];\n\n    let timeoutSecond = null;\n    let fallbackState;\n\n    if (timeoutConfig != undefined) {\n      // timeoutConfig could equal to 0;\n      if (isObject(timeoutConfig)) {\n        /**\n         * \"timeout\": {\n         *   \"seconds\" : 1,\n         *   \"fallbackAction\": \"reject\"\n         * }\n         */\n        if (\n          timeoutConfig['fallbackAction'] &&\n          timeoutConfig['fallbackAction'] == 'reject'\n        ) {\n          fallbackState = CONSENT_ITEM_STATE.REJECTED;\n        } else if (\n          timeoutConfig['fallbackAction'] &&\n          timeoutConfig['fallbackAction'] != 'dismiss'\n        ) {\n          user().error(\n            TAG,\n            'unsupported fallbackAction %s',\n            timeoutConfig['fallbackAction']\n          );\n        }\n        timeoutSecond = timeoutConfig['seconds'];\n      } else {\n        timeoutSecond = timeoutConfig;\n      }\n      userAssert(\n        isFiniteNumber(timeoutSecond),\n        'invalid timeout value %s',\n        timeoutSecond\n      );\n    }\n\n    if (timeoutSecond != null) {\n      win.setTimeout(() => {\n        // Force evaluate on timeout\n        fallbackState = fallbackState || CONSENT_ITEM_STATE.UNKNOWN;\n        this.evaluate(fallbackState, true);\n      }, timeoutSecond * 1000);\n    }\n  }\n\n  /**\n   * Evaluate the incoming consent state and determine if the policy instance\n   * should be resolved and what the policy state should be.\n   * @param {CONSENT_ITEM_STATE} state\n   * @param {boolean} isFallback\n   */\n  evaluate(state, isFallback = false) {\n    if (!state) {\n      // Not ready for evaluate yet\n      return;\n    }\n\n    if (isFallback && !this.readyResolver_) {\n      // Discard fallback state if consent status has resolve before timeout.\n      return;\n    }\n\n    if (state === CONSENT_ITEM_STATE.ACCEPTED) {\n      this.status_ = CONSENT_POLICY_STATE.SUFFICIENT;\n    } else if (state === CONSENT_ITEM_STATE.REJECTED) {\n      this.status_ = CONSENT_POLICY_STATE.INSUFFICIENT;\n    } else if (state === CONSENT_ITEM_STATE.NOT_REQUIRED) {\n      this.status_ = CONSENT_POLICY_STATE.UNKNOWN_NOT_REQUIRED;\n    } else {\n      this.status_ = CONSENT_POLICY_STATE.UNKNOWN;\n    }\n\n    if (this.readyResolver_) {\n      this.readyResolver_();\n      this.readyResolver_ = null;\n    }\n  }\n\n  /**\n   * Return a promise that resolved when policy ready.\n   * Note: the promise can be reset if use toggle consent state\n   * @return {!Promise}\n   */\n  getReadyPromise() {\n    return this.readyPromise_;\n  }\n\n  /**\n   * Returns the current consent policy state\n   * @return {CONSENT_POLICY_STATE}\n   */\n  getCurrentPolicyStatus() {\n    return this.status_;\n  }\n\n  /**\n   * Returns whether the current consent policy state should be unblocked\n   * Caller need to make sure that policy status has resolved\n   * @return {boolean}\n   */\n  shouldUnblock() {\n    return this.unblockStateLists_.indexOf(this.status_) > -1;\n  }\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONSENT_ITEM_STATE,\n  ConsentInfoDef,\n  calculateLegacyStateValue,\n  composeStoreValue,\n  constructConsentInfo,\n  getConsentStateValue,\n  getStoredConsentInfo,\n  hasDirtyBit,\n  isConsentInfoStoredValueSame,\n  recalculateConsentStateValue,\n} from './consent-info';\nimport {Deferred} from '../../../src/utils/promise';\nimport {Services} from '../../../src/services';\nimport {assertHttpsUrl} from '../../../src/url';\nimport {dev, devAssert, user} from '../../../src/log';\nimport {isExperimentOn} from '../../../src/experiments';\n\nconst TAG = 'CONSENT-STATE-MANAGER';\nconst CID_SCOPE = 'AMP-CONSENT';\n\nexport class ConsentStateManager {\n  /**\n   * Creates an instance of ConsentStateManager.\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @private {!../../../src/service/ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n\n    /** @private {?string} */\n    this.instanceId_ = null;\n\n    /** @private {?ConsentInstance} */\n    this.instance_ = null;\n\n    /** @private {?function(!ConsentInfoDef)} */\n    this.consentChangeHandler_ = null;\n\n    /** @private {?Promise} */\n    this.consentReadyPromise_ = null;\n\n    /** @private {?function()} */\n    this.consentReadyResolver_ = null;\n  }\n\n  /**\n   * Register and create a consent instance to manage state\n   * @param {string} instanceId\n   * @param {!Object} config\n   */\n  registerConsentInstance(instanceId, config) {\n    if (this.instance_) {\n      dev().error(\n        TAG,\n        'Cannot register consent instance %s, ' +\n          'instance %s has already been registered.',\n        instanceId,\n        this.instanceId_\n      );\n      return;\n    }\n\n    this.instanceId_ = instanceId;\n\n    this.instance_ = new ConsentInstance(this.ampdoc_, instanceId, config);\n\n    if (this.consentReadyResolver_) {\n      this.consentReadyResolver_();\n      this.consentReadyResolver_ = null;\n    }\n  }\n\n  /**\n   * Update consent instance state\n   * @param {CONSENT_ITEM_STATE} state\n   * @param {string=} consentStr\n   */\n  updateConsentInstanceState(state, consentStr) {\n    if (!this.instance_) {\n      dev().error(TAG, 'instance not registered');\n      return;\n    }\n\n    this.instance_.update(state, consentStr);\n\n    if (this.consentChangeHandler_) {\n      this.consentChangeHandler_(constructConsentInfo(state, consentStr));\n    }\n  }\n\n  /**\n   * Get last consent instance stored.\n   * @return {Promise<!ConsentInfoDef>}\n   */\n  getLastConsentInstanceInfo() {\n    devAssert(this.instance_, '%s: cannot find the instance', TAG);\n    return this.instance_.get();\n  }\n\n  /**\n   * Get local consent instance state\n   * @return {Promise<!ConsentInfoDef>}\n   */\n  getConsentInstanceInfo() {\n    devAssert(this.instance_, '%s: cannot find the instance', TAG);\n    return this.instance_.get().then(info => {\n      if (hasDirtyBit(info)) {\n        return constructConsentInfo(CONSENT_ITEM_STATE.UNKNOWN);\n      }\n      return info;\n    });\n  }\n\n  /**\n   * Register the handler for every consent state change.\n   * @param {function(!ConsentInfoDef)} handler\n   */\n  onConsentStateChange(handler) {\n    devAssert(this.instance_, '%s: cannot find the instance', TAG);\n\n    devAssert(\n      !this.consentChangeHandler_,\n      '%s: Duplicate consent change handler, will be ignored',\n      TAG\n    );\n\n    this.consentChangeHandler_ = handler;\n\n    // Fire first consent instance state.\n    this.getConsentInstanceInfo().then(info => {\n      handler(info);\n    });\n  }\n\n  /**\n   * Sets a promise which resolves to a shareData object that is to be returned\n   * from the remote endpoint.\n   *\n   * @param {Promise<?Object>} sharedDataPromise\n   */\n  setConsentInstanceSharedData(sharedDataPromise) {\n    devAssert(this.instance_, '%s: cannot find the instance', TAG);\n    this.instance_.sharedDataPromise = sharedDataPromise;\n  }\n\n  /**\n   * Sets the dirty bit so current consent info won't be used for\n   * decision making on next visit\n   */\n  setDirtyBit() {\n    this.instance_.setDirtyBit();\n  }\n\n  /**\n   * Returns a promise that resolves to a shareData object that is returned\n   * from the remote endpoint.\n   *\n   * @return {?Promise<?Object>}\n   */\n  getConsentInstanceSharedData() {\n    devAssert(this.instance_, '%s: cannot find the instance', TAG);\n    return this.instance_.sharedDataPromise;\n  }\n\n  /**\n   * Returns a promise that's resolved when consent instance is ready.\n   * @return {*} TODO(#23582): Specify return type\n   */\n  whenConsentReady() {\n    if (this.instance_) {\n      return Promise.resolve();\n    }\n    if (!this.consentReadyPromise_) {\n      const deferred = new Deferred();\n      this.consentReadyPromise_ = deferred.promise;\n      this.consentReadyResolver_ = deferred.resolve;\n    }\n    return this.consentReadyPromise_;\n  }\n}\n\n/**\n * @visibleForTesting\n */\nexport class ConsentInstance {\n  /**\n   *\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {string} id\n   * @param {!Object} config\n   */\n  constructor(ampdoc, id, config) {\n    /** @private {!../../../src/service/ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n\n    /** @private {boolean} */\n    this.isAmpConsentV2ExperimentOn_ = isExperimentOn(\n      ampdoc.win,\n      'amp-consent-v2'\n    );\n\n    /** @private {string} */\n    this.id_ = id;\n\n    /** @public {?Promise<Object>} */\n    this.sharedDataPromise = null;\n\n    /** @private {Promise<!../../../src/service/storage-impl.Storage>} */\n    this.storagePromise_ = Services.storageForDoc(ampdoc);\n\n    /** @private {?ConsentInfoDef}*/\n    this.localConsentInfo_ = null;\n\n    /** @private {?ConsentInfoDef} */\n    this.savedConsentInfo_ = null;\n\n    /** @private {string} */\n    this.storageKey_ = 'amp-consent:' + id;\n\n    /** @private {?string} */\n    this.onUpdateHref_ = config['onUpdateHref'] || null;\n    if (this.onUpdateHref_) {\n      assertHttpsUrl(this.onUpdateHref_, 'AMP-CONSENT');\n    }\n\n    /** @private {boolean|undefined} */\n    this.hasDirtyBitNext_ = undefined;\n  }\n\n  /**\n   * Set dirtyBit to current consent info. Refresh stored consent value with\n   * dirtyBit\n   * @return {*} TODO(#23582): Specify return type\n   */\n  setDirtyBit() {\n    // Note: this.hasDirtyBitNext_ is only set to true when 'forcePromptNext'\n    // is set to true and we need to set dirtyBit for next visit.\n    this.hasDirtyBitNext_ = true;\n    return this.get().then(info => {\n      if (hasDirtyBit(info)) {\n        // Current stored value has dirtyBit and is no longer valid.\n        // No need to update with dirtyBit\n        return;\n      }\n      this.update(info['consentState'], info['consentString'], true);\n    });\n  }\n\n  /**\n   * Update the local consent state list\n   * @param {!CONSENT_ITEM_STATE} state\n   * @param {string=} consentString\n   * @param {boolean=} opt_systemUpdate\n   */\n  update(state, consentString, opt_systemUpdate) {\n    const localState =\n      this.localConsentInfo_ && this.localConsentInfo_['consentState'];\n    const localConsentStr =\n      this.localConsentInfo_ && this.localConsentInfo_['consentString'];\n    const calculatedState = recalculateConsentStateValue(state, localState);\n\n    if (state === CONSENT_ITEM_STATE.DISMISSED) {\n      // If state is dismissed, use the old consent string.\n      this.localConsentInfo_ = constructConsentInfo(\n        calculatedState,\n        localConsentStr\n      );\n      return;\n    }\n\n    // Any user update makes the current state valid, thus remove dirtyBit\n    // from localConsentInfo_\n    const oldValue = this.localConsentInfo_;\n    if (opt_systemUpdate && hasDirtyBit(oldValue)) {\n      this.localConsentInfo_ = constructConsentInfo(\n        calculatedState,\n        consentString,\n        true\n      );\n    } else {\n      // Any user update makes the current state valid, thus remove dirtyBit\n      // from localConsentInfo_\n      this.localConsentInfo_ = constructConsentInfo(\n        calculatedState,\n        consentString\n      );\n    }\n\n    const newConsentInfo = constructConsentInfo(\n      calculatedState,\n      consentString,\n      this.hasDirtyBitNext_\n    );\n\n    if (isConsentInfoStoredValueSame(newConsentInfo, this.savedConsentInfo_)) {\n      // Only update/save to localstorage if it's not dismiss\n      // And the value is different from what is stored.\n      return;\n    }\n\n    // TODO(@zhouyx): Need force update to update timestamp\n    this.updateStoredValue_(newConsentInfo);\n  }\n\n  /**\n   * Write the new value to localStorage and send updateHrefRequest\n   * @param {!ConsentInfoDef} consentInfo\n   */\n  updateStoredValue_(consentInfo) {\n    this.storagePromise_.then(storage => {\n      if (\n        !isConsentInfoStoredValueSame(\n          consentInfo,\n          this.localConsentInfo_,\n          this.hasDirtyBitNext_\n        )\n      ) {\n        // If state has changed. do not store outdated value.\n        return;\n      }\n\n      const consentStr = consentInfo['consentString'];\n      if (consentStr && consentStr.length > 150) {\n        // Verify the length of consentString.\n        // 150 * 2 (utf8Encode) * 4/3 (base64) = 400 bytes.\n        // TODO: Need utf8Encode if necessary.\n        user().error(\n          TAG,\n          'Cannot store consentString which length exceeds 150 ' +\n            'Previous stored consentInfo will be cleared'\n        );\n        // If new consentInfo value cannot be stored, need to remove previous\n        // value\n        storage.remove(this.storageKey_);\n        // TODO: Good to have a way to inform CMP service in this case\n        return;\n      }\n\n      const value = composeStoreValue(\n        consentInfo,\n        this.isAmpConsentV2ExperimentOn_\n      );\n      if (value == null) {\n        // Value can be false, do not use !value check\n        // Nothing to store to localStorage\n        return;\n      }\n      this.savedConsentInfo_ = consentInfo;\n      storage.setNonBoolean(this.storageKey_, value);\n      this.sendUpdateHrefRequest_(consentInfo);\n    });\n  }\n\n  /**\n   * Get the local consent state list\n   * @return {!Promise<!ConsentInfoDef>}\n   */\n  get() {\n    if (this.localConsentInfo_) {\n      // Return the local value if it has been processed before\n      return Promise.resolve(this.localConsentInfo_);\n    }\n\n    let storage;\n    return this.storagePromise_\n      .then(s => {\n        storage = s;\n        return storage.get(this.storageKey_);\n      })\n      .then(storedValue => {\n        if (this.localConsentInfo_) {\n          // If local value has been updated, return most updated value;\n          return this.localConsentInfo_;\n        }\n\n        const consentInfo = getStoredConsentInfo(storedValue);\n        this.savedConsentInfo_ = consentInfo;\n\n        if (hasDirtyBit(consentInfo)) {\n          // clear stored value.\n          this.sendUpdateHrefRequest_(\n            constructConsentInfo(CONSENT_ITEM_STATE.UNKNOWN)\n          );\n          storage.remove(this.storageKey_);\n          this.savedConsentInfo_ = null;\n        }\n        // Note: this.localConsentInfo dirtyBit can only be set to false\n        // if the stored value has dirtyBit.\n        // Any local update reset the value to true.\n        this.localConsentInfo_ = consentInfo;\n        return this.localConsentInfo_;\n      })\n      .catch(e => {\n        dev().error(TAG, 'Failed to read storage', e);\n        return constructConsentInfo(CONSENT_ITEM_STATE.UNKNOWN);\n      });\n  }\n\n  /**\n   * send a POST request to the updateHref with userId with fixed scope\n   * and consentInstanceIds\n   * @param {!ConsentInfoDef} consentInfo\n   */\n  sendUpdateHrefRequest_(consentInfo) {\n    if (!this.onUpdateHref_) {\n      return;\n    }\n    if (hasDirtyBit(consentInfo)) {\n      // No need to send update request if the stored consent info is dirty\n      return;\n    }\n    const legacyConsentState = calculateLegacyStateValue(\n      consentInfo['consentState']\n    );\n    const cidPromise = Services.cidForDoc(this.ampdoc_).then(cid => {\n      return cid.get(\n        {scope: CID_SCOPE, createCookieIfNotPresent: true},\n        Promise.resolve()\n      );\n    });\n    cidPromise.then(userId => {\n      const request = /** @type {!JsonObject} */ ({\n        // Unfortunately we need to keep the name to be backward compatible\n        'consentInstanceId': this.id_,\n        'ampUserId': userId,\n      });\n      if (legacyConsentState != null) {\n        request['consentState'] = legacyConsentState;\n      }\n      request['consentStateValue'] = getConsentStateValue(\n        consentInfo['consentState']\n      );\n      if (consentInfo['consentString']) {\n        request['consentString'] = consentInfo['consentString'];\n      }\n      const init = {\n        credentials: 'include',\n        method: 'POST',\n        body: request,\n        ampCors: false,\n      };\n      this.ampdoc_.whenFirstVisible().then(() => {\n        Services.xhrFor(this.ampdoc_.win).fetchJson(\n          /** @type {string} */ (this.onUpdateHref_),\n          init\n        );\n      });\n    });\n  }\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from '../../../src/utils/promise';\nimport {Services} from '../../../src/services';\nimport {assertHttpsUrl} from '../../../src/url';\nimport {dev, user} from '../../../src/log';\nimport {dict} from '../../../src/utils/object';\nimport {\n  elementByTag,\n  insertAfterOrAtStart,\n  isAmpElement,\n  removeElement,\n  whenUpgradedToCustomElement,\n} from '../../../src/dom';\nimport {getConsentStateValue} from './consent-info';\nimport {getData} from '../../../src/event-helper';\nimport {getServicePromiseForDoc} from '../../../src/service';\nimport {htmlFor} from '../../../src/static-template';\nimport {isExperimentOn} from '../../../src/experiments';\nimport {setImportantStyles, setStyles, toggle} from '../../../src/style';\n\nconst TAG = 'amp-consent-ui';\nconst CONSENT_STATE_MANAGER = 'consentStateManager';\nconst DEFAULT_INITIAL_HEIGHT = '30vh';\nconst DEFAULT_ENABLE_BORDER = true;\n\n// Classes for consent UI\nexport const consentUiClasses = {\n  iframeFullscreen: 'i-amphtml-consent-ui-iframe-fullscreen',\n  iframeActive: 'i-amphtml-consent-ui-iframe-active',\n  in: 'i-amphtml-consent-ui-in',\n  loading: 'i-amphtml-consent-ui-loading',\n  fill: 'i-amphtml-consent-ui-fill',\n  placeholder: 'i-amphtml-consent-ui-placeholder',\n  mask: 'i-amphtml-consent-ui-mask',\n  enableBorder: 'i-amphtml-consent-ui-enable-border',\n};\n\nexport class ConsentUI {\n  /**\n   * @param {!AMP.BaseElement} baseInstance\n   * @param {!JsonObject} config\n   * @param {string=} opt_postPromptUI\n   */\n  constructor(baseInstance, config, opt_postPromptUI) {\n    /** @private {!AMP.BaseElement} */\n    this.baseInstance_ = baseInstance;\n\n    /** @private {boolean} */\n    this.isCreatedIframe_ = false;\n\n    /** @private {boolean} */\n    this.isPostPrompt_ = false;\n\n    /** @private {boolean} */\n    this.isVisible_ = false;\n\n    /** @private {boolean} */\n    this.isIframeVisible_ = false;\n\n    /** @private {boolean} */\n    this.isFullscreen_ = false;\n\n    /** @private {?Element} */\n    this.ui_ = null;\n\n    /** @private {boolean} */\n    this.overlayEnabled_ =\n      isExperimentOn(baseInstance.win, 'amp-consent-v2') &&\n      config['uiConfig'] &&\n      config['uiConfig']['overlay'] === true;\n\n    /** @private {boolean} */\n    this.scrollEnabled_ = true;\n\n    /** @private {?Element} */\n    this.maskElement_ = null;\n\n    /** @private {?Element} */\n    this.elementWithFocusBeforeShowing_ = null;\n\n    /** @private {!../../../src/service/ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = baseInstance.getAmpDoc();\n\n    /** @private {!../../../src/service/viewport/viewport-interface.ViewportInterface} */\n    this.viewport_ = Services.viewportForDoc(this.ampdoc_);\n\n    /** @private {?../../../src/service/viewer-interface.ViewerInterface} */\n    this.viewer_ = Services.viewerForDoc(this.ampdoc_);\n\n    /** @private {!Element} */\n    this.parent_ = baseInstance.element;\n\n    /** @private {!Window} */\n    this.win_ = baseInstance.win;\n\n    /** @private @const {!Document} */\n    this.document_ = this.win_.document;\n\n    /** @private {?Deferred} */\n    this.iframeReady_ = null;\n\n    /** @private {?JsonObject} */\n    this.clientConfig_ = null;\n\n    /** @private {?Element} */\n    this.placeholder_ = null;\n\n    /** @private {string} */\n    this.initialHeight_ = DEFAULT_INITIAL_HEIGHT;\n\n    /** @private {boolean} */\n    this.enableBorder_ = DEFAULT_ENABLE_BORDER;\n\n    /** @private @const {!Function} */\n    this.boundHandleIframeMessages_ = this.handleIframeMessages_.bind(this);\n\n    this.init_(config, opt_postPromptUI);\n  }\n\n  /**\n   * @param {!JsonObject} config\n   * @param {string=} opt_postPromptUI\n   */\n  init_(config, opt_postPromptUI) {\n    if (opt_postPromptUI) {\n      const postPromptUI = this.ampdoc_.getElementById(opt_postPromptUI);\n      if (!postPromptUI) {\n        user().error(\n          TAG,\n          'postPromptUI element with id=%s not found',\n          opt_postPromptUI\n        );\n      }\n      this.ui_ = dev().assertElement(postPromptUI);\n      this.isPostPrompt_ = true;\n      return;\n    }\n    const promptUI = config['promptUI'];\n    const promptUISrc = config['promptUISrc'];\n    if (promptUI) {\n      // Always respect promptUI first\n      const promptElement = this.ampdoc_.getElementById(promptUI);\n      if (!promptElement || !this.parent_.contains(promptElement)) {\n        user().error(\n          TAG,\n          'child element of <amp-consent> with promptUI id %s not found',\n          promptUI\n        );\n      }\n      this.ui_ = dev().assertElement(promptElement);\n    } else if (promptUISrc && isExperimentOn(this.win_, 'amp-consent-v2')) {\n      // Create an iframe element with the provided src\n      this.isCreatedIframe_ = true;\n      this.ui_ = this.createPromptIframeFromSrc_(promptUISrc);\n      this.placeholder_ = this.createPlaceholder_();\n      this.clientConfig_ = config['clientConfig'] || null;\n    }\n  }\n\n  /**\n   * Display the UI.\n   * @param {boolean} isActionPromptTrigger\n   */\n  show(isActionPromptTrigger) {\n    if (!this.ui_) {\n      // No prompt UI specified, nothing to do\n      return;\n    }\n    toggle(dev().assertElement(this.parent_), true);\n    const {classList} = this.parent_;\n    classList.add('amp-active');\n    classList.remove('amp-hidden');\n    // Add to fixed layer\n    this.baseInstance_.getViewport().addToFixedLayer(this.parent_);\n    if (this.isCreatedIframe_) {\n      this.loadIframe_(isActionPromptTrigger).then(() => {\n        // It is safe to assume that the loadIframe_ promise will resolve\n        // before resetIframe_. Because the iframe needs to be shown first\n        // being hidden. CMP iframe is responsible to call consent-iframe-ready\n        // API before consent-response API.\n        this.baseInstance_.mutateElement(() => {\n          if (!this.isPostPrompt_) {\n            this.elementWithFocusBeforeShowing_ = this.document_.activeElement;\n          }\n\n          this.maybeShowOverlay_();\n\n          this.showIframe_();\n\n          if (!this.isPostPrompt_) {\n            this.ui_./*OK*/ focus();\n          }\n        });\n      });\n    } else {\n      const show = () => {\n        if (!this.ui_) {\n          return;\n        }\n\n        toggle(this.ui_, true);\n\n        if (!this.isPostPrompt_) {\n          this.elementWithFocusBeforeShowing_ = this.document_.activeElement;\n\n          this.maybeShowOverlay_();\n\n          // scheduleLayout is required everytime because some AMP element may\n          // get un laid out after toggle display (#unlayoutOnPause)\n          // for example <amp-iframe>\n          Services.ownersForDoc(this.baseInstance_.element).scheduleLayout(\n            this.baseInstance_.element,\n            this.ui_\n          );\n\n          this.ui_./*OK*/ focus();\n        }\n      };\n\n      // If the UI is an AMP Element, wait until it's built before showing it,\n      // to avoid race conditions where the UI would be hidden by the runtime\n      // at build time. (see #18841).\n      if (isAmpElement(this.ui_)) {\n        whenUpgradedToCustomElement(this.ui_)\n          .then(() => this.ui_.whenBuilt())\n          .then(() => show());\n      } else {\n        show();\n      }\n    }\n\n    this.isVisible_ = true;\n  }\n\n  /**\n   * Hide the UI\n   */\n  hide() {\n    if (!this.ui_) {\n      // Nothing to hide from;\n      return;\n    }\n\n    this.baseInstance_.mutateElement(() => {\n      if (this.isCreatedIframe_) {\n        this.resetIframe_();\n      }\n\n      if (!this.isPostPrompt_) {\n        const {classList} = this.parent_;\n        classList.remove('amp-active');\n        classList.add('amp-hidden');\n      }\n\n      // Hide the overlay\n      this.maybeHideOverlay_();\n      // Enable the scroll, in case we were fullscreen with no overlay\n      this.enableScroll_();\n      // Reset any animation styles set by style attribute\n      this.resetAnimationStyles_();\n\n      // NOTE (torch2424): This is very sensitive. Fixed layer applies\n      // a `top: calc(0px)` in order to fix some bugs, thus\n      // We should be careful in moving this around as\n      // `removeFromFixedLayer` will remove the `top` styling.\n      // This will preserve The animation,\n      // and prevent element flashing.\n      this.baseInstance_.getViewport().removeFromFixedLayer(this.parent_);\n      toggle(dev().assertElement(this.ui_), false);\n      this.isVisible_ = false;\n\n      if (this.elementWithFocusBeforeShowing_) {\n        this.elementWithFocusBeforeShowing_./*OK*/ focus();\n        this.elementWithFocusBeforeShowing_ = null;\n      } else if (this.win_.document.body.children.length > 0) {\n        // TODO (torch2424): Find if the first child can not be\n        // focusable due to styling.\n        this.win_.document.body.children[0]./*OK*/ focus();\n      }\n    });\n  }\n\n  /**\n   * Handle the ready event from the CMP iframe\n   * @param {!JsonObject} data\n   */\n  handleReady_(data) {\n    this.initialHeight_ = DEFAULT_INITIAL_HEIGHT;\n    this.enableBorder_ = DEFAULT_ENABLE_BORDER;\n\n    // Set our initial height\n    if (data['initialHeight']) {\n      if (\n        typeof data['initialHeight'] === 'string' &&\n        data['initialHeight'].indexOf('vh') >= 0\n      ) {\n        const dataHeight = parseInt(data['initialHeight'], 10);\n\n        if (dataHeight >= 10 && dataHeight <= 60) {\n          this.initialHeight_ = `${dataHeight}vh`;\n        } else {\n          user().error(\n            TAG,\n            `Inavlid initial height: ${data['initialHeight']}.` +\n              'Minimum: 10vh. Maximum: 60vh.'\n          );\n        }\n      } else {\n        user().error(\n          TAG,\n          `Inavlid initial height: ${data['initialHeight']}.` +\n            'Must be a string in \"vh\" units.'\n        );\n      }\n    }\n\n    // Enable/disable our border\n    if (data['border'] === false) {\n      this.enableBorder_ = false;\n    }\n\n    this.iframeReady_.resolve();\n  }\n\n  /**\n   * Enter the fullscreen state for the UI\n   */\n  enterFullscreen_() {\n    if (!this.ui_ || !this.isVisible_ || this.isFullscreen_) {\n      return;\n    }\n\n    this.resetAnimationStyles_();\n\n    this.viewer_.sendMessage(\n      'requestFullOverlay',\n      dict(),\n      /* cancelUnsent */ true\n    );\n\n    const {classList} = this.parent_;\n    classList.add(consentUiClasses.iframeFullscreen);\n\n    this.disableScroll_();\n\n    this.isFullscreen_ = true;\n  }\n\n  /**\n   * Create the iframe if promptUISrc is valid\n   * @param {string} promptUISrc\n   * @return {!Element}\n   */\n  createPromptIframeFromSrc_(promptUISrc) {\n    const iframe = this.parent_.ownerDocument.createElement('iframe');\n    const sandbox = ['allow-scripts', 'allow-popups'];\n    iframe.src = assertHttpsUrl(promptUISrc, this.parent_);\n    const allowSameOrigin = this.allowSameOrigin_(iframe.src);\n    if (allowSameOrigin) {\n      sandbox.push('allow-same-origin');\n    }\n    iframe.setAttribute('sandbox', sandbox.join(' '));\n    const {classList} = iframe;\n    classList.add(consentUiClasses.fill);\n    // Append iframe lazily to save resources.\n    return iframe;\n  }\n\n  /**\n   * Determines if allow-same-origin should be enabled for the prompt iframe\n   * @param {string} src\n   * @return {boolean}\n   */\n  allowSameOrigin_(src) {\n    const urlService = Services.urlForDoc(this.parent_);\n    const srcUrl = urlService.parse(src);\n    const containerUrl = urlService.parse(this.ampdoc_.getUrl());\n\n    return srcUrl.origin != containerUrl.origin;\n  }\n\n  /**\n   * Create the default placeholder\n   * @return {!Element}\n   */\n  createPlaceholder_() {\n    const placeholder = this.parent_.ownerDocument.createElement('placeholder');\n    toggle(placeholder, false);\n    placeholder.classList.add(consentUiClasses.placeholder);\n\n    const loadingSpinner = htmlFor(placeholder)`\n      <svg viewBox=\"0 0 40 40\">\n        <defs>\n          <linearGradient id=\"grad\">\n            <stop stop-color=\"rgb(105, 105, 105)\"></stop>\n            <stop offset=\"100%\"\n            stop-color=\"rgb(105, 105, 105)\"\n            stop-opacity=\"0\"></stop>\n          </linearGradient>\n        </defs>\n        <path d=\"M11,4.4 A18,18, 0,1,0, 38,20\" stroke=\"url(#grad)\"></path>\n      </svg>`;\n\n    placeholder.appendChild(loadingSpinner);\n    return placeholder;\n  }\n\n  /**\n   * Get the client information that needs to be passed to cmp iframe\n   * @param {boolean} isActionPromptTrigger\n   * @return {!Promise<JsonObject>}\n   */\n  getClientInfoPromise_(isActionPromptTrigger) {\n    const consentStatePromise = getServicePromiseForDoc(\n      this.ampdoc_,\n      CONSENT_STATE_MANAGER\n    );\n    return consentStatePromise.then(consentStateManager => {\n      return consentStateManager\n        .getLastConsentInstanceInfo()\n        .then(consentInfo => {\n          return dict({\n            'clientConfig': this.clientConfig_,\n            // consentState to be deprecated\n            'consentState': getConsentStateValue(consentInfo['consentState']),\n            'consentStateValue': getConsentStateValue(\n              consentInfo['consentState']\n            ),\n            'consentString': consentInfo['consentString'],\n            'promptTrigger': isActionPromptTrigger ? 'action' : 'load',\n            'isDirty': !!consentInfo['isDirty'],\n          });\n        });\n    });\n  }\n\n  /**\n   * Apply placeholder\n   * Set up event listener to handle UI related messages.\n   * @param {boolean} isActionPromptTrigger\n   * @return {!Promise}\n   */\n  loadIframe_(isActionPromptTrigger) {\n    this.iframeReady_ = new Deferred();\n    const {classList} = this.parent_;\n    if (!elementByTag(this.parent_, 'placeholder')) {\n      insertAfterOrAtStart(\n        this.parent_,\n        dev().assertElement(this.placeholder_),\n        null\n      );\n    }\n    classList.add(consentUiClasses.loading);\n    toggle(dev().assertElement(this.ui_), false);\n\n    const iframePromise = this.getClientInfoPromise_(\n      isActionPromptTrigger\n    ).then(clientInfo => {\n      this.ui_.setAttribute('name', JSON.stringify(clientInfo));\n      this.win_.addEventListener('message', this.boundHandleIframeMessages_);\n      insertAfterOrAtStart(this.parent_, dev().assertElement(this.ui_), null);\n    });\n\n    return Promise.all([\n      iframePromise,\n      this.iframeReady_.promise,\n      this.baseInstance_.mutateElement(() => {\n        toggle(dev().assertElement(this.placeholder_), true);\n      }),\n    ]);\n  }\n\n  /**\n   * Hide the placeholder\n   * Apply animation to show the iframe\n   */\n  showIframe_() {\n    const {classList} = this.parent_;\n    classList.add(consentUiClasses.iframeActive);\n    toggle(dev().assertElement(this.placeholder_), false);\n    toggle(dev().assertElement(this.ui_), true);\n\n    // Remove transition styles added by the fixed layer\n    // Transform styles applied by us for the animation.\n    this.resetAnimationStyles_();\n\n    /**\n     * Waiting for mutation twice here.\n     * First mutation is for when the correct elements,\n     * are shown/hidden, and the iframe active class\n     * pushes it out of view.\n     * Second, is for the loading class to be removed.\n     * This will avoid race conditions with the slidein transition.\n     */\n    this.baseInstance_.mutateElement(() => {\n      classList.remove(consentUiClasses.loading);\n      this.baseInstance_.mutateElement(() => {\n        classList.add(consentUiClasses.in);\n        this.isIframeVisible_ = true;\n        this.applyInitialStyles_();\n      });\n    });\n  }\n\n  /**\n   * Remove the iframe from doc\n   * Remove event listener\n   * Reset UI state\n   * Takes in a function to call after our transition has ended\n   */\n  resetIframe_() {\n    const {classList} = this.parent_;\n\n    // Remove the iframe active to go back to our normal height\n    classList.remove(consentUiClasses.iframeActive);\n\n    this.win_.removeEventListener('message', this.boundHandleIframeMessages_);\n    classList.remove(consentUiClasses.iframeFullscreen);\n    if (this.isFullscreen_) {\n      this.viewer_.sendMessage(\n        'cancelFullOverlay',\n        dict(),\n        /* cancelUnsent */ true\n      );\n    }\n    this.isFullscreen_ = false;\n    classList.remove(consentUiClasses.in);\n    this.isIframeVisible_ = false;\n    this.ui_.removeAttribute('name');\n    toggle(dev().assertElement(this.placeholder_), false);\n    removeElement(dev().assertElement(this.ui_));\n  }\n\n  /**\n   * Reset transition and transform styles\n   * Set by the fixed layer, and us\n   */\n  resetAnimationStyles_() {\n    setStyles(this.parent_, {\n      transform: '',\n      transition: '',\n    });\n  }\n\n  /**\n   * Apply styles for ready event\n   */\n  applyInitialStyles_() {\n    // Apply our initial height and border\n    if (this.ui_) {\n      setStyles(this.ui_, {\n        height: this.initialHeight_,\n      });\n    }\n    setImportantStyles(this.parent_, {\n      transform: `translate3d(0px, calc(100% - ${this.initialHeight_}), 0px)`,\n    });\n    if (this.enableBorder_) {\n      const {classList} = this.parent_;\n      classList.add(consentUiClasses.enableBorder);\n    }\n  }\n\n  /**\n   * Shows the overlay (mask element, and lock scrolling)\n   * if the overlay is enabled\n   * @private\n   */\n  maybeShowOverlay_() {\n    if (!this.overlayEnabled_) {\n      return;\n    }\n\n    if (!this.maskElement_) {\n      const mask = this.win_.document.createElement('div');\n      mask.classList.add(consentUiClasses.mask);\n      this.parent_.ownerDocument.body.appendChild(mask);\n      this.maskElement_ = mask;\n    }\n    toggle(this.maskElement_, /* display */ true);\n    this.disableScroll_();\n  }\n\n  /**\n   * Hides the overlay (mask element, and lock scrolling)\n   * if the overlay is enabled\n   * @private\n   */\n  maybeHideOverlay_() {\n    if (!this.overlayEnabled_) {\n      return;\n    }\n\n    if (this.maskElement_) {\n      toggle(this.maskElement_, /* display */ false);\n    }\n    this.enableScroll_();\n  }\n\n  /**\n   * Disables scrolling on the document\n   * @private\n   */\n  disableScroll_() {\n    if (this.scrollEnabled_) {\n      this.viewport_.enterOverlayMode();\n      this.scrollEnabled_ = false;\n    }\n  }\n\n  /**\n   * Disables scrolling on the document\n   * @private\n   */\n  enableScroll_() {\n    if (!this.scrollEnabled_) {\n      this.viewport_.leaveOverlayMode();\n      this.scrollEnabled_ = true;\n    }\n  }\n\n  /**\n   * Listen to iframe messages and handle events.\n   * Current supported APIs:\n   *\n   * Required message from iframe to hide placeholder and display iframe\n   * {\n   *   type: 'consent-ui',\n   *   action: 'ready',\n   *   initialHeight: '30vh',\n   *   border: true\n   * }\n   *\n   * Enter Fullscreen\n   * {\n   *   type: 'consent-ui',\n   *   action: 'enter-fullscreen'\n   * }\n   *\n   * @param {!Event} event\n   */\n  handleIframeMessages_(event) {\n    if (this.ui_.contentWindow !== event.source) {\n      // Ignore messages from else where\n      return;\n    }\n\n    const data = getData(event);\n    if (!data || data['type'] != 'consent-ui') {\n      return;\n    }\n\n    if (data['action'] === 'ready') {\n      this.handleReady_(/** @type {!JsonObject} */ (data));\n    }\n\n    if (data['action'] === 'enter-fullscreen') {\n      // TODO (@torch2424) Send response back if enter fullscreen was succesful\n      if (!this.isIframeVisible_) {\n        return;\n      }\n\n      this.baseInstance_.mutateElement(() => {\n        this.enterFullscreen_();\n      });\n    }\n  }\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @enum {number}\n */\nexport const GEO_IN_GROUP = {\n  NOT_DEFINED: 1,\n  IN: 2,\n  NOT_IN: 3,\n};\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex'];\n\nconst cdnProxyRegex =\n  typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex'];\n\n/** @type {!Object<string, string|boolean|RegExp|Array<RegExp>>} */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex: thirdPartyFrameRegex || /^d-\\d+\\.ampproject\\.net$/,\n  cdn: env['cdnUrl'] || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex:\n    cdnProxyRegex || /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] || 'https://amp-error-reporting.appspot.com/r',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/master/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.dev$/,\n  ],\n};\n\nexport const config = {\n  urls,\n};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This file will be imported by 3P scripts.\n\n/**\n * Possible consent policy state to proceed with.\n * @enum {number}\n */\nexport const CONSENT_POLICY_STATE = {\n  // Enum value has external dependency. Please do not change existing value.\n  // If new values are added, please notify the AMP for Ads team to assure\n  // correct Real Time Config behavior is maintained for Fast Fetch.\n  SUFFICIENT: 1,\n  INSUFFICIENT: 2,\n  UNKNOWN_NOT_REQUIRED: 3,\n  UNKNOWN: 4,\n};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssEscape} from '../third_party/css-escape/css-escape';\nimport {devAssert} from './log';\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nexport function assertIsName(name) {\n  devAssert(/^[\\w-]+$/.test(name));\n}\n\n/**\n * @type {boolean|undefined}\n */\nlet scopeSelectorSupported;\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\nexport function isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return (scopeSelectorSupported = testScopeSelector(el));\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\nfunction testScopeSelector(el) {\n  try {\n    const doc = el.ownerDocument;\n    const testElement = doc.createElement('div');\n    const testChild = doc.createElement('div');\n    testElement.appendChild(testChild);\n    // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n    return testElement./*OK*/ querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\nexport function prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, `$&${distribute} `);\n}\n\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n */\nexport function escapeCssSelectorIdent(ident) {\n  return cssEscape(ident);\n}\n\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\nexport function escapeCssSelectorNth(ident) {\n  const escaped = String(ident);\n  // Ensure it doesn't close the nth-child psuedo class.\n  devAssert(escaped.indexOf(')') === -1);\n  return escaped;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './utils/promise';\nimport {\n  assertIsName,\n  isScopeSelectorSupported,\n  prependSelectorsWith,\n} from './css';\nimport {dev, devAssert} from './log';\nimport {dict} from './utils/object';\nimport {includes, startsWith} from './string';\nimport {toWin} from './types';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise(resolve => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise(resolve => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node} after\n */\nexport function insertAfterOrAtStart(root, element, after) {\n  const before = after ? after.nextSibling : root.firstChild;\n  root.insertBefore(element, before);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (n = node; !!n.parentNode && !isShadowRoot(n); n = n.parentNode) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {*} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  // TODO(#22733): remove in preference to dom's `rootNodeFor`.\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\nexport function closest(element, callback, opt_stopAt) {\n  for (let el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\nexport function closestNode(node, callback) {\n  for (let n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\nexport function closestAncestorElementBySelector(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  return closest(element, el => {\n    return matches(el, selector);\n  });\n}\n\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\nexport function ancestorElements(child, predicate) {\n  const ancestors = [];\n  for (\n    let ancestor = child.parentElement;\n    ancestor;\n    ancestor = ancestor.parentElement\n  ) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n  return ancestors;\n}\n\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\nexport function ancestorElementsByTag(child, tagName) {\n  assertIsName(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, el => {\n    return el.tagName == tagName;\n  });\n}\n\n/**\n * Finds the first child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function childElement(parent, callback) {\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\nexport function childElements(parent, callback) {\n  const children = [];\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function lastChildElement(parent, callback) {\n  for (\n    let child = parent.lastElementChild;\n    child;\n    child = child.previousElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\nexport function childNodes(parent, callback) {\n  const nodes = [];\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function childElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelector(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function lastChildElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return lastChildElement(parent, el => {\n    return el.hasAttribute(attr);\n  });\n}\n\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {?Element}\n */\nexport function childElementByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelector(parent, `> ${tagName}`);\n}\n\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> ${tagName}`);\n}\n\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\nexport function matches(el, selector) {\n  const matcher =\n    el.matches ||\n    el.webkitMatchesSelector ||\n    el.mozMatchesSelector ||\n    el.msMatchesSelector ||\n    el.oMatchesSelector;\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n  return false; // IE8 always returns false.\n}\n\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\nexport function elementByTag(element, tagName) {\n  assertIsName(tagName);\n  return element./*OK*/ querySelector(tagName);\n}\n\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nfunction scopedQuerySelectionFallback(root, selector) {\n  const unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  const scopedSelector = prependSelectorsWith(selector, `.${unique}`);\n  const elements = root./*OK*/ querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {?Element}\n */\nexport function scopedQuerySelector(root, selector) {\n  if (isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelector(prependSelectorsWith(selector, ':scope'));\n  }\n\n  // Only IE.\n  const fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nexport function scopedQuerySelectorAll(root, selector) {\n  if (isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelectorAll(\n      prependSelectorsWith(selector, ':scope')\n    );\n  }\n\n  // Only IE.\n  return scopedQuerySelectionFallback(root, selector);\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!Element} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || (key => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    startsWith(tag, 'AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!Element} element\n * @return {!Promise<!Element>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(element);\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Replacement for `Element.requestFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n * @param {!Element} element\n */\nexport function fullscreenEnter(element) {\n  const requestFs =\n    element.requestFullscreen ||\n    element.requestFullScreen ||\n    element.webkitRequestFullscreen ||\n    element.webkitEnterFullscreen ||\n    element.msRequestFullscreen ||\n    element.mozRequestFullScreen;\n  if (requestFs) {\n    requestFs.call(element);\n  }\n}\n\n/**\n * Replacement for `Document.exitFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/exitFullscreen\n * @param {!Element} element\n */\nexport function fullscreenExit(element) {\n  const elementBoundExit =\n    element.cancelFullScreen ||\n    element.exitFullscreen ||\n    element.webkitExitFullscreen ||\n    element.webkitCancelFullScreen ||\n    element.mozCancelFullScreen ||\n    element.msExitFullscreen;\n  if (elementBoundExit) {\n    elementBoundExit.call(element);\n    return;\n  }\n  const {ownerDocument} = element;\n  if (!ownerDocument) {\n    return;\n  }\n  const docBoundExit =\n    ownerDocument.cancelFullScreen ||\n    ownerDocument.exitFullscreencancelFullScreen ||\n    ownerDocument.webkitExitFullscreencancelFullScreen ||\n    ownerDocument.webkitCancelFullScreencancelFullScreen ||\n    ownerDocument.mozCancelFullScreencancelFullScreen ||\n    ownerDocument.msExitFullscreen;\n  if (docBoundExit) {\n    docBoundExit.call(ownerDocument);\n  }\n}\n\n/**\n * Replacement for `Document.fullscreenElement`.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenElement\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isFullscreenElement(element) {\n  const {webkitDisplayingFullscreen} = element;\n  if (webkitDisplayingFullscreen !== undefined) {\n    return webkitDisplayingFullscreen;\n  }\n  const {ownerDocument} = element;\n  if (!ownerDocument) {\n    return false;\n  }\n  const fullscreenElement =\n    ownerDocument.fullscreenElement ||\n    ownerDocument.webkitFullscreenElement ||\n    ownerDocument.mozFullScreenElement ||\n    ownerDocument.webkitCurrentFullScreenElement;\n  return fullscreenElement == element;\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!Element} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport {\n  getAmpdoc,\n  getExistingServiceForDocInEmbedScope,\n  getService,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n  getTopWindow,\n} from './service';\nimport {toWin} from './types';\nimport {userAssert} from './log';\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementService(win, id, extension, opt_element) {\n  return getElementServiceIfAvailable(win, id, extension, opt_element).then(\n    service => assertService(service, id, extension)\n  );\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(win, id, extension, opt_element) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(win, id, extension, opt_element);\n}\n\n/**\n * @param {!Window} win\n * @param {string} elementName Name of an extended custom element.\n * @return {boolean} Whether this element is scheduled to be loaded.\n */\nfunction isElementScheduled(win, elementName) {\n  // Set in custom-element.js\n  if (!win.__AMP_EXTENDED_ELEMENTS) {\n    return false;\n  }\n  return !!win.__AMP_EXTENDED_ELEMENTS[elementName];\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then(service => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .waitForBodyOpen()\n    .then(() =>\n      waitForExtensionIfPresent(ampdoc.win, extension, ampdoc.win.document.head)\n    )\n    .then(() => {\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      } else if (isElementScheduled(ampdoc.win, extension)) {\n        return getServicePromiseForDoc(element, id);\n      }\n      return null;\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getExistingServiceForDocInEmbedScope(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  const win = toWin(element.ownerDocument.defaultView);\n  const topWin = getTopWindow(win);\n  // In embeds, doc services are stored on the embed window.\n  if (win !== topWin) {\n    return getElementServicePromiseOrNull(win, id, extension);\n  } else {\n    // Only fallback to element's ampdoc (top-level) if not embedded.\n    return getElementServiceIfAvailableForDoc(element, id, extension);\n  }\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (userAssert(\n    service,\n    'Service %s was requested to be provided through %s, ' +\n      'but %s is not loaded in the current page. To fix this ' +\n      'problem load the JavaScript file for %s in this page.',\n    id,\n    extension,\n    extension,\n    extension\n  ));\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Array<string>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  const scripts = {};\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const name =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    scripts[name] = true;\n  }\n  return Object.keys(scripts);\n}\n\n/**\n * Waits for body to be present then verifies that an extension script is\n * present in head for installation.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} extensionId\n * @return {!Promise<boolean>}\n */\nexport function isExtensionScriptInNode(ampdoc, extensionId) {\n  return ampdoc.waitForBodyOpen().then(() => {\n    return extensionScriptInNode(ampdoc.getHeadNode(), extensionId);\n  });\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @param {string} extensionId\n * @return {boolean}\n * @private\n */\nfunction extensionScriptInNode(head, extensionId) {\n  return extensionScriptsInNode(head).includes(extensionId);\n}\n\n/**\n * Waits for an extension if its script is present\n * @param {!Window} win\n * @param {string} extension\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Promise}\n * @private\n */\nfunction waitForExtensionIfPresent(win, extension, head) {\n  /**\n   * If there is an extension script wait for it to load before trying\n   * to get the service. Prevents a race condition when everything but\n   * the extensions is in cache. If there is no script then it's either\n   * not present, or the service was defined by a test. In those cases\n   * we don't wait around for an extension that does not exist.\n   */\n\n  // TODO(jpettitt) investigate registerExtension to short circuit\n  // the dom call in extensionScriptsInNode()\n  if (!extensionScriptInNode(head, extension)) {\n    return Promise.resolve();\n  }\n\n  const extensions = getService(win, 'extensions');\n  return /** @type {!Promise<?Object>} */ (extensions.waitForExtension(\n    win,\n    extension\n  ));\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(win, id, extension, opt_element) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => waitForExtensionIfPresent(win, extension, win.document.head))\n    .then(() => {\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      } else if (isElementScheduled(win, extension)) {\n        return getServicePromise(win, id);\n      }\n      return null;\n    });\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet optsSupported;\n\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function internalListenImplementation(\n  element,\n  eventType,\n  listener,\n  opt_evtListenerOpts\n) {\n  let localElement = element;\n  let localListener = listener;\n  /**\n   * @type {?Function}\n   */\n  let wrapped;\n\n  wrapped = event => {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n      throw e;\n    }\n  };\n  const optsSupported = detectEvtListenerOptsSupport();\n  let capture = false;\n  if (opt_evtListenerOpts) {\n    capture = opt_evtListenerOpts.capture;\n  }\n  localElement.addEventListener(\n    eventType,\n    wrapped,\n    optsSupported ? opt_evtListenerOpts : capture\n  );\n  return () => {\n    if (localElement) {\n      localElement.removeEventListener(\n        eventType,\n        wrapped,\n        optsSupported ? opt_evtListenerOpts : capture\n      );\n    }\n    // Ensure these are GC'd\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\nexport function detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    const options = {\n      get capture() {\n        optsSupported = true;\n      },\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return optsSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\nexport function resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalListenImplementation} from './event-helper-listen';\nimport {lastChildElement} from './dom';\nimport {user} from './log';\n\n/** @const {string}  */\nconst LOAD_FAILURE_PREFIX = 'Failed to load:';\n\n/** @const {string} */\nexport const MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\nexport function createCustomEvent(win, type, detail, opt_eventInit) {\n  const eventInit = /** @type {!CustomEventInit} */ ({detail});\n  Object.assign(eventInit, opt_eventInit);\n  // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n  if (typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    const e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(\n      type,\n      !!eventInit.bubbles,\n      !!eventInit.cancelable,\n      detail\n    );\n    return e;\n  }\n}\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getData(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.data);\n}\n\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getDetail(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.detail);\n}\n\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  let localListener = listener;\n  const unlisten = internalListenImplementation(\n    element,\n    eventType,\n    event => {\n      try {\n        localListener(event);\n      } finally {\n        // Ensure listener is GC'd\n        localListener = null;\n        unlisten();\n      }\n    },\n    opt_evtListenerOpts\n  );\n  return unlisten;\n}\n\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\nexport function listenOncePromise(\n  element,\n  eventType,\n  opt_evtListenerOpts,\n  opt_cancel\n) {\n  let unlisten;\n  const eventPromise = new Promise(resolve => {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n  return eventPromise;\n}\n\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nexport function isLoaded(eleOrWindow) {\n  return !!(\n    eleOrWindow.complete ||\n    eleOrWindow.readyState == 'complete' ||\n    (isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0) ||\n    // If the passed in thing is a Window, infer loaded state from\n    //\n    (eleOrWindow.document && eleOrWindow.document.readyState == 'complete')\n  );\n}\n\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\nexport function loadPromise(eleOrWindow) {\n  let unlistenLoad;\n  let unlistenError;\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n  const isMediaElement = isHTMLMediaElement(eleOrWindow);\n  if (\n    isMediaElement &&\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc\n  ) {\n    return Promise.reject(eleOrWindow);\n  }\n  const loadingPromise = new Promise((resolve, reject) => {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true,\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    }\n    // Don't unlisten on error for Windows.\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n    let errorTarget = eleOrWindow;\n    // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = lastChildElement(\n        eleOrWindow,\n        child => child.tagName === 'SOURCE'\n      );\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n\n  return loadingPromise.then(\n    () => {\n      if (unlistenError) {\n        unlistenError();\n      }\n      return eleOrWindow;\n    },\n    () => {\n      if (unlistenLoad) {\n        unlistenLoad();\n      }\n      failedToLoad(eleOrWindow);\n    }\n  );\n}\n\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] =\n      eleOrWindow.currentSrc || true;\n  }\n\n  // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n  let target = eleOrWindow;\n  if (target && target.src) {\n    target = target.src;\n  }\n  throw user().createError(LOAD_FAILURE_PREFIX, target);\n}\n\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\nexport function isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\nimport {dev, user} from './log';\nimport {getMode} from './mode';\nimport {hasOwn} from './utils/object';\nimport {parseQueryString} from './url';\n\n/** @const {string} */\nconst TAG = 'EXPERIMENTS';\n\n/** @const {string} */\nconst LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n\n/** @const {string} */\nconst TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n\n/**\n * @typedef {{\n *   isTrafficEligible: function(!Window):boolean,\n *   branches: !Array<string>\n * }}\n */\nexport let ExperimentInfo;\n\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCanary(win) {\n  return !!(win.AMP_CONFIG && win.AMP_CONFIG.canary);\n}\n\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\nexport function getBinaryType(win) {\n  return win.AMP_CONFIG && win.AMP_CONFIG.type\n    ? win.AMP_CONFIG.type\n    : 'unknown';\n}\n\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\nexport function isExperimentOn(win, experimentId) {\n  const toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\nexport function toggleExperiment(\n  win,\n  experimentId,\n  opt_on,\n  opt_transientExperiment\n) {\n  const currentlyOn = isExperimentOn(win, /*OK*/ experimentId);\n  const on = !!(opt_on !== undefined ? opt_on : !currentlyOn);\n  if (on != currentlyOn) {\n    const toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      const storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles);\n      // Avoid affecting tests that spy/stub warn().\n      if (!getMode().test) {\n        user().warn(\n          TAG,\n          '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental',\n          experimentId,\n          on ? 'enabled' : 'disabled',\n          win.location.hostname\n        );\n      }\n    }\n  }\n  return on;\n}\n\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nexport function experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n  win[TOGGLES_WINDOW_PROPERTY] = Object.create(null);\n  const toggles = win[TOGGLES_WINDOW_PROPERTY];\n\n  // Read the default config of this build.\n  if (win.AMP_CONFIG) {\n    for (const experimentId in win.AMP_CONFIG) {\n      const frequency = win.AMP_CONFIG[experimentId];\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  }\n  // Read document level override from meta tag.\n  if (\n    win.AMP_CONFIG &&\n    Array.isArray(win.AMP_CONFIG['allow-doc-opt-in']) &&\n    win.AMP_CONFIG['allow-doc-opt-in'].length > 0\n  ) {\n    const allowed = win.AMP_CONFIG['allow-doc-opt-in'];\n    const meta = win.document.head.querySelector(\n      'meta[name=\"amp-experiments-opt-in\"]'\n    );\n    if (meta) {\n      const optedInExperiments = meta.getAttribute('content').split(',');\n      for (let i = 0; i < optedInExperiments.length; i++) {\n        if (allowed.indexOf(optedInExperiments[i]) != -1) {\n          toggles[optedInExperiments[i]] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  if (\n    win.AMP_CONFIG &&\n    Array.isArray(win.AMP_CONFIG['allow-url-opt-in']) &&\n    win.AMP_CONFIG['allow-url-opt-in'].length > 0\n  ) {\n    const allowed = win.AMP_CONFIG['allow-url-opt-in'];\n    const hash = win.location.originalHash || win.location.hash;\n    const params = parseQueryString(hash);\n    for (let i = 0; i < allowed.length; i++) {\n      const param = params[`e-${allowed[i]}`];\n      if (param == '1') {\n        toggles[allowed[i]] = true;\n      }\n      if (param == '0') {\n        toggles[allowed[i]] = false;\n      }\n    }\n  }\n  return toggles;\n}\n\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {Object<string, boolean>}\n */\nexport function experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nfunction getExperimentToggles(win) {\n  let experimentsString = '';\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch (e) {\n    dev().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n  const tokens = experimentsString ? experimentsString.split(/\\s*,\\s*/g) : [];\n\n  const toggles = Object.create(null);\n  for (let i = 0; i < tokens.length; i++) {\n    if (tokens[i].length == 0) {\n      continue;\n    }\n    if (tokens[i][0] == '-') {\n      toggles[tokens[i].substr(1)] = false;\n    } else {\n      toggles[tokens[i]] = true;\n    }\n  }\n  return toggles;\n}\n\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\nfunction saveExperimentToggles(win, toggles) {\n  const experimentIds = [];\n  for (const experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n  try {\n    if ('localStorage' in win) {\n      win.localStorage.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n    }\n  } catch (e) {\n    user().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\nexport function getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\nexport const RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng,\n};\n\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\nfunction selectRandomItem(arr) {\n  const rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return arr[Math.floor(rn * arr.length)] || null;\n}\n\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Object<string, !ExperimentInfo>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\nexport function randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  const selectedExperiments = {};\n  for (const experimentName in experiments) {\n    // Skip experimentName if it is not a key of experiments object or if it\n    // has already been populated by some other property.\n    if (!hasOwn(experiments, experimentName)) {\n      continue;\n    }\n    if (hasOwn(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (\n      !experiments[experimentName].isTrafficEligible ||\n      !experiments[experimentName].isTrafficEligible(win)\n    ) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    }\n\n    // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n    if (\n      !win.__AMP_EXPERIMENT_BRANCHES[experimentName] &&\n      isExperimentOn(win, /*OK*/ experimentName)\n    ) {\n      const {branches} = experiments[experimentName];\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(\n        branches\n      );\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n  return selectedExperiments;\n}\n\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\nexport function getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES\n    ? win.__AMP_EXPERIMENT_BRANCHES[experimentName]\n    : null;\n}\n\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\nexport function forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n\nimport {childElementsByTag, isJsonScriptTag} from './dom';\nimport {isObject} from './types';\n\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {*} should be string|number|boolean|null\n */\nlet JSONScalarDef;\n\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {*} should be !Object<string, ?JSONValueDef>\n */\nlet JSONObjectDef;\n\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {*} should be !Array<?JSONValueDef>\n */\nlet JSONArrayDef;\n\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {*} should be !JSONScalarDef|!JSONObjectDef|!JSONArrayDef\n */\nlet JSONValueDef;\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = Object.create(null);\n  for (const k in obj) {\n    if (!hasOwnProperty(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (let i = 0; i < parts.length; i++) {\n    const part = parts[i];\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      hasOwnProperty(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {*} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function parseJson(json) {\n  return /** @type {?JsonObject} */ (JSON.parse(/** @type {string} */ (json)));\n}\n\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {*} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    if (opt_onFailed) {\n      opt_onFailed(e);\n    }\n    return null;\n  }\n}\n\n/**\n * Helper method to get the json config from an element <script> tag\n * @param {!Element} element\n * @return {?JsonObject}\n * @throws {!Error} If element does not have exactly one <script> child\n * with type=\"application/json\", or if the <script> contents are not valid JSON.\n */\nexport function getChildJsonConfig(element) {\n  const scripts = childElementsByTag(element, 'script');\n  const n = scripts.length;\n  if (n !== 1) {\n    throw new Error(`Found ${scripts.length} <script> children. Expected 1.`);\n  }\n  const script = scripts[0];\n  if (!isJsonScriptTag(script)) {\n    throw new Error('<script> child must have type=\"application/json\"');\n  }\n  try {\n    return parseJson(script.textContent);\n  } catch (unusedError) {\n    throw new Error('Failed to parse <script> contents. Is it valid JSON?');\n  }\n}\n\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\nexport function deepEquals(a, b, depth = 5) {\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n  const queue = [{a, b, depth}];\n  while (queue.length > 0) {\n    const {a, b, depth} = queue.shift();\n    // Only check deep equality if depth > 0.\n    if (depth > 0) {\n      if (typeof a !== typeof b) {\n        return false;\n      } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          queue.push({a: a[i], b: b[i], depth: depth - 1});\n        }\n        continue;\n      } else if (a && b && typeof a === 'object' && typeof b === 'object') {\n        const keysA = Object.keys(/** @type {!Object} */ (a));\n        const keysB = Object.keys(/** @type {!Object} */ (b));\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n        for (let i = 0; i < keysA.length; i++) {\n          const k = keysA[i];\n          queue.push({a: a[k], b: b[k], depth: depth - 1});\n        }\n        continue;\n      }\n    }\n    // If we get here, then depth == 0 or (a, b) are primitives.\n    if (a !== b) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {*} obj\n * @param {string} key\n * @return {boolean}\n */\nfunction hasOwnProperty(obj, key) {\n  if (obj == null || typeof obj != 'object') {\n    return false;\n  }\n  return Object.prototype.hasOwnProperty.call(\n    /** @type {!Object} */ (obj),\n    key\n  );\n}\n\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\nexport function jsonConfiguration(obj) {\n  return /** @type {!JsonObject} */ (obj);\n}\n\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {!Object|!Array|string|number|boolean|null} value\n * @return {!InternalJsonLiteralTypeDef}\n */\nexport function jsonLiteral(value) {\n  return /** @type {!InternalJsonLiteralTypeDef} */ (value);\n}\n\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\nexport function includeJsonLiteral(value) {\n  return value;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\nimport {getModeObject} from './mode-object';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray, isEnumValue} from './types';\nimport {once} from './utils/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n * @private Visible for testing only.\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error.js to break cyclic\n * dependency.\n * @param {function(*, !Element=)|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = arg =>\n  encodeURIComponent(String(elementStringOrPassthru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don’t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(!./mode.ModeDef):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(!./mode.ModeDef):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then(response => response.json(), noop)\n        .then(opt_messages => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    // Delegate to the specific resolver.\n    return this.levelFunc_(getModeObject());\n  }\n\n  /**\n   * @param {string} tag\n   * @param {string} level\n   * @param {!Array} messages\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() != LogLevel.OFF) {\n      let fn = this.win.console.log;\n      if (level == 'ERROR') {\n        fn = this.win.console.error || fn;\n      } else if (level == 'INFO') {\n        fn = this.win.console.info || fn;\n      } else if (level == 'WARN') {\n        fn = this.win.console.warn || fn;\n      }\n      const args = this.maybeExpandMessageArgs_(messages);\n      // Prefix console message with \"[tag]\".\n      const prefix = `[${tag}]`;\n      if (typeof args[0] === 'string') {\n        // Prepend string to avoid breaking string substitutions e.g. %s.\n        args[0] = prefix + ' ' + args[0];\n      } else {\n        args.unshift(prefix);\n      }\n      fn.apply(this.win.console, args);\n    }\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  fine(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.FINE) {\n      this.msg_(tag, 'FINE', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  info(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.INFO) {\n      this.msg_(tag, 'INFO', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  warn(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.WARN) {\n      this.msg_(tag, 'WARN', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} var_args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.ERROR) {\n      this.msg_(tag, 'ERROR', Array.prototype.slice.call(arguments, 1));\n    } else {\n      const error = createErrorVargs.apply(\n        null,\n        Array.prototype.slice.call(arguments, 1)\n      );\n      this.prepareError_(error);\n      return error;\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * NOTE: for an explanation of the tempate R implementation see\n   * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {R} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is `null` or `undefined`.\n   * @template T\n   * @template R :=\n   *     mapunion(T, (V) =>\n   *         cond(eq(V, 'null'),\n   *             none(),\n   *             cond(eq(V, 'undefined'),\n   *                 none(),\n   *                 V)))\n   *  =:\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    let firstElement;\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n    if (!shouldBeTrueish) {\n      const message = opt_message || 'Assertion failed';\n      const splitMessage = message.split('%s');\n      const first = splitMessage.shift();\n      let formatted = first;\n      const messageArray = [];\n      let i = 2;\n      pushIfNonEmpty(messageArray, first);\n      while (splitMessage.length > 0) {\n        const nextConstant = splitMessage.shift();\n        const val = arguments[i++];\n        if (val && val.tagName) {\n          firstElement = val;\n        }\n        messageArray.push(val);\n        pushIfNonEmpty(messageArray, nextConstant.trim());\n        formatted += stringOrElementString(val) + nextConstant;\n      }\n      const e = new Error(formatted);\n      e.fromAssert = true;\n      e.associatedElement = firstElement;\n      e.messageArray = messageArray;\n      this.prepareError_(e);\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n      throw e;\n    }\n    return shouldBeTrueish;\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    const shouldBeTrueish = shouldBeElement && shouldBeElement.nodeType == 1;\n    this.assertType_(\n      shouldBeElement,\n      shouldBeTrueish,\n      'Element expected',\n      opt_message\n    );\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    this.assertType_(\n      shouldBeString,\n      typeof shouldBeString == 'string',\n      'String expected',\n      opt_message\n    );\n    return /** @type {string} */ (shouldBeString);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    this.assertType_(\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    );\n    return /** @type {number} */ (shouldBeNumber);\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    this.assertType_(\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    );\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    this.assertType_(\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    );\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n\n  /**\n   * Asserts and returns the enum value. If the enum doesn't contain such a\n   * value, the error is thrown.\n   *\n   * @param {!Object<T>} enumObj\n   * @param {string} s\n   * @param {string=} opt_enumName\n   * @return {T}\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertEnumValue(enumObj, s, opt_enumName) {\n    if (isEnumValue(enumObj, s)) {\n      return s;\n    }\n    this.assert(false, 'Unknown %s value: \"%s\"', opt_enumName || 'enum', s);\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n\n  /**\n   * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n   *\n   * It understands array-based \"id\"-contracted messages.\n   *\n   * Otherwise creates a sprintf syntax string containing the optional message or the\n   * default. An interpolation token is added at the end to include the `subject`.\n   * @param {*} subject\n   * @param {*} assertion\n   * @param {string} defaultMessage\n   * @param {!Array|string=} opt_message\n   * @private\n   */\n  assertType_(subject, assertion, defaultMessage, opt_message) {\n    if (isArray(opt_message)) {\n      this.assert(assertion, opt_message.concat(subject));\n    } else {\n      this.assert(assertion, `${opt_message || defaultMessage}: %s`, subject);\n    }\n  }\n}\n\n/**\n * @param {string|!Element} val\n * @return {string}\n */\nconst stringOrElementString = val =>\n  /** @type {string} */ (elementStringOrPassthru(val));\n\n/**\n * @param {*} val\n * @return {*}\n */\nfunction elementStringOrPassthru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (val && val.nodeType == 1) {\n    return val.tagName.toLowerCase() + (val.id ? '#' + val.id : '');\n  }\n  return val;\n}\n\n/**\n * @param {!Array} array\n * @param {*} val\n */\nfunction pushIfNonEmpty(array, val) {\n  if (val != '') {\n    array.push(val);\n  }\n}\n\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\nexport function duplicateErrorIfNecessary(error) {\n  const messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n  if (messageProperty && messageProperty.writable) {\n    return error;\n  }\n\n  const {message, stack} = error;\n  const e = new Error(message);\n  // Copy all the extraneous things we attach.\n  for (const prop in error) {\n    e[prop] = error[prop];\n  }\n  // Ensure these are copied.\n  e.stack = stack;\n  return e;\n}\n\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\nexport function createErrorVargs(var_args) {\n  let error = null;\n  let message = '';\n  for (let i = 0; i < arguments.length; i++) {\n    const arg = arguments[i];\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n  return error;\n}\n\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\nexport function rethrowAsync(var_args) {\n  const error = createErrorVargs.apply(null, arguments);\n  setTimeout(() => {\n    // reportError is installed globally per window in the entry point.\n    self.__AMP_REPORT_ERROR(error);\n    throw error;\n  });\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?Function}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log contructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log contructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    mode => {\n      const logNum = parseInt(mode.log, 10);\n      if (mode.development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, mode => {\n    const logNum = parseInt(mode.log, 10);\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\n\n/**\n * Provides info about the current app. This return value may be cached and\n * passed around as it will always be DCE'd.\n * @param {?Window=} opt_win\n * @return {!./mode.ModeDef}\n */\nexport function getModeObject(opt_win) {\n  return {\n    localDev: getMode(opt_win).localDev,\n    development: getMode(opt_win).development,\n    filter: getMode(opt_win).filter,\n    minified: getMode(opt_win).minified,\n    lite: getMode(opt_win).lite,\n    test: getMode(opt_win).test,\n    log: getMode(opt_win).log,\n    version: getMode(opt_win).version,\n    rtvVersion: getMode(opt_win).rtvVersion,\n    singlePassType: getMode(opt_win).singlePassType,\n  };\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString_} from './url-parse-query-string';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   filter: (string|undefined),\n *   minified: boolean,\n *   lite: boolean,\n *   test: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   singlePassType: (string|undefined)\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_DEV is only replaced when `gulp dist` is called without the\n  // --fortesting flag.\n  const IS_DEV = true;\n  const IS_MINIFIED = false;\n\n  const localDevEnabled = !!AMP_CONFIG.localDev;\n  const runningTests =\n    !!AMP_CONFIG.test || (IS_DEV && !!(win.__AMP_TEST || win.__karma__));\n  const runningTestsOnIe = win.__karma__ && win.__karma__.config.amp.testOnIe;\n  const isLocalDev = IS_DEV && (localDevEnabled || runningTests);\n  const hashQuery = parseQueryString_(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location.originalHash || win.location.hash\n  );\n  const singlePassType = AMP_CONFIG.spt;\n\n  const searchQuery = parseQueryString_(win.location.search);\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win, isLocalDev);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `gulp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    // Triggers validation or enable pub level logging. Validation can be\n    // bypassed via #validate=0.\n    // Note that AMP_DEV_MODE flag is used for testing purposes.\n    // Use Array.indexOf instead of Array.includes because of #24219\n    development: !!(\n      ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].indexOf(\n        hashQuery['development']\n      ) >= 0 || win.AMP_DEV_MODE\n    ),\n    examiner: hashQuery['development'] == '2',\n    // Allows filtering validation errors by error category. For the\n    // available categories, see ErrorCategory in validator/validator.proto.\n    filter: hashQuery['filter'],\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    // amp-user-location override\n    userLocationOverride: hashQuery['amp-user-location'],\n    minified: IS_MINIFIED,\n    // Whether document is in an amp-lite viewer. It signal that the user\n    // would prefer to use less bandwidth.\n    lite: searchQuery['amp_lite'] != undefined,\n    test: runningTests,\n    testIe: runningTestsOnIe,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n    singlePassType,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n */\nfunction getRtvVersion(win, isLocalDev) {\n  // If it's local dev then we won't actually have a full version so\n  // just use the version.\n  if (isLocalDev) {\n    return internalRuntimeVersion();\n  }\n\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win, isLocalDev) {\n  return getRtvVersion(win, isLocalDev);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This class helps to manage observers. Observers can be added, removed or\n * fired through and instance of this class.\n * @template TYPE\n */\nexport class Observable {\n  /**\n   * Creates an instance of Observable.\n   */\n  constructor() {\n    /** @type {?Array<function(TYPE)>} */\n    this.handlers_ = null;\n  }\n\n  /**\n   * Adds the observer to this instance.\n   * @param {function(TYPE)} handler Observer's handler.\n   * @return {!UnlistenDef}\n   */\n  add(handler) {\n    if (!this.handlers_) {\n      this.handlers_ = [];\n    }\n    this.handlers_.push(handler);\n    return () => {\n      this.remove(handler);\n    };\n  }\n\n  /**\n   * Removes the observer from this instance.\n   * @param {function(TYPE)} handler Observer's instance.\n   */\n  remove(handler) {\n    if (!this.handlers_) {\n      return;\n    }\n    const index = this.handlers_.indexOf(handler);\n    if (index > -1) {\n      this.handlers_.splice(index, 1);\n    }\n  }\n\n  /**\n   * Removes all observers.\n   */\n  removeAll() {\n    if (!this.handlers_) {\n      return;\n    }\n    this.handlers_.length = 0;\n  }\n\n  /**\n   * Fires an event. All observers are called.\n   * @param {TYPE=} opt_event\n   */\n  fire(opt_event) {\n    if (!this.handlers_) {\n      return;\n    }\n    const handlers = this.handlers_;\n    for (let i = 0; i < handlers.length; i++) {\n      const handler = handlers[i];\n      handler(opt_event);\n    }\n  }\n\n  /**\n   * Returns number of handlers. Mostly needed for tests.\n   * @return {number}\n   */\n  getHandlerCount() {\n    if (!this.handlers_) {\n      return 0;\n    }\n    return this.handlers_.length;\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from './utils/promise';\nimport {dev, devAssert} from './log';\nimport {isExperimentOn} from './experiments';\nimport {toWin} from './types';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (?function(new:Object, !Window)|\n *          ?function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Services must implement this interface to be embeddable in FIEs.\n * @interface\n */\nexport class EmbeddableService {\n  /**\n   * Installs a new instance of the service in the given FIE window.\n   * @param {!Window} unusedEmbedWin\n   * @param {!./service/ampdoc-impl.AmpDoc} unusedAmpDoc\n   */\n  static installInEmbedWindow(unusedEmbedWin, unusedAmpDoc) {}\n}\n\n/**\n * Returns a service with the given id. Assumes that it has been constructed\n * already.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\nexport function getExistingServiceForDocInEmbedScope(element, id) {\n  // TODO(#22733): completely remove this method once ampdoc-fie launches.\n  const document = element.ownerDocument;\n  const win = toWin(document.defaultView);\n  const topWin = getTopWindow(win);\n  // First, try to resolve via local embed window (if applicable).\n  const isEmbed = win != topWin;\n  const ampdocFieExperimentOn = isExperimentOn(topWin, 'ampdoc-fie');\n  if (isEmbed && !ampdocFieExperimentOn) {\n    if (isServiceRegistered(win, id)) {\n      return getServiceInternal(win, id);\n    }\n    // Fallback from FIE to parent is intentionally unsupported for safety.\n    return null;\n  } else {\n    // Resolve via the element's ampdoc.\n    return getServiceForDocOrNullInternal(element, id);\n  }\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedScope(embedWin, id, service) {\n  const topWin = getTopWindow(embedWin);\n  devAssert(\n    embedWin != topWin,\n    'Service override can only be installed in embed window: %s',\n    id\n  );\n  devAssert(\n    !isServiceRegistered(embedWin, id),\n    'Service override has already been installed: %s',\n    id\n  );\n  const ampdocFieExperimentOn = isExperimentOn(topWin, 'ampdoc-fie');\n  if (ampdocFieExperimentOn) {\n    const ampdoc = getAmpdoc(embedWin.document);\n    registerServiceInternal(\n      getAmpdocServiceHolder(ampdoc),\n      ampdoc,\n      id,\n      () => service,\n      /* override */ true\n    );\n  } else {\n    registerServiceInternal(embedWin, embedWin, id, () => service);\n    getServiceInternal(embedWin, id); // Force service to build.\n  }\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\nfunction getServiceForDocOrNullInternal(element, id) {\n  const ampdoc = getAmpdoc(element);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = toWin(\n      /** @type {!Document} */ (nodeOrDoc.ownerDocument || nodeOrDoc)\n        .defaultView\n    );\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (getService(\n    win,\n    'ampdoc'\n  ));\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n * @template T\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.ctor = null;\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n */\nfunction registerServiceInternal(holder, context, id, ctor, opt_override) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n    };\n  }\n\n  if (!opt_override && (s.ctor || s.obj)) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  // TODO(dvoytenko): Consider marking holder as destroyed for later-arriving\n  // service to be canceled automatically.\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then(instance =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * Adopts an embeddable (implements `EmbeddableService` interface) service\n * in embed scope.\n * @param {!Window} embedWin\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} serviceClass\n * @suppress {missingProperties}\n * @return {boolean}\n */\nexport function installServiceInEmbedIfEmbeddable(embedWin, serviceClass) {\n  const isEmbeddableService =\n    typeof serviceClass.installInEmbedWindow === 'function';\n  if (!isEmbeddableService) {\n    return false;\n  }\n  const frameElement = dev().assertElement(\n    embedWin.frameElement,\n    'frameElement not found for embed'\n  );\n  const ampdoc = getAmpdoc(frameElement);\n  serviceClass.installInEmbedWindow(embedWin, ampdoc);\n  return true;\n}\n\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    () => service\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have an implementation or a constructor.\n  return !!(service && (service.ctor || service.obj));\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, resolve, reject} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const NOTIFICATION_UI_MANAGER = 'notificationUIManager';\n\nexport class NotificationUiManager {\n  /**\n   * Creates an instance of NotificationUiManager.\n   */\n  constructor() {\n    /** @private {number} */\n    this.queueSize_ = 0;\n\n    /** @private {!Promise} */\n    this.queuePromise_ = Promise.resolve();\n\n    /** @private {function()} */\n    this.queueEmptyHandler_ = () => {}; // Make this an observable if requested\n\n    /** @private {function()} */\n    this.queueNotEmptyHandler_ = () => {};\n  }\n\n  /**\n   * Register handler to be called when UI queue becomes empty\n   * @param {function()} handler\n   */\n  onQueueEmpty(handler) {\n    this.queueEmptyHandler_ = handler;\n    if (this.queueSize_ == 0) {\n      handler();\n    }\n  }\n\n  /**\n   * Register handler to be called when UI queue becomes not empty\n   * @param {function()} handler\n   */\n  onQueueNotEmpty(handler) {\n    this.queueNotEmptyHandler_ = handler;\n    if (this.queueSize_ > 0) {\n      handler();\n    }\n  }\n\n  /**\n   * Register to display UI. Notification will be blocked until previous one has\n   * been dismissed.\n   * @param {function():!Promise} show\n   * @return {!Promise}\n   */\n  registerUI(show) {\n    if (this.queueSize_ == 0) {\n      this.queueNotEmptyHandler_();\n    }\n    this.queueSize_++;\n    const promise = this.queuePromise_.then(() => {\n      return show().then(() => {\n        this.queueSize_--;\n        if (this.queueSize_ == 0) {\n          this.queueEmptyHandler_();\n        }\n      });\n    });\n    this.queuePromise_ = promise;\n    return promise;\n  }\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getAmpdoc,\n  getExistingServiceForDocInEmbedScope,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServicePromiseForDoc,\n} from './service';\nimport {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from './element-service';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (getElementServiceForDoc(\n      element,\n      'access',\n      'amp-access'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'access',\n      'amp-access'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (getElementServiceForDoc(\n      element,\n      'subscriptions',\n      'amp-subscriptions'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'subscriptions',\n      'amp-subscriptions'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'action'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'standard-actions'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (getElementServiceForDoc(\n      element,\n      'activity',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (getService(\n      window,\n      'ampdoc'\n    ));\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (getElementServiceForDoc(\n      element,\n      'amp-analytics-instrumentation',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'amp-analytics-instrumentation',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (getService(\n      window,\n      'batched-xhr'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (getElementServiceIfAvailableForDocInEmbedScope(\n      element,\n      'bind',\n      'amp-bind'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'cid'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'navigation'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (getElementServiceForDoc(\n      element,\n      'loader',\n      'amp-loader'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (getElementServiceForDoc(\n      element,\n      'standalone',\n      'amp-standalone'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (getService(\n      window,\n      'crypto'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'documentInfo'\n    )).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (getService(\n      window,\n      'extensions'\n    ));\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'form-submit-service'\n    ));\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'hidden-observer'\n    ));\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'history'\n    ));\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'inputmask',\n      'amp-inputmask'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'owners'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (getService(\n      window,\n      'performance'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (getExistingServiceOrNull(\n      window,\n      'performance'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (getService(\n      window,\n      'platform'\n    ));\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (getServiceForDoc(\n      element,\n      'position-observer'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'resources'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'resources'\n    ));\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?{incomingFragment: string, outgoingFragment: string}>}\n   */\n  static shareTrackingForOrNull(win) {\n    return /** @type {!Promise<?{incomingFragment: string, outgoingFragment: string}>} */ (getElementServiceIfAvailable(\n      win,\n      'share-tracking',\n      'amp-share-tracking',\n      true\n    ));\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (getElementServiceIfAvailable(win, 'localization', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  static localizationService(win) {\n    return getService(win, 'localization');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (getElementServiceIfAvailable(win, 'story-analytics', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreServiceV01(win) {\n    return getService(win, 'story-store');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestServiceV01(win) {\n    return getService(win, 'story-request-v01');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNullV01(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (getElementServiceIfAvailable(win, 'localization-v01', 'amp-story', true))\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  static localizationServiceV01(win) {\n    return getService(win, 'localization-v01');\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>}\n   */\n  static viewerIntegrationVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>} */\n      (getElementServiceIfAvailable(\n        win,\n        'viewer-integration-variable',\n        'amp-viewer-integration',\n        true\n      ))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'storage'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesFor(window) {\n    return /** @type {!./service/template-impl.Templates} */ (getService(\n      window,\n      'templates'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (getService(\n      window,\n      'timer'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'url-replace'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (getElementServiceForDoc(\n        element,\n        'userNotificationManager',\n        'amp-user-notification'\n      ))\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (getElementServiceIfAvailableForDoc(\n        element,\n        'consentPolicyManager',\n        'amp-consent'\n      ))\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'geo',\n      'amp-geo',\n      true\n    ));\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>}\n   */\n  static userLocationForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'user-location',\n      'amp-user-location',\n      true\n    ));\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'url'\n    ));\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'variant',\n      'amp-experiment',\n      true\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'video-manager'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>}\n   */\n  static viewerAssistanceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>} */\n      (getElementServiceIfAvailableForDoc(\n        element,\n        'amp-viewer-assistance',\n        'amp-viewer-assistance'\n      ))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'viewer'\n    ));\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'viewer'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (getService(\n      window,\n      'vsync'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'viewport'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from './log';\nimport {map} from './utils/object.js';\n\nlet htmlContainer;\nlet svgContainer;\n\n/**\n * Creates the html helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\nexport function htmlFor(nodeOrDoc) {\n  const doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n  if (!htmlContainer || htmlContainer.ownerDocument !== doc) {\n    htmlContainer = doc.createElement('div');\n  }\n\n  return html;\n}\n\n/**\n * Creates the svg helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\nexport function svgFor(nodeOrDoc) {\n  const doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n  if (!svgContainer || svgContainer.ownerDocument !== svgContainer) {\n    svgContainer = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  }\n\n  return svg;\n}\n\n/**\n * A tagged template literal helper to generate static SVG trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const circle = svg`<circle cx=\"60\" cy=\"60\" r=\"22\"></circle>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction svg(strings) {\n  return createNode(svgContainer, strings);\n}\n\n/**\n * A tagged template literal helper to generate static DOM trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const div = html`<div><span></span></div>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction html(strings) {\n  return createNode(htmlContainer, strings);\n}\n\n/**\n * Helper used by html and svg string literal functions.\n * @param {!Element} container\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction createNode(container, strings) {\n  devAssert(strings.length === 1, 'Improper html template tag usage.');\n  container./*OK*/ innerHTML = strings[0];\n\n  const el = container.firstElementChild;\n  devAssert(el, 'No elements in template');\n  devAssert(!el.nextElementSibling, 'Too many root elements in template');\n\n  // Clear to free memory.\n  container.removeChild(el);\n\n  return el;\n}\n\n/**\n * Queries an element for all elements with a \"ref\" attribute, removing\n * the attribute afterwards.\n * Returns a named map of all ref elements.\n *\n * @param {!Element} root\n * @return {!Object<string, !Element>}\n */\nexport function htmlRefs(root) {\n  const elements = root.querySelectorAll('[ref]');\n  const refs = map();\n\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n    const ref = devAssert(element.getAttribute('ref'), 'Empty ref attr');\n    element.removeAttribute('ref');\n    devAssert(refs[ref] === undefined, 'Duplicate ref');\n    refs[ref] = element;\n  }\n\n  return refs;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.startsWith.\n * @param {string} string\n * @param {string} prefix\n * @return {boolean}\n */\nexport function startsWith(string, prefix) {\n  if (prefix.length > string.length) {\n    return false;\n  }\n  return string.lastIndexOf(prefix, 0) == 0;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {*} TODO(#23582): Specify return type\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {dev, devAssert} from './log';\nimport {map} from './utils/object.js';\nimport {startsWith} from './string';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\n/**\n * @export\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @export\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (startsWith(camelCase, '--')) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      styles[k].toString(),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (propertyName) {\n    element.style[propertyName] = /** @type {string} */ (opt_units\n      ? value + opt_units\n      : value);\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  if (style === 'display') {\n    dev().error(\n      'STYLE',\n      '`display` style detected. You must use toggle instead.'\n    );\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    dev().error(\n      'STYLE',\n      '`display` style detected in styles. You must use toggle instead.'\n    );\n  }\n  return styles;\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x}, ${opt_y})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n  return `rotate(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!Object<string, string>}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return /** @type {!Object<string, string>} */ (style) || map();\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst toString_ = Object.prototype.toString;\n\n/**\n * Returns the ECMA [[Class]] of a value\n * @param {*} value\n * @return {string}\n */\nfunction toString(value) {\n  return toString_.call(value);\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport function isArray(value) {\n  return Array.isArray(value);\n}\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString(value) === '[object Object]';\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Checks whether `s` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} s\n * @return {boolean}\n * @template T\n */\nexport function isEnumValue(enumObj, s) {\n  for (const k in enumObj) {\n    if (enumObj[k] === s) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {!Window|null} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {tryDecodeUriComponent_} from './url-try-decode-uri-component';\n\nconst regex = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * DO NOT import the function from this file. Instead, import parseQueryString\n * from `src/url.js`.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString_(queryString) {\n  const params = /** @type {!JsonObject} */ (Object.create(null));\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = regex.exec(queryString))) {\n    const name = tryDecodeUriComponent_(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent_(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * DO NOT import the function from this file. Instead, import\n * tryDecodeUriComponent from `src/url.js`.\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent_(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LruCache} from './utils/lru-cache';\nimport {dict, hasOwn} from './utils/object';\nimport {endsWith, startsWith} from './string';\nimport {getMode} from './mode';\nimport {isArray} from './types';\nimport {parseQueryString_} from './url-parse-query-string';\nimport {tryDecodeUriComponent_} from './url-try-decode-uri-component';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\n/**\n * @type {!JsonObject}\n */\nconst SERVING_TYPE_PREFIX = dict({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n  // Actions viewer\n  'action': true,\n});\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet a;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet cache;\n\n/** @private @const Matches amp_js_* parameters in query string. */\nconst AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n\n/** @private @const Matches amp_gsa parameters in query string. */\nconst AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n\n/** @private @const Matches amp_r parameters in query string. */\nconst AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n\n/** @private @const Matches amp_kit parameters in query string. */\nconst AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n\n/** @private @const Matches usqp parameters from goog experiment in query string. */\nconst GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\n\nconst INVALID_PROTOCOLS = [\n  /*eslint no-script-url: 0*/ 'javascript:',\n  /*eslint no-script-url: 0*/ 'data:',\n  /*eslint no-script-url: 0*/ 'vbscript:',\n];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a = /** @type {!HTMLAnchorElement} */ (self.document.createElement('a'));\n    cache = self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, opt_nocache ? null : cache);\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(a, url, opt_cache) {\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = getMode().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  const field = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    const v = params[k];\n    if (v == null) {\n      continue;\n    } else if (isArray(v)) {\n      for (let i = 0; i < v.length; i++) {\n        const sv = /** @type {string} */ (v[i]);\n        s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n      }\n    } else {\n      const sv = /** @type {string} */ (v);\n      s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  // (erwinm, #4560): type cast necessary until #4560 is fixed.\n  const theUrlString = /** @type {string} */ (urlString);\n  userAssert(\n    isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    theUrlString\n  );\n  return theUrlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * This function is implemented in a separate file to avoid a circular\n * dependency.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  return parseQueryString_(queryString);\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.cdnProxyRegex.test(url.origin);\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.localhostRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const parsed = parseUrlDeprecated(url);\n  const search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const search = urlSearch\n    .replace(AMP_JS_PARAMS_REGEX, '')\n    .replace(AMP_GSA_PARAMS_REGEX, '')\n    .replace(AMP_R_PARAMS_REGEX, '')\n    .replace(AMP_KIT_PARAMS_REGEX, '')\n    .replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '')\n    .replace(/^[?&]/, ''); // Removes first ? or &.\n  return search ? '?' + search : '';\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}=[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX[prefix],\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  if (typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private Visible for testing.\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (startsWith(relativeUrlString.toLowerCase(), relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (startsWith(relativeUrlString, '//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (startsWith(relativeUrlString, '/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} opt_fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, opt_fallback) {\n  return tryDecodeUriComponent_(component, opt_fallback);\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// TODO(rsimha, #15334): Enable this rule.\n/* eslint jsdoc/check-types: 0 */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nexport function once(fn) {\n  let evaluated = false;\n  let retValue = null;\n  let callback = fn;\n  return (...args) => {\n    if (!evaluated) {\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n    return retValue;\n  };\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dev} from '../log';\n\n/** @const {string} */\nconst TAG = 'lru-cache';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = Object.create(null);\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    dev().warn(TAG, 'Trimming LRU cache');\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isObject} from '../types';\n\n/* @const */\nconst hasOwn_ = Object.prototype.hasOwnProperty;\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {t, s, d} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    Object.keys(s).forEach(key => {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          return;\n        }\n      }\n      t[key] = newValue;\n    });\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /**\n   * Creates an instance of Deferred.\n   */\n  constructor() {\n    let resolve, reject;\n\n    /**\n     * @const {!Promise<T>}\n     */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n\n    /**\n     * @const {function(T=)}\n     */\n    this.resolve = resolve;\n\n    /**\n     * @const {function(*=)}\n     */\n    this.reject = reject;\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise(resolve => {\n    resolve(fn());\n  });\n}\n\n/**\n * Returns a promise which resolves if a threshold amount of the given promises\n * resolve, and rejects otherwise.\n * @param {!Array<!Promise>} promises The array of promises to test.\n * @param {number} count The number of promises that must resolve for the\n *     returned promise to resolve.\n * @return {!Promise} A promise that resolves if any of the given promises\n *     resolve, and which rejects otherwise.\n */\nexport function some(promises, count = 1) {\n  return new Promise((resolve, reject) => {\n    count = Math.max(count, 0);\n    const extra = promises.length - count;\n    if (extra < 0) {\n      reject(new Error('not enough promises to resolve'));\n    }\n    if (promises.length == 0) {\n      resolve([]);\n    }\n    const values = [];\n    const reasons = [];\n\n    const onFulfilled = value => {\n      if (values.length < count) {\n        values.push(value);\n      }\n      if (values.length == count) {\n        resolve(values);\n      }\n    };\n    const onRejected = reason => {\n      if (reasons.length <= extra) {\n        reasons.push(reason);\n      }\n      if (reasons.length > extra) {\n        reject(reasons);\n      }\n    };\n    for (let i = 0; i < promises.length; i++) {\n      Promise.resolve(promises[i]).then(onFulfilled, onRejected);\n    }\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!Promise>=} opt_promises\n   */\n  constructor(opt_promises) {\n    let resolve_, reject_;\n    /** @private @const {!Promise} */\n    this.promise_ = new Promise((resolve, reject) => {\n      resolve_ = resolve;\n      reject_ = reject;\n    });\n\n    /** @private */\n    this.resolve_ = resolve_;\n\n    /** @private */\n    this.reject_ = reject_;\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (let i = 0; i < opt_promises.length; i++) {\n        this.add(opt_promises[i]);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!Promise} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    Promise.resolve(promise).then(\n      result => {\n        if (this.count_ === countAtAdd) {\n          this.resolve_(result);\n        }\n      },\n      error => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.reject_(error);\n        }\n      }\n    );\n    return this.promise_;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.promise_.then(opt_resolve, opt_reject);\n  }\n}\n","/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n"]}