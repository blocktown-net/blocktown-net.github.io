{"version":3,"sources":["regexp/wrapper","node_modules/browser-pack/_prelude.js","amp-bind.js","extensions/amp-bind/0.1/amp-bind-macro.js","extensions/amp-bind/0.1/amp-bind.js","extensions/amp-bind/0.1/amp-state.js","extensions/amp-bind/0.1/bind-events.js","extensions/amp-bind/0.1/bind-impl.js","extensions/amp-bind/0.1/bind-validator.js","src/action-constants.js","src/amp-events.js","src/analytics.js","src/batched-json.js","src/chunk.js","src/common-signals.js","src/config.js","src/css.js","src/document-ready.js","src/dom.js","src/element-service.js","src/error.js","src/event-helper-listen.js","src/event-helper.js","src/experiments.js","src/exponential-backoff.js","src/form-data-wrapper.js","src/form.js","src/format.js","src/internal-version.js","src/json.js","src/layout.js","src/log.js","src/mode-object.js","src/mode.js","src/render-delaying-services.js","src/service.js","src/service/extension-location.js","src/services.js","src/srcset.js","src/static-template.js","src/string.js","src/style-installer.js","src/style.js","src/types.js","src/url-parse-query-string.js","src/url-rewrite.js","src/url-try-decode-uri-component.js","src/url.js","src/utils/array.js","src/utils/function.js","src/utils/lru-cache.js","src/utils/object.js","src/utils/priority-queue.js","src/utils/promise.js","src/utils/rate-limit.js","src/utils/signals.js","src/utils/xhr-utils.js","src/web-worker/amp-worker.js","third_party/css-escape/css-escape.js"],"names":[],"mappings":"AAAA;ACAA;ACCA;AACA;AACA;AACA;AACA;ACWA;ADTA;AACA;AACA;ACSA;ADPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACDE;ADGF;ACDI;AACA;AACD;AAED;ADEF;AACA;AACA;ACFI;AACD;AAED;ADGF;AACA;AACA;ACHI;AACD;AAED;ADIF;AACA;AACA;ACJI;AACA;AACD;AAED;ADKF;AACA;AACA;AACA;AACA;AACA;AACA;ACLI;AAGD;ADKH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEnDA;AFqDA;AEpDA;AFsDA;AErDA;AFuDA;AEzEA;AF2EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AErEA;AACA;AAEA;AACE;AACA;AACA;AACD;AFsED;AACA;AACA;AACA;AACA;AACA;AACA;AGvFA;AHyFA;AGxFA;AH0FA;AGzFA;AH2FA;AG1FA;AH4FA;AGxFA;AH0FA;AGzFA;AH2FA;AG1FA;AH4FA;AG3FA;AH6FA;AG5FA;AH8FA;AG7FA;AH+FA;AG9FA;AHgGA;AG/FA;AHiGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGrGE;AHuGF;AACA;AGrGE;AAAqB;AHwGvB;AGvGI;AAEA;AHwGJ;AACA;AACA;AACA;AACA;AACA;AGvGI;AATmB;AAUpB;AAED;AHyGF;AACA;AACA;AACA;AACA;AG3GI;AACA;AACD;AAED;AH4GF;AACA;AACA;AG5GI;AACD;AAED;AH6GF;AACA;AACA;AG7GI;AACD;AAED;AH8GF;AACA;AACA;AG/GkB;AHiHlB;AGhHI;AAAqB;AAAkB;AACvC;AAFc;AHuHlB;AGlHI;AACE;AACE;AACA;AACD;AACF;AAED;AHmHJ;AACA;AGnHI;AHqHJ;AGpHI;AACE;AAAqB;AAAa;AACnC;AHwHL;AGtHI;AAGI;AHsHR;AGlHQ;AAAqB;AAAa;AAAO;AAAkB;AAC5D;AAGJ;AAED;AHqHF;AACA;AACA;AGrHI;AACE;AACA;AACA;AACD;AHuHL;AACA;AGtHI;AACE;AAAqB;AAAa;AACnC;AACF;AAED;AHyHF;AACA;AACA;AGzHI;AACA;AACD;AAED;AH0HF;AACA;AACA;AACA;AACA;AACA;AG1HI;AACE;AH4HN;AG3HM;AACE;AAA0C;AAAa;AACxD;AACF;AH+HL;AG9HI;AACD;AAED;AH+HF;AACA;AACA;AACA;AACA;AACA;AACA;AGhIW;AHkIX;AGlIW;AHoIX;AGlII;AACE;AACD;AHoIL;AGnII;AHqIJ;AGpII;AACE;AACA;AACD;AHsIL;AGrII;AHuIJ;AGtII;AACE;AAIA;AACD;AHqIL;AGpII;AACE;AACD;AACF;AAED;AHqIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGtIyD;AAAnB;AAAmB;AH0IzD;AGzII;AAGE;AAAe;AAKlB;AAED;AHqIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGtI4C;AHwI5C;AGxI4C;AAExC;AAEA;AACA;AAGA;AHsIJ;AGrII;AAKA;AAAwD;AAEpD;AAIY;AAAD;AHiInB;AG7HQ;AH+HR;AG9HQ;AACD;AAZqD;AAczD;AAED;AH+HF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGhIuC;AHkIvC;AGjII;AACA;AAEQ;AAAA;AACI;AAAA;AACb;AAED;AHmIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGnII;AACE;AACD;AHqIL;AGpII;AACA;AACE;AACA;AAAc;AAA4B;AAC1C;AAEA;AACA;AHuIN;AGtIM;AAAqB;AAAe;AAAQ;AAAmB;AAChE;AACF;AAED;AH2IF;AACA;AACA;AACA;AACA;AACA;AACA;AG3II;AACD;AH6IH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIxZA;AJ0ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIxZA;AJ0ZA;AACA;AACA;AIxZO;AACL;AACA;AACA;AAHwB;AJ8Z1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKzaA;AL2aA;AK1aA;AL4aA;AK3aA;AL6aA;AK5aA;AL8aA;AK7aA;AL+aA;AK9aA;ALgbA;AK/aA;ALibA;AKhbA;ALkbA;AKjbA;ALmbA;AK9aA;ALgbA;AK/aA;ALibA;AKhbA;ALkbA;AKjbA;ALmbA;AKlbA;ALobA;AKnbA;ALqbA;AKpbA;ALsbA;AKrbA;ALubA;AKtbA;ALwbA;AKvbA;ALybA;AKxbA;AL0bA;AKzbA;AL2bA;AK1bA;AL4bA;AK3bA;AL6bA;AK5bA;AL8bA;AKzeA;AL2eA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK5cA;AACA;AAEA;AL6cA;AACA;AACA;AACA;AACA;AK5cA;AAEA;AL6cA;AACA;AACA;AACA;AK5cA;AAEA;AL6cA;AK5cA;AACE;AACE;AACA;AAFO;AAIT;AACE;AADQ;AAGV;AACE;AADU;AARgB;AAa9B;AL6cA;AACA;AACA;AACA;AACA;AK5cA;AAEA;AL6cA;AACA;AACA;AACA;AK5cA;AAEA;AL6cA;AACA;AACA;AACA;AACA;AACA;AK5cA;AACE;AACA;AACA;AACA;AAJ+B;AAOjC;AL6cA;AACA;AACA;AACA;AK5cA;AAEA;AL6cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK9cE;ALgdF;AACA;AACA;AACA;AK9cE;AAA6B;ALid/B;AKhdI;ALkdJ;AKhdI;AACA;AAEA;ALidJ;AKhdI;AAEA;ALidJ;AACA;AACA;AACA;AACA;AKhdI;AAEA;ALidJ;AACA;AACA;AACA;AACA;AACA;AKhdI;AAEA;ALidJ;AKhdI;AAGI;AACD;AAIH;AL6cJ;AK5cI;AAEA;AL6cJ;AACA;AACA;AACA;AK5cI;AAEA;AL6cJ;AK5cI;AAEA;AL6cJ;AK5cI;AAEA;AL6cJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK5cI;AAEA;AL6cJ;AK5cI;AAEA;AL6cJ;AACA;AACA;AACA;AK5cI;AAAc;AAA4B;AAE1C;AL+cJ;AK9cI;AAEA;AL+cJ;AK9cI;AAEA;AL+cJ;AK9cI;AACA;AAEA;AL+cJ;AACA;AACA;AACA;AK9cI;AAGI;AACE;AADW;AAGX;AAAwC;AAAA;AACzC;AACC;AACA;AAA+B;AAAA;AAChC;AACF;AAEC;AACD;AAEH;ALgdJ;AK/cI;AAEA;ALgdJ;AK/cI;AAEA;ALgdJ;AK/cI;ALidJ;AK9cI;AACA;ALgdJ;AK/cI;AAAiC;AAAA;ALmdrC;AKldI;AACD;AAED;ALmdF;AACA;AACA;AACA;AACA;AACA;AACA;AKndI;AACD;AAED;ALodF;AACA;AACA;AACA;AACA;AACA;AACA;AKtdI;AACD;AAED;ALudF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKxdkD;AL0dlD;AKzdI;AL2dJ;AKzdI;AACE;AACD;AACC;AACD;AL2dL;AKzdI;AACE;AACD;AL2dL;AKzdI;AACQ;AAAA;AACO;AAAA;AL6dnB;AK3dI;AACE;AACE;AACD;AACF;AL6dL;AK3dI;AACD;AAED;AL4dF;AACA;AACA;AACA;AACA;AACA;AACA;AK7dqB;AAAA;AAAA;AAAA;AAAA;AAIjB;ALgeJ;AK/dI;AACE;AACA;AACD;ALieL;AKheI;ALkeJ;AKheI;AAEA;ALieJ;AKheI;AACE;AACA;AAKA;AAEA;AL6dN;AK5dM;AAAuB;AAAuB;AAC5C;AAA2B;AAAuB;AACnD;ALkeP;AKjeM;AACE;AACE;ALmeV;AKleQ;AACE;ALoeV;AKneQ;AACE;AANJ;AAUD;AACC;AAMD;AL8dL;AK7dI;AACD;AAED;AL8dF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK/d4C;ALie5C;AKheI;AACA;AACc;AAAA;AACN;AAAA;AAEJ;AACA;AACE;AACD;AACF;AACH;AACD;AAED;ALkeF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKne6C;ALqe7C;AKpeI;AACA;AACE;AACA;AACA;AACA;AACE;AAEA;ALqeR;AKpeQ;AACD;ALseP;AKpeM;AAAc;AAAA;ALwepB;AKveM;AACQ;AAAA;AAEJ;AACD;AACJ;AACF;AAED;ALweF;AACA;AACA;AACA;AACA;AACA;AACA;AKxeI;AACE;AAAc;AAAD;AACb;AAFgB;AL+etB;AK3eI;AACE;AACA;AAAO;AAAsC;AAA7C;AACD;AAED;AL+eJ;AACA;AK/eI;AACE;AACD;AACF;AAED;ALgfF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKjfuD;ALmfvD;AKnfuD;AAAd;AAAc;ALufvD;AKtfI;AACA;AACA;AACA;AACA;AAIA;AAAoB;AAAA;AAOrB;AAED;ALgfF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKjfmD;ALmfnD;AKlfI;AAEA;AAIA;AACE;AACE;AAAoC;AAAA;AAGrC;AACF;AACF;AAED;AL+eF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKhf4C;ALkf5C;AKjfI;AACA;AACA;ALmfJ;AKhfI;AACA;AAA8C;AAAA;AAG9C;AACE;AACA;AACD;AACD;ALkfJ;AKjfI;AACE;ALmfN;AKlfM;AACE;AACD;AACF;ALofL;AKlfI;AACE;AAMD;AL+eL;AK7eI;AACE;AACD;AACC;AACD;AACF;AAED;AL8eF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK9eI;ALgfJ;AK/eI;AACE;AAAsB;AAA2B;AAClD;AACC;AACD;AACF;AAED;ALkfF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKnfoB;ALqfpB;AKpfI;AACA;AACA;AAGA;ALofJ;AKnfI;AAEI;AACyB;AAAA;AAG1B;AAEC;AACA;AAA6C;AAAA;AAC9C;AAEC;AAEA;ALkfR;AKjfQ;AACA;AACE;AACQ;AAAA;AACI;AAAA;AACb;AACD;AACD;AAEC;AACA;AACE;AAAoC;AAAA;AACrC;AAED;ALqfR;AACA;AKrfQ;ALufR;AKtfQ;AACD;AACJ;AAED;ALufF;AACA;AACA;AACA;AACA;AACA;AACA;AKvfI;AACE;AACD;AACF;AAED;ALwfF;AACA;AACA;AACA;AACA;AACA;AKxfI;AACD;AAED;ALyfF;AACA;AACA;AKzfI;AACD;AAED;AL0fF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK3fmB;AL6fnB;AK5fI;AACA;AACE;AACE;AACE;AACA;AACD;AACF;AL8fP;AK7fM;AACE;AAMD;AL0fP;AKzfM;AACD;AACF;AAED;AL0fF;AACA;AACA;AACA;AACA;AACA;AACA;AK1fI;AACD;AAED;AL2fF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK5fe;AL8ff;AK7fI;AACA;AACA;AACA;AAAe;AAAsC;AACrD;AACE;AAEQ;AAAA;AACR;AACE;AACA;AACA;AAHU;AAKb;ALigBL;AKhgBI;AACE;AACD;AACC;AACE;AACA;AACE;AAKD;AACD;AACD;AACF;AACF;AAED;AL6fF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK9f8B;ALggB9B;AK/fI;AACE;AACD;ALigBL;AACA;AK/fI;AACE;AACA;AAKA;AAAmD;AAAA;AL+fzD;AK7fQ;AACE;AACD;AL+fT;AK9fQ;AACD;AACF;AAGD;AL8fJ;AK7fI;AACE;AACA;AACA;AACA;AACD;AACF;AAED;AL8fF;AACA;AACA;AK9fI;AAMD;AAED;AL0fF;AACA;AACA;AACA;AACA;AACA;AACA;AK3fkC;AL6flC;AK5fI;AACE;AACA;AACE;AL8fR;AK7fQ;AACE;AAKD;AACF;AACD;AACD;AACF;AAED;AL0fF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK1fI;AACE;AACD;AL4fL;AACA;AK1fI;AACE;AACE;AACE;AACD;AACF;AL4fP;AK3fM;AACD;AAED;AACA;AL4fJ;AK3fI;AAA2B;AAA+B;AL+f9D;AK9fI;AACE;AACA;AACE;AACE;AACE;AACD;AACF;ALggBT;AK/fQ;AACD;ALigBP;AKhgBM;AACE;AACA;AACD;AACF;ALkgBL;AACA;AKhgBI;ALkgBJ;AKjgBI;AACE;AAEQ;AAAA;AACT;AACC;AACD;AACF;AAED;ALkgBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKngByB;ALqgBzB;AKpgBI;AACA;AACA;ALsgBJ;AKjgBI;AAIE;AAA+B;ALigBrC;AK9fI;AAEA;AL+fJ;AK9fI;AACE;ALggBN;AK/fM;AACE;AACD;AAED;ALggBN;AACA;AKhgBM;AACE;AACD;ALkgBP;AKjgBM;AACA;ALmgBN;AKlgBM;AACE;AACD;AAED;AACA;ALmgBN;AACA;AKngBM;AAGA;AACD;ALmgBL;AKjgBI;AACE;AACE;AAEA;ALkgBR;AKjgBQ;AACE;AACE;AACD;AACF;AACC;AACA;AACA;ALmgBV;AKlgBU;AACE;AACD;AACF;ALogBT;AACA;AKngBQ;AACE;AAAS;AAAU;AAAX;AACT;AACC;AACD;AACF;ALwgBP;AKvgBM;AACD;AACF;AAED;ALwgBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKxgBI;AACE;AL0gBN;AKzgBM;AACE;AACD;AACF;AL2gBL;AK1gBI;AACD;AAED;AL2gBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK5gB4C;AL8gB5C;AK7gBI;AACA;AL+gBJ;AK9gBI;AACE;AACA;AACD;ALghBL;AK/gBI;AACE;AAA0B;AAAS;AAAV;AAC1B;ALohBL;AK7hB4C;AAWxC;AAAyC;AAAA;AAEvC;AAAkB;AAAS;AAAU;AAApB;AL0hBvB;AKzhBM;AACE;AACD;AL2hBP;AK1hBM;AACD;AACD;AACD;AAED;AL2hBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK3hBI;AACA;AL6hBJ;AK5hBI;AACE;AACA;AL8hBN;AK7hBM;AACE;AACD;AACF;AL+hBL;AK9hBI;AACD;AAED;AL+hBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK/hBI;AACA;AAEA;ALgiBJ;AK/hBI;AACE;AACD;AACC;ALiiBN;AK/hBM;AACE;AACD;AACF;ALiiBL;AK/hBI;AACE;AACE;AAAQ;AAAU;AAAX;AACR;AACC;AAMA;AACD;AACF;AL+hBL;AK9hBI;AACD;AAED;AL+hBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKhiByC;ALkiBzC;AKjiBI;AAEI;AACA;AACA;AACD;AACoB;AAAA;ALmiB3B;AKjiBQ;AACE;AACA;AAID;AACC;AACD;AACF;AACJ;AAED;AL+hBF;AACA;AACA;AACA;AACA;AACA;AACA;AKhiBc;ALkiBd;AKjiBI;AACA;AAA2C;AAAA;ALqiB/C;AKliBM;AACE;ALoiBR;AKniBQ;AACE;AACA;AAMA;ALgiBV;AK/hBU;AACD;AACF;AACD;AACA;AACD;AACF;AAED;ALgiBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKjiBiD;ALmiBjD;AKniBiD;AAA9B;AAA8B;ALuiBjD;AKviBiD;AAAb;AAAa;AL2iBjD;AK1iBI;AACA;AAEA;AAA4C;AAAA;AL6iBhD;AKziBM;AACE;AACD;AL2iBP;AKziBM;AACE;AL2iBR;AK1iBQ;AACE;AACD;AL4iBT;AK3iBQ;AL6iBR;AK5iBQ;AACE;AACD;AL8iBT;AKtjB+C;AAAA;AAAA;AAAA;AAAA;AAcvC;AL+iBR;AK9iBQ;ALgjBR;AK9iBQ;AACE;AAQD;AACF;AACF;AACD;AACD;AAED;ALwiBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKxiBI;AACE;AACE;AACD;AACF;AL0iBL;AKziBI;AACD;AAED;AL0iBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK1iBI;AACA;AAAyC;AAAA;AAEvC;AAEA;AL4iBN;AK3iBM;AAEuC;AAAY;AAGjD;AACA;AAAc;AAAe;AAAhB;AACd;AACF;AACD;AACD;AAED;AL6iBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK9iBoC;ALgjBpC;AK/iBI;AACE;AACA;AACA;AACE;AACD;ALijBP;AKhjBM;AACD;AACD;AACD;AAED;ALijBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKljBoC;ALojBpC;AKnjBI;AACA;AACE;AACE;AACE;AACD;AACF;AACF;AACD;AACD;AAED;ALojBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKrjB4C;ALujB5C;AKvjB4C;AAAA;AAExC;ALyjBJ;AKxjBI;AACE;AACD;AL0jBL;AKzjBI;AACE;AACA;AAEA;AAA0B;AAAA;AAAA;AL6jBhC;AK1jBQ;AL4jBR;AK1jBQ;AACE;AL4jBV;AK3jBU;AACE;AACD;AACC;AACD;AACF;AL6jBT;AK3jBQ;AACD;AL6jBP;AK3jBM;AACE;AACA;AACA;AACA;AAAgB;AAAO;AACxB;AL+jBP;AK7jBM;AACE;AACA;AACA;AACE;AACD;AACC;AL+jBV;AKzjBU;AACD;AACF;AACF;AACF;AAED;AL0jBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK1jBI;AL4jBJ;AK3jBI;AACE;AACD;AAGD;AL2jBJ;AACA;AK3jBI;AL6jBJ;AKxjBI;AACE;AAGE;AAAa;AACZ;AAAD;AAEF;AACD;AACF;AAED;ALwjBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKzjBkD;AAE9C;AL0jBJ;AKxjBI;AACE;AACE;AACA;AL0jBR;AKxjBM;AACE;AL0jBR;AKxjBQ;AAIE;AACD;AAED;ALsjBR;AACA;AKtjBQ;AACE;AACD;AACC;AACD;ALwjBT;AKvjBQ;ALyjBR;AKvjBM;AACE;AACA;ALyjBR;AKxjBQ;AACE;AL0jBV;AKzjBU;AACE;AACD;AACF;AL2jBT;AK1jBQ;AACE;AACD;AACC;AACD;AACC;AAKA;AACD;ALwjBT;AKvjBQ;ALyjBR;AKvjBM;AACE;AACA;AACA;AACA;AACA;AACA;AAEA;ALwjBR;AKvjBQ;AACE;AACE;AACA;AACA;AACA;AACD;ALyjBX;AKxjBU;AACE;AACA;AACD;AACC;AACA;AACD;AL0jBX;AKzjBU;AACE;AACA;AACA;AACD;AACF;AACC;AACA;AACA;AACA;AACD;AACC;AAMD;ALsjBT;AKpjBQ;AACE;AAAQ;AAAgB;AAAjB;AACR;ALyjBT;AKxjBQ;AA3FJ;ALspBJ;AKzjBI;AACD;AAED;AL0jBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK1jBI;AACA;AACE;AACD;AL4jBL;AACA;AK3jBI;AACE;AACD;AL6jBL;AACA;AK5jBI;AACE;AACD;AL8jBL;AK7jBI;AL+jBJ;AK9jBI;AACE;AACD;ALgkBL;AACA;AK/jBI;ALikBJ;AKhkBI;AACE;AACD;AACF;AAED;ALikBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKjkBI;AACA;AACA;AACE;AAIE;AAAmB;AAGrB;AACD;AACC;AAOA;AACD;ALyjBL;AKxjBI;AACD;AAED;ALyjBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK1jBwD;AAAA;AAKpD;ALyjBJ;AKxjBI;AL0jBJ;AKzjBI;AACE;AACD;AL2jBL;AKzjBI;AACA;AL2jBJ;AKzjBI;AACE;AACE;AACA;AACA;AACA;AL2jBR;AKzjBM;AACE;AL2jBR;AK1jBQ;AACE;AL4jBV;AK1jBU;AACE;AACD;AL4jBX;AK3jBU;AACD;AACD;AL6jBR;AACA;AK7jBQ;AL+jBR;AK9jBQ;AACE;AACD;AACC;ALgkBV;AK/jBU;AACE;AACD;AACF;AACC;AAKA;AACD;AL6jBT;AK5jBQ;AACA;AL8jBR;AK5jBM;AACE;AL8jBR;AK5jBQ;AACE;AACD;AACC;AACD;AACC;AACD;AACC;AACD;AL8jBT;AK7jBQ;AAjDJ;ALinBJ;AK7jBI;AAAuB;AAAyB;AAA1B;AACvB;AAED;ALikBF;AACA;AACA;AACA;AACA;AKlkBsB;ALokBtB;AKnkBI;AAEA;AACA;ALokBJ;AKnkBI;ALqkBJ;AKpkBI;AACE;AACD;ALskBL;AKrkBI;AACA;AACE;AACD;AACF;AAED;ALskBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKvkB6D;ALykB7D;AKzkB6D;AAAvB;AAAuB;AL6kB7D;AK5kBI;AACA;AAEI;AACA;AACD;AAEC;AAOD;AACJ;AAED;ALqkBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKrkBI;AACD;AAED;ALskBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKtkBI;AACA;AACA;AACA;AACD;AAED;ALukBF;AACA;AACA;AACA;AACA;AACA;AKvkBI;AACE;AACD;ALykBL;AKxkBI;AACD;AAED;ALykBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKzkBI;AACE;AACD;AL2kBL;AK1kBI;AACA;AL4kBJ;AK3kBI;AACE;AACE;AACD;AACF;AL6kBL;AK5kBI;AACD;AAED;AL6kBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK7kBI;AACE;AACD;AL+kBL;AK9kBI;AACE;AACD;AACC;AACD;ALglBL;AK/kBI;AACD;AAED;ALglBF;AACA;AACA;AACA;AACA;AACA;AACA;AKhlBI;AACE;AACE;AACA;AACD;AACC;AACA;AACD;AACC;AAMD;AACF;AACC;AACD;AACF;AAED;AL4kBF;AACA;AACA;AACA;AACA;AACA;AACA;AK7kB8B;AL+kB9B;AK9kBI;AACE;AACD;ALglBL;AK/kBI;AACE;AACA;AACD;ALilBL;AACA;AKhlBI;AAT0B;AAW1B;AAAyC;AAEvC;AACD;ALklBL;AKhlBI;AACE;AACA;AAA8C;AAE5C;AACD;AACD;AACD;AACF;AAED;ALilBF;AACA;AACA;AACA;AACA;AKjlBI;AACE;AACD;AACF;AAED;ALklBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKllBI;AACD;AAED;ALmlBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKnlBI;AACD;AAED;ALolBF;AACA;AACA;AACA;AACA;AACA;AKplBI;AACE;ALslBN;AKrlBM;AACE;AAAyB;AAAe;AAAhB;AACzB;AACC;AACA;AAAsB;AAAc;AAAM;AAAiB;AAC5D;AL8lBP;AK7lBM;AACD;AACF;AL+lBH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AM5yEA;AN8yEA;AM7yEA;AN+yEA;AM9yEA;ANgzEA;AM/yEA;ANizEA;AMp0EA;ANs0EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AM9zEA;AAEA;AN+zEA;AACA;AACA;AACA;AACA;AACA;AM9zEA;AAEA;AN+zEA;AACA;AACA;AACA;AM9zEA;AACE;AACE;AADO;AAGT;AACA;AAL4B;AAQ9B;AN+zEA;AACA;AACA;AACA;AM9zEA;AACE;AACA;AAFyB;AAK3B;AN+zEA;AACA;AACA;AACA;AACA;AACA;AM9zEA;AAEA;AN+zEA;AACA;AACA;AACA;AM9zEA;AACE;AACA;AACA;AACA;AAJqB;AAOvB;AN+zEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMh0EE;ANk0EF;AACA;AMh0EE;AACE;AACA;AACD;AAED;ANi0EF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMn0EI;AACD;AAED;ANo0EF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMp0EI;ANs0EJ;AMp0EI;AACE;AACD;ANs0EL;AACA;AMr0EI;AACE;AACD;ANu0EL;AACA;AMt0EI;AACE;AACD;ANw0EL;AACA;AMv0EI;AACE;ANy0EN;AMx0EM;AACE;AN00ER;AMz0EQ;AACE;AACD;AACC;AACA;AACD;AN20ET;AM10EQ;AACD;AACC;AACD;AN40EP;AM30EM;AACE;AACE;AACD;AACF;AACF;AN60EL;AACA;AMh3EsC;AAAA;ANm3EtC;AM90EI;AACE;ANg1EN;AM/0EM;AACE;AACD;AACF;ANi1EL;AM/0EI;AACD;AAED;ANg1EF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMh1EI;AACA;AACE;AACE;AACD;ANk1EP;AMr1Ea;ANu1Eb;AMl1EM;AACE;AACA;ANo1ER;AMn1EQ;AACE;ANq1EV;AMn1EU;AACE;AACD;AACF;AACF;AACF;ANq1EL;AMp1EI;AACD;AAED;ANq1EF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMr1EI;AACA;AACE;AACD;ANu1EL;AACA;AMt1EI;AACE;AACD;ANw1EL;AMv1EI;ANy1EJ;AMx1EI;AACE;AAAO;AAAiC;AAAxC;AACD;AN61EL;AM51EI;AN81EJ;AM71EI;AACE;AAAO;AAAiC;AAAxC;AACD;ANk2EL;AMj2EI;ANm2EJ;AMl2EI;AACE;AACD;ANo2EL;AMn2EI;AACD;ANq2EH;AACA;AACA;AMp2EA;ANs2EA;AACA;AACA;AACA;AACA;AACA;AACA;AMx2EA;AACE;AACA;AACE;AACE;AACE;AACE;AADkB;AADf;AADW;AAOpB;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfmB;AAiBrB;AACE;AACA;AACA;AACA;AACA;AACA;AANgB;AAQlB;AACE;AADc;AAGhB;AACE;AACA;AACA;AACE;AACE;AADkB;AADf;AAHU;AASnB;AACE;AACA;AAF2B;AAI7B;AACE;AADY;AAGd;AACE;AACA;AACA;AACE;AACE;AACA;AACA;AAHkB;AADf;AAOP;AACE;AADQ;AAVD;AAcX;AACE;AADc;AAGhB;AACE;AACE;AACE;AADkB;AADf;AAKP;AACA;AAPU;AASZ;AACE;AACA;AAFc;AAIhB;AACE;AACE;AACE;AADkB;AADf;AADI;AAOb;AACE;AACA;AAFa;AAIf;AACE;AADa;AAGf;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACE;AADkB;AADf;AAPI;AAab;AACE;AADa;AAGf;AACE;AACE;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfkB;AADd;AADL;AAqBL;AACE;AACA;AACA;AAHQ;AAKV;AACE;AADS;AAGX;AACE;AADU;AAGZ;AACE;AACE;AACE;AACA;AAFkB;AADR;AADP;AAQT;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AADM;AAGR;AACA;AAzBO;AA2BT;AACE;AACA;AACA;AACA;AAJQ;AAMV;AACE;AACA;AAFU;AAIZ;AACE;AADS;AAGX;AACE;AACA;AACA;AACA;AACA;AALQ;AAOV;AACE;AACE;AACE;AADkB;AADf;AAKP;AANQ;AAQV;AACE;AACA;AACE;AACE;AADkB;AADf;AAKP;AAPO;AAST;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBU;AAxNA;AA6Od;AACD;AN02ED;AACA;AACA;AACA;AACA;AACA;AACA;AO5zFA;AP8zFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO5zFA;AP8zFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO5zFO;AAEP;AP6zFA;AACA;AO7zFO;AAEP;AP8zFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO9zFO;AACL;AACA;AAFyB;APm0F3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQn3FA;ARq3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQn3FA;ARq3FA;AACA;AACA;AQn3FO;AACL;AACA;AACA;AACA;AAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZuB;ARm4FzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AS94FA;ATg5FA;ASh6FA;ATk6FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AS95FA;ATg6FA;AACA;AACA;AACA;AACA;AACA;AS95FO;AACL;AACE;AACE;AACD;ATg6FL;AS/5FI;AACD;AACF;ATi6FD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AUz7FA;AV27FA;AU17FA;AV47FA;AU37FA;AV67FA;AU57FA;AV87FA;AUj9FA;AVm9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AU58FA;AV88FA;AACA;AU58FO;AACL;AACA;AACA;AAHkC;AAMpC;AV68FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AU98FO;AAOL;AAJA;AAIA;AV48FF;AU58FE;AAHA;AAGA;AVg9FF;AUh9FE;AAFA;AAEA;AVo9FF;AUp9FE;AADA;AACA;AVw9FF;AUv9FE;AVy9FF;AUx9FE;AV09FF;AUz9FE;AAEI;AACE;AACA;AACE;AADyB;AAG3B;AACE;AADsB;AAGzB;AV09FP;AUz9FM;AACD;AACQ;AAAA;AAEP;AACE;AACD;AV29FP;AU19FM;AACD;AACJ;AAED;AV29FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AU39FO;AACL;AV69FF;AU19FE;AV49FF;AU39FE;AAKA;AACE;AACA;AACA;AACE;AVy9FN;AUx9FM;AACE;AAMD;AACF;AVq9FL;AUp9FI;AVs9FJ;AUr9FI;AACE;AACD;AVu9FL;AACA;AUt9FI;AACE;AACD;AVw9FL;AUv9FI;AAAQ;AAAkB;AAAnB;AACR;AACF;AV49FD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWllGA;AXolGA;AWnlGA;AXqlGA;AWplGA;AXslGA;AWrlGA;AXulGA;AWtlGA;AXwlGA;AWvlGA;AXylGA;AWxlGA;AX0lGA;AACA;AACA;AACA;AACA;AW5lGA;AX8lGA;AACA;AW5lGA;AAEA;AX6lGA;AACA;AACA;AW5lGA;AAEA;AX6lGA;AACA;AACA;AW5lGA;AAEA;AX6lGA;AACA;AACA;AACA;AACA;AW5lGA;AACE;AACA;AACD;AAED;AX6lGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AW7lGO;AACL;AACE;AACA;AACD;AX+lGH;AW9lGE;AACA;AXgmGF;AW/lGE;AACE;AACE;AACD;AACF;AACF;AAED;AXgmGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWhmGO;AACL;AACE;AACA;AACD;AXkmGH;AWjmGE;AACA;AACD;AAED;AXkmGA;AACA;AACA;AACA;AACA;AWlmGO;AACL;AACD;AAED;AXmmGA;AACA;AACA;AACA;AACA;AACA;AACA;AWnmGO;AACL;AACD;AAED;AXomGA;AACA;AACA;AACA;AWpmGO;AACL;AACD;AAED;AXqmGA;AACA;AACA;AACA;AACA;AACA;AACA;AWrmGO;AACL;AACA;AXumGF;AWtmGE;AACE;AACE;AAAsB;AAAmB;AACvC;AACD;AACF;AACC;AACD;AACF;AX0mGH;AWzmGE;AACE;AACD;AACF;AAED;AX0mGA;AACA;AACA;AACA;AACA;AW1mGO;AACL;AACA;AACA;AAH2B;AAM7B;AX2mGA;AACA;AW3mGA;AACE;AACA;AAFgB;AAKlB;AX4mGA;AACA;AACA;AACA;AACA;AACA;AACA;AW7mGE;AX+mGF;AACA;AW7mGE;AACE;AACA;AAEA;AX8mGJ;AW7mGI;AACD;AAED;AX8mGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWhnGI;AACE;AACD;AXknGL;AWjnGI;AXmnGJ;AWlnGI;AACE;AACD;AACC;AACA;AACD;AACF;AAED;AXmnGF;AACA;AACA;AACA;AACA;AACA;AWnnGI;AACD;AAED;AXonGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWlnGE;AXonGF;AACA;AACA;AACA;AACA;AACA;AACA;AWpnGI;AACA;AACD;AAED;AXqnGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWrnGI;AACA;AACD;AXunGH;AACA;AACA;AWtnGA;AXwnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AW5nGE;AX8nGF;AACA;AACA;AACA;AW5nGE;AAA6B;AX+nG/B;AW9nGI;AAEA;AX+nGJ;AW9nGI;AAJ2B;AAK5B;AAED;AXgoGF;AACA;AACA;AACA;AACA;AWloGI;AACA;AACD;AAED;AXmoGF;AACA;AACA;AWnoGI;AACA;AACA;AACD;AAED;AXooGF;AACA;AACA;AWpoGI;AACA;AACA;AACA;AACD;AAED;AXqoGF;AACA;AACA;AACA;AACA;AACA;AWroGI;AACD;AXuoGH;AACA;AACA;AWtoGA;AXwoGA;AACA;AACA;AACA;AACA;AACA;AACA;AW1oGE;AX4oGF;AACA;AW1oGE;AAAoB;AX6oGtB;AW5oGI;AACA;AACA;AX8oGJ;AW7oGI;AACA;AX+oGJ;AW9oGI;AACA;AXgpGJ;AW/oGI;AACA;AXipGJ;AWhpGI;AACA;AXkpGJ;AWjpGI;AAIA;AXgpGJ;AACA;AACA;AACA;AACA;AACA;AACA;AW/oGI;AACA;AXipGJ;AWhpGI;AAIA;AACE;AACE;AAAc;AAAmB;AAClC;AACF;AAED;AXgpGJ;AW/oGI;AXipGJ;AWhpGI;AACE;AACA;AACA;AACD;AXkpGL;AWhpGI;AACE;AACE;AACD;AACF;AACF;AAED;AXipGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWnpGI;AACA;AACD;AAED;AXopGF;AACA;AACA;AACA;AACA;AACA;AWppGI;AACA;AACD;AAED;AXqpGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWrpGI;AACA;AACD;AAED;AXspGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWtpGI;AXwpGJ;AWtpGI;AACE;AACA;AACD;AXwpGL;AACA;AWvpGI;AACE;AACD;AXypGL;AWxpGI;AACD;AAED;AXypGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AW1pGyB;AX4pGzB;AW3pGI;AAAyB;AAAkB;AX+pG/C;AW9pGI;AACE;AACA;AACA;AACD;AXgqGL;AW/pGI;AXiqGJ;AWhqGI;AACE;AACA;AACD;AACC;AACA;AACA;AACA;AACA;AAUI;AACA;AACA;AXypGV;AWjpGU;AACD;AACJ;AXmpGL;AWlpGI;AACD;AAED;AXmpGF;AACA;AACA;AACA;AACA;AACA;AACA;AWppG6B;AXspG7B;AWrpGI;AACA;AACA;AACA;AAKE;AACA;AACA;AACD;AXmpGL;AWlpGI;AACE;AACD;AACF;AAED;AXmpGF;AACA;AACA;AACA;AACA;AACA;AWnpGI;AACE;AACD;AXqpGL;AWppGI;AXspGJ;AWrpGI;AACE;AACD;AXupGL;AWtpGI;AACE;AACA;AAAkB;AAAmB;AACrC;AACD;AAED;AXypGJ;AACA;AWzpGI;AACE;AAGE;AACA;AACA;AACA;AACA;AACA;AAAG;AARC;AASC;AATD;AAYN;AACD;AX0pGL;AWzpGI;AACD;AAED;AX0pGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AW1pGI;AACA;AAAU;AAAO;AAClB;AX8pGH;AACA;AACA;AW7pGA;AX+pGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AW/pGO;AACL;AACA;AXiqGF;AACA;AACA;AWhqGE;AACE;AACE;AXkqGN;AWjqGM;AACE;AACA;AACD;AACC;AAMA;AAA8B;AAAD;AAC9B;AACF;AACC;AACA;AACD;AACF;AXgqGH;AW/pGE;AAA8B;AAAD;AAC9B;AXmqGD;AACA;AACA;AACA;AACA;AACA;AACA;AY9sHA;AZgtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY9sHA;AZgtHA;AACA;AACA;AY9sHO;AACL;AZgtHF;AACA;AY9sHE;AZgtHF;AY9sHE;AZgtHF;AACA;AY9sHE;AZgtHF;AY9sHE;AZgtHF;AACA;AACA;AY9sHE;AZgtHF;AY9sHE;AZgtHF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY9sHE;AZgtHF;AY9sHE;AZgtHF;AACA;AACA;AACA;AY9sHE;AZgtHF;AY9sHE;AZgtHF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY9sHE;AZgtHF;AY9sHE;AZgtHF;AACA;AY9sHE;AArD2B;AZswH7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AajyHA;AbmyHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AajyHA;AbmyHA;AACA;AACA;AACA;AACA;AACA;AajyHA;AAEA;AAKA;AAKA;Ab0xHA;AazxHO;AACL;AACA;AACA;AACA;Ab2xHF;Aa1xHE;Ab4xHF;AACA;Aa1xHE;AAEA;AACA;AAEA;Ab0xHF;AazxHE;Ab2xHF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AazxHE;AAvBkB;AbmzHpB;AatxHO;AACL;AADoB;Ab0xHtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Acv1HA;Ady1HA;Acx1HA;Ad01HA;Ac32HA;Ad62HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Acx2HA;Ad02HA;AACA;AACA;AACA;AACA;Acx2HO;AACL;AACD;AAED;Ady2HA;AACA;AACA;AACA;Acz2HA;AAEA;Ad02HA;AACA;AACA;AACA;Acz2HO;AACL;AACD;AAED;Ad02HA;AACA;AACA;AACA;AACA;AACA;Ac12HO;AACL;AACE;AACD;Ad42HH;Ac12HE;AACD;AAED;Ad22HA;AACA;AACA;AACA;AACA;AACA;Ac32HA;AACE;AACE;AACA;AACA;AACA;AAEA;Ad42HJ;Ac32HI;AAAmB;AAAO;AAC3B;AACC;AACD;AACF;AAED;Ad82HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac92HO;AACL;AACD;AAED;Ad+2HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac/2HO;AACL;AACD;AAED;Adg3HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ach3HO;AACL;Adk3HF;Ach3HE;AACA;AACD;Adk3HD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aep/HA;Afs/HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aep/HA;Afs/HA;AACA;AACA;AACA;Aep/HO;AACL;AACD;AAED;Afq/HA;AACA;AACA;AACA;AACA;AACA;Aer/HA;AACE;AACD;AAED;Afs/HA;AACA;AACA;AACA;AACA;AACA;Aet/HO;AACL;AACD;AAED;Afu/HA;AACA;AACA;AACA;AACA;AACA;AACA;Aev/HA;AACE;Afy/HF;Aex/HE;AACE;AACD;AACC;AACE;AACE;AACE;AACA;AACD;Af0/HT;Aez/HQ;AACD;AACF;Af2/HL;Ae1/HI;AACD;AACF;AAED;Af2/HA;AACA;AACA;AACA;AACA;AACA;Ae3/HO;AACL;AACE;AACD;AACF;AAED;Af4/HA;AACA;AACA;AACA;AACA;AACA;Ae5/HO;AACL;AACE;AACD;AACF;Af8/HD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB9nIA;AhBgoIA;AgB/nIA;AhBioIA;AgB5nIA;AhB8nIA;AgB7nIA;AhB+nIA;AgB9nIA;AhBgoIA;AgB/nIA;AhBioIA;AgB1pIA;AhB4pIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB9oIA;AACE;AACA;AACA;AACA;AACA;AACA;AANwB;AAQ1B;AAEA;AhB+oIA;AgB9oIO;AAEP;AhB+oIA;AACA;AgB/oIO;AAEP;AhBgpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBjpIO;AACL;AACE;AACA;AACD;AACD;AhBmpIF;AACA;AgBnpIE;AhBqpIF;AgBppIE;AACE;AACA;AACE;AACE;AACA;AACD;AACF;AACD;AAA0B;AAAD;AAC1B;AACC;AACA;AACE;AACE;AACA;AACD;AACF;AAAE;AAAmB;AACvB;AACF;AAED;AhBypIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBzpIO;AACL;AACE;AACD;AACF;AAED;AhB0pIA;AACA;AACA;AACA;AACA;AACA;AgB1pIO;AACL;AAAkC;AAAA;AACnC;AAED;AhB6pIA;AACA;AACA;AACA;AACA;AACA;AgB7pIO;AACL;AAA0B;AAAA;AAC3B;AAED;AhBgqIA;AACA;AACA;AACA;AACA;AgBhqIO;AACL;AACE;AACD;AACF;AAED;AhBiqIA;AACA;AACA;AACA;AACA;AgBjqIO;AACL;AACE;AACD;AACF;AAED;AhBkqIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBlqIO;AACL;AhBoqIF;AgBnqIE;AACE;AACD;AhBqqIH;AgBpqIE;AACD;AAED;AhBqqIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBrqIO;AACL;AACA;AACD;AAED;AhBsqIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBtqIO;AACL;AACE;AACD;AhBwqIH;AgBvqIE;AACD;AAED;AhBwqIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBxqIO;AACL;AACA;AACD;AAED;AhByqIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBzqIO;AACL;AhB2qIF;AgB1qIE;AACE;AACD;AhB4qIH;AACA;AgB1qIE;AhB4qIF;AgB3qIE;AACE;AhB6qIJ;AgB5qII;AACE;AACD;AACC;AACD;AACF;AhB8qIH;AgB7qIE;AACD;AAED;AhB8qIA;AACA;AACA;AACA;AACA;AACA;AgB9qIO;AACL;AACE;AACA;AACD;AhBgrIH;AgB/qIE;AhBirIF;AgB/qIE;AhBirIF;AgBhrIE;AACD;AAED;AhBirIA;AACA;AACA;AACA;AACA;AACA;AgBjrIO;AACL;AACA;AACE;AACD;AAED;AhBkrIF;AACA;AgBlrIE;AACE;AACD;AhBorIH;AgBnrIE;AACoB;AAAwB;AAG7C;AAED;AhBmrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBnrIO;AACL;AACE;AACE;AACD;AACF;AhBqrIH;AgBprIE;AACD;AAED;AhBqrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBrrIO;AACL;AACE;AACE;AACD;AACF;AhBurIH;AgBtrIE;AACD;AAED;AhBurIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBvrIO;AACL;AACE;AACD;AhByrIH;AgBvrIE;AACE;AACD;AACF;AAED;AhBwrIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBxrIO;AACL;AhB0rIF;AgBzrIE;AAKE;AACE;AACD;AACF;AhBurIH;AgBtrIE;AACD;AAED;AhBurIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBvrIO;AACL;AACA;AACA;AACE;AACD;AACF;AAED;AhBwrIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBxrIO;AACL;AAKE;AACE;AACD;AACF;AhBsrIH;AgBrrIE;AACD;AAED;AhBsrIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBtrIO;AACL;AhBwrIF;AgBvrIE;AAKE;AACE;AACD;AACF;AhBqrIH;AgBprIE;AACD;AAED;AhBqrIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBrrIO;AACL;AAKE;AACE;AACD;AACF;AhBmrIH;AgBlrIE;AACD;AAED;AhBmrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBnrIO;AACL;AhBqrIF;AgBprIE;AACE;AACE;AACD;AACF;AhBsrIH;AgBrrIE;AACD;AAED;AhBsrIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBtrIO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AhB0rIA;AACA;AACA;AACA;AACA;AACA;AACA;AgB1rIO;AACL;AACA;AACE;AACD;AACF;AAED;AhB2rIA;AACA;AACA;AACA;AACA;AACA;AACA;AgB3rIO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AhB+rIA;AACA;AACA;AACA;AACA;AACA;AACA;AgB/rIO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AhBmsIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBnsIO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AhBusIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBvsIO;AACL;AhBysIF;AgBnsIE;AACE;AACD;AhBqsIH;AgBpsIE;AACD;AAED;AhBqsIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBrsIO;AACL;AACA;AAAe;AAAO;AACvB;AAED;AhBwsIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBxsIA;AACE;AACA;AACA;AACA;AAAsB;AAAO;AAC7B;AACA;AACD;AAED;AhB2sIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB3sIO;AACL;AACE;AAAY;AAAO;AACpB;AhB+sIH;AACA;AgB7sIE;AACA;AACD;AAED;AhB8sIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB9sIO;AACL;AACE;AAAY;AAAO;AAGpB;AhBgtIH;AACA;AgB9sIE;AACD;AAED;AhB+sIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB/sIO;AAKL;AAA6D;AAAA;AhB+sI/D;AgBhtIE;AAGA;AACA;AhBgtIF;AgB/sIE;AACE;AhBitIJ;AgBhtII;AACE;AhBktIN;AgBjtIM;AACD;AACF;AhBmtIH;AgBltIE;AACD;AAED;AhBmtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBntIO;AACL;AhBqtIF;AgBptIE;AACE;AACE;AACD;AACF;AhBstIH;AgBltIE;AACD;AAED;AhBmtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBntIO;AACL;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAED;AhBotIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBptIO;AAAqC;AhButI5C;AgBrtIE;AACE;AACD;AACF;AAED;AhBstIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBttIO;AACL;AACA;AACA;AACA;AhBwtIF;AgBvtIE;AACE;AACD;AACC;AACD;AhBytIH;AACA;AgBvtIE;AACE;AACD;AhBytIH;AgBxtIE;AACD;AAED;AhBytIA;AACA;AACA;AACA;AACA;AACA;AgBztIO;AACL;AAKD;AAED;AhBstIA;AACA;AACA;AACA;AACA;AACA;AgBttIO;AACL;AAID;AAED;AhBotIA;AACA;AACA;AACA;AACA;AACA;AgBptIO;AACL;AAIA;AACD;AAED;AhBktIA;AACA;AACA;AACA;AACA;AACA;AgBltIO;AACL;AACE;AACD;AhBotIH;AgBntIE;AACD;AAED;AhBotIA;AACA;AACA;AACA;AACA;AgBptIA;AACE;AACD;AAED;AhBqtIA;AACA;AACA;AACA;AACA;AACA;AgBrtIO;AACL;AACE;AAAQ;AAAO;AAChB;AAEA;AACF;AAED;AhButIA;AACA;AACA;AACA;AACA;AACA;AgBvtIO;AACL;AACD;AAED;AhBwtIA;AACA;AACA;AACA;AACA;AACA;AgBxtIO;AACL;AAEA;AhBytIF;AgBxtIE;AAGE;AAEH;AAED;AhBstIA;AACA;AACA;AACA;AACA;AACA;AACA;AgBttIO;AACL;AhBwtIF;AgBvtIE;AACE;AACA;AACD;AAED;AhBwtIF;AACA;AgBxtIE;AACE;AACA;AACA;AACD;AhB0tIH;AgBxtIE;AACD;AAED;AhBytIA;AACA;AACA;AACA;AACA;AACA;AgBztIO;AACL;AhB2tIF;AgBptIE;AACE;AACD;AACF;AAED;AhBqtIA;AACA;AACA;AACA;AACA;AACA;AgBrtIO;AACL;AhButIF;AgBhtIE;AACE;AACA;AACD;AhBktIH;AgB7tIwC;AhB+tIxC;AgBltIE;AACE;AACD;AhBotIH;AgBntIE;AhBqtIF;AgB9sIE;AACE;AACD;AACF;AAED;AhB+sIA;AACA;AACA;AACA;AACA;AACA;AACA;AgB/sIO;AAAsC;AhBktI7C;AgBhtIE;AACE;AACD;AhBktIH;AgBttI6C;AhBwtI7C;AgBltIE;AACE;AACD;AhBotIH;AgBntIE;AAKA;AACD;AAED;AhBgtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBhtIO;AACL;AACD;AAED;AhBitIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBjtIO;AACL;AACE;AACD;AhBmtIH;AgBjtIE;AACA;AhBmtIF;AgB/sIE;AACE;AACD;AhBitIH;AACA;AgB/sIE;AACD;AAED;AhBgtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBhtIO;AACL;AACA;AhBktIF;AgBhtIE;AACE;AACE;AACD;AACC;AACD;AACF;AhBktIH;AgBhtIE;AACD;AAED;AhBitIA;AACA;AACA;AACA;AACA;AgBjtIO;AAAwC;AAE7C;AAAwB;AAAO;AAC/B;AAAsC;AAAO;AAC7C;AACD;AhButID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiB/mKA;AjBinKA;AiBhnKA;AjBknKA;AiBxmKA;AjB0mKA;AiBzmKA;AjB2mKA;AACA;AACA;AACA;AACA;AiB3oKA;AjB6oKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiB7nKA;AjB+nKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiB7nKO;AACL;AACS;AAAA;AAEV;AAED;AjB8nKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiB9nKO;AACL;AjBgoKF;AiB/nKE;AACE;AAAO;AAAkC;AAAzC;AACD;AjBooKH;AiBnoKE;AACD;AAED;AjBooKA;AACA;AACA;AACA;AACA;AACA;AiBpoKA;AACE;AACA;AACE;AACD;AjBsoKH;AiBroKE;AACD;AAED;AjBsoKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBtoKO;AACL;AAKc;AAAA;AACf;AAED;AjBooKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBpoKO;AAML;AjBioKF;AiBhoKE;AACE;AAAO;AAAkC;AAAzC;AACD;AjBqoKH;AiBpoKE;AACA;AAEQ;AAAA;AAIJ;AACA;AACA;AACE;AACD;AACC;AACD;AjBmoKP;AiBloKM;AACD;AACJ;AAED;AjBmoKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBnoKO;AAKL;AjBioKF;AiBhoKE;AACE;AAAO;AAAkC;AAAzC;AACD;AjBqoKH;AiBpoKE;AACA;AjBsoKF;AiBpoKE;AACE;AACD;AACC;AACA;AACD;AACF;AAED;AjBqoKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBroKA;AACE;AAAO;AAAwB;AAA/B;AAUD;AAED;AjBgoKA;AACA;AACA;AACA;AACA;AACA;AiBhoKO;AACL;AACA;AACE;AACD;AjBkoKH;AiBjoKE;AAEA;AjBkoKF;AiBjoKE;AjBmoKF;AiBhoKE;AACE;AACA;AAGA;AACD;AjBgoKH;AiB/nKE;AACD;AAED;AjBgoKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBhoKO;AACL;AACE;AACD;AACF;AAED;AjBioKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBjoKA;AACE;AACD;AAED;AjBkoKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBloKA;AACE;AjBooKF;AACA;AACA;AACA;AACA;AACA;AiBjoKE;AACA;AACA;AACE;AACD;AjBmoKH;AiBjoKE;AACA;AAAO;AAAkC;AAAzC;AAID;AAED;AjBkoKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBloKA;AACE;AAEQ;AAAA;AAEJ;AACA;AACA;AACE;AACD;AACC;AACD;AjBmoKP;AiBloKM;AACD;AACJ;AjBooKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBt7KA;AlBw7KA;AkBv7KA;AlBy7KA;AkBx7KA;AlB07KA;AkBn7KA;AlBq7KA;AkBp7KA;AlBs7KA;AkBr7KA;AlBu7KA;AkBt7KA;AlBw7KA;AkBv7KA;AlBy7KA;AkBx7KA;AlB07KA;AkBz7KA;AlB27KA;AkB17KA;AlB47KA;AkB37KA;AlB67KA;AkB57KA;AlB87KA;AkBh+KA;AlBk+KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB58KA;AlB88KA;AACA;AkB58KA;AAEA;AlB68KA;AACA;AACA;AkB58KA;AAEA;AlB68KA;AACA;AACA;AkB58KA;AAEA;AlB68KA;AACA;AACA;AACA;AACA;AkB58KA;AAEA;AlB68KA;AACA;AACA;AACA;AACA;AkB58KA;AAEA;AlB68KA;AACA;AACA;AACA;AkB58KA;AlB88KA;AkB58KA;AAEA;AlB68KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB58KA;AACE;AACE;AACD;AlB88KH;AkB78KE;AACD;AAED;AlB88KA;AACA;AACA;AACA;AACA;AACA;AACA;AkB98KA;AACE;AACA;AACA;AACD;AAED;AlB+8KA;AACA;AACA;AACA;AACA;AACA;AkB/8KA;AACE;AACE;AACA;AAAsB;AAA4B;AACnD;AACC;AACD;AACF;AAED;AlBk9KA;AACA;AACA;AACA;AACA;AACA;AkBl9KA;AAEA;AlBm9KA;AACA;AACA;AACA;AACA;AkBl9KO;AACL;AlBo9KF;AkBn9KE;AAME;AAAuB;AAAuB;AAC/C;AACF;AAED;AlBi9KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBj9KO;AACL;AACE;AACA;AlBm9KJ;AkBl9KI;AACE;AACE;AAAkC;AAAuB;AACzD;AACD;AACC;AACA;AACA;AACD;AACF;AACC;AACD;AlBs9KL;AACA;AkBr9KI;AACE;AACE;AAGA;AACD;AACF;AlBq9KL;AkBn9KI;AACE;AAAO;AAAuB;AAA9B;AACD;AlBw9KL;AkBv9KI;AlBy9KJ;AkBt9KI;AlBw9KJ;AkBv9KI;AACE;AlBy9KN;AkBx9KM;AACE;AACA;AACD;AACF;AlB09KL;AACA;AkBx9KI;AACE;AlB09KN;AkBz9KM;AACE;AACD;AACC;AACE;AACD;AACC;AACD;AACC;AACD;AACF;AACF;AlB29KL;AkB19KI;AACE;AACD;AAGD;AlB09KJ;AACA;AkB19KI;AAQD;AACC;AACE;AACD;AACF;AlBq9KH;AkBp9KE;AAAO;AAAuB;AAA9B;AACD;AAED;AlBw9KA;AACA;AACA;AACA;AACA;AkBx9KO;AACL;AACD;AAED;AlBy9KA;AACA;AACA;AACA;AACA;AkBz9KO;AACL;AACE;AACD;AlB29KH;AkB19KE;AACE;AACD;AlB49KH;AkB39KE;AACE;AACD;AlB69KH;AkB59KE;AACD;AAED;AlB69KA;AACA;AACA;AACA;AACA;AkB79KO;AACL;AACD;AAED;AlB89KA;AACA;AACA;AACA;AACA;AkB99KO;AACL;AACE;AACD;AlBg+KH;AkB/9KE;AACE;AACD;AlBi+KH;AkBh+KE;AACE;AACD;AlBk+KH;AkBj+KE;AACD;AAED;AlBk+KA;AACA;AACA;AACA;AACA;AkBl+KO;AACL;AAAc;AAA0B;AACxC;AACE;AAME;AACA;AACD;AlBi+KL;AkBh+KI;AACD;AACF;AAED;AlBi+KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBj+KA;AAAsD;AlBo+KtD;AkBn+KE;AACA;AACE;AACD;AlBq+KH;AkBp+KE;AACE;AACD;AlBs+KH;AkBr+KE;AlBu+KF;AkBt+KE;AACE;AACD;AAEA;AlBu+KH;AkBt+KE;AACE;AACA;AACA;AACA;AACD;AlBw+KH;AkBv+KE;AlBy+KF;AkBj+KE;AACE;AACE;AACE;AAEE;AAA4B;AAG7B;AACF;AAEA;AACF;AACF;AACF;AAED;AlB+9KA;AACA;AACA;AACA;AACA;AACA;AACA;AkB/9KO;AACL;AACA;AACA;AACA;AACE;AACE;AACA;AACA;AACD;AACF;AACF;AAED;AlBg+KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBh+KO;AACL;AlBk+KF;AkBj+KE;AACE;AACD;AlBm+KH;AkBl+KE;AACA;AACA;AlBo+KF;AkBn+KE;AACE;AACD;AlBq+KH;AkBp+KE;AlBs+KF;AkBr+KE;AACE;AACD;AlBu+KH;AkBt+KE;AACE;AACE;AACD;AlBw+KL;AkBv+KI;AACA;AACD;AACF;AAED;AlBw+KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBx+KO;AACL;AACE;AAA2B;AAC3B;AAA2B;AAC3B;AAA2B;AAC3B;AAA6B;AAC7B;AAA6B;AAC7B;AAA2B;AAC3B;AlBg/KJ;AkBv/Kc;AASb;AAED;AlBg/KA;AACA;AACA;AACA;AACA;AACA;AkBh/KA;AACE;AACE;AACE;AACD;AACC;AACA;AACD;AACF;AlBk/KH;AkBj/KE;AACE;AACD;AlBm/KH;AkBj/KE;AACD;AAED;AlBk/KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBl/KO;AAQL;AAEA;AACA;AACA;AACA;AACA;AlB4+KF;AkB3+KE;AlB6+KF;AkB5+KE;AACE;AACD;AlB8+KH;AkB7+KE;AACE;AACD;AlB++KH;AkB7+KE;AACA;AAGA;AlB6+KF;AkB5+KE;AAGE;AACA;AAEA;AACA;AAEA;AlB0+KJ;AkBx+KI;AACE;AACD;AACF;AlB0+KH;AkBx+KE;AlB0+KF;AkBv+KE;AACE;AACD;AAGD;AACA;AACA;AlBu+KF;AACA;AkBv+KE;AAAa;AAA4B;AACzC;AACA;AACA;AACA;AAGA;AlBy+KF;AkBx+KE;AACA;AAEA;AlBy+KF;AkBx+KE;AACE;AACA;AACD;AACC;AACD;AlB0+KH;AkBx+KE;AACE;AACD;AlB0+KH;AkBx+KE;AlB0+KF;AkBv+KE;AACE;AACD;AAGD;AlBu+KF;AACA;AkBv+KE;AlBy+KF;AkBt+KE;AlBw+KF;AkBt+KE;AACE;AACD;AlBw+KH;AkBv+KE;AACE;AACD;AlBy+KH;AACA;AkBx+KE;AACE;AACD;AlB0+KH;AkBx+KE;AACE;AACA;AlB0+KJ;AkBz+KI;AACE;AACD;AlB2+KL;AkB1+KI;AACE;AACD;AACF;AlB4+KH;AkB1+KE;AACE;AACD;AlB4+KH;AkB3+KE;AAEA;AACA;AlB4+KF;AkB3+KE;AACE;AACA;AACD;AlB6+KH;AkB5+KE;AlB8+KF;AkB5+KE;AACE;AlB8+KJ;AkB3+KI;AlB6+KJ;AkB3+KI;AACE;AACD;AlB6+KL;AkB3+KI;AACE;AACD;AlB6+KL;AACA;AkB3+KI;AACE;AACD;AACF;AACC;AACA;AACA;AACD;AlB6+KH;AkB5+KE;AACA;AACA;AAEA;AAEA;AACD;AAED;AlB2+KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB3+KO;AACL;AACE;AACD;AlB6+KH;AkB5+KE;AlB8+KF;AkB7+KE;AACE;AACE;AACD;AACF;AlB++KH;AkB9+KE;AACD;AAED;AlB++KA;AACA;AACA;AACA;AkB/+KO;AACL;AACD;AAED;AlBg/KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBh/KO;AACL;AACA;AlBk/KF;AkBj/KE;AACE;AACD;AlBm/KH;AkBl/KE;AlBo/KF;AkBn/KE;AACE;AACD;AAAW;AlBs/Kd;AkBl/KI;AACE;AACD;AlBo/KL;AACA;AkBl/KI;AACE;AACD;AAGD;AACA;AACA;AACA;AACA;AlBk/KJ;AACA;AkBl/KI;AlBo/KJ;AkBn/KI;AACE;AACD;AlBq/KL;AACA;AkBn/KI;AACE;AACD;AACF;AlBq/KH;AkBn/KE;AACD;AAED;AlBo/KA;AACA;AACA;AACA;AACA;AkBp/KO;AACL;AACA;AACA;AACE;AACE;AACA;AAFgB;AAIlB;AACD;AACF;AAED;AlBq/KA;AACA;AACA;AACA;AACA;AACA;AkBr/KA;AACE;AlBu/KF;AkBp/KE;AACD;AlBs/KD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB9sMA;AnBgtMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB9sMA;AnBgtMA;AACA;AACA;AACA;AmB9sMA;AAEA;AnB+sMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB9sMO;AAML;AACA;AACA;AnB2sMF;AACA;AACA;AmB1sME;AnB4sMF;AmB1sME;AACE;AACE;AACD;AACC;AACA;AnB4sMN;AmB3sMM;AACD;AACF;AnB6sMH;AmB5sME;AACA;AnB8sMF;AmB7sME;AACE;AACD;AnB+sMH;AmB9sME;AAKA;AACE;AACE;AAKD;AnBwsML;AACA;AmBvsMI;AACA;AACA;AACD;AACF;AAED;AnBwsMA;AACA;AACA;AACA;AACA;AACA;AACA;AmBxsMO;AACL;AACA;AACE;AACD;AnB0sMH;AmBxsME;AnB0sMF;AmBzsME;AACE;AACA;AACE;AACE;AACD;AnB2sMP;AmB9sMoB;AAKhB;AACA;AACD;AAEA;AnB2sMH;AmB1sME;AACD;AAED;AnB2sMA;AACA;AACA;AACA;AmB3sMO;AACL;AACD;AnB6sMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBh0MA;ApBk0MA;AoBj0MA;ApBm0MA;AoBl0MA;ApBo0MA;AoBt1MA;ApBw1MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBl1MA;AACA;AAEA;ApBm1MA;AoBl1MO;AAEP;ApBm1MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBp1MO;AACL;AAAkB;AAAiC;AAAC;AAAD;AACnD;AAEA;ApBy1MF;AoBx1ME;AACE;AACD;AACC;AACA;AACA;AAMA;AACD;AACF;AAED;ApBo1MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBp1MO;AACL;AAMD;AAED;ApBg1MA;AACA;AACA;AACA;AACA;AACA;AoBh1MO;AACL;AAAO;AAA6C;AAApD;AACD;AAED;ApBo1MA;AACA;AACA;AACA;AACA;AACA;AoBp1MO;AACL;AAAO;AAA6C;AAApD;AACD;AAED;ApBw1MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBx1MO;AACL;AACA;AAII;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAGH;AACD;AAED;ApBo1MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBp1MO;AAML;AACA;AACE;AACD;AACD;ApBi1MF;AoBh1ME;AACE;AACD;ApBk1MH;AoBj1ME;AACD;AAED;ApBk1MA;AACA;AACA;AACA;AACA;AACA;AoBl1MO;AACL;AAKE;AACC;AAEJ;AAED;ApB80MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoB90MO;AACL;AACA;ApBg1MF;AoB/0ME;AACE;AACD;ApBi1MH;AoBh1ME;ApBk1MF;AoBj1ME;AAIE;AACD;ApBg1MH;AoB/0ME;AACE;AACA;AACA;AACE;AACA;AACA;AACE;AADgE;AAGnE;AACC;AACD;ApBi1ML;AACA;AoBh1MI;AACE;AACD;ApBk1ML;AoBj1MI;AAEA;AACA;ApBk1MJ;AoBj1MI;AACE;AAEO;AAAA;ApBm1Mb;AoBj1MM;AACE;AACD;AACF;ApBm1ML;AoBl1MI;AACD;AAED;AAEI;AACE;AACD;ApBk1MP;AoBj1MM;AACD;AAEC;AACE;AACD;ApBk1MP;AoBj1MM;AACD;AAEJ;AAED;ApBi1MA;AACA;AACA;AACA;AACA;AACA;AoBj1MA;AACE;AACA;AACA;AACA;AACE;AAED;AAGD;ApBg1MF;AACA;AoBh1ME;ApBk1MF;AoBj1ME;AACE;AACD;ApBm1MH;AoBl1ME;AACD;AAED;ApBm1MA;AACA;AACA;AACA;AACA;AACA;AoBn1MA;AACE;AACD;AAED;ApBo1MA;AACA;AACA;AACA;AACA;AACA;AoBp1MO;AACL;AACD;ApBs1MD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB7lNA;ArB+lNA;AqB9lNA;ArBgmNA;AqB/lNA;ArBimNA;AqBhmNA;ArBkmNA;AqB5nNA;ArB8nNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB5nNA;ArB8nNA;AACA;AACA;AACA;AACA;AACA;AqBvnNA;AACA;AAEA;ArBwnNA;AqBvnNA;AAEA;ArBwnNA;AqBvnNA;AAEA;ArBwnNA;AACA;AACA;AACA;AACA;AACA;AqBvnNO;AAEP;ArBwnNA;AACA;AACA;AACA;AACA;AACA;AACA;AqBznNO;AACL;AACD;AAED;ArB0nNA;AACA;AACA;AACA;AACA;AACA;AqB1nNO;AACL;AAGD;AAED;ArBynNA;AACA;AACA;AACA;AACA;AACA;AACA;AqBznNO;AACL;AACA;AACD;AAED;ArB0nNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB1nNO;AAML;AAAwC;AAAO;AAC/C;ArBynNF;AqBxnNE;AACE;AACA;ArB0nNJ;AqBxnNI;AACE;AACA;AACA;ArB0nNN;AqBxnNM;AACE;AAOD;AACF;AACF;ArBonNH;AqBnnNE;AACD;AAED;ArBonNA;AACA;AACA;AACA;AACA;AACA;AACA;AqBpnNO;AACL;AACE;AACD;ArBsnNH;AqBrnNE;AACA;ArBunNF;AqBpnNE;AACE;AACE;ArBsnNN;AqBrnNM;AACE;AACD;AACF;AACF;ArBunNH;AACA;AqBtnNE;AAKE;AACA;ArBonNJ;AqBjnNI;AACE;ArBmnNN;AqBlnNM;AACE;AACE;AACD;AACF;AACF;AACF;ArBonNH;AqBlnNE;ArBonNF;AqBlnNE;AAKE;AACA;AACA;ArBgnNJ;AqB/mNI;AACE;ArBinNN;AqBhnNM;AACE;AACD;ArBknNP;AqBjnNM;AACE;AACD;AACF;AACF;ArBmnNH;AqBlnNE;AACD;AAED;ArBmnNA;AACA;AACA;AACA;AACA;AACA;AACA;AqBnnNO;AACL;AACD;AAED;ArBonNA;AACA;AACA;AACA;AACA;AACA;AqBpnNA;AACE;ArBsnNF;AqBrnNE;AACE;AACE;AACD;AACF;AACC;AACD;ArBunNH;AqBtnNE;AAEA;ArBunNF;AqBtnNE;AACE;AACE;AACD;ArBwnNL;AqBvnNI;AACE;AACD;AACC;AACD;AACF;ArBynNH;AqBxnNE;AACD;AAED;ArBynNA;AACA;AACA;AACA;AACA;AACA;AqBznNA;AACE;ArB2nNF;AqB1nNE;AACE;AACD;ArB4nNH;AqB3nNE;AACE;AACE;AACD;AACF;AACC;AACD;AACF;AAED;ArB4nNA;AACA;AACA;AACA;AACA;AACA;AACA;AqB5nNO;AACL;AACD;AAED;ArB6nNA;AACA;AACA;AACA;AACA;AACA;AqB7nNO;AACL;AACA;AACD;AAED;ArB8nNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB9nNA;AACE;AACA;AACD;AAED;ArB+nNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB/nNO;AACL;AADsC;AAIxC;ArBgoNA;AACA;AACA;AACA;AACA;AACA;AACA;AqBjoNA;AACE;AACA;AACD;AAED;ArBkoNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBloNO;AACL;AACA;ArBooNF;AqBnoNE;AACE;AACA;AACA;AACE;AACD;ArBqoNL;AqBpoNI;AACE;AAEA;AACD;ArBqoNL;AqBnoNI;AAIE;AACA;AACD;AAGD;AACA;ArBgoNJ;AACA;AqBhoNI;AAEsB;AAAO;AAC3B;AAEA;AAGA;AAED;AACF;ArB8nNH;AqB7nNE;AACD;AAED;ArB8nNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB9nNO;AACL;AAGD;AAED;ArB6nNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB7nNO;AACL;AACA;AACA;AACD;ArB+nND;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBzgOA;AtB2gOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBzgOA;AtB2gOA;AACA;AACA;AACA;AACA;AACA;AsBzgOO;AACL;AACA;AACE;AACD;AACF;AAED;AtB0gOA;AACA;AACA;AACA;AACA;AACA;AsB1gOO;AACL;AACA;AACA;AACE;AACA;AACA;AACD;AACF;AAED;AtB2gOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB3gOO;AACL;AACA;AtB6gOF;AsB5gOE;AACE;AACD;AtB8gOH;AsB7gOE;AACD;AtB+gOD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBpkOA;AvBskOA;AuBrkOA;AvBukOA;AuBtkOA;AvBwkOA;AuBvkOA;AvBykOA;AACA;AACA;AuBzkOA;AvB2kOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBzkOO;AACL;AvB2kOF;AuBzkOE;AACE;AACD;AACC;AACD;AACC;AACD;AACF;AAED;AvB0kOA;AACA;AACA;AACA;AACA;AACA;AuB1kOO;AACL;AACA;AACD;AAED;AvB2kOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB7kOE;AACA;AAAkC;AAAtB;AAAsB;AvBklOpC;AuBjlOI;AACA;AACD;AAED;AvBklOF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBplOI;AACA;AACA;AACA;AACA;AACD;AAED;AvBqlOF;AACA;AACA;AuBrlOI;AACD;AAED;AvBslOF;AACA;AACA;AuBvlOY;AvBylOZ;AuBxlOI;AACA;AACE;AACA;AAAoB;AAAA;AACrB;AAGD;AvB0lOJ;AuBzlOI;AACA;AAAO;AAA0C;AAC/C;AACE;AACK;AAAkC;AAAnC;AACC;AAAkB;AAAnB;AACL;AAL8C;AAAjD;AAOD;AAED;AvBimOF;AACA;AACA;AuBlmOgB;AvBomOhB;AuBnmOI;AAEA;AACE;AACA;AAAoB;AAAA;AACrB;AAED;AACD;AvBqmOH;AACA;AACA;AuBpmOA;AvBsmOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB1mOE;AACA;AACE;AACA;AAEA;AACD;AAED;AvB0mOF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB5mOI;AACA;AACA;AACE;AACD;AvB8mOL;AuB5mOI;AvB8mOJ;AuB7mOI;AACE;AACD;AACF;AAED;AvB8mOF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB9mOI;AACD;AAED;AvB+mOF;AACA;AACA;AuB/mOI;AACD;AAED;AvBgnOF;AACA;AACA;AuBhnOI;AACD;AAED;AvBinOF;AACA;AACA;AuBjnOI;AACD;AvBmnOH;AACA;AACA;AuBlnOA;AvBonOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBxnOE;AACA;AAAsB;AvB2nOxB;AuB1nOI;AvB4nOJ;AuB1nOI;AACE;AACE;AACE;AvB4nOV;AuB3nOU;AACD;AACF;AACF;AvB6nOL;AuBvoOwB;AAWrB;AAED;AvB8nOF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBhoOI;AACA;AACE;AACD;AACC;AACD;AACF;AvBkoOH;AACA;AACA;AuBjoOA;AvBmoOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBroOE;AvBuoOF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBroOE;AAEA;AvBsoOF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBvoOE;AvByoOF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBxoOE;AvB0oOF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBzoOE;AvB2oOF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB5oOA;AvB8oOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB9oOA;AACE;AACD;AvBgpOD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBt8OA;AxBw8OA;AwBx9OA;AxB09OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBt9OA;AACA;AAEA;AxBu9OA;AACA;AACA;AACA;AwBt9OO;AACL;AACD;AAED;AxBu9OA;AACA;AACA;AACA;AACA;AwBv9OO;AACL;AACD;AAED;AxBw9OA;AACA;AACA;AACA;AACA;AACA;AACA;AwBx9OO;AAA+B;AAEpC;AAAa;AAA4B;AxB49O3C;AwB19OE;AxB49OF;AwB19OE;AACA;AxB49OF;AwBn+OsC;AAUlC;AAVkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AxB6+OtC;AwBj+OI;AAOE;AACD;AxB69OL;AwB39OI;AACE;AACD;AxB69OL;AwB39OI;AACE;AACE;AACE;AACD;AACF;AACD;AACD;AxB69OL;AwB59OI;AAlCkC;AxBigPtC;AwBx/OE;AAA0C;AxB2/O5C;AwB3/O4C;AA0BzC;AxBo+OH;AwBl+OE;AxBo+OF;AwBn+OE;AAAuC;AxBs+OzC;AwBp+OI;AACE;AACD;AxBs+OL;AwBr+OI;AACD;AAGD;AACA;AACA;AACA;AACA;AxBq+OF;AACA;AwBr+OE;AACE;AACE;AACD;AACF;AAED;AACD;AAED;AxBq+OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBr+OO;AAAmC;AAAA;AAAA;AAIxC;AxBu+OF;AwBr+OE;AACE;AxBu+OJ;AwBr+OI;AACE;AACD;AxBu+OL;AwBr+OI;AACE;AACD;AxBu+OL;AwBr+OI;AACE;AACD;AACF;AxBu+OH;AwBt+OE;AACD;AAED;AxBu+OA;AACA;AACA;AACA;AACA;AACA;AwBv+OA;AAAiC;AAAA;AAE/B;AACD;AAED;AxBy+OA;AACA;AACA;AACA;AACA;AACA;AwBz+OO;AACL;AACE;AACD;AxB2+OH;AwBz+OE;AxB2+OF;AwB1+OE;AACE;AACE;AACD;AACF;AxB4+OH;AwB3+OE;AACD;AAED;AxB4+OA;AACA;AACA;AACA;AACA;AACA;AwB5+OO;AACL;AACE;AACA;AAAA;AxB++OJ;AwB7+OM;AACE;AACE;AACD;AACF;AxB++OP;AwB9+OM;AxBg/ON;AwB/+OI;AACA;AACE;AxBi/ON;AwBh/OI;AACE;AAdJ;AxBigPF;AwBj/OE;AACD;AAED;AxBk/OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBl/OO;AACL;AACE;AACE;AACE;AACD;AACC;AACD;AxBo/OP;AwBn/OI;AACE;AxBq/ON;AwBp/OI;AACE;AACA;AxBs/ON;AwBr/OI;AACE;AAbJ;AAiBD;AxBq/OD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBptPA;AzBstPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBptPA;AzBstPA;AACA;AACA;AACA;AACA;AyBptPA;AACE;AACA;AAAwC;AAAA;AACxC;AACD;AAED;AzButPA;AACA;AACA;AACA;AACA;AyBvtPO;AACL;AACD;AAED;AzBwtPA;AACA;AACA;AACA;AACA;AyBxtPO;AACL;AACD;AzB0tPD;AACA;AACA;AACA;AACA;AACA;AACA;A0B1wPA;A1B4wPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B1wPA;A1B4wPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B1wPO;AACL;AACD;A1B4wPD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2BhyPA;A3BkyPA;A2BjyPA;A3BmyPA;A2BzzPA;A3B2zPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2BzzPA;A3B2zPA;AACA;AACA;A2BrzPA;AACA;A3BuzPA;A2BrzPA;A3BuzPA;AACA;AACA;A2BrzPA;AAEA;A3BszPA;AACA;AACA;AACA;A2BrzPA;AAEA;A3BszPA;AACA;AACA;AACA;A2BrzPA;AAEA;A3BszPA;AACA;AACA;AACA;A2BrzPA;AAEA;A3BszPA;AACA;AACA;AACA;AACA;A2BrzPO;AACL;A3BuzPF;A2BtzPE;AACE;AACE;AACD;A3BwzPL;A2BvzPI;AACA;AACD;A3ByzPH;A2BxzPE;AAAO;AAA4B;AAAnC;AACD;AAED;A3B4zPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2B5zPO;AACL;AACA;AACE;AACD;A3B8zPH;AACA;A2B7zPE;AACA;A3B+zPF;A2B9zPE;AACE;A3Bg0PJ;A2B/zPI;AAME;AACA;AACD;A3B4zPL;A2B3zPI;AACA;AACD;A3B6zPH;A2B5zPE;AACD;AAED;A3B6zPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2B7zPO;AACL;AAAO;AAA4B;AAAW;AAAuB;AAArE;AACD;AAED;A3Bm0PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Bn0PO;AACL;AACE;AACD;AACC;AACE;AACD;A3Bq0PL;A2Bp0PI;AACD;AACF;AAED;A3Bq0PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Br0PO;AACL;AACA;A3Bu0PF;A2Bt0PE;AACE;AACD;A3Bw0PH;A2Bv0PE;A3By0PF;A2Bx0PE;AACE;AACD;A3B00PH;A2Bz0PE;AACE;AACD;AACC;AACD;AACF;AAED;A3B00PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2B10PO;AAAqC;AAAX;AAAW;A3B+0P5C;A2B90PE;AACE;AACD;A3Bg1PH;A2B/0PE;AACE;AACD;AACD;A3Bi1PF;AACA;A2Bj1PE;AAAgB;AAAG;AAAG;AAAP;A3Bu1PjB;A2Bt1PE;AAAyB;AAAA;AAAA;AAAA;A3B41P3B;AACA;A2B11PI;AACE;AACE;AACD;AACC;AACE;AACD;A3B41PT;A2B31PQ;AACE;AAAY;AAAS;AAAS;AAAnB;AACZ;A3Bi2PT;A2Bh2PQ;AACD;AACC;AAA0B;AAAwB;AAClD;AAA0B;AAAwB;A3Bs2P1D;A2Br2PQ;AACE;AACD;A3Bu2PT;A2Bt2PQ;AACE;AACA;AAAY;AAAS;AAAS;AAAnB;AACZ;A3B42PT;A2B32PQ;AACD;AACF;A3B62PL;AACA;A2B52PI;AACE;AACD;AACF;A3B82PH;A2B72PE;AACD;AAED;A3B82PA;AACA;AACA;AACA;AACA;AACA;A2B92PA;AACE;AACE;AACD;A3Bg3PH;A2B/2PE;AACE;AAAwB;AAG3B;AAED;A3B+2PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2B/2PO;AACL;AAAO;AAA4B;AAAnC;AACD;AAED;A3Bm3PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Bn3PO;AACL;AAAO;AAA4C;AAAnD;AACD;AAED;A3Bu3PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Bv3PO;AACL;AACD;A3By3PD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4B9nQA;A5BgoQA;A4B/nQA;A5BioQA;A4BhoQA;A5BkoQA;A4BjoQA;A5BmoQA;A4BloQA;A5BooQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4B9oQA;A5BgpQA;AACA;A4B9oQO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAToB;AAYtB;A5B+oQA;AACA;AACA;AACA;AACA;AACA;A4B/oQO;AACL;AACA;AACA;AACA;AAJ4B;AAO9B;A5BgpQA;AACA;AACA;AACA;AACA;A4BhpQO;AAEP;A5BipQA;AACA;AACA;AACA;AACA;AACA;AACA;A4BjpQA;AAEA;A5BkpQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4BjpQO;AACL;AAAc;AAAc;AAAf;AACb;AAAkB;AAAc;AAAf;AACjB;AACA;AACA;AAAqB;AAAe;AAAhB;AALY;AAQlC;A5B2pQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4B3pQO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAd+B;AAgBjC;A5B6pQA;AACA;AACA;AACA;AACA;AACA;AACA;A4B7pQA;AAEA;A5B8pQA;AACA;AACA;AACA;AACA;A4B7pQO;AACL;AACE;AACE;AACD;AACF;A5B+pQH;A4B9pQE;AACD;AAED;A5B+pQA;AACA;AACA;AACA;AACA;A4B/pQO;AACL;AACD;AAED;A5BgqQA;AACA;AACA;AACA;AACA;AACA;A4BhqQO;AACL;AASD;AAED;A5BypQA;AACA;AACA;AACA;AACA;AACA;A4BzpQO;AACL;AACD;AAED;A5B0pQA;AACA;AACA;AACA;AACA;AACA;A4B1pQO;AACL;AACA;AACD;AAED;A5B2pQA;AACA;AACA;AACA;AACA;AACA;AACA;A4B3pQO;AACL;AACE;AACD;A5B6pQH;A4B5pQE;AACE;AACD;A5B8pQH;A4B7pQE;AACE;AACD;A5B+pQH;A4B9pQE;AACE;AACD;A5BgqQH;A4B/pQE;AACD;AAED;A5BgqQA;AACA;AACA;AACA;AACA;AACA;AACA;A4BhqQO;AACL;AAKA;AAAO;AAA2B;AAAlC;AACD;AAED;A5BgqQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4BhqQO;AACL;AAKA;AACD;AAED;A5B6pQA;AACA;AACA;AACA;AACA;AACA;A4B7pQO;AACL;AACA;AACA;AAKA;AACD;AAED;A5B0pQA;AACA;AACA;AACA;AACA;AACA;A4B1pQO;AACL;AACA;AACD;AAED;A5B2pQA;AACA;AACA;AACA;AACA;AACA;AACA;A4B3pQO;AACL;AACA;AACD;AAED;A5B4pQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4B5pQO;AACL;AACA;A5B8pQF;A4B7pQE;AACE;AACA;AACA;A5B+pQJ;A4B7pQI;AACA;AACE;AACA;AAFc;AAIhB;AACA;AACE;AAAa;AAAO;AACpB;AAAc;AAAO;AAFO;AAI9B;AACD;A5BmqQH;A4BlqQE;AAAO;AAA8B;AAArC;AACD;AAED;A5BsqQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4BtqQO;AACL;AACA;AACD;AAED;A5BuqQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4BvqQO;AACL;AACE;AACD;A5ByqQH;A4BxqQE;AACD;AAED;A5ByqQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4BzqQO;AACL;AACA;AACA;AACA;AACA;A5B2qQF;A4B1qQE;AACE;AAAe;AAAwB;A5B8qQ3C;A4B3qQI;AAIE;AACA;AAED;AACC;AAEA;A5BwqQN;A4BvqQM;AACD;A5ByqQL;A4BxqQI;AACD;AAGD;AACA;AAEA;A5BuqQF;AACA;A4BvqQE;AACA;AACA;AACA;AACA;A5ByqQF;A4BtqQE;AACA;AACA;A5BwqQF;A4BvqQE;AAEA;AACA;A5BwqQF;A4BvqQE;AAEA;A5BwqQF;A4BrqQE;AACA;AACA;A5BuqQF;A4BpqQE;AAOE;AACA;AACA;AACA;AAIA;AACD;AACC;AACA;AACD;A5B6pQH;AACA;A4B3pQE;AACE;AACD;AACC;AACD;AACC;AACD;AACC;AACD;AACC;AACD;AACC;AACD;A5B6pQH;AACA;A4B3pQE;AAME;AACD;A5BwpQH;A4BvpQE;AACE;AAMD;A5BopQH;A4BnpQE;AAKE;AAKD;A5B6oQH;A4B3oQE;AACE;AAMD;AACC;AAID;A5BqoQH;AACA;A4BnoQE;A5BqoQF;A4BpoQE;AACE;AACD;A5BsoQH;A4BroQE;AACE;AACA;AACA;AAEA;A5BsoQJ;A4BroQI;AACD;AACC;AACE;AACA;AAFiB;AAIpB;AACC;AACD;AACC;AACA;AACE;AADe;AAIjB;AACA;AACD;AACC;AACA;AACA;AACA;A5BsoQJ;A4BjoQI;AACA;AAIA;AACA;AACD;AAEA;AAEC;AACA;AACD;AACC;AACA;AACA;AACE;AACD;A5B8nQL;A4B7nQI;AACE;AACD;AACF;AACC;A5B+nQJ;A4B9nQI;AACE;AACD;A5BgoQL;A4B/nQI;AACD;AAED;A5BgoQF;AACA;A4BhoQE;AACA;AACD;A5BkoQD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BlqRA;A7BoqRA;A6BnqRA;A7BqqRA;A6BpqRA;A7BsqRA;A6BrqRA;A7BuqRA;A6BtqRA;A7BwqRA;A6BvqRA;A7ByqRA;A6B9rRA;A7BgsRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BtrRA;AAEA;A7BurRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BvrRO;AAEP;A7BwrRA;AACA;AACA;AACA;AACA;AACA;A6BxrRO;AAEP;A7ByrRA;AACA;AACA;AACA;AACA;AACA;A6B1rRO;AACL;AACD;AAED;A7B2rRA;AACA;AACA;AACA;AACA;A6B3rRO;AACL;AACD;AAED;A7B4rRA;AACA;AACA;AACA;AACA;A6B5rRO;AACL;AACA;AACA;AACA;AACA;AALsB;AAQxB;A7B6rRA;AACA;AACA;AACA;AACA;AACA;AACA;A6B9rRO;AACL;AACD;AAED;A7B+rRA;AACA;AACA;AACA;AACA;A6B/rRA;AAEA;A7BgsRA;AACA;AACA;A6B/rRO;AACL;AACD;AAED;A7BgsRA;AACA;AACA;AACA;AACA;AACA;AACA;A6BhsRA;AAAsB;AAAA;AAEtB;A7BmsRA;AACA;AACA;AACA;AACA;AACA;AACA;A6BnsRA;AAA2B;AAEvB;AAAA;AAFuB;AAM3B;A7BosRA;AACA;AACA;AACA;AACA;AACA;A6BpsRA;AAAuC;AAAA;AAGvC;A7BssRA;AACA;AACA;AACA;AACA;A6BtsRA;AAAwC;AAAA;AAGxC;A7BwsRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B1sRE;A7B4sRF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B1sRE;AAA6C;A7B6sR/C;A6B7sR+C;AAAjB;AAAiB;A7BitR/C;A6BhtRI;A7BktRJ;AACA;AACA;AACA;A6BhtRI;AAEA;A7BitRJ;A6BhtRI;AAEA;A7BitRJ;A6BhtRI;AAEA;A7BitRJ;A6BhtRI;AAEA;A7BitRJ;A6BhtRI;AAEA;AACE;AAEgB;AAAA;AAEZ;AACE;AAAiB;AAA4B;AAC9C;AACF;AACJ;AACF;AAED;A7BitRF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BntRI;AACD;AAED;A7BotRF;AACA;AACA;AACA;AACA;AACA;A6BptRI;AACA;AACE;AACD;A7BstRL;AACA;A6BptRI;AACE;AACD;A7BstRL;AACA;A6BptRI;AACE;AACD;A7BstRL;AACA;A6BptRI;AACE;AACD;A7BstRL;AACA;A6BptRI;AACD;AAED;A7BqtRF;AACA;AACA;AACA;AACA;AACA;AACA;A6BrtRI;AACE;A7ButRN;A6BttRM;AACE;AACD;AACC;AACD;AACC;AACD;A7BwtRP;A6BvtRM;A7BytRN;A6BvtRM;A7BytRN;A6BxtRM;AACE;AACA;AACD;AACC;AACD;A7B0tRP;A6BztRM;AACD;AACF;AAED;A7B0tRF;AACA;AACA;AACA;AACA;AACA;A6B1tRI;AACD;AAED;A7B2tRF;AACA;AACA;AACA;AACA;AACA;AACA;A6B3tRI;AACE;AACD;AACF;AAED;A7B4tRF;AACA;AACA;AACA;AACA;AACA;AACA;A6B5tRI;AACE;AACD;AACF;AAED;A7B6tRF;AACA;AACA;AACA;AACA;AACA;AACA;A6B7tRI;AACE;AACD;AACF;AAED;A7B8tRF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B9tRI;AACE;AACD;AACC;AAIA;AACA;AACD;AACF;AAED;A7B4tRF;AACA;AACA;AACA;AACA;AACA;AACA;A6B5tRI;A7B8tRJ;A6B7tRI;AACE;A7B+tRN;A6B7tRM;AACD;AACF;AAED;A7B8tRF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B9tRI;A7BguRJ;A6B/tRI;AACE;A7BiuRN;A6B/tRM;AACD;AACF;AAED;A7BguRF;AACA;AACA;AACA;AACA;AACA;AACA;A6BhuRI;AACA;AACA;AACD;AAED;A7BiuRF;AACA;AACA;AACA;AACA;AACA;AACA;A6BjuRI;AACA;AACA;AACA;AACD;AAED;A7BkuRF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BluRI;A7BouRJ;A6BnuRI;AACE;AAG4B;AAAuB;AAGpD;A7BkuRL;A6BjuRI;AACE;AACA;AACA;AACA;AACA;AACA;AACA;A7BmuRN;A6BluRM;AACE;AACA;A7BouRR;A6BnuRQ;AACE;AACD;A7BquRT;A6BpuRQ;AACA;AACA;AACD;A7BsuRP;A6BruRM;AACA;AACA;AACA;AACA;A7BuuRN;A6BruRM;A7BuuRN;A6BtuRM;AACD;A7BwuRL;A6BvuRI;AACD;AAED;A7BwuRF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BxuRI;AACA;AAMA;AAAO;AAAyB;AAAhC;AACD;AAED;A7BuuRF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BvuRI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;A7BsuRF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BtuRI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;A7BquRF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BruRI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;A7BouRF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BpuRI;AAMA;AAAO;AAAwB;AAA/B;AACD;AAED;A7BmuRF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BnuRI;AACE;AACD;A7BquRL;A6BpuRI;AACD;AAED;A7BquRF;AACA;AACA;AACA;AACA;AACA;A6BruRI;A7BuuRJ;A6BtuRI;AACE;AACE;AACD;AACC;AACD;AACF;AACC;AACD;AACF;AAED;A7BuuRF;AACA;AACA;AACA;AACA;AACA;AACA;A6BvuRI;AACE;AAA+B;AAAuB;AACvD;A7B2uRL;A6B1uRI;AACD;AAED;A7B2uRF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B3uRI;AACA;AAEA;AACA;AACA;A7B4uRJ;A6B3uRI;AACE;AACD;A7B6uRL;A6B5uRI;AACE;AACD;A7B8uRL;A6B7uRI;AACD;AAED;A7B8uRF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B9uRI;AACE;AACD;AACC;AACD;AACF;A7BgvRH;AACA;AACA;A6B/uRA;A7BivRA;AACA;AACA;AACA;AACA;AACA;AACA;A6BnvRA;AAAiC;AAC/B;AAAuB;AADQ;AAAA;AAGjC;A7BwvRA;AACA;AACA;AACA;AACA;A6BxvRA;AACE;AACA;AACE;AACD;A7B0vRH;A6BzvRE;AACD;AAED;A7B0vRA;AACA;AACA;AACA;AACA;A6B1vRA;AACE;AACE;AACD;AACF;AAED;A7B2vRA;AACA;AACA;AACA;AACA;AACA;A6B3vRO;AACL;A7B6vRF;A6B5vRE;AACE;AACD;A7B8vRH;A6BlwRiD;AAAA;AAO/C;A7B+vRF;A6B7vRE;AACE;AACD;A7B+vRH;AACA;A6B9vRE;AACA;AACD;AAED;A7B+vRA;AACA;AACA;AACA;AACA;AACA;A6B/vRO;AACL;AACA;A7BiwRF;A6BhwRE;AACE;A7BkwRJ;A6BjwRI;AACE;AACD;AACC;AACE;AACD;A7BmwRP;A6BlwRM;AACD;AACF;A7BowRH;A6BlwRE;AACE;AACD;AACC;AACD;A7BowRH;A6BnwRE;AACD;AAED;A7BowRA;AACA;AACA;AACA;AACA;AACA;A6BpwRO;AACL;AACA;AACE;AACA;A7BswRJ;A6BrwRI;AACD;AACF;AAED;A7BswRA;AACA;AACA;AACA;AACA;AACA;A6BtwRA;AACE;AACA;AACA;AAHiC;AAMnC;AAEA;A7BswRA;AACA;AACA;AACA;AACA;AACA;A6BrwRA;AAEA;A7BswRA;AACA;AACA;A6BrwRO;AACL;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;A7BswRF;A6BrwRE;AACA;AACD;AAED;A7BswRA;AACA;AACA;AACA;A6BtwRO;AACL;AACD;AAED;A7BuwRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BvwRO;AACL;AACE;AACD;A7BywRH;A6BxwRE;AACE;AACD;AACC;AACE;AACD;A7B0wRL;A6BzwRI;AACD;AACF;AAED;A7B0wRA;AACA;AACA;AACA;AACA;AACA;A6B1wRA;AACE;AACE;AACD;A7B4wRH;A6B3wRE;AAGI;A7B2wRN;A6B1wRM;AACE;AACD;A7B4wRP;A6B3wRM;AACD;AAGJ;AAED;A7B0wRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B1wRO;AACL;AACE;AACD;A7B4wRH;A6B3wRE;AACE;AACD;A7B6wRH;A6B5wRE;AACE;A7B8wRJ;A6B7wRI;AACE;AACD;A7B+wRL;A6B9wRI;AACE;AACD;A7BgxRL;A6B/wRI;AACD;AACF;AAED;A7BgxRA;AACA;AACA;AACA;AACA;AACA;A6BhxRO;AACL;AACE;AACD;A7BkxRH;A6BjxRE;AACD;AAED;A7BkxRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BlxRO;AAaL;AACE;AACD;A7BwwRH;A6BvwRE;AAAa;AAAc;AAa5B;AAED;A7B8vRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B9vRO;AAaL;AAAc;AAAc;AAa7B;A7B0uRD;AACA;AACA;AACA;AACA;AACA;AACA;A8BxsTA;A9B0sTA;A8B1tTA;A9B4tTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BxtTA;A9B0tTA;AACA;AACA;AACA;AACA;A8BxtTO;AACL;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVK;AAYR;A9B0tTD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BxvTA;A/B0vTA;A+BzvTA;A/B2vTA;A+B5wTA;A/B8wTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BzwTA;A/B2wTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BzwTO;AAEP;A/B0wTA;AACA;AACA;AACA;AACA;AACA;A+B1wTA;AAEA;A/B2wTA;AACA;AACA;AACA;AACA;A+B1wTO;AACL;A/B4wTF;A+B3wTE;AACE;AACD;A/B6wTH;A+B5wTE;AACD;AAED;A/B6wTA;AACA;AACA;AACA;AACA;AACA;A+B7wTA;AACE;AACA;AAGA;AACA;AACA;A/B6wTF;A+B5wTE;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEE;AACA;AAEF;AAEA;A/BywTF;A+BvwTE;AACE;AACD;AAGD;AACA;AACA;A/BuwTF;AACA;A+BvwTE;AACE;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BK;AA8BR;AAED;A/BowTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BpwTA;AACE;AACA;AACA;AACE;AACD;A/BswTH;A+BpwTE;AACE;AACD;AAGD;AACA;AACA;AACA;A/BowTF;AACA;A+BpwTE;AACD;AAED;A/BqwTA;AACA;AACA;AACA;AACA;AACA;AACA;A+BrwTO;AACL;AACD;AAED;A/BswTA;AACA;A+BtwTO;AACL;AACD;A/BwwTD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCz6TA;AhC26TA;AgC16TA;AhC46TA;AgC36TA;AhC66TA;AgC/7TA;AhCi8TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgC37TA;AhC67TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgC37TA;AACE;AACA;AACA;AAHe;AAMjB;AhC47TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCj8TE;AhCm8TF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCl8TA;AhCo8TA;AACA;AACA;AACA;AACA;AACA;AgCr8TA;AAEA;AhCs8TA;AACA;AACA;AACA;AACA;AACA;AACA;AgCr8TO;AACL;AACE;AAEI;AACE;AACE;AACD;AACF;AhCs8TT;AgCr8TQ;AACD;AAGH;AAKD;AACD;AACD;AAED;AhCg8TA;AACA;AACA;AACA;AACA;AACA;AgCh8TO;AACL;AACD;AAED;AhCi8TA;AACA;AACA;AACA;AACA;AACA;AACA;AgCj8TO;AACL;AAAmC;AAAsC;AACzE;AACD;AAED;AhCo8TA;AACA;AACA;AACA;AACA;AACA;AgCp8TO;AACL;AACA;AACA;AAEA;AACE;AACD;AACF;AhCq8TD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiChlUA;AjCklUA;AiCjlUA;AjCmlUA;AiCllUA;AjColUA;AiCnlUA;AjCqlUA;AiC9mUA;AjCgnUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiC9mUA;AjCgnUA;AACA;AACA;AACA;AACA;AiCzmUA;AjC2mUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCzmUA;AAEA;AjC0mUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiC/mUE;AjCinUF;AACA;AACA;AACA;AACA;AACA;AACA;AiChnUA;AjCknUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCxnUE;AjC0nUF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCznUA;AjC2nUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiC7nUO;AACL;AACA;AACA;AACA;AjC+nUF;AiC7nUE;AACA;AjC+nUF;AiC9nUE;AACE;AACE;AACD;AjCgoUL;AACA;AiC/nUI;AACD;AACC;AACA;AACD;AACF;AAED;AjCgoUA;AACA;AACA;AACA;AACA;AACA;AACA;AiChoUO;AACL;AACA;AAKA;AAKA;AjC0nUF;AiCznUE;AACE;AACA;AAIE;AAAA;AACA;AAAe;AAElB;AACC;AAAgD;AAAA;AAChD;AACD;AACF;AAED;AjC0nUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiC1nUO;AACL;AACA;AjC4nUF;AiC3nUE;AACE;AACD;AACF;AAED;AjC4nUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiC5nUO;AAML;AACA;AACA;AjCynUF;AiCxnUE;AACE;AACD;AACF;AAED;AjCynUA;AACA;AACA;AACA;AACA;AACA;AACA;AiCznUO;AACL;AACA;AACA;AACD;AAED;AjC0nUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiC1nUO;AACL;AACA;AACD;AAED;AjC2nUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiC3nUO;AACL;AACD;AAED;AjC4nUA;AACA;AACA;AACA;AACA;AACA;AACA;AiC5nUO;AACL;AjC8nUF;AiC7nUE;AACE;AACD;AACC;AACD;AACF;AAED;AjC8nUA;AACA;AACA;AACA;AACA;AACA;AACA;AiC9nUO;AACL;AACD;AAED;AjC+nUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiC/nUO;AACL;AACA;AACA;AACD;AAED;AjCgoUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiChoUA;AACE;AACA;AjCkoUF;AiCjoUE;AACE;AACD;AACC;AACD;AACF;AAED;AjCkoUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCloUO;AACL;AACD;AAED;AjCmoUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCnoUO;AACL;AAID;AAED;AjCioUA;AACA;AACA;AACA;AACA;AACA;AiCjoUO;AACL;AACA;AACD;AAED;AjCkoUA;AACA;AACA;AACA;AACA;AACA;AiCloUO;AACL;AACD;AAED;AjCmoUA;AACA;AACA;AACA;AACA;AACA;AACA;AiCnoUO;AACL;AACD;AAED;AjCooUA;AACA;AACA;AACA;AACA;AACA;AACA;AiCpoUO;AACL;AACA;AjCsoUF;AiCroUE;AACE;AACE;AAAO;AAAmC;AAA1C;AACD;AAEA;AACF;AjCyoUH;AiCxoUE;AACD;AAED;AjCyoUA;AACA;AACA;AACA;AACA;AiCzoUO;AACL;AACE;AACE;AAAyB;AAG3B;AAAuC;AAAsB;AAC9D;AjC4oUH;AiC3oUE;AAAO;AAA8C;AAArD;AACD;AAED;AjC+oUA;AACA;AACA;AACA;AACA;AiC/oUA;AACE;AACA;AACD;AAED;AjCgpUA;AACA;AACA;AACA;AACA;AACA;AACA;AiChpUA;AACE;AAAO;AAAqD;AAA5D;AAID;AAED;AjCipUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCjpUA;AACE;AAIA;AACA;AjCgpUF;AiC/oUE;AACE;AACA;AACA;AACA;AACA;AACA;AAEA;AjCgpUJ;AiC/oUI;AACE;AACD;AACF;AjCipUH;AiChpUE;AACD;AAED;AjCipUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCjpUA;AACE;AACA;AjCmpUF;AiCjpUE;AACE;AACE;AACA;AACA;AACA;AACA;AACA;AANiB;AAQpB;AjCmpUH;AiCjpUE;AACE;AACA;AACD;AjCmpUH;AiCjpUE;AACA;AAGA;AjCipUF;AiChpUE;AACE;AACA;AACD;AACF;AAED;AjCipUA;AACA;AACA;AACA;AACA;AACA;AiCjpUA;AACE;AjCmpUF;AiClpUE;AACE;AACD;AAGD;AACA;AjCkpUF;AACA;AiClpUE;AACA;AACA;AAAO;AAAkC;AAAzC;AACD;AAED;AjCspUA;AACA;AACA;AACA;AACA;AACA;AiCtpUA;AACE;AACA;AjCwpUF;AiCvpUE;AACE;AACE;AACD;AjCypUL;AiCxpUI;AACD;AjC0pUH;AiCxpUE;AACA;AACD;AAED;AjCypUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCzpUA;AACE;AACA;AjC2pUF;AiC1pUE;AACE;AACE;AACD;AACC;AACA;AACA;AAAoC;AAAwB;AAC7D;AACF;AjC8pUH;AiC7pUE;AACD;AAED;AjC8pUA;AACA;AACA;AACA;AACA;AACA;AiC9pUA;AACE;AjCgqUF;AiC/pUE;AACE;AACD;AjCiqUH;AiChqUE;AACD;AAED;AjCiqUA;AACA;AACA;AACA;AACA;AACA;AiCjqUO;AACL;AACD;AAED;AjCkqUA;AACA;AACA;AACA;AACA;AACA;AACA;AiClqUO;AACL;AACA;AAAO;AAA4B;AAAnC;AACD;AAED;AjCsqUA;AACA;AACA;AACA;AACA;AACA;AiCtqUO;AACL;AACD;AAED;AjCuqUA;AACA;AACA;AACA;AACA;AACA;AiCvqUO;AACL;AACD;AAED;AjCwqUA;AACA;AACA;AACA;AiCxqUA;AACE;AACA;AACA;AjC0qUF;AiC7qUyC;AAKrC;AACE;AACD;AjC2qUL;AiC1qUI;AjC4qUJ;AiC3qUI;AACE;AACD;AACC;AAAmC;AAAA;AAGpC;AAfoC;AjC6rUzC;AiCzrUE;AAA2B;AjC4rU7B;AiC5rU6B;AAY1B;AACF;AAED;AjCkrUA;AACA;AACA;AACA;AACA;AiClrUA;AACE;AACE;AACD;AjCorUH;AiCnrUE;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAED;AjCorUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCprUO;AACL;AjCsrUF;AiCprUE;AACE;AACD;AjCsrUH;AiCrrUE;AAIA;AACA;AACA;AACD;AAED;AjCmrUA;AACA;AACA;AACA;AACA;AiCnrUO;AACL;AAIA;AAIE;AAAA;AAEH;AAED;AjC8qUA;AACA;AACA;AACA;AACA;AACA;AiC9qUO;AACL;AACE;AACD;AACF;AAED;AjC+qUA;AACA;AACA;AACA;AACA;AACA;AiC/qUA;AACE;AjCirUF;AiC/qUE;AACD;AAED;AjCgrUA;AACA;AiChrUA;AACE;AADuC;AAAA;AAAA;AAGvC;AjCorUF;AiCnrUE;AACE;AACA;AACA;AACA;AACA;AACA;AANK;AAQR;AjCqrUD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkC/0VA;AlCi1VA;AkCh1VA;AlCk1VA;AkCn2VA;AlCq2VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCh2VA;AlCk2VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCh2VA;AAEA;AlCi2VA;AACA;AACA;AACA;AACA;AACA;AkCh2VO;AACL;AACE;AlCk2VJ;AkCj2VI;AACE;AACD;AlCm2VL;AkCl2VI;AACD;AlCo2VH;AkCn2VE;AACD;AAED;AlCo2VA;AACA;AACA;AACA;AACA;AACA;AkCp2VA;AACE;AACD;AAED;AlCq2VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCr2VO;AAML;AACA;AlCk2VF;AkCj2VE;AACE;AACD;AlCm2VH;AkCl2VE;AAGA;AACA;AACD;AAED;AlCi2VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCj2VO;AAML;AlC81VF;AkC71VE;AACE;AACA;AACD;AlC+1VH;AkC91VE;AACD;AAED;AlC+1VA;AACA;AACA;AACA;AACA;AACA;AkC/1VO;AACL;AACA;AAEA;AACE;AACA;AAFK;AAIR;AlCg2VD;AACA;AACA;AACA;AACA;AACA;AACA;AmC58VA;AnC88VA;AmCt8VA;AnCw8VA;AmCh+VA;AnCk+VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCj9VA;AACO;AnCm9VP;AACA;AACA;AACA;AACA;AACA;AACA;AmCt9VE;AnCw9VF;AACA;AACA;AACA;AmCt9VE;AnCw9VF;AACA;AACA;AACA;AACA;AmCt9VI;AAAO;AAAiF;AAAxF;AAKD;AAED;AnCs9VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCt9VI;AAAO;AAAiF;AAAxF;AAKD;AAED;AnCs9VF;AACA;AACA;AACA;AACA;AACA;AACA;AmCt9VI;AAAO;AAA+C;AAAtD;AAKD;AAED;AnCs9VF;AACA;AACA;AACA;AACA;AACA;AACA;AmCt9VI;AAAO;AAA+C;AAAtD;AAKD;AAED;AnCs9VF;AACA;AACA;AACA;AACA;AACA;AmCt9VI;AAAO;AAAqD;AAA5D;AAID;AAED;AnCu9VF;AACA;AACA;AACA;AACA;AACA;AmCv9VI;AAAO;AAAiE;AAAxE;AAID;AAED;AnCw9VF;AACA;AACA;AACA;AACA;AACA;AmCx9VI;AAAO;AAAkF;AAAzF;AAKD;AAED;AnCw9VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCx9VI;AAAO;AAAqD;AAA5D;AAID;AAED;AnCy9VF;AACA;AACA;AACA;AACA;AACA;AACA;AmCz9VI;AACD;AAED;AnC09VF;AACA;AACA;AACA;AACA;AACA;AACA;AmC39VyD;AAAvB;AAAuB;AnC+9VzD;AmC99VI;AACE;AACA;AACA;AAAmC;AAAO;AAI3C;AnC+9VL;AmC99VI;AAAO;AAAkG;AAAzG;AAKD;AAED;AnC89VF;AACA;AACA;AACA;AACA;AACA;AmC99VI;AAAO;AAAkG;AAAzG;AAKD;AAED;AnC89VF;AACA;AACA;AACA;AACA;AACA;AmC99VI;AAAO;AAAuD;AAA9D;AAID;AAED;AnC+9VF;AACA;AACA;AACA;AACA;AACA;AmC/9VI;AAAO;AAAqE;AAA5E;AAKD;AAED;AnC+9VF;AACA;AACA;AACA;AACA;AACA;AmC/9VI;AAAO;AAAqD;AAA5D;AAID;AAED;AnCg+VF;AACA;AACA;AACA;AACA;AACA;AmCh+VI;AAAO;AAAiD;AAAxD;AAID;AAED;AnCi+VF;AACA;AACA;AACA;AACA;AACA;AmCj+VI;AAAO;AAAiF;AAAxF;AAKD;AAED;AnCi+VF;AACA;AACA;AACA;AACA;AACA;AmCj+VI;AAAO;AAA6F;AAApG;AAKD;AAED;AnCi+VF;AACA;AACA;AACA;AACA;AACA;AmCj+VI;AAAO;AAA8C;AAArD;AAID;AAED;AnCk+VF;AACA;AACA;AACA;AACA;AACA;AmCl+VI;AAAO;AAAsD;AAA7D;AAID;AAED;AnCm+VF;AACA;AACA;AACA;AACA;AACA;AmCn+VI;AAAO;AAAsD;AAA7D;AAID;AAED;AnCo+VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCp+VI;AAAO;AAA2F;AAAlG;AAID;AAED;AnCq+VF;AACA;AACA;AACA;AACA;AACA;AACA;AmCr+VI;AAAO;AAA+D;AAAtE;AAID;AAED;AnCs+VF;AACA;AACA;AACA;AACA;AACA;AACA;AmCt+VI;AAAO;AAAgD;AAAvD;AAID;AAED;AnCu+VF;AACA;AACA;AACA;AACA;AACA;AmCv+VI;AACD;AAED;AnCw+VF;AACA;AACA;AACA;AACA;AACA;AACA;AmCx+VI;AAAO;AAA6F;AAApG;AAKD;AAED;AnCw+VF;AACA;AACA;AACA;AACA;AACA;AmCx+VI;AAAO;AAA4D;AAAnE;AAID;AAED;AnCy+VF;AACA;AACA;AACA;AACA;AACA;AmCz+VI;AAAO;AAAuD;AAA9D;AAID;AAED;AnC0+VF;AACA;AACA;AACA;AACA;AACA;AmC1+VI;AAAO;AAAuD;AAA9D;AAID;AAED;AnC2+VF;AACA;AACA;AACA;AACA;AACA;AmC3+VI;AAAO;AAAkD;AAAzD;AAID;AAED;AnC4+VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmC5+VI;AAAO;AAAqF;AAA5F;AAID;AAED;AnC6+VF;AACA;AACA;AACA;AACA;AACA;AmC7+VI;AAAO;AAAkE;AAAzE;AAID;AAED;AnC8+VF;AACA;AACA;AACA;AACA;AACA;AmC9+VI;AAAO;AAA4E;AAAnF;AAID;AAED;AnC++VF;AACA;AACA;AACA;AACA;AACA;AmC/+VI;AAAO;AAAgF;AAAvF;AAMD;AAED;AnC8+VF;AACA;AACA;AACA;AACA;AACA;AACA;AmC9+VI;AACE;AACC;AAFH;AAID;AAED;AnC++VF;AACA;AACA;AACA;AACA;AACA;AmC/+VI;AACE;AACC;AAFH;AAID;AAED;AnCg/VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCh/VI;AACE;AACC;AAFH;AAID;AAED;AnCi/VF;AACA;AACA;AACA;AACA;AACA;AmCj/VI;AACE;AACC;AAFH;AAID;AAED;AnCk/VF;AACA;AACA;AACA;AACA;AACA;AmCl/VI;AACE;AACC;AAFH;AAID;AAED;AnCm/VF;AACA;AACA;AACA;AACA;AACA;AmCn/VI;AACE;AACC;AAFH;AAID;AAED;AnCo/VF;AACA;AACA;AACA;AACA;AACA;AmCp/VI;AACE;AACC;AAFH;AAID;AAED;AnCq/VF;AACA;AACA;AACA;AACA;AACA;AmCr/VI;AACE;AACC;AAFH;AAID;AAED;AnCs/VF;AACA;AACA;AACA;AACA;AACA;AmCt/VI;AACD;AAED;AnCu/VF;AACA;AACA;AACA;AACA;AACA;AACA;AmCv/VI;AACE;AACC;AAFH;AAID;AAED;AnCw/VF;AACA;AACA;AACA;AACA;AACA;AmCx/VI;AACE;AACC;AAFH;AAID;AAED;AnCy/VF;AACA;AACA;AACA;AACA;AACA;AACA;AmCz/VI;AACD;AAED;AnC0/VF;AACA;AACA;AACA;AACA;AACA;AACA;AmC1/VI;AACD;AAED;AnC2/VF;AACA;AACA;AACA;AACA;AACA;AACA;AmC3/VI;AACE;AACC;AAFH;AAID;AAED;AnC4/VF;AACA;AACA;AACA;AACA;AACA;AACA;AmC5/VI;AACD;AAED;AnC6/VF;AACA;AACA;AACA;AACA;AACA;AmC7/VI;AACE;AACC;AAFH;AASD;AAED;AnCy/VF;AACA;AACA;AACA;AACA;AACA;AmCz/VI;AACE;AACC;AAFH;AAID;AAED;AnC0/VF;AACA;AACA;AACA;AACA;AACA;AmC1/VI;AAAO;AAA0D;AAAjE;AAID;AAED;AnC2/VF;AACA;AACA;AACA;AACA;AACA;AmC3/VI;AAAO;AAAmD;AAA1D;AAID;AAED;AnC4/VF;AACA;AACA;AACA;AACA;AACA;AmC5/VI;AACA;AAAO;AAA4C;AAAnD;AAID;AAED;AnC6/VF;AACA;AACA;AACA;AACA;AACA;AmC7/VI;AAAO;AAAiE;AAAxE;AAID;AAED;AnC8/VF;AACA;AACA;AACA;AACA;AACA;AmC9/VI;AACE;AACC;AAFH;AAQD;AAED;AnC2/VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmC3/VI;AACE;AACC;AAFH;AAQD;AAED;AnCw/VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCx/VI;AAAO;AAAoE;AAA3E;AAMD;AAED;AnCu/VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCv/VI;AAAO;AAAyG;AAAhH;AAMD;AAED;AnCs/VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCt/VI;AAAO;AAAwC;AAA/C;AAID;AAED;AnCu/VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCv/VI;AAAO;AAA6E;AAApF;AAMD;AAED;AnCs/VF;AACA;AACA;AACA;AACA;AACA;AmCt/VI;AAAO;AAA2D;AAAlE;AAID;AAED;AnCu/VF;AACA;AACA;AACA;AACA;AACA;AmCv/VI;AACE;AACC;AAFH;AAQD;AAED;AnCo/VF;AACA;AACA;AACA;AACA;AACA;AmCp/VI;AAAO;AAA4D;AAAnE;AAID;AAED;AnCq/VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCr/VI;AAAO;AAAsE;AAA7E;AAID;AAED;AnCs/VF;AACA;AACA;AACA;AACA;AACA;AmCt/VI;AAAO;AAA4C;AAAnD;AAID;AAED;AnCu/VF;AACA;AACA;AACA;AACA;AACA;AmCv/VI;AAAO;AAAyE;AAAhF;AAID;AAED;AnCw/VF;AACA;AACA;AACA;AACA;AACA;AmCx/VI;AAAO;AAAwC;AAA/C;AACD;AnC6/VH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCh0XA;ApCk0XA;AoCl1XA;ApCo1XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCh1XA;ApCk1XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCh1XA;AAEA;ApCi1XA;AACA;AACA;AACA;AACA;AACA;AoCh1XA;AAEA;ApCi1XA;AACA;AACA;AACA;AACA;AoCh1XO;AACL;ApCk1XF;AoCj1XE;AACE;AACD;AAED;AACA;ApCk1XF;AACA;AoCl1XE;AAKA;AACD;AAED;ApC+0XA;AACA;AACA;AACA;AACA;AACA;AoC/0XO;AACL;AAAoB;AAAU;AAAkB;AAA7B;AACpB;AAED;ApCo1XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCp1XO;AACL;AACA;ApCs1XF;AoCr1XE;AACE;AACA;AAAA;ApCw1XJ;AoCv1XI;AACE;ApCy1XN;AoCx1XM;AACE;AACD;AACC;AACD;AACC;AACD;AACF;AACC;AACA;AACD;ApC01XL;AoCz1XI;AAAc;AAAK;AAAO;AAAb;AACd;ApC+1XH;AoC91XE;AACD;AAED;ApC+1XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCj2XE;ApCm2XF;AACA;AoCj2XE;AACE;AACA;ApCm2XJ;AoCl2XI;ApCo2XJ;AoCj2XI;AACA;ApCm2XJ;AoCl2XI;AACE;AACA;AACA;AACD;ApCo2XL;AoCn2XI;ApCq2XJ;AoC/1XI;AAEA;ApCg2XJ;AoC/1XI;AACD;AAED;ApCg2XF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCl2XI;AACA;AACA;ApCo2XJ;AoCn2XI;AACE;AACD;AACC;AACD;ApCq2XL;AoCp2XI;AACD;AAED;ApCq2XF;AACA;AACA;AACA;AACA;AACA;AACA;AoCr2XI;AACA;AACA;AACA;ApCu2XJ;AoCr2XI;AACE;AACA;AAGA;AACA;ApCq2XN;AoCp2XM;AACE;AACA;AACA;AACD;AACC;AACD;AACF;ApCs2XL;AoCr2XI;AACD;AAED;ApCs2XF;AACA;AACA;AACA;AACA;AACA;AACA;AoCt2XI;AACA;AACA;ApCw2XJ;AoCt2XI;AACE;ApCw2XN;AoCv2XM;AACE;AACA;AACD;AACC;AACD;AACF;ApCy2XL;AoCx2XI;AACD;AAED;ApCy2XF;AACA;AACA;AACA;AACA;AACA;AoCz2XI;AAA0B;AAAA;AAC3B;AAED;ApC42XF;AACA;AACA;AACA;AACA;AACA;AACA;AoC52XI;AACA;ApC82XJ;AoC72XI;AACE;AACA;ApC+2XN;AoC92XM;AACE;AACD;ApCg3XP;AoC/2XM;AACE;AACD;AACC;AACD;ApCi3XP;AoCh3XM;AACD;ApCk3XL;AoCj3XI;AACD;ApCm3XH;AACA;AACA;AoCl3XA;ApCo3XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCt3XA;AACE;AACA;AACD;AAED;ApCu3XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCv3XA;AACE;AACA;AACD;ApCy3XD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqC7oYA;ArC+oYA;AqC9oYA;ArCgpYA;AqCjqYA;ArCmqYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqC7pYA;AACA;AAEA;ArC8pYA;AACA;AACA;AACA;AACA;AACA;AqC7pYO;AACL;ArC+pYF;AqC9pYE;AACE;AACD;ArCgqYH;AqC9pYE;AACD;AAED;ArC+pYA;AACA;AACA;AACA;AACA;AACA;AACA;AqC/pYO;AACL;ArCiqYF;AqChqYE;AACE;AACD;ArCkqYH;AqChqYE;AACD;AAED;ArCiqYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqCjqYA;AACE;AACD;AAED;ArCkqYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqClqYA;AACE;AACD;AAED;ArCmqYA;AACA;AACA;AACA;AACA;AACA;AACA;AqCnqYA;AACE;AACA;AAAU;AAAO;AAEjB;AACA;AACA;ArCsqYF;AqCnqYE;AAEA;AACD;AAED;ArCmqYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqCnqYO;AACL;AACA;ArCqqYF;AqCnqYE;AACE;AACA;AACA;AACA;AACA;AACD;ArCqqYH;AqCnqYE;AACD;ArCqqYD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCtzYA;AtCwzYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCtzYA;AtCwzYA;AACA;AACA;AACA;AsCtzYA;AACE;AACD;AAED;AtCuzYA;AACA;AACA;AACA;AACA;AsCvzYA;AACE;AACD;AAED;AtCwzYA;AACA;AACA;AACA;AACA;AACA;AsCxzYO;AACL;AACD;AAED;AtCyzYA;AACA;AACA;AACA;AACA;AACA;AACA;AsCzzYO;AACL;AACD;AAED;AtC0zYA;AACA;AACA;AACA;AACA;AsC1zYO;AACL;AACD;AAED;AtC2zYA;AACA;AACA;AACA;AACA;AACA;AACA;AsC3zYO;AACL;AACA;AACD;AAED;AtC4zYA;AACA;AACA;AACA;AACA;AACA;AACA;AsC5zYO;AACL;AACE;AACD;AtC8zYH;AsC7zYE;AACD;AAED;AtC8zYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsC9zYO;AACL;AACE;AACD;AtCg0YH;AsC/zYE;AACE;AACD;AtCi0YH;AsCh0YE;AACD;AAED;AtCi0YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCj0YO;AACL;AtCm0YF;AsCp0YoE;AAGhE;AACA;AACE;AACA;AACD;AtCo0YL;AsCn0YI;AACE;AACD;AAV+D;AtCg1YpE;AsC90YE;AAAwC;AtCi1Y1C;AsCj1Y0C;AASvC;AtC20YH;AsC10YE;AACD;AAED;AtC20YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsC30YO;AAA2B;AAEhC;AtC60YF;AsC50YE;AACE;AACD;AtC80YH;AACA;AsC70YE;AACD;AAED;AtC80YA;AACA;AACA;AACA;AACA;AACA;AsC90YO;AACL;AACA;AACE;AACD;AtCg1YH;AsC90YE;AACD;AAED;AtC+0YA;AACA;AACA;AACA;AACA;AACA;AsC/0YO;AACL;AACE;AACD;AtCi1YH;AsC/0YE;AACD;AAED;AtCg1YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCh1YO;AACL;AACE;AACD;AtCk1YH;AsCj1YE;AACA;AtCm1YF;AsCl1YE;AACE;AACD;AtCo1YH;AsCn1YE;AACD;AtCq1YD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuCjhZA;AvCmhZA;AuClhZA;AvCohZA;AuCnhZA;AvCqhZA;AuCphZA;AvCshZA;AuCrhZA;AvCuhZA;AuCthZA;AvCwhZA;AuCvhZA;AvCyhZA;AuCxhZA;AvC0hZA;AuCjjZA;AvCmjZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuCviZA;AACA;AAEA;AvCwiZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuCviZO;AAOL;AACA;AvCmiZF;AuC5hZE;AACE;AAEA;AACA;AACA;AACA;AvC6hZJ;AuC5hZI;AACE;AACA;AACD;AvC8hZL;AACA;AuC7hZI;AACE;AACE;AACA;AACD;AACF;AACF;AvC+hZH;AuC9hZE;AACD;AAED;AvC+hZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuC/hZO;AAOL;AvC2hZF;AuCphZE;AACE;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACD;AvCshZL;AACA;AuCrhZI;AACE;AACE;AACA;AACD;AACF;AACF;AvCuhZH;AuCthZE;AACD;AAED;AvCuhZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuCvhZA;AACE;AvCyhZF;AuCxhZE;AACE;AACD;AvC0hZH;AuCxhZE;AAEA;AvCyhZF;AuClhZE;AACE;AvCohZJ;AuCnhZI;AACE;AACE;AACD;AvCqhZP;AuCphZM;AACD;AACF;AvCshZH;AACA;AuCphZE;AACA;AACA;AAAM;AAAO;AACb;AAEA;AvCuhZF;AuCthZE;AACE;AACD;AACC;AACA;AAGD;AACC;AACE;AACD;AvCshZL;AuCrhZI;AACD;AvCuhZH;AuCthZE;AvCwhZF;AuCvhZE;AACE;AACD;AvCyhZH;AuCxhZE;AACD;AAED;AvCyhZA;AACA;AACA;AACA;AACA;AACA;AACA;AuCzhZA;AACE;AACA;AACE;AACD;AvC2hZH;AACA;AuC1hZE;AAAyB;AAAO;AvC8hZlC;AuC7hZE;AACE;AACA;AACD;AvC+hZH;AACA;AuC9hZE;AACD;AAED;AvC+hZA;AACA;AACA;AACA;AACA;AACA;AuC/hZO;AACL;AACD;AAED;AvCgiZA;AACA;AACA;AACA;AACA;AACA;AACA;AuChiZA;AACE;AACA;AACD;AAED;AvCiiZA;AACA;AuCjiZA;AAEA;AvCkiZA;AACA;AACA;AACA;AuCjiZO;AACL;AACD;AAED;AvCkiZA;AACA;AACA;AACA;AACA;AACA;AACA;AuCliZO;AACL;AACA;AAAY;AAAwB;AACpC;AAEI;AACD;AAEC;AACA;AACD;AAEC;AACA;AACA;AACA;AvCmiZN;AuCliZM;AACE;AvCoiZR;AuCniZQ;AAAU;AAAO;AAAgB;AAAkB;AACpD;AvCyiZP;AuCxiZM;AACE;AvC0iZR;AuCziZQ;AACA;AACD;AACF;AACJ;AAED;AvC0iZA;AACA;AACA;AACA;AACA;AuC1iZO;AACL;AvC4iZF;AuC3iZE;AACE;AACD;AvC6iZH;AuC5iZE;AACA;AACD;AAED;AvC6iZA;AACA;AACA;AACA;AACA;AuC7iZA;AACE;AACE;AACA;AACA;AAHuC;AAK1C;AAED;AvC8iZA;AACA;AACA;AACA;AACA;AACA;AACA;AuC9iZO;AACL;AACD;AAED;AvC+iZA;AACA;AACA;AACA;AACA;AACA;AACA;AuC/iZA;AACE;AvCijZF;AuChjZE;AACE;AvCkjZJ;AuCjjZI;AACE;AACD;AACF;AvCmjZH;AuCljZE;AACD;AvCojZD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCt4ZA;AxCw4ZA;AwCv4ZA;AxCy4ZA;AwCx4ZA;AxC04ZA;AwC75ZA;AxC+5ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwC55ZA;AxC85ZA;AwCz5ZA;AACA;AAEA;AxC05ZA;AwCz5ZA;AAEA;AxC05ZA;AACA;AACA;AACA;AACA;AwCz5ZO;AACL;AACD;AAED;AxC05ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwC15ZA;AACE;AACE;AxC45ZJ;AwC35ZI;AACE;AACD;AACF;AxC65ZH;AwC55ZE;AACD;AAED;AxC65ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwC75ZO;AACL;AACE;AACA;AACD;AxC+5ZH;AwC95ZE;AACE;AACD;AxCg6ZH;AwC/5ZE;AxCi6ZF;AwCh6ZE;AACE;AxCk6ZJ;AwCj6ZI;AACE;AACA;AxCm6ZN;AwCj6ZM;AACE;AACD;AACF;AxCm6ZL;AwCl6ZI;AACE;AACD;AACF;AxCo6ZH;AwCn6ZE;AACD;AAED;AxCo6ZA;AACA;AACA;AACA;AACA;AACA;AACA;AwCp6ZO;AAA6C;AxCu6ZpD;AwCr6ZE;AACE;AAKD;AACF;AAED;AxCk6ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCl6ZO;AACL;AxCo6ZF;AwC/5ZE;AACE;AAA8B;AAAuB;AAGtD;AACF;AAED;AxCg6ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCh6ZO;AACL;AxCk6ZF;AwC75ZE;AACE;AACD;AxC+5ZH;AwC95ZE;AACD;AAED;AxC+5ZA;AACA;AACA;AACA;AACA;AACA;AACA;AwC/5ZO;AACL;AACE;AACD;AACF;AAED;AxCg6ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCh6ZO;AACL;AACE;AAID;AxC+5ZH;AwC95ZE;AACD;AAED;AxC+5ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwC/5ZO;AACL;AACE;AAID;AxC85ZH;AwC75ZE;AACD;AAED;AxC85ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwC95ZO;AAAsC;AAE3C;AAIA;AAMA;AACD;AAED;AxCu5ZA;AACA;AACA;AACA;AACA;AACA;AwCv5ZO;AACL;AACE;AACD;AxCy5ZH;AwCx5ZE;AACE;AACD;AACC;AACD;AACF;AAED;AxCy5ZA;AACA;AACA;AACA;AACA;AACA;AwCz5ZO;AACL;AACD;AAED;AxC05ZA;AACA;AACA;AACA;AACA;AACA;AwC15ZO;AACL;AACD;AAED;AxC25ZA;AACA;AACA;AACA;AACA;AACA;AwC35ZO;AACL;AACE;AACD;AxC65ZH;AwC55ZE;AACD;AAED;AxC65ZA;AACA;AACA;AACA;AACA;AACA;AACA;AwC75ZO;AACL;AACE;AACD;AxC+5ZH;AwC95ZE;AACE;AACD;AxCg6ZH;AwC/5ZE;AACE;AACD;AxCi6ZH;AwCh6ZE;AACD;AAED;AxCi6ZA;AACA;AACA;AACA;AACA;AACA;AwCj6ZO;AACL;AACD;AAED;AxCk6ZA;AACA;AACA;AACA;AACA;AACA;AwCl6ZO;AACL;AACE;AACD;AxCo6ZH;AwCn6ZE;AACD;AAED;AxCo6ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCp6ZO;AACL;AAID;AAED;AxCk6ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCl6ZO;AACL;AAAc;AAAqC;AACnD;AAAO;AAAwC;AAA/C;AACD;AAED;AxCw6ZA;AACA;AACA;AACA;AACA;AACA;AwCx6ZO;AACL;AACE;AACD;AACF;AAED;AxCy6ZA;AACA;AACA;AACA;AACA;AACA;AwCz6ZO;AACL;AACE;AACD;AxC26ZH;AwCz6ZE;AACE;AACD;AACF;AxC26ZD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyC/xaA;AzCiyaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyC/xaA;AACA;AAEA;AzCgyaA;AACA;AACA;AACA;AACA;AyC/xaA;AACE;AACD;AAED;AzCgyaA;AACA;AACA;AACA;AACA;AACA;AyChyaO;AACL;AACD;AAED;AzCiyaA;AACA;AACA;AACA;AACA;AACA;AACA;AyCjyaO;AACL;AACD;AAED;AzCkyaA;AACA;AACA;AACA;AACA;AACA;AyClyaO;AACL;AACD;AAED;AzCmyaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyCnyaO;AACL;AACD;AAED;AzCoyaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyCpyaO;AACL;AACE;AACE;AACD;AACF;AzCsyaH;AyCryaE;AACD;AAED;AzCsyaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyCtyaO;AACL;AAAO;AAAwB;AAA/B;AACD;AzC2yaD;AACA;AACA;AACA;AACA;AACA;AACA;A0Cj4aA;A1Cm4aA;A0Cn5aA;A1Cq5aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Ch5aA;AAEA;A1Ci5aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Ch5aO;AACL;AAAe;AAA4B;A1Co5a7C;A0Cn5aE;AACE;AACD;A1Cq5aH;A0Cn5aE;A1Cq5aF;A0Cp5aE;AACE;AACA;AACA;AACD;A1Cs5aH;A0Cr5aE;AACD;A1Cu5aD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2C37aA;A3C67aA;A2Ct7aA;A3Cw7aA;A2Cv7aA;A3Cy7aA;A2Cx7aA;A3C07aA;A2Cz7aA;A3C27aA;A2Cr9aA;A3Cu9aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Cx8aA;AAEA;A3Cy8aA;A2Cx8aA;AAEA;A3Cy8aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Cx8aO;AAOL;AACA;AACA;AAEA;AACA;A3Cm8aF;A2Cl8aE;A3Co8aF;A2Cn8aE;AACE;AACA;AACA;A3Cq8aJ;A2Cn8aI;AACE;AACA;AACE;AACD;A3Cq8aP;A2Cp8aM;AACD;AACC;AACA;AACD;AACF;A3Cs8aH;A2Cr8aE;AACE;AACA;AACA;AACD;A3Cu8aH;A2Ct8aE;AACA;AACD;AAED;A3Cu8aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Cv8aO;AACL;AACE;AACD;A3Cy8aH;A2Cx8aE;AACD;AAED;A3Cy8aA;AACA;AACA;AACA;AACA;A2Cz8aO;AACL;AACD;AAED;A3C08aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2C18aO;AACL;AACA;AACA;A3C48aF;A2C18aE;AACE;AACD;A3C48aH;A2C18aE;AACE;AACE;AACD;A3C48aL;A2C38aI;AACD;A3C68aH;A2C38aE;AACE;A3C68aJ;A2C58aI;AACE;AACD;AACC;AACA;AACA;AACA;AACD;A3C88aL;A2C78aI;AAA2B;AAAA;AAG5B;A3C+8aH;A2C78aE;AACD;AAED;A3C88aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2C98aA;AACE;AAGA;A3C88aF;A2C78aE;AACE;AACD;A3C+8aH;AACA;A2C78aE;AAQD;A3Cw8aD;AACA;AACA;AACA;AACA;AACA;AACA;A4CpobA;A5CsobA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4CpobA;A5CsobA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4CpobO;AAA0D;AAAf;AAAe;A5CyobjE;A4CxobE;AACE;AACD;AACC;AACD;AACF;A5C0obD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6C7rbA;A7C+rbA;A6C9rbA;A7CgsbA;A6C/rbA;A7CisbA;A6ChsbA;A7CksbA;A6CjsbA;A7CmsbA;A6ClsbA;A7CosbA;A6CnsbA;A7CqsbA;A6CpsbA;A7CssbA;A6CrsbA;A7CusbA;A6C/tbA;A7CiubA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6CrtbA;A7CutbA;AACA;A6CrtbA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAV+B;AAajC;A7CstbA;AACA;AACA;AACA;A6CrtbA;AAEA;A7CstbA;AACA;AACA;AACA;AACA;AACA;A6CrtbA;AAEA;A7CstbA;A6CrtbA;AAEA;A7CstbA;A6CrtbA;AAEA;A7CstbA;A6CrtbA;AAEA;A7CstbA;A6CrtbA;AAEA;A7CstbA;A6CrtbA;AAEA;AACE;AAA4B;AAC5B;AAA4B;AAC5B;AAA4B;AAG9B;A7CutbA;A6CttbO;AAEP;A7CutbA;AACA;AACA;AACA;AACA;AACA;AACA;A6CxtbO;AACL;AACD;AAED;A7CytbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6CztbO;AACL;AACE;AAAI;AAAmC;AACvC;AACD;A7C6tbH;A6C3tbE;AACD;AAED;A7C4tbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6C5tbO;AACL;AACE;AACD;A7C8tbH;A6C5tbE;AAGA;A7C4tbF;A6C3tbE;AACE;AACD;A7C6tbH;A6C3tbE;AAAa;AAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A7C+tbJ;A6CxubyC;AAavC;A7C8tbF;A6C7tbE;AACE;AACD;AAGD;A7C6tbF;AACA;A6C7tbE;AAIE;AACA;AACD;AAGD;A7C0tbF;AACA;A6C1tbE;A7C4tbF;A6C3tbE;AACE;AACD;AACC;AACD;AACC;AACD;A7C6tbH;A6C5tbE;A7C8tbF;A6C3tbE;A7C6tbF;A6C3tbE;AACE;AACD;A7C6tbH;A6C3tbE;AACD;AAED;A7C4tbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6C5tbO;AAKL;AACE;AACD;A7C0tbH;A6CztbE;AACA;AAEA;AAOA;AACA;AACD;AACD;A7CotbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6CptbO;AACL;AACA;AACD;AAED;A7CqtbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6CrtbO;AACL;AACD;AAED;A7CstbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6CttbO;AACL;AACA;AACA;AACA;A7CwtbF;A6CvtbE;AACE;AACE;AACD;AACF;A7CytbH;A6CxtbE;AACD;AAED;A7CytbA;AACA;AACA;AACA;AACA;AACA;AACA;A6CztbO;AACL;A7C2tbF;A6C1tbE;AACE;A7C4tbJ;A6C3tbI;AACE;AACD;AACC;AACE;AAAW;AAAuB;AAClC;AACD;AACF;AACC;AAAW;AAAuB;AAClC;AACD;AACF;A7CiubH;A6ChubE;AACD;AAED;A7CiubA;AACA;AACA;AACA;AACA;AACA;A6CjubO;AACL;AACE;AACD;A7CmubH;A6ClubE;AAMD;AAED;A7C8tbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6C9tbO;AAIL;AADA;AACA;A7C+tbF;A6C9tbE;A7CgubF;A6CztbE;AAAqB;AAAuB;AAC5C;AASA;AACD;AAED;A7CotbA;AACA;AACA;AACA;AACA;AACA;A6CptbO;AACL;AAKA;AACD;AAED;A7CitbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6CjtbO;AACL;AACD;AAED;A7CktbA;AACA;AACA;AACA;AACA;AACA;AACA;A6CltbO;AACL;A7CotbF;A6CntbE;AACE;AACD;A7CqtbH;A6CptbE;AACD;AAED;A7CqtbA;AACA;AACA;AACA;AACA;AACA;AACA;A6CrtbO;AACL;A7CutbF;A6CttbE;AACE;AACD;A7CwtbH;A6CvtbE;AACD;AAED;A7CwtbA;AACA;AACA;AACA;AACA;AACA;A6CxtbO;AACL;AACE;AACD;A7C0tbH;A6CztbE;AACD;AAED;A7C0tbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6C1tbO;AACL;AACE;AACD;A7C4tbH;A6C3tbE;AACE;AACD;A7C6tbH;A6C5tbE;AACA;AACD;AAED;A7C6tbA;AACA;AACA;AACA;AACA;AACA;A6C7tbO;AACL;AACE;AACD;A7C+tbH;A6C9tbE;AACD;AAED;A7C+tbA;AACA;AACA;AACA;AACA;AACA;AACA;A6C/tbO;AACL;AACE;AACD;A7CiubH;A6ChubE;AACE;AACD;A7CkubH;A6CjubE;AACD;AAED;A7CkubA;AACA;AACA;AACA;AACA;AACA;A6ClubO;AACL;AACA;AACA;AACD;AAED;A7CmubA;AACA;AACA;AACA;AACA;AACA;A6CnubO;AACL;A7CqubF;A6CpubE;AACE;AACD;A7CsubH;A6CrubE;AACA;AACD;AAED;A7CsubA;AACA;AACA;AACA;AACA;AACA;AACA;A6CtubA;AACE;AACE;AACD;A7CwubH;A6CvubE;A7CyubF;A6ClubE;AACD;AAED;A7CmubA;AACA;AACA;AACA;AACA;AACA;AACA;A6CnubO;AACL;AACA;AACA;AACE;AACD;A7CqubH;A6CpubE;AACA;AACA;AACD;AAED;A7CqubA;AACA;AACA;AACA;AACA;AACA;AACA;A6CrubO;AACL;AACE;AACD;A7CuubH;AACA;A6CrubE;AACE;AACD;AAGD;AACA;AACA;A7CqubF;AACA;A6CrubE;AACA;AACA;AAKA;AACA;A7CmubF;A6C9tbE;AACA;AACA;AAMD;AAED;A7C0tbA;AACA;AACA;AACA;AACA;AACA;AACA;A6C1tbO;AACL;AACD;AAED;A7C2tbA;AACA;AACA;AACA;AACA;AACA;AACA;A6C3tbO;AACL;AACE;AACD;A7C6tbH;A6C5tbE;AACE;AACD;A7C8tbH;A6C7tbE;AACD;AAED;A7C8tbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6C9tbO;AACL;AACE;AACD;A7CgubH;A6C/tbE;AACA;A7CiubF;A6C9tbE;AACE;AACD;A7CgubH;AACA;A6C9tbE;AACE;AACD;A7CgubH;AACA;A6C9tbE;AACE;AACD;A7CgubH;AACA;A6C9tbE;AAKD;AAED;A7C2tbA;AACA;AACA;AACA;AACA;AACA;AACA;A6C3tbO;AACL;AACA;AACA;AACD;AAED;A7C4tbA;AACA;AACA;AACA;AACA;A6C5tbO;AACL;AACA;AACA;AAKD;AAED;A7CytbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6CztbO;AACL;AACD;A7C2tbD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8Cj3cA;A9Cm3cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8Cj3cA;A9Cm3cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8Cj3cO;AACL;AACE;AACD;A9Cm3cH;A8Cl3cE;AACE;AACE;AACD;AACF;A9Co3cH;A8Cn3cE;AACD;AAED;A9Co3cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8Cp3cO;AACL;AACA;A9Cs3cF;A8Cr3cE;AACE;A9Cu3cJ;A8Ct3cI;AACE;AACD;AACC;AACE;AACD;A9Cw3cP;A8Cv3cM;AACD;AACF;A9Cy3cH;A8Cx3cE;AACE;AACD;A9C03cH;A8Cz3cE;AACD;AAED;A9C03cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8C13cO;AACL;AACE;AACE;AACD;AACF;A9C43cH;A8C33cE;AACD;AAED;A9C43cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8C53cO;AACL;A9C83cF;A8C73cE;AACE;AACD;A9C+3cH;A8C93cE;AACD;AAED;A9C+3cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8C/3cO;AACL;AACE;AACD;AACF;AAED;A9Cg4cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8Ch4cO;AACL;AACD;A9Ck4cD;AACA;AACA;AACA;AACA;AACA;AACA;A+ChgdA;A/CkgdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+C//cA;A/CigdA;A+ChgdA;A/CkgdA;A+ChgdA;A/CkgdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+ChgdO;AACL;AACA;AACA;AACA;AACE;AAAgB;AADP;AACO;A/CqgdpB;A+CpgdM;AACA;AACA;AACD;A/CsgdL;A+CrgdI;AACD;AACF;A/CugdD;AACA;AACA;AACA;AACA;AACA;AACA;AgDxidA;AhD0idA;AgD1jdA;AhD4jdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgDxjdA;AACA;AAEA;AhDyjdA;AACA;AACA;AACA;AACA;AACA;AgD1jdE;AhD4jdF;AACA;AgD1jdE;AACE;AACA;AAEA;AhD2jdJ;AgD1jdI;AAEA;AhD2jdJ;AACA;AACA;AACA;AgD1jdI;AAEA;AhD2jdJ;AgD1jdI;AACD;AAED;AhD2jdF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgD7jdI;AACD;AAED;AhD8jdF;AACA;AACA;AACA;AACA;AACA;AgD9jdI;AhDgkdJ;AgD/jdI;AACE;AACA;AACD;AhDikdL;AgDhkdI;AACD;AAED;AhDikdF;AACA;AACA;AACA;AACA;AACA;AgDjkdI;AACE;AACD;AhDmkdL;AgDlkdI;AAAoB;AAAS;AAAV;AACnB;AACD;AAED;AhDskdF;AACA;AACA;AACA;AACA;AgDtkdI;AACE;AACD;AhDwkdL;AgDtkdI;AACA;AACA;AACA;AhDwkdJ;AgDvkdI;AAAyB;AhD0kd7B;AgDxkdM;AACE;AACA;AACD;AACF;AhD0kdL;AgDxkdI;AACE;AACA;AACD;AACF;AhD0kdH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiDlrdA;AjDordA;AiDpsdA;AjDssdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiDlsdA;AACA;AAEA;AjDmsdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiDlsdO;AACL;AjDosdF;AiDnsdE;AACE;AACD;AjDqsdH;AiDpsdE;AACD;AAED;AjDqsdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiDrsdO;AACL;AACA;AACA;AAAO;AAA4B;AAAnC;AACD;AAED;AjDysdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiDzsdO;AACL;AACD;AAED;AjD0sdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiD1sdO;AACL;AACE;AACD;AACC;AACD;AACF;AAED;AjD2sdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiD3sdO;AAA+C;AAAZ;AAAY;AjDgtdtD;AiD/sdE;AACA;AAEA;AjDgtdF;AiD/sdE;AACA;AAAY;AAAW;AAAW;AAAvB;AjDqtdb;AiD3tdsD;AAAA;AAAA;AAAA;AAAA;AjDiudtD;AiDttdI;AACE;AACD;AjDwtdL;AiDvtdI;AjDytdJ;AiDxtdI;AACE;AACD;AjD0tdL;AiDztdI;AACE;AACA;AACD;AjD2tdL;AiD1tdI;AACE;AAEA;AjD2tdN;AiD1tdM;AACE;AjD4tdR;AiD3tdQ;AACE;AAAY;AAAa;AAAa;AAA3B;AACX;AACD;AACF;AjDiudP;AiDhudM;AACD;AAlCiD;AjDqwdtD;AiD5vdE;AAAyB;AjD+vd3B;AiD/vd2B;AA0BxB;AjDwudH;AiDvudE;AACD;AAED;AjDwudA;AACA;AACA;AACA;AACA;AACA;AiDxudO;AACL;AACE;AACE;AACD;AjD0udL;AiDzudI;AACD;AACF;AjD2udD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkDr4dA;AlDu4dA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkDr4dA;AlDu4dA;AACA;AACA;AACA;AACA;AACA;AkDv4dE;AlDy4dF;AACA;AkDv4dE;AACE;AACA;AACD;AAED;AlDw4dF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkD14dI;AlD44dJ;AkD34dI;AACE;AACD;AlD64dL;AkD54dI;AACD;AAED;AlD64dF;AACA;AACA;AACA;AACA;AACA;AACA;AkD74dI;AACE;AACD;AlD+4dL;AkD94dI;AACA;AAA0B;AAAM;AAAP;AAC1B;AAED;AlDk5dF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkDl5dI;AACA;AACA;AlDo5dJ;AkDn5dI;AACE;AlDq5dN;AkDn5dM;AACE;AACD;AAED;AACA;AlDo5dN;AACA;AkDp5dM;AACE;AACD;AACC;AACD;AACC;AACD;AACF;AlDs5dL;AkDr5dI;AACD;AAED;AlDs5dF;AACA;AACA;AACA;AACA;AkDt5dI;AlDw5dJ;AkDv5dI;AACE;AACD;AACF;AAED;AlDw5dF;AACA;AACA;AACA;AACA;AACA;AACA;AkDx5dI;AACE;AACD;AlD05dL;AkDz5dI;AACD;AAED;AlD05dF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkD55dI;AACD;AlD85dH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmD5heA;AnD8heA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmD5heA;AnD8heA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmD5heE;AnD8heF;AACA;AmD5heE;AACE;AAEA;AnD6heJ;AACA;AACA;AmD5heI;AAAmB;AAAO;AACxB;AACA;AACD;AAED;AnD+heJ;AACA;AACA;AmD9heI;AAEA;AnD+heJ;AACA;AACA;AmD9heI;AACD;AAGH;AnD8heA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmDhieO;AACL;AACE;AACD;AACF;AAED;AnDiieA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmDjieO;AAAmC;AAAX;AAAW;AnDsie1C;AmDrieE;AACE;AACA;AnDuieJ;AmDtieI;AACE;AACD;AnDwieL;AmDvieI;AACE;AACD;AnDyieL;AmDxieI;AACA;AnD0ieJ;AmDxieI;AACE;AACE;AACD;AnD0ieP;AmDzieM;AACE;AACD;AACF;AnD2ieL;AmD1ieI;AACE;AACE;AACD;AnD4ieP;AmD3ieM;AACE;AACD;AACF;AnD6ieL;AmD5ieI;AACE;AACD;AACF;AACF;AAED;AnD6ieA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmD/ieE;AnDijeF;AACA;AmD/ieE;AACE;AACA;AnDijeJ;AmDhjeI;AACE;AACA;AACD;AAED;AnDijeJ;AmDhjeI;AAEA;AnDijeJ;AmDhjeI;AAEA;AnDijeJ;AmDhjeI;AnDkjeJ;AmDhjeI;AACE;AACE;AACD;AACF;AACF;AAED;AnDijeF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmDpjee;AnDsjef;AmDrjeI;AACA;AAEI;AACE;AACD;AACF;AAEC;AACA;AACA;AACE;AACD;AACF;AAEH;AACD;AAED;AnDmjeF;AACA;AACA;AmDnjeI;AACD;AnDqjeH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoDtveA;ApDwveA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoDtveA;ApDwveA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoDtveO;AACL;AACA;AAEA;ApDuveF;AACA;AACA;AoDtveE;AACE;ApDwveJ;AoDtveI;AAEA;AACD;AAED;ApDsveF;AACA;AACA;AACA;AoDtveE;AACE;ApDwveJ;AoDtveI;AACE;AACD;AACF;ApDwveH;AoDtveE;AAAyB;AAAN;AAAM;ApD2ve3B;AoD1veI;AACE;AACD;AACC;AACD;AACF;AACF;AAED;ApD2veA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoD3veO;AACL;AACA;AACA;AAEA;ApD4veF;AACA;AACA;AoD3veE;AACE;AACA;AACD;AAED;ApD4veF;AACA;AACA;AACA;AoD5veE;AACE;AACA;ApD8veJ;AoD7veI;AACE;AACD;AACC;AACD;AACF;ApD+veH;AoD7veE;AACE;ApD+veJ;AoDhwe2B;AAAN;AAAM;ApDowe3B;AoDlweI;ApDoweJ;AoDnweI;AACE;AACD;AACF;AACF;ApDqweD;AACA;AACA;AACA;AACA;AACA;AACA;AqDn2eA;ArDq2eA;AqDp2eA;ArDs2eA;AqDv3eA;ArDy3eA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqDp3eA;ArDs3eA;AACA;AACA;AACA;AACA;AACA;AqDt3eE;ArDw3eF;AACA;AqDt3eE;AACE;ArDw3eJ;AACA;AACA;AACA;AqDt3eI;AAEA;ArDu3eJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqDt3eI;AACD;AAED;ArDu3eF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqDz3eI;AACA;AACD;AAED;ArD03eF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqD13eI;ArD43eJ;AqD33eI;AACE;ArD63eN;AqD53eM;AACE;AACA;AAIA;AAAiB;AAAD;AACjB;AACC;AACA;AACA;AAHK;AAAA;AAAA;AAML;AAAiB;AAAS;AAAS;AAAnB;AACjB;ArDk4eP;AqDj4eM;AACE;AACD;ArDm4eP;AqDl4eM;AACD;ArDo4eL;AqDn4eI;AACD;AAED;ArDo4eF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqDp4eI;AACE;AACA;AACD;ArDs4eL;AqDr4eI;AACA;AACA;ArDu4eJ;AqDt4eI;AACE;AACA;AACA;AACD;AACF;AAED;ArDu4eF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqDv4eI;AACE;AACA;AACD;ArDy4eL;AqDx4eI;AACA;ArD04eJ;AqDz4eI;AACE;AACA;AACA;AACD;AACF;AAED;ArD04eF;AACA;AACA;AACA;AACA;AACA;AqD14eI;AACE;AACD;ArD44eL;AACA;AqD34eI;ArD64eJ;AqD54eI;AACE;AACD;AACF;ArD84eH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsDnifA;AtDqifA;AsDpifA;AtDsifA;AsDrifA;AtDuifA;AsDtifA;AtDwifA;AsDvifA;AtDyifA;AsDlifA;AtDoifA;AsDnifA;AtDqifA;AsDpifA;AtDsifA;AsDrifA;AtDuifA;AsDrkfA;AtDukfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsDrjfA;AACA;AAEA;AtDsjfA;AsDrjfA;AAEA;AtDsjfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsDrjfO;AACL;AtDujfF;AsDtjfE;AACE;AAAgB;AAA0C;AAC1D;AACA;AACD;AtD0jfH;AsDzjfE;AAAQ;AAAO;AAAR;AACR;AAED;AtD6jfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsD7jfO;AACL;AAEA;AtD8jfF;AsD7jfE;AACE;AACA;AACA;AACA;AACA;AACD;AtD+jfH;AsD7jfE;AACA;AACE;AACA;AtD+jfJ;AsD9jfI;AtDgkfJ;AACA;AACA;AsD9jfI;AACE;AACD;AATU;AtD0kff;AsD9jfE;AACE;AtDgkfJ;AsD/jfI;AACE;AACE;AACA;AACA;AAGD;AACF;AtD+jfL;AsD9jfI;AACE;AACD;AtDgkfL;AsD/jfI;AACE;AACD;AACF;AtDikfH;AsD/jfE;AACD;AAED;AtDgkfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsDhkfO;AACL;AACE;AACD;AtDkkfH;AsDhkfE;AtDkkfF;AsD/jfE;AtDikfF;AsDhkfE;AACA;AACA;AtDkkfF;AsDhkfE;AACE;AACD;AtDkkfH;AsDhkfE;AACA;AtDkkfF;AsDjkfE;AACE;AACD;AtDmkfH;AsDjkfE;AACQ;AAAA;AAEJ;AAOE;AACD;AtD6jfP;AsD5jfM;AACE;AAD0B;AAG5B;AAEgB;AAAA;AACjB;AACJ;AAED;AtD6jfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsD7jfO;AACL;AtD+jfF;AsD9jfE;AACE;AACD;AtDgkfH;AsD/jfE;AACD;AAED;AtDgkfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsDhkfO;AACL;AAGA;AtDgkfF;AsD/jfE;AACA;AAMA;AACA;AtD4jfF;AsD3jfE;AACE;AACD;AtD6jfH;AACA;AsD3jfE;AAEA;AACD;AAED;AtD2jfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsD3jfO;AACL;AAEA;AtD4jfF;AsD3jfE;AACA;AtD6jfF;AsD5jfE;AACE;AACA;AACD;AtD8jfH;AsD7jfE;AACD;AAED;AtD8jfA;AACA;AACA;AACA;AACA;AsD9jfO;AACL;AtDgkfF;AsD/jfE;AACE;AACA;AACA;AACiC;AAAA;AtDkkfrC;AsD5jfI;AAEA;AtD6jfJ;AsD3jfI;AACE;AACE;AAA4B;AAE/B;AACC;AACE;AAA4B;AAE/B;AACF;AtD6jfH;AsD5jfE;AACD;AAED;AtD6jfA;AACA;AACA;AACA;AACA;AACA;AACA;AsD7jfA;AACE;AACE;AACD;AtD+jfH;AsD9jfE;AACA;AAMA;AACD;AAED;AtD0jfA;AACA;AACA;AACA;AACA;AACA;AsD1jfA;AACE;AACD;AAED;AtD2jfA;AACA;AACA;AACA;AACA;AACA;AACA;AsD3jfO;AACL;AACE;AACE;AACD;AtD6jfL;AsDhkfgC;AAM5B;AACA;AAEA;AtD4jfJ;AsD3jfI;AACA;AACD;AACF;AAED;AtD4jfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsD5jfO;AACL;AtD8jfF;AsD7jfE;AAIE;AAGM;AAKA;AACD;AARH;AAUa;AAAA;AACJ;AAAA;AAEZ;AtDujfH;AACA;AsDtjfE;AACD;AtDwjfD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuDt9fA;AvDw9fA;AuDv9fA;AvDy9fA;AuDx9fA;AvD09fA;AuDz9fA;AvD29fA;AuD19fA;AvD49fA;AuDh/fA;AvDk/fA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuDz+fA;AAEA;AvD0+fA;AACA;AACA;AuDz+fA;AAEA;AvD0+fA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuDz+fO;AACL;AACE;AACD;AvD2+fH;AuD1+fE;AACA;AACA;AACD;AAED;AvD2+fA;AACA;AACA;AACA;AACA;AACA;AuD3+fO;AACL;AACA;AACD;AAED;AvD4+fA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuD9+fE;AvDg/fF;AACA;AuD9+fE;AAAiB;AvDi/fnB;AuDh/fI;AACA;AAEA;AvDi/fJ;AuDh/fI;AvDk/fJ;AuD/+fI;AvDi/fJ;AuDh/fI;AACE;AACD;AvDk/fL;AACA;AuDj/fI;AACA;AACA;AAMA;AAEA;AvD6+fJ;AuD5+fI;AAEA;AvD6+fJ;AuD5+fI;AAEI;AACA;AAFc;AAIP;AAAA;AAEP;AACA;AACE;AAD2D;AAG7D;AACA;AACA;AACD;AAEH;AvD4+fJ;AACA;AACA;AACA;AuD3+fI;AAEA;AvD4+fJ;AACA;AACA;AACA;AuD3+fI;AAEA;AvD4+fJ;AACA;AACA;AACA;AACA;AACA;AuD3+fI;AACD;AAED;AvD4+fF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuD/+f2C;AvDi/f3C;AuDh/fI;AACE;AACE;AACA;AAAsB;AAAQ;AAAS;AAAlB;AvDs/f7B;AuDp/fQ;AvDs/fR;AuDp/fQ;AAAgB;AAAmC;AACjD;AACA;AACA;AACA;AAJiD;AvD6/f3D;AuDv/fQ;AAAa;AAAO;AACrB;AACF;AACF;AAED;AvD0/fF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuD3/fyB;AAKjB;AAAqC;AALpB;AAAA;AAAA;AAOrB;AvD4/fJ;AuD3/fI;AACE;AAIA;AACD;AvD0/fL;AuDz/fI;AAMA;AAEA;AACD;AAED;AvDo/fF;AACA;AACA;AACA;AACA;AACA;AuDp/fI;AACD;AAED;AvDq/fF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuDr/fI;AvDu/fJ;AuDt/fI;AACE;AACD;AACC;AACD;AACF;AAED;AvDu/fF;AACA;AACA;AACA;AACA;AACA;AuDv/fI;AACD;AvDy/fH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwDlugBA;AxDougBA;AwDjugBA;AxDmugBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwDjugBA;AxDmugBA;AwDjugBA;AACE;AACA;AACE;AACD;AxDmugBH;AACA;AwDlugBE;AACE;AACD;AAED;AACA;AxDmugBF;AACA;AwDnugBE;AACE;AACD;AAED;AxDougBF;AACA;AwDpugBE;AACD;AAED;AxDqugBA;AACA;AACA;AACA;AACA;AACA;AwDrugBO;AACL;AACD;AxDuugBD;AACA;AACA;AFzxgBA;AACA","file":"amp-bind-0.1.max.js","sourcesContent":["(self.AMP=self.AMP||[]).push({n:\"amp-bind\",v:\"1910072132470\",f:(function(AMP,_){\n$1\n})});","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.AmpBindMacro = void 0;\n\nvar _layout = require(\"../../../src/layout\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * The <amp-bind-macro> element is used to define an expression macro that can\n * be called from other amp-bind expressions within the document.\n */\nvar AmpBindMacro =\n/*#__PURE__*/\nfunction (_AMP$BaseElement) {\n  _inheritsLoose(AmpBindMacro, _AMP$BaseElement);\n\n  function AmpBindMacro() {\n    return _AMP$BaseElement.apply(this, arguments) || this;\n  }\n\n  var _proto = AmpBindMacro.prototype;\n\n  /** @override */\n  _proto.getLayoutPriority = function getLayoutPriority() {\n    // Loads after other content.\n    return _layout.LayoutPriority.METADATA;\n  }\n  /** @override */\n  ;\n\n  _proto.isAlwaysFixed = function isAlwaysFixed() {\n    return true;\n  }\n  /** @override */\n  ;\n\n  _proto.isLayoutSupported = function isLayoutSupported(unusedLayout) {\n    return true;\n  }\n  /** @override */\n  ;\n\n  _proto.renderOutsideViewport = function renderOutsideViewport() {\n    // We want the macro to be available wherever it is in the document.\n    return true;\n  }\n  /**\n   * @return {string} Returns a string to identify this tag. May not be unique\n   *     if the element name is not unique.\n   * @protected\n   */\n  ;\n\n  _proto.getName_ = function getName_() {\n    return '<amp-bind-macro> ' + (this.element.getAttribute('id') || '<unknown id>');\n  };\n\n  return AmpBindMacro;\n}(AMP.BaseElement);\n\nexports.AmpBindMacro = AmpBindMacro;\n\n},{\"../../../src/layout\":28}],2:[function(require,module,exports){\n\"use strict\";\n\nvar _ampBindMacro = require(\"./amp-bind-macro\");\n\nvar _ampState = require(\"./amp-state\");\n\nvar _bindImpl = require(\"./bind-impl\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nvar TAG = 'amp-bind';\nAMP.extension(TAG, '0.1', function (AMP) {\n  AMP.registerServiceForDoc('bind', _bindImpl.Bind);\n  AMP.registerElement('amp-state', _ampState.AmpState);\n  AMP.registerElement('amp-bind-macro', _ampBindMacro.AmpBindMacro);\n});\n\n},{\"./amp-bind-macro\":1,\"./amp-state\":3,\"./bind-impl\":5}],3:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.AmpState = void 0;\n\nvar _actionConstants = require(\"../../../src/action-constants\");\n\nvar _layout = require(\"../../../src/layout\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _batchedJson = require(\"../../../src/batched-json\");\n\nvar _eventHelper = require(\"../../../src/event-helper\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _url = require(\"../../../src/url\");\n\nvar _xhrUtils = require(\"../../../src/utils/xhr-utils\");\n\nvar _dom = require(\"../../../src/dom\");\n\nvar _style = require(\"../../../src/style\");\n\nvar _json = require(\"../../../src/json\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar AmpState =\n/*#__PURE__*/\nfunction (_AMP$BaseElement) {\n  _inheritsLoose(AmpState, _AMP$BaseElement);\n\n  /**\n   * @param {!Element} element\n   */\n  function AmpState(element) {\n    var _this;\n\n    _this = _AMP$BaseElement.call(this, element) || this;\n    /**\n     * JSON in child <script>, if any.\n     * - `undefined` if the script has never been parsed.\n     * - `null` or `!JsonObject` once the script has been parsed.\n     * @private {?JsonObject|undefined}\n     */\n\n    _this.localData_ = undefined;\n    return _this;\n  }\n  /** @override */\n\n\n  var _proto = AmpState.prototype;\n\n  _proto.getLayoutPriority = function getLayoutPriority() {\n    // Loads after other content.\n    return _layout.LayoutPriority.METADATA;\n  }\n  /** @override */\n  ;\n\n  _proto.isAlwaysFixed = function isAlwaysFixed() {\n    return true;\n  }\n  /** @override */\n  ;\n\n  _proto.isLayoutSupported = function isLayoutSupported(unusedLayout) {\n    return true;\n  }\n  /** @override */\n  ;\n\n  _proto.buildCallback = function buildCallback() {\n    var _this2 = this;\n\n    (0, _style.toggle)(this.element,\n    /* opt_display */\n    false);\n    this.element.setAttribute('aria-hidden', 'true');\n    var element = this.element;\n\n    if (element.hasAttribute('overridable')) {\n      _services.Services.bindForDocOrNull(element).then(function (bind) {\n        (0, _log.devAssert)(bind);\n        bind.addOverridableKey(element.getAttribute('id'));\n      });\n    } // Parse child <script> tag and/or fetch JSON from `src` attribute.\n    // The latter is allowed to overwrite the former.\n\n\n    this.parseAndUpdate();\n\n    if (this.element.hasAttribute('src')) {\n      this.fetchAndUpdate_(\n      /* isInit */\n      true);\n    }\n\n    this.registerAction('refresh', function () {\n      (0, _log.userAssert)(_this2.element.hasAttribute('src'), 'Can\\'t refresh <amp-state> without \"src\" attribute.');\n\n      _this2.fetchAndUpdate_(\n      /* isInit */\n      false,\n      /* opt_refresh */\n      true);\n    }, _actionConstants.ActionTrust.HIGH);\n  }\n  /** @override */\n  ;\n\n  _proto.mutatedAttributesCallback = function mutatedAttributesCallback(mutations) {\n    if (!this.getAmpDoc().hasBeenVisible()) {\n      var TAG = this.getName_();\n      (0, _log.dev)().error(TAG, 'ampdoc must be visible before mutation.');\n      return;\n    } // \"src\" attribute may be missing if mutated with a non-primitive.\n\n\n    if (mutations['src'] !== undefined && this.element.hasAttribute('src')) {\n      this.fetchAndUpdate_(\n      /* isInit */\n      false);\n    }\n  }\n  /** @override */\n  ;\n\n  _proto.renderOutsideViewport = function renderOutsideViewport() {\n    // We want the state data to be available wherever it is in the document.\n    return true;\n  }\n  /**\n   * Parses JSON in child <script> and updates state.\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.parseAndUpdate = function parseAndUpdate() {\n    if (this.localData_ === undefined) {\n      this.localData_ = this.parse_();\n\n      if (this.localData_ !== null) {\n        return this.updateState_(this.localData_,\n        /* isInit */\n        true);\n      }\n    }\n\n    return Promise.resolve();\n  }\n  /**\n   * Parses JSON in child <script> and returns it.\n   * @return {?JsonObject}\n   * @private\n   */\n  ;\n\n  _proto.parse_ = function parse_() {\n    var _this3 = this;\n\n    var children = this.element.children;\n\n    if (children.length == 0) {\n      return null;\n    }\n\n    var TAG = this.getName_();\n\n    if (children.length != 1) {\n      this.user().error(TAG, 'Should contain exactly one <script> child.');\n      return null;\n    }\n\n    var firstChild = children[0];\n\n    if (!(0, _dom.isJsonScriptTag)(firstChild)) {\n      this.user().error(TAG, 'State should be in a <script> tag with type=\"application/json\".');\n      return null;\n    }\n\n    return (0, _json.tryParseJson)(firstChild.textContent, function (e) {\n      _this3.user().error(TAG, 'Failed to parse state. Is it valid JSON?', e);\n    });\n  }\n  /**\n   * Wrapper to stub during testing.\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {!UrlReplacementPolicy} policy\n   * @param {boolean=} opt_refresh\n   * @param {string=} token\n   * @return {!Promise<!JsonObject|!Array<JsonObject>>}\n   * @private\n   */\n  ;\n\n  _proto.fetch_ = function fetch_(ampdoc, policy, opt_refresh, token) {\n    if (token === void 0) {\n      token = undefined;\n    }\n\n    return (0, _batchedJson.batchFetchJsonFor)(ampdoc, this.element,\n    /* opt_expr */\n    undefined, policy, opt_refresh, token);\n  }\n  /**\n   * Transforms and prepares the fetch request.\n   * @param {boolean} isInit\n   * @param {boolean=} opt_refresh\n   * @return {!Promise<!JsonObject|!Array<JsonObject>>}\n   */\n  ;\n\n  _proto.prepareAndSendFetch_ = function prepareAndSendFetch_(isInit, opt_refresh) {\n    var _this4 = this;\n\n    var element = this.element;\n    var ampdoc = this.getAmpDoc();\n    var src = element.getAttribute('src');\n    var isCorsFetch = (0, _url.getSourceOrigin)(src) !== (0, _url.getSourceOrigin)(ampdoc.win.location); // Require opt-in for URL variable replacements on CORS fetches triggered\n    // by [src] mutation. @see spec/amp-var-substitutions.md\n\n    var policy = isCorsFetch && !isInit ? _batchedJson.UrlReplacementPolicy.OPT_IN : _batchedJson.UrlReplacementPolicy.ALL;\n    return (0, _xhrUtils.getViewerAuthTokenIfAvailable)(element).then(function (token) {\n      return _this4.fetch_(ampdoc, policy, opt_refresh, token).catch(function (error) {\n        var event = error ? (0, _eventHelper.createCustomEvent)(_this4.win, 'amp-state.error', (0, _object.dict)({\n          'response': error.response\n        })) : null; // Trigger \"fetch-error\" event on fetch failure.\n\n        var actions = _services.Services.actionServiceForDoc(element);\n\n        actions.trigger(element, 'fetch-error', event, _actionConstants.ActionTrust.LOW);\n      });\n    });\n  }\n  /**\n   * @param {boolean} isInit\n   * @param {boolean=} opt_refresh\n   * @return {!Promise<undefined>}\n   * @private\n   */\n  ;\n\n  _proto.fetchAndUpdate_ = function fetchAndUpdate_(isInit, opt_refresh) {\n    var _this5 = this;\n\n    // Don't fetch in prerender mode.\n    return this.getAmpDoc().whenFirstVisible().then(function () {\n      return _this5.prepareAndSendFetch_(isInit, opt_refresh);\n    }).then(function (json) {\n      return _this5.updateState_(json, isInit);\n    });\n  }\n  /**\n   * @param {*} json\n   * @param {boolean} isInit\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto.updateState_ = function updateState_(json, isInit) {\n    if (json === undefined || json === null) {\n      return Promise.resolve();\n    }\n\n    var id = (0, _log.userAssert)(this.element.id, '<amp-state> must have an id.');\n    return _services.Services.bindForDocOrNull(this.element).then(function (bind) {\n      (0, _log.devAssert)(bind);\n      var state =\n      /** @type {!JsonObject} */\n      (0, _object.map)();\n      state[id] = json; // As a rule, initialization should skip evaluation.\n      // If we're not initializing then this must be a mutation, so we must\n      // skip <amp-state> evaluation to prevent update cycles.\n\n      bind.setState(state,\n      /* skipEval */\n      isInit,\n      /* skipAmpState */\n      !isInit);\n    });\n  }\n  /**\n   * @return {string} Returns a string to identify this tag. May not be unique\n   *     if the element id is not unique.\n   * @private\n   */\n  ;\n\n  _proto.getName_ = function getName_() {\n    return '<amp-state> ' + (this.element.getAttribute('id') || '<unknown id>');\n  };\n\n  return AmpState;\n}(AMP.BaseElement);\n\nexports.AmpState = AmpState;\n\n},{\"../../../src/action-constants\":7,\"../../../src/batched-json\":10,\"../../../src/dom\":16,\"../../../src/event-helper\":20,\"../../../src/json\":27,\"../../../src/layout\":28,\"../../../src/log\":29,\"../../../src/services\":35,\"../../../src/style\":40,\"../../../src/url\":45,\"../../../src/utils/object\":49,\"../../../src/utils/xhr-utils\":54}],4:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.BindEvents = void 0;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * TODO(choumx, #19657): Remove/replace with DOM polling in integration tests.\n * @enum {string}\n */\nvar BindEvents = {\n  INITIALIZE: 'amp:bind:initialize',\n  RESCAN_TEMPLATE: 'amp:bind:rescan-template',\n  SET_STATE: 'amp:bind:setState'\n};\nexports.BindEvents = BindEvents;\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.Bind = void 0;\n\nvar _ampEvents = require(\"../../../src/amp-events\");\n\nvar _bindEvents = require(\"./bind-events\");\n\nvar _bindValidator = require(\"./bind-validator\");\n\nvar _chunk = require(\"../../../src/chunk\");\n\nvar _promise = require(\"../../../src/utils/promise\");\n\nvar _actionConstants = require(\"../../../src/action-constants\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _signals = require(\"../../../src/utils/signals\");\n\nvar _dom = require(\"../../../src/dom\");\n\nvar _eventHelper = require(\"../../../src/event-helper\");\n\nvar _rateLimit = require(\"../../../src/utils/rate-limit\");\n\nvar _json = require(\"../../../src/json\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _array = require(\"../../../src/utils/array\");\n\nvar _mode = require(\"../../../src/mode\");\n\nvar _service = require(\"../../../src/service\");\n\nvar _ampWorker = require(\"../../../src/web-worker/amp-worker\");\n\nvar _format = require(\"../../../src/format\");\n\nvar _types = require(\"../../../src/types\");\n\nvar _error = require(\"../../../src/error\");\n\nvar _urlRewrite = require(\"../../../src/url-rewrite\");\n\nvar _string = require(\"../../../src/string\");\n\nvar _documentReady = require(\"../../../src/document-ready\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nvar TAG = 'amp-bind';\n/**\n * Regular expression that identifies AMP CSS classes.\n * Includes 'i-amphtml-', '-amp-', and 'amp-' prefixes.\n * @type {!RegExp}\n */\n\nvar AMP_CSS_RE = /^(i?-)?amp(html)?-/;\n/**\n * Maximum depth for state merge.\n * @type {number}\n */\n\nvar MAX_MERGE_DEPTH = 10;\n/** @const {!Object<string, !Object<string, boolean>>} */\n\nvar FORM_VALUE_PROPERTIES = {\n  'INPUT': {\n    'checked': true,\n    'value': true\n  },\n  'OPTION': {\n    'selected': true\n  },\n  'TEXTAREA': {\n    'text': true\n  }\n};\n/**\n * A bound property, e.g. [property]=\"expression\".\n * `previousResult` is the result of this expression during the last evaluation.\n * @typedef {{property: string, expressionString: string, previousResult: (BindExpressionResultDef|undefined)}}\n */\n\nvar BoundPropertyDef;\n/**\n * A tuple containing a single element and all of its bound properties.\n * @typedef {{boundProperties: !Array<BoundPropertyDef>, element: !Element}}\n */\n\nvar BoundElementDef;\n/**\n * A map of tag names to arrays of attributes that do not have non-bind\n * counterparts. For instance, amp-carousel allows a `[slide]` attribute,\n * but does not support a `slide` attribute.\n * @const {!Object<string, !Array<string>>}\n */\n\nvar BIND_ONLY_ATTRIBUTES = (0, _object.map)({\n  'AMP-CAROUSEL': ['slide'],\n  // TODO (#18875): add is-layout-container to validator file for amp-list\n  'AMP-LIST': ['state', 'is-layout-container'],\n  'AMP-SELECTOR': ['selected']\n});\n/**\n * Elements that opt-out of tree walking in favor of rescan() with {fast: true}.\n * @const {!Array<string>}\n */\n\nvar FAST_RESCAN_TAGS = ['AMP-LIST'];\n/**\n * Bind is an ampdoc-scoped service that handles the Bind lifecycle, from\n * scanning for bindings to evaluating expressions to mutating elements.\n * @implements {../../../src/service.EmbeddableService}\n */\n\nvar Bind =\n/*#__PURE__*/\nfunction () {\n  /**\n   * If `opt_win` is provided, scans its document for bindings instead.\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {!Window=} opt_win\n   */\n  function Bind(ampdoc, opt_win) {\n    var _this = this;\n\n    // TODO(#22733): remove opt_win subroooting once ampdoc-fie is launched.\n\n    /** @const {!../../../src/service/ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampdoc;\n    /** @const @private {!Window} */\n\n    this.win_ = ampdoc.win;\n    /**\n     * The window containing the document to scan.\n     * May differ from the `ampdoc`'s window e.g. in FIE.\n     * @const @private {!Window}\n     */\n\n    this.localWin_ = opt_win || ampdoc.win;\n    /**\n     * Array of ActionInvocation.sequenceId values that have been invoked.\n     * Used to ensure that only one \"AMP.setState\" or \"AMP.pushState\" action\n     * may be triggered per event. Periodically cleared.\n     * @const @private {!Array<number>}\n     */\n\n    this.actionSequenceIds_ = [];\n    /** @const @private {!Function} */\n\n    this.eventuallyClearActionSequenceIds_ = (0, _rateLimit.debounce)(this.win_, function () {\n      _this.actionSequenceIds_.length = 0;\n    }, 5000);\n    /** @private {!Array<BoundElementDef>} */\n\n    this.boundElements_ = [];\n    /**\n     * Maps expression string to the element(s) that contain it.\n     * @private @const {!Object<string, !Array<!Element>>}\n     */\n\n    this.expressionToElements_ = (0, _object.map)();\n    /** @private {!../../../src/service/history-impl.History} */\n\n    this.history_ = _services.Services.historyForDoc(ampdoc);\n    /** @private {!Array<string>} */\n\n    this.overridableKeys_ = [];\n    /**\n     * Upper limit on total number of bindings.\n     *\n     * The initial value is set to 1000 which, based on ~2ms expression parse\n     * time, caps \"time to interactive\" at ~2s after page load.\n     *\n     * User interactions can add new bindings (e.g. infinite scroll), so this\n     * can increase over time to a final limit of 2000 bindings.\n     *\n     * @private {number}\n     */\n\n    this.maxNumberOfBindings_ = 1000;\n    /** @const @private {!../../../src/service/resources-interface.ResourcesInterface} */\n\n    this.resources_ = _services.Services.resourcesForDoc(ampdoc);\n    /**\n     * The current values of all bound expressions on the page.\n     * @const @private {!JsonObject}\n     */\n\n    this.state_ =\n    /** @type {!JsonObject} */\n    (0, _object.map)();\n    /** @const {!../../../src/service/timer-impl.Timer} */\n\n    this.timer_ = _services.Services.timerFor(this.win_);\n    /** @private {?./bind-validator.BindValidator} */\n\n    this.validator_ = null;\n    /** @const @private {!../../../src/service/viewer-interface.ViewerInterface} */\n\n    this.viewer_ = _services.Services.viewerForDoc(this.ampdoc);\n    this.viewer_.onMessageRespond('premutate', this.premutate_.bind(this));\n    /**\n     * Resolved when the service finishes scanning the document for bindings.\n     * @const @private {Promise}\n     */\n\n    this.initializePromise_ = ampdoc.whenFirstVisible().then(function () {\n      if (opt_win) {\n        // In FIE, scan the document node of the iframe window.\n        var document = opt_win.document;\n        return (0, _documentReady.whenDocumentReady)(document).then(function () {\n          return document;\n        });\n      } else {\n        // Otherwise, scan the root node of the ampdoc.\n        return ampdoc.whenReady().then(function () {\n          return ampdoc.getRootNode();\n        });\n      }\n    }).then(function (root) {\n      return _this.initialize_(root);\n    });\n    /** @const @private {!Deferred} */\n\n    this.addMacrosDeferred_ = new _promise.Deferred();\n    /** @private {Promise} */\n\n    this.setStatePromise_ = null;\n    /** @private @const {!../../../src/utils/signals.Signals} */\n\n    this.signals_ = new _signals.Signals(); // Install debug tools.\n\n    var g = self.AMP;\n    g.printState = g.printState || this.debugPrintState_.bind(this);\n\n    g.setState = g.setState || function (state) {\n      return _this.setState(state);\n    };\n\n    g.eval = g.eval || this.debugEvaluate_.bind(this);\n  }\n  /**\n   * @param {!Window} embedWin\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @nocollapse\n   */\n\n\n  Bind.installInEmbedWindow = function installInEmbedWindow(embedWin, ampdoc) {\n    (0, _service.installServiceInEmbedScope)(embedWin, 'bind', new Bind(ampdoc, embedWin));\n  }\n  /**\n   * @return {!../../../src/utils/signals.Signals}\n   */\n  ;\n\n  var _proto = Bind.prototype;\n\n  _proto.signals = function signals() {\n    return this.signals_;\n  }\n  /**\n   * Merges `state` into the current state and immediately triggers an\n   * evaluation unless `opt_skipEval` is false.\n   * @param {!JsonObject} state\n   * @param {boolean=} opt_skipEval\n   * @param {boolean=} opt_skipAmpState\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.setState = function setState(state, opt_skipEval, opt_skipAmpState) {\n    var _this2 = this;\n\n    (0, _log.dev)().info(TAG, 'setState (init=%s):', opt_skipEval, state);\n\n    try {\n      (0, _object.deepMerge)(this.state_, state, MAX_MERGE_DEPTH);\n    } catch (e) {\n      (0, _log.user)().error(TAG, 'Failed to merge result from AMP.setState().', e);\n    }\n\n    if (opt_skipEval) {\n      return Promise.resolve();\n    }\n\n    var promise = this.initializePromise_.then(function () {\n      return _this2.evaluate_();\n    }).then(function (results) {\n      return _this2.apply_(results, opt_skipAmpState);\n    });\n\n    if ((0, _mode.getMode)().test) {\n      promise.then(function () {\n        _this2.dispatchEventForTesting_(_bindEvents.BindEvents.SET_STATE);\n      });\n    }\n\n    return this.setStatePromise_ = promise;\n  }\n  /**\n   * Executes an `AMP.setState()` or `AMP.pushState()` action.\n   * @param {!../../../src/service/action-impl.ActionInvocation} invocation\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.invoke = function invoke(invocation) {\n    var args = invocation.args,\n        event = invocation.event,\n        method = invocation.method,\n        sequenceId = invocation.sequenceId,\n        tagOrTarget = invocation.tagOrTarget; // Store the sequenceId values of action invocations and only allow one\n    // setState() or pushState() event per sequence.\n\n    if (this.actionSequenceIds_.includes(sequenceId)) {\n      (0, _log.user)().error(TAG, 'One state action allowed per event.');\n      return Promise.resolve();\n    }\n\n    this.actionSequenceIds_.push(sequenceId); // Flush stored sequence IDs five seconds after the last invoked action.\n\n    this.eventuallyClearActionSequenceIds_();\n    var expression = args[_actionConstants.RAW_OBJECT_ARGS_KEY];\n\n    if (expression) {\n      // Increment bindings limit by 500 on each invocation to a max of 2000.\n      this.maxNumberOfBindings_ = Math.min(2000, Math.max(1000, this.maxNumberOfBindings_ + 500));\n      this.signals_.signal('FIRST_MUTATE');\n      var scope = (0, _object.dict)();\n\n      if (event && (0, _eventHelper.getDetail)(\n      /** @type {!Event} */\n      event)) {\n        scope['event'] = (0, _eventHelper.getDetail)(\n        /** @type {!Event} */\n        event);\n      }\n\n      switch (method) {\n        case 'setState':\n          return this.setStateWithExpression(expression, scope);\n\n        case 'pushState':\n          return this.pushStateWithExpression(expression, scope);\n\n        default:\n          return Promise.reject((0, _log.dev)().createError('Unrecognized method: %s.%s', tagOrTarget, method));\n      }\n    } else {\n      (0, _log.user)().error('AMP-BIND', 'Please use the object-literal syntax, ' + 'e.g. \"AMP.setState({foo: \\'bar\\'})\" instead of ' + '\"AMP.setState(foo=\\'bar\\')\".');\n    }\n\n    return Promise.resolve();\n  }\n  /**\n   * Parses and evaluates an expression with a given scope and merges the\n   * resulting object into current state.\n   * @param {string} expression\n   * @param {!JsonObject} scope\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.setStateWithExpression = function setStateWithExpression(expression, scope) {\n    var _this3 = this;\n\n    (0, _log.dev)().info(TAG, 'setState:', expression);\n    this.setStatePromise_ = this.evaluateExpression_(expression, scope).then(function (result) {\n      return _this3.setState(result);\n    }).then(function () {\n      return _this3.getDataForHistory_();\n    }).then(function (data) {\n      // Don't bother calling History.replace with empty data.\n      if (data) {\n        _this3.history_.replace(data);\n      }\n    });\n    return this.setStatePromise_;\n  }\n  /**\n   * Same as setStateWithExpression() except also pushes new history.\n   * Popping the new history stack entry will restore the values of variables\n   * in `expression`.\n   * @param {string} expression\n   * @param {!JsonObject} scope\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.pushStateWithExpression = function pushStateWithExpression(expression, scope) {\n    var _this4 = this;\n\n    (0, _log.dev)().info(TAG, 'pushState:', expression);\n    return this.evaluateExpression_(expression, scope).then(function (result) {\n      // Store the current values of each referenced variable in `expression`\n      // so that we can restore them on history-pop.\n      var oldState = (0, _object.map)();\n      Object.keys(result).forEach(function (variable) {\n        var value = _this4.state_[variable]; // Store a deep copy of `value` to make sure `oldState` isn't\n        // modified by subsequent setState() actions.\n\n        oldState[variable] = _this4.copyJsonObject_(value);\n      });\n\n      var onPop = function onPop() {\n        return _this4.setState(oldState);\n      };\n\n      return _this4.setState(result).then(function () {\n        return _this4.getDataForHistory_();\n      }).then(function (data) {\n        _this4.history_.push(onPop, data);\n      });\n    });\n  }\n  /**\n   * Returns data that should be saved in browser history on AMP.setState() or\n   * AMP.pushState(). This enables features like restoring browser tabs.\n   * @return {!Promise<?JsonObject>}\n   */\n  ;\n\n  _proto.getDataForHistory_ = function getDataForHistory_() {\n    var data = (0, _object.dict)({\n      'data': (0, _object.dict)({\n        'amp-bind': this.state_\n      }),\n      'title': this.localWin_.document.title\n    });\n\n    if (!this.viewer_.isEmbedded()) {\n      // CC doesn't recognize !JsonObject as a subtype of (JsonObject|null).\n      return (\n        /** @type {!Promise<?JsonObject>} */\n        Promise.resolve(data)\n      );\n    } // Only pass state for history updates to trusted viewers, since they\n    // may contain user data e.g. form input.\n\n\n    return this.viewer_.isTrustedViewer().then(function (trusted) {\n      return trusted ? data : null;\n    });\n  }\n  /**\n   * Removes bindings from `removedElements` and adds new bindings in\n   * `addedElements`.\n   *\n   * If `options.update` is true, evaluates and applies changes to\n   * `addedElements` after adding new bindings.\n   *\n   * If `options.fast` is true, uses a faster scan method that requires\n   * (1) elements with bindings to have the attribute `i-amphtml-binding` and\n   * (2) the parent element tag name be listed in FAST_RESCAN_TAGS.\n   *\n   * @param {!Array<!Element>} addedElements\n   * @param {!Array<!Element>} removedElements\n   * @param {BindRescanOptionsDef=} options\n   * @return {!Promise} Resolved when all operations complete. If they don't\n   * complete within `options.timeout` (default=2000), promise is rejected.\n   */\n  ;\n\n  _proto.rescan = function rescan(addedElements, removedElements, options) {\n    var _this5 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    // * In non-fast mode, wait for initial tree walk to avoid racy double\n    //   scanning of `addedElements` which may cause duplicate bindings.\n    // * In fast mode, the initial tree walk skips subtrees of FAST_RESCAN_TAGS\n    //   so only wait for <amp-bind-macro> setup (much faster!).\n    var waitFor = options.fast ? this.addMacrosDeferred_.promise : this.initializePromise_;\n    return waitFor.then(function () {\n      return _this5.timer_.timeoutPromise(options.timeout || 2000, _this5.rescan_(addedElements, removedElements, options), 'Timed out waiting for amp-bind to rescan.');\n    });\n  }\n  /**\n   * @param {!Array<!Element>} addedElements\n   * @param {!Array<!Element>} removedElements\n   * @param {!BindRescanOptionsDef} options\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto.rescan_ = function rescan_(addedElements, removedElements, options) {\n    var _this6 = this;\n\n    (0, _log.dev)().info(TAG, 'rescan: ', addedElements, removedElements, options);\n    var rescanPromise = options.fast ? this.fastScan_(addedElements, removedElements) : this.slowScan_(addedElements, removedElements);\n    return rescanPromise.then(function () {\n      if (options.update) {\n        return _this6.evaluate_().then(function (results) {\n          return _this6.applyElements_(results, addedElements);\n        });\n      }\n    });\n  }\n  /**\n   * @param {!Array<!Element>} addedElements\n   * @param {!Array<!Element>} removedElements\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto.fastScan_ = function fastScan_(addedElements, removedElements) {\n    var _this7 = this;\n\n    // Sync remove bindings from internal state first, but don't chain on\n    // returned promise (worker message) as an optimization.\n    var removePromise = this.removeBindingsForNodes_(removedElements); // Scan `addedElements` and descendants for bindings.\n\n    var bindings = [];\n    var elementsToScan = addedElements.filter(function (el) {\n      return el.hasAttribute('i-amphtml-binding');\n    });\n    addedElements.forEach(function (el) {\n      var children = el.querySelectorAll('[i-amphtml-binding]');\n      Array.prototype.push.apply(elementsToScan, children);\n    });\n    var quota = this.maxNumberOfBindings_ - this.numberOfBindings();\n\n    for (var i = 0; i < elementsToScan.length; i++) {\n      var el = elementsToScan[i];\n\n      if (this.scanElement_(el, quota - bindings.length, bindings)) {\n        break;\n      }\n    }\n\n    removePromise.then(function (removed) {\n      (0, _log.dev)().info(TAG, 'rescan.fast: delta=%s, total=%s', bindings.length - removed, _this7.numberOfBindings());\n    });\n\n    if (bindings.length > 0) {\n      return this.sendBindingsToWorker_(bindings);\n    } else {\n      return Promise.resolve();\n    }\n  }\n  /**\n   * Returns the stringified value of the global state for a given field-based\n   * expression, e.g. \"foo.bar.baz\".\n   * @param {string} expr\n   * @return {string}\n   */\n  ;\n\n  _proto.getStateValue = function getStateValue(expr) {\n    var value = (0, _json.getValueForExpr)(this.state_, expr);\n\n    if ((0, _types.isObject)(value) || (0, _types.isArray)(value)) {\n      return JSON.stringify(\n      /** @type {JsonObject} */\n      value);\n    } else {\n      return String(value);\n    }\n  }\n  /**\n   * Scans the root node (and array of optional nodes) for bindings.\n   * @param {!Node} root\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto.initialize_ = function initialize_(root) {\n    var _this8 = this;\n\n    // Disallow URL property bindings in AMP4EMAIL.\n    var allowUrlProperties = !(0, _format.isAmp4Email)(this.localWin_.document);\n    this.validator_ = new _bindValidator.BindValidator(allowUrlProperties); // The web worker's evaluator also has an instance of BindValidator\n    // that should be initialized with the same `allowUrlProperties` value.\n\n    return this.ww_('bind.init', [allowUrlProperties]).then(function () {\n      return Promise.all([_this8.addMacros_().then(function () {\n        return _this8.addMacrosDeferred_.resolve();\n      }), _this8.addBindingsForNodes_([root])]);\n    }).then(function () {\n      // Listen for DOM updates (e.g. template render) to rescan for bindings.\n      root.addEventListener(_ampEvents.AmpEvents.DOM_UPDATE, function (e) {\n        return _this8.onDomUpdate_(e);\n      });\n    }).then(function () {\n      var ampStates = root.querySelectorAll('AMP-STATE'); // Force all query-able <amp-state> elements to parse local data instead\n      // of waiting for runtime to build them all.\n\n      var whenBuilt = false;\n      var whenParsed = (0, _types.toArray)(ampStates).map(function (el) {\n        return (0, _dom.whenUpgradedToCustomElement)(el).then(function () {\n          return el.getImpl(whenBuilt);\n        }).then(function (impl) {\n          return impl.parseAndUpdate();\n        });\n      });\n      return Promise.all(whenParsed);\n    }).then(function () {\n      // In dev mode, check default values against initial expression results.\n      if ((0, _mode.getMode)().development) {\n        return _this8.evaluate_().then(function (results) {\n          return _this8.verify_(results);\n        });\n      } // Bind is \"ready\" when its initialization completes _and_ all <amp-state>\n      // elements' local data is parsed and processed (not remote data).\n\n\n      _this8.viewer_.sendMessage('bindReady', undefined);\n\n      _this8.dispatchEventForTesting_(_bindEvents.BindEvents.INITIALIZE);\n    });\n  }\n  /**\n   * The current number of bindings.\n   * @return {number}\n   * @visibleForTesting\n   */\n  ;\n\n  _proto.numberOfBindings = function numberOfBindings() {\n    return this.boundElements_.reduce(function (number, boundElement) {\n      return number + boundElement.boundProperties.length;\n    }, 0);\n  }\n  /**\n   * @param {number} value\n   * @visibleForTesting\n   */\n  ;\n\n  _proto.setMaxNumberOfBindingsForTesting = function setMaxNumberOfBindingsForTesting(value) {\n    this.maxNumberOfBindings_ = value;\n  }\n  /** @return {!../../../src/service/history-impl.History} */\n  ;\n\n  _proto.historyForTesting = function historyForTesting() {\n    return this.history_;\n  }\n  /**\n   * Calls setState(s), where s is data.state with the non-overridable keys\n   * removed.\n   * @param {!JsonObject} data\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto.premutate_ = function premutate_(data) {\n    var _this9 = this;\n\n    var ignoredKeys = [];\n    return this.initializePromise_.then(function () {\n      Object.keys(data['state']).forEach(function (key) {\n        if (!_this9.overridableKeys_.includes(key)) {\n          delete data['state'][key];\n          ignoredKeys.push(key);\n        }\n      });\n\n      if (ignoredKeys.length > 0) {\n        (0, _log.user)().warn(TAG, 'Some state keys could not be premutated ' + 'because they are missing the overridable attribute: ' + ignoredKeys.join(', '));\n      }\n\n      return _this9.setState(data['state']);\n    });\n  }\n  /**\n   * Marks the given key as overridable so that it can be overriden by\n   * a premutate message from the viewer.\n   * @param {string} key\n   */\n  ;\n\n  _proto.addOverridableKey = function addOverridableKey(key) {\n    this.overridableKeys_.push(key);\n  }\n  /**\n   * Scans the document for <amp-bind-macro> elements, and adds them to the\n   * bind-evaluator.\n   *\n   * Returns a promise that resolves after macros have been added.\n   *\n   * @return {!Promise<number>}\n   * @private\n   */\n  ;\n\n  _proto.addMacros_ = function addMacros_() {\n    var _this10 = this;\n\n    // TODO(choumx, #17194): One-time query selector can miss dynamically\n    // created elements. Should do what <amp-state> does.\n    var elements = this.ampdoc.getBody().querySelectorAll('AMP-BIND-MACRO');\n    var macros =\n    /** @type {!Array<!BindMacroDef>} */\n    [];\n    (0, _dom.iterateCursor)(elements, function (element) {\n      var argumentNames = (element.getAttribute('arguments') || '').split(',').map(function (s) {\n        return s.trim();\n      });\n      macros.push({\n        id: element.getAttribute('id'),\n        argumentNames: argumentNames,\n        expressionString: element.getAttribute('expression')\n      });\n    });\n\n    if (macros.length == 0) {\n      return Promise.resolve(0);\n    } else {\n      return this.ww_('bind.addMacros', [macros]).then(function (errors) {\n        // Report macros that failed to parse (e.g. expression size exceeded).\n        errors.forEach(function (e, i) {\n          _this10.reportWorkerError_(e, TAG + \": Parsing amp-bind-macro failed.\", elements[i]);\n        });\n        return macros.length;\n      });\n    }\n  }\n  /**\n   * For each node in an array, scans it and its descendants for bindings.\n   * This function is not idempotent.\n   *\n   * Returns a promise that resolves with the number of bindings added upon\n   * completion.\n   *\n   * @param {!Array<!Node>} nodes\n   * @return {!Promise<number>}\n   * @private\n   */\n  ;\n\n  _proto.addBindingsForNodes_ = function addBindingsForNodes_(nodes) {\n    var _this11 = this;\n\n    if (!nodes.length) {\n      return Promise.resolve(0);\n    } // For each node, scan it for bindings and store them.\n\n\n    var scanPromises = nodes.map(function (node) {\n      // Limit number of total bindings (unless in local manual testing).\n      var limit = (0, _mode.getMode)().localDev && !(0, _mode.getMode)().test ? Number.POSITIVE_INFINITY : _this11.maxNumberOfBindings_ - _this11.numberOfBindings();\n      return _this11.scanNode_(node, limit).then(function (results) {\n        var bindings = results.bindings,\n            limitExceeded = results.limitExceeded;\n\n        if (limitExceeded) {\n          _this11.emitMaxBindingsExceededError_();\n        }\n\n        return bindings;\n      });\n    }); // Once all scans are complete, combine the bindings and ask web-worker to\n    // evaluate expressions in a single RPC.\n\n    return Promise.all(scanPromises).then(function (results) {\n      // `results` is a 2D array where results[i] is an array of bindings.\n      // Flatten this into a 1D array of bindings via concat.\n      var bindings = Array.prototype.concat.apply([], results);\n      return bindings.length > 0 ? _this11.sendBindingsToWorker_(bindings) : 0;\n    });\n  }\n  /** Emits console error stating that the binding limit was exceeded. */\n  ;\n\n  _proto.emitMaxBindingsExceededError_ = function emitMaxBindingsExceededError_() {\n    (0, _log.dev)().expectedError(TAG, 'Maximum number of bindings reached ' + '(%s). Additional elements with bindings will be ignored.', this.maxNumberOfBindings_);\n  }\n  /**\n   * Sends new bindings to the web worker for parsing.\n   * @param {!Array<!BindBindingDef>} bindings\n   * @return {!Promise<number>}\n   */\n  ;\n\n  _proto.sendBindingsToWorker_ = function sendBindingsToWorker_(bindings) {\n    var _this12 = this;\n\n    return this.ww_('bind.addBindings', [bindings]).then(function (parseErrors) {\n      // Report each parse error.\n      Object.keys(parseErrors).forEach(function (expressionString) {\n        var elements = _this12.expressionToElements_[expressionString];\n\n        if (elements.length > 0) {\n          _this12.reportWorkerError_(parseErrors[expressionString], TAG + \": Expression compile error in \\\"\" + expressionString + \"\\\".\", elements[0]);\n        }\n      });\n      return bindings.length;\n    });\n  }\n  /**\n   * For each node in an array, removes all bindings for it and its descendants.\n   *\n   * Returns a promise that resolves with the number of removed bindings upon\n   * completion.\n   *\n   * @param {!Array<!Node>} nodes\n   * @return {!Promise<number>}\n   * @private\n   */\n  ;\n\n  _proto.removeBindingsForNodes_ = function removeBindingsForNodes_(nodes) {\n    if (!nodes.length) {\n      return Promise.resolve(0);\n    } // Eliminate bound elements that are descendants of `nodes`.\n\n\n    (0, _array.remove)(this.boundElements_, function (boundElement) {\n      for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].contains(boundElement.element)) {\n          return true;\n        }\n      }\n\n      return false;\n    }); // Eliminate elements from the expression to elements map that\n    // have node as an ancestor. Delete expressions that are no longer\n    // bound to elements.\n\n    var deletedExpressions =\n    /** @type {!Array<string>} */\n    [];\n\n    for (var expression in this.expressionToElements_) {\n      var elements = this.expressionToElements_[expression];\n      (0, _array.remove)(elements, function (element) {\n        for (var i = 0; i < nodes.length; i++) {\n          if (nodes[i].contains(element)) {\n            return true;\n          }\n        }\n\n        return false;\n      });\n\n      if (elements.length == 0) {\n        deletedExpressions.push(expression);\n        delete this.expressionToElements_[expression];\n      }\n    } // Remove the bindings from the evaluator.\n\n\n    var removed = deletedExpressions.length;\n\n    if (removed > 0) {\n      return this.ww_('bind.removeBindingsWithExpressionStrings', [deletedExpressions]).then(function () {\n        return removed;\n      });\n    } else {\n      return Promise.resolve(0);\n    }\n  }\n  /**\n   * Scans `node` for attributes that conform to bind syntax and returns\n   * a tuple containing bound elements and binding data for the evaluator.\n   * @param {!Node} node\n   * @param {number} limit\n   * @return {!Promise<{bindings: !Array<!BindBindingDef>, limitExceeded: boolean}>}\n   * @private\n   */\n  ;\n\n  _proto.scanNode_ = function scanNode_(node, limit) {\n    var _this13 = this;\n\n    /** @type {!Array<!BindBindingDef>} */\n    var bindings = [];\n    var doc = (0, _log.devAssert)(node.nodeType == Node.DOCUMENT_NODE ? node : node.ownerDocument, 'ownerDocument is null.'); // Third and fourth params of `createTreeWalker` are not optional on IE11.\n\n    var walker = doc.createTreeWalker(node, NodeFilter.SHOW_ELEMENT, null,\n    /* entityReferenceExpansion */\n    false); // Set to true if number of bindings in `node` exceeds `limit`.\n\n    var limitExceeded = false; // Helper function for scanning the tree walker's next node.\n    // Returns true if the walker has no more nodes.\n\n    var scanNextNode_ = function scanNextNode_() {\n      var node = walker.currentNode;\n\n      if (!node) {\n        return true;\n      } // If `node` is a Document, it will be scanned first (despite\n      // NodeFilter.SHOW_ELEMENT). Skip it.\n\n\n      if (node.nodeType !== Node.ELEMENT_NODE) {\n        return !walker.nextNode();\n      }\n\n      var element = (0, _log.dev)().assertElement(node);\n      var remainingQuota = limit - bindings.length;\n\n      if (_this13.scanElement_(element, remainingQuota, bindings)) {\n        limitExceeded = true;\n      } // Elements in FAST_RESCAN_TAGS opt-out of \"slow\" tree walking in favor of\n      // rescan() with {fast: true} for better performance. Note that only\n      // children are opted-out (e.g. amp-list children, not amp-list itself).\n\n\n      var next = FAST_RESCAN_TAGS.includes(node.nodeName) ? _this13.skipSubtree_(walker) : walker.nextNode();\n      return !next || limitExceeded;\n    };\n\n    return new Promise(function (resolve) {\n      var chunktion = function chunktion(idleDeadline) {\n        var completed = false; // If `requestIdleCallback` is available, scan elements until\n        // idle time runs out.\n\n        if (idleDeadline && !idleDeadline.didTimeout) {\n          while (idleDeadline.timeRemaining() > 1 && !completed) {\n            completed = scanNextNode_();\n          }\n        } else {\n          // If `requestIdleCallback` isn't available, scan elements in buckets.\n          // Bucket size is a magic number that fits within a single frame.\n          var bucketSize = 250;\n\n          for (var i = 0; i < bucketSize && !completed; i++) {\n            completed = scanNextNode_();\n          }\n        } // If we scanned all elements, resolve. Otherwise, continue chunking.\n\n\n        if (completed) {\n          resolve({\n            bindings: bindings,\n            limitExceeded: limitExceeded\n          });\n        } else {\n          (0, _chunk.chunk)(_this13.ampdoc, chunktion, _chunk.ChunkPriority.LOW);\n        }\n      };\n\n      (0, _chunk.chunk)(_this13.ampdoc, chunktion, _chunk.ChunkPriority.LOW);\n    });\n  }\n  /**\n   * Skips the subtree at the walker's current node and returns the next node\n   * in document order, if any. Otherwise, returns null.\n   * @param {!TreeWalker} walker\n   * @return {?Node}\n   * @private\n   */\n  ;\n\n  _proto.skipSubtree_ = function skipSubtree_(walker) {\n    for (var n = walker.currentNode; n; n = walker.parentNode()) {\n      var sibling = walker.nextSibling();\n\n      if (sibling) {\n        return sibling;\n      }\n    }\n\n    return null;\n  }\n  /**\n   * Scans the element for bindings and adds up to |quota| to `outBindings`.\n   * Also updates ivars `boundElements_` and `expressionToElements_`.\n   * @param {!Element} element\n   * @param {number} quota\n   * @param {!Array<!BindBindingDef>} outBindings\n   * @return {boolean} Returns true if `element` contains more than `quota`\n   *     bindings. Otherwise, returns false.\n   */\n  ;\n\n  _proto.scanElement_ = function scanElement_(element, quota, outBindings) {\n    var _this14 = this;\n\n    var quotaExceeded = false;\n    var boundProperties = this.boundPropertiesInElement_(element);\n\n    if (boundProperties.length > quota) {\n      boundProperties.length = quota;\n      quotaExceeded = true;\n    }\n\n    if (boundProperties.length > 0) {\n      this.boundElements_.push({\n        element: element,\n        boundProperties: boundProperties\n      });\n    }\n\n    var tagName = element.tagName;\n    boundProperties.forEach(function (boundProperty) {\n      var property = boundProperty.property,\n          expressionString = boundProperty.expressionString;\n      outBindings.push({\n        tagName: tagName,\n        property: property,\n        expressionString: expressionString\n      });\n\n      if (!_this14.expressionToElements_[expressionString]) {\n        _this14.expressionToElements_[expressionString] = [];\n      }\n\n      _this14.expressionToElements_[expressionString].push(element);\n    });\n    return quotaExceeded;\n  }\n  /**\n   * Returns bound properties for an element.\n   * @param {!Element} element\n   * @return {!Array<{property: string, expressionString: string}>}\n   * @private\n   */\n  ;\n\n  _proto.boundPropertiesInElement_ = function boundPropertiesInElement_(element) {\n    var boundProperties = [];\n    var attrs = element.attributes;\n\n    for (var i = 0, numberOfAttrs = attrs.length; i < numberOfAttrs; i++) {\n      var attr = attrs[i];\n      var boundProperty = this.boundPropertyInAttribute_(attr, element);\n\n      if (boundProperty) {\n        boundProperties.push(boundProperty);\n      }\n    }\n\n    return boundProperties;\n  }\n  /**\n   * Returns the bound property and expression string within a given attribute,\n   * if it exists. Otherwise, returns null.\n   * @param {!Attr} attribute\n   * @param {!Element} element\n   * @return {?{property: string, expressionString: string}}\n   * @private\n   */\n  ;\n\n  _proto.boundPropertyInAttribute_ = function boundPropertyInAttribute_(attribute, element) {\n    var tag = element.tagName;\n    var attr = attribute.name;\n    var property;\n\n    if (attr.length > 2 && attr[0] === '[' && attr[attr.length - 1] === ']') {\n      property = attr.substr(1, attr.length - 2);\n    } else if ((0, _string.startsWith)(attr, 'data-amp-bind-')) {\n      property = attr.substr(14); // Ignore `data-amp-bind-foo` if `[foo]` already exists.\n\n      if (element.hasAttribute(\"[\" + property + \"]\")) {\n        return null;\n      }\n    }\n\n    if (property) {\n      if (this.validator_.canBind(tag, property)) {\n        return {\n          property: property,\n          expressionString: attribute.value\n        };\n      } else {\n        var err = (0, _log.user)().createError('%s: Binding to [%s] on <%s> is not allowed.', TAG, property, tag);\n        this.reportError_(err, element);\n      }\n    }\n\n    return null;\n  }\n  /**\n   * Evaluates a single expression and returns its result.\n   * @param {string} expression\n   * @param {!JsonObject} scope\n   * @return {!Promise<!JsonObject>}\n   */\n  ;\n\n  _proto.evaluateExpression_ = function evaluateExpression_(expression, scope) {\n    var _this15 = this;\n\n    return this.initializePromise_.then(function () {\n      // Allow expression to reference current state in addition to event state.\n      Object.assign(scope, _this15.state_);\n      return _this15.ww_('bind.evaluateExpression', [expression, scope]);\n    }).then(function (returnValue) {\n      var result = returnValue.result,\n          error = returnValue.error;\n\n      if (error) {\n        // Throw to reject promise.\n        throw _this15.reportWorkerError_(error, TAG + \": Expression eval failed.\");\n      } else {\n        return result;\n      }\n    });\n  }\n  /**\n   * Reevaluates all expressions and returns a map of expressions to results.\n   * @return {!Promise<!Object<string, BindExpressionResultDef>>}\n   * @private\n   */\n  ;\n\n  _proto.evaluate_ = function evaluate_() {\n    var _this16 = this;\n\n    var evaluatePromise = this.ww_('bind.evaluateBindings', [this.state_]);\n    return evaluatePromise.then(function (returnValue) {\n      var results = returnValue.results,\n          errors = returnValue.errors; // Report evaluation errors.\n\n      Object.keys(errors).forEach(function (expressionString) {\n        var elements = _this16.expressionToElements_[expressionString];\n\n        if (elements.length > 0) {\n          var evalError = errors[expressionString];\n          var userError = (0, _log.user)().createError('%s: Expression evaluation error in \"%s\". %s', TAG, expressionString, evalError.message);\n          userError.stack = evalError.stack;\n\n          _this16.reportError_(userError, elements[0]);\n        }\n      });\n      (0, _log.dev)().info(TAG, 'evaluation:', results);\n      return results;\n    });\n  }\n  /**\n   * Verifies expression results vs. current DOM state and returns an\n   * array of bindings with mismatches (if any).\n   * @param {Object<string, BindExpressionResultDef>} results\n   * @param {?Array<!Element>=} elements If provided, only verifies bindings\n   *     contained within the given elements. Otherwise, verifies all bindings.\n   * @param {boolean=} warn If true, emits a user warning for verification\n   *     mismatches. Otherwise, does not emit a warning.\n   * @return {!Array<string>}\n   * @private\n   */\n  ;\n\n  _proto.verify_ = function verify_(results, elements, warn) {\n    var _this17 = this;\n\n    if (elements === void 0) {\n      elements = null;\n    }\n\n    if (warn === void 0) {\n      warn = true;\n    }\n\n    // Collate strings containing details of verification mismatches to return.\n    var mismatches = {};\n    this.boundElements_.forEach(function (boundElement) {\n      var element = boundElement.element,\n          boundProperties = boundElement.boundProperties; // If provided, filter elements that are _not_ children of `opt_elements`.\n\n      if (elements && !_this17.elementsContains_(elements, element)) {\n        return;\n      }\n\n      boundProperties.forEach(function (boundProperty) {\n        var newValue = results[boundProperty.expressionString];\n\n        if (newValue === undefined) {\n          return;\n        }\n\n        var mismatch = _this17.verifyBinding_(boundProperty, element, newValue);\n\n        if (!mismatch) {\n          return;\n        }\n\n        var tagName = element.tagName;\n        var property = boundProperty.property,\n            expressionString = boundProperty.expressionString;\n        var expected = mismatch.expected,\n            actual = mismatch.actual; // Only store unique mismatches (dupes possible when rendering an array\n        // of data to a template).\n\n        mismatches[tagName + \"[\" + property + \"]\" + expected + \":\" + actual] = true;\n\n        if (warn) {\n          (0, _log.user)().warn(TAG, \"Default value (\" + actual + \") does not match first \" + (\"result (\" + expected + \") for <\" + tagName + \" [\" + property + \"]=\\\"\") + (expressionString + \"\\\">. We recommend writing expressions with \") + 'matching default values, but this can be safely ignored if ' + 'intentional.');\n        }\n      });\n    });\n    return Object.keys(mismatches);\n  }\n  /**\n   * Returns true if `el` is contained within any element in `elements`.\n   * @param {!Array<!Element>} elements\n   * @param {!Element} el\n   * @return {boolean}\n   * @private\n   */\n  ;\n\n  _proto.elementsContains_ = function elementsContains_(elements, el) {\n    for (var i = 0; i < elements.length; i++) {\n      if (elements[i].contains(el)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Determines which properties to update based on results of evaluation\n   * of all bound expression strings with the current state. This method\n   * will only return properties that need to be updated along with their\n   * new value.\n   * @param {!Array<!BoundPropertyDef>} boundProperties\n   * @param {Object<string, BindExpressionResultDef>} results\n   * @return {!Array<{boundProperty: !BoundPropertyDef, newValue: BindExpressionResultDef}>}\n   * @private\n   */\n  ;\n\n  _proto.calculateUpdates_ = function calculateUpdates_(boundProperties, results) {\n    var updates = [];\n    boundProperties.forEach(function (boundProperty) {\n      var expressionString = boundProperty.expressionString,\n          previousResult = boundProperty.previousResult;\n      var newValue = results[expressionString]; // Support equality checks for arrays of objects containing arrays.\n      // Useful for rendering amp-list with amp-bind state via [src].\n\n      if (newValue === undefined || (0, _json.deepEquals)(newValue, previousResult,\n      /* depth */\n      20)) {} else {\n        boundProperty.previousResult = newValue;\n        updates.push({\n          boundProperty: boundProperty,\n          newValue: newValue\n        });\n      }\n    });\n    return updates;\n  }\n  /**\n   * Applies expression results to all elements in the document.\n   * @param {Object<string, BindExpressionResultDef>} results\n   * @param {boolean=} opt_skipAmpState\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto.apply_ = function apply_(results, opt_skipAmpState) {\n    var _this18 = this;\n\n    var promises = this.boundElements_.map(function (boundElement) {\n      // If this evaluation is triggered by an <amp-state> mutation, we must\n      // ignore updates to any <amp-state> element to prevent update cycles.\n      if (opt_skipAmpState && boundElement.element.tagName === 'AMP-STATE') {\n        return Promise.resolve();\n      }\n\n      return _this18.applyBoundElement_(results, boundElement);\n    });\n    return Promise.all(promises);\n  }\n  /**\n   * Applies expression results to only given elements and their descendants.\n   * @param {Object<string, BindExpressionResultDef>} results\n   * @param {!Array<!Element>} elements\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.applyElements_ = function applyElements_(results, elements) {\n    var _this19 = this;\n\n    var promises = [];\n    this.boundElements_.forEach(function (boundElement) {\n      elements.forEach(function (element) {\n        if (element.contains(boundElement.element)) {\n          promises.push(_this19.applyBoundElement_(results, boundElement));\n        }\n      });\n    });\n    return Promise.all(promises);\n  }\n  /**\n   * Applies expression results to a single BoundElementDef.\n   * @param {Object<string, BindExpressionResultDef>} results\n   * @param {BoundElementDef} boundElement\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.applyBoundElement_ = function applyBoundElement_(results, boundElement) {\n    var _this20 = this;\n\n    var element = boundElement.element,\n        boundProperties = boundElement.boundProperties;\n    var updates = this.calculateUpdates_(boundProperties, results);\n\n    if (updates.length === 0) {\n      return Promise.resolve();\n    }\n\n    return this.resources_.mutateElement(element, function () {\n      var mutations = (0, _object.map)();\n      var width, height;\n      updates.forEach(function (update) {\n        var boundProperty = update.boundProperty,\n            newValue = update.newValue;\n        var property = boundProperty.property;\n\n        var mutation = _this20.applyBinding_(boundProperty, element, newValue);\n\n        if (mutation) {\n          mutations[mutation.name] = mutation.value;\n\n          if (property == 'width') {\n            width = (0, _types.isFiniteNumber)(newValue) ? Number(newValue) : width;\n          } else if (property == 'height') {\n            height = (0, _types.isFiniteNumber)(newValue) ? Number(newValue) : height;\n          }\n        }\n\n        _this20.dispatchFormValueChangeEventIfNecessary_(element, property);\n      });\n\n      if (width !== undefined || height !== undefined) {\n        // TODO(choumx): Add new Resources method for adding change-size\n        // request without scheduling vsync pass since `mutateElement()`\n        // will schedule a pass after a short delay anyways.\n        _this20.resources_.\n        /*OK*/\n        changeSize(element, height, width);\n      }\n\n      if (typeof element.mutatedAttributesCallback === 'function') {\n        // Prevent an exception in the callback from interrupting execution,\n        // instead wrap in user error and give a helpful message.\n        try {\n          element.mutatedAttributesCallback(mutations);\n        } catch (e) {\n          var error = (0, _log.user)().createError('%s: Applying expression results (%s) failed with error,', TAG, JSON.stringify(mutations), e);\n\n          _this20.reportError_(error, element);\n        }\n      }\n    });\n  }\n  /**\n   * Dispatches an `AmpEvents.FORM_VALUE_CHANGE` if the element's changed\n   * property represents the value of a form field.\n   * @param {!Element} element\n   * @param {string} property\n   */\n  ;\n\n  _proto.dispatchFormValueChangeEventIfNecessary_ = function dispatchFormValueChangeEventIfNecessary_(element, property) {\n    var isPropertyAFormValue = FORM_VALUE_PROPERTIES[element.tagName];\n\n    if (!isPropertyAFormValue || !isPropertyAFormValue[property]) {\n      return;\n    } // The native `InputEvent` is dispatched at the parent `<select>` when its\n    // selected `<option>` changes.\n\n\n    var dispatchAt = element.tagName === 'OPTION' ? (0, _dom.closestAncestorElementBySelector)(element, 'SELECT') : element;\n\n    if (dispatchAt) {\n      var ampValueChangeEvent = (0, _eventHelper.createCustomEvent)(this.localWin_, _ampEvents.AmpEvents.FORM_VALUE_CHANGE,\n      /* detail */\n      null, {\n        bubbles: true\n      });\n      dispatchAt.dispatchEvent(ampValueChangeEvent);\n    }\n  }\n  /**\n   * Mutates the bound property of `element` with `newValue`.\n   * @param {!BoundPropertyDef} boundProperty\n   * @param {!Element} element\n   * @param {BindExpressionResultDef} newValue\n   * @return {?{name: string, value:BindExpressionResultDef}}\n   * @private\n   */\n  ;\n\n  _proto.applyBinding_ = function applyBinding_(boundProperty, element, newValue) {\n    var property = boundProperty.property;\n    var tag = element.tagName;\n\n    switch (property) {\n      case 'defaulttext':\n        element.textContent = String(newValue);\n        break;\n\n      case 'text':\n        var stringValue = String(newValue); // If <title> element in the <head>, also update the document title.\n\n        if (tag === 'TITLE' && element.parentNode === this.localWin_.document.head) {\n          this.localWin_.document.title = stringValue;\n        } // For <textarea>, [text] sets `value` (current value), while\n        // [defaultText] sets `textContent` (initial value).\n\n\n        if (tag === 'TEXTAREA') {\n          element.value = stringValue;\n        } else {\n          element.textContent = stringValue;\n        }\n\n        break;\n\n      case 'class':\n        // Preserve internal AMP classes.\n        var ampClasses = [];\n\n        for (var i = 0; i < element.classList.length; i++) {\n          var cssClass = element.classList[i];\n\n          if (AMP_CSS_RE.test(cssClass)) {\n            ampClasses.push(cssClass);\n          }\n        }\n\n        if (Array.isArray(newValue) || typeof newValue === 'string') {\n          element.setAttribute('class', ampClasses.concat(newValue).join(' '));\n        } else if (newValue === null) {\n          element.setAttribute('class', ampClasses.join(' '));\n        } else {\n          var err = (0, _log.user)().createError('%s: \"%s\" is not a valid result for [class].', TAG, newValue);\n          this.reportError_(err, element);\n        }\n\n        break;\n\n      default:\n        // For input elements, update both the attribute (initial value) and\n        // property (current value) for bindings e.g. [value].\n        // TODO(choumx): Investigate if splitting into [value] and\n        // [defaultValue] is possible without version bump.\n        var updateProperty = tag === 'INPUT' && property in element;\n        var oldValue = element.getAttribute(property);\n        var mutated = false;\n\n        if (typeof newValue === 'boolean') {\n          if (updateProperty && element[property] !== newValue) {\n            // Property value _must_ be read before the attribute is changed.\n            // Before user interaction, attribute updates affect the property.\n            element[property] = newValue;\n            mutated = true;\n          }\n\n          if (newValue && oldValue !== '') {\n            element.setAttribute(property, '');\n            mutated = true;\n          } else if (!newValue && oldValue !== null) {\n            element.removeAttribute(property);\n            mutated = true;\n          }\n\n          if (mutated) {\n            // Safari-specific workaround for updating <select> elements\n            // when a child option[selected] attribute changes.\n            this.updateSelectForSafari_(element, property, newValue);\n          }\n        } else if (typeof newValue === 'object' && newValue !== null) {\n          // If newValue is an object or array (e.g. amp-list[src] binding),\n          // don't bother updating the element since attribute values like\n          // \"[Object object]\" have no meaning in the DOM.\n          mutated = true;\n        } else if (newValue !== oldValue) {\n          mutated = this.rewriteAttributes_(element, property, String(newValue), updateProperty);\n        }\n\n        if (mutated) {\n          return {\n            name: property,\n            value: newValue\n          };\n        }\n\n        break;\n    }\n\n    return null;\n  }\n  /**\n   * Hopefully we can delete this with Safari 13+.\n   * @param {!Element} element\n   * @param {string} property\n   * @param {BindExpressionResultDef} newValue\n   */\n  ;\n\n  _proto.updateSelectForSafari_ = function updateSelectForSafari_(element, property, newValue) {\n    // We only care about option[selected].\n    if (element.tagName !== 'OPTION' || property !== 'selected') {\n      return;\n    } // We only care if this option was selected, not deselected.\n\n\n    if (!newValue) {\n      return;\n    } // Workaround only needed for Safari.\n\n\n    if (!_services.Services.platformFor(this.win_).isSafari()) {\n      return;\n    }\n\n    var select = (0, _dom.closestAncestorElementBySelector)(element, 'select');\n\n    if (!select) {\n      return;\n    } // Set corresponding selectedIndex on <select> parent.\n\n\n    var index = (0, _types.toArray)(select.options).indexOf(element);\n\n    if (index >= 0) {\n      select.selectedIndex = index;\n    }\n  }\n  /**\n   * Performs CDN rewrites for the given mutation and updates the element.\n   * @see amp-cache-modifications.md#url-rewrites\n   * @param {!Element} element\n   * @param {string} attrName\n   * @param {string} value\n   * @param {boolean} updateProperty If the property with the same name should\n   *    be updated as well.\n   * @return {boolean} Whether or not the rewrite was successful.\n   * @private\n   */\n  ;\n\n  _proto.rewriteAttributes_ = function rewriteAttributes_(element, attrName, value, updateProperty) {\n    // Rewrite attributes if necessary. Not done in worker since it relies on\n    // `url#parseUrl` which uses <a>. Worker has URL API but not on IE11.\n    try {\n      (0, _urlRewrite.rewriteAttributesForElement)(element, attrName, value,\n      /* opt_location */\n      undefined, updateProperty);\n      return true;\n    } catch (e) {\n      var error = (0, _log.user)().createError('%s: \"%s\" is not a valid result for [%]', TAG, value, attrName, e);\n      this.reportError_(error, element);\n    }\n\n    return false;\n  }\n  /**\n   * If current state of `element` matches `expectedValue`, returns null.\n   * Otherwise, returns a tuple containing the expected and actual values.\n   * @param {!BoundPropertyDef} boundProperty\n   * @param {!Element} element\n   * @param {BindExpressionResultDef} expectedValue\n   * @return {?{expected: *, actual: *}}\n   * @private\n   */\n  ;\n\n  _proto.verifyBinding_ = function verifyBinding_(boundProperty, element, expectedValue) {\n    var property = boundProperty.property;\n    var tagName = element.tagName; // Don't show a warning for bind-only attributes,\n    // like 'slide' on amp-carousel.\n\n    var bindOnlyAttrs = BIND_ONLY_ATTRIBUTES[tagName];\n\n    if (bindOnlyAttrs && bindOnlyAttrs.includes(property)) {\n      return null;\n    }\n\n    var initialValue;\n    var match;\n\n    switch (property) {\n      case 'text':\n        initialValue = element.textContent;\n        expectedValue = String(expectedValue);\n        match = initialValue.trim() === expectedValue.trim();\n        break;\n\n      case 'class':\n        initialValue = [];\n\n        for (var i = 0; i < element.classList.length; i++) {\n          var cssClass = element.classList[i]; // Ignore internal AMP classes.\n\n          if (AMP_CSS_RE.test(cssClass)) {\n            continue;\n          }\n\n          initialValue.push(cssClass);\n        }\n        /** @type {!Array<string>} */\n\n\n        var classes = [];\n\n        if (Array.isArray(expectedValue)) {\n          classes = expectedValue;\n        } else if (typeof expectedValue === 'string') {\n          var trimmed = expectedValue.trim();\n\n          if (trimmed.length > 0) {\n            classes = trimmed.split(' ');\n          }\n        } else {\n          var err = (0, _log.user)().createError('%s: \"%s\" is not a valid result for [class].', TAG, expectedValue);\n          this.reportError_(err, element);\n        }\n\n        match = this.compareStringArrays_(initialValue, classes);\n        break;\n\n      default:\n        initialValue = element.getAttribute(property); // Boolean attributes return values of either '' or null.\n\n        if (expectedValue === true) {\n          match = initialValue === '';\n        } else if (expectedValue === false) {\n          match = initialValue === null;\n        } else if (typeof expectedValue === 'number') {\n          match = Number(initialValue) === expectedValue;\n        } else {\n          match = initialValue === expectedValue;\n        }\n\n        break;\n    }\n\n    return match ? null : {\n      expected: expectedValue,\n      actual: initialValue\n    };\n  }\n  /**\n   * @param {!Event} event\n   */\n  ;\n\n  _proto.onDomUpdate_ = function onDomUpdate_(event) {\n    var _this21 = this;\n\n    var target = (0, _log.dev)().assertElement(event.target); // TODO(choumx): Consider removing this check now that slowScan_() skips\n    // FAST_RESCAN_TAGS internally, and because this makes an assumption about\n    // the DOM structure of the EventTarget.\n\n    var parent = target.parentNode;\n\n    if (parent && FAST_RESCAN_TAGS.includes(parent.nodeName)) {\n      return;\n    }\n\n    (0, _log.dev)().info(TAG, 'dom_update:', target);\n    this.slowScan_([target], [target], 'dom_update.end').then(function () {\n      _this21.dispatchEventForTesting_(_bindEvents.BindEvents.RESCAN_TEMPLATE);\n    });\n  }\n  /**\n   * Removes bindings for nodes in `remove`, then scans for bindings in `add`.\n   * Return promise that resolves upon completion with struct containing number\n   * of removed and added bindings.\n   * @param {!Array<!Node>} addedNodes\n   * @param {!Array<!Node>} removedNodes\n   * @param {string=} label\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto.slowScan_ = function slowScan_(addedNodes, removedNodes, label) {\n    var _this22 = this;\n\n    if (label === void 0) {\n      label = 'rescan.slow';\n    }\n\n    var removed = 0;\n    return this.removeBindingsForNodes_(removedNodes).then(function (r) {\n      removed = r;\n      return _this22.addBindingsForNodes_(addedNodes);\n    }).then(function (added) {\n      (0, _log.dev)().info(TAG, '%s: delta=%s, total=%s', label, added - removed, _this22.numberOfBindings());\n    });\n  }\n  /**\n   * Helper for invoking a method on web worker.\n   * @param {string} method\n   * @param {!Array=} opt_args\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.ww_ = function ww_(method, opt_args) {\n    return (0, _ampWorker.invokeWebWorker)(this.win_, method, opt_args, this.localWin_);\n  }\n  /**\n   * @param {{message: string, stack:string}} e\n   * @param {string} message\n   * @param {!Element=} opt_element\n   * @return {!Error}\n   * @private\n   */\n  ;\n\n  _proto.reportWorkerError_ = function reportWorkerError_(e, message, opt_element) {\n    var userError = (0, _log.user)().createError('%s %s', message, e.message);\n    userError.stack = e.stack;\n    this.reportError_(userError, opt_element);\n    return userError;\n  }\n  /**\n   * @param {!Error} error\n   * @param {!Element=} opt_element\n   */\n  ;\n\n  _proto.reportError_ = function reportError_(error, opt_element) {\n    if ((0, _mode.getMode)().test) {\n      return;\n    }\n\n    (0, _error.reportError)(error, opt_element);\n  }\n  /**\n   * Returns true if both arrays contain the same strings.\n   * @param {!(IArrayLike<string>|Array<string>)} a\n   * @param {!(IArrayLike<string>|Array<string>)} b\n   * @return {boolean}\n   * @private\n   */\n  ;\n\n  _proto.compareStringArrays_ = function compareStringArrays_(a, b) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    var sortedA = ((0, _types.isArray)(a) ? a : (0, _types.toArray)(a)).sort();\n    var sortedB = ((0, _types.isArray)(b) ? b : (0, _types.toArray)(b)).sort();\n\n    for (var i = 0; i < a.length; i++) {\n      if (sortedA[i] !== sortedB[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Copies an object containing JSON data and returns it.\n   * Returns null if input object contains invalid JSON (e.g. undefined or\n   * circular references).\n   * @param {?JsonObject|undefined} o\n   * @return {?JsonObject}\n   */\n  ;\n\n  _proto.copyJsonObject_ = function copyJsonObject_(o) {\n    if (o === undefined) {\n      return null;\n    }\n\n    try {\n      return (0, _json.parseJson)(JSON.stringify(o));\n    } catch (e) {\n      (0, _log.dev)().error(TAG, 'Failed to copy JSON (' + o + ') with error: ' + e);\n    }\n\n    return null;\n  }\n  /**\n   * Print out the current state in the console.\n   * @param {(!Element|string)=} opt_elementOrExpr\n   * @private\n   */\n  ;\n\n  _proto.debugPrintState_ = function debugPrintState_(opt_elementOrExpr) {\n    if (opt_elementOrExpr) {\n      if (typeof opt_elementOrExpr == 'string') {\n        var value = (0, _json.getValueForExpr)(this.state_, opt_elementOrExpr);\n        (0, _log.user)().info(TAG, value);\n      } else if (opt_elementOrExpr.nodeType == Node.ELEMENT_NODE) {\n        var element = (0, _log.user)().assertElement(opt_elementOrExpr);\n        this.debugPrintElement_(element);\n      } else {\n        (0, _log.user)().info(TAG, 'Invalid argument. Pass a JSON expression or an ' + 'element instead e.g. AMP.printState(\"foo.bar\") or ' + 'AMP.printState($0) after selecting an element.');\n      }\n    } else {\n      (0, _log.user)().info(TAG, this.state_);\n    }\n  }\n  /**\n   * Print out the element's bound attributes and respective expression values.\n   * @param {!Element} element\n   * @private\n   */\n  ;\n\n  _proto.debugPrintElement_ = function debugPrintElement_(element) {\n    var _this23 = this;\n\n    var index = (0, _array.findIndex)(this.boundElements_, function (boundElement) {\n      return boundElement.element == element;\n    });\n\n    if (index < 0) {\n      (0, _log.user)().info(TAG, 'Element has no bindings:', element);\n      return;\n    } // Evaluate expressions in bindings in `element`.\n\n\n    var promises = [];\n    var boundProperties = this.boundElements_[index].boundProperties;\n    boundProperties.forEach(function (boundProperty) {\n      var expressionString = boundProperty.expressionString;\n      promises.push(_this23.evaluateExpression_(expressionString, _this23.state_));\n    }); // Print the map of attribute to expression value for `element`.\n\n    Promise.all(promises).then(function (results) {\n      var output = (0, _object.map)();\n      boundProperties.forEach(function (boundProperty, i) {\n        var property = boundProperty.property;\n        output[property] = results[i];\n      });\n      (0, _log.user)().info(TAG, output);\n    });\n  }\n  /**\n   * @param {string} expression\n   */\n  ;\n\n  _proto.debugEvaluate_ = function debugEvaluate_(expression) {\n    this.evaluateExpression_(expression, this.state_).then(function (result) {\n      (0, _log.user)().info(TAG, result);\n    });\n  }\n  /**\n   * Wait for bind scan to finish for testing.\n   *\n   * @return {?Promise}\n   * @visibleForTesting\n   */\n  ;\n\n  _proto.initializePromiseForTesting = function initializePromiseForTesting() {\n    return this.initializePromise_;\n  }\n  /**\n   * Wait for bindings to evaluate and apply for testing. Should\n   * be called once for each event that changes bindings.\n   *\n   * @return {?Promise}\n   * @visibleForTesting\n   */\n  ;\n\n  _proto.setStatePromiseForTesting = function setStatePromiseForTesting() {\n    return this.setStatePromise_;\n  }\n  /**\n   * @param {string} name\n   * @private\n   */\n  ;\n\n  _proto.dispatchEventForTesting_ = function dispatchEventForTesting_(name) {\n    if ((0, _mode.getMode)().test) {\n      var event;\n\n      if (typeof this.localWin_.Event === 'function') {\n        event = new Event(name, {\n          bubbles: true,\n          cancelable: true\n        });\n      } else {\n        event = this.localWin_.document.createEvent('Event');\n        event.initEvent(name,\n        /* bubbles */\n        true,\n        /* cancelable */\n        true);\n      }\n\n      this.localWin_.dispatchEvent(event);\n    }\n  };\n\n  return Bind;\n}();\n\nexports.Bind = Bind;\n\n},{\"../../../src/action-constants\":7,\"../../../src/amp-events\":8,\"../../../src/chunk\":11,\"../../../src/document-ready\":15,\"../../../src/dom\":16,\"../../../src/error\":18,\"../../../src/event-helper\":20,\"../../../src/format\":25,\"../../../src/json\":27,\"../../../src/log\":29,\"../../../src/mode\":31,\"../../../src/service\":33,\"../../../src/services\":35,\"../../../src/string\":38,\"../../../src/types\":41,\"../../../src/url-rewrite\":43,\"../../../src/utils/array\":46,\"../../../src/utils/object\":49,\"../../../src/utils/promise\":51,\"../../../src/utils/rate-limit\":52,\"../../../src/utils/signals\":53,\"../../../src/web-worker/amp-worker\":55,\"./bind-events\":4,\"./bind-validator\":6}],6:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.BindValidator = void 0;\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _srcset = require(\"../../../src/srcset\");\n\nvar _string = require(\"../../../src/string\");\n\nvar _log = require(\"../../../src/log\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TAG = 'amp-bind';\n/**\n * @typedef {{\n *   allowedProtocols: (!Object<string,boolean>|undefined),\n *   alternativeName: (string|undefined),\n * }}\n */\n\nvar PropertyRulesDef;\n/**\n * Property rules that apply to any and all tags.\n * @private {Object<string, ?PropertyRulesDef>}\n */\n\nvar GLOBAL_PROPERTY_RULES = {\n  'class': {\n    blacklistedValueRegex: '(^|\\\\W)i-amphtml-'\n  },\n  'hidden': null,\n  'text': null\n};\n/**\n * Property rules that apply to all AMP elements.\n * @private {Object<string, ?PropertyRulesDef>}\n */\n\nvar AMP_PROPERTY_RULES = {\n  'width': null,\n  'height': null\n};\n/**\n * Maps tag names to property names to PropertyRulesDef.\n * If `ELEMENT_RULES[tag][property]` is null, then all values are valid\n * for that property in that tag.\n * @private {Object<string, Object<string, ?PropertyRulesDef>>}}\n */\n\nvar ELEMENT_RULES = createElementRules_();\n/**\n * Map whose keys comprise all properties that contain URLs.\n * @private {Object<string, boolean>}\n */\n\nvar URL_PROPERTIES = {\n  'src': true,\n  'srcset': true,\n  'href': true,\n  'xlink:href': true\n};\n/**\n * BindValidator performs runtime validation of Bind expression results.\n *\n * For performance reasons, the validation rules enforced are a subset\n * of the AMP validator's, selected with a focus on security and UX.\n */\n\nvar BindValidator =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {boolean} allowUrlBindings\n   */\n  function BindValidator(allowUrlBindings) {\n    /** @const @private {boolean} */\n    this.allowUrlBindings_ = allowUrlBindings;\n  }\n  /**\n   * Returns true if (tag, property) binding is allowed.\n   * Otherwise, returns false.\n   * NOTE: `tag` and `property` are case-sensitive.\n   * @param {string} tag\n   * @param {string} property\n   * @return {boolean}\n   */\n\n\n  var _proto = BindValidator.prototype;\n\n  _proto.canBind = function canBind(tag, property) {\n    return this.rulesForTagAndProperty_(tag, property) !== undefined;\n  }\n  /**\n   * Returns true if `value` is a valid result for a (tag, property) binding.\n   * Otherwise, returns false.\n   * @param {string} tag\n   * @param {string} property\n   * @param {?string} value\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isResultValid = function isResultValid(tag, property, value) {\n    var rules = this.rulesForTagAndProperty_(tag, property); // `alternativeName` is a reference to another property's rules.\n\n    if (rules && rules.alternativeName) {\n      rules = this.rulesForTagAndProperty_(tag, rules.alternativeName);\n    } // If binding to (tag, property) is not allowed, return false.\n\n\n    if (rules === undefined) {\n      return false;\n    } // If binding is allowed but have no specific rules, return true.\n\n\n    if (rules === null) {\n      return true;\n    } // Validate URL(s) if applicable.\n\n\n    if (value && (0, _object.ownProperty)(URL_PROPERTIES, property)) {\n      var urls;\n\n      if (property === 'srcset') {\n        var srcset;\n\n        try {\n          srcset = (0, _srcset.parseSrcset)(value);\n        } catch (e) {\n          (0, _log.user)().error(TAG, 'Failed to parse srcset: ', e);\n          return false;\n        }\n\n        urls = srcset.getUrls();\n      } else {\n        urls = [value];\n      }\n\n      for (var i = 0; i < urls.length; i++) {\n        if (!this.isUrlValid_(urls[i], rules)) {\n          return false;\n        }\n      }\n    } // @see validator/engine/validator.ParsedTagSpec.validateAttributes()\n\n\n    var _rules = rules,\n        blacklistedValueRegex = _rules.blacklistedValueRegex;\n\n    if (value && blacklistedValueRegex) {\n      var re = new RegExp(blacklistedValueRegex, 'i');\n\n      if (re.test(value)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Returns true if a url's value is valid within a property rules spec.\n   * @param {string} url\n   * @param {!PropertyRulesDef} rules\n   * @return {boolean}\n   * @private\n   */\n  ;\n\n  _proto.isUrlValid_ = function isUrlValid_(url, rules) {\n    // @see validator/engine/validator.js#validateUrlAndProtocol()\n    if (url) {\n      if (/__amp_source_origin/.test(url)) {\n        return false;\n      }\n\n      var allowedProtocols = rules.allowedProtocols;\n\n      if (allowedProtocols) {\n        var re = /^([^:\\/?#.]+):[\\s\\S]*$/;\n        var match = re.exec(url);\n\n        if (match !== null) {\n          var protocol = match[1].toLowerCase().trim(); // hasOwn() needed since nested objects are not prototype-less.\n\n          if (!(0, _object.hasOwn)(allowedProtocols, protocol)) {\n            return false;\n          }\n        }\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Returns the property rules object for (tag, property), if it exists.\n   * Returns null if binding is allowed without constraints.\n   * Returns undefined if binding is not allowed.\n   * @param {string} tag\n   * @param {string} property\n   * @return {(?PropertyRulesDef|undefined)}\n   * @private\n   */\n  ;\n\n  _proto.rulesForTagAndProperty_ = function rulesForTagAndProperty_(tag, property) {\n    // Allow binding to all ARIA attributes.\n    if ((0, _string.startsWith)(property, 'aria-')) {\n      return null;\n    } // Disallow URL property bindings if configured as such.\n\n\n    if ((0, _object.ownProperty)(URL_PROPERTIES, property) && !this.allowUrlBindings_) {\n      return undefined;\n    }\n\n    var globalRules = (0, _object.ownProperty)(GLOBAL_PROPERTY_RULES, property);\n\n    if (globalRules !== undefined) {\n      return (\n        /** @type {PropertyRulesDef} */\n        globalRules\n      );\n    }\n\n    var ampPropertyRules = (0, _object.ownProperty)(AMP_PROPERTY_RULES, property);\n\n    if ((0, _string.startsWith)(tag, 'AMP-') && ampPropertyRules !== undefined) {\n      return (\n        /** @type {PropertyRulesDef} */\n        ampPropertyRules\n      );\n    }\n\n    var tagRules = (0, _object.ownProperty)(ELEMENT_RULES, tag);\n\n    if (tagRules) {\n      return tagRules[property];\n    }\n\n    return undefined;\n  };\n\n  return BindValidator;\n}();\n/**\n * @return {Object<string, Object<string, ?PropertyRulesDef>>}}\n * @private\n */\n\n\nexports.BindValidator = BindValidator;\n\nfunction createElementRules_() {\n  // Initialize `rules` with tag-specific constraints.\n  var rules = {\n    'AMP-AUTOCOMPLETE': {\n      'src': {\n        'allowedProtocols': {\n          'https': true\n        }\n      }\n    },\n    'AMP-BASE-CAROUSEL': {\n      'advance-count': null,\n      'auto-advance-count': null,\n      'auto-advance-interval': null,\n      'auto-advance-loops': null,\n      'auto-advance': null,\n      'horizontal': null,\n      'initial-index': null,\n      'loop': null,\n      'mixed-length': null,\n      'side-slide-count': null,\n      'slide': null,\n      'snap-align': null,\n      'snap-by': null,\n      'snap': null,\n      'visible-count': null\n    },\n    'AMP-BRIGHTCOVE': {\n      'data-account': null,\n      'data-embed': null,\n      'data-player': null,\n      'data-player-id': null,\n      'data-playlist-id': null,\n      'data-video-id': null\n    },\n    'AMP-CAROUSEL': {\n      'slide': null\n    },\n    'AMP-DATE-PICKER': {\n      'max': null,\n      'min': null,\n      'src': {\n        'allowedProtocols': {\n          'https': true\n        }\n      }\n    },\n    'AMP-GOOGLE-DOCUMENT-EMBED': {\n      'src': null,\n      'title': null\n    },\n    'AMP-IFRAME': {\n      'src': null\n    },\n    'AMP-IMG': {\n      'alt': null,\n      'attribution': null,\n      'src': {\n        'allowedProtocols': {\n          'data': true,\n          'http': true,\n          'https': true\n        }\n      },\n      'srcset': {\n        'alternativeName': 'src'\n      }\n    },\n    'AMP-LIGHTBOX': {\n      'open': null\n    },\n    'AMP-LIST': {\n      'src': {\n        'allowedProtocols': {\n          'https': true\n        }\n      },\n      'state': null,\n      'is-layout-container': null\n    },\n    'AMP-SELECTOR': {\n      'disabled': null,\n      'selected': null\n    },\n    'AMP-STATE': {\n      'src': {\n        'allowedProtocols': {\n          'https': true\n        }\n      }\n    },\n    'AMP-TIMEAGO': {\n      'datetime': null,\n      'title': null\n    },\n    'AMP-TWITTER': {\n      'data-tweetid': null\n    },\n    'AMP-VIDEO': {\n      'alt': null,\n      'attribution': null,\n      'controls': null,\n      'loop': null,\n      'poster': null,\n      'preload': null,\n      'src': {\n        'allowedProtocols': {\n          'https': true\n        }\n      }\n    },\n    'AMP-YOUTUBE': {\n      'data-videoid': null\n    },\n    'A': {\n      'href': {\n        'allowedProtocols': {\n          'ftp': true,\n          'http': true,\n          'https': true,\n          'mailto': true,\n          'fb-messenger': true,\n          'intent': true,\n          'skype': true,\n          'sms': true,\n          'snapchat': true,\n          'tel': true,\n          'tg': true,\n          'threema': true,\n          'twitter': true,\n          'viber': true,\n          'whatsapp': true\n        }\n      }\n    },\n    'BUTTON': {\n      'disabled': null,\n      'type': null,\n      'value': null\n    },\n    'DETAILS': {\n      'open': null\n    },\n    'FIELDSET': {\n      'disabled': null\n    },\n    'IMAGE': {\n      'xlink:href': {\n        'allowedProtocols': {\n          'http': true,\n          'https': true\n        }\n      }\n    },\n    'INPUT': {\n      'accept': null,\n      'accesskey': null,\n      'autocomplete': null,\n      'checked': null,\n      'disabled': null,\n      'height': null,\n      'inputmode': null,\n      'max': null,\n      'maxlength': null,\n      'min': null,\n      'minlength': null,\n      'multiple': null,\n      'pattern': null,\n      'placeholder': null,\n      'readonly': null,\n      'required': null,\n      'selectiondirection': null,\n      'size': null,\n      'spellcheck': null,\n      'step': null,\n      'type': {\n        blacklistedValueRegex: '(^|\\\\s)(button|image|)(\\\\s|$)'\n      },\n      'value': null,\n      'width': null\n    },\n    'OPTION': {\n      'disabled': null,\n      'label': null,\n      'selected': null,\n      'value': null\n    },\n    'OPTGROUP': {\n      'disabled': null,\n      'label': null\n    },\n    'SECTION': {\n      'data-expand': null\n    },\n    'SELECT': {\n      'autofocus': null,\n      'disabled': null,\n      'multiple': null,\n      'required': null,\n      'size': null\n    },\n    'SOURCE': {\n      'src': {\n        'allowedProtocols': {\n          'https': true\n        }\n      },\n      'type': null\n    },\n    'TRACK': {\n      'label': null,\n      'src': {\n        'allowedProtocols': {\n          'https': true\n        }\n      },\n      'srclang': null\n    },\n    'TEXTAREA': {\n      'autocomplete': null,\n      'autofocus': null,\n      'cols': null,\n      'disabled': null,\n      'maxlength': null,\n      'minlength': null,\n      'pattern': null,\n      'placeholder': null,\n      'readonly': null,\n      'required': null,\n      'rows': null,\n      'selectiondirection': null,\n      'selectionend': null,\n      'selectionstart': null,\n      'spellcheck': null,\n      'wrap': null,\n      // Non-standard property.\n      'defaulttext': null\n    }\n  };\n  return rules;\n}\n\n},{\"../../../src/log\":29,\"../../../src/srcset\":36,\"../../../src/string\":38,\"../../../src/utils/object\":49}],7:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.ActionTrust = exports.DEFAULT_ACTION = exports.RAW_OBJECT_ARGS_KEY = void 0;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Key string in an action arguments map for an unparsed object literal string.\n *\n * E.g. for the action in <p on=\"tap:AMP.setState({foo: 'bar'})\",\n * then `args[RAW_OBJECT_ARGS_KEY]` is the string \"{foo: 'bar'}\".\n *\n * The action service delegates parsing of object literals to the corresponding\n * extension (in the example above, amp-bind).\n *\n * @see ./service/action-impl.ActionInfoDef\n * @const {string}\n */\nvar RAW_OBJECT_ARGS_KEY = '__AMP_OBJECT_STRING__';\n/** @const {string} Identifier for an element's default action. */\n\nexports.RAW_OBJECT_ARGS_KEY = RAW_OBJECT_ARGS_KEY;\nvar DEFAULT_ACTION = 'activate';\n/**\n * Trust level of an action.\n *\n * Corresponds to degree of user intent, i.e. events triggered with strong\n * user intent have high trust.\n *\n * @enum {number}\n */\n\nexports.DEFAULT_ACTION = DEFAULT_ACTION;\nvar ActionTrust = {\n  LOW: 1,\n  HIGH: 100\n};\nexports.ActionTrust = ActionTrust;\n\n},{}],8:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.AmpEvents = void 0;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common AMP events.\n * @enum {string}\n */\nvar AmpEvents = {\n  DOM_UPDATE: 'amp:dom-update',\n  FORM_DIRTINESS_CHANGE: 'amp:form-dirtiness-change',\n  FORM_VALUE_CHANGE: 'amp:form-value-change',\n  VISIBILITY_CHANGE: 'amp:visibilitychange',\n  // https://github.com/ampproject/amphtml/blob/master/ads/README.md#page-visibility\n  // The following codes are only used for testing.\n  // TODO(choumx): Move these to a separate enum so they can be DCE'd.\n  ATTACHED: 'amp:attached',\n  STUBBED: 'amp:stubbed',\n  LOAD_START: 'amp:load:start',\n  LOAD_END: 'amp:load:end',\n  ERROR: 'amp:error',\n  SIZE_CHANGED: 'amp:size-changed'\n};\nexports.AmpEvents = AmpEvents;\n\n},{}],9:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.triggerAnalyticsEvent = triggerAnalyticsEvent;\n\nvar _services = require(\"./services\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Helper method to trigger analytics event if amp-analytics is available.\n * TODO: Do not expose this function\n * @param {!Element} target\n * @param {string} eventType\n * @param {!JsonObject=} opt_vars A map of vars and their values.\n */\nfunction triggerAnalyticsEvent(target, eventType, opt_vars) {\n  _services.Services.analyticsForDocOrNull(target).then(function (analytics) {\n    if (!analytics) {\n      return;\n    }\n\n    analytics.triggerEventForTarget(target, eventType, opt_vars);\n  });\n}\n\n},{\"./services\":35}],10:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.batchFetchJsonFor = batchFetchJsonFor;\nexports.requestForBatchFetch = requestForBatchFetch;\nexports.UrlReplacementPolicy = void 0;\n\nvar _services = require(\"./services\");\n\nvar _url = require(\"./url\");\n\nvar _json = require(\"./json\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @enum {number}\n */\nvar UrlReplacementPolicy = {\n  NONE: 0,\n  OPT_IN: 1,\n  ALL: 2\n};\n/**\n * Batch fetches the JSON endpoint at the given element's `src` attribute.\n * Sets the fetch credentials option from the element's `credentials` attribute,\n * if it exists.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {!Element} element\n * @param {string=} opt_expr Dot-syntax reference to subdata of JSON result\n *     to return. If not specified, entire JSON result is returned.\n * @param {UrlReplacementPolicy=} opt_urlReplacement If ALL, replaces all URL\n *     vars. If OPT_IN, replaces whitelisted URL vars. Otherwise, don't expand..\n * @param {boolean=} opt_refresh Forces refresh of browser cache.\n * @param {string=} opt_token Auth token that forces a POST request.\n * @return {!Promise<!JsonObject|!Array<JsonObject>>} Resolved with JSON\n *     result or rejected if response is invalid.\n */\n\nexports.UrlReplacementPolicy = UrlReplacementPolicy;\n\nfunction batchFetchJsonFor(ampdoc, element, opt_expr, opt_urlReplacement, opt_refresh, opt_token) {\n  if (opt_expr === void 0) {\n    opt_expr = '.';\n  }\n\n  if (opt_urlReplacement === void 0) {\n    opt_urlReplacement = UrlReplacementPolicy.NONE;\n  }\n\n  if (opt_refresh === void 0) {\n    opt_refresh = false;\n  }\n\n  if (opt_token === void 0) {\n    opt_token = undefined;\n  }\n\n  (0, _url.assertHttpsUrl)(element.getAttribute('src'), element);\n\n  var xhr = _services.Services.batchedXhrFor(ampdoc.win);\n\n  return requestForBatchFetch(element, opt_urlReplacement, opt_refresh).then(function (data) {\n    if (opt_token !== undefined) {\n      data.fetchOpt['method'] = 'POST';\n      data.fetchOpt['headers'] = {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      };\n      data.fetchOpt['body'] = {\n        'ampViewerAuthToken': opt_token\n      };\n    }\n\n    return xhr.fetchJson(data.xhrUrl, data.fetchOpt);\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    if (data == null) {\n      throw new Error('Response is undefined.');\n    }\n\n    return (0, _json.getValueForExpr)(data, opt_expr || '.');\n  });\n}\n/**\n * Handles url replacement and constructs the FetchInitJsonDef required for a\n * fetch.\n * @param {!Element} element\n * @param {!UrlReplacementPolicy} replacement If ALL, replaces all URL\n *     vars. If OPT_IN, replaces whitelisted URL vars. Otherwise, don't expand.\n * @param {boolean} refresh Forces refresh of browser cache.\n * @return {!Promise<!FetchRequestDef>}\n */\n\n\nfunction requestForBatchFetch(element, replacement, refresh) {\n  var url = element.getAttribute('src'); // Replace vars in URL if desired.\n\n  var urlReplacements = _services.Services.urlReplacementsForDoc(element);\n\n  var promise = replacement >= UrlReplacementPolicy.OPT_IN ? urlReplacements.expandUrlAsync(url) : Promise.resolve(url);\n  return promise.then(function (xhrUrl) {\n    // Throw user error if this element is performing URL substitutions\n    // without the soon-to-be-required opt-in (#12498).\n    if (replacement == UrlReplacementPolicy.OPT_IN) {\n      var invalid = urlReplacements.collectUnwhitelistedVarsSync(element);\n\n      if (invalid.length > 0) {\n        throw (0, _log.user)().createError('URL variable substitutions in CORS ' + 'fetches from dynamic URLs (e.g. via amp-bind) require opt-in. ' + (\"Please add data-amp-replace=\\\"\" + invalid.join(' ') + \"\\\" to the \") + (\"<\" + element.tagName + \"> element. See https://bit.ly/amp-var-subs.\"));\n      }\n    }\n\n    var fetchOpt = {};\n\n    if (element.hasAttribute('credentials')) {\n      fetchOpt.credentials = element.getAttribute('credentials');\n    } // https://hacks.mozilla.org/2016/03/referrer-and-cache-control-apis-for-fetch/\n\n\n    if (refresh) {\n      fetchOpt.cache = 'reload';\n    }\n\n    return {\n      'xhrUrl': xhrUrl,\n      'fetchOpt': fetchOpt\n    };\n  });\n}\n\n},{\"./json\":27,\"./log\":29,\"./services\":35,\"./url\":45}],11:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.startupChunk = startupChunk;\nexports.chunk = chunk;\nexports.chunkInstanceForTesting = chunkInstanceForTesting;\nexports.deactivateChunking = deactivateChunking;\nexports.activateChunkingForTesting = activateChunkingForTesting;\nexports.runChunksForTesting = runChunksForTesting;\nexports.onIdle = onIdle;\nexports.ChunkPriority = void 0;\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\nvar _eventHelper = require(\"./event-helper\");\n\nvar _service = require(\"./service\");\n\nvar _experiments = require(\"./experiments\");\n\nvar _styleInstaller = require(\"./style-installer\");\n\nvar _priorityQueue = _interopRequireDefault(require(\"./utils/priority-queue\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * @const {string}\n */\nvar TAG = 'CHUNK';\n/**\n * @type {boolean}\n */\n\nvar deactivated = /nochunking=1/.test(self.location.hash);\n/**\n * @const {!Promise}\n */\n\nvar resolved = Promise.resolve();\n/**\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!Chunks}\n * @private\n */\n\nfunction chunkServiceForDoc(elementOrAmpDoc) {\n  (0, _service.registerServiceBuilderForDoc)(elementOrAmpDoc, 'chunk', Chunks);\n  return (0, _service.getServiceForDoc)(elementOrAmpDoc, 'chunk');\n}\n/**\n * Run the given function. For visible documents the function will be\n * called in a micro task (Essentially ASAP). If the document is\n * not visible, tasks will yield to the event loop (to give the browser\n * time to do other things) and may even be further delayed until\n * there is time.\n *\n * @param {!Document|!./service/ampdoc-impl.AmpDoc} doc\n * @param {function(?IdleDeadline)} fn\n * @param {boolean=} opt_makesBodyVisible Pass true if this service makes\n *     the body visible. This is relevant because it may influence the\n *     task scheduling strategy.\n */\n\n\nfunction startupChunk(doc, fn, opt_makesBodyVisible) {\n  if (deactivated) {\n    resolved.then(fn);\n    return;\n  }\n\n  var service = chunkServiceForDoc(doc.documentElement || doc);\n  service.runForStartup(fn);\n\n  if (opt_makesBodyVisible) {\n    service.runForStartup(function () {\n      service.bodyIsVisible_ = true;\n    });\n  }\n}\n/**\n * Run the given function sometime in the future without blocking UI.\n *\n * Higher priority tasks are executed before lower priority tasks.\n * Tasks with the same priority are executed in FIFO order.\n *\n * Uses `requestIdleCallback` if available and passes the `IdleDeadline`\n * object to the function, which can be used to perform a variable amount\n * of work depending on the remaining amount of idle time.\n *\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {function(?IdleDeadline)} fn\n * @param {ChunkPriority} priority\n */\n\n\nfunction chunk(elementOrAmpDoc, fn, priority) {\n  if (deactivated) {\n    resolved.then(fn);\n    return;\n  }\n\n  var service = chunkServiceForDoc(elementOrAmpDoc);\n  service.run(fn, priority);\n}\n/**\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!Chunks}\n */\n\n\nfunction chunkInstanceForTesting(elementOrAmpDoc) {\n  return chunkServiceForDoc(elementOrAmpDoc);\n}\n/**\n * Use a standard micro task for every invocation. This should only\n * be called from the AMP bootstrap script if it is known that\n * chunking makes no sense. In particular this is the case when\n * AMP runs in the `amp-shadow` multi document mode.\n */\n\n\nfunction deactivateChunking() {\n  deactivated = true;\n}\n/**\n * @visibleForTesting\n */\n\n\nfunction activateChunkingForTesting() {\n  deactivated = false;\n}\n/**\n * Runs all currently scheduled chunks.\n * Independent of errors it will unwind the queue. Will afterwards\n * throw the first encountered error.\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n */\n\n\nfunction runChunksForTesting(elementOrAmpDoc) {\n  var service = chunkInstanceForTesting(elementOrAmpDoc);\n  var errors = [];\n\n  while (true) {\n    try {\n      if (!service.execute_(\n      /* idleDeadline */\n      null)) {\n        break;\n      }\n    } catch (e) {\n      errors.push(e);\n    }\n  }\n\n  if (errors.length) {\n    throw errors[0];\n  }\n}\n/**\n * The priority of a chunk task. Higher priority tasks have higher values.\n * @enum {number}\n */\n\n\nvar ChunkPriority = {\n  HIGH: 20,\n  LOW: 10,\n  BACKGROUND: 0\n};\n/** @enum {string} */\n\nexports.ChunkPriority = ChunkPriority;\nvar TaskState = {\n  NOT_RUN: 'not_run',\n  RUN: 'run'\n};\n/**\n * A default chunkable task.\n * @private\n */\n\nvar Task =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {function(?IdleDeadline)} fn\n   */\n  function Task(fn) {\n    /** @public {TaskState} */\n    this.state = TaskState.NOT_RUN;\n    /** @private @const {!function(?IdleDeadline)} */\n\n    this.fn_ = fn;\n  }\n  /**\n   * Executes the wrapped function.\n   * @param {?IdleDeadline} idleDeadline\n   * @throws {Error}\n   * @protected\n   */\n\n\n  var _proto = Task.prototype;\n\n  _proto.runTask_ = function runTask_(idleDeadline) {\n    if (this.state == TaskState.RUN) {\n      return;\n    }\n\n    this.state = TaskState.RUN;\n\n    try {\n      this.fn_(idleDeadline);\n    } catch (e) {\n      this.onTaskError_(e);\n      throw e;\n    }\n  }\n  /**\n   * @return {string}\n   * @protected\n   */\n  ;\n\n  _proto.getName_ = function getName_() {\n    return this.fn_.displayName || this.fn_.name;\n  }\n  /**\n   * Optional handling when a task run throws an error.\n   * @param {Error} unusedError\n   * @private\n   */\n  ;\n\n  _proto.onTaskError_ = function onTaskError_(unusedError) {} // By default, no-op.\n\n  /**\n   * Returns true if this task should be run without delay.\n   * @return {boolean}\n   * @protected\n   */\n  ;\n\n  _proto.immediateTriggerCondition_ = function immediateTriggerCondition_() {\n    // By default, there are no immediate trigger conditions.\n    return false;\n  }\n  /**\n   * Returns true if this task should be scheduled using `requestIdleCallback`.\n   * Otherwise, task is scheduled as macro-task on next event loop.\n   * @return {boolean}\n   * @protected\n   */\n  ;\n\n  _proto.useRequestIdleCallback_ = function useRequestIdleCallback_() {\n    // By default, never use requestIdleCallback.\n    return false;\n  };\n\n  return Task;\n}();\n/**\n * A task that's run as part of AMP's startup sequence.\n * @private\n */\n\n\nvar StartupTask =\n/*#__PURE__*/\nfunction (_Task) {\n  _inheritsLoose(StartupTask, _Task);\n\n  /**\n   * @param {function(?IdleDeadline)} fn\n   * @param {!Window} win\n   * @param {!Chunks} chunks\n   */\n  function StartupTask(fn, win, chunks) {\n    var _this;\n\n    _this = _Task.call(this, fn) || this;\n    /** @private @const */\n\n    _this.chunks_ = chunks;\n    return _this;\n  }\n  /** @override */\n\n\n  var _proto2 = StartupTask.prototype;\n\n  _proto2.onTaskError_ = function onTaskError_(unusedError) {\n    // Startup tasks run early in init. All errors should show the doc.\n    (0, _styleInstaller.makeBodyVisibleRecovery)(self.document);\n  }\n  /** @override */\n  ;\n\n  _proto2.immediateTriggerCondition_ = function immediateTriggerCondition_() {\n    // Run in a micro task when the doc is visible. Otherwise, run after\n    // having yielded to the event queue once.\n    return this.isVisible_();\n  }\n  /** @override */\n  ;\n\n  _proto2.useRequestIdleCallback_ = function useRequestIdleCallback_() {\n    // We only start using requestIdleCallback when the core runtime has\n    // been initialized. Otherwise we risk starving ourselves\n    // before the render-critical work is done.\n    return this.chunks_.coreReady_;\n  }\n  /**\n   * @return {boolean}\n   * @private\n   */\n  ;\n\n  _proto2.isVisible_ = function isVisible_() {\n    return this.chunks_.ampdoc.isVisible();\n  };\n\n  return StartupTask;\n}(Task);\n/**\n * Handles queueing, scheduling and executing tasks.\n */\n\n\nvar Chunks =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!./service/ampdoc-impl.AmpDoc} ampDoc\n   */\n  function Chunks(ampDoc) {\n    var _this2 = this;\n\n    /** @protected @const {!./service/ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampDoc;\n    /** @private @const {!Window} */\n\n    this.win_ = ampDoc.win;\n    /** @private @const {!PriorityQueue<Task>} */\n\n    this.tasks_ = new _priorityQueue.default();\n    /** @private @const {function(?IdleDeadline)} */\n\n    this.boundExecute_ = this.execute_.bind(this);\n    /** @private {number} */\n\n    this.durationOfLastExecution_ = 0;\n    /** @private {boolean} */\n\n    this.macroAfterLongTask_ = (0, _experiments.isExperimentOn)(this.win_, 'macro-after-long-task');\n    /**\n     * Set to true if we scheduled a macro or micro task to execute the next\n     * task. If true, we don't schedule another one.\n     * Not set to true if we use rIC, because we always want to transition\n     * to immeditate invocation from that state.\n     * @private {boolean}\n     */\n\n    this.scheduledImmediateInvocation_ = false;\n    /** @private {boolean} Whether the document can actually be painted. */\n\n    this.bodyIsVisible_ = this.win_.document.documentElement.hasAttribute('i-amphtml-no-boilerplate');\n    this.win_.addEventListener('message', function (e) {\n      if ((0, _eventHelper.getData)(e) == 'amp-macro-task') {\n        _this2.execute_(\n        /* idleDeadline */\n        null);\n      }\n    });\n    /** @protected {boolean} */\n\n    this.coreReady_ = false;\n\n    _services.Services.viewerPromiseForDoc(ampDoc).then(function () {\n      // Once the viewer has been resolved, most of core runtime has been\n      // initialized as well.\n      _this2.coreReady_ = true;\n    });\n\n    ampDoc.onVisibilityChanged(function () {\n      if (ampDoc.isVisible()) {\n        _this2.schedule_();\n      }\n    });\n  }\n  /**\n   * Run fn as a \"chunk\".\n   * @param {function(?IdleDeadline)} fn\n   * @param {number} priority\n   */\n\n\n  var _proto3 = Chunks.prototype;\n\n  _proto3.run = function run(fn, priority) {\n    var t = new Task(fn);\n    this.enqueueTask_(t, priority);\n  }\n  /**\n   * Run a fn that's part of AMP's startup sequence as a \"chunk\".\n   * @param {function(?IdleDeadline)} fn\n   */\n  ;\n\n  _proto3.runForStartup = function runForStartup(fn) {\n    var t = new StartupTask(fn, this.win_, this);\n    this.enqueueTask_(t, Number.POSITIVE_INFINITY);\n  }\n  /**\n   * Queues a task to be executed later with given priority.\n   * @param {!Task} task\n   * @param {number} priority\n   * @private\n   */\n  ;\n\n  _proto3.enqueueTask_ = function enqueueTask_(task, priority) {\n    this.tasks_.enqueue(task, priority);\n    this.schedule_();\n  }\n  /**\n   * Returns the next task that hasn't been run yet.\n   * If `opt_dequeue` is true, remove the returned task from the queue.\n   * @param {boolean=} opt_dequeue\n   * @return {?Task}\n   * @private\n   */\n  ;\n\n  _proto3.nextTask_ = function nextTask_(opt_dequeue) {\n    var t = this.tasks_.peek(); // Dequeue tasks until we find one that hasn't been run yet.\n\n    while (t && t.state !== TaskState.NOT_RUN) {\n      this.tasks_.dequeue();\n      t = this.tasks_.peek();\n    } // If `opt_dequeue` is true, remove this task from the queue.\n\n\n    if (t && opt_dequeue) {\n      this.tasks_.dequeue();\n    }\n\n    return t;\n  }\n  /**\n   * Run a task.\n   * Schedule the next round if there are more tasks.\n   * @param {?IdleDeadline} idleDeadline\n   * @return {boolean} Whether anything was executed.\n   * @private\n   */\n  ;\n\n  _proto3.execute_ = function execute_(idleDeadline) {\n    var _this3 = this;\n\n    var t = this.nextTask_(\n    /* opt_dequeue */\n    true);\n\n    if (!t) {\n      this.scheduledImmediateInvocation_ = false;\n      this.durationOfLastExecution_ = 0;\n      return false;\n    }\n\n    var before;\n\n    try {\n      before = Date.now();\n      t.runTask_(idleDeadline);\n    } finally {\n      // We want to capture the time of the entire task duration including\n      // scheduled immediate (from resolved promises) micro tasks.\n      // Lacking a better way to do this we just scheduled 10 nested\n      // micro tasks.\n      resolved.then().then().then().then().then().then().then().then().then(function () {\n        _this3.scheduledImmediateInvocation_ = false;\n        _this3.durationOfLastExecution_ += Date.now() - before;\n        (0, _log.dev)().fine(TAG, t.getName_(), 'Chunk duration', Date.now() - before, _this3.durationOfLastExecution_);\n\n        _this3.schedule_();\n      });\n    }\n\n    return true;\n  }\n  /**\n   * Calls `execute_()` asynchronously.\n   * @param {?IdleDeadline} idleDeadline\n   * @private\n   */\n  ;\n\n  _proto3.executeAsap_ = function executeAsap_(idleDeadline) {\n    var _this4 = this;\n\n    // If we've spent over 5 millseconds executing the\n    // last instruction yeild back to the main thread.\n    // 5 milliseconds is a magic number.\n    if (this.macroAfterLongTask_ && this.bodyIsVisible_ && this.durationOfLastExecution_ > 5) {\n      this.durationOfLastExecution_ = 0;\n      this.requestMacroTask_();\n      return;\n    }\n\n    resolved.then(function () {\n      _this4.boundExecute_(idleDeadline);\n    });\n  }\n  /**\n   * Schedule running the next queued task.\n   * @private\n   */\n  ;\n\n  _proto3.schedule_ = function schedule_() {\n    if (this.scheduledImmediateInvocation_) {\n      return;\n    }\n\n    var nextTask = this.nextTask_();\n\n    if (!nextTask) {\n      return;\n    }\n\n    if (nextTask.immediateTriggerCondition_()) {\n      this.scheduledImmediateInvocation_ = true;\n      this.executeAsap_(\n      /* idleDeadline */\n      null);\n      return;\n    } // If requestIdleCallback exists, schedule a task with it, but\n    // do not wait longer than two seconds.\n\n\n    if (nextTask.useRequestIdleCallback_() && this.win_.requestIdleCallback) {\n      onIdle(this.win_, // Wait until we have a budget of at least 15ms.\n      // 15ms is a magic number. Budgets are higher when the user\n      // is completely idle (around 40), but that occurs too\n      // rarely to be usable. 15ms budgets can happen during scrolling\n      // but only if the device is doing super, super well, and no\n      // real processing is done between frames.\n      15\n      /* minimumTimeRemaining */\n      , 2000\n      /* timeout */\n      , this.boundExecute_);\n      return;\n    }\n\n    this.requestMacroTask_();\n  }\n  /**\n   * Requests executing of a macro task. Yields to the event queue\n   * before executing the task.\n   * Places task on browser message queue which then respectively\n   * triggers dequeuing and execution of a chunk.\n   */\n  ;\n\n  _proto3.requestMacroTask_ = function requestMacroTask_() {\n    // The message doesn't actually matter.\n    this.win_.\n    /*OK*/\n    postMessage('amp-macro-task', '*');\n  };\n\n  return Chunks;\n}();\n/**\n * Delays calling the given function until the browser is notifying us\n * about a certain minimum budget or the timeout is reached.\n * @param {!Window} win\n * @param {number} minimumTimeRemaining Minimum number of millis idle\n *     budget for callback to fire.\n * @param {number} timeout in millis for callback to fire.\n * @param {function(?IdleDeadline)} fn Callback.\n * @visibleForTesting\n */\n\n\nfunction onIdle(win, minimumTimeRemaining, timeout, fn) {\n  var startTime = Date.now();\n  /**\n   * @param {!IdleDeadline} info\n   */\n\n  function rIC(info) {\n    if (info.timeRemaining() < minimumTimeRemaining) {\n      var remainingTimeout = timeout - (Date.now() - startTime);\n\n      if (remainingTimeout <= 0 || info.didTimeout) {\n        (0, _log.dev)().fine(TAG, 'Timed out', timeout, info.didTimeout);\n        fn(info);\n      } else {\n        (0, _log.dev)().fine(TAG, 'Rescheduling with', remainingTimeout, info.timeRemaining());\n        win.requestIdleCallback(rIC, {\n          timeout: remainingTimeout\n        });\n      }\n    } else {\n      (0, _log.dev)().fine(TAG, 'Running idle callback with ', minimumTimeRemaining);\n      fn(info);\n    }\n  }\n\n  win.requestIdleCallback(rIC, {\n    timeout: timeout\n  });\n}\n\n},{\"./event-helper\":20,\"./experiments\":21,\"./log\":29,\"./service\":33,\"./services\":35,\"./style-installer\":39,\"./utils/priority-queue\":50}],12:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.CommonSignals = void 0;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Commonly used signals across different elements and documents.\n * @enum {string}\n */\nvar CommonSignals = {\n  /**\n   * The element has been upgraded from ElementStub to its real implementation.\n   */\n  UPGRADED: 'upgraded',\n\n  /**\n   * The element has been built.\n   */\n  BUILT: 'built',\n\n  /**\n   * The element has started loading.\n   * LOAD_START triggers at the start of the layoutCallback.\n   */\n  LOAD_START: 'load-start',\n\n  /**\n   * Rendering has been confirmed to have been started.\n   * It is a signal to indicate meaningful display (e.g. text could be displayed\n   * CSS is correctly installed/applied).\n   *\n   * Elements can optionally implement RENDER_START signal. (e.g. ad, shadowdoc)\n   * if it want to define its own meaningful display time and toggle visibility.\n   *\n   * Simpler elements's RENDER_START can be equal to the start of the\n   * buildCallback\n   */\n  RENDER_START: 'render-start',\n\n  /**\n   * The element has been loaded.\n   * LOAD_END triggers at the end of the layoutCallback.\n   *\n   */\n  LOAD_END: 'load-end',\n\n  /**\n   * The initial contents of an element/document/embed have been loaded.\n   * INI_LOAD is an optional signal, implemented by ads, story, and elements\n   * that consist of other resources.\n   * It instructs that all critical resources has been loaded, and can be used\n   * for more accurate visibility measurement.\n   * When an element doesn't consist multiple child resources, LOAD_END signal\n   * can be used to indicate resource load completion.\n   * Note: Based on the implementation, INI_LOAD can trigger before or after\n   * LOAD_END.\n   */\n  INI_LOAD: 'ini-load',\n\n  /**\n   * The element has been unlaid out.\n   */\n  UNLOAD: 'unload'\n};\nexports.CommonSignals = CommonSignals;\n\n},{}],13:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.config = exports.urls = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nvar env = self.AMP_CONFIG || {};\nvar thirdPartyFrameRegex = typeof env['thirdPartyFrameRegex'] == 'string' ? new RegExp(env['thirdPartyFrameRegex']) : env['thirdPartyFrameRegex'];\nvar cdnProxyRegex = typeof env['cdnProxyRegex'] == 'string' ? new RegExp(env['cdnProxyRegex']) : env['cdnProxyRegex'];\n/** @type {!Object<string, string|boolean|RegExp|Array<RegExp>>} */\n\nvar urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex: thirdPartyFrameRegex || /^d-\\d+\\.ampproject\\.net$/,\n  cdn: env['cdnUrl'] || 'https://cdn.ampproject.org',\n\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex: cdnProxyRegex || /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting: env['errorReportingUrl'] || 'https://amp-error-reporting.appspot.com/r',\n  localDev: env['localDev'] || false,\n\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/master/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [/(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/, /(^|\\.)gmail\\.dev$/]\n};\nexports.urls = urls;\nvar config = {\n  urls: urls\n};\nexports.config = config;\n\n},{}],14:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.assertIsName = assertIsName;\nexports.setScopeSelectorSupportedForTesting = setScopeSelectorSupportedForTesting;\nexports.isScopeSelectorSupported = isScopeSelectorSupported;\nexports.prependSelectorsWith = prependSelectorsWith;\nexports.escapeCssSelectorIdent = escapeCssSelectorIdent;\nexports.escapeCssSelectorNth = escapeCssSelectorNth;\n\nvar _cssEscape = require(\"../third_party/css-escape/css-escape\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nfunction assertIsName(name) {\n  (0, _log.devAssert)(/^[\\w-]+$/.test(name));\n}\n/**\n * @type {boolean|undefined}\n */\n\n\nvar scopeSelectorSupported;\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\n\nfunction setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\n\n\nfunction isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return scopeSelectorSupported = testScopeSelector(el);\n}\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\n\n\nfunction testScopeSelector(el) {\n  try {\n    var doc = el.ownerDocument;\n    var testElement = doc.createElement('div');\n    var testChild = doc.createElement('div');\n    testElement.appendChild(testChild); // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n\n    return testElement.\n    /*OK*/\n    querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\n\n\nfunction prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, \"$&\" + distribute + \" \");\n}\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n */\n\n\nfunction escapeCssSelectorIdent(ident) {\n  return (0, _cssEscape.cssEscape)(ident);\n}\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\n\n\nfunction escapeCssSelectorNth(ident) {\n  var escaped = String(ident); // Ensure it doesn't close the nth-child psuedo class.\n\n  (0, _log.devAssert)(escaped.indexOf(')') === -1);\n  return escaped;\n}\n\n},{\"../third_party/css-escape/css-escape\":56,\"./log\":29}],15:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isDocumentReady = isDocumentReady;\nexports.onDocumentReady = onDocumentReady;\nexports.whenDocumentReady = whenDocumentReady;\nexports.whenDocumentComplete = whenDocumentComplete;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether the document is ready.\n * @param {!Document} doc\n * @return {boolean}\n */\nfunction isDocumentReady(doc) {\n  return doc.readyState != 'loading' && doc.readyState != 'uninitialized';\n}\n/**\n * Whether the document has loaded all the css and sub-resources.\n * @param {!Document} doc\n * @return {boolean}\n */\n\n\nfunction isDocumentComplete(doc) {\n  return doc.readyState == 'complete';\n}\n/**\n * Calls the callback when document is ready.\n * @param {!Document} doc\n * @param {function(!Document)} callback\n */\n\n\nfunction onDocumentReady(doc, callback) {\n  onDocumentState(doc, isDocumentReady, callback);\n}\n/**\n * Calls the callback when document's state satisfies the stateFn.\n * @param {!Document} doc\n * @param {function(!Document):boolean} stateFn\n * @param {function(!Document)} callback\n */\n\n\nfunction onDocumentState(doc, stateFn, callback) {\n  var ready = stateFn(doc);\n\n  if (ready) {\n    callback(doc);\n  } else {\n    var readyListener = function readyListener() {\n      if (stateFn(doc)) {\n        if (!ready) {\n          ready = true;\n          callback(doc);\n        }\n\n        doc.removeEventListener('readystatechange', readyListener);\n      }\n    };\n\n    doc.addEventListener('readystatechange', readyListener);\n  }\n}\n/**\n * Returns a promise that is resolved when document is ready.\n * @param {!Document} doc\n * @return {!Promise<!Document>}\n */\n\n\nfunction whenDocumentReady(doc) {\n  return new Promise(function (resolve) {\n    onDocumentReady(doc, resolve);\n  });\n}\n/**\n * Returns a promise that is resolved when document is complete.\n * @param {!Document} doc\n * @return {!Promise<!Document>}\n */\n\n\nfunction whenDocumentComplete(doc) {\n  return new Promise(function (resolve) {\n    onDocumentState(doc, isDocumentComplete, resolve);\n  });\n}\n\n},{}],16:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.waitForChild = waitForChild;\nexports.waitForChildPromise = waitForChildPromise;\nexports.waitForBodyOpen = waitForBodyOpen;\nexports.waitForBodyOpenPromise = waitForBodyOpenPromise;\nexports.removeElement = removeElement;\nexports.removeChildren = removeChildren;\nexports.copyChildren = copyChildren;\nexports.insertAfterOrAtStart = insertAfterOrAtStart;\nexports.addAttributesToElement = addAttributesToElement;\nexports.createElementWithAttributes = createElementWithAttributes;\nexports.isConnectedNode = isConnectedNode;\nexports.rootNodeFor = rootNodeFor;\nexports.isShadowRoot = isShadowRoot;\nexports.closest = closest;\nexports.closestNode = closestNode;\nexports.closestAncestorElementBySelector = closestAncestorElementBySelector;\nexports.ancestorElements = ancestorElements;\nexports.ancestorElementsByTag = ancestorElementsByTag;\nexports.childElement = childElement;\nexports.childElements = childElements;\nexports.lastChildElement = lastChildElement;\nexports.childNodes = childNodes;\nexports.childElementByAttr = childElementByAttr;\nexports.lastChildElementByAttr = lastChildElementByAttr;\nexports.childElementsByAttr = childElementsByAttr;\nexports.childElementByTag = childElementByTag;\nexports.childElementsByTag = childElementsByTag;\nexports.matches = matches;\nexports.elementByTag = elementByTag;\nexports.scopedQuerySelector = scopedQuerySelector;\nexports.scopedQuerySelectorAll = scopedQuerySelectorAll;\nexports.getDataParamsFromAttributes = getDataParamsFromAttributes;\nexports.hasNextNodeInDocumentOrder = hasNextNodeInDocumentOrder;\nexports.templateContentClone = templateContentClone;\nexports.iterateCursor = iterateCursor;\nexports.openWindowDialog = openWindowDialog;\nexports.isJsonScriptTag = isJsonScriptTag;\nexports.isJsonLdScriptTag = isJsonLdScriptTag;\nexports.isRTL = isRTL;\nexports.escapeHtml = escapeHtml;\nexports.tryFocus = tryFocus;\nexports.isIframed = isIframed;\nexports.isAmpElement = isAmpElement;\nexports.whenUpgradedToCustomElement = whenUpgradedToCustomElement;\nexports.fullscreenEnter = fullscreenEnter;\nexports.fullscreenExit = fullscreenExit;\nexports.isFullscreenElement = isFullscreenElement;\nexports.isEnabled = isEnabled;\nexports.domOrderComparator = domOrderComparator;\nexports.toggleAttribute = toggleAttribute;\nexports.getVerticalScrollbarWidth = getVerticalScrollbarWidth;\nexports.UPGRADE_TO_CUSTOMELEMENT_RESOLVER = exports.UPGRADE_TO_CUSTOMELEMENT_PROMISE = void 0;\n\nvar _promise = require(\"./utils/promise\");\n\nvar _css = require(\"./css\");\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object\");\n\nvar _string = require(\"./string\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;'\n};\nvar HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n/** @const {string} */\n\nvar UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n/** @const {string} */\n\nexports.UPGRADE_TO_CUSTOMELEMENT_PROMISE = UPGRADE_TO_CUSTOMELEMENT_PROMISE;\nvar UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\n\nexports.UPGRADE_TO_CUSTOMELEMENT_RESOLVER = UPGRADE_TO_CUSTOMELEMENT_RESOLVER;\n\nfunction waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n\n\n  var win = (0, _types.toWin)(parent.ownerDocument.defaultView);\n\n  if (win.MutationObserver) {\n    /** @const {MutationObserver} */\n    var observer = new win.MutationObserver(function () {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {\n      childList: true\n    });\n  } else {\n    /** @const {number} */\n    var interval = win.setInterval(function () {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    },\n    /* milliseconds */\n    5);\n  }\n}\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\n\n\nfunction waitForChildPromise(parent, checkFunc) {\n  return new Promise(function (resolve) {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\n\n\nfunction waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, function () {\n    return !!doc.body;\n  }, callback);\n}\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\n\n\nfunction waitForBodyOpenPromise(doc) {\n  return new Promise(function (resolve) {\n    return waitForBodyOpen(doc, resolve);\n  });\n}\n/**\n * Removes the element.\n * @param {!Element} element\n */\n\n\nfunction removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element} parent\n */\n\n\nfunction removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\n\n\nfunction copyChildren(from, to) {\n  var frag = to.ownerDocument.createDocumentFragment();\n\n  for (var n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n\n  to.appendChild(frag);\n}\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node} after\n */\n\n\nfunction insertAfterOrAtStart(root, element, after) {\n  var before = after ? after.nextSibling : root.firstChild;\n  root.insertBefore(element, before);\n}\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\n\n\nfunction addAttributesToElement(element, attributes) {\n  for (var attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n\n  return element;\n}\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\n\n\nfunction createElementWithAttributes(doc, tagName, attributes) {\n  var element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\n\n\nfunction isConnectedNode(node) {\n  var connected = node.isConnected;\n\n  if (connected !== undefined) {\n    return connected;\n  } // \"An element is connected if its shadow-including root is a document.\"\n\n\n  var n = node;\n\n  do {\n    n = rootNodeFor(n);\n\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\n\n\nfunction rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n\n  var n; // Check isShadowRoot() is only needed for the polyfill case.\n\n  for (n = node; !!n.parentNode && !isShadowRoot(n); n = n.parentNode) {}\n\n  return n;\n}\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isShadowRoot(value) {\n  // TODO(#22733): remove in preference to dom's `rootNodeFor`.\n  if (!value) {\n    return false;\n  } // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n\n\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n\n  return value.nodeType ==\n  /* DOCUMENT_FRAGMENT */\n  11 && Object.prototype.toString.call(value) === '[object ShadowRoot]';\n}\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\n\n\nfunction closest(element, callback, opt_stopAt) {\n  for (var el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\n\n\nfunction closestNode(node, callback) {\n  for (var n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\n\n\nfunction closestAncestorElementBySelector(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  return closest(element, function (el) {\n    return matches(el, selector);\n  });\n}\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\n\n\nfunction ancestorElements(child, predicate) {\n  var ancestors = [];\n\n  for (var ancestor = child.parentElement; ancestor; ancestor = ancestor.parentElement) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n\n  return ancestors;\n}\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\n\n\nfunction ancestorElementsByTag(child, tagName) {\n  (0, _css.assertIsName)(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, function (el) {\n    return el.tagName == tagName;\n  });\n}\n/**\n * Finds the first child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\n\n\nfunction childElement(parent, callback) {\n  for (var child = parent.firstElementChild; child; child = child.nextElementSibling) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\n\n\nfunction childElements(parent, callback) {\n  var children = [];\n\n  for (var child = parent.firstElementChild; child; child = child.nextElementSibling) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n\n  return children;\n}\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\n\n\nfunction lastChildElement(parent, callback) {\n  for (var child = parent.lastElementChild; child; child = child.previousElementSibling) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\n\n\nfunction childNodes(parent, callback) {\n  var nodes = [];\n\n  for (var child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n\n  return nodes;\n}\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\n\n\nfunction childElementByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return (\n    /*OK*/\n    scopedQuerySelector(parent, \"> [\" + attr + \"]\")\n  );\n}\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\n\n\nfunction lastChildElementByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return lastChildElement(parent, function (el) {\n    return el.hasAttribute(attr);\n  });\n}\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\n\n\nfunction childElementsByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return (\n    /*OK*/\n    scopedQuerySelectorAll(parent, \"> [\" + attr + \"]\")\n  );\n}\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {?Element}\n */\n\n\nfunction childElementByTag(parent, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return (\n    /*OK*/\n    scopedQuerySelector(parent, \"> \" + tagName)\n  );\n}\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\n\n\nfunction childElementsByTag(parent, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return (\n    /*OK*/\n    scopedQuerySelectorAll(parent, \"> \" + tagName)\n  );\n}\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\n\n\nfunction matches(el, selector) {\n  var matcher = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector || el.oMatchesSelector;\n\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n\n  return false; // IE8 always returns false.\n}\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\n\n\nfunction elementByTag(element, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return element.\n  /*OK*/\n  querySelector(tagName);\n}\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\n\n\nfunction scopedQuerySelectionFallback(root, selector) {\n  var unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  var scopedSelector = (0, _css.prependSelectorsWith)(selector, \".\" + unique);\n  var elements = root.\n  /*OK*/\n  querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {?Element}\n */\n\n\nfunction scopedQuerySelector(root, selector) {\n  if ((0, _css.isScopeSelectorSupported)(root)) {\n    return root.\n    /*OK*/\n    querySelector((0, _css.prependSelectorsWith)(selector, ':scope'));\n  } // Only IE.\n\n\n  var fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\n\n\nfunction scopedQuerySelectorAll(root, selector) {\n  if ((0, _css.isScopeSelectorSupported)(root)) {\n    return root.\n    /*OK*/\n    querySelectorAll((0, _css.prependSelectorsWith)(selector, ':scope'));\n  } // Only IE.\n\n\n  return scopedQuerySelectionFallback(root, selector);\n}\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!Element} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\n\n\nfunction getDataParamsFromAttributes(element, opt_computeParamNameFunc, opt_paramPattern) {\n  var computeParamNameFunc = opt_computeParamNameFunc || function (key) {\n    return key;\n  };\n\n  var dataset = element.dataset;\n  var params = (0, _object.dict)();\n  var paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n\n  for (var key in dataset) {\n    var _matches = key.match(paramPattern);\n\n    if (_matches) {\n      var param = _matches[1][0].toLowerCase() + _matches[1].substr(1);\n\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n\n  return params;\n}\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\n\n\nfunction hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  var currentElement = element;\n\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while ((currentElement = currentElement.parentNode) && currentElement != opt_stopNode);\n\n  return false;\n}\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\n\n\nfunction templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    var content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\n\n\nfunction iterateCursor(iterable, cb) {\n  var length = iterable.length;\n\n  for (var i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\n\n\nfunction openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  var res;\n\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    (0, _log.dev)().error('DOM', 'Failed to open url on target: ', target, e);\n  } // Then try with `_top` target.\n\n\n  if (!res && target != '_top' && !(0, _string.includes)(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n\n  return res;\n}\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isJsonScriptTag(element) {\n  return element.tagName == 'SCRIPT' && element.hasAttribute('type') && element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON';\n}\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isJsonLdScriptTag(element) {\n  return element.tagName == 'SCRIPT' && element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON';\n}\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\n\n\nfunction isRTL(doc) {\n  var dir = doc.body.getAttribute('dir') || doc.documentElement.getAttribute('dir') || 'ltr';\n  return dir == 'rtl';\n}\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\n\n\nfunction escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n/**\n * @param {string} c\n * @return {string}\n */\n\n\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\n\n\nfunction tryFocus(element) {\n  try {\n    element.\n    /*OK*/\n    focus();\n  } catch (e) {// IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nfunction isIframed(win) {\n  return win.parent && win.parent != win;\n}\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isAmpElement(element) {\n  var tag = element.tagName; // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n\n  return (0, _string.startsWith)(tag, 'AMP-') && // Some \"amp-*\" elements are not really AMP elements. :smh:\n  !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY');\n}\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!Element} element\n * @return {!Promise<!Element>}\n */\n\n\nfunction whenUpgradedToCustomElement(element) {\n  (0, _log.devAssert)(isAmpElement(element), 'element is not AmpElement');\n\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(element);\n  } // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n\n\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    var deferred = new _promise.Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n/**\n * Replacement for `Element.requestFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n * @param {!Element} element\n */\n\n\nfunction fullscreenEnter(element) {\n  var requestFs = element.requestFullscreen || element.requestFullScreen || element.webkitRequestFullscreen || element.webkitEnterFullscreen || element.msRequestFullscreen || element.mozRequestFullScreen;\n\n  if (requestFs) {\n    requestFs.call(element);\n  }\n}\n/**\n * Replacement for `Document.exitFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/exitFullscreen\n * @param {!Element} element\n */\n\n\nfunction fullscreenExit(element) {\n  var elementBoundExit = element.cancelFullScreen || element.exitFullscreen || element.webkitExitFullscreen || element.webkitCancelFullScreen || element.mozCancelFullScreen || element.msExitFullscreen;\n\n  if (elementBoundExit) {\n    elementBoundExit.call(element);\n    return;\n  }\n\n  var ownerDocument = element.ownerDocument;\n\n  if (!ownerDocument) {\n    return;\n  }\n\n  var docBoundExit = ownerDocument.cancelFullScreen || ownerDocument.exitFullscreencancelFullScreen || ownerDocument.webkitExitFullscreencancelFullScreen || ownerDocument.webkitCancelFullScreencancelFullScreen || ownerDocument.mozCancelFullScreencancelFullScreen || ownerDocument.msExitFullscreen;\n\n  if (docBoundExit) {\n    docBoundExit.call(ownerDocument);\n  }\n}\n/**\n * Replacement for `Document.fullscreenElement`.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenElement\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isFullscreenElement(element) {\n  var webkitDisplayingFullscreen = element.webkitDisplayingFullscreen;\n\n  if (webkitDisplayingFullscreen !== undefined) {\n    return webkitDisplayingFullscreen;\n  }\n\n  var ownerDocument = element.ownerDocument;\n\n  if (!ownerDocument) {\n    return false;\n  }\n\n  var fullscreenElement = ownerDocument.fullscreenElement || ownerDocument.webkitFullscreenElement || ownerDocument.mozFullScreenElement || ownerDocument.webkitCurrentFullScreenElement;\n  return fullscreenElement == element;\n}\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!Element} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\n\n\nfunction isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\n\n\nfunction domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  var pos = element1.compareDocumentPosition(element2);\n  var precedingOrContains = Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS; // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n\n  if (pos & precedingOrContains) {\n    return 1;\n  } // if fe2 is following or contained by fe1, then fe1 is before fe2\n\n\n  return -1;\n}\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\n\n\nfunction toggleAttribute(element, name, forced) {\n  var hasAttribute = element.hasAttribute(name);\n  var enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\n\n\nfunction getVerticalScrollbarWidth(win) {\n  var documentElement = win.document.documentElement;\n  var windowWidth = win.\n  /*OK*/\n  innerWidth;\n  var documentWidth = documentElement.\n  /*OK*/\n  clientWidth;\n  return windowWidth - documentWidth;\n}\n\n},{\"./css\":14,\"./log\":29,\"./string\":38,\"./types\":41,\"./utils/object\":49,\"./utils/promise\":51}],17:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getElementService = getElementService;\nexports.getElementServiceIfAvailable = getElementServiceIfAvailable;\nexports.getElementServiceForDoc = getElementServiceForDoc;\nexports.getElementServiceIfAvailableForDoc = getElementServiceIfAvailableForDoc;\nexports.getElementServiceIfAvailableForDocInEmbedScope = getElementServiceIfAvailableForDocInEmbedScope;\nexports.extensionScriptsInNode = extensionScriptsInNode;\nexports.isExtensionScriptInNode = isExtensionScriptInNode;\n\nvar dom = _interopRequireWildcard(require(\"./dom\"));\n\nvar _service = require(\"./service\");\n\nvar _types = require(\"./types\");\n\nvar _log = require(\"./log\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nfunction getElementService(win, id, extension, opt_element) {\n  return getElementServiceIfAvailable(win, id, extension, opt_element).then(function (service) {\n    return assertService(service, id, extension);\n  });\n}\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailable(win, id, extension, opt_element) {\n  var s = (0, _service.getServicePromiseOrNull)(win, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      s\n    );\n  }\n\n  return getElementServicePromiseOrNull(win, id, extension, opt_element);\n}\n/**\n * @param {!Window} win\n * @param {string} elementName Name of an extended custom element.\n * @return {boolean} Whether this element is scheduled to be loaded.\n */\n\n\nfunction isElementScheduled(win, elementName) {\n  // Set in custom-element.js\n  if (!win.__AMP_EXTENDED_ELEMENTS) {\n    return false;\n  }\n\n  return !!win.__AMP_EXTENDED_ELEMENTS[elementName];\n}\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\n\n\nfunction getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(element, id, extension, opt_element).then(function (service) {\n    return assertService(service, id, extension);\n  });\n}\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailableForDoc(element, id, extension, opt_element) {\n  var s = (0, _service.getServicePromiseOrNullForDoc)(element, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      s\n    );\n  }\n\n  var ampdoc = (0, _service.getAmpdoc)(element);\n  return ampdoc.waitForBodyOpen().then(function () {\n    return waitForExtensionIfPresent(ampdoc.win, extension, ampdoc.win.document.head);\n  }).then(function () {\n    // If this service is provided by an element, then we can't depend on\n    // the service (they may not use the element).\n    if (opt_element) {\n      return (0, _service.getServicePromiseOrNullForDoc)(element, id);\n    } else if (isElementScheduled(ampdoc.win, extension)) {\n      return (0, _service.getServicePromiseForDoc)(element, id);\n    }\n\n    return null;\n  });\n}\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailableForDocInEmbedScope(element, id, extension) {\n  var s = (0, _service.getExistingServiceForDocInEmbedScope)(element, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      Promise.resolve(s)\n    );\n  }\n\n  var win = (0, _types.toWin)(element.ownerDocument.defaultView);\n  var topWin = (0, _service.getTopWindow)(win); // In embeds, doc services are stored on the embed window.\n\n  if (win !== topWin) {\n    return getElementServicePromiseOrNull(win, id, extension);\n  } else {\n    // Only fallback to element's ampdoc (top-level) if not embedded.\n    return getElementServiceIfAvailableForDoc(element, id, extension);\n  }\n}\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction assertService(service, id, extension) {\n  return (\n    /** @type {!Object} */\n    (0, _log.userAssert)(service, 'Service %s was requested to be provided through %s, ' + 'but %s is not loaded in the current page. To fix this ' + 'problem load the JavaScript file for %s in this page.', id, extension, extension, extension)\n  );\n}\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Array<string>}\n */\n\n\nfunction extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n\n  var scripts = {}; // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n\n  var list = head.querySelectorAll('script[custom-element],script[custom-template]');\n\n  for (var i = 0; i < list.length; i++) {\n    var script = list[i];\n    var name = script.getAttribute('custom-element') || script.getAttribute('custom-template');\n    scripts[name] = true;\n  }\n\n  return Object.keys(scripts);\n}\n/**\n * Waits for body to be present then verifies that an extension script is\n * present in head for installation.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} extensionId\n * @return {!Promise<boolean>}\n */\n\n\nfunction isExtensionScriptInNode(ampdoc, extensionId) {\n  return ampdoc.waitForBodyOpen().then(function () {\n    return extensionScriptInNode(ampdoc.getHeadNode(), extensionId);\n  });\n}\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @param {string} extensionId\n * @return {boolean}\n * @private\n */\n\n\nfunction extensionScriptInNode(head, extensionId) {\n  return extensionScriptsInNode(head).includes(extensionId);\n}\n/**\n * Waits for an extension if its script is present\n * @param {!Window} win\n * @param {string} extension\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Promise}\n * @private\n */\n\n\nfunction waitForExtensionIfPresent(win, extension, head) {\n  /**\n   * If there is an extension script wait for it to load before trying\n   * to get the service. Prevents a race condition when everything but\n   * the extensions is in cache. If there is no script then it's either\n   * not present, or the service was defined by a test. In those cases\n   * we don't wait around for an extension that does not exist.\n   */\n  // TODO(jpettitt) investigate registerExtension to short circuit\n  // the dom call in extensionScriptsInNode()\n  if (!extensionScriptInNode(head, extension)) {\n    return Promise.resolve();\n  }\n\n  var extensions = (0, _service.getService)(win, 'extensions');\n  return (\n    /** @type {!Promise<?Object>} */\n    extensions.waitForExtension(win, extension)\n  );\n}\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\n\n\nfunction getElementServicePromiseOrNull(win, id, extension, opt_element) {\n  return dom.waitForBodyOpenPromise(win.document).then(function () {\n    return waitForExtensionIfPresent(win, extension, win.document.head);\n  }).then(function () {\n    // If this service is provided by an element, then we can't depend on\n    // the service (they may not use the element).\n    if (opt_element) {\n      return (0, _service.getServicePromiseOrNull)(win, id);\n    } else if (isElementScheduled(win, extension)) {\n      return (0, _service.getServicePromise)(win, id);\n    }\n\n    return null;\n  });\n}\n\n},{\"./dom\":16,\"./log\":29,\"./service\":33,\"./types\":41}],18:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.reportErrorForWin = reportErrorForWin;\nexports.reportError = reportError;\nexports.cancellation = cancellation;\nexports.isCancellation = isCancellation;\nexports.blockedByConsentError = blockedByConsentError;\nexports.isBlockedByConsent = isBlockedByConsent;\nexports.installErrorReporting = installErrorReporting;\nexports.reportErrorToServerOrViewer = reportErrorToServerOrViewer;\nexports.maybeReportErrorToViewer = maybeReportErrorToViewer;\nexports.errorReportingDataForViewer = errorReportingDataForViewer;\nexports.getErrorReportData = getErrorReportData;\nexports.detectNonAmpJs = detectNonAmpJs;\nexports.resetAccumulatedErrorMessagesForTesting = resetAccumulatedErrorMessagesForTesting;\nexports.detectJsEngineFromStack = detectJsEngineFromStack;\nexports.reportErrorToAnalytics = reportErrorToAnalytics;\n\nvar _ampEvents = require(\"./amp-events\");\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object\");\n\nvar _experiments = require(\"./experiments\");\n\nvar _exponentialBackoff = require(\"./exponential-backoff\");\n\nvar _mode = require(\"./mode\");\n\nvar _eventHelper = require(\"./event-helper\");\n\nvar _url = require(\"./url\");\n\nvar _styleInstaller = require(\"./style-installer\");\n\nvar _string = require(\"./string\");\n\nvar _analytics = require(\"./analytics\");\n\nvar _config = require(\"./config\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @const {string}\n */\nvar CANCELLED = 'CANCELLED';\n/**\n * @const {string}\n */\n\nvar BLOCK_BY_CONSENT = 'BLOCK_BY_CONSENT';\n/**\n * @const {string}\n */\n\nvar ABORTED = 'AbortError';\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\n\nvar NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD = 0.001;\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\n\nvar USER_ERROR_THROTTLE_THRESHOLD = 0.1;\n/**\n * Collects error messages, so they can be included in subsequent reports.\n * That allows identifying errors that might be caused by previous errors.\n */\n\nvar accumulatedErrorMessages = self.__AMP_ERRORS || []; // Use a true global, to avoid multi-module inclusion issues.\n\nself.__AMP_ERRORS = accumulatedErrorMessages;\n/**\n * Pushes element into array, keeping at most the most recent limit elements\n *\n * @param {!Array<T>} array\n * @param {T} element\n * @param {number} limit\n * @template T\n */\n\nfunction pushLimit(array, element, limit) {\n  if (array.length >= limit) {\n    array.splice(0, array.length - limit + 1);\n  }\n\n  array.push(element);\n}\n/**\n * A wrapper around our exponentialBackoff, to lazy initialize it to avoid an\n * un-DCE'able side-effect.\n * @param {function()} work the function to execute after backoff\n * @return {number} the setTimeout id\n */\n\n\nvar _reportingBackoff = function reportingBackoff(work) {\n  // Set reportingBackoff as the lazy-created function. JS Vooodoooo.\n  _reportingBackoff = (0, _exponentialBackoff.exponentialBackoff)(1.5);\n  return _reportingBackoff(work);\n};\n/**\n * Attempts to stringify a value, falling back to String.\n * @param {*} value\n * @return {string}\n */\n\n\nfunction tryJsonStringify(value) {\n  try {\n    // Cast is fine, because we really don't care here. Just trying.\n    return JSON.stringify(\n    /** @type {!JsonObject} */\n    value);\n  } catch (e) {\n    return String(value);\n  }\n}\n/**\n * The true JS engine, as detected by inspecting an Error stack. This should be\n * used with the userAgent to tell definitely. I.e., Chrome on iOS is really a\n * Safari JS engine.\n */\n\n\nvar detectedJsEngine;\n/**\n * @param {!Window} win\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n */\n\nfunction reportErrorForWin(win, error, opt_associatedElement) {\n  reportError(error, opt_associatedElement);\n\n  if (error && !!win && (0, _log.isUserErrorMessage)(error.message) && !(0, _log.isUserErrorEmbed)(error.message)) {\n    reportErrorToAnalytics(\n    /** @type {!Error} */\n    error, win);\n  }\n}\n/**\n * Reports an error. If the error has an \"associatedElement\" property\n * the element is marked with the `i-amphtml-element-error` and displays\n * the message itself. The message is always send to the console.\n * If the error has a \"messageArray\" property, that array is logged.\n * This way one gets the native fidelity of the console for things like\n * elements instead of stringification.\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n * @return {!Error}\n */\n\n\nfunction reportError(error, opt_associatedElement) {\n  try {\n    // Convert error to the expected type.\n    var isValidError;\n\n    if (error) {\n      if (error.message !== undefined) {\n        error = (0, _log.duplicateErrorIfNecessary)(\n        /** @type {!Error} */\n        error);\n        isValidError = true;\n      } else {\n        var origError = error;\n        error = new Error(tryJsonStringify(origError));\n        error.origError = origError;\n      }\n    } else {\n      error = new Error('Unknown error');\n    } // Report if error is not an expected type.\n\n\n    if (!isValidError && (0, _mode.getMode)().localDev && !(0, _mode.getMode)().test) {\n      setTimeout(function () {\n        var rethrow = new Error('_reported_ Error reported incorrectly: ' + error);\n        throw rethrow;\n      });\n    }\n\n    if (error.reported) {\n      return (\n        /** @type {!Error} */\n        error\n      );\n    }\n\n    error.reported = true; // Update element.\n\n    var element = opt_associatedElement || error.associatedElement;\n\n    if (element && element.classList) {\n      element.classList.add('i-amphtml-error');\n\n      if ((0, _mode.getMode)().development) {\n        element.classList.add('i-amphtml-element-error');\n        element.setAttribute('error-message', error.message);\n      }\n    } // Report to console.\n\n\n    if (self.console) {\n      var output = console.error || console.log;\n\n      if (error.messageArray) {\n        output.apply(console, error.messageArray);\n      } else {\n        if (element) {\n          output.call(console, error.message, element);\n        } else if (!(0, _mode.getMode)().minified) {\n          output.call(console, error.stack);\n        } else {\n          output.call(console, error.message);\n        }\n      }\n    }\n\n    if (element && element.dispatchCustomEventForTesting) {\n      element.dispatchCustomEventForTesting(_ampEvents.AmpEvents.ERROR, error.message);\n    } // 'call' to make linter happy. And .call to make compiler happy\n    // that expects some @this.\n\n\n    onError['call'](undefined, undefined, undefined, undefined, undefined, error);\n  } catch (errorReportingError) {\n    setTimeout(function () {\n      throw errorReportingError;\n    });\n  }\n\n  return (\n    /** @type {!Error} */\n    error\n  );\n}\n/**\n * Returns an error for a cancellation of a promise.\n * @return {!Error}\n */\n\n\nfunction cancellation() {\n  return new Error(CANCELLED);\n}\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\n\n\nfunction isCancellation(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n\n  if (typeof errorOrMessage == 'string') {\n    return (0, _string.startsWith)(errorOrMessage, CANCELLED);\n  }\n\n  if (typeof errorOrMessage.message == 'string') {\n    return (0, _string.startsWith)(errorOrMessage.message, CANCELLED);\n  }\n\n  return false;\n}\n/**\n * Returns an error for component blocked by consent\n * @return {!Error}\n */\n\n\nfunction blockedByConsentError() {\n  return new Error(BLOCK_BY_CONSENT);\n}\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\n\n\nfunction isBlockedByConsent(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n\n  if (typeof errorOrMessage == 'string') {\n    return (0, _string.startsWith)(errorOrMessage, BLOCK_BY_CONSENT);\n  }\n\n  if (typeof errorOrMessage.message == 'string') {\n    return (0, _string.startsWith)(errorOrMessage.message, BLOCK_BY_CONSENT);\n  }\n\n  return false;\n}\n/**\n * Install handling of global unhandled exceptions.\n * @param {!Window} win\n */\n\n\nfunction installErrorReporting(win) {\n  win.onerror =\n  /** @type {!Function} */\n  onError;\n  win.addEventListener('unhandledrejection', function (event) {\n    if (event.reason && (event.reason.message === CANCELLED || event.reason.message === BLOCK_BY_CONSENT || event.reason.message === ABORTED)) {\n      event.preventDefault();\n      return;\n    }\n\n    reportError(event.reason || new Error('rejected promise ' + event));\n  });\n}\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @this {!Window|undefined}\n */\n\n\nfunction onError(message, filename, line, col, error) {\n  var _this = this;\n\n  // Make an attempt to unhide the body.\n  if (this && this.document) {\n    (0, _styleInstaller.makeBodyVisibleRecovery)(this.document);\n  }\n\n  if ((0, _mode.getMode)().localDev || (0, _mode.getMode)().development || (0, _mode.getMode)().test) {\n    return;\n  }\n\n  var hasNonAmpJs = false;\n\n  try {\n    hasNonAmpJs = detectNonAmpJs(self);\n  } catch (ignore) {// Ignore errors during error report generation.\n  }\n\n  if (hasNonAmpJs && Math.random() > 0.01) {\n    // Only report 1% of errors on pages with non-AMP JS.\n    // These errors can almost never be acted upon, but spikes such as\n    // due to buggy browser extensions may be helpful to notify authors.\n    return;\n  }\n\n  var data = getErrorReportData(message, filename, line, col, error, hasNonAmpJs);\n\n  if (data) {\n    _reportingBackoff(function () {\n      try {\n        return reportErrorToServerOrViewer(_this,\n        /** @type {!JsonObject} */\n        data).catch(function () {// catch async errors to avoid recursive errors.\n        });\n      } catch (e) {// catch async errors to avoid recursive errors.\n      }\n    });\n  }\n}\n/**\n * Passes the given error data to either server or viewer.\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {Promise<undefined>}\n */\n\n\nfunction reportErrorToServerOrViewer(win, data) {\n  // Report the error to viewer if it has the capability. The data passed\n  // to the viewer is exactly the same as the data passed to the server\n  // below.\n  return maybeReportErrorToViewer(win, data).then(function (reportedErrorToViewer) {\n    if (!reportedErrorToViewer) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('POST', _config.urls.errorReporting, true);\n      xhr.send(JSON.stringify(data));\n    }\n  });\n}\n/**\n * Passes the given error data to the viewer if the following criteria is met:\n * - The viewer is a trusted viewer\n * - The viewer has the `errorReporter` capability\n * - The AMP doc is in single doc mode\n * - The AMP doc is opted-in for error interception (`<html>` tag has the\n *   `report-errors-to-viewer` attribute)\n *\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {!Promise<boolean>} `Promise<True>` if the error was sent to the\n *     viewer, `Promise<False>` otherwise.\n * @visibleForTesting\n */\n\n\nfunction maybeReportErrorToViewer(win, data) {\n  var ampdocService = _services.Services.ampdocServiceFor(win);\n\n  if (!ampdocService.isSingleDoc()) {\n    return Promise.resolve(false);\n  }\n\n  var ampdocSingle = ampdocService.getSingleDoc();\n  var htmlElement = ampdocSingle.getRootNode().documentElement;\n  var docOptedIn = htmlElement.hasAttribute('report-errors-to-viewer');\n\n  if (!docOptedIn) {\n    return Promise.resolve(false);\n  }\n\n  var viewer = _services.Services.viewerForDoc(ampdocSingle);\n\n  if (!viewer.hasCapability('errorReporter')) {\n    return Promise.resolve(false);\n  }\n\n  return viewer.isTrustedViewer().then(function (viewerTrusted) {\n    if (!viewerTrusted) {\n      return false;\n    }\n\n    viewer.sendMessage('error', errorReportingDataForViewer(data));\n    return true;\n  });\n}\n/**\n * Strips down the error reporting data to a minimal set\n * to be sent to the viewer.\n * @param {!JsonObject} errorReportData\n * @return {!JsonObject}\n * @visibleForTesting\n */\n\n\nfunction errorReportingDataForViewer(errorReportData) {\n  return (0, _object.dict)({\n    'm': errorReportData['m'],\n    // message\n    'a': errorReportData['a'],\n    // isUserError\n    's': errorReportData['s'],\n    // error stack\n    'el': errorReportData['el'],\n    // tagName\n    'ex': errorReportData['ex'],\n    // expected error?\n    'v': errorReportData['v'],\n    // runtime\n    'jse': errorReportData['jse'] // detectedJsEngine\n\n  });\n}\n/**\n * @param {string|undefined}  message\n * @param {*|undefined} error\n * @return {string}\n */\n\n\nfunction buildErrorMessage_(message, error) {\n  if (error) {\n    if (error.message) {\n      message = error.message;\n    } else {\n      // This should never be a string, but sometimes it is.\n      message = String(error);\n    }\n  }\n\n  if (!message) {\n    message = 'Unknown error';\n  }\n\n  return message;\n}\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @param {boolean} hasNonAmpJs\n * @return {!JsonObject|undefined} The data to post\n * visibleForTesting\n */\n\n\nfunction getErrorReportData(message, filename, line, col, error, hasNonAmpJs) {\n  message = buildErrorMessage_(message, error); // An \"expected\" error is still an error, i.e. some features are disabled\n  // or not functioning fully because of it. However, it's an expected\n  // error. E.g. as is the case with some browser API missing (storage).\n  // Thus, the error can be classified differently by log aggregators.\n  // The main goal is to monitor that an \"expected\" error doesn't deteriorate\n  // over time. It's impossible to completely eliminate it.\n\n  var expected = !!(error && error.expected);\n\n  if (/_reported_/.test(message)) {\n    return;\n  }\n\n  if (message == CANCELLED) {\n    return;\n  }\n\n  var detachedWindow = !(self && self.window);\n  var throttleBase = Math.random(); // We throttle load errors and generic \"Script error.\" errors\n  // that have no information and thus cannot be acted upon.\n\n  if ((0, _eventHelper.isLoadErrorMessage)(message) || // See https://github.com/ampproject/amphtml/issues/7353\n  // for context.\n  message == 'Script error.' || // Window has become detached, really anything can happen\n  // at this point.\n  detachedWindow) {\n    expected = true;\n\n    if (throttleBase > NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD) {\n      return;\n    }\n  }\n\n  var isUserError = (0, _log.isUserErrorMessage)(message); // Only report a subset of user errors.\n\n  if (isUserError && throttleBase > USER_ERROR_THROTTLE_THRESHOLD) {\n    return;\n  } // This is the App Engine app in\n  // https://github.com/ampproject/error-tracker\n  // It stores error reports via https://cloud.google.com/error-reporting/\n  // for analyzing production issues.\n\n\n  var data =\n  /** @type {!JsonObject} */\n  Object.create(null);\n  data['v'] = (0, _mode.getMode)().rtvVersion;\n  data['noAmp'] = hasNonAmpJs ? '1' : '0';\n  data['m'] = message.replace(_log.USER_ERROR_SENTINEL, '');\n  data['a'] = isUserError ? '1' : '0'; // Errors are tagged with \"ex\" (\"expected\") label to allow loggers to\n  // classify these errors as benchmarks and not exceptions.\n\n  data['ex'] = expected ? '1' : '0';\n  data['dw'] = detachedWindow ? '1' : '0';\n  var runtime = '1p';\n\n  if (self.context && self.context.location) {\n    data['3p'] = '1';\n    runtime = '3p';\n  } else if ((0, _mode.getMode)().runtime) {\n    runtime = (0, _mode.getMode)().runtime;\n  }\n\n  if ((0, _mode.getMode)().singlePassType) {\n    data['spt'] = (0, _mode.getMode)().singlePassType;\n  }\n\n  data['rt'] = runtime; // Add our a4a id if we are inabox\n\n  if (runtime === 'inabox') {\n    data['adid'] = (0, _mode.getMode)().a4aId;\n  } // TODO(erwinm): Remove ca when all systems read `bt` instead of `ca` to\n  // identify js binary type.\n\n\n  data['ca'] = (0, _experiments.isCanary)(self) ? '1' : '0'; // Pass binary type.\n\n  data['bt'] = (0, _experiments.getBinaryType)(self);\n\n  if (self.location.ancestorOrigins && self.location.ancestorOrigins[0]) {\n    data['or'] = self.location.ancestorOrigins[0];\n  }\n\n  if (self.viewerState) {\n    data['vs'] = self.viewerState;\n  } // Is embedded?\n\n\n  if (self.parent && self.parent != self) {\n    data['iem'] = '1';\n  }\n\n  if (self.AMP && self.AMP.viewer) {\n    var resolvedViewerUrl = self.AMP.viewer.getResolvedViewerUrl();\n    var messagingOrigin = self.AMP.viewer.maybeGetMessagingOrigin();\n\n    if (resolvedViewerUrl) {\n      data['rvu'] = resolvedViewerUrl;\n    }\n\n    if (messagingOrigin) {\n      data['mso'] = messagingOrigin;\n    }\n  }\n\n  if (!detectedJsEngine) {\n    detectedJsEngine = detectJsEngineFromStack();\n  }\n\n  data['jse'] = detectedJsEngine;\n  var exps = [];\n  var experiments = (0, _experiments.experimentTogglesOrNull)(self);\n\n  for (var exp in experiments) {\n    var on = experiments[exp];\n    exps.push(exp + \"=\" + (on ? '1' : '0'));\n  }\n\n  data['exps'] = exps.join(',');\n\n  if (error) {\n    var tagName = error.associatedElement ? error.associatedElement.tagName : 'u'; // Unknown\n\n    data['el'] = tagName;\n\n    if (error.args) {\n      data['args'] = JSON.stringify(error.args);\n    }\n\n    if (!isUserError && !error.ignoreStack && error.stack) {\n      data['s'] = error.stack;\n    } // TODO(jridgewell, #18574); Make sure error is always an object.\n\n\n    if (error.message) {\n      error.message += ' _reported_';\n    }\n  } else {\n    data['f'] = filename || '';\n    data['l'] = line || '';\n    data['c'] = col || '';\n  }\n\n  data['r'] = self.document ? self.document.referrer : '';\n  data['ae'] = accumulatedErrorMessages.join(',');\n  data['fr'] = self.location.originalHash || self.location.hash;\n  pushLimit(accumulatedErrorMessages, message, 25);\n  return data;\n}\n/**\n * Returns true if it appears like there is non-AMP JS on the\n * current page.\n * @param {!Window} win\n * @return {boolean}\n * @visibleForTesting\n */\n\n\nfunction detectNonAmpJs(win) {\n  if (!win.document) {\n    return false;\n  }\n\n  var scripts = win.document.querySelectorAll('script[src]');\n\n  for (var i = 0; i < scripts.length; i++) {\n    if (!(0, _url.isProxyOrigin)(scripts[i].src.toLowerCase())) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Resets accumulated error messages for testing\n */\n\n\nfunction resetAccumulatedErrorMessagesForTesting() {\n  accumulatedErrorMessages = [];\n}\n/**\n * Does a series of checks on the stack of an thrown error to determine the\n * JS engine that is currently running. This gives a bit more information than\n * just the UserAgent, since browsers often allow overriding it to \"emulate\"\n * mobile.\n * @return {string}\n * @visibleForTesting\n */\n\n\nfunction detectJsEngineFromStack() {\n  /** @constructor */\n  function Fn() {}\n\n  Fn.prototype.t = function () {\n    throw new Error('message');\n  };\n\n  var object = new Fn();\n\n  try {\n    object.t();\n  } catch (e) {\n    var stack = e.stack; // Safari only mentions the method name.\n\n    if ((0, _string.startsWith)(stack, 't@')) {\n      return 'Safari';\n    } // Firefox mentions \"prototype\".\n\n\n    if (stack.indexOf('.prototype.t@') > -1) {\n      return 'Firefox';\n    } // IE looks like Chrome, but includes a context for the base stack line.\n    // Explicitly, we're looking for something like:\n    // \"    at Global code (https://example.com/app.js:1:200)\" or\n    // \"    at Anonymous function (https://example.com/app.js:1:200)\"\n    // vs Chrome which has:\n    // \"    at https://example.com/app.js:1:200\"\n\n\n    var last = stack.split('\\n').pop();\n\n    if (/\\bat .* \\(/i.test(last)) {\n      return 'IE';\n    } // Finally, chrome includes the error message in the stack.\n\n\n    if ((0, _string.startsWith)(stack, 'Error: message')) {\n      return 'Chrome';\n    }\n  }\n\n  return 'unknown';\n}\n/**\n * @param {!Error} error\n * @param {!Window} win\n */\n\n\nfunction reportErrorToAnalytics(error, win) {\n  // Currently this can only be executed in a single-doc mode. Otherwise,\n  // it's not clear which ampdoc the event would belong too.\n  if (_services.Services.ampdocServiceFor(win).isSingleDoc()) {\n    var vars = (0, _object.dict)({\n      'errorName': error.name,\n      'errorMessage': error.message\n    });\n    (0, _analytics.triggerAnalyticsEvent)(getRootElement_(win), 'user-error', vars);\n  }\n}\n/**\n * @param {!Window} win\n * @return {!Element}\n * @private\n */\n\n\nfunction getRootElement_(win) {\n  var root = _services.Services.ampdocServiceFor(win).getSingleDoc().getRootNode();\n\n  return (0, _log.dev)().assertElement(root.documentElement || root.body || root);\n}\n\n},{\"./amp-events\":8,\"./analytics\":9,\"./config\":13,\"./event-helper\":20,\"./experiments\":21,\"./exponential-backoff\":22,\"./log\":29,\"./mode\":31,\"./services\":35,\"./string\":38,\"./style-installer\":39,\"./url\":45,\"./utils/object\":49}],19:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.internalListenImplementation = internalListenImplementation;\nexports.detectEvtListenerOptsSupport = detectEvtListenerOptsSupport;\nexports.resetEvtListenerOptsSupportForTesting = resetEvtListenerOptsSupportForTesting;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nvar optsSupported;\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\nfunction internalListenImplementation(element, eventType, listener, opt_evtListenerOpts) {\n  var localElement = element;\n  var localListener = listener;\n  /**\n   * @type {?Function}\n   */\n\n  var wrapped;\n\n  wrapped = function wrapped(event) {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n\n      throw e;\n    }\n  };\n\n  var optsSupported = detectEvtListenerOptsSupport();\n  var capture = false;\n\n  if (opt_evtListenerOpts) {\n    capture = opt_evtListenerOpts.capture;\n  }\n\n  localElement.addEventListener(eventType, wrapped, optsSupported ? opt_evtListenerOpts : capture);\n  return function () {\n    if (localElement) {\n      localElement.removeEventListener(eventType, wrapped, optsSupported ? opt_evtListenerOpts : capture);\n    } // Ensure these are GC'd\n\n\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\n\n\nfunction detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    var options = {\n      get capture() {\n        optsSupported = true;\n      }\n\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {// EventListenerOptions are not supported\n  }\n\n  return optsSupported;\n}\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\n\n\nfunction resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n\n},{}],20:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.createCustomEvent = createCustomEvent;\nexports.listen = listen;\nexports.getData = getData;\nexports.getDetail = getDetail;\nexports.listenOnce = listenOnce;\nexports.listenOncePromise = listenOncePromise;\nexports.isLoaded = isLoaded;\nexports.loadPromise = loadPromise;\nexports.isLoadErrorMessage = isLoadErrorMessage;\nexports.MEDIA_LOAD_FAILURE_SRC_PROPERTY = void 0;\n\nvar _eventHelperListen = require(\"./event-helper-listen\");\n\nvar _dom = require(\"./dom\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string}  */\nvar LOAD_FAILURE_PREFIX = 'Failed to load:';\n/** @const {string} */\n\nvar MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\n\nexports.MEDIA_LOAD_FAILURE_SRC_PROPERTY = MEDIA_LOAD_FAILURE_SRC_PROPERTY;\n\nfunction createCustomEvent(win, type, detail, opt_eventInit) {\n  var eventInit =\n  /** @type {!CustomEventInit} */\n  {\n    detail: detail\n  };\n  Object.assign(eventInit, opt_eventInit); // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n\n  if (typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    var e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(type, !!eventInit.bubbles, !!eventInit.cancelable, detail);\n    return e;\n  }\n}\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\n\nfunction listen(element, eventType, listener, opt_evtListenerOpts) {\n  return (0, _eventHelperListen.internalListenImplementation)(element, eventType, listener, opt_evtListenerOpts);\n}\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\n\n\nfunction getData(event) {\n  return (\n    /** @type {?JsonObject|string|undefined} */\n    event.data\n  );\n}\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\n\n\nfunction getDetail(event) {\n  return (\n    /** @type {?JsonObject|string|undefined} */\n    event.detail\n  );\n}\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\n\nfunction listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  var localListener = listener;\n  var unlisten = (0, _eventHelperListen.internalListenImplementation)(element, eventType, function (event) {\n    try {\n      localListener(event);\n    } finally {\n      // Ensure listener is GC'd\n      localListener = null;\n      unlisten();\n    }\n  }, opt_evtListenerOpts);\n  return unlisten;\n}\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\n\n\nfunction listenOncePromise(element, eventType, opt_evtListenerOpts, opt_cancel) {\n  var unlisten;\n  var eventPromise = new Promise(function (resolve) {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n\n  return eventPromise;\n}\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\n\n\nfunction isLoaded(eleOrWindow) {\n  return !!(eleOrWindow.complete || eleOrWindow.readyState == 'complete' || isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0 || // If the passed in thing is a Window, infer loaded state from\n  //\n  eleOrWindow.document && eleOrWindow.document.readyState == 'complete');\n}\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\n\n\nfunction loadPromise(eleOrWindow) {\n  var unlistenLoad;\n  var unlistenError;\n\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n\n  var isMediaElement = isHTMLMediaElement(eleOrWindow);\n\n  if (isMediaElement && eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc) {\n    return Promise.reject(eleOrWindow);\n  }\n\n  var loadingPromise = new Promise(function (resolve, reject) {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    } // Don't unlisten on error for Windows.\n\n\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n\n    var errorTarget = eleOrWindow; // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = (0, _dom.lastChildElement)(eleOrWindow, function (child) {\n        return child.tagName === 'SOURCE';\n      });\n\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n  return loadingPromise.then(function () {\n    if (unlistenError) {\n      unlistenError();\n    }\n\n    return eleOrWindow;\n  }, function () {\n    if (unlistenLoad) {\n      unlistenLoad();\n    }\n\n    failedToLoad(eleOrWindow);\n  });\n}\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\n\n\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] = eleOrWindow.currentSrc || true;\n  } // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n\n\n  var target = eleOrWindow;\n\n  if (target && target.src) {\n    target = target.src;\n  }\n\n  throw (0, _log.user)().createError(LOAD_FAILURE_PREFIX, target);\n}\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\n\n\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\n\n\nfunction isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n\n},{\"./dom\":16,\"./event-helper-listen\":19,\"./log\":29}],21:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isCanary = isCanary;\nexports.getBinaryType = getBinaryType;\nexports.isExperimentOn = isExperimentOn;\nexports.toggleExperiment = toggleExperiment;\nexports.experimentToggles = experimentToggles;\nexports.experimentTogglesOrNull = experimentTogglesOrNull;\nexports.getExperimentTogglesForTesting = getExperimentTogglesForTesting;\nexports.resetExperimentTogglesForTesting = resetExperimentTogglesForTesting;\nexports.randomlySelectUnsetExperiments = randomlySelectUnsetExperiments;\nexports.getExperimentBranch = getExperimentBranch;\nexports.forceExperimentBranch = forceExperimentBranch;\nexports.RANDOM_NUMBER_GENERATORS = exports.ExperimentInfo = void 0;\n\nvar _log = require(\"./log\");\n\nvar _mode = require(\"./mode\");\n\nvar _object = require(\"./utils/object\");\n\nvar _url = require(\"./url\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\n/** @const {string} */\nvar TAG = 'EXPERIMENTS';\n/** @const {string} */\n\nvar LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n/** @const {string} */\n\nvar TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n/**\n * @typedef {{\n *   isTrafficEligible: function(!Window):boolean,\n *   branches: !Array<string>\n * }}\n */\n\nvar ExperimentInfo;\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\n\nexports.ExperimentInfo = ExperimentInfo;\n\nfunction isCanary(win) {\n  return !!(win.AMP_CONFIG && win.AMP_CONFIG.canary);\n}\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\n\n\nfunction getBinaryType(win) {\n  return win.AMP_CONFIG && win.AMP_CONFIG.type ? win.AMP_CONFIG.type : 'unknown';\n}\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\n\n\nfunction isExperimentOn(win, experimentId) {\n  var toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\n\n\nfunction toggleExperiment(win, experimentId, opt_on, opt_transientExperiment) {\n  var currentlyOn = isExperimentOn(win,\n  /*OK*/\n  experimentId);\n  var on = !!(opt_on !== undefined ? opt_on : !currentlyOn);\n\n  if (on != currentlyOn) {\n    var toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      var storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles); // Avoid affecting tests that spy/stub warn().\n\n      if (!(0, _mode.getMode)().test) {\n        (0, _log.user)().warn(TAG, '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental', experimentId, on ? 'enabled' : 'disabled', win.location.hostname);\n      }\n    }\n  }\n\n  return on;\n}\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\n\n\nfunction experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n\n  win[TOGGLES_WINDOW_PROPERTY] = Object.create(null);\n  var toggles = win[TOGGLES_WINDOW_PROPERTY]; // Read the default config of this build.\n\n  if (win.AMP_CONFIG) {\n    for (var experimentId in win.AMP_CONFIG) {\n      var frequency = win.AMP_CONFIG[experimentId];\n\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  } // Read document level override from meta tag.\n\n\n  if (win.AMP_CONFIG && Array.isArray(win.AMP_CONFIG['allow-doc-opt-in']) && win.AMP_CONFIG['allow-doc-opt-in'].length > 0) {\n    var allowed = win.AMP_CONFIG['allow-doc-opt-in'];\n    var meta = win.document.head.querySelector('meta[name=\"amp-experiments-opt-in\"]');\n\n    if (meta) {\n      var optedInExperiments = meta.getAttribute('content').split(',');\n\n      for (var i = 0; i < optedInExperiments.length; i++) {\n        if (allowed.indexOf(optedInExperiments[i]) != -1) {\n          toggles[optedInExperiments[i]] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  if (win.AMP_CONFIG && Array.isArray(win.AMP_CONFIG['allow-url-opt-in']) && win.AMP_CONFIG['allow-url-opt-in'].length > 0) {\n    var _allowed = win.AMP_CONFIG['allow-url-opt-in'];\n    var hash = win.location.originalHash || win.location.hash;\n    var params = (0, _url.parseQueryString)(hash);\n\n    for (var _i = 0; _i < _allowed.length; _i++) {\n      var param = params[\"e-\" + _allowed[_i]];\n\n      if (param == '1') {\n        toggles[_allowed[_i]] = true;\n      }\n\n      if (param == '0') {\n        toggles[_allowed[_i]] = false;\n      }\n    }\n  }\n\n  return toggles;\n}\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {Object<string, boolean>}\n */\n\n\nfunction experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\n\n\nfunction getExperimentToggles(win) {\n  var experimentsString = '';\n\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch (e) {\n    (0, _log.dev)().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n\n  var tokens = experimentsString ? experimentsString.split(/\\s*,\\s*/g) : [];\n  var toggles = Object.create(null);\n\n  for (var i = 0; i < tokens.length; i++) {\n    if (tokens[i].length == 0) {\n      continue;\n    }\n\n    if (tokens[i][0] == '-') {\n      toggles[tokens[i].substr(1)] = false;\n    } else {\n      toggles[tokens[i]] = true;\n    }\n  }\n\n  return toggles;\n}\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\n\n\nfunction saveExperimentToggles(win, toggles) {\n  var experimentIds = [];\n\n  for (var experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n\n  try {\n    if ('localStorage' in win) {\n      win.localStorage.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n    }\n  } catch (e) {\n    (0, _log.user)().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\n\n\nfunction getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\n\n\nfunction resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\n\n\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\n\n\nvar RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng\n};\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\n\nexports.RANDOM_NUMBER_GENERATORS = RANDOM_NUMBER_GENERATORS;\n\nfunction selectRandomItem(arr) {\n  var rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return arr[Math.floor(rn * arr.length)] || null;\n}\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Object<string, !ExperimentInfo>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\n\n\nfunction randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  var selectedExperiments = {};\n\n  for (var experimentName in experiments) {\n    // Skip experimentName if it is not a key of experiments object or if it\n    // has already been populated by some other property.\n    if (!(0, _object.hasOwn)(experiments, experimentName)) {\n      continue;\n    }\n\n    if ((0, _object.hasOwn)(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] = win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (!experiments[experimentName].isTrafficEligible || !experiments[experimentName].isTrafficEligible(win)) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    } // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n\n\n    if (!win.__AMP_EXPERIMENT_BRANCHES[experimentName] && isExperimentOn(win,\n    /*OK*/\n    experimentName)) {\n      var branches = experiments[experimentName].branches;\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(branches);\n      selectedExperiments[experimentName] = win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n\n  return selectedExperiments;\n}\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\n\n\nfunction getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES ? win.__AMP_EXPERIMENT_BRANCHES[experimentName] : null;\n}\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\n\n\nfunction forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n\n},{\"./log\":29,\"./mode\":31,\"./url\":45,\"./utils/object\":49}],22:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.exponentialBackoff = exponentialBackoff;\nexports.exponentialBackoffClock = exponentialBackoffClock;\nexports.getJitter = getJitter;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {number=} opt_base Exponential base. Defaults to 2.\n * @return {function(function()): number} Function that when invoked will\n *     call the passed in function. On every invocation the next\n *     invocation of the passed in function will be exponentially\n *     later. Returned function returns timeout id.\n */\nfunction exponentialBackoff(opt_base) {\n  var getTimeout = exponentialBackoffClock(opt_base);\n  return function (work) {\n    return setTimeout(work, getTimeout());\n  };\n}\n/**\n * @param {number=} opt_base Exponential base. Defaults to 2.\n * @return {function(): number} Function that when invoked will return\n *    a number that exponentially grows per invocation.\n */\n\n\nfunction exponentialBackoffClock(opt_base) {\n  var base = opt_base || 2;\n  var count = 0;\n  return function () {\n    var wait = Math.pow(base, count++);\n    wait += getJitter(wait);\n    return wait * 1000;\n  };\n}\n/**\n * Add jitter to avoid the thundering herd. This can e.g. happen when\n * we poll a backend and it fails for everyone at the same time.\n * We add up to 30% (default) longer or shorter than the given time.\n *\n * @param {number} wait the amount if base milliseconds\n * @param {number=} opt_perc the min/max percentage to add or sutract\n * @return {number}\n */\n\n\nfunction getJitter(wait, opt_perc) {\n  opt_perc = opt_perc || 0.3;\n  var jitter = wait * opt_perc * Math.random();\n\n  if (Math.random() > 0.5) {\n    jitter *= -1;\n  }\n\n  return jitter;\n}\n\n},{}],23:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.createFormDataWrapper = createFormDataWrapper;\nexports.isFormDataWrapper = isFormDataWrapper;\nexports.PolyfillFormDataWrapper = void 0;\n\nvar _services = require(\"./services\");\n\nvar _form = require(\"./form\");\n\nvar _dom = require(\"./dom\");\n\nvar _object = require(\"./utils/object\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * Create a form data wrapper. The wrapper is necessary to provide a common\n * API for FormData objects on all browsers. For example, not all browsers\n * support the FormData#entries or FormData#delete functions.\n *\n * @param {!Window} win\n * @param {!HTMLFormElement=} opt_form\n * @return {!FormDataWrapperInterface}\n */\nfunction createFormDataWrapper(win, opt_form) {\n  var platform = _services.Services.platformFor(win);\n\n  if (platform.isIos() && platform.getMajorVersion() == 11) {\n    return new Ios11NativeFormDataWrapper(opt_form);\n  } else if (FormData.prototype.entries && FormData.prototype.delete) {\n    return new NativeFormDataWrapper(opt_form);\n  } else {\n    return new PolyfillFormDataWrapper(opt_form);\n  }\n}\n/**\n * Check if the given object is a FormDataWrapper instance\n * @param {*} o\n * @return {boolean} True if the object is a FormDataWrapper instance.\n */\n\n\nfunction isFormDataWrapper(o) {\n  // instanceof doesn't work as expected, so we detect with duck-typing.\n  return !!o && typeof o.getFormData == 'function';\n}\n/**\n * A polyfill wrapper for a `FormData` object.\n *\n * If there's no native `FormData#entries`, chances are there are no native\n * methods to read the content of the `FormData` after construction, so the\n * only way to implement `entries` in this class is to capture the fields in\n * the form passed to the constructor (and the arguments passed to the\n * `append` method).\n *\n * For more details on this, see http://mdn.io/FormData.\n *\n * @implements {FormDataWrapperInterface}\n * @visibleForTesting\n */\n\n\nvar PolyfillFormDataWrapper =\n/*#__PURE__*/\nfunction () {\n  /** @override */\n  function PolyfillFormDataWrapper(opt_form) {\n    if (opt_form === void 0) {\n      opt_form = undefined;\n    }\n\n    /** @private @const {!Object<string, !Array<string>>} */\n    this.fieldValues_ = opt_form ? (0, _form.getFormAsObject)(opt_form) : (0, _object.map)();\n  }\n  /**\n   * @param {string} name\n   * @param {string|!File} value\n   * @param {string=} opt_filename\n   * @override\n   */\n\n\n  var _proto = PolyfillFormDataWrapper.prototype;\n\n  _proto.append = function append(name, value, opt_filename) {\n    // Coercion to string is required to match\n    // the native FormData.append behavior\n    var nameString = String(name);\n    this.fieldValues_[nameString] = this.fieldValues_[nameString] || [];\n    this.fieldValues_[nameString].push(String(value));\n  }\n  /** @override */\n  ;\n\n  _proto.delete = function _delete(name) {\n    delete this.fieldValues_[name];\n  }\n  /** @override */\n  ;\n\n  _proto.entries = function entries() {\n    var _this = this;\n\n    var fieldEntries = [];\n    Object.keys(this.fieldValues_).forEach(function (name) {\n      var values = _this.fieldValues_[name];\n      values.forEach(function (value) {\n        return fieldEntries.push([name, value]);\n      });\n    }); // Generator functions are not supported by the current Babel configuration,\n    // so we must manually implement the iterator interface.\n\n    var nextIndex = 0;\n    return (\n      /** @type {!Iterator<!Array<string>>} */\n      {\n        next: function next() {\n          return nextIndex < fieldEntries.length ? {\n            value: fieldEntries[nextIndex++],\n            done: false\n          } : {\n            value: undefined,\n            done: true\n          };\n        }\n      }\n    );\n  }\n  /** @override */\n  ;\n\n  _proto.getFormData = function getFormData() {\n    var _this2 = this;\n\n    var formData = new FormData();\n    Object.keys(this.fieldValues_).forEach(function (name) {\n      var values = _this2.fieldValues_[name];\n      values.forEach(function (value) {\n        return formData.append(name, value);\n      });\n    });\n    return formData;\n  };\n\n  return PolyfillFormDataWrapper;\n}();\n/**\n * Wrap the native `FormData` implementation.\n *\n * NOTE: This differs from the standard `FormData` constructor. This constructor\n * includes a submit button if it was used to submit the `opt_form`, where\n * the native `FormData` constructor does not include the submit button used to\n * submit the form.\n * {@link https://xhr.spec.whatwg.org/#dom-formdata}\n * @implements {FormDataWrapperInterface}\n */\n\n\nexports.PolyfillFormDataWrapper = PolyfillFormDataWrapper;\n\nvar NativeFormDataWrapper =\n/*#__PURE__*/\nfunction () {\n  /** @override */\n  function NativeFormDataWrapper(opt_form) {\n    /** @private @const {!FormData} */\n    this.formData_ = new FormData(opt_form);\n    this.maybeIncludeSubmitButton_(opt_form);\n  }\n  /**\n   * If a submit button is focused (because it was used to submit the form),\n   * or was the first submit button present, add its name and value to the\n   * `FormData`, since publishers expect the submit button to be present.\n   * @param {!HTMLFormElement=} opt_form\n   * @private\n   */\n\n\n  var _proto2 = NativeFormDataWrapper.prototype;\n\n  _proto2.maybeIncludeSubmitButton_ = function maybeIncludeSubmitButton_(opt_form) {\n    // If a form is not passed to the constructor,\n    // we are not in a submitting code path.\n    if (!opt_form) {\n      return;\n    }\n\n    var button = (0, _form.getSubmitButtonUsed)(opt_form);\n\n    if (button && button.name) {\n      this.append(button.name, button.value);\n    }\n  }\n  /**\n   * @param {string} name\n   * @param {string|!File} value\n   * @param {string=} opt_filename\n   * @override\n   */\n  ;\n\n  _proto2.append = function append(name, value, opt_filename) {\n    this.formData_.append(name, value);\n  }\n  /** @override */\n  ;\n\n  _proto2.delete = function _delete(name) {\n    this.formData_.delete(name);\n  }\n  /** @override */\n  ;\n\n  _proto2.entries = function entries() {\n    return this.formData_.entries();\n  }\n  /** @override */\n  ;\n\n  _proto2.getFormData = function getFormData() {\n    return this.formData_;\n  };\n\n  return NativeFormDataWrapper;\n}();\n/**\n * iOS 11 has a bug when submitting empty file inputs.\n * This works around the bug by replacing the empty files with Blob objects.\n */\n\n\nvar Ios11NativeFormDataWrapper =\n/*#__PURE__*/\nfunction (_NativeFormDataWrappe) {\n  _inheritsLoose(Ios11NativeFormDataWrapper, _NativeFormDataWrappe);\n\n  /** @override */\n  function Ios11NativeFormDataWrapper(opt_form) {\n    var _this3;\n\n    _this3 = _NativeFormDataWrappe.call(this, opt_form) || this;\n\n    if (opt_form) {\n      (0, _dom.iterateCursor)(opt_form.elements, function (input) {\n        if (input.type == 'file' && input.files.length == 0) {\n          _this3.formData_.delete(input.name);\n\n          _this3.formData_.append(input.name, new Blob([]), '');\n        }\n      });\n    }\n\n    return _this3;\n  }\n  /**\n   * @param {string} name\n   * @param {string|!File} value\n   * @param {string=} opt_filename\n   * @override\n   */\n\n\n  var _proto3 = Ios11NativeFormDataWrapper.prototype;\n\n  _proto3.append = function append(name, value, opt_filename) {\n    // Safari 11 breaks on submitting empty File values.\n    if (value && typeof value == 'object' && isEmptyFile(value)) {\n      this.formData_.append(name, new Blob([]), opt_filename || '');\n    } else {\n      this.formData_.append(name, value);\n    }\n  };\n\n  return Ios11NativeFormDataWrapper;\n}(NativeFormDataWrapper);\n/**\n * A wrapper for a native `FormData` object that allows the retrieval of entries\n * in the form data after construction even on browsers that don't natively\n * support `FormData.prototype.entries`.\n *\n * @interface\n * Subclassing `FormData` doesn't work in this case as the transpiler\n *     generates code that calls the super constructor directly using\n *     `Function.prototype.call`. WebKit (Safari) doesn't allow this and\n *     enforces that constructors be called with the `new` operator.\n */\n\n\nvar FormDataWrapperInterface =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new wrapper for a `FormData` object.\n   *\n   * If there's no native `FormData#entries`, chances are there are no native\n   * methods to read the content of the `FormData` after construction, so the\n   * only way to implement `entries` in this class is to capture the fields in\n   * the form passed to the constructor (and the arguments passed to the\n   * `append` method).\n   *\n   * This constructor should also add the submitter element as defined in the\n   * HTML spec for Form Submission Algorithm, but is not defined by the standard\n   * when using the `FormData` constructor directly.\n   *\n   * For more details on this, see http://mdn.io/FormData.\n   *\n   * @param {!HTMLFormElement=} opt_form An HTML `<form>` element — when\n   *     specified, the `FormData` object will be populated with the form's\n   *     current keys/values using the name property of each element for the\n   *     keys and their submitted value for the values. It will also encode file\n   *     input content.\n   */\n  function FormDataWrapperInterface(opt_form) {}\n  /**\n   * Appends a new value onto an existing key inside a `FormData` object, or\n   * adds the key if it does not already exist.\n   *\n   * Appending a `File` object is not yet supported and the `filename`\n   * parameter is ignored for this wrapper.\n   *\n   * For more details on this, see http://mdn.io/FormData/append.\n   *\n   * TODO(cvializ): Update file support\n   *\n   * @param {string} unusedName The name of the field whose data is contained in\n   *     `value`.\n   * @param {string|!File} unusedValue The field's value.\n   * @param {string=} opt_filename The filename to use if the value is a file.\n   */\n\n\n  var _proto4 = FormDataWrapperInterface.prototype;\n\n  _proto4.append = function append(unusedName, unusedValue, opt_filename) {}\n  /**\n   * Remove the given value from the FormData.\n   *\n   * For more details on this, see http://mdn.io/FormData/delete.\n   *\n   * @param {string} unusedName The name of the field to remove from the FormData.\n   */\n  ;\n\n  _proto4.delete = function _delete(unusedName) {}\n  /**\n   * Returns an iterator of all key/value pairs contained in this object.\n   *\n   * For more details on this, see http://mdn.io/FormData/entries.\n   *\n   * @return {!Iterator<!Array<string|!File>>}\n   */\n  ;\n\n  _proto4.entries = function entries() {}\n  /**\n   * Returns the wrapped native `FormData` object.\n   *\n   * @return {!FormData}\n   */\n  ;\n\n  _proto4.getFormData = function getFormData() {};\n\n  return FormDataWrapperInterface;\n}();\n/**\n * Check if the given file is an empty file, which is the result of submitting\n * an empty `<input type=\"file\">`. These cause errors when submitting forms\n * in Safari 11.\n *\n * @param {!File} file\n * @return {boolean}\n */\n\n\nfunction isEmptyFile(file) {\n  return file.name == '' && file.size == 0;\n}\n\n},{\"./dom\":16,\"./form\":24,\"./services\":35,\"./utils/object\":49}],24:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.formOrNullForElement = formOrNullForElement;\nexports.setFormForElement = setFormForElement;\nexports.getFormAsObject = getFormAsObject;\nexports.getSubmitButtonUsed = getSubmitButtonUsed;\nexports.isDisabled = isDisabled;\nexports.isFieldDefault = isFieldDefault;\nexports.isFieldEmpty = isFieldEmpty;\n\nvar _dom = require(\"./dom\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nvar FORM_PROP_ = '__AMP_FORM';\n/**\n * @param {!Element} element\n * @return {../extensions/amp-form/0.1/amp-form.AmpForm}\n */\n\nfunction formOrNullForElement(element) {\n  return element[FORM_PROP_] || null;\n}\n/**\n * @param {!Element} element\n * @param {!../extensions/amp-form/0.1/amp-form.AmpForm} form\n */\n\n\nfunction setFormForElement(element, form) {\n  element[FORM_PROP_] = form;\n}\n/**\n * Returns form data in the passed-in form as an object.\n * Includes focused submit buttons.\n * @param {!HTMLFormElement} form\n * @return {!JsonObject}\n */\n\n\nfunction getFormAsObject(form) {\n  var elements = form.elements;\n  var data =\n  /** @type {!JsonObject} */\n  {}; // <button> is handled separately\n\n  var submittableTagsRegex = /^(?:input|select|textarea)$/i; // type=submit is handled separately\n\n  var unsubmittableTypesRegex = /^(?:submit|button|image|file|reset)$/i;\n  var checkableType = /^(?:checkbox|radio)$/i;\n\n  var _loop = function _loop(i) {\n    var input = elements[i];\n    var checked = input.checked,\n        name = input.name,\n        multiple = input.multiple,\n        options = input.options,\n        tagName = input.tagName,\n        type = input.type,\n        value = input.value;\n\n    if (!name || isDisabled(input) || !submittableTagsRegex.test(tagName) || unsubmittableTypesRegex.test(type) || checkableType.test(type) && !checked) {\n      return \"continue\";\n    }\n\n    if (data[name] === undefined) {\n      data[name] = [];\n    }\n\n    if (multiple) {\n      (0, _dom.iterateCursor)(options, function (option) {\n        if (option.selected) {\n          data[name].push(option.value);\n        }\n      });\n      return \"continue\";\n    }\n\n    data[name].push(value);\n  };\n\n  for (var i = 0; i < elements.length; i++) {\n    var _ret = _loop(i);\n\n    if (_ret === \"continue\") continue;\n  }\n\n  var submitButton = getSubmitButtonUsed(form);\n\n  if (submitButton && submitButton.name) {\n    var name = submitButton.name;\n\n    if (data[name] === undefined) {\n      data[name] = [];\n    }\n\n    data[submitButton.name].push(submitButton.value);\n  } // Wait until the end to remove the empty values, since\n  // we don't know when evaluating any one input whether\n  // there will be or have already been inputs with the same names.\n  // e.g. We want to remove empty <select multiple name=x> but\n  // there could also be an <input name=x>. At the end we know if an empty name\n  // can be deleted.\n\n\n  Object.keys(data).forEach(function (key) {\n    if (data[key].length == 0) {\n      delete data[key];\n    }\n  });\n  return data;\n}\n/**\n * Gets the submit button used to submit the form.\n * This searches through the form elements to find:\n * 1. The first submit button element OR\n * 2. a focused submit button, indicating it was specifically used to submit.\n * 3. null, if neither of the above is found.\n * @param {!HTMLFormElement} form\n * @return {?Element}\n */\n\n\nfunction getSubmitButtonUsed(form) {\n  var elements = form.elements;\n  var length = elements.length;\n  var activeElement = form.ownerDocument.activeElement;\n  var firstSubmitButton = null;\n\n  for (var i = 0; i < length; i++) {\n    var element = elements[i];\n\n    if (!isSubmitButton(element)) {\n      continue;\n    }\n\n    if (!firstSubmitButton) {\n      firstSubmitButton = element;\n    }\n\n    if (activeElement == element) {\n      return activeElement;\n    }\n  }\n\n  return firstSubmitButton;\n}\n/**\n * True if the given button can submit a form.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isSubmitButton(element) {\n  var tagName = element.tagName,\n      type = element.type;\n  return tagName == 'BUTTON' || type == 'submit';\n}\n/**\n * Checks if a field is disabled.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isDisabled(element) {\n  if (element.disabled) {\n    return true;\n  }\n\n  var ancestors = (0, _dom.ancestorElementsByTag)(element, 'fieldset');\n\n  for (var i = 0; i < ancestors.length; i++) {\n    if (ancestors[i].disabled) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Checks if a form field is in its default state.\n * @param {!Element} field\n * @return {boolean}\n */\n\n\nfunction isFieldDefault(field) {\n  switch (field.type) {\n    case 'select-multiple':\n    case 'select-one':\n      var options = field.options;\n\n      for (var j = 0; j < options.length; j++) {\n        if (options[j].selected !== options[j].defaultSelected) {\n          return false;\n        }\n      }\n\n      break;\n\n    case 'checkbox':\n    case 'radio':\n      return field.checked === field.defaultChecked;\n\n    default:\n      return field.value === field.defaultValue;\n  }\n\n  return true;\n}\n/**\n * Checks if a form field is empty. It expects a form field element,\n * i.e. `<input>`, `<textarea>`, or `<select>`.\n * @param {!Element} field\n * @throws {Error}\n * @return {boolean}\n */\n\n\nfunction isFieldEmpty(field) {\n  switch (field.tagName) {\n    case 'INPUT':\n      if (field.type == 'checkbox' || field.type == 'radio') {\n        return !field.checked;\n      } else {\n        return !field.value;\n      }\n\n    case 'TEXTAREA':\n      return !field.value;\n\n    case 'SELECT':\n      // dropdown menu has at least one option always selected\n      return false;\n\n    default:\n      throw new Error(\"isFieldEmpty: \" + field.tagName + \" is not a supported field element.\");\n  }\n}\n\n},{\"./dom\":16}],25:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isAmp4Email = isAmp4Email;\nexports.isAmphtml = isAmphtml;\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Checks that the document is of an AMP format type.\n * @param {!Array<string>} formats\n * @param {!Document} doc\n * @return {boolean}\n */\nfunction isAmpFormatType(formats, doc) {\n  var html = doc.documentElement;\n  var isFormatType = formats.some(function (format) {\n    return html.hasAttribute(format);\n  });\n  return isFormatType;\n}\n/**\n * @param {!Document} doc\n * @return {boolean}\n */\n\n\nfunction isAmp4Email(doc) {\n  return isAmpFormatType(['⚡4email', 'amp4email'], doc);\n}\n/**\n * @param {!Document} doc\n * @return {boolean}\n */\n\n\nfunction isAmphtml(doc) {\n  return isAmpFormatType(['⚡', 'amp'], doc);\n}\n\n},{}],26:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.internalRuntimeVersion = internalRuntimeVersion;\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nfunction internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n\n},{}],27:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.recreateNonProtoObject = recreateNonProtoObject;\nexports.getValueForExpr = getValueForExpr;\nexports.parseJson = parseJson;\nexports.tryParseJson = tryParseJson;\nexports.getChildJsonConfig = getChildJsonConfig;\nexports.deepEquals = deepEquals;\nexports.jsonConfiguration = jsonConfiguration;\nexports.jsonLiteral = jsonLiteral;\nexports.includeJsonLiteral = includeJsonLiteral;\n\nvar _dom = require(\"./dom\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {*} should be string|number|boolean|null\n */\nvar JSONScalarDef;\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {*} should be !Object<string, ?JSONValueDef>\n */\n\nvar JSONObjectDef;\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {*} should be !Array<?JSONValueDef>\n */\n\nvar JSONArrayDef;\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {*} should be !JSONScalarDef|!JSONObjectDef|!JSONArrayDef\n */\n\nvar JSONValueDef;\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\n\nfunction recreateNonProtoObject(obj) {\n  var copy = Object.create(null);\n\n  for (var k in obj) {\n    if (!hasOwnProperty(obj, k)) {\n      continue;\n    }\n\n    var v = obj[k];\n    copy[k] = (0, _types.isObject)(v) ? recreateNonProtoObject(v) : v;\n  }\n\n  return (\n    /** @type {!JsonObject} */\n    copy\n  );\n}\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\n\n\nfunction getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  } // Otherwise, navigate via properties.\n\n\n  var parts = expr.split('.');\n  var value = obj;\n\n  for (var i = 0; i < parts.length; i++) {\n    var part = parts[i];\n\n    if (part && value && value[part] !== undefined && hasOwnProperty(value, part)) {\n      value = value[part];\n      continue;\n    }\n\n    value = undefined;\n    break;\n  }\n\n  return value;\n}\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {*} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\n\n\nfunction parseJson(json) {\n  return (\n    /** @type {?JsonObject} */\n    JSON.parse(\n    /** @type {string} */\n    json)\n  );\n}\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {*} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\n\n\nfunction tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    if (opt_onFailed) {\n      opt_onFailed(e);\n    }\n\n    return null;\n  }\n}\n/**\n * Helper method to get the json config from an element <script> tag\n * @param {!Element} element\n * @return {?JsonObject}\n * @throws {!Error} If element does not have exactly one <script> child\n * with type=\"application/json\", or if the <script> contents are not valid JSON.\n */\n\n\nfunction getChildJsonConfig(element) {\n  var scripts = (0, _dom.childElementsByTag)(element, 'script');\n  var n = scripts.length;\n\n  if (n !== 1) {\n    throw new Error(\"Found \" + scripts.length + \" <script> children. Expected 1.\");\n  }\n\n  var script = scripts[0];\n\n  if (!(0, _dom.isJsonScriptTag)(script)) {\n    throw new Error('<script> child must have type=\"application/json\"');\n  }\n\n  try {\n    return parseJson(script.textContent);\n  } catch (unusedError) {\n    throw new Error('Failed to parse <script> contents. Is it valid JSON?');\n  }\n}\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\n\n\nfunction deepEquals(a, b, depth) {\n  if (depth === void 0) {\n    depth = 5;\n  }\n\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n\n\n  var queue = [{\n    a: a,\n    b: b,\n    depth: depth\n  }];\n\n  while (queue.length > 0) {\n    var _queue$shift = queue.shift(),\n        _a = _queue$shift.a,\n        _b = _queue$shift.b,\n        _depth = _queue$shift.depth; // Only check deep equality if depth > 0.\n\n\n    if (_depth > 0) {\n      if (typeof _a !== typeof _b) {\n        return false;\n      } else if (Array.isArray(_a) && Array.isArray(_b)) {\n        if (_a.length !== _b.length) {\n          return false;\n        }\n\n        for (var i = 0; i < _a.length; i++) {\n          queue.push({\n            a: _a[i],\n            b: _b[i],\n            depth: _depth - 1\n          });\n        }\n\n        continue;\n      } else if (_a && _b && typeof _a === 'object' && typeof _b === 'object') {\n        var keysA = Object.keys(\n        /** @type {!Object} */\n        _a);\n        var keysB = Object.keys(\n        /** @type {!Object} */\n        _b);\n\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n\n        for (var _i = 0; _i < keysA.length; _i++) {\n          var k = keysA[_i];\n          queue.push({\n            a: _a[k],\n            b: _b[k],\n            depth: _depth - 1\n          });\n        }\n\n        continue;\n      }\n    } // If we get here, then depth == 0 or (a, b) are primitives.\n\n\n    if (_a !== _b) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @param {*} obj\n * @param {string} key\n * @return {boolean}\n */\n\n\nfunction hasOwnProperty(obj, key) {\n  if (obj == null || typeof obj != 'object') {\n    return false;\n  }\n\n  return Object.prototype.hasOwnProperty.call(\n  /** @type {!Object} */\n  obj, key);\n}\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\n\n\nfunction jsonConfiguration(obj) {\n  return (\n    /** @type {!JsonObject} */\n    obj\n  );\n}\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {!Object|!Array|string|number|boolean|null} value\n * @return {!InternalJsonLiteralTypeDef}\n */\n\n\nfunction jsonLiteral(value) {\n  return (\n    /** @type {!InternalJsonLiteralTypeDef} */\n    value\n  );\n}\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\n\n\nfunction includeJsonLiteral(value) {\n  return value;\n}\n\n},{\"./dom\":16,\"./types\":41}],28:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.parseLayout = parseLayout;\nexports.getLayoutClass = getLayoutClass;\nexports.isLayoutSizeDefined = isLayoutSizeDefined;\nexports.isLayoutSizeFixed = isLayoutSizeFixed;\nexports.isInternalElement = isInternalElement;\nexports.parseLength = parseLength;\nexports.assertLength = assertLength;\nexports.assertLengthOrPercent = assertLengthOrPercent;\nexports.getLengthUnits = getLengthUnits;\nexports.getLengthNumeral = getLengthNumeral;\nexports.hasNaturalDimensions = hasNaturalDimensions;\nexports.getNaturalDimensions = getNaturalDimensions;\nexports.isLoadingAllowed = isLoadingAllowed;\nexports.isIframeVideoPlayerComponent = isIframeVideoPlayerComponent;\nexports.applyStaticLayout = applyStaticLayout;\nexports.LOADING_ELEMENTS_ = exports.naturalDimensions_ = exports.LengthDef = exports.LayoutPriority = exports.Layout = void 0;\n\nvar _log = require(\"./log\");\n\nvar _staticTemplate = require(\"./static-template\");\n\nvar _types = require(\"./types\");\n\nvar _style = require(\"./style\");\n\nvar _string = require(\"./string\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n      <i-amphtml-sizer class=\\\"i-amphtml-sizer\\\">\\n        <img alt=\\\"\\\" role=\\\"presentation\\\" aria-hidden=\\\"true\\\"\\n             class=\\\"i-amphtml-intrinsic-sizer\\\" />\\n      </i-amphtml-sizer>\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) { if (!raw) { raw = strings.slice(0); } strings.raw = raw; return strings; }\n\n/**\n * @enum {string}\n */\nvar Layout = {\n  NODISPLAY: 'nodisplay',\n  FIXED: 'fixed',\n  FIXED_HEIGHT: 'fixed-height',\n  RESPONSIVE: 'responsive',\n  CONTAINER: 'container',\n  FILL: 'fill',\n  FLEX_ITEM: 'flex-item',\n  FLUID: 'fluid',\n  INTRINSIC: 'intrinsic'\n};\n/**\n * Layout priorities to use with BaseElement#getLayoutPriority() and\n * BaseElement#updateLayoutPriority().\n * @enum {number}\n */\n\nexports.Layout = Layout;\nvar LayoutPriority = {\n  CONTENT: 0,\n  METADATA: 1,\n  ADS: 2,\n  BACKGROUND: 3\n};\n/**\n * CSS Length type. E.g. \"1px\" or \"20vh\".\n * @typedef {string}\n */\n\nexports.LayoutPriority = LayoutPriority;\nvar LengthDef;\n/**\n * @typedef {{\n *   width: string,\n *   height: string\n * }}\n */\n\nexports.LengthDef = LengthDef;\nvar DimensionsDef;\n/**\n * The set of elements with natural dimensions, that is, elements\n * which have a known dimension either based on their value specified here,\n * or, if the value is null, a dimension specific to the browser.\n * `hasNaturalDimensions` checks for membership in this set.\n * `getNaturalDimensions` determines the dimensions for an element in the\n *    set and caches it.\n * @type {!Object<string, ?DimensionsDef>}\n * @private  Visible for testing only!\n */\n\nvar naturalDimensions_ = {\n  'AMP-PIXEL': {\n    width: '0px',\n    height: '0px'\n  },\n  'AMP-ANALYTICS': {\n    width: '1px',\n    height: '1px'\n  },\n  // TODO(dvoytenko): audio should have width:auto.\n  'AMP-AUDIO': null,\n  'AMP-SOCIAL-SHARE': {\n    width: '60px',\n    height: '44px'\n  }\n};\n/**\n * Elements that the progress can be shown for. This set has to be externalized\n * since the element's implementation may not be downloaded yet.\n * This list does not include video players which are found via regex later.\n * @enum {boolean}\n * @private  Visible for testing only!\n */\n\nexports.naturalDimensions_ = naturalDimensions_;\nvar LOADING_ELEMENTS_ = {\n  'AMP-AD': true,\n  'AMP-ANIM': true,\n  'AMP-EMBED': true,\n  'AMP-FACEBOOK': true,\n  'AMP-FACEBOOK-COMMENTS': true,\n  'AMP-FACEBOOK-PAGE': true,\n  'AMP-GOOGLE-DOCUMENT-EMBED': true,\n  'AMP-IFRAME': true,\n  'AMP-IMG': true,\n  'AMP-INSTAGRAM': true,\n  'AMP-LIST': true,\n  'AMP-PINTEREST': true,\n  'AMP-PLAYBUZZ': true,\n  'AMP-TWITTER': true\n};\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they are listed individually.\n * @private @const {!RegExp}\n */\n\nexports.LOADING_ELEMENTS_ = LOADING_ELEMENTS_;\nvar videoPlayerTagNameRe = /^amp\\-(video|.+player)|AMP-BRIGHTCOVE|AMP-DAILYMOTION|AMP-YOUTUBE|AMP-VIMEO|AMP-IMA-VIDEO/i;\n/**\n * @param {string} s\n * @return {Layout|undefined} Returns undefined in case of failure to parse\n *   the layout string.\n */\n\nfunction parseLayout(s) {\n  for (var k in Layout) {\n    if (Layout[k] == s) {\n      return Layout[k];\n    }\n  }\n\n  return undefined;\n}\n/**\n * @param {!Layout} layout\n * @return {string}\n */\n\n\nfunction getLayoutClass(layout) {\n  return 'i-amphtml-layout-' + layout;\n}\n/**\n * Whether an element with this layout inherently defines the size.\n * @param {!Layout} layout\n * @return {boolean}\n */\n\n\nfunction isLayoutSizeDefined(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT || layout == Layout.RESPONSIVE || layout == Layout.FILL || layout == Layout.FLEX_ITEM || layout == Layout.FLUID || layout == Layout.INTRINSIC;\n}\n/**\n * Whether an element with this layout has a fixed dimension.\n * @param {!Layout} layout\n * @return {boolean}\n */\n\n\nfunction isLayoutSizeFixed(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT;\n}\n/**\n * Whether the tag is an internal (service) AMP tag.\n * @param {!Node|string} tag\n * @return {boolean}\n */\n\n\nfunction isInternalElement(tag) {\n  var tagName = typeof tag == 'string' ? tag : tag.tagName;\n  return tagName && (0, _string.startsWith)(tagName.toLowerCase(), 'i-');\n}\n/**\n * Parses the CSS length value. If no units specified, the assumed value is\n * \"px\". Returns undefined in case of parsing error.\n * @param {string|undefined|null} s\n * @return {!LengthDef|undefined}\n */\n\n\nfunction parseLength(s) {\n  if (typeof s == 'number') {\n    return s + 'px';\n  }\n\n  if (!s) {\n    return undefined;\n  }\n\n  if (!/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)?$/.test(s)) {\n    return undefined;\n  }\n\n  if (/^\\d+(\\.\\d+)?$/.test(s)) {\n    return s + 'px';\n  }\n\n  return s;\n}\n/**\n * Asserts that the supplied value is a non-percent CSS Length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction assertLength(length) {\n  (0, _log.userAssert)(/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)$/.test(length), 'Invalid length value: %s', length);\n  return (\n    /** @type {!LengthDef} */\n    length\n  );\n}\n/**\n * Asserts that the supplied value is a CSS Length value\n * (including percent unit).\n * @param {!LengthDef|string} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction assertLengthOrPercent(length) {\n  (0, _log.userAssert)(/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|%)$/.test(length), 'Invalid length or percent value: %s', length);\n  return length;\n}\n/**\n * Returns units from the CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {string}\n */\n\n\nfunction getLengthUnits(length) {\n  assertLength(length);\n  (0, _log.dev)().assertString(length);\n  var m = (0, _log.userAssert)(length.match(/[a-z]+/i), 'Failed to read units from %s', length);\n  return m[0];\n}\n/**\n * Returns the numeric value of a CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {number|undefined}\n */\n\n\nfunction getLengthNumeral(length) {\n  var res = parseFloat(length);\n  return (0, _types.isFiniteNumber)(res) ? res : undefined;\n}\n/**\n * Determines whether the tagName is a known element that has natural dimensions\n * in our runtime or the browser.\n * @param {string} tagName The element tag name.\n * @return {boolean}\n */\n\n\nfunction hasNaturalDimensions(tagName) {\n  tagName = tagName.toUpperCase();\n  return naturalDimensions_[tagName] !== undefined;\n}\n/**\n * Determines the default dimensions for an element which could vary across\n * different browser implementations, like <audio> for instance.\n * This operation can only be completed for an element whitelisted by\n * `hasNaturalDimensions`.\n * @param {!Element} element\n * @return {DimensionsDef}\n */\n\n\nfunction getNaturalDimensions(element) {\n  var tagName = element.tagName.toUpperCase();\n  (0, _log.devAssert)(naturalDimensions_[tagName] !== undefined);\n\n  if (!naturalDimensions_[tagName]) {\n    var doc = element.ownerDocument;\n    var naturalTagName = tagName.replace(/^AMP\\-/, '');\n    var temp = doc.createElement(naturalTagName); // For audio, should no-op elsewhere.\n\n    temp.controls = true;\n    (0, _style.setStyles)(temp, {\n      position: 'absolute',\n      visibility: 'hidden'\n    });\n    doc.body.appendChild(temp);\n    naturalDimensions_[tagName] = {\n      width: (temp.\n      /*OK*/\n      offsetWidth || 1) + 'px',\n      height: (temp.\n      /*OK*/\n      offsetHeight || 1) + 'px'\n    };\n    doc.body.removeChild(temp);\n  }\n\n  return (\n    /** @type {DimensionsDef} */\n    naturalDimensions_[tagName]\n  );\n}\n/**\n * Whether the loading can be shown for the specified elemeent. This set has\n * to be externalized since the element's implementation may not be\n * downloaded yet.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isLoadingAllowed(element) {\n  var tagName = element.tagName.toUpperCase();\n  return LOADING_ELEMENTS_[tagName] || isIframeVideoPlayerComponent(tagName);\n}\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they're present in the LOADING_ELEMENTS_ whitelist.\n * @param {string} tagName\n * @return {boolean}\n */\n\n\nfunction isIframeVideoPlayerComponent(tagName) {\n  if (tagName == 'AMP-VIDEO') {\n    return false;\n  }\n\n  return videoPlayerTagNameRe.test(tagName);\n}\n/**\n * Applies layout to the element. Visible for testing only.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this method is used for server-side rendering (SSR) and\n * any changes made to it must be made in coordination with caches that\n * implement SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @param {!Element} element\n * @return {!Layout}\n */\n\n\nfunction applyStaticLayout(element) {\n  // Check if the layout has already been done by server-side rendering or\n  // client-side rendering and the element was cloned. The document may be\n  // visible to the user if the boilerplate was removed so please take care in\n  // making changes here.\n  var completedLayoutAttr = element.getAttribute('i-amphtml-layout');\n\n  if (completedLayoutAttr) {\n    var _layout =\n    /** @type {!Layout} */\n    (0, _log.devAssert)(parseLayout(completedLayoutAttr));\n\n    if ((_layout == Layout.RESPONSIVE || _layout == Layout.INTRINSIC) && element.firstElementChild) {\n      // Find sizer, but assume that it might not have been parsed yet.\n      element.sizerElement = element.querySelector('i-amphtml-sizer') || undefined;\n    } else if (_layout == Layout.NODISPLAY) {\n      (0, _style.toggle)(element, false); // TODO(jridgewell): Temporary hack while SSR still adds an inline\n      // `display: none`\n\n      element['style']['display'] = '';\n    }\n\n    return _layout;\n  } // If the layout was already done by server-side rendering (SSR), then the\n  // code below will not run. Any changes below will necessitate a change to SSR\n  // and must be coordinated with caches that implement SSR. See bit.ly/amp-ssr.\n  // Parse layout from the element.\n\n\n  var layoutAttr = element.getAttribute('layout');\n  var widthAttr = element.getAttribute('width');\n  var heightAttr = element.getAttribute('height');\n  var sizesAttr = element.getAttribute('sizes');\n  var heightsAttr = element.getAttribute('heights'); // Input layout attributes.\n\n  var inputLayout = layoutAttr ? parseLayout(layoutAttr) : null;\n  (0, _log.userAssert)(inputLayout !== undefined, 'Unknown layout: %s', layoutAttr);\n  /** @const {string|null|undefined} */\n\n  var inputWidth = widthAttr && widthAttr != 'auto' ? parseLength(widthAttr) : widthAttr;\n  (0, _log.userAssert)(inputWidth !== undefined, 'Invalid width value: %s', widthAttr);\n  /** @const {string|null|undefined} */\n\n  var inputHeight = heightAttr && heightAttr != 'fluid' ? parseLength(heightAttr) : heightAttr;\n  (0, _log.userAssert)(inputHeight !== undefined, 'Invalid height value: %s', heightAttr); // Effective layout attributes. These are effectively constants.\n\n  var width;\n  var height;\n  var layout; // Calculate effective width and height.\n\n  if ((!inputLayout || inputLayout == Layout.FIXED || inputLayout == Layout.FIXED_HEIGHT) && (!inputWidth || !inputHeight) && hasNaturalDimensions(element.tagName)) {\n    // Default width and height: handle elements that do not specify a\n    // width/height and are defined to have natural browser dimensions.\n    var dimensions = getNaturalDimensions(element);\n    width = inputWidth || inputLayout == Layout.FIXED_HEIGHT ? inputWidth : dimensions.width;\n    height = inputHeight || dimensions.height;\n  } else {\n    width = inputWidth;\n    height = inputHeight;\n  } // Calculate effective layout.\n\n\n  if (inputLayout) {\n    layout = inputLayout;\n  } else if (!width && !height) {\n    layout = Layout.CONTAINER;\n  } else if (height == 'fluid') {\n    layout = Layout.FLUID;\n  } else if (height && (!width || width == 'auto')) {\n    layout = Layout.FIXED_HEIGHT;\n  } else if (height && width && (sizesAttr || heightsAttr)) {\n    layout = Layout.RESPONSIVE;\n  } else {\n    layout = Layout.FIXED;\n  } // Verify layout attributes.\n\n\n  if (layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT || layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    (0, _log.userAssert)(height, 'Expected height to be available: %s', heightAttr);\n  }\n\n  if (layout == Layout.FIXED_HEIGHT) {\n    (0, _log.userAssert)(!width || width == 'auto', 'Expected width to be either absent or equal \"auto\" ' + 'for fixed-height layout: %s', widthAttr);\n  }\n\n  if (layout == Layout.FIXED || layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    (0, _log.userAssert)(width && width != 'auto', 'Expected width to be available and not equal to \"auto\": %s', widthAttr);\n  }\n\n  if (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    (0, _log.userAssert)(getLengthUnits(width) == getLengthUnits(height), 'Length units should be the same for width and height: %s, %s', widthAttr, heightAttr);\n  } else {\n    (0, _log.userAssert)(heightsAttr === null, 'Unexpected \"heights\" attribute for none-responsive layout');\n  } // Apply UI.\n\n\n  element.classList.add(getLayoutClass(layout));\n\n  if (isLayoutSizeDefined(layout)) {\n    element.classList.add('i-amphtml-layout-size-defined');\n  }\n\n  if (layout == Layout.NODISPLAY) {\n    // CSS defines layout=nodisplay automatically with `display:none`. Thus\n    // no additional styling is needed.\n    (0, _style.toggle)(element, false); // TODO(jridgewell): Temporary hack while SSR still adds an inline\n    // `display: none`\n\n    element['style']['display'] = '';\n  } else if (layout == Layout.FIXED) {\n    (0, _style.setStyles)(element, {\n      width: (0, _log.dev)().assertString(width),\n      height: (0, _log.dev)().assertString(height)\n    });\n  } else if (layout == Layout.FIXED_HEIGHT) {\n    (0, _style.setStyle)(element, 'height', (0, _log.dev)().assertString(height));\n  } else if (layout == Layout.RESPONSIVE) {\n    var sizer = element.ownerDocument.createElement('i-amphtml-sizer');\n    (0, _style.setStyles)(sizer, {\n      paddingTop: getLengthNumeral(height) / getLengthNumeral(width) * 100 + '%'\n    });\n    element.insertBefore(sizer, element.firstChild);\n    element.sizerElement = sizer;\n  } else if (layout == Layout.INTRINSIC) {\n    // Intrinsic uses an svg inside the sizer element rather than the padding\n    // trick Note a naked svg won't work becasue other thing expect the\n    // i-amphtml-sizer element\n    var _sizer = (0, _staticTemplate.htmlFor)(element)(_templateObject());\n\n    var intrinsicSizer = _sizer.firstElementChild;\n    intrinsicSizer.setAttribute('src', \"data:image/svg+xml;charset=utf-8,<svg height=\\\"\" + height + \"\\\" width=\\\"\" + width + \"\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\"/>\");\n    element.insertBefore(_sizer, element.firstChild);\n    element.sizerElement = _sizer;\n  } else if (layout == Layout.FILL) {// Do nothing.\n  } else if (layout == Layout.CONTAINER) {// Do nothing. Elements themselves will check whether the supplied\n    // layout value is acceptable. In particular container is only OK\n    // sometimes.\n  } else if (layout == Layout.FLEX_ITEM) {\n    // Set height and width to a flex item if they exist.\n    // The size set to a flex item could be overridden by `display: flex` later.\n    if (width) {\n      (0, _style.setStyle)(element, 'width', width);\n    }\n\n    if (height) {\n      (0, _style.setStyle)(element, 'height', height);\n    }\n  } else if (layout == Layout.FLUID) {\n    element.classList.add('i-amphtml-layout-awaiting-size');\n\n    if (width) {\n      (0, _style.setStyle)(element, 'width', width);\n    }\n\n    (0, _style.setStyle)(element, 'height', 0);\n  } // Mark the element as having completed static layout, in case it is cloned\n  // in the future.\n\n\n  element.setAttribute('i-amphtml-layout', layout);\n  return layout;\n}\n\n},{\"./log\":29,\"./static-template\":37,\"./string\":38,\"./style\":40,\"./types\":41}],29:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isUserErrorMessage = isUserErrorMessage;\nexports.isUserErrorEmbed = isUserErrorEmbed;\nexports.setReportError = setReportError;\nexports.overrideLogLevel = overrideLogLevel;\nexports.duplicateErrorIfNecessary = duplicateErrorIfNecessary;\nexports.createErrorVargs = createErrorVargs;\nexports.rethrowAsync = rethrowAsync;\nexports.initLogConstructor = initLogConstructor;\nexports.resetLogConstructorForTesting = resetLogConstructorForTesting;\nexports.user = user;\nexports.dev = dev;\nexports.isFromEmbed = isFromEmbed;\nexports.devAssert = devAssert;\nexports.userAssert = userAssert;\nexports.Log = exports.LogLevel = exports.USER_ERROR_EMBED_SENTINEL = exports.USER_ERROR_SENTINEL = void 0;\n\nvar _mode = require(\"./mode\");\n\nvar _modeObject = require(\"./mode-object\");\n\nvar _internalVersion = require(\"./internal-version\");\n\nvar _types = require(\"./types\");\n\nvar _function = require(\"./utils/function\");\n\nvar _config = require(\"./config\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar noop = function noop() {};\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\n\n\nvar USER_ERROR_SENTINEL = \"\\u200B\\u200B\\u200B\";\n/**\n * Four zero width space.\n *\n * @const {string}\n */\n\nexports.USER_ERROR_SENTINEL = USER_ERROR_SENTINEL;\nvar USER_ERROR_EMBED_SENTINEL = \"\\u200B\\u200B\\u200B\\u200B\";\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\n\nexports.USER_ERROR_EMBED_SENTINEL = USER_ERROR_EMBED_SENTINEL;\n\nfunction isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\n\n\nfunction isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n/**\n * @enum {number}\n * @private Visible for testing only.\n */\n\n\nvar LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4\n};\n/**\n * Sets reportError function. Called from error.js to break cyclic\n * dependency.\n * @param {function(*, !Element=)|undefined} fn\n */\n\nexports.LogLevel = LogLevel;\n\nfunction setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\n\n\nvar levelOverride_ = undefined;\n/**\n * @param {!LogLevel} level\n */\n\nfunction overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\n\n\nvar messageUrlRtv = function messageUrlRtv() {\n  return \"01\" + (0, _internalVersion.internalRuntimeVersion)();\n};\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\n\n\nvar externalMessageUrl = function externalMessageUrl(id, interpolatedParts) {\n  return interpolatedParts.reduce(function (prefix, arg) {\n    return prefix + \"&s[]=\" + messageArgToEncodedComponent(arg);\n  }, \"https://log.amp.dev/?v=\" + messageUrlRtv() + \"&id=\" + encodeURIComponent(id));\n};\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\n\n\nvar externalMessagesSimpleTableUrl = function externalMessagesSimpleTableUrl() {\n  return _config.urls.cdn + \"/rtv/\" + messageUrlRtv() + \"/log-messages.simple.json\";\n};\n/**\n * @param {*} arg\n * @return {string}\n */\n\n\nvar messageArgToEncodedComponent = function messageArgToEncodedComponent(arg) {\n  return encodeURIComponent(String(elementStringOrPassthru(arg)));\n};\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don’t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\n\n\nvar Log =\n/*#__PURE__*/\nfunction () {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(!./mode.ModeDef):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  function Log(win, levelFunc, opt_suffix) {\n    var _this = this;\n\n    if (opt_suffix === void 0) {\n      opt_suffix = '';\n    }\n\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = (0, _mode.getMode)().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n    /** @private @const {function(!./mode.ModeDef):!LogLevel} */\n\n    this.levelFunc_ = levelFunc;\n    /** @private @const {!LogLevel} */\n\n    this.level_ = this.defaultLevel_();\n    /** @private @const {string} */\n\n    this.suffix_ = opt_suffix;\n    /** @private {?JsonObject} */\n\n    this.messages_ = null;\n    this.fetchExternalMessagesOnce_ = (0, _function.once)(function () {\n      win.fetch(externalMessagesSimpleTableUrl()).then(function (response) {\n        return response.json();\n      }, noop).then(function (opt_messages) {\n        if (opt_messages) {\n          _this.messages_ =\n          /** @type {!JsonObject} */\n          opt_messages;\n        }\n      });\n    });\n  }\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n\n\n  var _proto = Log.prototype;\n\n  _proto.getLevel_ = function getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  ;\n\n  _proto.defaultLevel_ = function defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    } // Logging has been explicitly disabled.\n\n\n    if ((0, _mode.getMode)().log == '0') {\n      return LogLevel.OFF;\n    } // Logging is enabled for tests directly.\n\n\n    if ((0, _mode.getMode)().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    } // LocalDev by default allows INFO level, unless overriden by `#log`.\n\n\n    if ((0, _mode.getMode)().localDev && !(0, _mode.getMode)().log) {\n      return LogLevel.INFO;\n    } // Delegate to the specific resolver.\n\n\n    return this.levelFunc_((0, _modeObject.getModeObject)());\n  }\n  /**\n   * @param {string} tag\n   * @param {string} level\n   * @param {!Array} messages\n   */\n  ;\n\n  _proto.msg_ = function msg_(tag, level, messages) {\n    if (this.getLevel_() != LogLevel.OFF) {\n      var fn = this.win.console.log;\n\n      if (level == 'ERROR') {\n        fn = this.win.console.error || fn;\n      } else if (level == 'INFO') {\n        fn = this.win.console.info || fn;\n      } else if (level == 'WARN') {\n        fn = this.win.console.warn || fn;\n      }\n\n      var args = this.maybeExpandMessageArgs_(messages); // Prefix console message with \"[tag]\".\n\n      var prefix = \"[\" + tag + \"]\";\n\n      if (typeof args[0] === 'string') {\n        // Prepend string to avoid breaking string substitutions e.g. %s.\n        args[0] = prefix + ' ' + args[0];\n      } else {\n        args.unshift(prefix);\n      }\n\n      fn.apply(this.win.console, args);\n    }\n  }\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isEnabled = function isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.fine = function fine(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.FINE) {\n      this.msg_(tag, 'FINE', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.info = function info(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.INFO) {\n      this.msg_(tag, 'INFO', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.warn = function warn(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.WARN) {\n      this.msg_(tag, 'WARN', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} var_args\n   * @return {!Error|undefined}\n   * @private\n   */\n  ;\n\n  _proto.error_ = function error_(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.ERROR) {\n      this.msg_(tag, 'ERROR', Array.prototype.slice.call(arguments, 1));\n    } else {\n      var error = createErrorVargs.apply(null, Array.prototype.slice.call(arguments, 1));\n      this.prepareError_(error);\n      return error;\n    }\n  }\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.error = function error(tag, var_args) {\n    var error = this.error_.apply(this, arguments);\n\n    if (error) {\n      error.name = tag || error.name; // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.expectedError = function expectedError(unusedTag, var_args) {\n    var error = this.error_.apply(this, arguments);\n\n    if (error) {\n      error.expected = true; // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  ;\n\n  _proto.createError = function createError(var_args) {\n    var error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  ;\n\n  _proto.createExpectedError = function createExpectedError(var_args) {\n    var error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * NOTE: for an explanation of the tempate R implementation see\n   * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {R} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is `null` or `undefined`.\n   * @template T\n   * @template R :=\n   *     mapunion(T, (V) =>\n   *         cond(eq(V, 'null'),\n   *             none(),\n   *             cond(eq(V, 'undefined'),\n   *                 none(),\n   *                 V)))\n   *  =:\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assert = function assert(shouldBeTrueish, opt_message, var_args) {\n    var firstElement;\n\n    if ((0, _types.isArray)(opt_message)) {\n      return this.assert.apply(this, [shouldBeTrueish].concat(this.expandMessageArgs_(\n      /** @type {!Array} */\n      opt_message)));\n    }\n\n    if (!shouldBeTrueish) {\n      var message = opt_message || 'Assertion failed';\n      var splitMessage = message.split('%s');\n      var first = splitMessage.shift();\n      var formatted = first;\n      var messageArray = [];\n      var i = 2;\n      pushIfNonEmpty(messageArray, first);\n\n      while (splitMessage.length > 0) {\n        var nextConstant = splitMessage.shift();\n        var val = arguments[i++];\n\n        if (val && val.tagName) {\n          firstElement = val;\n        }\n\n        messageArray.push(val);\n        pushIfNonEmpty(messageArray, nextConstant.trim());\n        formatted += stringOrElementString(val) + nextConstant;\n      }\n\n      var e = new Error(formatted);\n      e.fromAssert = true;\n      e.associatedElement = firstElement;\n      e.messageArray = messageArray;\n      this.prepareError_(e); // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(e);\n\n      throw e;\n    }\n\n    return shouldBeTrueish;\n  }\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertElement = function assertElement(shouldBeElement, opt_message) {\n    var shouldBeTrueish = shouldBeElement && shouldBeElement.nodeType == 1;\n    this.assertType_(shouldBeElement, shouldBeTrueish, 'Element expected', opt_message);\n    return (\n      /** @type {!Element} */\n      shouldBeElement\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertString = function assertString(shouldBeString, opt_message) {\n    this.assertType_(shouldBeString, typeof shouldBeString == 'string', 'String expected', opt_message);\n    return (\n      /** @type {string} */\n      shouldBeString\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertNumber = function assertNumber(shouldBeNumber, opt_message) {\n    this.assertType_(shouldBeNumber, typeof shouldBeNumber == 'number', 'Number expected', opt_message);\n    return (\n      /** @type {number} */\n      shouldBeNumber\n    );\n  }\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertArray = function assertArray(shouldBeArray, opt_message) {\n    this.assertType_(shouldBeArray, (0, _types.isArray)(shouldBeArray), 'Array expected', opt_message);\n    return (\n      /** @type {!Array} */\n      shouldBeArray\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertBoolean = function assertBoolean(shouldBeBoolean, opt_message) {\n    this.assertType_(shouldBeBoolean, !!shouldBeBoolean === shouldBeBoolean, 'Boolean expected', opt_message);\n    return (\n      /** @type {boolean} */\n      shouldBeBoolean\n    );\n  }\n  /**\n   * Asserts and returns the enum value. If the enum doesn't contain such a\n   * value, the error is thrown.\n   *\n   * @param {!Object<T>} enumObj\n   * @param {string} s\n   * @param {string=} opt_enumName\n   * @return {T}\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertEnumValue = function assertEnumValue(enumObj, s, opt_enumName) {\n    if ((0, _types.isEnumValue)(enumObj, s)) {\n      return s;\n    }\n\n    this.assert(false, 'Unknown %s value: \"%s\"', opt_enumName || 'enum', s);\n  }\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  ;\n\n  _proto.prepareError_ = function prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  ;\n\n  _proto.maybeExpandMessageArgs_ = function maybeExpandMessageArgs_(args) {\n    if ((0, _types.isArray)(args[0])) {\n      return this.expandMessageArgs_(\n      /** @type {!Array} */\n      args[0]);\n    }\n\n    return args;\n  }\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  ;\n\n  _proto.expandMessageArgs_ = function expandMessageArgs_(parts) {\n    // First value should exist.\n    var id = parts.shift(); // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n\n    if ((0, _mode.getMode)(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n\n    return [\"More info at \" + externalMessageUrl(id, parts)];\n  }\n  /**\n   * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n   *\n   * It understands array-based \"id\"-contracted messages.\n   *\n   * Otherwise creates a sprintf syntax string containing the optional message or the\n   * default. An interpolation token is added at the end to include the `subject`.\n   * @param {*} subject\n   * @param {*} assertion\n   * @param {string} defaultMessage\n   * @param {!Array|string=} opt_message\n   * @private\n   */\n  ;\n\n  _proto.assertType_ = function assertType_(subject, assertion, defaultMessage, opt_message) {\n    if ((0, _types.isArray)(opt_message)) {\n      this.assert(assertion, opt_message.concat(subject));\n    } else {\n      this.assert(assertion, (opt_message || defaultMessage) + \": %s\", subject);\n    }\n  };\n\n  return Log;\n}();\n/**\n * @param {string|!Element} val\n * @return {string}\n */\n\n\nexports.Log = Log;\n\nvar stringOrElementString = function stringOrElementString(val) {\n  return (\n    /** @type {string} */\n    elementStringOrPassthru(val)\n  );\n};\n/**\n * @param {*} val\n * @return {*}\n */\n\n\nfunction elementStringOrPassthru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (val && val.nodeType == 1) {\n    return val.tagName.toLowerCase() + (val.id ? '#' + val.id : '');\n  }\n\n  return val;\n}\n/**\n * @param {!Array} array\n * @param {*} val\n */\n\n\nfunction pushIfNonEmpty(array, val) {\n  if (val != '') {\n    array.push(val);\n  }\n}\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\n\n\nfunction duplicateErrorIfNecessary(error) {\n  var messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n\n  if (messageProperty && messageProperty.writable) {\n    return error;\n  }\n\n  var message = error.message,\n      stack = error.stack;\n  var e = new Error(message); // Copy all the extraneous things we attach.\n\n  for (var prop in error) {\n    e[prop] = error[prop];\n  } // Ensure these are copied.\n\n\n  e.stack = stack;\n  return e;\n}\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\n\n\nfunction createErrorVargs(var_args) {\n  var error = null;\n  var message = '';\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n\n  return error;\n}\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\n\n\nfunction rethrowAsync(var_args) {\n  var error = createErrorVargs.apply(null, arguments);\n  setTimeout(function () {\n    // reportError is installed globally per window in the entry point.\n    self.__AMP_REPORT_ERROR(error);\n\n    throw error;\n  });\n}\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\n\n\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null\n};\nvar logs = self.__AMP_LOG;\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?Function}\n */\n\nvar logConstructor = null;\n/**\n * Initializes log contructor.\n */\n\nfunction initLogConstructor() {\n  logConstructor = Log; // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n\n  dev();\n  user();\n}\n/**\n * Resets log contructor for testing.\n */\n\n\nfunction resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\n\n\nfunction user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n\n    return logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL);\n  }\n}\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\n\n\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n\n  return new logConstructor(self, function (mode) {\n    var logNum = parseInt(mode.log, 10);\n\n    if (mode.development || logNum >= 1) {\n      return LogLevel.FINE;\n    }\n\n    return LogLevel.WARN;\n  }, suffix);\n}\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\n\n\nfunction dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n\n  return logs.dev = new logConstructor(self, function (mode) {\n    var logNum = parseInt(mode.log, 10);\n\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n\n    return LogLevel.OFF;\n  });\n}\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\n\n\nfunction isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n\n  return opt_element.ownerDocument.defaultView != win;\n}\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction devAssert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9) {\n  if ((0, _mode.getMode)().minified) {\n    return shouldBeTrueish;\n  }\n\n  return dev().\n  /*Orig call*/\n  assert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9);\n}\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction userAssert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9) {\n  return user().\n  /*Orig call*/\n  assert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9);\n}\n\n},{\"./config\":13,\"./internal-version\":26,\"./mode\":31,\"./mode-object\":30,\"./types\":41,\"./utils/function\":47}],30:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getModeObject = getModeObject;\n\nvar _mode = require(\"./mode\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides info about the current app. This return value may be cached and\n * passed around as it will always be DCE'd.\n * @param {?Window=} opt_win\n * @return {!./mode.ModeDef}\n */\nfunction getModeObject(opt_win) {\n  return {\n    localDev: (0, _mode.getMode)(opt_win).localDev,\n    development: (0, _mode.getMode)(opt_win).development,\n    filter: (0, _mode.getMode)(opt_win).filter,\n    minified: (0, _mode.getMode)(opt_win).minified,\n    lite: (0, _mode.getMode)(opt_win).lite,\n    test: (0, _mode.getMode)(opt_win).test,\n    log: (0, _mode.getMode)(opt_win).log,\n    version: (0, _mode.getMode)(opt_win).version,\n    rtvVersion: (0, _mode.getMode)(opt_win).rtvVersion,\n    singlePassType: (0, _mode.getMode)(opt_win).singlePassType\n  };\n}\n\n},{\"./mode\":31}],31:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getMode = getMode;\nexports.getRtvVersionForTesting = getRtvVersionForTesting;\nexports.resetRtvVersionForTesting = resetRtvVersionForTesting;\nexports.ModeDef = void 0;\n\nvar _internalVersion = require(\"./internal-version\");\n\nvar _urlParseQueryString = require(\"./url-parse-query-string\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   filter: (string|undefined),\n *   minified: boolean,\n *   lite: boolean,\n *   test: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   singlePassType: (string|undefined)\n * }}\n */\nvar ModeDef;\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\n\nexports.ModeDef = ModeDef;\nvar rtvVersion = '';\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\n\nfunction getMode(opt_win) {\n  var win = opt_win || self;\n\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n\n  return win.__AMP_MODE = getMode_(win);\n}\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\n\n\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  var AMP_CONFIG = self.AMP_CONFIG || {}; // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_DEV is only replaced when `gulp dist` is called without the\n  // --fortesting flag.\n\n  var IS_DEV = true;\n  var IS_MINIFIED = false;\n  var localDevEnabled = !!AMP_CONFIG.localDev;\n  var runningTests = !!AMP_CONFIG.test || IS_DEV && !!(win.__AMP_TEST || win.__karma__);\n  var runningTestsOnIe = win.__karma__ && win.__karma__.config.amp.testOnIe;\n  var isLocalDev = IS_DEV && (localDevEnabled || runningTests);\n  var hashQuery = (0, _urlParseQueryString.parseQueryString_)( // location.originalHash is set by the viewer when it removes the fragment\n  // from the URL.\n  win.location.originalHash || win.location.hash);\n  var singlePassType = AMP_CONFIG.spt;\n  var searchQuery = (0, _urlParseQueryString.parseQueryString_)(win.location.search);\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win, isLocalDev);\n  } // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `gulp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n\n\n  return {\n    localDev: isLocalDev,\n    // Triggers validation or enable pub level logging. Validation can be\n    // bypassed via #validate=0.\n    // Note that AMP_DEV_MODE flag is used for testing purposes.\n    // Use Array.indexOf instead of Array.includes because of #24219\n    development: !!(['1', 'actions', 'amp', 'amp4ads', 'amp4email'].indexOf(hashQuery['development']) >= 0 || win.AMP_DEV_MODE),\n    examiner: hashQuery['development'] == '2',\n    // Allows filtering validation errors by error category. For the\n    // available categories, see ErrorCategory in validator/validator.proto.\n    filter: hashQuery['filter'],\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    // amp-user-location override\n    userLocationOverride: hashQuery['amp-user-location'],\n    minified: IS_MINIFIED,\n    // Whether document is in an amp-lite viewer. It signal that the user\n    // would prefer to use less bandwidth.\n    lite: searchQuery['amp_lite'] != undefined,\n    test: runningTests,\n    testIe: runningTestsOnIe,\n    log: hashQuery['log'],\n    version: (0, _internalVersion.internalRuntimeVersion)(),\n    rtvVersion: rtvVersion,\n    singlePassType: singlePassType\n  };\n}\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n */\n\n\nfunction getRtvVersion(win, isLocalDev) {\n  // If it's local dev then we won't actually have a full version so\n  // just use the version.\n  if (isLocalDev) {\n    return (0, _internalVersion.internalRuntimeVersion)();\n  }\n\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  } // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n\n\n  return \"01\" + (0, _internalVersion.internalRuntimeVersion)();\n}\n/**\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n * @visibleForTesting\n */\n\n\nfunction getRtvVersionForTesting(win, isLocalDev) {\n  return getRtvVersion(win, isLocalDev);\n}\n/** @visibleForTesting */\n\n\nfunction resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n\n},{\"./internal-version\":26,\"./url-parse-query-string\":42}],32:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.waitForServices = waitForServices;\nexports.hasRenderDelayingServices = hasRenderDelayingServices;\nexports.isRenderDelayingService = isRenderDelayingService;\nexports.includedServices = includedServices;\nexports.RenderDelayingService = void 0;\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\nvar _service = require(\"./service\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A map of services that delay rendering. The key is the name of the service\n * and the value is a DOM query which is used to check if the service is needed\n * in the current document.\n * Do not add a service unless absolutely necessary.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this list is used for server-side rendering (SSR) and any\n * changes made to it must be made in coordination with caches that implement\n * SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @const {!Object<string, string>}\n */\nvar SERVICES = {\n  'amp-dynamic-css-classes': '[custom-element=amp-dynamic-css-classes]',\n  'variant': 'amp-experiment',\n  'amp-story-render': 'amp-story[standalone]'\n};\n/**\n * Base class for render delaying services.\n * This should be extended to ensure the service\n * is properly handled\n *\n * @interface\n */\n\nvar RenderDelayingService =\n/*#__PURE__*/\nfunction () {\n  function RenderDelayingService() {}\n\n  var _proto = RenderDelayingService.prototype;\n\n  /**\n   * Function to return a promise for when\n   * it is finished delaying render, and is ready.\n   * NOTE: This should simply return Promise.resolve,\n   * if your service does not need to perform any logic\n   * after being registered.\n   * @return {!Promise}\n   */\n  _proto.whenReady = function whenReady() {};\n\n  return RenderDelayingService;\n}();\n/**\n * Maximum milliseconds to wait for all extensions to load before erroring.\n * @const\n */\n\n\nexports.RenderDelayingService = RenderDelayingService;\nvar LOAD_TIMEOUT = 3000;\n/**\n * Detects any render delaying services that are required on the page, and\n * returns a promise with a timeout.\n * @param {!Window} win\n * @return {!Promise<!Array<*>>} resolves to an Array that has the same length\n *     as the detected render delaying services\n */\n\nfunction waitForServices(win) {\n  var promises = includedServices(win).map(function (serviceId) {\n    var serviceReadyPromise = (0, _service.getServicePromise)(win, serviceId).then(function (service) {\n      if (service && isRenderDelayingService(service)) {\n        return service.whenReady().then(function () {\n          return service;\n        });\n      }\n\n      return service;\n    });\n    return _services.Services.timerFor(win).timeoutPromise(LOAD_TIMEOUT, serviceReadyPromise, \"Render timeout waiting for service \" + serviceId + \" to be ready.\");\n  });\n  return Promise.all(promises);\n}\n/**\n * Returns true if the page has a render delaying service.\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nfunction hasRenderDelayingServices(win) {\n  return includedServices(win).length > 0;\n}\n/**\n * Function to determine if the passed\n * Object is a Render Delaying Service\n * @param {!Object} service\n * @return {boolean}\n */\n\n\nfunction isRenderDelayingService(service) {\n  var maybeRenderDelayingService =\n  /** @type {!RenderDelayingService}*/\n  service;\n  return typeof maybeRenderDelayingService.whenReady == 'function';\n}\n/**\n * Detects which, if any, render-delaying extensions are included on the page.\n * @param {!Window} win\n * @return {!Array<string>}\n */\n\n\nfunction includedServices(win) {\n  /** @const {!Document} */\n  var doc = win.document;\n  (0, _log.devAssert)(doc.body);\n  return Object.keys(SERVICES).filter(function (service) {\n    return doc.querySelector(SERVICES[service]);\n  });\n}\n\n},{\"./log\":29,\"./service\":33,\"./services\":35}],33:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getExistingServiceForDocInEmbedScope = getExistingServiceForDocInEmbedScope;\nexports.installServiceInEmbedScope = installServiceInEmbedScope;\nexports.registerServiceBuilder = registerServiceBuilder;\nexports.registerServiceBuilderForDoc = registerServiceBuilderForDoc;\nexports.rejectServicePromiseForDoc = rejectServicePromiseForDoc;\nexports.getService = getService;\nexports.getServicePromise = getServicePromise;\nexports.getExistingServiceOrNull = getExistingServiceOrNull;\nexports.getServicePromiseOrNull = getServicePromiseOrNull;\nexports.getServiceForDoc = getServiceForDoc;\nexports.getServicePromiseForDoc = getServicePromiseForDoc;\nexports.getServicePromiseOrNullForDoc = getServicePromiseOrNullForDoc;\nexports.setParentWindow = setParentWindow;\nexports.getParentWindow = getParentWindow;\nexports.getTopWindow = getTopWindow;\nexports.getParentWindowFrameElement = getParentWindowFrameElement;\nexports.getAmpdoc = getAmpdoc;\nexports.isDisposable = isDisposable;\nexports.assertDisposable = assertDisposable;\nexports.disposeServicesForDoc = disposeServicesForDoc;\nexports.disposeServicesForEmbed = disposeServicesForEmbed;\nexports.installServiceInEmbedIfEmbeddable = installServiceInEmbedIfEmbeddable;\nexports.adoptServiceForEmbedDoc = adoptServiceForEmbedDoc;\nexports.resetServiceForTesting = resetServiceForTesting;\nexports.EmbeddableService = exports.Disposable = void 0;\n\nvar _promise = require(\"./utils/promise\");\n\nvar _log = require(\"./log\");\n\nvar _experiments = require(\"./experiments\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (?function(new:Object, !Window)|\n *          ?function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nvar ServiceHolderDef;\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\n\nvar Disposable =\n/*#__PURE__*/\nfunction () {\n  function Disposable() {}\n\n  var _proto = Disposable.prototype;\n\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  _proto.dispose = function dispose() {};\n\n  return Disposable;\n}();\n/**\n * Services must implement this interface to be embeddable in FIEs.\n * @interface\n */\n\n\nexports.Disposable = Disposable;\n\nvar EmbeddableService =\n/*#__PURE__*/\nfunction () {\n  function EmbeddableService() {}\n\n  /**\n   * Installs a new instance of the service in the given FIE window.\n   * @param {!Window} unusedEmbedWin\n   * @param {!./service/ampdoc-impl.AmpDoc} unusedAmpDoc\n   */\n  EmbeddableService.installInEmbedWindow = function installInEmbedWindow(unusedEmbedWin, unusedAmpDoc) {};\n\n  return EmbeddableService;\n}();\n/**\n * Returns a service with the given id. Assumes that it has been constructed\n * already.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\n\n\nexports.EmbeddableService = EmbeddableService;\n\nfunction getExistingServiceForDocInEmbedScope(element, id) {\n  // TODO(#22733): completely remove this method once ampdoc-fie launches.\n  var document = element.ownerDocument;\n  var win = (0, _types.toWin)(document.defaultView);\n  var topWin = getTopWindow(win); // First, try to resolve via local embed window (if applicable).\n\n  var isEmbed = win != topWin;\n  var ampdocFieExperimentOn = (0, _experiments.isExperimentOn)(topWin, 'ampdoc-fie');\n\n  if (isEmbed && !ampdocFieExperimentOn) {\n    if (isServiceRegistered(win, id)) {\n      return getServiceInternal(win, id);\n    } // Fallback from FIE to parent is intentionally unsupported for safety.\n\n\n    return null;\n  } else {\n    // Resolve via the element's ampdoc.\n    return getServiceForDocOrNullInternal(element, id);\n  }\n}\n/**\n * Installs a service override on amp-doc level.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {!Object} service The service.\n */\n\n\nfunction installServiceInEmbedScope(embedWin, id, service) {\n  var topWin = getTopWindow(embedWin);\n  (0, _log.devAssert)(embedWin != topWin, 'Service override can only be installed in embed window: %s', id);\n  (0, _log.devAssert)(!isServiceRegistered(embedWin, id), 'Service override has already been installed: %s', id);\n  var ampdocFieExperimentOn = (0, _experiments.isExperimentOn)(topWin, 'ampdoc-fie');\n\n  if (ampdocFieExperimentOn) {\n    var ampdoc = getAmpdoc(embedWin.document);\n    registerServiceInternal(getAmpdocServiceHolder(ampdoc), ampdoc, id, function () {\n      return service;\n    },\n    /* override */\n    true);\n  } else {\n    registerServiceInternal(embedWin, embedWin, id, function () {\n      return service;\n    });\n    getServiceInternal(embedWin, id); // Force service to build.\n  }\n}\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\n\n\nfunction registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\n\n\nfunction registerServiceBuilderForDoc(nodeOrDoc, id, constructor, opt_instantiate) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\n\n\nfunction rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\n\n\nfunction getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\n\n\nfunction getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\n\n\nfunction getServiceForDoc(elementOrAmpDoc, id) {\n  var ampdoc = getAmpdoc(elementOrAmpDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\n\n\nfunction getServiceForDocOrNullInternal(element, id) {\n  var ampdoc = getAmpdoc(element);\n  var holder = getAmpdocServiceHolder(ampdoc);\n\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\n\n\nfunction setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\n\n\nfunction getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\n\n\nfunction getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\n\n\nfunction getParentWindowFrameElement(node, opt_topWin) {\n  var childWin = (node.ownerDocument || node).defaultView;\n  var topWin = opt_topWin || getTopWindow(childWin);\n\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return (\n        /** @type {?HTMLIFrameElement} */\n        childWin.frameElement\n      );\n    } catch (e) {// Ignore the error.\n    }\n  }\n\n  return null;\n}\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\n\n\nfunction getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    var win = (0, _types.toWin)(\n    /** @type {!Document} */\n    (nodeOrDoc.ownerDocument || nodeOrDoc).defaultView);\n    return getAmpdocService(win).getAmpDoc(\n    /** @type {!Node} */\n    nodeOrDoc);\n  }\n\n  return (\n    /** @type {!./service/ampdoc-impl.AmpDoc} */\n    nodeOrDoc\n  );\n}\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\n\n\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\n\n\nfunction getAmpdocService(win) {\n  return (\n    /** @type {!./service/ampdoc-impl.AmpDocService} */\n    getService(win, 'ampdoc')\n  );\n}\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n * @template T\n */\n\n\nfunction getServiceInternal(holder, id) {\n  (0, _log.devAssert)(isServiceRegistered(holder, id), \"Expected service \" + id + \" to be registered\");\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (!s.obj) {\n    (0, _log.devAssert)(s.ctor, \"Service \" + id + \" registered without ctor nor impl.\");\n    (0, _log.devAssert)(s.context, \"Service \" + id + \" registered without context.\");\n    s.obj = new s.ctor(s.context);\n    (0, _log.devAssert)(s.obj, \"Service \" + id + \" constructed to null.\");\n    s.ctor = null;\n    s.context = null; // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n\n  return s.obj;\n}\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n */\n\n\nfunction registerServiceInternal(holder, context, id, ctor, opt_override) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null\n    };\n  }\n\n  if (!opt_override && (s.ctor || s.obj)) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context; // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromiseInternal(holder, id) {\n  var cached = getServicePromiseOrNullInternal(holder, id);\n\n  if (cached) {\n    return cached;\n  } // Service is not registered.\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n\n\n  var services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return (\n    /** @type {!Promise<!Object>} */\n    services[id].promise\n  );\n}\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\n\n\nfunction rejectServicePromiseInternal(holder, id, error) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNullInternal(holder, id) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return s.promise = Promise.resolve(\n      /** @type {!Object} */\n      s.obj);\n    }\n  }\n\n  return null;\n}\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\n\n\nfunction getServices(holder) {\n  var services = holder.__AMP_SERVICES;\n\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n\n  return services;\n}\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\n\n\nfunction isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\n\n\nfunction assertDisposable(service) {\n  (0, _log.devAssert)(isDisposable(service), 'required to implement Disposable');\n  return (\n    /** @type {!Disposable} */\n    service\n  );\n}\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\n\n\nfunction disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\n\n\nfunction disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n/**\n * @param {!Object} holder Object holding the service instances.\n */\n\n\nfunction disposeServicesInternal(holder) {\n  // TODO(dvoytenko): Consider marking holder as destroyed for later-arriving\n  // service to be canceled automatically.\n  var services = getServices(holder);\n\n  var _loop = function _loop(id) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      return \"continue\";\n    }\n\n    var serviceHolder = services[id];\n\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then(function (instance) {\n        return disposeServiceInternal(id, instance);\n      });\n    }\n  };\n\n  for (var id in services) {\n    var _ret = _loop(id);\n\n    if (_ret === \"continue\") continue;\n  }\n}\n/**\n * @param {string} id\n * @param {!Object} service\n */\n\n\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    (0, _log.dev)().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n/**\n * Adopts an embeddable (implements `EmbeddableService` interface) service\n * in embed scope.\n * @param {!Window} embedWin\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} serviceClass\n * @suppress {missingProperties}\n * @return {boolean}\n */\n\n\nfunction installServiceInEmbedIfEmbeddable(embedWin, serviceClass) {\n  var isEmbeddableService = typeof serviceClass.installInEmbedWindow === 'function';\n\n  if (!isEmbeddableService) {\n    return false;\n  }\n\n  var frameElement = (0, _log.dev)().assertElement(embedWin.frameElement, 'frameElement not found for embed');\n  var ampdoc = getAmpdoc(frameElement);\n  serviceClass.installInEmbedWindow(embedWin, ampdoc);\n  return true;\n}\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\n\n\nfunction adoptServiceForEmbedDoc(ampdoc, id) {\n  var service = getServiceInternal(getAmpdocServiceHolder((0, _log.devAssert)(ampdoc.getParent())), id);\n  registerServiceInternal(getAmpdocServiceHolder(ampdoc), ampdoc, id, function () {\n    return service;\n  });\n}\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\n\n\nfunction resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\n\n\nfunction isServiceRegistered(holder, id) {\n  var service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id]; // All registered services must have an implementation or a constructor.\n\n  return !!(service && (service.ctor || service.obj));\n}\n/** @return {!ServiceHolderDef} */\n\n\nfunction emptyServiceHolderWithPromise() {\n  var deferred = new _promise.Deferred();\n  var promise = deferred.promise,\n      resolve = deferred.resolve,\n      reject = deferred.reject;\n  promise.catch(function () {}); // avoid uncaught exception when service gets rejected\n\n  return {\n    obj: null,\n    promise: promise,\n    resolve: resolve,\n    reject: reject,\n    context: null,\n    ctor: null\n  };\n}\n\n},{\"./experiments\":21,\"./log\":29,\"./types\":41,\"./utils/promise\":51}],34:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.calculateScriptBaseUrl = calculateScriptBaseUrl;\nexports.calculateExtensionScriptUrl = calculateExtensionScriptUrl;\nexports.calculateEntryPointScriptUrl = calculateEntryPointScriptUrl;\nexports.parseExtensionUrl = parseExtensionUrl;\n\nvar _mode = require(\"../mode\");\n\nvar _config = require(\"../config\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Internal structure that maintains the state of an extension through loading.\n *\n * @typedef {{\n *   extensionId: (string|undefined),\n *   extensionVersion: (string|undefined),\n * }}\n * @private\n */\nvar ExtensionInfoDef;\n/**\n * Calculate the base url for any scripts.\n * @param {!Location} location The window's location\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\n\nfunction calculateScriptBaseUrl(location, opt_isLocalDev) {\n  if (opt_isLocalDev) {\n    var prefix = location.protocol + \"//\" + location.host;\n\n    if (location.protocol == 'about:') {\n      prefix = '';\n    }\n\n    return prefix + \"/dist\";\n  }\n\n  return _config.urls.cdn;\n}\n/**\n * Calculates if we need a single pass folder or not.\n *\n * @return {string}\n */\n\n\nfunction getSinglePassExperimentPath() {\n  return (0, _mode.getMode)().singlePassType ? (0, _mode.getMode)().singlePassType + \"/\" : '';\n}\n/**\n * Calculate script url for an extension.\n * @param {!Location} location The window's location\n * @param {string} extensionId\n * @param {string=} opt_extensionVersion\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\n\n\nfunction calculateExtensionScriptUrl(location, extensionId, opt_extensionVersion, opt_isLocalDev) {\n  var base = calculateScriptBaseUrl(location, opt_isLocalDev);\n  var rtv = (0, _mode.getMode)().rtvVersion;\n\n  if (opt_extensionVersion == null) {\n    opt_extensionVersion = '0.1';\n  }\n\n  var extensionVersion = opt_extensionVersion ? '-' + opt_extensionVersion : '';\n  var spPath = getSinglePassExperimentPath();\n  return base + \"/rtv/\" + rtv + \"/\" + spPath + \"v0/\" + extensionId + extensionVersion + \".js\";\n}\n/**\n * Calculate script url for an entry point.\n * If `opt_rtv` is true, returns the URL matching the current RTV.\n * @param {!Location} location The window's location\n * @param {string} entryPoint\n * @param {boolean=} isLocalDev\n * @param {boolean=} opt_rtv\n * @return {string}\n */\n\n\nfunction calculateEntryPointScriptUrl(location, entryPoint, isLocalDev, opt_rtv) {\n  var base = calculateScriptBaseUrl(location, isLocalDev);\n\n  if (opt_rtv) {\n    var spPath = getSinglePassExperimentPath();\n    return base + \"/rtv/\" + (0, _mode.getMode)().rtvVersion + \"/\" + spPath + entryPoint + \".js\";\n  }\n\n  return base + \"/\" + entryPoint + \".js\";\n}\n/**\n * Parse the extension version from a given script URL.\n * @param {string} scriptUrl\n * @return {!ExtensionInfoDef}\n */\n\n\nfunction parseExtensionUrl(scriptUrl) {\n  var regex = /^(.*)\\/(.*)-([0-9.]+)\\.js$/i;\n  var matches = scriptUrl.match(regex);\n  return {\n    extensionId: matches ? matches[2] : undefined,\n    extensionVersion: matches ? matches[3] : undefined\n  };\n}\n\n},{\"../config\":13,\"../mode\":31}],35:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.Services = exports.SubscriptionService = void 0;\n\nvar _service = require(\"./service\");\n\nvar _elementService = require(\"./element-service\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nvar SubscriptionService;\nexports.SubscriptionService = SubscriptionService;\n\nvar Services =\n/*#__PURE__*/\nfunction () {\n  function Services() {}\n\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  Services.accessServiceForDoc = function accessServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'access', 'amp-access')\n    );\n  }\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  ;\n\n  Services.accessServiceForDocOrNull = function accessServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'access', 'amp-access')\n    );\n  }\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  ;\n\n  Services.subscriptionsServiceForDoc = function subscriptionsServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!SubscriptionService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  ;\n\n  Services.subscriptionsServiceForDocOrNull = function subscriptionsServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?SubscriptionService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  ;\n\n  Services.actionServiceForDoc = function actionServiceForDoc(element) {\n    return (\n      /** @type {!./service/action-impl.ActionService} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'action')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  ;\n\n  Services.standardActionsForDoc = function standardActionsForDoc(element) {\n    return (\n      /** @type {!./service/standard-actions-impl.StandardActions} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'standard-actions')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  ;\n\n  Services.activityForDoc = function activityForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'activity', 'amp-analytics')\n    );\n  }\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  ;\n\n  Services.ampdocServiceFor = function ampdocServiceFor(window) {\n    return (\n      /** @type {!./service/ampdoc-impl.AmpDocService} */\n      (0, _service.getService)(window, 'ampdoc')\n    );\n  }\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  ;\n\n  Services.ampdoc = function ampdoc(nodeOrAmpDoc) {\n    return (0, _service.getAmpdoc)(nodeOrAmpDoc);\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  ;\n\n  Services.analyticsForDoc = function analyticsForDoc(element, loadAnalytics) {\n    if (loadAnalytics === void 0) {\n      loadAnalytics = false;\n    }\n\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      var ampdoc = (0, _service.getAmpdoc)(element);\n      Services.extensionsFor(ampdoc.win).\n      /*OK*/\n      installExtensionForDoc(ampdoc, 'amp-analytics');\n    }\n\n    return (\n      /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'amp-analytics-instrumentation', 'amp-analytics')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  ;\n\n  Services.analyticsForDocOrNull = function analyticsForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'amp-analytics-instrumentation', 'amp-analytics')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  ;\n\n  Services.batchedXhrFor = function batchedXhrFor(window) {\n    return (\n      /** @type {!./service/batched-xhr-impl.BatchedXhr} */\n      (0, _service.getService)(window, 'batched-xhr')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  ;\n\n  Services.bindForDocOrNull = function bindForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */\n      (0, _elementService.getElementServiceIfAvailableForDocInEmbedScope)(element, 'bind', 'amp-bind')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  ;\n\n  Services.cidForDoc = function cidForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/cid-impl.CidDef>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'cid')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  ;\n\n  Services.navigationForDoc = function navigationForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/navigation.Navigation} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'navigation')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  ;\n\n  Services.loaderServiceForDoc = function loaderServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'loader', 'amp-loader')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  ;\n\n  Services.standaloneServiceForDoc = function standaloneServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'standalone', 'amp-standalone')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  ;\n\n  Services.cryptoFor = function cryptoFor(window) {\n    return (\n      /** @type {!./service/crypto-impl.Crypto} */\n      (0, _service.getService)(window, 'crypto')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  ;\n\n  Services.documentInfoForDoc = function documentInfoForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/document-info-impl.DocInfo} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'documentInfo').get()\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  ;\n\n  Services.extensionsFor = function extensionsFor(window) {\n    return (\n      /** @type {!./service/extensions-impl.Extensions} */\n      (0, _service.getService)(window, 'extensions')\n    );\n  }\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  ;\n\n  Services.formSubmitForDoc = function formSubmitForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  ;\n\n  Services.hiddenObserverForDoc = function hiddenObserverForDoc(element) {\n    return (\n      /** @type {!./service/hidden-observer-impl.HiddenObserver} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'hidden-observer')\n    );\n  }\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  ;\n\n  Services.historyForDoc = function historyForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/history-impl.History} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'history')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  ;\n\n  Services.inputFor = function inputFor(win) {\n    return (0, _service.getService)(win, 'input');\n  }\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  ;\n\n  Services.inputmaskServiceForDocOrNull = function inputmaskServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  ;\n\n  Services.ownersForDoc = function ownersForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/owners-interface.OwnersInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'owners')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  ;\n\n  Services.performanceFor = function performanceFor(window) {\n    return (\n      /** @type {!./service/performance-impl.Performance}*/\n      (0, _service.getService)(window, 'performance')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  ;\n\n  Services.performanceForOrNull = function performanceForOrNull(window) {\n    return (\n      /** @type {!./service/performance-impl.Performance}*/\n      (0, _service.getExistingServiceOrNull)(window, 'performance')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  ;\n\n  Services.platformFor = function platformFor(window) {\n    return (\n      /** @type {!./service/platform-impl.Platform} */\n      (0, _service.getService)(window, 'platform')\n    );\n  }\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  ;\n\n  Services.positionObserverForDoc = function positionObserverForDoc(element) {\n    return (\n      /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */\n      (0, _service.getServiceForDoc)(element, 'position-observer')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  ;\n\n  Services.resourcesForDoc = function resourcesForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/resources-interface.ResourcesInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'resources')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  ;\n\n  Services.resourcesPromiseForDoc = function resourcesPromiseForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'resources')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?{incomingFragment: string, outgoingFragment: string}>}\n   */\n  ;\n\n  Services.shareTrackingForOrNull = function shareTrackingForOrNull(win) {\n    return (\n      /** @type {!Promise<?{incomingFragment: string, outgoingFragment: string}>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'share-tracking', 'amp-share-tracking', true)\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>}\n   */\n  ;\n\n  Services.storyVariableServiceForOrNull = function storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-variable', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  ;\n\n  Services.storyVariableService = function storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-variable')\n    );\n  }\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>}\n   */\n  ;\n\n  Services.storyStoreServiceForOrNull = function storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-store', 'amp-story')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  ;\n\n  Services.storyStoreService = function storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-store')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  ;\n\n  Services.storyMediaQueryService = function storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-media-query')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  ;\n\n  Services.storyRequestService = function storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-request')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  ;\n\n  Services.mediaPerformanceMetricsService = function mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (0, _service.getExistingServiceOrNull)(win, 'media-performance-metrics')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  ;\n\n  Services.localizationServiceForOrNull = function localizationServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'localization', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  ;\n\n  Services.localizationService = function localizationService(win) {\n    return (0, _service.getService)(win, 'localization');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  ;\n\n  Services.storyAnalyticsServiceForOrNull = function storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-analytics', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  ;\n\n  Services.storyAnalyticsService = function storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-analytics')\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService}\n   */\n  ;\n\n  Services.storyStoreServiceV01 = function storyStoreServiceV01(win) {\n    return (0, _service.getService)(win, 'story-store');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-request-service.AmpStoryRequestService}\n   */\n  ;\n\n  Services.storyRequestServiceV01 = function storyRequestServiceV01(win) {\n    return (0, _service.getService)(win, 'story-request-v01');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  ;\n\n  Services.localizationServiceForOrNullV01 = function localizationServiceForOrNullV01(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'localization-v01', 'amp-story', true)\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  ;\n\n  Services.localizationServiceV01 = function localizationServiceV01(win) {\n    return (0, _service.getService)(win, 'localization-v01');\n  }\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>}\n   */\n  ;\n\n  Services.viewerIntegrationVariableServiceForOrNull = function viewerIntegrationVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'viewer-integration-variable', 'amp-viewer-integration', true)\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  ;\n\n  Services.webAnimationServiceFor = function webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'web-animation', 'amp-animation')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  ;\n\n  Services.storageForDoc = function storageForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/storage-impl.Storage>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'storage')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/template-impl.Templates}\n   */\n  ;\n\n  Services.templatesFor = function templatesFor(window) {\n    return (\n      /** @type {!./service/template-impl.Templates} */\n      (0, _service.getService)(window, 'templates')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  ;\n\n  Services.timerFor = function timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return (\n      /** @type {!./service/timer-impl.Timer} */\n      (0, _service.getService)(window, 'timer')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  ;\n\n  Services.urlReplacementsForDoc = function urlReplacementsForDoc(element) {\n    return (\n      /** @type {!./service/url-replacements-impl.UrlReplacements} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'url-replace')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  ;\n\n  Services.userNotificationManagerForDoc = function userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'userNotificationManager', 'amp-user-notification')\n    );\n  }\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  ;\n\n  Services.consentPolicyServiceForDocOrNull = function consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'consentPolicyManager', 'amp-consent')\n    );\n  }\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  ;\n\n  Services.geoForDocOrNull = function geoForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'geo', 'amp-geo', true)\n    );\n  }\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>}\n   */\n  ;\n\n  Services.userLocationForDocOrNull = function userLocationForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'user-location', 'amp-user-location', true)\n    );\n  }\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  ;\n\n  Services.urlForDoc = function urlForDoc(element) {\n    return (\n      /** @type {!./service/url-impl.Url} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'url')\n    );\n  }\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  ;\n\n  Services.variantsForDocOrNull = function variantsForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'variant', 'amp-experiment', true)\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  ;\n\n  Services.videoManagerForDoc = function videoManagerForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/video-manager-impl.VideoManager} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'video-manager')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>}\n   */\n  ;\n\n  Services.viewerAssistanceForDocOrNull = function viewerAssistanceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'amp-viewer-assistance', 'amp-viewer-assistance')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  ;\n\n  Services.viewerForDoc = function viewerForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/viewer-interface.ViewerInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'viewer')\n    );\n  }\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  ;\n\n  Services.viewerPromiseForDoc = function viewerPromiseForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'viewer')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  ;\n\n  Services.vsyncFor = function vsyncFor(window) {\n    return (\n      /** @type {!./service/vsync-impl.Vsync} */\n      (0, _service.getService)(window, 'vsync')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  ;\n\n  Services.viewportForDoc = function viewportForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/viewport/viewport-interface.ViewportInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'viewport')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  ;\n\n  Services.xhrFor = function xhrFor(window) {\n    return (\n      /** @type {!./service/xhr-impl.Xhr} */\n      (0, _service.getService)(window, 'xhr')\n    );\n  };\n\n  return Services;\n}();\n\nexports.Services = Services;\n\n},{\"./element-service\":17,\"./service\":33}],36:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.srcsetFromElement = srcsetFromElement;\nexports.srcsetFromSrc = srcsetFromSrc;\nexports.parseSrcset = parseSrcset;\nexports.Srcset = void 0;\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A single source within a srcset. Only one: width or DPR can be specified at\n * a time.\n * @typedef {{\n *   url: string,\n *   width: (number|undefined),\n *   dpr: (number|undefined)\n * }}\n */\nvar SrcsetSourceDef;\n/**\n * General grammar: (URL [NUM[w|x]],)*\n * Example 1: \"image1.png 100w, image2.png 50w\"\n * Example 2: \"image1.png 2x, image2.png\"\n * Example 3: \"image1,100w.png 100w, image2.png 50w\"\n */\n\nvar srcsetRegex = /(\\S+)(?:\\s+(?:(-?\\d+(?:\\.\\d+)?)([a-zA-Z]*)))?\\s*(?:,|$)/g;\n/**\n * Extracts `srcset` and fallbacks to `src` if not available.\n * @param {!Element} element\n * @return {!Srcset}\n */\n\nfunction srcsetFromElement(element) {\n  var srcsetAttr = element.getAttribute('srcset');\n\n  if (srcsetAttr) {\n    return parseSrcset(srcsetAttr);\n  } // We can't push `src` via `parseSrcset` because URLs in `src` are not always\n  // RFC compliant and can't be easily parsed as an `srcset`. For instance,\n  // they sometimes contain space characters.\n\n\n  var srcAttr = (0, _log.userAssert)(element.getAttribute('src'), 'Either non-empty \"srcset\" or \"src\" attribute must be specified: %s', element);\n  return srcsetFromSrc(srcAttr);\n}\n/**\n * Creates a Srcset from a `src` attribute value.\n * @param {string} src\n * @return {!Srcset}\n */\n\n\nfunction srcsetFromSrc(src) {\n  return new Srcset([{\n    url: src,\n    width: undefined,\n    dpr: 1\n  }]);\n}\n/**\n * Parses the text representation of srcset into Srcset object.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#Attributes.\n * See http://www.w3.org/html/wg/drafts/html/master/semantics.html#attr-img-srcset.\n * @param {string} s\n * @return {!Srcset}\n */\n\n\nfunction parseSrcset(s) {\n  var sources = [];\n  var match;\n\n  while (match = srcsetRegex.exec(s)) {\n    var url = match[1];\n    var width = void 0,\n        dpr = void 0;\n\n    if (match[2]) {\n      var type = match[3].toLowerCase();\n\n      if (type == 'w') {\n        width = parseInt(match[2], 10);\n      } else if (type == 'x') {\n        dpr = parseFloat(match[2]);\n      } else {\n        continue;\n      }\n    } else {\n      // If no \"w\" or \"x\" specified, we assume it's \"1x\".\n      dpr = 1;\n    }\n\n    sources.push({\n      url: url,\n      width: width,\n      dpr: dpr\n    });\n  }\n\n  return new Srcset(sources);\n}\n/**\n * A srcset object contains one or more sources.\n *\n * There are two types of sources: width-based and DPR-based. Only one type\n * of sources allowed to be specified within a single srcset. Depending on a\n * usecase, the components are free to choose any source that best corresponds\n * to the required rendering quality and network and CPU conditions. See\n * \"select\" method for details on how this selection is performed.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#Attributes\n */\n\n\nvar Srcset =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Array<!SrcsetSourceDef>} sources\n   */\n  function Srcset(sources) {\n    (0, _log.userAssert)(sources.length > 0, 'Srcset must have at least one source');\n    /** @private @const {!Array<!SrcsetSourceDef>} */\n\n    this.sources_ = sources; // Only one type of source specified can be used - width or DPR.\n\n    var hasWidth = false;\n    var hasDpr = false;\n\n    for (var i = 0; i < sources.length; i++) {\n      var source = sources[i];\n      hasWidth = hasWidth || !!source.width;\n      hasDpr = hasDpr || !!source.dpr;\n    }\n\n    (0, _log.userAssert)(!!(hasWidth ^ hasDpr), 'Srcset must have width or dpr sources, but not both'); // Source and assert duplicates.\n\n    sources.sort(hasWidth ? sortByWidth : sortByDpr);\n    /** @private @const {boolean} */\n\n    this.widthBased_ = hasWidth;\n  }\n  /**\n   * Performs selection for specified width and DPR. Here, width is the width\n   * in screen pixels and DPR is the device-pixel-ratio or pixel density of\n   * the device. Depending on the circumstances, such as low network conditions,\n   * it's possible to manipulate the result of this method by passing a lower\n   * DPR value.\n   *\n   * The source selection depends on whether this is width-based or DPR-based\n   * srcset.\n   *\n   * In a width-based source, the source's width is the physical width of a\n   * resource (e.g. an image). Depending on the provided DPR, this width is\n   * converted to the screen pixels as following:\n   *   pixelWidth = sourceWidth / DPR\n   *\n   * Then, the source closest to the requested \"width\" is selected using\n   * the \"pixelWidth\". The slight preference is given to the bigger sources to\n   * ensure the most optimal quality.\n   *\n   * In a DPR-based source, the source's DPR is used to return the source that\n   * is closest to the requested DPR.\n   *\n   * Based on\n   * http://www.w3.org/html/wg/drafts/html/master/semantics.html#attr-img-srcset.\n   * @param {number} width\n   * @param {number} dpr\n   * @return {string}\n   */\n\n\n  var _proto = Srcset.prototype;\n\n  _proto.select = function select(width, dpr) {\n    (0, _log.devAssert)(width, 'width=%s', width);\n    (0, _log.devAssert)(dpr, 'dpr=%s', dpr);\n    var index = 0;\n\n    if (this.widthBased_) {\n      index = this.selectByWidth_(width * dpr);\n    } else {\n      index = this.selectByDpr_(dpr);\n    }\n\n    return this.sources_[index].url;\n  }\n  /**\n   * @param {number} width\n   * @return {number}\n   * @private\n   */\n  ;\n\n  _proto.selectByWidth_ = function selectByWidth_(width) {\n    var sources = this.sources_;\n    var minIndex = 0;\n    var minScore = Infinity;\n    var minWidth = Infinity;\n\n    for (var i = 0; i < sources.length; i++) {\n      var sWidth = sources[i].width;\n      var score = Math.abs(sWidth - width); // Select the one that is closer with a slight preference toward larger\n      // widths. If smaller size is closer, enforce minimum ratio to ensure\n      // image isn't too distorted.\n\n      if (score <= minScore * 1.1 || width / minWidth > 1.2) {\n        minIndex = i;\n        minScore = score;\n        minWidth = sWidth;\n      } else {\n        break;\n      }\n    }\n\n    return minIndex;\n  }\n  /**\n   * @param {number} dpr\n   * @return {number}\n   * @private\n   */\n  ;\n\n  _proto.selectByDpr_ = function selectByDpr_(dpr) {\n    var sources = this.sources_;\n    var minIndex = 0;\n    var minScore = Infinity;\n\n    for (var i = 0; i < sources.length; i++) {\n      var score = Math.abs(sources[i].dpr - dpr);\n\n      if (score <= minScore) {\n        minIndex = i;\n        minScore = score;\n      } else {\n        break;\n      }\n    }\n\n    return minIndex;\n  }\n  /**\n   * Returns all URLs in the srcset.\n   * @return {!Array<string>}\n   */\n  ;\n\n  _proto.getUrls = function getUrls() {\n    return this.sources_.map(function (s) {\n      return s.url;\n    });\n  }\n  /**\n   * Reconstructs the string expression for this srcset.\n   * @param {function(string):string=} opt_mapper\n   * @return {string}\n   */\n  ;\n\n  _proto.stringify = function stringify(opt_mapper) {\n    var res = [];\n    var sources = this.sources_;\n\n    for (var i = 0; i < sources.length; i++) {\n      var source = sources[i];\n      var src = source.url;\n\n      if (opt_mapper) {\n        src = opt_mapper(src);\n      }\n\n      if (this.widthBased_) {\n        src += \" \" + source.width + \"w\";\n      } else {\n        src += \" \" + source.dpr + \"x\";\n      }\n\n      res.push(src);\n    }\n\n    return res.join(', ');\n  };\n\n  return Srcset;\n}();\n/**\n * Sorts by width\n *\n * @param {number} s1\n * @param {number} s2\n * @return {number}\n */\n\n\nexports.Srcset = Srcset;\n\nfunction sortByWidth(s1, s2) {\n  (0, _log.userAssert)(s1.width != s2.width, 'Duplicate width: %s', s1.width);\n  return s1.width - s2.width;\n}\n/**\n * Sorts by dpr\n *\n * @param {!Object} s1\n * @param {!Object} s2\n * @return {number}\n */\n\n\nfunction sortByDpr(s1, s2) {\n  (0, _log.userAssert)(s1.dpr != s2.dpr, 'Duplicate dpr: %s', s1.dpr);\n  return s1.dpr - s2.dpr;\n}\n\n},{\"./log\":29}],37:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.htmlFor = htmlFor;\nexports.svgFor = svgFor;\nexports.htmlRefs = htmlRefs;\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object.js\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar htmlContainer;\nvar svgContainer;\n/**\n * Creates the html helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\n\nfunction htmlFor(nodeOrDoc) {\n  var doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n\n  if (!htmlContainer || htmlContainer.ownerDocument !== doc) {\n    htmlContainer = doc.createElement('div');\n  }\n\n  return html;\n}\n/**\n * Creates the svg helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\n\n\nfunction svgFor(nodeOrDoc) {\n  var doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n\n  if (!svgContainer || svgContainer.ownerDocument !== svgContainer) {\n    svgContainer = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  }\n\n  return svg;\n}\n/**\n * A tagged template literal helper to generate static SVG trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const circle = svg`<circle cx=\"60\" cy=\"60\" r=\"22\"></circle>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\n\n\nfunction svg(strings) {\n  return createNode(svgContainer, strings);\n}\n/**\n * A tagged template literal helper to generate static DOM trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const div = html`<div><span></span></div>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\n\n\nfunction html(strings) {\n  return createNode(htmlContainer, strings);\n}\n/**\n * Helper used by html and svg string literal functions.\n * @param {!Element} container\n * @param {!Array<string>} strings\n * @return {!Element}\n */\n\n\nfunction createNode(container, strings) {\n  (0, _log.devAssert)(strings.length === 1, 'Improper html template tag usage.');\n  container.\n  /*OK*/\n  innerHTML = strings[0];\n  var el = container.firstElementChild;\n  (0, _log.devAssert)(el, 'No elements in template');\n  (0, _log.devAssert)(!el.nextElementSibling, 'Too many root elements in template'); // Clear to free memory.\n\n  container.removeChild(el);\n  return el;\n}\n/**\n * Queries an element for all elements with a \"ref\" attribute, removing\n * the attribute afterwards.\n * Returns a named map of all ref elements.\n *\n * @param {!Element} root\n * @return {!Object<string, !Element>}\n */\n\n\nfunction htmlRefs(root) {\n  var elements = root.querySelectorAll('[ref]');\n  var refs = (0, _object.map)();\n\n  for (var i = 0; i < elements.length; i++) {\n    var element = elements[i];\n    var ref = (0, _log.devAssert)(element.getAttribute('ref'), 'Empty ref attr');\n    element.removeAttribute('ref');\n    (0, _log.devAssert)(refs[ref] === undefined, 'Duplicate ref');\n    refs[ref] = element;\n  }\n\n  return refs;\n}\n\n},{\"./log\":29,\"./utils/object.js\":49}],38:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.dashToCamelCase = dashToCamelCase;\nexports.camelCaseToDash = camelCaseToDash;\nexports.dashToUnderline = dashToUnderline;\nexports.endsWith = endsWith;\nexports.startsWith = startsWith;\nexports.includes = includes;\nexports.expandTemplate = expandTemplate;\nexports.stringHash32 = stringHash32;\nexports.trimEnd = trimEnd;\nexports.trimStart = trimStart;\nexports.padStart = padStart;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n/**\n * @param {string} match\n * @return {string}\n */\n\n\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\n\n\nfunction dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\n\n\nfunction camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\n\n\nfunction dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\n\n\nfunction endsWith(string, suffix) {\n  var index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n/**\n * Polyfill for String.prototype.startsWith.\n * @param {string} string\n * @param {string} prefix\n * @return {boolean}\n */\n\n\nfunction startsWith(string, prefix) {\n  if (prefix.length > string.length) {\n    return false;\n  }\n\n  return string.lastIndexOf(prefix, 0) == 0;\n}\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\n\n\nfunction includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + substring.length > string.length) {\n    return false;\n  }\n\n  return string.indexOf(substring, start) !== -1;\n}\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\n\n\nfunction expandTemplate(template, getter, opt_maxIterations) {\n  var maxIterations = opt_maxIterations || 1;\n\n  var _loop = function _loop(i) {\n    var matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, function (_a, b) {\n      matches++;\n      return getter(b);\n    });\n\n    if (!matches) {\n      return \"break\";\n    }\n  };\n\n  for (var i = 0; i < maxIterations; i++) {\n    var _ret = _loop(i);\n\n    if (_ret === \"break\") break;\n  }\n\n  return template;\n}\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\n\n\nfunction stringHash32(str) {\n  var length = str.length;\n  var hash = 5381;\n\n  for (var i = 0; i < length; i++) {\n    hash = hash * 33 ^ str.charCodeAt(i);\n  } // Convert from 32-bit signed to unsigned.\n\n\n  return String(hash >>> 0);\n}\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\n\n\nfunction trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\n\n\nfunction trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {*} TODO(#23582): Specify return type\n */\n\n\nfunction padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n\n  targetLength = targetLength - s.length;\n  var padding = padString;\n\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n\n  return padding.slice(0, targetLength) + s;\n}\n\n},{}],39:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.installStylesForDoc = installStylesForDoc;\nexports.installStylesLegacy = installStylesLegacy;\nexports.installCssTransformer = installCssTransformer;\nexports.setBodyMadeVisibleForTesting = setBodyMadeVisibleForTesting;\nexports.makeBodyVisible = makeBodyVisible;\nexports.makeBodyVisibleRecovery = makeBodyVisibleRecovery;\nexports.bodyAlwaysVisible = bodyAlwaysVisible;\n\nvar _commonSignals = require(\"./common-signals\");\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\nvar _service = require(\"./service\");\n\nvar _dom = require(\"./dom\");\n\nvar _object = require(\"./utils/object\");\n\nvar _style = require(\"./style\");\n\nvar _renderDelayingServices = require(\"./render-delaying-services\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TRANSFORMER_PROP = '__AMP_CSS_TR';\nvar STYLE_MAP_PROP = '__AMP_CSS_SM';\n/**\n * Adds the given css text to the given ampdoc.\n *\n * The style tags will be at the beginning of the head before all author\n * styles. One element can be the main runtime CSS. This is guaranteed\n * to always be the first stylesheet in the doc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc The ampdoc that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are available.\n *     Not using a promise, because this is synchronous when possible.\n *     for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\n\nfunction installStylesForDoc(ampdoc, cssText, cb, opt_isRuntimeCss, opt_ext) {\n  var cssRoot = ampdoc.getHeadNode();\n  var style = insertStyleElement(cssRoot, maybeTransform(cssRoot, cssText), opt_isRuntimeCss || false, opt_ext || null);\n\n  if (cb) {\n    var rootNode = ampdoc.getRootNode(); // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n\n    if (styleLoaded(rootNode, style)) {\n      cb(style);\n      return style;\n    } // Poll until styles are available.\n\n\n    var interval = setInterval(function () {\n      if (styleLoaded(rootNode, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n\n  return style;\n}\n/**\n * Adds the given css text to the given document.\n * TODO(dvoytenko, #22733): Remove this method once FIE/ampdoc migration is\n * done.\n *\n * @param {!Document} doc The document that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are\n *     available. Not using a promise, because this is synchronous when\n *     possible. for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\n\n\nfunction installStylesLegacy(doc, cssText, cb, opt_isRuntimeCss, opt_ext) {\n  var style = insertStyleElement((0, _log.dev)().assertElement(doc.head), cssText, opt_isRuntimeCss || false, opt_ext || null);\n\n  if (cb) {\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(doc, style)) {\n      cb(style);\n      return style;\n    } // Poll until styles are available.\n\n\n    var interval = setInterval(function () {\n      if (styleLoaded(doc, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n\n  return style;\n}\n/**\n * Creates the properly configured style element.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @param {boolean} isRuntimeCss\n * @param {?string} ext\n * @return {!Element}\n */\n\n\nfunction insertStyleElement(cssRoot, cssText, isRuntimeCss, ext) {\n  var styleMap = cssRoot[STYLE_MAP_PROP];\n\n  if (!styleMap) {\n    styleMap = cssRoot[STYLE_MAP_PROP] = (0, _object.map)();\n  }\n\n  var isExtCss = !isRuntimeCss && ext && ext != 'amp-custom' && ext != 'amp-keyframes';\n  var key = isRuntimeCss ? 'amp-runtime' : isExtCss ? \"amp-extension=\" + ext : null; // Check if it has already been created or discovered.\n\n  if (key) {\n    var existing = getExistingStyleElement(cssRoot, styleMap, key);\n\n    if (existing) {\n      if (existing.textContent !== cssText) {\n        existing.textContent = cssText;\n      }\n\n      return existing;\n    }\n  } // Create the new style element and append to cssRoot.\n\n\n  var doc = cssRoot.ownerDocument || cssRoot;\n  var style = doc.createElement('style');\n  style.\n  /*OK*/\n  textContent = cssText;\n  var afterElement = null; // Make sure that we place style tags after the main runtime CSS. Otherwise\n  // the order is random.\n\n  if (isRuntimeCss) {\n    style.setAttribute('amp-runtime', '');\n  } else if (isExtCss) {\n    style.setAttribute('amp-extension', ext || '');\n    afterElement = (0, _log.dev)().assertElement(getExistingStyleElement(cssRoot, styleMap, 'amp-runtime'));\n  } else {\n    if (ext) {\n      style.setAttribute(ext, '');\n    }\n\n    afterElement = cssRoot.lastChild;\n  }\n\n  (0, _dom.insertAfterOrAtStart)(cssRoot, style, afterElement);\n\n  if (key) {\n    styleMap[key] = style;\n  }\n\n  return style;\n}\n/**\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {!Object<string, !Element>} styleMap\n * @param {string} key\n * @return {?Element}\n */\n\n\nfunction getExistingStyleElement(cssRoot, styleMap, key) {\n  // Already cached.\n  if (styleMap[key]) {\n    return styleMap[key];\n  } // Check if the style has already been added by the server layout.\n\n\n  var existing = cssRoot.\n  /*OK*/\n  querySelector(\"style[\" + key + \"]\");\n\n  if (existing) {\n    styleMap[key] = existing;\n    return existing;\n  } // Nothing found.\n\n\n  return null;\n}\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {function(string):string} transformer\n */\n\n\nfunction installCssTransformer(cssRoot, transformer) {\n  cssRoot[TRANSFORMER_PROP] = transformer;\n}\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @return {string}\n */\n\n\nfunction maybeTransform(cssRoot, cssText) {\n  var transformer = cssRoot[TRANSFORMER_PROP];\n  return transformer ? transformer(cssText) : cssText;\n}\n/** @private {boolean} */\n\n\nvar bodyMadeVisible = false;\n/**\n * @param {boolean} value\n * @visibleForTesting\n */\n\nfunction setBodyMadeVisibleForTesting(value) {\n  bodyMadeVisible = value;\n}\n/**\n * Sets the document's body opacity to 1.\n * If the body is not yet available (because our script was loaded\n * synchronously), polls until it is.\n * @param {!Document} doc The document who's body we should make visible.\n */\n\n\nfunction makeBodyVisible(doc) {\n  (0, _log.devAssert)(doc.defaultView, 'Passed in document must have a defaultView');\n  var win =\n  /** @type {!Window} */\n  doc.defaultView;\n  (0, _dom.waitForBodyOpenPromise)(doc).then(function () {\n    return (0, _renderDelayingServices.waitForServices)(win);\n  }).catch(function (reason) {\n    (0, _log.rethrowAsync)(reason);\n    return [];\n  }).then(function (services) {\n    bodyMadeVisible = true;\n    setBodyVisibleStyles(doc);\n    var ampdoc = (0, _service.getAmpdoc)(doc);\n    ampdoc.signals().signal(_commonSignals.CommonSignals.RENDER_START);\n\n    if (services.length > 0) {\n      var resources = _services.Services.resourcesForDoc(doc.documentElement);\n\n      resources.\n      /*OK*/\n      schedulePass(1,\n      /* relayoutAll */\n      true);\n    }\n\n    try {\n      var perf = _services.Services.performanceFor(win);\n\n      perf.tick('mbv');\n      perf.flush();\n    } catch (e) {}\n  });\n}\n/**\n * Set the document's body opacity to 1. Called in error cases.\n * @param {!Document} doc The document who's body we should make visible.\n */\n\n\nfunction makeBodyVisibleRecovery(doc) {\n  (0, _log.devAssert)(doc.defaultView, 'Passed in document must have a defaultView');\n\n  if (bodyMadeVisible) {\n    return;\n  }\n\n  bodyMadeVisible = true;\n  setBodyVisibleStyles(doc);\n}\n/**\n * Make sure that body exists, and make it visible.\n * @param {!Document} doc\n */\n\n\nfunction setBodyVisibleStyles(doc) {\n  (0, _style.setStyles)((0, _log.dev)().assertElement(doc.body), {\n    opacity: 1,\n    visibility: 'visible',\n    'animation': 'none'\n  });\n}\n/**\n * Indicates that the body is always visible. For instance, in case of PWA.\n * This check is on a module level variable, and could be problematic if you are\n * relying on this function across different binaries.\n * @param {!Window} unusedWin\n */\n\n\nfunction bodyAlwaysVisible(unusedWin) {\n  bodyMadeVisible = true;\n}\n/**\n * Checks whether a style element was registered in the DOM.\n * @param {!Document|!ShadowRoot} doc\n * @param {!Element} style\n * @return {boolean}\n */\n\n\nfunction styleLoaded(doc, style) {\n  var sheets = doc.styleSheets;\n\n  for (var i = 0; i < sheets.length; i++) {\n    var sheet = sheets[i];\n\n    if (sheet.ownerNode == style) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n},{\"./common-signals\":12,\"./dom\":16,\"./log\":29,\"./render-delaying-services\":32,\"./service\":33,\"./services\":35,\"./style\":40,\"./utils/object\":49}],40:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.camelCaseToTitleCase = camelCaseToTitleCase;\nexports.getVendorJsPropertyName = getVendorJsPropertyName;\nexports.setImportantStyles = setImportantStyles;\nexports.setStyle = setStyle;\nexports.getStyle = getStyle;\nexports.setStyles = setStyles;\nexports.assertNotDisplay = assertNotDisplay;\nexports.assertDoesNotContainDisplay = assertDoesNotContainDisplay;\nexports.setInitialDisplay = setInitialDisplay;\nexports.toggle = toggle;\nexports.px = px;\nexports.deg = deg;\nexports.translateX = translateX;\nexports.translate = translate;\nexports.scale = scale;\nexports.rotate = rotate;\nexports.removeAlphaFromColor = removeAlphaFromColor;\nexports.computedStyle = computedStyle;\nexports.resetStyles = resetStyles;\nexports.propagateObjectFitStyles = propagateObjectFitStyles;\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object.js\");\n\nvar _string = require(\"./string\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\n\n/** @type {Object<string, string>} */\nvar propertyNameCache;\n/** @const {!Array<string>} */\n\nvar vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n/**\n * @export\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\n\nfunction camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\n\n\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (var i = 0; i < vendorPrefixes.length; i++) {\n    var propertyName = vendorPrefixes[i] + titleCase;\n\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n\n  return '';\n}\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @export\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\n\n\nfunction getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if ((0, _string.startsWith)(camelCase, '--')) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n\n  if (!propertyNameCache) {\n    propertyNameCache = (0, _object.map)();\n  }\n\n  var propertyName = propertyNameCache[camelCase];\n\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n\n    if (style[camelCase] === undefined) {\n      var titleCase = camelCaseToTitleCase(camelCase);\n      var prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n\n  return propertyName;\n}\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\n\n\nfunction setImportantStyles(element, styles) {\n  var style = element.style;\n\n  for (var k in styles) {\n    style.setProperty(getVendorJsPropertyName(style, k), styles[k].toString(), 'important');\n  }\n}\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\n\n\nfunction setStyle(element, property, value, opt_units, opt_bypassCache) {\n  var propertyName = getVendorJsPropertyName(element.style, property, opt_bypassCache);\n\n  if (propertyName) {\n    element.style[propertyName] =\n    /** @type {string} */\n    opt_units ? value + opt_units : value;\n  }\n}\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\n\n\nfunction getStyle(element, property, opt_bypassCache) {\n  var propertyName = getVendorJsPropertyName(element.style, property, opt_bypassCache);\n\n  if (!propertyName) {\n    return undefined;\n  }\n\n  return element.style[propertyName];\n}\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\n\n\nfunction setStyles(element, styles) {\n  for (var k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\n\n\nfunction assertNotDisplay(style) {\n  if (style === 'display') {\n    (0, _log.dev)().error('STYLE', '`display` style detected. You must use toggle instead.');\n  }\n\n  return style;\n}\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\n\n\nfunction assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    (0, _log.dev)().error('STYLE', '`display` style detected in styles. You must use toggle instead.');\n  }\n\n  return styles;\n}\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\n\n\nfunction setInitialDisplay(el, value) {\n  var style = el.style;\n  (0, _log.devAssert)(value !== '' && value !== 'none', 'Initial display value must not be \"none\". Use toggle instead.');\n  (0, _log.devAssert)(!style['display'], 'setInitialDisplay MUST NOT be used for ' + 'resetting the display style. If you are looking for display:none ' + 'toggling, use toggle instead.');\n  style['display'] = value;\n}\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\n\n\nfunction toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\n\n\nfunction px(value) {\n  return value + \"px\";\n}\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\n\n\nfunction deg(value) {\n  return value + \"deg\";\n}\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction translateX(value) {\n  if (typeof value == 'string') {\n    return \"translateX(\" + value + \")\";\n  }\n\n  return \"translateX(\" + px(value) + \")\";\n}\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\n\n\nfunction translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n\n  if (opt_y === undefined) {\n    return \"translate(\" + x + \")\";\n  }\n\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n\n  return \"translate(\" + x + \", \" + opt_y + \")\";\n}\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction scale(value) {\n  return \"scale(\" + value + \")\";\n}\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n\n  return \"rotate(\" + value + \")\";\n}\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\n\n\nfunction removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(/\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g, '($1,$2,$3, 1)');\n}\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!Object<string, string>}\n */\n\n\nfunction computedStyle(win, el) {\n  var style =\n  /** @type {?CSSStyleDeclaration} */\n  win.getComputedStyle(el);\n  return (\n    /** @type {!Object<string, string>} */\n    style || (0, _object.map)()\n  );\n}\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\n\n\nfunction resetStyles(element, properties) {\n  for (var i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\n\n\nfunction propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n},{\"./log\":29,\"./string\":38,\"./utils/object.js\":49}],41:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isArray = isArray;\nexports.toArray = toArray;\nexports.isObject = isObject;\nexports.isFiniteNumber = isFiniteNumber;\nexports.isEnumValue = isEnumValue;\nexports.toWin = toWin;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nvar toString_ = Object.prototype.toString;\n/**\n * Returns the ECMA [[Class]] of a value\n * @param {*} value\n * @return {string}\n */\n\nfunction toString(value) {\n  return toString_.call(value);\n}\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\n\n\nfunction toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  return toString(value) === '[object Object]';\n}\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n/**\n * Checks whether `s` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} s\n * @return {boolean}\n * @template T\n */\n\n\nfunction isEnumValue(enumObj, s) {\n  for (var k in enumObj) {\n    if (enumObj[k] === s) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {!Window|null} winOrNull\n * @return {!Window}\n */\n\n\nfunction toWin(winOrNull) {\n  return (\n    /** @type {!Window} */\n    winOrNull\n  );\n}\n\n},{}],42:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.parseQueryString_ = parseQueryString_;\n\nvar _urlTryDecodeUriComponent = require(\"./url-try-decode-uri-component\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar regex = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * DO NOT import the function from this file. Instead, import parseQueryString\n * from `src/url.js`.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\n\nfunction parseQueryString_(queryString) {\n  var params =\n  /** @type {!JsonObject} */\n  Object.create(null);\n\n  if (!queryString) {\n    return params;\n  }\n\n  var match;\n\n  while (match = regex.exec(queryString)) {\n    var name = (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(match[1], match[1]);\n    var value = match[2] ? (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(match[2], match[2]) : '';\n    params[name] = value;\n  }\n\n  return params;\n}\n\n},{\"./url-try-decode-uri-component\":44}],43:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.rewriteAttributesForElement = rewriteAttributesForElement;\nexports.rewriteAttributeValue = rewriteAttributeValue;\nexports.isUrlAttribute = isUrlAttribute;\nexports.resolveUrlAttr = resolveUrlAttr;\n\nvar _url = require(\"./url\");\n\nvar _srcset = require(\"./srcset\");\n\nvar _string = require(\"./string\");\n\nvar _config = require(\"./config\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TAG = 'URL-REWRITE';\n/** @private @const {string} */\n\nvar ORIGINAL_TARGET_VALUE = '__AMP_ORIGINAL_TARGET_VALUE_';\n/**\n * The same as rewriteAttributeValue() but actually updates the element and\n * modifies other related attribute(s) for special cases, i.e. `target` for <a>.\n * @param {!Element} element\n * @param {string} attrName\n * @param {string} attrValue\n * @param {!Location=} opt_location\n * @param {boolean=} opt_updateProperty\n * @return {string}\n */\n\nfunction rewriteAttributesForElement(element, attrName, attrValue, opt_location, opt_updateProperty) {\n  var tag = element.tagName.toLowerCase();\n  var attr = attrName.toLowerCase();\n  var rewrittenValue = rewriteAttributeValue(tag, attr, attrValue); // When served from proxy (CDN), changing an <a> tag from a hash link to a\n  // non-hash link requires updating `target` attribute per cache modification\n  // rules. @see amp-cache-modifications.md#url-rewrites\n\n  var isProxy = (0, _url.isProxyOrigin)(opt_location || self.location);\n\n  if (isProxy && tag === 'a' && attr === 'href') {\n    var oldValue = element.getAttribute(attr);\n    var newValueIsHash = rewrittenValue[0] === '#';\n    var oldValueIsHash = oldValue && oldValue[0] === '#';\n\n    if (newValueIsHash && !oldValueIsHash) {\n      // Save the original value of `target` so it can be restored (if needed).\n      if (!element[ORIGINAL_TARGET_VALUE]) {\n        element[ORIGINAL_TARGET_VALUE] = element.getAttribute('target');\n      }\n\n      element.removeAttribute('target');\n    } else if (oldValueIsHash && !newValueIsHash) {\n      // Restore the original value of `target` or default to `_top`.\n      element.setAttribute('target', element[ORIGINAL_TARGET_VALUE] || '_top');\n    }\n  }\n\n  if (opt_updateProperty) {\n    // Must be done first for <input> elements to correctly update the UI for\n    // the first change on Safari and Chrome.\n    element[attr] = rewrittenValue;\n  }\n\n  element.setAttribute(attr, rewrittenValue);\n  return rewrittenValue;\n}\n/**\n * If (tagName, attrName) is a CDN-rewritable URL attribute, returns the\n * rewritten URL value. Otherwise, returns the unchanged `attrValue`.\n * See resolveUrlAttr() for rewriting rules.\n * @param {string} tagName Lowercase tag name.\n * @param {string} attrName Lowercase attribute name.\n * @param {string} attrValue\n * @return {string}\n * @private\n * @visibleForTesting\n */\n\n\nfunction rewriteAttributeValue(tagName, attrName, attrValue) {\n  if (isUrlAttribute(attrName)) {\n    return resolveUrlAttr(tagName, attrName, attrValue, self.location);\n  }\n\n  return attrValue;\n}\n/**\n * @param {string} attrName Lowercase attribute name.\n * @return {boolean}\n */\n\n\nfunction isUrlAttribute(attrName) {\n  return attrName == 'src' || attrName == 'href' || attrName == 'srcset';\n}\n/**\n * Rewrites the URL attribute values. URLs are rewritten as following:\n * - If URL is absolute, it is not rewritten\n * - If URL is relative, it's rewritten as absolute against the source origin\n * - If resulting URL is a `http:` URL and it's for image, the URL is rewritten\n *   again to be served with AMP Cache (cdn.ampproject.org).\n *\n * @param {string} tagName Lowercase tag name.\n * @param {string} attrName Lowercase attribute name.\n * @param {string} attrValue\n * @param {!Location} windowLocation\n * @return {string}\n * @private\n * @visibleForTesting\n */\n\n\nfunction resolveUrlAttr(tagName, attrName, attrValue, windowLocation) {\n  (0, _url.checkCorsUrl)(attrValue);\n  var isProxyHost = (0, _url.isProxyOrigin)(windowLocation);\n  var baseUrl = (0, _url.parseUrlDeprecated)((0, _url.getSourceUrl)(windowLocation));\n\n  if (attrName == 'href' && !(0, _string.startsWith)(attrValue, '#')) {\n    return (0, _url.resolveRelativeUrl)(attrValue, baseUrl);\n  }\n\n  if (attrName == 'src') {\n    if (tagName == 'amp-img') {\n      return resolveImageUrlAttr(attrValue, baseUrl, isProxyHost);\n    }\n\n    return (0, _url.resolveRelativeUrl)(attrValue, baseUrl);\n  }\n\n  if (attrName == 'srcset') {\n    var srcset;\n\n    try {\n      srcset = (0, _srcset.parseSrcset)(attrValue);\n    } catch (e) {\n      // Do not fail the whole template just because one srcset is broken.\n      // An AMP element will pick it up and report properly.\n      (0, _log.user)().error(TAG, 'Failed to parse srcset: ', e);\n      return attrValue;\n    }\n\n    return srcset.stringify(function (url) {\n      return resolveImageUrlAttr(url, baseUrl, isProxyHost);\n    });\n  }\n\n  return attrValue;\n}\n/**\n * Non-HTTPs image URLs are rewritten via proxy.\n * @param {string} attrValue\n * @param {!Location} baseUrl\n * @param {boolean} isProxyHost\n * @return {string}\n */\n\n\nfunction resolveImageUrlAttr(attrValue, baseUrl, isProxyHost) {\n  var src = (0, _url.parseUrlDeprecated)((0, _url.resolveRelativeUrl)(attrValue, baseUrl)); // URLs such as `data:` or proxy URLs are returned as is. Unsafe protocols\n  // do not arrive here - already stripped by the sanitizer.\n\n  if (src.protocol == 'data:' || (0, _url.isProxyOrigin)(src) || !isProxyHost) {\n    return src.href;\n  } // Rewrite as a proxy URL.\n\n\n  return _config.urls.cdn + \"/i/\" + (src.protocol == 'https:' ? 's/' : '') + encodeURIComponent(src.host) + src.pathname + (src.search || '') + (src.hash || '');\n}\n\n},{\"./config\":13,\"./log\":29,\"./srcset\":36,\"./string\":38,\"./url\":45}],44:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.tryDecodeUriComponent_ = tryDecodeUriComponent_;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * DO NOT import the function from this file. Instead, import\n * tryDecodeUriComponent from `src/url.js`.\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nfunction tryDecodeUriComponent_(component, fallback) {\n  if (fallback === void 0) {\n    fallback = '';\n  }\n\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n},{}],45:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getWinOrigin = getWinOrigin;\nexports.parseUrlDeprecated = parseUrlDeprecated;\nexports.parseUrlWithA = parseUrlWithA;\nexports.appendEncodedParamStringToUrl = appendEncodedParamStringToUrl;\nexports.addParamToUrl = addParamToUrl;\nexports.addParamsToUrl = addParamsToUrl;\nexports.addMissingParamsToUrl = addMissingParamsToUrl;\nexports.serializeQueryString = serializeQueryString;\nexports.isSecureUrlDeprecated = isSecureUrlDeprecated;\nexports.assertHttpsUrl = assertHttpsUrl;\nexports.assertAbsoluteHttpOrHttpsUrl = assertAbsoluteHttpOrHttpsUrl;\nexports.parseQueryString = parseQueryString;\nexports.removeFragment = removeFragment;\nexports.getFragment = getFragment;\nexports.isProxyOrigin = isProxyOrigin;\nexports.getProxyServingType = getProxyServingType;\nexports.isLocalhostOrigin = isLocalhostOrigin;\nexports.isProtocolValid = isProtocolValid;\nexports.removeAmpJsParamsFromUrl = removeAmpJsParamsFromUrl;\nexports.removeSearch = removeSearch;\nexports.removeParamsFromSearch = removeParamsFromSearch;\nexports.getSourceUrl = getSourceUrl;\nexports.getSourceOrigin = getSourceOrigin;\nexports.resolveRelativeUrl = resolveRelativeUrl;\nexports.resolveRelativeUrlFallback_ = resolveRelativeUrlFallback_;\nexports.getCorsUrl = getCorsUrl;\nexports.checkCorsUrl = checkCorsUrl;\nexports.tryDecodeUriComponent = tryDecodeUriComponent;\nexports.SOURCE_ORIGIN_PARAM = void 0;\n\nvar _lruCache = require(\"./utils/lru-cache\");\n\nvar _object = require(\"./utils/object\");\n\nvar _string = require(\"./string\");\n\nvar _mode = require(\"./mode\");\n\nvar _types = require(\"./types\");\n\nvar _urlParseQueryString = require(\"./url-parse-query-string\");\n\nvar _urlTryDecodeUriComponent = require(\"./url-try-decode-uri-component\");\n\nvar _config = require(\"./config\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @type {!JsonObject}\n */\nvar SERVING_TYPE_PREFIX = (0, _object.dict)({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n  // Actions viewer\n  'action': true\n});\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\n\nvar a;\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\n\nvar cache;\n/** @private @const Matches amp_js_* parameters in query string. */\n\nvar AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n/** @private @const Matches amp_gsa parameters in query string. */\n\nvar AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n/** @private @const Matches amp_r parameters in query string. */\n\nvar AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n/** @private @const Matches amp_kit parameters in query string. */\n\nvar AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n/** @private @const Matches usqp parameters from goog experiment in query string. */\n\nvar GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\nvar INVALID_PROTOCOLS = [\n/*eslint no-script-url: 0*/\n'javascript:',\n/*eslint no-script-url: 0*/\n'data:',\n/*eslint no-script-url: 0*/\n'vbscript:'];\n/** @const {string} */\n\nvar SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\n\nexports.SOURCE_ORIGIN_PARAM = SOURCE_ORIGIN_PARAM;\n\nfunction getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n * @return {!Location}\n */\n\n\nfunction parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a =\n    /** @type {!HTMLAnchorElement} */\n    self.document.createElement('a');\n    cache = self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new _lruCache.LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, opt_nocache ? null : cache);\n}\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n * @return {!Location}\n * @restricted\n */\n\n\nfunction parseUrlWithA(a, url, opt_cache) {\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url; // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  var info =\n  /** @type {!Location} */\n  {\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null // Set below.\n\n  }; // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  } // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n\n\n  if (info.protocol == 'http:' && info.port == 80 || info.protocol == 'https:' && info.port == 443) {\n    info.port = '';\n    info.host = info.hostname;\n  } // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n\n\n  var origin;\n\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n\n  info.origin = origin; // Freeze during testing to avoid accidental mutation.\n\n  var frozen = (0, _mode.getMode)().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\n\n\nfunction appendEncodedParamStringToUrl(url, paramString, opt_addToFront) {\n  if (!paramString) {\n    return url;\n  }\n\n  var mainAndFragment = url.split('#', 2);\n  var mainAndQuery = mainAndFragment[0].split('?', 2);\n  var newUrl = mainAndQuery[0] + (mainAndQuery[1] ? opt_addToFront ? \"?\" + paramString + \"&\" + mainAndQuery[1] : \"?\" + mainAndQuery[1] + \"&\" + paramString : \"?\" + paramString);\n  newUrl += mainAndFragment[1] ? \"#\" + mainAndFragment[1] : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\n\n\nfunction addParamToUrl(url, key, value, opt_addToFront) {\n  var field = encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction addMissingParamsToUrl(url, params) {\n  var location = parseUrlDeprecated(url);\n  var existingParams = parseQueryString(location.search);\n  var paramsToAdd = (0, _object.dict)({});\n  var keys = Object.keys(params);\n\n  for (var i = 0; i < keys.length; i++) {\n    if (!(0, _object.hasOwn)(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n\n  return addParamsToUrl(url, paramsToAdd);\n}\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction serializeQueryString(params) {\n  var s = [];\n\n  for (var k in params) {\n    var v = params[k];\n\n    if (v == null) {\n      continue;\n    } else if ((0, _types.isArray)(v)) {\n      for (var i = 0; i < v.length; i++) {\n        var sv =\n        /** @type {string} */\n        v[i];\n        s.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(sv));\n      }\n    } else {\n      var _sv =\n      /** @type {string} */\n      v;\n      s.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(_sv));\n    }\n  }\n\n  return s.join('&');\n}\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\n\n\nfunction isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return url.protocol == 'https:' || url.hostname == 'localhost' || url.hostname == '127.0.0.1' || (0, _string.endsWith)(url.hostname, '.localhost');\n}\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\n\n\nfunction assertHttpsUrl(urlString, elementContext, sourceName) {\n  if (sourceName === void 0) {\n    sourceName = 'source';\n  }\n\n  (0, _log.userAssert)(urlString != null, '%s %s must be available', elementContext, sourceName); // (erwinm, #4560): type cast necessary until #4560 is fixed.\n\n  var theUrlString =\n  /** @type {string} */\n  urlString;\n  (0, _log.userAssert)(isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString), '%s %s must start with ' + '\"https://\" or \"//\" or be relative and served from ' + 'either https or from localhost. Invalid value: %s', elementContext, sourceName, theUrlString);\n  return theUrlString;\n}\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\n\n\nfunction assertAbsoluteHttpOrHttpsUrl(urlString) {\n  (0, _log.userAssert)(/^https?\\:/i.test(urlString), 'URL must start with \"http://\" or \"https://\". Invalid value: %s', urlString);\n  return parseUrlDeprecated(urlString).href;\n}\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * This function is implemented in a separate file to avoid a circular\n * dependency.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\n\n\nfunction parseQueryString(queryString) {\n  return (0, _urlParseQueryString.parseQueryString_)(queryString);\n}\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeFragment(url) {\n  var index = url.indexOf('#');\n\n  if (index == -1) {\n    return url;\n  }\n\n  return url.substring(0, index);\n}\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction getFragment(url) {\n  var index = url.indexOf('#');\n\n  if (index == -1) {\n    return '';\n  }\n\n  return url.substring(index);\n}\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\n\n\nfunction isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return _config.urls.cdnProxyRegex.test(url.origin);\n}\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\n\n\nfunction getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n\n  var path = url.pathname.split('/', 2);\n  return path[1];\n}\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\n\n\nfunction isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return _config.urls.localhostRegex.test(url.origin);\n}\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\n\n\nfunction isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeAmpJsParamsFromUrl(url) {\n  var parsed = parseUrlDeprecated(url);\n  var search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeSearch(url) {\n  var index = url.indexOf('?');\n\n  if (index == -1) {\n    return url;\n  }\n\n  var fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\n\n\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n\n  var search = urlSearch.replace(AMP_JS_PARAMS_REGEX, '').replace(AMP_GSA_PARAMS_REGEX, '').replace(AMP_R_PARAMS_REGEX, '').replace(AMP_KIT_PARAMS_REGEX, '').replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '').replace(/^[?&]/, ''); // Removes first ? or &.\n\n  return search ? '?' + search : '';\n}\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\n\n\nfunction removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n\n  var paramRegex = new RegExp(\"[?&]\" + paramName + \"=[^&]*\", 'g');\n  var search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\n\n\nfunction getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  } // Not a proxy URL - return the URL itself.\n\n\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  } // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n\n\n  var path = url.pathname.split('/');\n  var prefix = path[1];\n  (0, _log.userAssert)(SERVING_TYPE_PREFIX[prefix], 'Unknown path prefix in url %s', url.href);\n  var domainOrHttpsSignal = path[2];\n  var origin = domainOrHttpsSignal == 's' ? 'https://' + decodeURIComponent(path[3]) : 'http://' + decodeURIComponent(domainOrHttpsSignal); // Sanity test that what we found looks like a domain.\n\n  (0, _log.userAssert)(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return origin + path.join('/') + removeAmpJsParamsFromSearch(url.search) + (url.hash || '');\n}\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\n\n\nfunction getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\n\n\nfunction resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n\n  if (typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private Visible for testing.\n */\n\n\nfunction resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  var relativeUrl = parseUrlDeprecated(relativeUrlString); // Absolute URL.\n\n  if ((0, _string.startsWith)(relativeUrlString.toLowerCase(), relativeUrl.protocol)) {\n    return relativeUrl.href;\n  } // Protocol-relative URL.\n\n\n  if ((0, _string.startsWith)(relativeUrlString, '//')) {\n    return baseUrl.protocol + relativeUrlString;\n  } // Absolute path.\n\n\n  if ((0, _string.startsWith)(relativeUrlString, '/')) {\n    return baseUrl.origin + relativeUrlString;\n  } // Relative path.\n\n\n  return baseUrl.origin + baseUrl.pathname.replace(/\\/[^/]*$/, '/') + relativeUrlString;\n}\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\n\n\nfunction getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  var sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\n\n\nfunction checkCorsUrl(url) {\n  var parsedUrl = parseUrlDeprecated(url);\n  var query = parseQueryString(parsedUrl.search);\n  (0, _log.userAssert)(!(SOURCE_ORIGIN_PARAM in query), 'Source origin is not allowed in %s', url);\n}\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} opt_fallback\n * @return {string}\n */\n\n\nfunction tryDecodeUriComponent(component, opt_fallback) {\n  return (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(component, opt_fallback);\n}\n\n},{\"./config\":13,\"./log\":29,\"./mode\":31,\"./string\":38,\"./types\":41,\"./url-parse-query-string\":42,\"./url-try-decode-uri-component\":44,\"./utils/lru-cache\":48,\"./utils/object\":49}],46:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.areEqualOrdered = areEqualOrdered;\nexports.remove = remove;\nexports.findIndex = findIndex;\nexports.fromIterator = fromIterator;\nexports.pushIfNotExist = pushIfNotExist;\nexports.lastItem = lastItem;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nfunction areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (var i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\n\n\nfunction remove(array, shouldRemove) {\n  var removed = [];\n  var index = 0;\n\n  for (var i = 0; i < array.length; i++) {\n    var item = array[i];\n\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n\n      index++;\n    }\n  }\n\n  if (index < array.length) {\n    array.length = index;\n  }\n\n  return removed;\n}\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\n\n\nfunction findIndex(array, predicate) {\n  for (var i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\n\n\nfunction fromIterator(iterator) {\n  var array = [];\n\n  for (var e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n\n  return array;\n}\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @template T\n */\n\n\nfunction pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n  }\n}\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\n\n\nfunction lastItem(array) {\n  return array[array.length - 1];\n}\n\n},{}],47:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.once = once;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// TODO(rsimha, #15334): Enable this rule.\n\n/* eslint jsdoc/check-types: 0 */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nfunction once(fn) {\n  var evaluated = false;\n  var retValue = null;\n  var callback = fn;\n  return function () {\n    if (!evaluated) {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n\n    return retValue;\n  };\n}\n\n},{}],48:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.LruCache = void 0;\n\nvar _log = require(\"../log\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nvar TAG = 'lru-cache';\n/**\n * @template T\n */\n\nvar LruCache =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {number} capacity\n   */\n  function LruCache(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n    /** @private {number} */\n\n    this.size_ = 0;\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n\n    this.access_ = 0;\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n\n    this.cache_ = Object.create(null);\n  }\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n\n\n  var _proto = LruCache.prototype;\n\n  _proto.has = function has(key) {\n    return !!this.cache_[key];\n  }\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  ;\n\n  _proto.get = function get(key) {\n    var cacheable = this.cache_[key];\n\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n\n    return undefined;\n  }\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  ;\n\n  _proto.put = function put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n\n    this.cache_[key] = {\n      payload: payload,\n      access: this.access_\n    };\n    this.evict_();\n  }\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  ;\n\n  _proto.evict_ = function evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    (0, _log.dev)().warn(TAG, 'Trimming LRU cache');\n    var cache = this.cache_;\n    var oldest = this.access_ + 1;\n    var oldestKey;\n\n    for (var key in cache) {\n      var access = cache[key].access;\n\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  };\n\n  return LruCache;\n}();\n\nexports.LruCache = LruCache;\n\n},{\"../log\":29}],49:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.map = map;\nexports.dict = dict;\nexports.hasOwn = hasOwn;\nexports.ownProperty = ownProperty;\nexports.deepMerge = deepMerge;\nexports.omit = omit;\n\nvar _types = require(\"../types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nvar hasOwn_ = Object.prototype.hasOwnProperty;\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\n\nfunction map(opt_initial) {\n  var obj = Object.create(null);\n\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n\n  return obj;\n}\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\n\n\nfunction dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return (\n    /** @type {!JsonObject} */\n    opt_initial || {}\n  );\n}\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\n\n\nfunction hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\n\n\nfunction ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\n\n\nfunction deepMerge(target, source, depth) {\n  if (depth === void 0) {\n    depth = 10;\n  }\n\n  // Keep track of seen objects to detect recursive references.\n  var seen = [];\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n\n  var queue = [];\n  queue.push({\n    t: target,\n    s: source,\n    d: 0\n  }); // BFS to ensure objects don't have recursive references at shallower depths.\n\n  var _loop = function _loop() {\n    var _queue$shift = queue.shift(),\n        t = _queue$shift.t,\n        s = _queue$shift.s,\n        d = _queue$shift.d;\n\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n\n    seen.push(s);\n\n    if (t === s) {\n      return \"continue\";\n    }\n\n    if (d > depth) {\n      Object.assign(t, s);\n      return \"continue\";\n    }\n\n    Object.keys(s).forEach(function (key) {\n      var newValue = s[key]; // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n\n      if (hasOwn(t, key)) {\n        var oldValue = t[key];\n\n        if ((0, _types.isObject)(newValue) && (0, _types.isObject)(oldValue)) {\n          queue.push({\n            t: oldValue,\n            s: newValue,\n            d: d + 1\n          });\n          return;\n        }\n      }\n\n      t[key] = newValue;\n    });\n  };\n\n  while (queue.length > 0) {\n    var _ret = _loop();\n\n    if (_ret === \"continue\") continue;\n  }\n\n  return target;\n}\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\n\n\nfunction omit(o, props) {\n  return Object.keys(o).reduce(function (acc, key) {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n\n    return acc;\n  }, {});\n}\n\n},{\"../types\":41}],50:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A priority queue backed with sorted array.\n * @template T\n */\nvar PriorityQueue =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of PriorityQueue.\n   */\n  function PriorityQueue() {\n    /** @private @const {Array<{item: T, priority: number}>} */\n    this.queue_ = [];\n  }\n  /**\n   * Returns the max priority item without dequeueing it.\n   * @return {T}\n   */\n\n\n  var _proto = PriorityQueue.prototype;\n\n  _proto.peek = function peek() {\n    var l = this.queue_.length;\n\n    if (!l) {\n      return null;\n    }\n\n    return this.queue_[l - 1].item;\n  }\n  /**\n   * Enqueues an item with the given priority.\n   * @param {T} item\n   * @param {number} priority\n   */\n  ;\n\n  _proto.enqueue = function enqueue(item, priority) {\n    if (isNaN(priority)) {\n      throw new Error('Priority must not be NaN.');\n    }\n\n    var i = this.binarySearch_(priority);\n    this.queue_.splice(i, 0, {\n      item: item,\n      priority: priority\n    });\n  }\n  /**\n   * Returns index at which item with `target` priority should be inserted.\n   * @param {number} target\n   * @return {number}\n   * @private\n   */\n  ;\n\n  _proto.binarySearch_ = function binarySearch_(target) {\n    var i = -1;\n    var lo = 0;\n    var hi = this.queue_.length;\n\n    while (lo <= hi) {\n      i = Math.floor((lo + hi) / 2); // This means `target` is the new max priority in the queue.\n\n      if (i === this.queue_.length) {\n        break;\n      } // Stop searching once p[i] >= target AND p[i-1] < target.\n      // This way, we'll return the index of the first occurence of `target`\n      // priority (if any), which preserves FIFO order of same-priority items.\n\n\n      if (this.queue_[i].priority < target) {\n        lo = i + 1;\n      } else if (i > 0 && this.queue_[i - 1].priority >= target) {\n        hi = i - 1;\n      } else {\n        break;\n      }\n    }\n\n    return i;\n  }\n  /**\n   * @param {function(T)} callback\n   */\n  ;\n\n  _proto.forEach = function forEach(callback) {\n    var index = this.queue_.length;\n\n    while (index--) {\n      callback(this.queue_[index].item);\n    }\n  }\n  /**\n   * Dequeues the max priority item.\n   * Items with the same priority are dequeued in FIFO order.\n   * @return {T}\n   */\n  ;\n\n  _proto.dequeue = function dequeue() {\n    if (!this.queue_.length) {\n      return null;\n    }\n\n    return this.queue_.pop().item;\n  }\n  /**\n   * The number of items in the queue.\n   * @return {number}\n   */\n  ;\n\n  _createClass(PriorityQueue, [{\n    key: \"length\",\n    get: function get() {\n      return this.queue_.length;\n    }\n  }]);\n\n  return PriorityQueue;\n}();\n\nexports.default = PriorityQueue;\n\n},{}],51:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.tryResolve = tryResolve;\nexports.some = some;\nexports.LastAddedResolver = exports.Deferred = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nvar Deferred =\n/**\n * Creates an instance of Deferred.\n */\nfunction Deferred() {\n  var resolve, reject;\n  /**\n   * @const {!Promise<T>}\n   */\n\n  this.promise = new\n  /*OK*/\n  Promise(function (res, rej) {\n    resolve = res;\n    reject = rej;\n  });\n  /**\n   * @const {function(T=)}\n   */\n\n  this.resolve = resolve;\n  /**\n   * @const {function(*=)}\n   */\n\n  this.reject = reject;\n};\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\n\n\nexports.Deferred = Deferred;\n\nfunction tryResolve(fn) {\n  return new Promise(function (resolve) {\n    resolve(fn());\n  });\n}\n/**\n * Returns a promise which resolves if a threshold amount of the given promises\n * resolve, and rejects otherwise.\n * @param {!Array<!Promise>} promises The array of promises to test.\n * @param {number} count The number of promises that must resolve for the\n *     returned promise to resolve.\n * @return {!Promise} A promise that resolves if any of the given promises\n *     resolve, and which rejects otherwise.\n */\n\n\nfunction some(promises, count) {\n  if (count === void 0) {\n    count = 1;\n  }\n\n  return new Promise(function (resolve, reject) {\n    count = Math.max(count, 0);\n    var extra = promises.length - count;\n\n    if (extra < 0) {\n      reject(new Error('not enough promises to resolve'));\n    }\n\n    if (promises.length == 0) {\n      resolve([]);\n    }\n\n    var values = [];\n    var reasons = [];\n\n    var onFulfilled = function onFulfilled(value) {\n      if (values.length < count) {\n        values.push(value);\n      }\n\n      if (values.length == count) {\n        resolve(values);\n      }\n    };\n\n    var onRejected = function onRejected(reason) {\n      if (reasons.length <= extra) {\n        reasons.push(reason);\n      }\n\n      if (reasons.length > extra) {\n        reject(reasons);\n      }\n    };\n\n    for (var i = 0; i < promises.length; i++) {\n      Promise.resolve(promises[i]).then(onFulfilled, onRejected);\n    }\n  });\n}\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\n\n\nvar LastAddedResolver =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Array<!Promise>=} opt_promises\n   */\n  function LastAddedResolver(opt_promises) {\n    var resolve_, reject_;\n    /** @private @const {!Promise} */\n\n    this.promise_ = new Promise(function (resolve, reject) {\n      resolve_ = resolve;\n      reject_ = reject;\n    });\n    /** @private */\n\n    this.resolve_ = resolve_;\n    /** @private */\n\n    this.reject_ = reject_;\n    /** @private */\n\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (var i = 0; i < opt_promises.length; i++) {\n        this.add(opt_promises[i]);\n      }\n    }\n  }\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!Promise} promise\n   * @return {!Promise}\n   */\n\n\n  var _proto = LastAddedResolver.prototype;\n\n  _proto.add = function add(promise) {\n    var _this = this;\n\n    var countAtAdd = ++this.count_;\n    Promise.resolve(promise).then(function (result) {\n      if (_this.count_ === countAtAdd) {\n        _this.resolve_(result);\n      }\n    }, function (error) {\n      // Don't follow behavior of Promise.all and Promise.race error so that\n      // this will only reject when most recently added promise fails.\n      if (_this.count_ === countAtAdd) {\n        _this.reject_(error);\n      }\n    });\n    return this.promise_;\n  }\n  /** @override */\n  ;\n\n  _proto.then = function then(opt_resolve, opt_reject) {\n    return this.promise_.then(opt_resolve, opt_reject);\n  };\n\n  return LastAddedResolver;\n}();\n\nexports.LastAddedResolver = LastAddedResolver;\n\n},{}],52:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.throttle = throttle;\nexports.debounce = debounce;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Wraps a given callback and applies a rate limit.\n * It throttles the calls so that no consequent calls have time interval\n * smaller than the given minimal interval.\n *\n * @param {!Window} win\n * @param {function(...*)} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...*)}\n */\nfunction throttle(win, callback, minInterval) {\n  var locker = 0;\n  var nextCallArgs = null;\n  /**\n   * @param {!Object} args\n   */\n\n  function fire(args) {\n    nextCallArgs = null; // Lock the fire for minInterval milliseconds\n\n    locker = win.setTimeout(waiter, minInterval);\n    callback.apply(null, args);\n  }\n  /**\n   * Waiter function\n   */\n\n\n  function waiter() {\n    locker = 0; // If during the period there're invocations queued up, fire once.\n\n    if (nextCallArgs) {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (locker) {\n      nextCallArgs = args;\n    } else {\n      fire(args);\n    }\n  };\n}\n/**\n * Wraps a given callback and applies a wait timer, so that minInterval\n * milliseconds must pass since the last call before the callback is actually\n * invoked.\n *\n * @param {!Window} win\n * @param {function(...*)} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...*)}\n */\n\n\nfunction debounce(win, callback, minInterval) {\n  var locker = 0;\n  var timestamp = 0;\n  var nextCallArgs = null;\n  /**\n   * @param {?Array} args\n   */\n\n  function fire(args) {\n    nextCallArgs = null;\n    callback.apply(null, args);\n  }\n  /**\n   * Wait function for debounce\n   */\n\n\n  function waiter() {\n    locker = 0;\n    var remaining = minInterval - (win.Date.now() - timestamp);\n\n    if (remaining > 0) {\n      locker = win.setTimeout(waiter, remaining);\n    } else {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function () {\n    timestamp = win.Date.now();\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    nextCallArgs = args;\n\n    if (!locker) {\n      locker = win.setTimeout(waiter, minInterval);\n    }\n  };\n}\n\n},{}],53:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.Signals = void 0;\n\nvar _promise2 = require(\"./promise\");\n\nvar _object = require(\"./object\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object tracts signals and allows blocking until a signal has been\n * received.\n */\nvar Signals =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of Signals.\n   */\n  function Signals() {\n    /**\n     * A mapping from a signal name to the signal response: either time or\n     * an error.\n     * @private @const {!Object<string, (time|!Error)>}\n     */\n    this.map_ = (0, _object.map)();\n    /**\n     * A mapping from a signal name to the signal promise, resolve and reject.\n     * Only allocated when promise has been requested.\n     * @private {?Object<string, {\n     *   promise: !Promise,\n     *   resolve: (function(time)|undefined),\n     *   reject: (function(!Error)|undefined)\n     * }>}\n     */\n\n    this.promiseMap_ = null;\n  }\n  /**\n   * Returns the current known value of the signal. If signal is not yet\n   * available, `null` is returned.\n   * @param {string} name\n   * @return {number|!Error|null}\n   */\n\n\n  var _proto = Signals.prototype;\n\n  _proto.get = function get(name) {\n    var v = this.map_[name];\n    return v == null ? null : v;\n  }\n  /**\n   * Returns the promise that's resolved when the signal is triggered. The\n   * resolved value is the time of the signal.\n   * @param {string} name\n   * @return {!Promise<time>}\n   */\n  ;\n\n  _proto.whenSignal = function whenSignal(name) {\n    var promiseStruct = this.promiseMap_ && this.promiseMap_[name];\n\n    if (!promiseStruct) {\n      var result = this.map_[name];\n\n      if (result != null) {\n        // Immediately resolve signal.\n        var promise = typeof result == 'number' ? Promise.resolve(result) : Promise.reject(result);\n        promiseStruct = {\n          promise: promise\n        };\n      } else {\n        // Allocate the promise/resolver for when the signal arrives in the\n        // future.\n        var deferred = new _promise2.Deferred();\n        var _promise = deferred.promise,\n            resolve = deferred.resolve,\n            reject = deferred.reject;\n        promiseStruct = {\n          promise: _promise,\n          resolve: resolve,\n          reject: reject\n        };\n      }\n\n      if (!this.promiseMap_) {\n        this.promiseMap_ = (0, _object.map)();\n      }\n\n      this.promiseMap_[name] = promiseStruct;\n    }\n\n    return promiseStruct.promise;\n  }\n  /**\n   * Triggers the signal with the specified name on the element. The time is\n   * optional; if not provided, the current time is used. The associated\n   * promise is resolved with the resulting time.\n   * @param {string} name\n   * @param {time=} opt_time\n   */\n  ;\n\n  _proto.signal = function signal(name, opt_time) {\n    if (this.map_[name] != null) {\n      // Do not duplicate signals.\n      return;\n    }\n\n    var time = opt_time || Date.now();\n    this.map_[name] = time;\n    var promiseStruct = this.promiseMap_ && this.promiseMap_[name];\n\n    if (promiseStruct && promiseStruct.resolve) {\n      promiseStruct.resolve(time);\n      promiseStruct.resolve = undefined;\n      promiseStruct.reject = undefined;\n    }\n  }\n  /**\n   * Rejects the signal. Indicates that the signal will never succeed. The\n   * associated signal is rejected.\n   * @param {string} name\n   * @param {!Error} error\n   */\n  ;\n\n  _proto.rejectSignal = function rejectSignal(name, error) {\n    if (this.map_[name] != null) {\n      // Do not duplicate signals.\n      return;\n    }\n\n    this.map_[name] = error;\n    var promiseStruct = this.promiseMap_ && this.promiseMap_[name];\n\n    if (promiseStruct && promiseStruct.reject) {\n      promiseStruct.reject(error);\n      promiseStruct.resolve = undefined;\n      promiseStruct.reject = undefined;\n    }\n  }\n  /**\n   * Resets all signals.\n   * @param {string} name\n   */\n  ;\n\n  _proto.reset = function reset(name) {\n    if (this.map_[name]) {\n      delete this.map_[name];\n    } // Reset promise it has already been resolved.\n\n\n    var promiseStruct = this.promiseMap_ && this.promiseMap_[name];\n\n    if (promiseStruct && !promiseStruct.resolve) {\n      delete this.promiseMap_[name];\n    }\n  };\n\n  return Signals;\n}();\n\nexports.Signals = Signals;\n\n},{\"./object\":49,\"./promise\":51}],54:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.toStructuredCloneable = toStructuredCloneable;\nexports.fromStructuredCloneable = fromStructuredCloneable;\nexports.getViewerInterceptResponse = getViewerInterceptResponse;\nexports.setupInput = setupInput;\nexports.setupInit = setupInit;\nexports.setupAMPCors = setupAMPCors;\nexports.setupJsonFetchInit = setupJsonFetchInit;\nexports.assertSuccess = assertSuccess;\nexports.getViewerAuthTokenIfAvailable = getViewerAuthTokenIfAvailable;\n\nvar _services = require(\"../services\");\n\nvar _log = require(\"../log\");\n\nvar _object = require(\"./object\");\n\nvar _array = require(\"./array\");\n\nvar _url = require(\"../url\");\n\nvar _mode = require(\"../mode\");\n\nvar _types = require(\"../types\");\n\nvar _experiments = require(\"../experiments\");\n\nvar _formDataWrapper = require(\"../form-data-wrapper\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @private @const {!Array<string>} */\nvar allowedMethods_ = ['GET', 'POST'];\n/** @private @const {!Array<function(*):boolean>} */\n\nvar allowedJsonBodyTypes_ = [_types.isArray, _types.isObject];\n/**\n * Serializes a fetch request so that it can be passed to `postMessage()`,\n * i.e., can be cloned using the\n * [structured clone algorithm](http://mdn.io/Structured_clone_algorithm).\n *\n * The request is serialized in the following way:\n *\n * 1. If the `init.body` is a `FormData`, set content-type header to\n * `multipart/form-data` and transform `init.body` into an\n * `!Array<!Array<string>>` holding the list of form entries, where each\n * element in the array is a form entry (key-value pair) represented as a\n * 2-element array.\n *\n * 2. Return a new object having properties `input` and the transformed\n * `init`.\n *\n * The serialized request is assumed to be de-serialized in the following way:\n *\n * 1.If content-type header starts with `multipart/form-data`\n * (case-insensitive), transform the entry array in `init.body` into a\n * `FormData` object.\n *\n * 2. Pass `input` and transformed `init` to `fetch` (or the constructor of\n * `Request`).\n *\n * Currently only `FormData` used in `init.body` is handled as it's the only\n * type being used in AMP runtime that needs serialization. The `Headers` type\n * also needs serialization, but callers should not be passing `Headers`\n * object in `init`, as that fails `fetchPolyfill` on browsers that don't\n * support fetch. Some serialization-needing types for `init.body` such as\n * `ArrayBuffer` and `Blob` are already supported by the structured clone\n * algorithm. Other serialization-needing types such as `URLSearchParams`\n * (which is not supported in IE and Safari) and `FederatedCredentials` are\n * not used in AMP runtime.\n *\n * @param {string} input The URL of the XHR to convert to structured\n *     cloneable.\n * @param {!FetchInitDef} init The options of the XHR to convert to structured\n *     cloneable.\n * @return {{input: string, init: !FetchInitDef}} The serialized structurally-\n *     cloneable request.\n * @private\n */\n\nfunction toStructuredCloneable(input, init) {\n  var newInit = Object.assign({}, init);\n\n  if ((0, _formDataWrapper.isFormDataWrapper)(init.body)) {\n    var wrapper =\n    /** @type {!FormDataWrapperInterface} */\n    init.body;\n    newInit.headers['Content-Type'] = 'multipart/form-data;charset=utf-8';\n    newInit.body = (0, _array.fromIterator)(wrapper.entries());\n  }\n\n  return {\n    input: input,\n    init: newInit\n  };\n}\n/**\n * De-serializes a fetch response that was made possible to be passed to\n * `postMessage()`, i.e., can be cloned using the\n * [structured clone algorithm](http://mdn.io/Structured_clone_algorithm).\n *\n * The response is assumed to be serialized in the following way:\n *\n * 1. Transform the entries in the headers of the response into an\n * `!Array<!Array<string>>` holding the list of header entries, where each\n * element in the array is a header entry (key-value pair) represented as a\n * 2-element array. The header key is case-insensitive.\n *\n * 2. Include the header entry list and `status` and `statusText` properties\n * of the response in as `headers`, `status` and `statusText` properties of\n * `init`.\n *\n * 3. Include the body of the response serialized as string in `body`.\n *\n * 4. Return a new object having properties `body` and `init`.\n *\n * The response is de-serialized in the following way:\n *\n * 1. If the `Response` type is supported and `responseType` is not\n * document, pass `body` and `init` directly to the constructor of `Response`.\n *\n * 2. Otherwise, populate a fake XHR object to pass to `FetchResponse` as if\n * the response is returned by the fetch polyfill.\n *\n * 3. If `responseType` is `document`, also parse the body and populate\n * `responseXML` as a `Document` type.\n *\n * @param {JsonObject|string|undefined} response The structurally-cloneable\n *     response to convert back to a regular Response.\n * @param {string|undefined} responseType The original response type used to\n *     initiate the XHR.\n * @return {!Response} The deserialized regular response.\n * @private\n */\n\n\nfunction fromStructuredCloneable(response, responseType) {\n  (0, _log.userAssert)((0, _types.isObject)(response), 'Object expected: %s', response);\n  var isDocumentType = responseType == 'document';\n\n  if (!isDocumentType) {\n    // Use native `Response` type if available for performance. If response\n    // type is `document`, we must fall back to `FetchResponse` polyfill\n    // because callers would then rely on the `responseXML` property being\n    // present, which is not supported by the Response type.\n    return new Response(response['body'], response['init']);\n  }\n\n  var lowercasedHeaders = (0, _object.map)();\n  var data = {\n    status: 200,\n    statusText: 'OK',\n\n    /**\n     * @param {string} name\n     * @return {string}\n     */\n    getResponseHeader: function getResponseHeader(name) {\n      return lowercasedHeaders[String(name).toLowerCase()] || null;\n    }\n  };\n\n  if (response['init']) {\n    var init = response['init'];\n\n    if ((0, _types.isArray)(init.headers)) {\n      init.headers.forEach(function (entry) {\n        var headerName = entry[0];\n        var headerValue = entry[1];\n        lowercasedHeaders[String(headerName).toLowerCase()] = String(headerValue);\n      });\n    }\n\n    if (init.status) {\n      data.status = parseInt(init.status, 10);\n    }\n\n    if (init.statusText) {\n      data.statusText = String(init.statusText);\n    }\n  }\n\n  return new Response(response['body'] ? String(response['body']) : '', data);\n}\n/**\n * Intercepts the XHR and proxies it through the viewer if necessary.\n *\n * XHRs are intercepted if all of the following are true:\n * - The AMP doc is in single doc mode\n * - The requested resource is not a 1p request.\n * - The viewer has the `xhrInterceptor` capability\n * - The Viewer is a trusted viewer or AMP is currently in developement mode\n * - The AMP doc is opted-in for XHR interception (`<html>` tag has\n *   `allow-xhr-interception` attribute)\n *\n * @param {!Window} win\n * @param {?../service/ampdoc-impl.AmpDoc} ampdocSingle\n * @param {string} input The URL of the XHR which may get intercepted.\n * @param {!FetchInitDef} init The options of the XHR which may get\n *     intercepted.\n * @return {!Promise<!Response|undefined>}\n *     A response returned by the interceptor if XHR is intercepted or\n *     `Promise<undefined>` otherwise.\n * @private\n */\n\n\nfunction getViewerInterceptResponse(win, ampdocSingle, input, init) {\n  if (!ampdocSingle) {\n    return Promise.resolve();\n  }\n\n  var whenUnblocked = init.prerenderSafe ? Promise.resolve() : ampdocSingle.whenFirstVisible();\n\n  var viewer = _services.Services.viewerForDoc(ampdocSingle);\n\n  var urlIsProxy = (0, _url.isProxyOrigin)(input);\n  var viewerCanIntercept = viewer.hasCapability('xhrInterceptor');\n  var interceptorDisabledForLocalDev = init.bypassInterceptorForDev && (0, _mode.getMode)(win).localDev;\n\n  if (urlIsProxy || !viewerCanIntercept || interceptorDisabledForLocalDev) {\n    return whenUnblocked;\n  }\n\n  var htmlElement = ampdocSingle.getRootNode().documentElement;\n  var docOptedIn = htmlElement.hasAttribute('allow-xhr-interception');\n\n  if (!docOptedIn) {\n    return whenUnblocked;\n  }\n\n  return whenUnblocked.then(function () {\n    return viewer.isTrustedViewer();\n  }).then(function (viewerTrusted) {\n    if (!(viewerTrusted || (0, _mode.getMode)(win).localDev || (0, _experiments.isExperimentOn)(win, 'untrusted-xhr-interception'))) {\n      return;\n    }\n\n    var messagePayload = (0, _object.dict)({\n      'originalRequest': toStructuredCloneable(input, init)\n    });\n    return viewer.sendMessageAwaitResponse('xhr', messagePayload).then(function (response) {\n      return fromStructuredCloneable(response, init.responseType);\n    });\n  });\n}\n/**\n * Sets up URL based on ampCors\n * @param {!Window} win\n * @param {string} input\n * @param {!FetchInitDef} init The options of the XHR which may get\n * intercepted.\n * @return {string}\n */\n\n\nfunction setupInput(win, input, init) {\n  (0, _log.devAssert)(typeof input == 'string', 'Only URL supported: %s', input);\n\n  if (init.ampCors !== false) {\n    input = (0, _url.getCorsUrl)(win, input);\n  }\n\n  return input;\n}\n/**\n * Sets up and normalizes the FetchInitDef\n *\n * @param {?FetchInitDef=} opt_init Fetch options object.\n * @param {string=} opt_accept The HTTP Accept header value.\n * @return {!FetchInitDef}\n */\n\n\nfunction setupInit(opt_init, opt_accept) {\n  var init = opt_init || {}; // In particular, Firefox does not tolerate `null` values for\n  // `credentials`.\n\n  var creds = init.credentials;\n  (0, _log.devAssert)(creds === undefined || creds == 'include' || creds == 'omit', 'Only credentials=include|omit support: %s', creds);\n  init.method = normalizeMethod_(init.method);\n  init.headers = init.headers || (0, _object.dict)({});\n\n  if (opt_accept) {\n    init.headers['Accept'] = opt_accept;\n  } // In edge a `TypeMismatchError` is thrown when body is set to null.\n\n\n  (0, _log.devAssert)(init.body !== null, 'fetch `body` can not be `null`');\n  return init;\n}\n/**\n *\n * Sets up AMPSpecific CORS headers.\n * @param {!Window} win\n * @param {string} input\n * @param {?FetchInitDef=} init\n * @return {!FetchInitDef}\n */\n\n\nfunction setupAMPCors(win, input, init) {\n  init = init || {}; // For some same origin requests, add AMP-Same-Origin: true header to allow\n  // publishers to validate that this request came from their own origin.\n\n  var currentOrigin = (0, _url.getWinOrigin)(win);\n  var targetOrigin = (0, _url.parseUrlDeprecated)(input).origin;\n\n  if (currentOrigin == targetOrigin) {\n    init['headers'] = init['headers'] || {};\n    init['headers']['AMP-Same-Origin'] = 'true';\n  }\n\n  return init;\n}\n/**\n * @param {?FetchInitDef=} init\n * @return {!FetchInitDef}\n */\n\n\nfunction setupJsonFetchInit(init) {\n  var fetchInit = setupInit(init, 'application/json');\n\n  if (fetchInit.method == 'POST' && !(0, _formDataWrapper.isFormDataWrapper)(fetchInit.body)) {\n    // Assume JSON strict mode where only objects or arrays are allowed\n    // as body.\n    (0, _log.devAssert)(allowedJsonBodyTypes_.some(function (test) {\n      return test(fetchInit.body);\n    }), 'body must be of type object or array. %s', fetchInit.body); // Content should be 'text/plain' to avoid CORS preflight.\n\n    fetchInit.headers['Content-Type'] = fetchInit.headers['Content-Type'] || 'text/plain;charset=utf-8';\n    var headerContentType = fetchInit.headers['Content-Type']; // Cast is valid, because we checked that it is not form data above.\n\n    if (headerContentType === 'application/x-www-form-urlencoded') {\n      fetchInit.body = (0, _url.serializeQueryString)(\n      /** @type {!JsonObject} */\n      fetchInit.body);\n    } else {\n      fetchInit.body = JSON.stringify(\n      /** @type {!JsonObject} */\n      fetchInit.body);\n    }\n  }\n\n  return fetchInit;\n}\n/**\n * Normalized method name by uppercasing.\n * @param {string|undefined} method\n * @return {string}\n * @private\n */\n\n\nfunction normalizeMethod_(method) {\n  if (method === undefined) {\n    return 'GET';\n  }\n\n  method = method.toUpperCase();\n  (0, _log.devAssert)(allowedMethods_.includes(method), 'Only one of %s is currently allowed. Got %s', allowedMethods_.join(', '), method);\n  return method;\n}\n/**\n * If 415 or in the 5xx range.\n * @param {number} status\n * @return {boolean}\n */\n\n\nfunction isRetriable(status) {\n  return status == 415 || status >= 500 && status < 600;\n}\n/**\n * Returns the response if successful or otherwise throws an error.\n * @param {!Response} response\n * @return {!Promise<!Response>}\n * @private Visible for testing\n */\n\n\nfunction assertSuccess(response) {\n  return new Promise(function (resolve) {\n    if (response.ok) {\n      return resolve(response);\n    }\n\n    var status = response.status;\n    var err = (0, _log.user)().createError(\"HTTP error \" + status);\n    err.retriable = isRetriable(status); // TODO(@jridgewell, #9448): Callers who need the response should\n    // skip processing.\n\n    err.response = response;\n    throw err;\n  });\n}\n/**\n * Returns a promise resolving to a string identity token if the element\n * contains the 'crossorigin' attribute and the amp-viewer-assistance extension\n * is present. Resolves to undefined otherwise.\n * @param {!Element} element\n * @return {!Promise<undefined>}\n */\n\n\nfunction getViewerAuthTokenIfAvailable(element) {\n  var crossOriginAttr = element.getAttribute('crossorigin');\n\n  if (crossOriginAttr && crossOriginAttr.trim() === 'amp-viewer-auth-token-via-post') {\n    return _services.Services.viewerAssistanceForDocOrNull(element).then(function (va) {\n      (0, _log.userAssert)(va, 'crossorigin=\"amp-viewer-auth-token-post\" ' + 'requires amp-viewer-assistance extension.');\n      return va.getIdTokenPromise();\n    }) // If crossorigin attr is present, resolve with token or empty string.\n    .then(function (token) {\n      return token || '';\n    }).catch(function () {\n      return '';\n    });\n  } // If crossorigin attribute is missing, always resolve with undefined.\n\n\n  return Promise.resolve(undefined);\n}\n\n},{\"../experiments\":21,\"../form-data-wrapper\":23,\"../log\":29,\"../mode\":31,\"../services\":35,\"../types\":41,\"../url\":45,\"./array\":46,\"./object\":49}],55:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.invokeWebWorker = invokeWebWorker;\nexports.ampWorkerForTesting = ampWorkerForTesting;\n\nvar _mode = require(\"../mode\");\n\nvar _services = require(\"../services\");\n\nvar _extensionLocation = require(\"../service/extension-location\");\n\nvar _log = require(\"../log\");\n\nvar _service = require(\"../service\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TAG = 'web-worker';\n/**\n * @typedef {{method: string, resolve: !Function, reject: !Function}}\n */\n\nvar PendingMessageDef;\n/**\n * Invokes function named `method` with args `opt_args` on the web worker\n * and returns a Promise that will be resolved with the function's return value.\n *\n * If `opt_localWin` is provided, method will be executed in a scope limited\n * to other invocations with `opt_localWin`.\n *\n * Note: Currently only works in a single entry point (amp-bind.js).\n *\n * @param {!Window} win\n * @param {string} method\n * @param {!Array=} opt_args\n * @param {!Window=} opt_localWin\n * @return {!Promise}\n */\n\nfunction invokeWebWorker(win, method, opt_args, opt_localWin) {\n  if (!win.Worker) {\n    return Promise.reject('Worker not supported in window.');\n  }\n\n  (0, _service.registerServiceBuilder)(win, 'amp-worker', AmpWorker);\n  var worker = (0, _service.getService)(win, 'amp-worker');\n  return worker.sendMessage_(method, opt_args || [], opt_localWin);\n}\n/**\n * @param {!Window} win\n * @return {!AmpWorker}\n * @visibleForTesting\n */\n\n\nfunction ampWorkerForTesting(win) {\n  (0, _service.registerServiceBuilder)(win, 'amp-worker', AmpWorker);\n  return (0, _service.getService)(win, 'amp-worker');\n}\n/**\n * A Promise-based API wrapper around a single Web Worker.\n * @private\n */\n\n\nvar AmpWorker =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Window} win\n   */\n  function AmpWorker(win) {\n    var _this = this;\n\n    /** @const @private {!Window} */\n    this.win_ = win;\n    /** @const @private {!../service/xhr-impl.Xhr} */\n\n    this.xhr_ = _services.Services.xhrFor(win); // Use `testLocation` for testing with iframes. @see testing/iframe.js.\n\n    var loc = win.location;\n\n    if ((0, _mode.getMode)().test && win.testLocation) {\n      loc = win.testLocation;\n    } // Use RTV to make sure we fetch prod/canary/experiment correctly.\n\n\n    var useLocal = (0, _mode.getMode)().localDev || (0, _mode.getMode)().test;\n    var useRtvVersion = !useLocal;\n    var url = (0, _extensionLocation.calculateEntryPointScriptUrl)(loc, 'ww', useLocal, useRtvVersion);\n    (0, _log.dev)().fine(TAG, 'Fetching web worker from', url);\n    /** @private {Worker} */\n\n    this.worker_ = null;\n    /** @const @private {!Promise} */\n\n    this.fetchPromise_ = this.xhr_.fetchText(url, {\n      ampCors: false,\n      bypassInterceptorForDev: (0, _mode.getMode)().localDev\n    }).then(function (res) {\n      return res.text();\n    }).then(function (text) {\n      // Workaround since Worker constructor only accepts same origin URLs.\n      var blob = new win.Blob([text + '\\n//# sourceurl=' + url], {\n        type: 'text/javascript'\n      });\n      var blobUrl = win.URL.createObjectURL(blob);\n      _this.worker_ = new win.Worker(blobUrl);\n      _this.worker_.onmessage = _this.receiveMessage_.bind(_this);\n    });\n    /**\n     * Array of in-flight messages pending response from worker.\n     * @const @private {!Object<number, PendingMessageDef>}\n     */\n\n    this.messages_ = {};\n    /**\n     * Monotonically increasing integer that increments on each message.\n     * @private {number}\n     */\n\n    this.counter_ = 0;\n    /**\n     * Array of top-level and local windows passed into `invokeWebWorker`.\n     * Used to uniquely identify windows for scoping worker functions when\n     * a single worker is used for multiple windows (i.e. FIE).\n     * @const @private {!Array<!Window>}\n     */\n\n    this.windows_ = [win];\n  }\n  /**\n   * Sends a method invocation request to the worker and returns a Promise.\n   * @param {string} method\n   * @param {!Array} args\n   * @param {Window=} opt_localWin\n   * @return {!Promise}\n   * @private\n   * @restricted\n   */\n\n\n  var _proto = AmpWorker.prototype;\n\n  _proto.sendMessage_ = function sendMessage_(method, args, opt_localWin) {\n    var _this2 = this;\n\n    return this.fetchPromise_.then(function () {\n      return new Promise(function (resolve, reject) {\n        var id = _this2.counter_++;\n        _this2.messages_[id] = {\n          method: method,\n          resolve: resolve,\n          reject: reject\n        };\n\n        var scope = _this2.idForWindow_(opt_localWin || _this2.win_);\n\n        var message =\n        /** @type {ToWorkerMessageDef} */\n        {\n          method: method,\n          args: args,\n          scope: scope,\n          id: id\n        };\n\n        _this2.worker_.\n        /*OK*/\n        postMessage(message);\n      });\n    });\n  }\n  /**\n   * Receives the result of a method invocation from the worker and resolves\n   * the Promise returned from the corresponding `sendMessage_()` call.\n   * @param {!MessageEvent} event\n   * @private\n   */\n  ;\n\n  _proto.receiveMessage_ = function receiveMessage_(event) {\n    var _event$data =\n    /** @type {FromWorkerMessageDef} */\n    event.data,\n        method = _event$data.method,\n        returnValue = _event$data.returnValue,\n        id = _event$data.id;\n    var message = this.messages_[id];\n\n    if (!message) {\n      (0, _log.dev)().error(TAG, \"Received unexpected message (\" + method + \", \" + id + \") from worker.\");\n      return;\n    }\n\n    (0, _log.devAssert)(method == message.method, 'Received mismatched method ' + (\"(\" + method + \", \" + id + \"), expected \" + message.method + \".\"));\n    message.resolve(returnValue);\n    delete this.messages_[id];\n  }\n  /**\n   * @return {boolean}\n   * @visibleForTesting\n   */\n  ;\n\n  _proto.hasPendingMessages = function hasPendingMessages() {\n    return Object.keys(this.messages_).length > 0;\n  }\n  /**\n   * Returns an identifier for `win`, unique for set of windows seen so far.\n   * @param {!Window} win\n   * @return {number}\n   * @private\n   */\n  ;\n\n  _proto.idForWindow_ = function idForWindow_(win) {\n    var index = this.windows_.indexOf(win);\n\n    if (index >= 0) {\n      return index;\n    } else {\n      return this.windows_.push(win) - 1;\n    }\n  }\n  /**\n   * @return {!Promise}\n   * @visibleForTesting\n   */\n  ;\n\n  _proto.fetchPromiseForTesting = function fetchPromiseForTesting() {\n    return this.fetchPromise_;\n  };\n\n  return AmpWorker;\n}();\n\n},{\"../log\":29,\"../mode\":31,\"../service\":33,\"../service/extension-location\":34,\"../services\":35}],56:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.cssEscape = cssEscape;\n\n/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  } // Nil is the null terminator (group 1) capture\n\n\n  if (nil) {\n    return \"\\uFFFD\";\n  } // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n\n\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' ';\n  } // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n\n\n  return '\\\\' + match;\n}\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\n\n\nfunction cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n\n},{}]},{},[2])\n\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LayoutPriority} from '../../../src/layout';\n\n/**\n * The <amp-bind-macro> element is used to define an expression macro that can\n * be called from other amp-bind expressions within the document.\n */\nexport class AmpBindMacro extends AMP.BaseElement {\n  /** @override */\n  getLayoutPriority() {\n    // Loads after other content.\n    return LayoutPriority.METADATA;\n  }\n\n  /** @override */\n  isAlwaysFixed() {\n    return true;\n  }\n\n  /** @override */\n  isLayoutSupported(unusedLayout) {\n    return true;\n  }\n\n  /** @override */\n  renderOutsideViewport() {\n    // We want the macro to be available wherever it is in the document.\n    return true;\n  }\n\n  /**\n   * @return {string} Returns a string to identify this tag. May not be unique\n   *     if the element name is not unique.\n   * @protected\n   */\n  getName_() {\n    return (\n      '<amp-bind-macro> ' + (this.element.getAttribute('id') || '<unknown id>')\n    );\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AmpBindMacro} from './amp-bind-macro';\nimport {AmpState} from './amp-state';\nimport {Bind} from './bind-impl';\n\n/** @const {string} */\nconst TAG = 'amp-bind';\n\nAMP.extension(TAG, '0.1', function(AMP) {\n  AMP.registerServiceForDoc('bind', Bind);\n  AMP.registerElement('amp-state', AmpState);\n  AMP.registerElement('amp-bind-macro', AmpBindMacro);\n});\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ActionTrust} from '../../../src/action-constants';\nimport {LayoutPriority} from '../../../src/layout';\nimport {Services} from '../../../src/services';\nimport {\n  UrlReplacementPolicy,\n  batchFetchJsonFor,\n} from '../../../src/batched-json';\nimport {createCustomEvent} from '../../../src/event-helper';\nimport {dev, devAssert, userAssert} from '../../../src/log';\nimport {dict, map} from '../../../src/utils/object';\nimport {getSourceOrigin} from '../../../src/url';\nimport {getViewerAuthTokenIfAvailable} from '../../../src/utils/xhr-utils';\nimport {isJsonScriptTag} from '../../../src/dom';\nimport {toggle} from '../../../src/style';\nimport {tryParseJson} from '../../../src/json';\n\nexport class AmpState extends AMP.BaseElement {\n  /**\n   * @param {!Element} element\n   */\n  constructor(element) {\n    super(element);\n\n    /**\n     * JSON in child <script>, if any.\n     * - `undefined` if the script has never been parsed.\n     * - `null` or `!JsonObject` once the script has been parsed.\n     * @private {?JsonObject|undefined}\n     */\n    this.localData_ = undefined;\n  }\n\n  /** @override */\n  getLayoutPriority() {\n    // Loads after other content.\n    return LayoutPriority.METADATA;\n  }\n\n  /** @override */\n  isAlwaysFixed() {\n    return true;\n  }\n\n  /** @override */\n  isLayoutSupported(unusedLayout) {\n    return true;\n  }\n\n  /** @override */\n  buildCallback() {\n    toggle(this.element, /* opt_display */ false);\n    this.element.setAttribute('aria-hidden', 'true');\n\n    const {element} = this;\n    if (element.hasAttribute('overridable')) {\n      Services.bindForDocOrNull(element).then(bind => {\n        devAssert(bind);\n        bind.addOverridableKey(element.getAttribute('id'));\n      });\n    }\n    // Parse child <script> tag and/or fetch JSON from `src` attribute.\n    // The latter is allowed to overwrite the former.\n    this.parseAndUpdate();\n    if (this.element.hasAttribute('src')) {\n      this.fetchAndUpdate_(/* isInit */ true);\n    }\n\n    this.registerAction(\n      'refresh',\n      () => {\n        userAssert(\n          this.element.hasAttribute('src'),\n          'Can\\'t refresh <amp-state> without \"src\" attribute.'\n        );\n        this.fetchAndUpdate_(/* isInit */ false, /* opt_refresh */ true);\n      },\n      ActionTrust.HIGH\n    );\n  }\n\n  /** @override */\n  mutatedAttributesCallback(mutations) {\n    if (!this.getAmpDoc().hasBeenVisible()) {\n      const TAG = this.getName_();\n      dev().error(TAG, 'ampdoc must be visible before mutation.');\n      return;\n    }\n    // \"src\" attribute may be missing if mutated with a non-primitive.\n    if (mutations['src'] !== undefined && this.element.hasAttribute('src')) {\n      this.fetchAndUpdate_(/* isInit */ false);\n    }\n  }\n\n  /** @override */\n  renderOutsideViewport() {\n    // We want the state data to be available wherever it is in the document.\n    return true;\n  }\n\n  /**\n   * Parses JSON in child <script> and updates state.\n   * @return {!Promise}\n   */\n  parseAndUpdate() {\n    if (this.localData_ === undefined) {\n      this.localData_ = this.parse_();\n      if (this.localData_ !== null) {\n        return this.updateState_(this.localData_, /* isInit */ true);\n      }\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Parses JSON in child <script> and returns it.\n   * @return {?JsonObject}\n   * @private\n   */\n  parse_() {\n    const {children} = this.element;\n    if (children.length == 0) {\n      return null;\n    }\n    const TAG = this.getName_();\n    if (children.length != 1) {\n      this.user().error(TAG, 'Should contain exactly one <script> child.');\n      return null;\n    }\n    const firstChild = children[0];\n    if (!isJsonScriptTag(firstChild)) {\n      this.user().error(\n        TAG,\n        'State should be in a <script> tag with type=\"application/json\".'\n      );\n      return null;\n    }\n    return tryParseJson(firstChild.textContent, e => {\n      this.user().error(TAG, 'Failed to parse state. Is it valid JSON?', e);\n    });\n  }\n\n  /**\n   * Wrapper to stub during testing.\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {!UrlReplacementPolicy} policy\n   * @param {boolean=} opt_refresh\n   * @param {string=} token\n   * @return {!Promise<!JsonObject|!Array<JsonObject>>}\n   * @private\n   */\n  fetch_(ampdoc, policy, opt_refresh, token = undefined) {\n    return batchFetchJsonFor(\n      ampdoc,\n      this.element,\n      /* opt_expr */ undefined,\n      policy,\n      opt_refresh,\n      token\n    );\n  }\n\n  /**\n   * Transforms and prepares the fetch request.\n   * @param {boolean} isInit\n   * @param {boolean=} opt_refresh\n   * @return {!Promise<!JsonObject|!Array<JsonObject>>}\n   */\n  prepareAndSendFetch_(isInit, opt_refresh) {\n    const {element} = this;\n    const ampdoc = this.getAmpDoc();\n\n    const src = element.getAttribute('src');\n    const isCorsFetch =\n      getSourceOrigin(src) !== getSourceOrigin(ampdoc.win.location);\n    // Require opt-in for URL variable replacements on CORS fetches triggered\n    // by [src] mutation. @see spec/amp-var-substitutions.md\n    const policy =\n      isCorsFetch && !isInit\n        ? UrlReplacementPolicy.OPT_IN\n        : UrlReplacementPolicy.ALL;\n\n    return getViewerAuthTokenIfAvailable(element).then(token =>\n      this.fetch_(ampdoc, policy, opt_refresh, token).catch(error => {\n        const event = error\n          ? createCustomEvent(\n              this.win,\n              'amp-state.error',\n              dict({'response': error.response})\n            )\n          : null;\n        // Trigger \"fetch-error\" event on fetch failure.\n        const actions = Services.actionServiceForDoc(element);\n        actions.trigger(element, 'fetch-error', event, ActionTrust.LOW);\n      })\n    );\n  }\n\n  /**\n   * @param {boolean} isInit\n   * @param {boolean=} opt_refresh\n   * @return {!Promise<undefined>}\n   * @private\n   */\n  fetchAndUpdate_(isInit, opt_refresh) {\n    // Don't fetch in prerender mode.\n    return this.getAmpDoc()\n      .whenFirstVisible()\n      .then(() => this.prepareAndSendFetch_(isInit, opt_refresh))\n      .then(json => this.updateState_(json, isInit));\n  }\n\n  /**\n   * @param {*} json\n   * @param {boolean} isInit\n   * @return {!Promise}\n   * @private\n   */\n  updateState_(json, isInit) {\n    if (json === undefined || json === null) {\n      return Promise.resolve();\n    }\n    const id = userAssert(this.element.id, '<amp-state> must have an id.');\n    return Services.bindForDocOrNull(this.element).then(bind => {\n      devAssert(bind);\n      const state = /** @type {!JsonObject} */ (map());\n      state[id] = json;\n      // As a rule, initialization should skip evaluation.\n      // If we're not initializing then this must be a mutation, so we must\n      // skip <amp-state> evaluation to prevent update cycles.\n      bind.setState(state, /* skipEval */ isInit, /* skipAmpState */ !isInit);\n    });\n  }\n\n  /**\n   * @return {string} Returns a string to identify this tag. May not be unique\n   *     if the element id is not unique.\n   * @private\n   */\n  getName_() {\n    return '<amp-state> ' + (this.element.getAttribute('id') || '<unknown id>');\n  }\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * TODO(choumx, #19657): Remove/replace with DOM polling in integration tests.\n * @enum {string}\n */\nexport const BindEvents = {\n  INITIALIZE: 'amp:bind:initialize',\n  RESCAN_TEMPLATE: 'amp:bind:rescan-template',\n  SET_STATE: 'amp:bind:setState',\n};\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AmpEvents} from '../../../src/amp-events';\nimport {BindEvents} from './bind-events';\nimport {BindValidator} from './bind-validator';\nimport {ChunkPriority, chunk} from '../../../src/chunk';\nimport {Deferred} from '../../../src/utils/promise';\nimport {RAW_OBJECT_ARGS_KEY} from '../../../src/action-constants';\nimport {Services} from '../../../src/services';\nimport {Signals} from '../../../src/utils/signals';\nimport {\n  closestAncestorElementBySelector,\n  iterateCursor,\n  whenUpgradedToCustomElement,\n} from '../../../src/dom';\nimport {createCustomEvent, getDetail} from '../../../src/event-helper';\nimport {debounce} from '../../../src/utils/rate-limit';\nimport {deepEquals, getValueForExpr, parseJson} from '../../../src/json';\nimport {deepMerge, dict, map} from '../../../src/utils/object';\nimport {dev, devAssert, user} from '../../../src/log';\nimport {findIndex, remove} from '../../../src/utils/array';\nimport {getMode} from '../../../src/mode';\nimport {installServiceInEmbedScope} from '../../../src/service';\nimport {invokeWebWorker} from '../../../src/web-worker/amp-worker';\nimport {isAmp4Email} from '../../../src/format';\nimport {isArray, isFiniteNumber, isObject, toArray} from '../../../src/types';\nimport {reportError} from '../../../src/error';\nimport {rewriteAttributesForElement} from '../../../src/url-rewrite';\nimport {startsWith} from '../../../src/string';\nimport {whenDocumentReady} from '../../../src/document-ready';\n\n/** @const {string} */\nconst TAG = 'amp-bind';\n\n/**\n * Regular expression that identifies AMP CSS classes.\n * Includes 'i-amphtml-', '-amp-', and 'amp-' prefixes.\n * @type {!RegExp}\n */\nconst AMP_CSS_RE = /^(i?-)?amp(html)?-/;\n\n/**\n * Maximum depth for state merge.\n * @type {number}\n */\nconst MAX_MERGE_DEPTH = 10;\n\n/** @const {!Object<string, !Object<string, boolean>>} */\nconst FORM_VALUE_PROPERTIES = {\n  'INPUT': {\n    'checked': true,\n    'value': true,\n  },\n  'OPTION': {\n    'selected': true,\n  },\n  'TEXTAREA': {\n    'text': true,\n  },\n};\n\n/**\n * A bound property, e.g. [property]=\"expression\".\n * `previousResult` is the result of this expression during the last evaluation.\n * @typedef {{property: string, expressionString: string, previousResult: (BindExpressionResultDef|undefined)}}\n */\nlet BoundPropertyDef;\n\n/**\n * A tuple containing a single element and all of its bound properties.\n * @typedef {{boundProperties: !Array<BoundPropertyDef>, element: !Element}}\n */\nlet BoundElementDef;\n\n/**\n * A map of tag names to arrays of attributes that do not have non-bind\n * counterparts. For instance, amp-carousel allows a `[slide]` attribute,\n * but does not support a `slide` attribute.\n * @const {!Object<string, !Array<string>>}\n */\nconst BIND_ONLY_ATTRIBUTES = map({\n  'AMP-CAROUSEL': ['slide'],\n  // TODO (#18875): add is-layout-container to validator file for amp-list\n  'AMP-LIST': ['state', 'is-layout-container'],\n  'AMP-SELECTOR': ['selected'],\n});\n\n/**\n * Elements that opt-out of tree walking in favor of rescan() with {fast: true}.\n * @const {!Array<string>}\n */\nconst FAST_RESCAN_TAGS = ['AMP-LIST'];\n\n/**\n * Bind is an ampdoc-scoped service that handles the Bind lifecycle, from\n * scanning for bindings to evaluating expressions to mutating elements.\n * @implements {../../../src/service.EmbeddableService}\n */\nexport class Bind {\n  /**\n   * If `opt_win` is provided, scans its document for bindings instead.\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {!Window=} opt_win\n   */\n  constructor(ampdoc, opt_win) {\n    // TODO(#22733): remove opt_win subroooting once ampdoc-fie is launched.\n\n    /** @const {!../../../src/service/ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampdoc;\n\n    /** @const @private {!Window} */\n    this.win_ = ampdoc.win;\n\n    /**\n     * The window containing the document to scan.\n     * May differ from the `ampdoc`'s window e.g. in FIE.\n     * @const @private {!Window}\n     */\n    this.localWin_ = opt_win || ampdoc.win;\n\n    /**\n     * Array of ActionInvocation.sequenceId values that have been invoked.\n     * Used to ensure that only one \"AMP.setState\" or \"AMP.pushState\" action\n     * may be triggered per event. Periodically cleared.\n     * @const @private {!Array<number>}\n     */\n    this.actionSequenceIds_ = [];\n\n    /** @const @private {!Function} */\n    this.eventuallyClearActionSequenceIds_ = debounce(\n      this.win_,\n      () => {\n        this.actionSequenceIds_.length = 0;\n      },\n      5000\n    );\n\n    /** @private {!Array<BoundElementDef>} */\n    this.boundElements_ = [];\n\n    /**\n     * Maps expression string to the element(s) that contain it.\n     * @private @const {!Object<string, !Array<!Element>>}\n     */\n    this.expressionToElements_ = map();\n\n    /** @private {!../../../src/service/history-impl.History} */\n    this.history_ = Services.historyForDoc(ampdoc);\n\n    /** @private {!Array<string>} */\n    this.overridableKeys_ = [];\n\n    /**\n     * Upper limit on total number of bindings.\n     *\n     * The initial value is set to 1000 which, based on ~2ms expression parse\n     * time, caps \"time to interactive\" at ~2s after page load.\n     *\n     * User interactions can add new bindings (e.g. infinite scroll), so this\n     * can increase over time to a final limit of 2000 bindings.\n     *\n     * @private {number}\n     */\n    this.maxNumberOfBindings_ = 1000;\n\n    /** @const @private {!../../../src/service/resources-interface.ResourcesInterface} */\n    this.resources_ = Services.resourcesForDoc(ampdoc);\n\n    /**\n     * The current values of all bound expressions on the page.\n     * @const @private {!JsonObject}\n     */\n    this.state_ = /** @type {!JsonObject} */ (map());\n\n    /** @const {!../../../src/service/timer-impl.Timer} */\n    this.timer_ = Services.timerFor(this.win_);\n\n    /** @private {?./bind-validator.BindValidator} */\n    this.validator_ = null;\n\n    /** @const @private {!../../../src/service/viewer-interface.ViewerInterface} */\n    this.viewer_ = Services.viewerForDoc(this.ampdoc);\n    this.viewer_.onMessageRespond('premutate', this.premutate_.bind(this));\n\n    /**\n     * Resolved when the service finishes scanning the document for bindings.\n     * @const @private {Promise}\n     */\n    this.initializePromise_ = ampdoc\n      .whenFirstVisible()\n      .then(() => {\n        if (opt_win) {\n          // In FIE, scan the document node of the iframe window.\n          const {document} = opt_win;\n          return whenDocumentReady(document).then(() => document);\n        } else {\n          // Otherwise, scan the root node of the ampdoc.\n          return ampdoc.whenReady().then(() => ampdoc.getRootNode());\n        }\n      })\n      .then(root => {\n        return this.initialize_(root);\n      });\n\n    /** @const @private {!Deferred} */\n    this.addMacrosDeferred_ = new Deferred();\n\n    /** @private {Promise} */\n    this.setStatePromise_ = null;\n\n    /** @private @const {!../../../src/utils/signals.Signals} */\n    this.signals_ = new Signals();\n\n    // Install debug tools.\n    const g = self.AMP;\n    g.printState = g.printState || this.debugPrintState_.bind(this);\n    g.setState = g.setState || (state => this.setState(state));\n    g.eval = g.eval || this.debugEvaluate_.bind(this);\n  }\n\n  /**\n   * @param {!Window} embedWin\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @nocollapse\n   */\n  static installInEmbedWindow(embedWin, ampdoc) {\n    installServiceInEmbedScope(embedWin, 'bind', new Bind(ampdoc, embedWin));\n  }\n\n  /**\n   * @return {!../../../src/utils/signals.Signals}\n   */\n  signals() {\n    return this.signals_;\n  }\n\n  /**\n   * Merges `state` into the current state and immediately triggers an\n   * evaluation unless `opt_skipEval` is false.\n   * @param {!JsonObject} state\n   * @param {boolean=} opt_skipEval\n   * @param {boolean=} opt_skipAmpState\n   * @return {!Promise}\n   */\n  setState(state, opt_skipEval, opt_skipAmpState) {\n    dev().info(TAG, 'setState (init=%s):', opt_skipEval, state);\n\n    try {\n      deepMerge(this.state_, state, MAX_MERGE_DEPTH);\n    } catch (e) {\n      user().error(TAG, 'Failed to merge result from AMP.setState().', e);\n    }\n\n    if (opt_skipEval) {\n      return Promise.resolve();\n    }\n\n    const promise = this.initializePromise_\n      .then(() => this.evaluate_())\n      .then(results => this.apply_(results, opt_skipAmpState));\n\n    if (getMode().test) {\n      promise.then(() => {\n        this.dispatchEventForTesting_(BindEvents.SET_STATE);\n      });\n    }\n\n    return (this.setStatePromise_ = promise);\n  }\n\n  /**\n   * Executes an `AMP.setState()` or `AMP.pushState()` action.\n   * @param {!../../../src/service/action-impl.ActionInvocation} invocation\n   * @return {!Promise}\n   */\n  invoke(invocation) {\n    const {args, event, method, sequenceId, tagOrTarget} = invocation;\n\n    // Store the sequenceId values of action invocations and only allow one\n    // setState() or pushState() event per sequence.\n    if (this.actionSequenceIds_.includes(sequenceId)) {\n      user().error(TAG, 'One state action allowed per event.');\n      return Promise.resolve();\n    }\n    this.actionSequenceIds_.push(sequenceId);\n    // Flush stored sequence IDs five seconds after the last invoked action.\n    this.eventuallyClearActionSequenceIds_();\n\n    const expression = args[RAW_OBJECT_ARGS_KEY];\n    if (expression) {\n      // Increment bindings limit by 500 on each invocation to a max of 2000.\n      this.maxNumberOfBindings_ = Math.min(\n        2000,\n        Math.max(1000, this.maxNumberOfBindings_ + 500)\n      );\n\n      this.signals_.signal('FIRST_MUTATE');\n\n      const scope = dict();\n      if (event && getDetail(/** @type {!Event} */ (event))) {\n        scope['event'] = getDetail(/** @type {!Event} */ (event));\n      }\n      switch (method) {\n        case 'setState':\n          return this.setStateWithExpression(expression, scope);\n        case 'pushState':\n          return this.pushStateWithExpression(expression, scope);\n        default:\n          return Promise.reject(\n            dev().createError('Unrecognized method: %s.%s', tagOrTarget, method)\n          );\n      }\n    } else {\n      user().error(\n        'AMP-BIND',\n        'Please use the object-literal syntax, ' +\n          'e.g. \"AMP.setState({foo: \\'bar\\'})\" instead of ' +\n          '\"AMP.setState(foo=\\'bar\\')\".'\n      );\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Parses and evaluates an expression with a given scope and merges the\n   * resulting object into current state.\n   * @param {string} expression\n   * @param {!JsonObject} scope\n   * @return {!Promise}\n   */\n  setStateWithExpression(expression, scope) {\n    dev().info(TAG, 'setState:', expression);\n    this.setStatePromise_ = this.evaluateExpression_(expression, scope)\n      .then(result => this.setState(result))\n      .then(() => this.getDataForHistory_())\n      .then(data => {\n        // Don't bother calling History.replace with empty data.\n        if (data) {\n          this.history_.replace(data);\n        }\n      });\n    return this.setStatePromise_;\n  }\n\n  /**\n   * Same as setStateWithExpression() except also pushes new history.\n   * Popping the new history stack entry will restore the values of variables\n   * in `expression`.\n   * @param {string} expression\n   * @param {!JsonObject} scope\n   * @return {!Promise}\n   */\n  pushStateWithExpression(expression, scope) {\n    dev().info(TAG, 'pushState:', expression);\n    return this.evaluateExpression_(expression, scope).then(result => {\n      // Store the current values of each referenced variable in `expression`\n      // so that we can restore them on history-pop.\n      const oldState = map();\n      Object.keys(result).forEach(variable => {\n        const value = this.state_[variable];\n        // Store a deep copy of `value` to make sure `oldState` isn't\n        // modified by subsequent setState() actions.\n        oldState[variable] = this.copyJsonObject_(value);\n      });\n\n      const onPop = () => this.setState(oldState);\n      return this.setState(result)\n        .then(() => this.getDataForHistory_())\n        .then(data => {\n          this.history_.push(onPop, data);\n        });\n    });\n  }\n\n  /**\n   * Returns data that should be saved in browser history on AMP.setState() or\n   * AMP.pushState(). This enables features like restoring browser tabs.\n   * @return {!Promise<?JsonObject>}\n   */\n  getDataForHistory_() {\n    const data = dict({\n      'data': dict({'amp-bind': this.state_}),\n      'title': this.localWin_.document.title,\n    });\n    if (!this.viewer_.isEmbedded()) {\n      // CC doesn't recognize !JsonObject as a subtype of (JsonObject|null).\n      return /** @type {!Promise<?JsonObject>} */ (Promise.resolve(data));\n    }\n    // Only pass state for history updates to trusted viewers, since they\n    // may contain user data e.g. form input.\n    return this.viewer_.isTrustedViewer().then(trusted => {\n      return trusted ? data : null;\n    });\n  }\n\n  /**\n   * Removes bindings from `removedElements` and adds new bindings in\n   * `addedElements`.\n   *\n   * If `options.update` is true, evaluates and applies changes to\n   * `addedElements` after adding new bindings.\n   *\n   * If `options.fast` is true, uses a faster scan method that requires\n   * (1) elements with bindings to have the attribute `i-amphtml-binding` and\n   * (2) the parent element tag name be listed in FAST_RESCAN_TAGS.\n   *\n   * @param {!Array<!Element>} addedElements\n   * @param {!Array<!Element>} removedElements\n   * @param {BindRescanOptionsDef=} options\n   * @return {!Promise} Resolved when all operations complete. If they don't\n   * complete within `options.timeout` (default=2000), promise is rejected.\n   */\n  rescan(addedElements, removedElements, options = {}) {\n    // * In non-fast mode, wait for initial tree walk to avoid racy double\n    //   scanning of `addedElements` which may cause duplicate bindings.\n    // * In fast mode, the initial tree walk skips subtrees of FAST_RESCAN_TAGS\n    //   so only wait for <amp-bind-macro> setup (much faster!).\n    const waitFor = options.fast\n      ? this.addMacrosDeferred_.promise\n      : this.initializePromise_;\n\n    return waitFor.then(() =>\n      this.timer_.timeoutPromise(\n        options.timeout || 2000,\n        this.rescan_(addedElements, removedElements, options),\n        'Timed out waiting for amp-bind to rescan.'\n      )\n    );\n  }\n\n  /**\n   * @param {!Array<!Element>} addedElements\n   * @param {!Array<!Element>} removedElements\n   * @param {!BindRescanOptionsDef} options\n   * @return {!Promise}\n   * @private\n   */\n  rescan_(addedElements, removedElements, options) {\n    dev().info(TAG, 'rescan: ', addedElements, removedElements, options);\n\n    const rescanPromise = options.fast\n      ? this.fastScan_(addedElements, removedElements)\n      : this.slowScan_(addedElements, removedElements);\n\n    return rescanPromise.then(() => {\n      if (options.update) {\n        return this.evaluate_().then(results =>\n          this.applyElements_(results, addedElements)\n        );\n      }\n    });\n  }\n\n  /**\n   * @param {!Array<!Element>} addedElements\n   * @param {!Array<!Element>} removedElements\n   * @return {!Promise}\n   * @private\n   */\n  fastScan_(addedElements, removedElements) {\n    // Sync remove bindings from internal state first, but don't chain on\n    // returned promise (worker message) as an optimization.\n    const removePromise = this.removeBindingsForNodes_(removedElements);\n\n    // Scan `addedElements` and descendants for bindings.\n    const bindings = [];\n    const elementsToScan = addedElements.filter(el =>\n      el.hasAttribute('i-amphtml-binding')\n    );\n    addedElements.forEach(el => {\n      const children = el.querySelectorAll('[i-amphtml-binding]');\n      Array.prototype.push.apply(elementsToScan, children);\n    });\n    const quota = this.maxNumberOfBindings_ - this.numberOfBindings();\n    for (let i = 0; i < elementsToScan.length; i++) {\n      const el = elementsToScan[i];\n      if (this.scanElement_(el, quota - bindings.length, bindings)) {\n        break;\n      }\n    }\n\n    removePromise.then(removed => {\n      dev().info(\n        TAG,\n        'rescan.fast: delta=%s, total=%s',\n        bindings.length - removed,\n        this.numberOfBindings()\n      );\n    });\n\n    if (bindings.length > 0) {\n      return this.sendBindingsToWorker_(bindings);\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  /**\n   * Returns the stringified value of the global state for a given field-based\n   * expression, e.g. \"foo.bar.baz\".\n   * @param {string} expr\n   * @return {string}\n   */\n  getStateValue(expr) {\n    const value = getValueForExpr(this.state_, expr);\n    if (isObject(value) || isArray(value)) {\n      return JSON.stringify(/** @type {JsonObject} */ (value));\n    } else {\n      return String(value);\n    }\n  }\n\n  /**\n   * Scans the root node (and array of optional nodes) for bindings.\n   * @param {!Node} root\n   * @return {!Promise}\n   * @private\n   */\n  initialize_(root) {\n    // Disallow URL property bindings in AMP4EMAIL.\n    const allowUrlProperties = !isAmp4Email(this.localWin_.document);\n    this.validator_ = new BindValidator(allowUrlProperties);\n\n    // The web worker's evaluator also has an instance of BindValidator\n    // that should be initialized with the same `allowUrlProperties` value.\n    return this.ww_('bind.init', [allowUrlProperties])\n      .then(() => {\n        return Promise.all([\n          this.addMacros_().then(() => this.addMacrosDeferred_.resolve()),\n          this.addBindingsForNodes_([root]),\n        ]);\n      })\n      .then(() => {\n        // Listen for DOM updates (e.g. template render) to rescan for bindings.\n        root.addEventListener(AmpEvents.DOM_UPDATE, e => this.onDomUpdate_(e));\n      })\n      .then(() => {\n        const ampStates = root.querySelectorAll('AMP-STATE');\n        // Force all query-able <amp-state> elements to parse local data instead\n        // of waiting for runtime to build them all.\n        const whenBuilt = false;\n        const whenParsed = toArray(ampStates).map(el => {\n          return whenUpgradedToCustomElement(el)\n            .then(() => el.getImpl(whenBuilt))\n            .then(impl => impl.parseAndUpdate());\n        });\n        return Promise.all(whenParsed);\n      })\n      .then(() => {\n        // In dev mode, check default values against initial expression results.\n        if (getMode().development) {\n          return this.evaluate_().then(results => this.verify_(results));\n        }\n        // Bind is \"ready\" when its initialization completes _and_ all <amp-state>\n        // elements' local data is parsed and processed (not remote data).\n        this.viewer_.sendMessage('bindReady', undefined);\n        this.dispatchEventForTesting_(BindEvents.INITIALIZE);\n      });\n  }\n\n  /**\n   * The current number of bindings.\n   * @return {number}\n   * @visibleForTesting\n   */\n  numberOfBindings() {\n    return this.boundElements_.reduce((number, boundElement) => {\n      return number + boundElement.boundProperties.length;\n    }, 0);\n  }\n\n  /**\n   * @param {number} value\n   * @visibleForTesting\n   */\n  setMaxNumberOfBindingsForTesting(value) {\n    this.maxNumberOfBindings_ = value;\n  }\n\n  /** @return {!../../../src/service/history-impl.History} */\n  historyForTesting() {\n    return this.history_;\n  }\n\n  /**\n   * Calls setState(s), where s is data.state with the non-overridable keys\n   * removed.\n   * @param {!JsonObject} data\n   * @return {!Promise}\n   * @private\n   */\n  premutate_(data) {\n    const ignoredKeys = [];\n    return this.initializePromise_.then(() => {\n      Object.keys(data['state']).forEach(key => {\n        if (!this.overridableKeys_.includes(key)) {\n          delete data['state'][key];\n          ignoredKeys.push(key);\n        }\n      });\n      if (ignoredKeys.length > 0) {\n        user().warn(\n          TAG,\n          'Some state keys could not be premutated ' +\n            'because they are missing the overridable attribute: ' +\n            ignoredKeys.join(', ')\n        );\n      }\n      return this.setState(data['state']);\n    });\n  }\n\n  /**\n   * Marks the given key as overridable so that it can be overriden by\n   * a premutate message from the viewer.\n   * @param {string} key\n   */\n  addOverridableKey(key) {\n    this.overridableKeys_.push(key);\n  }\n\n  /**\n   * Scans the document for <amp-bind-macro> elements, and adds them to the\n   * bind-evaluator.\n   *\n   * Returns a promise that resolves after macros have been added.\n   *\n   * @return {!Promise<number>}\n   * @private\n   */\n  addMacros_() {\n    // TODO(choumx, #17194): One-time query selector can miss dynamically\n    // created elements. Should do what <amp-state> does.\n    const elements = this.ampdoc.getBody().querySelectorAll('AMP-BIND-MACRO');\n    const macros = /** @type {!Array<!BindMacroDef>} */ ([]);\n    iterateCursor(elements, element => {\n      const argumentNames = (element.getAttribute('arguments') || '')\n        .split(',')\n        .map(s => s.trim());\n      macros.push({\n        id: element.getAttribute('id'),\n        argumentNames,\n        expressionString: element.getAttribute('expression'),\n      });\n    });\n    if (macros.length == 0) {\n      return Promise.resolve(0);\n    } else {\n      return this.ww_('bind.addMacros', [macros]).then(errors => {\n        // Report macros that failed to parse (e.g. expression size exceeded).\n        errors.forEach((e, i) => {\n          this.reportWorkerError_(\n            e,\n            `${TAG}: Parsing amp-bind-macro failed.`,\n            elements[i]\n          );\n        });\n        return macros.length;\n      });\n    }\n  }\n\n  /**\n   * For each node in an array, scans it and its descendants for bindings.\n   * This function is not idempotent.\n   *\n   * Returns a promise that resolves with the number of bindings added upon\n   * completion.\n   *\n   * @param {!Array<!Node>} nodes\n   * @return {!Promise<number>}\n   * @private\n   */\n  addBindingsForNodes_(nodes) {\n    if (!nodes.length) {\n      return Promise.resolve(0);\n    }\n\n    // For each node, scan it for bindings and store them.\n    const scanPromises = nodes.map(node => {\n      // Limit number of total bindings (unless in local manual testing).\n      const limit =\n        getMode().localDev && !getMode().test\n          ? Number.POSITIVE_INFINITY\n          : this.maxNumberOfBindings_ - this.numberOfBindings();\n\n      return this.scanNode_(node, limit).then(results => {\n        const {bindings, limitExceeded} = results;\n        if (limitExceeded) {\n          this.emitMaxBindingsExceededError_();\n        }\n        return bindings;\n      });\n    });\n\n    // Once all scans are complete, combine the bindings and ask web-worker to\n    // evaluate expressions in a single RPC.\n    return Promise.all(scanPromises).then(results => {\n      // `results` is a 2D array where results[i] is an array of bindings.\n      // Flatten this into a 1D array of bindings via concat.\n      const bindings = Array.prototype.concat.apply([], results);\n      return bindings.length > 0 ? this.sendBindingsToWorker_(bindings) : 0;\n    });\n  }\n\n  /** Emits console error stating that the binding limit was exceeded. */\n  emitMaxBindingsExceededError_() {\n    dev().expectedError(\n      TAG,\n      'Maximum number of bindings reached ' +\n        '(%s). Additional elements with bindings will be ignored.',\n      this.maxNumberOfBindings_\n    );\n  }\n\n  /**\n   * Sends new bindings to the web worker for parsing.\n   * @param {!Array<!BindBindingDef>} bindings\n   * @return {!Promise<number>}\n   */\n  sendBindingsToWorker_(bindings) {\n    return this.ww_('bind.addBindings', [bindings]).then(parseErrors => {\n      // Report each parse error.\n      Object.keys(parseErrors).forEach(expressionString => {\n        const elements = this.expressionToElements_[expressionString];\n        if (elements.length > 0) {\n          this.reportWorkerError_(\n            parseErrors[expressionString],\n            `${TAG}: Expression compile error in \"${expressionString}\".`,\n            elements[0]\n          );\n        }\n      });\n      return bindings.length;\n    });\n  }\n\n  /**\n   * For each node in an array, removes all bindings for it and its descendants.\n   *\n   * Returns a promise that resolves with the number of removed bindings upon\n   * completion.\n   *\n   * @param {!Array<!Node>} nodes\n   * @return {!Promise<number>}\n   * @private\n   */\n  removeBindingsForNodes_(nodes) {\n    if (!nodes.length) {\n      return Promise.resolve(0);\n    }\n\n    // Eliminate bound elements that are descendants of `nodes`.\n    remove(this.boundElements_, boundElement => {\n      for (let i = 0; i < nodes.length; i++) {\n        if (nodes[i].contains(boundElement.element)) {\n          return true;\n        }\n      }\n      return false;\n    });\n    // Eliminate elements from the expression to elements map that\n    // have node as an ancestor. Delete expressions that are no longer\n    // bound to elements.\n    const deletedExpressions = /** @type {!Array<string>} */ ([]);\n    for (const expression in this.expressionToElements_) {\n      const elements = this.expressionToElements_[expression];\n      remove(elements, element => {\n        for (let i = 0; i < nodes.length; i++) {\n          if (nodes[i].contains(element)) {\n            return true;\n          }\n        }\n        return false;\n      });\n      if (elements.length == 0) {\n        deletedExpressions.push(expression);\n        delete this.expressionToElements_[expression];\n      }\n    }\n\n    // Remove the bindings from the evaluator.\n    const removed = deletedExpressions.length;\n    if (removed > 0) {\n      return this.ww_('bind.removeBindingsWithExpressionStrings', [\n        deletedExpressions,\n      ]).then(() => removed);\n    } else {\n      return Promise.resolve(0);\n    }\n  }\n\n  /**\n   * Scans `node` for attributes that conform to bind syntax and returns\n   * a tuple containing bound elements and binding data for the evaluator.\n   * @param {!Node} node\n   * @param {number} limit\n   * @return {!Promise<{bindings: !Array<!BindBindingDef>, limitExceeded: boolean}>}\n   * @private\n   */\n  scanNode_(node, limit) {\n    /** @type {!Array<!BindBindingDef>} */\n    const bindings = [];\n    const doc = devAssert(\n      node.nodeType == Node.DOCUMENT_NODE ? node : node.ownerDocument,\n      'ownerDocument is null.'\n    );\n    // Third and fourth params of `createTreeWalker` are not optional on IE11.\n    const walker = doc.createTreeWalker(\n      node,\n      NodeFilter.SHOW_ELEMENT,\n      null,\n      /* entityReferenceExpansion */ false\n    );\n    // Set to true if number of bindings in `node` exceeds `limit`.\n    let limitExceeded = false;\n    // Helper function for scanning the tree walker's next node.\n    // Returns true if the walker has no more nodes.\n    const scanNextNode_ = () => {\n      const node = walker.currentNode;\n      if (!node) {\n        return true;\n      }\n      // If `node` is a Document, it will be scanned first (despite\n      // NodeFilter.SHOW_ELEMENT). Skip it.\n      if (node.nodeType !== Node.ELEMENT_NODE) {\n        return !walker.nextNode();\n      }\n      const element = dev().assertElement(node);\n      const remainingQuota = limit - bindings.length;\n      if (this.scanElement_(element, remainingQuota, bindings)) {\n        limitExceeded = true;\n      }\n      // Elements in FAST_RESCAN_TAGS opt-out of \"slow\" tree walking in favor of\n      // rescan() with {fast: true} for better performance. Note that only\n      // children are opted-out (e.g. amp-list children, not amp-list itself).\n      const next = FAST_RESCAN_TAGS.includes(node.nodeName)\n        ? this.skipSubtree_(walker)\n        : walker.nextNode();\n      return !next || limitExceeded;\n    };\n\n    return new Promise(resolve => {\n      const chunktion = idleDeadline => {\n        let completed = false;\n        // If `requestIdleCallback` is available, scan elements until\n        // idle time runs out.\n        if (idleDeadline && !idleDeadline.didTimeout) {\n          while (idleDeadline.timeRemaining() > 1 && !completed) {\n            completed = scanNextNode_();\n          }\n        } else {\n          // If `requestIdleCallback` isn't available, scan elements in buckets.\n          // Bucket size is a magic number that fits within a single frame.\n          const bucketSize = 250;\n          for (let i = 0; i < bucketSize && !completed; i++) {\n            completed = scanNextNode_();\n          }\n        }\n        // If we scanned all elements, resolve. Otherwise, continue chunking.\n        if (completed) {\n          resolve({bindings, limitExceeded});\n        } else {\n          chunk(this.ampdoc, chunktion, ChunkPriority.LOW);\n        }\n      };\n      chunk(this.ampdoc, chunktion, ChunkPriority.LOW);\n    });\n  }\n\n  /**\n   * Skips the subtree at the walker's current node and returns the next node\n   * in document order, if any. Otherwise, returns null.\n   * @param {!TreeWalker} walker\n   * @return {?Node}\n   * @private\n   */\n  skipSubtree_(walker) {\n    for (let n = walker.currentNode; n; n = walker.parentNode()) {\n      const sibling = walker.nextSibling();\n      if (sibling) {\n        return sibling;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Scans the element for bindings and adds up to |quota| to `outBindings`.\n   * Also updates ivars `boundElements_` and `expressionToElements_`.\n   * @param {!Element} element\n   * @param {number} quota\n   * @param {!Array<!BindBindingDef>} outBindings\n   * @return {boolean} Returns true if `element` contains more than `quota`\n   *     bindings. Otherwise, returns false.\n   */\n  scanElement_(element, quota, outBindings) {\n    let quotaExceeded = false;\n    const boundProperties = this.boundPropertiesInElement_(element);\n    if (boundProperties.length > quota) {\n      boundProperties.length = quota;\n      quotaExceeded = true;\n    }\n    if (boundProperties.length > 0) {\n      this.boundElements_.push({element, boundProperties});\n    }\n    const {tagName} = element;\n    boundProperties.forEach(boundProperty => {\n      const {property, expressionString} = boundProperty;\n      outBindings.push({tagName, property, expressionString});\n      if (!this.expressionToElements_[expressionString]) {\n        this.expressionToElements_[expressionString] = [];\n      }\n      this.expressionToElements_[expressionString].push(element);\n    });\n    return quotaExceeded;\n  }\n\n  /**\n   * Returns bound properties for an element.\n   * @param {!Element} element\n   * @return {!Array<{property: string, expressionString: string}>}\n   * @private\n   */\n  boundPropertiesInElement_(element) {\n    const boundProperties = [];\n    const attrs = element.attributes;\n    for (let i = 0, numberOfAttrs = attrs.length; i < numberOfAttrs; i++) {\n      const attr = attrs[i];\n      const boundProperty = this.boundPropertyInAttribute_(attr, element);\n      if (boundProperty) {\n        boundProperties.push(boundProperty);\n      }\n    }\n    return boundProperties;\n  }\n\n  /**\n   * Returns the bound property and expression string within a given attribute,\n   * if it exists. Otherwise, returns null.\n   * @param {!Attr} attribute\n   * @param {!Element} element\n   * @return {?{property: string, expressionString: string}}\n   * @private\n   */\n  boundPropertyInAttribute_(attribute, element) {\n    const tag = element.tagName;\n    const attr = attribute.name;\n\n    let property;\n    if (attr.length > 2 && attr[0] === '[' && attr[attr.length - 1] === ']') {\n      property = attr.substr(1, attr.length - 2);\n    } else if (startsWith(attr, 'data-amp-bind-')) {\n      property = attr.substr(14);\n      // Ignore `data-amp-bind-foo` if `[foo]` already exists.\n      if (element.hasAttribute(`[${property}]`)) {\n        return null;\n      }\n    }\n\n    if (property) {\n      if (this.validator_.canBind(tag, property)) {\n        return {property, expressionString: attribute.value};\n      } else {\n        const err = user().createError(\n          '%s: Binding to [%s] on <%s> is not allowed.',\n          TAG,\n          property,\n          tag\n        );\n        this.reportError_(err, element);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Evaluates a single expression and returns its result.\n   * @param {string} expression\n   * @param {!JsonObject} scope\n   * @return {!Promise<!JsonObject>}\n   */\n  evaluateExpression_(expression, scope) {\n    return this.initializePromise_\n      .then(() => {\n        // Allow expression to reference current state in addition to event state.\n        Object.assign(scope, this.state_);\n        return this.ww_('bind.evaluateExpression', [expression, scope]);\n      })\n      .then(returnValue => {\n        const {result, error} = returnValue;\n        if (error) {\n          // Throw to reject promise.\n          throw this.reportWorkerError_(\n            error,\n            `${TAG}: Expression eval failed.`\n          );\n        } else {\n          return result;\n        }\n      });\n  }\n\n  /**\n   * Reevaluates all expressions and returns a map of expressions to results.\n   * @return {!Promise<!Object<string, BindExpressionResultDef>>}\n   * @private\n   */\n  evaluate_() {\n    const evaluatePromise = this.ww_('bind.evaluateBindings', [this.state_]);\n    return evaluatePromise.then(returnValue => {\n      const {results, errors} = returnValue;\n      // Report evaluation errors.\n      Object.keys(errors).forEach(expressionString => {\n        const elements = this.expressionToElements_[expressionString];\n        if (elements.length > 0) {\n          const evalError = errors[expressionString];\n          const userError = user().createError(\n            '%s: Expression evaluation error in \"%s\". %s',\n            TAG,\n            expressionString,\n            evalError.message\n          );\n          userError.stack = evalError.stack;\n          this.reportError_(userError, elements[0]);\n        }\n      });\n      dev().info(TAG, 'evaluation:', results);\n      return results;\n    });\n  }\n\n  /**\n   * Verifies expression results vs. current DOM state and returns an\n   * array of bindings with mismatches (if any).\n   * @param {Object<string, BindExpressionResultDef>} results\n   * @param {?Array<!Element>=} elements If provided, only verifies bindings\n   *     contained within the given elements. Otherwise, verifies all bindings.\n   * @param {boolean=} warn If true, emits a user warning for verification\n   *     mismatches. Otherwise, does not emit a warning.\n   * @return {!Array<string>}\n   * @private\n   */\n  verify_(results, elements = null, warn = true) {\n    // Collate strings containing details of verification mismatches to return.\n    const mismatches = {};\n\n    this.boundElements_.forEach(boundElement => {\n      const {element, boundProperties} = boundElement;\n\n      // If provided, filter elements that are _not_ children of `opt_elements`.\n      if (elements && !this.elementsContains_(elements, element)) {\n        return;\n      }\n\n      boundProperties.forEach(boundProperty => {\n        const newValue = results[boundProperty.expressionString];\n        if (newValue === undefined) {\n          return;\n        }\n        const mismatch = this.verifyBinding_(boundProperty, element, newValue);\n        if (!mismatch) {\n          return;\n        }\n        const {tagName} = element;\n        const {property, expressionString} = boundProperty;\n        const {expected, actual} = mismatch;\n\n        // Only store unique mismatches (dupes possible when rendering an array\n        // of data to a template).\n        mismatches[`${tagName}[${property}]${expected}:${actual}`] = true;\n\n        if (warn) {\n          user().warn(\n            TAG,\n            `Default value (${actual}) does not match first ` +\n              `result (${expected}) for <${tagName} [${property}]=\"` +\n              `${expressionString}\">. We recommend writing expressions with ` +\n              'matching default values, but this can be safely ignored if ' +\n              'intentional.'\n          );\n        }\n      });\n    });\n    return Object.keys(mismatches);\n  }\n\n  /**\n   * Returns true if `el` is contained within any element in `elements`.\n   * @param {!Array<!Element>} elements\n   * @param {!Element} el\n   * @return {boolean}\n   * @private\n   */\n  elementsContains_(elements, el) {\n    for (let i = 0; i < elements.length; i++) {\n      if (elements[i].contains(el)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Determines which properties to update based on results of evaluation\n   * of all bound expression strings with the current state. This method\n   * will only return properties that need to be updated along with their\n   * new value.\n   * @param {!Array<!BoundPropertyDef>} boundProperties\n   * @param {Object<string, BindExpressionResultDef>} results\n   * @return {!Array<{boundProperty: !BoundPropertyDef, newValue: BindExpressionResultDef}>}\n   * @private\n   */\n  calculateUpdates_(boundProperties, results) {\n    const updates = [];\n    boundProperties.forEach(boundProperty => {\n      const {expressionString, previousResult} = boundProperty;\n      const newValue = results[expressionString];\n      // Support equality checks for arrays of objects containing arrays.\n      // Useful for rendering amp-list with amp-bind state via [src].\n      if (\n        newValue === undefined ||\n        deepEquals(newValue, previousResult, /* depth */ 20)\n      ) {\n      } else {\n        boundProperty.previousResult = newValue;\n        updates.push({boundProperty, newValue});\n      }\n    });\n    return updates;\n  }\n\n  /**\n   * Applies expression results to all elements in the document.\n   * @param {Object<string, BindExpressionResultDef>} results\n   * @param {boolean=} opt_skipAmpState\n   * @return {!Promise}\n   * @private\n   */\n  apply_(results, opt_skipAmpState) {\n    const promises = this.boundElements_.map(boundElement => {\n      // If this evaluation is triggered by an <amp-state> mutation, we must\n      // ignore updates to any <amp-state> element to prevent update cycles.\n      if (opt_skipAmpState && boundElement.element.tagName === 'AMP-STATE') {\n        return Promise.resolve();\n      }\n      return this.applyBoundElement_(results, boundElement);\n    });\n    return Promise.all(promises);\n  }\n\n  /**\n   * Applies expression results to only given elements and their descendants.\n   * @param {Object<string, BindExpressionResultDef>} results\n   * @param {!Array<!Element>} elements\n   * @return {!Promise}\n   */\n  applyElements_(results, elements) {\n    const promises = [];\n    this.boundElements_.forEach(boundElement => {\n      elements.forEach(element => {\n        if (element.contains(boundElement.element)) {\n          promises.push(this.applyBoundElement_(results, boundElement));\n        }\n      });\n    });\n    return Promise.all(promises);\n  }\n\n  /**\n   * Applies expression results to a single BoundElementDef.\n   * @param {Object<string, BindExpressionResultDef>} results\n   * @param {BoundElementDef} boundElement\n   * @return {!Promise}\n   */\n  applyBoundElement_(results, boundElement) {\n    const {element, boundProperties} = boundElement;\n    const updates = this.calculateUpdates_(boundProperties, results);\n    if (updates.length === 0) {\n      return Promise.resolve();\n    }\n    return this.resources_.mutateElement(element, () => {\n      const mutations = map();\n      let width, height;\n\n      updates.forEach(update => {\n        const {boundProperty, newValue} = update;\n        const {property} = boundProperty;\n        const mutation = this.applyBinding_(boundProperty, element, newValue);\n\n        if (mutation) {\n          mutations[mutation.name] = mutation.value;\n          if (property == 'width') {\n            width = isFiniteNumber(newValue) ? Number(newValue) : width;\n          } else if (property == 'height') {\n            height = isFiniteNumber(newValue) ? Number(newValue) : height;\n          }\n        }\n\n        this.dispatchFormValueChangeEventIfNecessary_(element, property);\n      });\n\n      if (width !== undefined || height !== undefined) {\n        // TODO(choumx): Add new Resources method for adding change-size\n        // request without scheduling vsync pass since `mutateElement()`\n        // will schedule a pass after a short delay anyways.\n        this.resources_./*OK*/ changeSize(element, height, width);\n      }\n\n      if (typeof element.mutatedAttributesCallback === 'function') {\n        // Prevent an exception in the callback from interrupting execution,\n        // instead wrap in user error and give a helpful message.\n        try {\n          element.mutatedAttributesCallback(mutations);\n        } catch (e) {\n          const error = user().createError(\n            '%s: Applying expression results (%s) failed with error,',\n            TAG,\n            JSON.stringify(mutations),\n            e\n          );\n          this.reportError_(error, element);\n        }\n      }\n    });\n  }\n\n  /**\n   * Dispatches an `AmpEvents.FORM_VALUE_CHANGE` if the element's changed\n   * property represents the value of a form field.\n   * @param {!Element} element\n   * @param {string} property\n   */\n  dispatchFormValueChangeEventIfNecessary_(element, property) {\n    const isPropertyAFormValue = FORM_VALUE_PROPERTIES[element.tagName];\n    if (!isPropertyAFormValue || !isPropertyAFormValue[property]) {\n      return;\n    }\n\n    // The native `InputEvent` is dispatched at the parent `<select>` when its\n    // selected `<option>` changes.\n    const dispatchAt =\n      element.tagName === 'OPTION'\n        ? closestAncestorElementBySelector(element, 'SELECT')\n        : element;\n\n    if (dispatchAt) {\n      const ampValueChangeEvent = createCustomEvent(\n        this.localWin_,\n        AmpEvents.FORM_VALUE_CHANGE,\n        /* detail */ null,\n        {bubbles: true}\n      );\n      dispatchAt.dispatchEvent(ampValueChangeEvent);\n    }\n  }\n\n  /**\n   * Mutates the bound property of `element` with `newValue`.\n   * @param {!BoundPropertyDef} boundProperty\n   * @param {!Element} element\n   * @param {BindExpressionResultDef} newValue\n   * @return {?{name: string, value:BindExpressionResultDef}}\n   * @private\n   */\n  applyBinding_(boundProperty, element, newValue) {\n    const {property} = boundProperty;\n    const tag = element.tagName;\n\n    switch (property) {\n      case 'defaulttext':\n        element.textContent = String(newValue);\n        break;\n\n      case 'text':\n        const stringValue = String(newValue);\n        // If <title> element in the <head>, also update the document title.\n        if (\n          tag === 'TITLE' &&\n          element.parentNode === this.localWin_.document.head\n        ) {\n          this.localWin_.document.title = stringValue;\n        }\n        // For <textarea>, [text] sets `value` (current value), while\n        // [defaultText] sets `textContent` (initial value).\n        if (tag === 'TEXTAREA') {\n          element.value = stringValue;\n        } else {\n          element.textContent = stringValue;\n        }\n        break;\n\n      case 'class':\n        // Preserve internal AMP classes.\n        const ampClasses = [];\n        for (let i = 0; i < element.classList.length; i++) {\n          const cssClass = element.classList[i];\n          if (AMP_CSS_RE.test(cssClass)) {\n            ampClasses.push(cssClass);\n          }\n        }\n        if (Array.isArray(newValue) || typeof newValue === 'string') {\n          element.setAttribute('class', ampClasses.concat(newValue).join(' '));\n        } else if (newValue === null) {\n          element.setAttribute('class', ampClasses.join(' '));\n        } else {\n          const err = user().createError(\n            '%s: \"%s\" is not a valid result for [class].',\n            TAG,\n            newValue\n          );\n          this.reportError_(err, element);\n        }\n        break;\n\n      default:\n        // For input elements, update both the attribute (initial value) and\n        // property (current value) for bindings e.g. [value].\n        // TODO(choumx): Investigate if splitting into [value] and\n        // [defaultValue] is possible without version bump.\n        const updateProperty = tag === 'INPUT' && property in element;\n        const oldValue = element.getAttribute(property);\n\n        let mutated = false;\n        if (typeof newValue === 'boolean') {\n          if (updateProperty && element[property] !== newValue) {\n            // Property value _must_ be read before the attribute is changed.\n            // Before user interaction, attribute updates affect the property.\n            element[property] = newValue;\n            mutated = true;\n          }\n          if (newValue && oldValue !== '') {\n            element.setAttribute(property, '');\n            mutated = true;\n          } else if (!newValue && oldValue !== null) {\n            element.removeAttribute(property);\n            mutated = true;\n          }\n          if (mutated) {\n            // Safari-specific workaround for updating <select> elements\n            // when a child option[selected] attribute changes.\n            this.updateSelectForSafari_(element, property, newValue);\n          }\n        } else if (typeof newValue === 'object' && newValue !== null) {\n          // If newValue is an object or array (e.g. amp-list[src] binding),\n          // don't bother updating the element since attribute values like\n          // \"[Object object]\" have no meaning in the DOM.\n          mutated = true;\n        } else if (newValue !== oldValue) {\n          mutated = this.rewriteAttributes_(\n            element,\n            property,\n            String(newValue),\n            updateProperty\n          );\n        }\n\n        if (mutated) {\n          return {name: property, value: newValue};\n        }\n        break;\n    }\n    return null;\n  }\n\n  /**\n   * Hopefully we can delete this with Safari 13+.\n   * @param {!Element} element\n   * @param {string} property\n   * @param {BindExpressionResultDef} newValue\n   */\n  updateSelectForSafari_(element, property, newValue) {\n    // We only care about option[selected].\n    if (element.tagName !== 'OPTION' || property !== 'selected') {\n      return;\n    }\n    // We only care if this option was selected, not deselected.\n    if (!newValue) {\n      return;\n    }\n    // Workaround only needed for Safari.\n    if (!Services.platformFor(this.win_).isSafari()) {\n      return;\n    }\n    const select = closestAncestorElementBySelector(element, 'select');\n    if (!select) {\n      return;\n    }\n    // Set corresponding selectedIndex on <select> parent.\n    const index = toArray(select.options).indexOf(element);\n    if (index >= 0) {\n      select.selectedIndex = index;\n    }\n  }\n\n  /**\n   * Performs CDN rewrites for the given mutation and updates the element.\n   * @see amp-cache-modifications.md#url-rewrites\n   * @param {!Element} element\n   * @param {string} attrName\n   * @param {string} value\n   * @param {boolean} updateProperty If the property with the same name should\n   *    be updated as well.\n   * @return {boolean} Whether or not the rewrite was successful.\n   * @private\n   */\n  rewriteAttributes_(element, attrName, value, updateProperty) {\n    // Rewrite attributes if necessary. Not done in worker since it relies on\n    // `url#parseUrl` which uses <a>. Worker has URL API but not on IE11.\n    try {\n      rewriteAttributesForElement(\n        element,\n        attrName,\n        value,\n        /* opt_location */ undefined,\n        updateProperty\n      );\n      return true;\n    } catch (e) {\n      const error = user().createError(\n        '%s: \"%s\" is not a valid result for [%]',\n        TAG,\n        value,\n        attrName,\n        e\n      );\n      this.reportError_(error, element);\n    }\n    return false;\n  }\n\n  /**\n   * If current state of `element` matches `expectedValue`, returns null.\n   * Otherwise, returns a tuple containing the expected and actual values.\n   * @param {!BoundPropertyDef} boundProperty\n   * @param {!Element} element\n   * @param {BindExpressionResultDef} expectedValue\n   * @return {?{expected: *, actual: *}}\n   * @private\n   */\n  verifyBinding_(boundProperty, element, expectedValue) {\n    const {property} = boundProperty;\n    const {tagName} = element;\n\n    // Don't show a warning for bind-only attributes,\n    // like 'slide' on amp-carousel.\n    const bindOnlyAttrs = BIND_ONLY_ATTRIBUTES[tagName];\n    if (bindOnlyAttrs && bindOnlyAttrs.includes(property)) {\n      return null;\n    }\n\n    let initialValue;\n    let match;\n\n    switch (property) {\n      case 'text':\n        initialValue = element.textContent;\n        expectedValue = String(expectedValue);\n        match = initialValue.trim() === expectedValue.trim();\n        break;\n\n      case 'class':\n        initialValue = [];\n        for (let i = 0; i < element.classList.length; i++) {\n          const cssClass = element.classList[i];\n          // Ignore internal AMP classes.\n          if (AMP_CSS_RE.test(cssClass)) {\n            continue;\n          }\n          initialValue.push(cssClass);\n        }\n        /** @type {!Array<string>} */\n        let classes = [];\n        if (Array.isArray(expectedValue)) {\n          classes = expectedValue;\n        } else if (typeof expectedValue === 'string') {\n          const trimmed = expectedValue.trim();\n          if (trimmed.length > 0) {\n            classes = trimmed.split(' ');\n          }\n        } else {\n          const err = user().createError(\n            '%s: \"%s\" is not a valid result for [class].',\n            TAG,\n            expectedValue\n          );\n          this.reportError_(err, element);\n        }\n        match = this.compareStringArrays_(initialValue, classes);\n        break;\n\n      default:\n        initialValue = element.getAttribute(property);\n        // Boolean attributes return values of either '' or null.\n        if (expectedValue === true) {\n          match = initialValue === '';\n        } else if (expectedValue === false) {\n          match = initialValue === null;\n        } else if (typeof expectedValue === 'number') {\n          match = Number(initialValue) === expectedValue;\n        } else {\n          match = initialValue === expectedValue;\n        }\n        break;\n    }\n\n    return match ? null : {expected: expectedValue, actual: initialValue};\n  }\n\n  /**\n   * @param {!Event} event\n   */\n  onDomUpdate_(event) {\n    const target = dev().assertElement(event.target);\n    // TODO(choumx): Consider removing this check now that slowScan_() skips\n    // FAST_RESCAN_TAGS internally, and because this makes an assumption about\n    // the DOM structure of the EventTarget.\n    const parent = target.parentNode;\n    if (parent && FAST_RESCAN_TAGS.includes(parent.nodeName)) {\n      return;\n    }\n    dev().info(TAG, 'dom_update:', target);\n    this.slowScan_([target], [target], 'dom_update.end').then(() => {\n      this.dispatchEventForTesting_(BindEvents.RESCAN_TEMPLATE);\n    });\n  }\n\n  /**\n   * Removes bindings for nodes in `remove`, then scans for bindings in `add`.\n   * Return promise that resolves upon completion with struct containing number\n   * of removed and added bindings.\n   * @param {!Array<!Node>} addedNodes\n   * @param {!Array<!Node>} removedNodes\n   * @param {string=} label\n   * @return {!Promise}\n   * @private\n   */\n  slowScan_(addedNodes, removedNodes, label = 'rescan.slow') {\n    let removed = 0;\n    return this.removeBindingsForNodes_(removedNodes)\n      .then(r => {\n        removed = r;\n        return this.addBindingsForNodes_(addedNodes);\n      })\n      .then(added => {\n        dev().info(\n          TAG,\n          '%s: delta=%s, total=%s',\n          label,\n          added - removed,\n          this.numberOfBindings()\n        );\n      });\n  }\n\n  /**\n   * Helper for invoking a method on web worker.\n   * @param {string} method\n   * @param {!Array=} opt_args\n   * @return {!Promise}\n   */\n  ww_(method, opt_args) {\n    return invokeWebWorker(this.win_, method, opt_args, this.localWin_);\n  }\n\n  /**\n   * @param {{message: string, stack:string}} e\n   * @param {string} message\n   * @param {!Element=} opt_element\n   * @return {!Error}\n   * @private\n   */\n  reportWorkerError_(e, message, opt_element) {\n    const userError = user().createError('%s %s', message, e.message);\n    userError.stack = e.stack;\n    this.reportError_(userError, opt_element);\n    return userError;\n  }\n\n  /**\n   * @param {!Error} error\n   * @param {!Element=} opt_element\n   */\n  reportError_(error, opt_element) {\n    if (getMode().test) {\n      return;\n    }\n    reportError(error, opt_element);\n  }\n\n  /**\n   * Returns true if both arrays contain the same strings.\n   * @param {!(IArrayLike<string>|Array<string>)} a\n   * @param {!(IArrayLike<string>|Array<string>)} b\n   * @return {boolean}\n   * @private\n   */\n  compareStringArrays_(a, b) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    const sortedA = (isArray(a) ? a : toArray(a)).sort();\n    const sortedB = (isArray(b) ? b : toArray(b)).sort();\n    for (let i = 0; i < a.length; i++) {\n      if (sortedA[i] !== sortedB[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Copies an object containing JSON data and returns it.\n   * Returns null if input object contains invalid JSON (e.g. undefined or\n   * circular references).\n   * @param {?JsonObject|undefined} o\n   * @return {?JsonObject}\n   */\n  copyJsonObject_(o) {\n    if (o === undefined) {\n      return null;\n    }\n    try {\n      return parseJson(JSON.stringify(o));\n    } catch (e) {\n      dev().error(TAG, 'Failed to copy JSON (' + o + ') with error: ' + e);\n    }\n    return null;\n  }\n\n  /**\n   * Print out the current state in the console.\n   * @param {(!Element|string)=} opt_elementOrExpr\n   * @private\n   */\n  debugPrintState_(opt_elementOrExpr) {\n    if (opt_elementOrExpr) {\n      if (typeof opt_elementOrExpr == 'string') {\n        const value = getValueForExpr(this.state_, opt_elementOrExpr);\n        user().info(TAG, value);\n      } else if (opt_elementOrExpr.nodeType == Node.ELEMENT_NODE) {\n        const element = user().assertElement(opt_elementOrExpr);\n        this.debugPrintElement_(element);\n      } else {\n        user().info(\n          TAG,\n          'Invalid argument. Pass a JSON expression or an ' +\n            'element instead e.g. AMP.printState(\"foo.bar\") or ' +\n            'AMP.printState($0) after selecting an element.'\n        );\n      }\n    } else {\n      user().info(TAG, this.state_);\n    }\n  }\n\n  /**\n   * Print out the element's bound attributes and respective expression values.\n   * @param {!Element} element\n   * @private\n   */\n  debugPrintElement_(element) {\n    const index = findIndex(this.boundElements_, boundElement => {\n      return boundElement.element == element;\n    });\n    if (index < 0) {\n      user().info(TAG, 'Element has no bindings:', element);\n      return;\n    }\n    // Evaluate expressions in bindings in `element`.\n    const promises = [];\n    const {boundProperties} = this.boundElements_[index];\n    boundProperties.forEach(boundProperty => {\n      const {expressionString} = boundProperty;\n      promises.push(this.evaluateExpression_(expressionString, this.state_));\n    });\n    // Print the map of attribute to expression value for `element`.\n    Promise.all(promises).then(results => {\n      const output = map();\n      boundProperties.forEach((boundProperty, i) => {\n        const {property} = boundProperty;\n        output[property] = results[i];\n      });\n      user().info(TAG, output);\n    });\n  }\n\n  /**\n   * @param {string} expression\n   */\n  debugEvaluate_(expression) {\n    this.evaluateExpression_(expression, this.state_).then(result => {\n      user().info(TAG, result);\n    });\n  }\n\n  /**\n   * Wait for bind scan to finish for testing.\n   *\n   * @return {?Promise}\n   * @visibleForTesting\n   */\n  initializePromiseForTesting() {\n    return this.initializePromise_;\n  }\n\n  /**\n   * Wait for bindings to evaluate and apply for testing. Should\n   * be called once for each event that changes bindings.\n   *\n   * @return {?Promise}\n   * @visibleForTesting\n   */\n  setStatePromiseForTesting() {\n    return this.setStatePromise_;\n  }\n\n  /**\n   * @param {string} name\n   * @private\n   */\n  dispatchEventForTesting_(name) {\n    if (getMode().test) {\n      let event;\n      if (typeof this.localWin_.Event === 'function') {\n        event = new Event(name, {bubbles: true, cancelable: true});\n      } else {\n        event = this.localWin_.document.createEvent('Event');\n        event.initEvent(name, /* bubbles */ true, /* cancelable */ true);\n      }\n      this.localWin_.dispatchEvent(event);\n    }\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {hasOwn, ownProperty} from '../../../src/utils/object';\nimport {parseSrcset} from '../../../src/srcset';\nimport {startsWith} from '../../../src/string';\nimport {user} from '../../../src/log';\n\nconst TAG = 'amp-bind';\n\n/**\n * @typedef {{\n *   allowedProtocols: (!Object<string,boolean>|undefined),\n *   alternativeName: (string|undefined),\n * }}\n */\nlet PropertyRulesDef;\n\n/**\n * Property rules that apply to any and all tags.\n * @private {Object<string, ?PropertyRulesDef>}\n */\nconst GLOBAL_PROPERTY_RULES = {\n  'class': {\n    blacklistedValueRegex: '(^|\\\\W)i-amphtml-',\n  },\n  'hidden': null,\n  'text': null,\n};\n\n/**\n * Property rules that apply to all AMP elements.\n * @private {Object<string, ?PropertyRulesDef>}\n */\nconst AMP_PROPERTY_RULES = {\n  'width': null,\n  'height': null,\n};\n\n/**\n * Maps tag names to property names to PropertyRulesDef.\n * If `ELEMENT_RULES[tag][property]` is null, then all values are valid\n * for that property in that tag.\n * @private {Object<string, Object<string, ?PropertyRulesDef>>}}\n */\nconst ELEMENT_RULES = createElementRules_();\n\n/**\n * Map whose keys comprise all properties that contain URLs.\n * @private {Object<string, boolean>}\n */\nconst URL_PROPERTIES = {\n  'src': true,\n  'srcset': true,\n  'href': true,\n  'xlink:href': true,\n};\n\n/**\n * BindValidator performs runtime validation of Bind expression results.\n *\n * For performance reasons, the validation rules enforced are a subset\n * of the AMP validator's, selected with a focus on security and UX.\n */\nexport class BindValidator {\n  /**\n   * @param {boolean} allowUrlBindings\n   */\n  constructor(allowUrlBindings) {\n    /** @const @private {boolean} */\n    this.allowUrlBindings_ = allowUrlBindings;\n  }\n\n  /**\n   * Returns true if (tag, property) binding is allowed.\n   * Otherwise, returns false.\n   * NOTE: `tag` and `property` are case-sensitive.\n   * @param {string} tag\n   * @param {string} property\n   * @return {boolean}\n   */\n  canBind(tag, property) {\n    return this.rulesForTagAndProperty_(tag, property) !== undefined;\n  }\n\n  /**\n   * Returns true if `value` is a valid result for a (tag, property) binding.\n   * Otherwise, returns false.\n   * @param {string} tag\n   * @param {string} property\n   * @param {?string} value\n   * @return {boolean}\n   */\n  isResultValid(tag, property, value) {\n    let rules = this.rulesForTagAndProperty_(tag, property);\n    // `alternativeName` is a reference to another property's rules.\n    if (rules && rules.alternativeName) {\n      rules = this.rulesForTagAndProperty_(tag, rules.alternativeName);\n    }\n    // If binding to (tag, property) is not allowed, return false.\n    if (rules === undefined) {\n      return false;\n    }\n    // If binding is allowed but have no specific rules, return true.\n    if (rules === null) {\n      return true;\n    }\n    // Validate URL(s) if applicable.\n    if (value && ownProperty(URL_PROPERTIES, property)) {\n      let urls;\n      if (property === 'srcset') {\n        let srcset;\n        try {\n          srcset = parseSrcset(value);\n        } catch (e) {\n          user().error(TAG, 'Failed to parse srcset: ', e);\n          return false;\n        }\n        urls = srcset.getUrls();\n      } else {\n        urls = [value];\n      }\n      for (let i = 0; i < urls.length; i++) {\n        if (!this.isUrlValid_(urls[i], rules)) {\n          return false;\n        }\n      }\n    }\n    // @see validator/engine/validator.ParsedTagSpec.validateAttributes()\n    const {blacklistedValueRegex} = rules;\n    if (value && blacklistedValueRegex) {\n      const re = new RegExp(blacklistedValueRegex, 'i');\n      if (re.test(value)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Returns true if a url's value is valid within a property rules spec.\n   * @param {string} url\n   * @param {!PropertyRulesDef} rules\n   * @return {boolean}\n   * @private\n   */\n  isUrlValid_(url, rules) {\n    // @see validator/engine/validator.js#validateUrlAndProtocol()\n    if (url) {\n      if (/__amp_source_origin/.test(url)) {\n        return false;\n      }\n      const {allowedProtocols} = rules;\n      if (allowedProtocols) {\n        const re = /^([^:\\/?#.]+):[\\s\\S]*$/;\n        const match = re.exec(url);\n        if (match !== null) {\n          const protocol = match[1].toLowerCase().trim();\n          // hasOwn() needed since nested objects are not prototype-less.\n          if (!hasOwn(allowedProtocols, protocol)) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Returns the property rules object for (tag, property), if it exists.\n   * Returns null if binding is allowed without constraints.\n   * Returns undefined if binding is not allowed.\n   * @param {string} tag\n   * @param {string} property\n   * @return {(?PropertyRulesDef|undefined)}\n   * @private\n   */\n  rulesForTagAndProperty_(tag, property) {\n    // Allow binding to all ARIA attributes.\n    if (startsWith(property, 'aria-')) {\n      return null;\n    }\n    // Disallow URL property bindings if configured as such.\n    if (ownProperty(URL_PROPERTIES, property) && !this.allowUrlBindings_) {\n      return undefined;\n    }\n    const globalRules = ownProperty(GLOBAL_PROPERTY_RULES, property);\n    if (globalRules !== undefined) {\n      return /** @type {PropertyRulesDef} */ (globalRules);\n    }\n    const ampPropertyRules = ownProperty(AMP_PROPERTY_RULES, property);\n    if (startsWith(tag, 'AMP-') && ampPropertyRules !== undefined) {\n      return /** @type {PropertyRulesDef} */ (ampPropertyRules);\n    }\n    const tagRules = ownProperty(ELEMENT_RULES, tag);\n    if (tagRules) {\n      return tagRules[property];\n    }\n    return undefined;\n  }\n}\n\n/**\n * @return {Object<string, Object<string, ?PropertyRulesDef>>}}\n * @private\n */\nfunction createElementRules_() {\n  // Initialize `rules` with tag-specific constraints.\n  const rules = {\n    'AMP-AUTOCOMPLETE': {\n      'src': {\n        'allowedProtocols': {\n          'https': true,\n        },\n      },\n    },\n    'AMP-BASE-CAROUSEL': {\n      'advance-count': null,\n      'auto-advance-count': null,\n      'auto-advance-interval': null,\n      'auto-advance-loops': null,\n      'auto-advance': null,\n      'horizontal': null,\n      'initial-index': null,\n      'loop': null,\n      'mixed-length': null,\n      'side-slide-count': null,\n      'slide': null,\n      'snap-align': null,\n      'snap-by': null,\n      'snap': null,\n      'visible-count': null,\n    },\n    'AMP-BRIGHTCOVE': {\n      'data-account': null,\n      'data-embed': null,\n      'data-player': null,\n      'data-player-id': null,\n      'data-playlist-id': null,\n      'data-video-id': null,\n    },\n    'AMP-CAROUSEL': {\n      'slide': null,\n    },\n    'AMP-DATE-PICKER': {\n      'max': null,\n      'min': null,\n      'src': {\n        'allowedProtocols': {\n          'https': true,\n        },\n      },\n    },\n    'AMP-GOOGLE-DOCUMENT-EMBED': {\n      'src': null,\n      'title': null,\n    },\n    'AMP-IFRAME': {\n      'src': null,\n    },\n    'AMP-IMG': {\n      'alt': null,\n      'attribution': null,\n      'src': {\n        'allowedProtocols': {\n          'data': true,\n          'http': true,\n          'https': true,\n        },\n      },\n      'srcset': {\n        'alternativeName': 'src',\n      },\n    },\n    'AMP-LIGHTBOX': {\n      'open': null,\n    },\n    'AMP-LIST': {\n      'src': {\n        'allowedProtocols': {\n          'https': true,\n        },\n      },\n      'state': null,\n      'is-layout-container': null,\n    },\n    'AMP-SELECTOR': {\n      'disabled': null,\n      'selected': null,\n    },\n    'AMP-STATE': {\n      'src': {\n        'allowedProtocols': {\n          'https': true,\n        },\n      },\n    },\n    'AMP-TIMEAGO': {\n      'datetime': null,\n      'title': null,\n    },\n    'AMP-TWITTER': {\n      'data-tweetid': null,\n    },\n    'AMP-VIDEO': {\n      'alt': null,\n      'attribution': null,\n      'controls': null,\n      'loop': null,\n      'poster': null,\n      'preload': null,\n      'src': {\n        'allowedProtocols': {\n          'https': true,\n        },\n      },\n    },\n    'AMP-YOUTUBE': {\n      'data-videoid': null,\n    },\n    'A': {\n      'href': {\n        'allowedProtocols': {\n          'ftp': true,\n          'http': true,\n          'https': true,\n          'mailto': true,\n          'fb-messenger': true,\n          'intent': true,\n          'skype': true,\n          'sms': true,\n          'snapchat': true,\n          'tel': true,\n          'tg': true,\n          'threema': true,\n          'twitter': true,\n          'viber': true,\n          'whatsapp': true,\n        },\n      },\n    },\n    'BUTTON': {\n      'disabled': null,\n      'type': null,\n      'value': null,\n    },\n    'DETAILS': {\n      'open': null,\n    },\n    'FIELDSET': {\n      'disabled': null,\n    },\n    'IMAGE': {\n      'xlink:href': {\n        'allowedProtocols': {\n          'http': true,\n          'https': true,\n        },\n      },\n    },\n    'INPUT': {\n      'accept': null,\n      'accesskey': null,\n      'autocomplete': null,\n      'checked': null,\n      'disabled': null,\n      'height': null,\n      'inputmode': null,\n      'max': null,\n      'maxlength': null,\n      'min': null,\n      'minlength': null,\n      'multiple': null,\n      'pattern': null,\n      'placeholder': null,\n      'readonly': null,\n      'required': null,\n      'selectiondirection': null,\n      'size': null,\n      'spellcheck': null,\n      'step': null,\n      'type': {\n        blacklistedValueRegex: '(^|\\\\s)(button|image|)(\\\\s|$)',\n      },\n      'value': null,\n      'width': null,\n    },\n    'OPTION': {\n      'disabled': null,\n      'label': null,\n      'selected': null,\n      'value': null,\n    },\n    'OPTGROUP': {\n      'disabled': null,\n      'label': null,\n    },\n    'SECTION': {\n      'data-expand': null,\n    },\n    'SELECT': {\n      'autofocus': null,\n      'disabled': null,\n      'multiple': null,\n      'required': null,\n      'size': null,\n    },\n    'SOURCE': {\n      'src': {\n        'allowedProtocols': {\n          'https': true,\n        },\n      },\n      'type': null,\n    },\n    'TRACK': {\n      'label': null,\n      'src': {\n        'allowedProtocols': {\n          'https': true,\n        },\n      },\n      'srclang': null,\n    },\n    'TEXTAREA': {\n      'autocomplete': null,\n      'autofocus': null,\n      'cols': null,\n      'disabled': null,\n      'maxlength': null,\n      'minlength': null,\n      'pattern': null,\n      'placeholder': null,\n      'readonly': null,\n      'required': null,\n      'rows': null,\n      'selectiondirection': null,\n      'selectionend': null,\n      'selectionstart': null,\n      'spellcheck': null,\n      'wrap': null,\n      // Non-standard property.\n      'defaulttext': null,\n    },\n  };\n  return rules;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Key string in an action arguments map for an unparsed object literal string.\n *\n * E.g. for the action in <p on=\"tap:AMP.setState({foo: 'bar'})\",\n * then `args[RAW_OBJECT_ARGS_KEY]` is the string \"{foo: 'bar'}\".\n *\n * The action service delegates parsing of object literals to the corresponding\n * extension (in the example above, amp-bind).\n *\n * @see ./service/action-impl.ActionInfoDef\n * @const {string}\n */\nexport const RAW_OBJECT_ARGS_KEY = '__AMP_OBJECT_STRING__';\n\n/** @const {string} Identifier for an element's default action. */\nexport const DEFAULT_ACTION = 'activate';\n\n/**\n * Trust level of an action.\n *\n * Corresponds to degree of user intent, i.e. events triggered with strong\n * user intent have high trust.\n *\n * @enum {number}\n */\nexport const ActionTrust = {\n  LOW: 1,\n  HIGH: 100,\n};\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common AMP events.\n * @enum {string}\n */\nexport const AmpEvents = {\n  DOM_UPDATE: 'amp:dom-update',\n  FORM_DIRTINESS_CHANGE: 'amp:form-dirtiness-change',\n  FORM_VALUE_CHANGE: 'amp:form-value-change',\n  VISIBILITY_CHANGE: 'amp:visibilitychange', // https://github.com/ampproject/amphtml/blob/master/ads/README.md#page-visibility\n  // The following codes are only used for testing.\n  // TODO(choumx): Move these to a separate enum so they can be DCE'd.\n  ATTACHED: 'amp:attached',\n  STUBBED: 'amp:stubbed',\n  LOAD_START: 'amp:load:start',\n  LOAD_END: 'amp:load:end',\n  ERROR: 'amp:error',\n  SIZE_CHANGED: 'amp:size-changed',\n};\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\n\n/**\n * Helper method to trigger analytics event if amp-analytics is available.\n * TODO: Do not expose this function\n * @param {!Element} target\n * @param {string} eventType\n * @param {!JsonObject=} opt_vars A map of vars and their values.\n */\nexport function triggerAnalyticsEvent(target, eventType, opt_vars) {\n  Services.analyticsForDocOrNull(target).then(analytics => {\n    if (!analytics) {\n      return;\n    }\n    analytics.triggerEventForTarget(target, eventType, opt_vars);\n  });\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\nimport {assertHttpsUrl} from './url';\nimport {getValueForExpr} from './json';\nimport {user} from './log';\n\n/**\n * @enum {number}\n */\nexport const UrlReplacementPolicy = {\n  NONE: 0,\n  OPT_IN: 1,\n  ALL: 2,\n};\n\n/**\n * Batch fetches the JSON endpoint at the given element's `src` attribute.\n * Sets the fetch credentials option from the element's `credentials` attribute,\n * if it exists.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {!Element} element\n * @param {string=} opt_expr Dot-syntax reference to subdata of JSON result\n *     to return. If not specified, entire JSON result is returned.\n * @param {UrlReplacementPolicy=} opt_urlReplacement If ALL, replaces all URL\n *     vars. If OPT_IN, replaces whitelisted URL vars. Otherwise, don't expand..\n * @param {boolean=} opt_refresh Forces refresh of browser cache.\n * @param {string=} opt_token Auth token that forces a POST request.\n * @return {!Promise<!JsonObject|!Array<JsonObject>>} Resolved with JSON\n *     result or rejected if response is invalid.\n */\nexport function batchFetchJsonFor(\n  ampdoc,\n  element,\n  opt_expr = '.',\n  opt_urlReplacement = UrlReplacementPolicy.NONE,\n  opt_refresh = false,\n  opt_token = undefined\n) {\n  assertHttpsUrl(element.getAttribute('src'), element);\n  const xhr = Services.batchedXhrFor(ampdoc.win);\n  return requestForBatchFetch(element, opt_urlReplacement, opt_refresh)\n    .then(data => {\n      if (opt_token !== undefined) {\n        data.fetchOpt['method'] = 'POST';\n        data.fetchOpt['headers'] = {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        };\n        data.fetchOpt['body'] = {\n          'ampViewerAuthToken': opt_token,\n        };\n      }\n      return xhr.fetchJson(data.xhrUrl, data.fetchOpt);\n    })\n    .then(res => res.json())\n    .then(data => {\n      if (data == null) {\n        throw new Error('Response is undefined.');\n      }\n      return getValueForExpr(data, opt_expr || '.');\n    });\n}\n\n/**\n * Handles url replacement and constructs the FetchInitJsonDef required for a\n * fetch.\n * @param {!Element} element\n * @param {!UrlReplacementPolicy} replacement If ALL, replaces all URL\n *     vars. If OPT_IN, replaces whitelisted URL vars. Otherwise, don't expand.\n * @param {boolean} refresh Forces refresh of browser cache.\n * @return {!Promise<!FetchRequestDef>}\n */\nexport function requestForBatchFetch(element, replacement, refresh) {\n  const url = element.getAttribute('src');\n\n  // Replace vars in URL if desired.\n  const urlReplacements = Services.urlReplacementsForDoc(element);\n  const promise =\n    replacement >= UrlReplacementPolicy.OPT_IN\n      ? urlReplacements.expandUrlAsync(url)\n      : Promise.resolve(url);\n\n  return promise.then(xhrUrl => {\n    // Throw user error if this element is performing URL substitutions\n    // without the soon-to-be-required opt-in (#12498).\n    if (replacement == UrlReplacementPolicy.OPT_IN) {\n      const invalid = urlReplacements.collectUnwhitelistedVarsSync(element);\n      if (invalid.length > 0) {\n        throw user().createError(\n          'URL variable substitutions in CORS ' +\n            'fetches from dynamic URLs (e.g. via amp-bind) require opt-in. ' +\n            `Please add data-amp-replace=\"${invalid.join(' ')}\" to the ` +\n            `<${element.tagName}> element. See https://bit.ly/amp-var-subs.`\n        );\n      }\n    }\n    const fetchOpt = {};\n    if (element.hasAttribute('credentials')) {\n      fetchOpt.credentials = element.getAttribute('credentials');\n    }\n    // https://hacks.mozilla.org/2016/03/referrer-and-cache-control-apis-for-fetch/\n    if (refresh) {\n      fetchOpt.cache = 'reload';\n    }\n    return {'xhrUrl': xhrUrl, 'fetchOpt': fetchOpt};\n  });\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\nimport {dev} from './log';\nimport {getData} from './event-helper';\nimport {getServiceForDoc, registerServiceBuilderForDoc} from './service';\nimport {isExperimentOn} from './experiments';\nimport {makeBodyVisibleRecovery} from './style-installer';\nimport PriorityQueue from './utils/priority-queue';\n\n/**\n * @const {string}\n */\nconst TAG = 'CHUNK';\n\n/**\n * @type {boolean}\n */\nlet deactivated = /nochunking=1/.test(self.location.hash);\n\n/**\n * @const {!Promise}\n */\nconst resolved = Promise.resolve();\n\n/**\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!Chunks}\n * @private\n */\nfunction chunkServiceForDoc(elementOrAmpDoc) {\n  registerServiceBuilderForDoc(elementOrAmpDoc, 'chunk', Chunks);\n  return getServiceForDoc(elementOrAmpDoc, 'chunk');\n}\n\n/**\n * Run the given function. For visible documents the function will be\n * called in a micro task (Essentially ASAP). If the document is\n * not visible, tasks will yield to the event loop (to give the browser\n * time to do other things) and may even be further delayed until\n * there is time.\n *\n * @param {!Document|!./service/ampdoc-impl.AmpDoc} doc\n * @param {function(?IdleDeadline)} fn\n * @param {boolean=} opt_makesBodyVisible Pass true if this service makes\n *     the body visible. This is relevant because it may influence the\n *     task scheduling strategy.\n */\nexport function startupChunk(doc, fn, opt_makesBodyVisible) {\n  if (deactivated) {\n    resolved.then(fn);\n    return;\n  }\n  const service = chunkServiceForDoc(doc.documentElement || doc);\n  service.runForStartup(fn);\n  if (opt_makesBodyVisible) {\n    service.runForStartup(() => {\n      service.bodyIsVisible_ = true;\n    });\n  }\n}\n\n/**\n * Run the given function sometime in the future without blocking UI.\n *\n * Higher priority tasks are executed before lower priority tasks.\n * Tasks with the same priority are executed in FIFO order.\n *\n * Uses `requestIdleCallback` if available and passes the `IdleDeadline`\n * object to the function, which can be used to perform a variable amount\n * of work depending on the remaining amount of idle time.\n *\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {function(?IdleDeadline)} fn\n * @param {ChunkPriority} priority\n */\nexport function chunk(elementOrAmpDoc, fn, priority) {\n  if (deactivated) {\n    resolved.then(fn);\n    return;\n  }\n  const service = chunkServiceForDoc(elementOrAmpDoc);\n  service.run(fn, priority);\n}\n\n/**\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!Chunks}\n */\nexport function chunkInstanceForTesting(elementOrAmpDoc) {\n  return chunkServiceForDoc(elementOrAmpDoc);\n}\n\n/**\n * Use a standard micro task for every invocation. This should only\n * be called from the AMP bootstrap script if it is known that\n * chunking makes no sense. In particular this is the case when\n * AMP runs in the `amp-shadow` multi document mode.\n */\nexport function deactivateChunking() {\n  deactivated = true;\n}\n\n/**\n * @visibleForTesting\n */\nexport function activateChunkingForTesting() {\n  deactivated = false;\n}\n\n/**\n * Runs all currently scheduled chunks.\n * Independent of errors it will unwind the queue. Will afterwards\n * throw the first encountered error.\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n */\nexport function runChunksForTesting(elementOrAmpDoc) {\n  const service = chunkInstanceForTesting(elementOrAmpDoc);\n  const errors = [];\n  while (true) {\n    try {\n      if (!service.execute_(/* idleDeadline */ null)) {\n        break;\n      }\n    } catch (e) {\n      errors.push(e);\n    }\n  }\n  if (errors.length) {\n    throw errors[0];\n  }\n}\n\n/**\n * The priority of a chunk task. Higher priority tasks have higher values.\n * @enum {number}\n */\nexport const ChunkPriority = {\n  HIGH: 20,\n  LOW: 10,\n  BACKGROUND: 0,\n};\n\n/** @enum {string} */\nconst TaskState = {\n  NOT_RUN: 'not_run',\n  RUN: 'run',\n};\n\n/**\n * A default chunkable task.\n * @private\n */\nclass Task {\n  /**\n   * @param {function(?IdleDeadline)} fn\n   */\n  constructor(fn) {\n    /** @public {TaskState} */\n    this.state = TaskState.NOT_RUN;\n\n    /** @private @const {!function(?IdleDeadline)} */\n    this.fn_ = fn;\n  }\n\n  /**\n   * Executes the wrapped function.\n   * @param {?IdleDeadline} idleDeadline\n   * @throws {Error}\n   * @protected\n   */\n  runTask_(idleDeadline) {\n    if (this.state == TaskState.RUN) {\n      return;\n    }\n    this.state = TaskState.RUN;\n    try {\n      this.fn_(idleDeadline);\n    } catch (e) {\n      this.onTaskError_(e);\n      throw e;\n    }\n  }\n\n  /**\n   * @return {string}\n   * @protected\n   */\n  getName_() {\n    return this.fn_.displayName || this.fn_.name;\n  }\n\n  /**\n   * Optional handling when a task run throws an error.\n   * @param {Error} unusedError\n   * @private\n   */\n  onTaskError_(unusedError) {\n    // By default, no-op.\n  }\n\n  /**\n   * Returns true if this task should be run without delay.\n   * @return {boolean}\n   * @protected\n   */\n  immediateTriggerCondition_() {\n    // By default, there are no immediate trigger conditions.\n    return false;\n  }\n\n  /**\n   * Returns true if this task should be scheduled using `requestIdleCallback`.\n   * Otherwise, task is scheduled as macro-task on next event loop.\n   * @return {boolean}\n   * @protected\n   */\n  useRequestIdleCallback_() {\n    // By default, never use requestIdleCallback.\n    return false;\n  }\n}\n\n/**\n * A task that's run as part of AMP's startup sequence.\n * @private\n */\nclass StartupTask extends Task {\n  /**\n   * @param {function(?IdleDeadline)} fn\n   * @param {!Window} win\n   * @param {!Chunks} chunks\n   */\n  constructor(fn, win, chunks) {\n    super(fn);\n\n    /** @private @const */\n    this.chunks_ = chunks;\n  }\n\n  /** @override */\n  onTaskError_(unusedError) {\n    // Startup tasks run early in init. All errors should show the doc.\n    makeBodyVisibleRecovery(self.document);\n  }\n\n  /** @override */\n  immediateTriggerCondition_() {\n    // Run in a micro task when the doc is visible. Otherwise, run after\n    // having yielded to the event queue once.\n    return this.isVisible_();\n  }\n\n  /** @override */\n  useRequestIdleCallback_() {\n    // We only start using requestIdleCallback when the core runtime has\n    // been initialized. Otherwise we risk starving ourselves\n    // before the render-critical work is done.\n    return this.chunks_.coreReady_;\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  isVisible_() {\n    return this.chunks_.ampdoc.isVisible();\n  }\n}\n\n/**\n * Handles queueing, scheduling and executing tasks.\n */\nclass Chunks {\n  /**\n   * @param {!./service/ampdoc-impl.AmpDoc} ampDoc\n   */\n  constructor(ampDoc) {\n    /** @protected @const {!./service/ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampDoc;\n    /** @private @const {!Window} */\n    this.win_ = ampDoc.win;\n    /** @private @const {!PriorityQueue<Task>} */\n    this.tasks_ = new PriorityQueue();\n    /** @private @const {function(?IdleDeadline)} */\n    this.boundExecute_ = this.execute_.bind(this);\n    /** @private {number} */\n    this.durationOfLastExecution_ = 0;\n    /** @private {boolean} */\n    this.macroAfterLongTask_ = isExperimentOn(\n      this.win_,\n      'macro-after-long-task'\n    );\n    /**\n     * Set to true if we scheduled a macro or micro task to execute the next\n     * task. If true, we don't schedule another one.\n     * Not set to true if we use rIC, because we always want to transition\n     * to immeditate invocation from that state.\n     * @private {boolean}\n     */\n    this.scheduledImmediateInvocation_ = false;\n    /** @private {boolean} Whether the document can actually be painted. */\n    this.bodyIsVisible_ = this.win_.document.documentElement.hasAttribute(\n      'i-amphtml-no-boilerplate'\n    );\n\n    this.win_.addEventListener('message', e => {\n      if (getData(e) == 'amp-macro-task') {\n        this.execute_(/* idleDeadline */ null);\n      }\n    });\n\n    /** @protected {boolean} */\n    this.coreReady_ = false;\n    Services.viewerPromiseForDoc(ampDoc).then(() => {\n      // Once the viewer has been resolved, most of core runtime has been\n      // initialized as well.\n      this.coreReady_ = true;\n    });\n\n    ampDoc.onVisibilityChanged(() => {\n      if (ampDoc.isVisible()) {\n        this.schedule_();\n      }\n    });\n  }\n\n  /**\n   * Run fn as a \"chunk\".\n   * @param {function(?IdleDeadline)} fn\n   * @param {number} priority\n   */\n  run(fn, priority) {\n    const t = new Task(fn);\n    this.enqueueTask_(t, priority);\n  }\n\n  /**\n   * Run a fn that's part of AMP's startup sequence as a \"chunk\".\n   * @param {function(?IdleDeadline)} fn\n   */\n  runForStartup(fn) {\n    const t = new StartupTask(fn, this.win_, this);\n    this.enqueueTask_(t, Number.POSITIVE_INFINITY);\n  }\n\n  /**\n   * Queues a task to be executed later with given priority.\n   * @param {!Task} task\n   * @param {number} priority\n   * @private\n   */\n  enqueueTask_(task, priority) {\n    this.tasks_.enqueue(task, priority);\n    this.schedule_();\n  }\n\n  /**\n   * Returns the next task that hasn't been run yet.\n   * If `opt_dequeue` is true, remove the returned task from the queue.\n   * @param {boolean=} opt_dequeue\n   * @return {?Task}\n   * @private\n   */\n  nextTask_(opt_dequeue) {\n    let t = this.tasks_.peek();\n    // Dequeue tasks until we find one that hasn't been run yet.\n    while (t && t.state !== TaskState.NOT_RUN) {\n      this.tasks_.dequeue();\n      t = this.tasks_.peek();\n    }\n    // If `opt_dequeue` is true, remove this task from the queue.\n    if (t && opt_dequeue) {\n      this.tasks_.dequeue();\n    }\n    return t;\n  }\n\n  /**\n   * Run a task.\n   * Schedule the next round if there are more tasks.\n   * @param {?IdleDeadline} idleDeadline\n   * @return {boolean} Whether anything was executed.\n   * @private\n   */\n  execute_(idleDeadline) {\n    const t = this.nextTask_(/* opt_dequeue */ true);\n    if (!t) {\n      this.scheduledImmediateInvocation_ = false;\n      this.durationOfLastExecution_ = 0;\n      return false;\n    }\n    let before;\n    try {\n      before = Date.now();\n      t.runTask_(idleDeadline);\n    } finally {\n      // We want to capture the time of the entire task duration including\n      // scheduled immediate (from resolved promises) micro tasks.\n      // Lacking a better way to do this we just scheduled 10 nested\n      // micro tasks.\n      resolved\n        .then()\n        .then()\n        .then()\n        .then()\n        .then()\n        .then()\n        .then()\n        .then()\n        .then(() => {\n          this.scheduledImmediateInvocation_ = false;\n          this.durationOfLastExecution_ += Date.now() - before;\n          dev().fine(\n            TAG,\n            t.getName_(),\n            'Chunk duration',\n            Date.now() - before,\n            this.durationOfLastExecution_\n          );\n\n          this.schedule_();\n        });\n    }\n    return true;\n  }\n\n  /**\n   * Calls `execute_()` asynchronously.\n   * @param {?IdleDeadline} idleDeadline\n   * @private\n   */\n  executeAsap_(idleDeadline) {\n    // If we've spent over 5 millseconds executing the\n    // last instruction yeild back to the main thread.\n    // 5 milliseconds is a magic number.\n    if (\n      this.macroAfterLongTask_ &&\n      this.bodyIsVisible_ &&\n      this.durationOfLastExecution_ > 5\n    ) {\n      this.durationOfLastExecution_ = 0;\n      this.requestMacroTask_();\n      return;\n    }\n    resolved.then(() => {\n      this.boundExecute_(idleDeadline);\n    });\n  }\n\n  /**\n   * Schedule running the next queued task.\n   * @private\n   */\n  schedule_() {\n    if (this.scheduledImmediateInvocation_) {\n      return;\n    }\n    const nextTask = this.nextTask_();\n    if (!nextTask) {\n      return;\n    }\n    if (nextTask.immediateTriggerCondition_()) {\n      this.scheduledImmediateInvocation_ = true;\n      this.executeAsap_(/* idleDeadline */ null);\n      return;\n    }\n    // If requestIdleCallback exists, schedule a task with it, but\n    // do not wait longer than two seconds.\n    if (nextTask.useRequestIdleCallback_() && this.win_.requestIdleCallback) {\n      onIdle(\n        this.win_,\n        // Wait until we have a budget of at least 15ms.\n        // 15ms is a magic number. Budgets are higher when the user\n        // is completely idle (around 40), but that occurs too\n        // rarely to be usable. 15ms budgets can happen during scrolling\n        // but only if the device is doing super, super well, and no\n        // real processing is done between frames.\n        15 /* minimumTimeRemaining */,\n        2000 /* timeout */,\n        this.boundExecute_\n      );\n      return;\n    }\n    this.requestMacroTask_();\n  }\n\n  /**\n   * Requests executing of a macro task. Yields to the event queue\n   * before executing the task.\n   * Places task on browser message queue which then respectively\n   * triggers dequeuing and execution of a chunk.\n   */\n  requestMacroTask_() {\n    // The message doesn't actually matter.\n    this.win_./*OK*/ postMessage('amp-macro-task', '*');\n  }\n}\n\n/**\n * Delays calling the given function until the browser is notifying us\n * about a certain minimum budget or the timeout is reached.\n * @param {!Window} win\n * @param {number} minimumTimeRemaining Minimum number of millis idle\n *     budget for callback to fire.\n * @param {number} timeout in millis for callback to fire.\n * @param {function(?IdleDeadline)} fn Callback.\n * @visibleForTesting\n */\nexport function onIdle(win, minimumTimeRemaining, timeout, fn) {\n  const startTime = Date.now();\n  /**\n   * @param {!IdleDeadline} info\n   */\n  function rIC(info) {\n    if (info.timeRemaining() < minimumTimeRemaining) {\n      const remainingTimeout = timeout - (Date.now() - startTime);\n      if (remainingTimeout <= 0 || info.didTimeout) {\n        dev().fine(TAG, 'Timed out', timeout, info.didTimeout);\n        fn(info);\n      } else {\n        dev().fine(\n          TAG,\n          'Rescheduling with',\n          remainingTimeout,\n          info.timeRemaining()\n        );\n        win.requestIdleCallback(rIC, {timeout: remainingTimeout});\n      }\n    } else {\n      dev().fine(TAG, 'Running idle callback with ', minimumTimeRemaining);\n      fn(info);\n    }\n  }\n  win.requestIdleCallback(rIC, {timeout});\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Commonly used signals across different elements and documents.\n * @enum {string}\n */\nexport const CommonSignals = {\n  /**\n   * The element has been upgraded from ElementStub to its real implementation.\n   */\n  UPGRADED: 'upgraded',\n\n  /**\n   * The element has been built.\n   */\n  BUILT: 'built',\n\n  /**\n   * The element has started loading.\n   * LOAD_START triggers at the start of the layoutCallback.\n   */\n  LOAD_START: 'load-start',\n\n  /**\n   * Rendering has been confirmed to have been started.\n   * It is a signal to indicate meaningful display (e.g. text could be displayed\n   * CSS is correctly installed/applied).\n   *\n   * Elements can optionally implement RENDER_START signal. (e.g. ad, shadowdoc)\n   * if it want to define its own meaningful display time and toggle visibility.\n   *\n   * Simpler elements's RENDER_START can be equal to the start of the\n   * buildCallback\n   */\n  RENDER_START: 'render-start',\n\n  /**\n   * The element has been loaded.\n   * LOAD_END triggers at the end of the layoutCallback.\n   *\n   */\n  LOAD_END: 'load-end',\n\n  /**\n   * The initial contents of an element/document/embed have been loaded.\n   * INI_LOAD is an optional signal, implemented by ads, story, and elements\n   * that consist of other resources.\n   * It instructs that all critical resources has been loaded, and can be used\n   * for more accurate visibility measurement.\n   * When an element doesn't consist multiple child resources, LOAD_END signal\n   * can be used to indicate resource load completion.\n   * Note: Based on the implementation, INI_LOAD can trigger before or after\n   * LOAD_END.\n   */\n  INI_LOAD: 'ini-load',\n\n  /**\n   * The element has been unlaid out.\n   */\n  UNLOAD: 'unload',\n};\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex'];\n\nconst cdnProxyRegex =\n  typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex'];\n\n/** @type {!Object<string, string|boolean|RegExp|Array<RegExp>>} */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex: thirdPartyFrameRegex || /^d-\\d+\\.ampproject\\.net$/,\n  cdn: env['cdnUrl'] || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex:\n    cdnProxyRegex || /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] || 'https://amp-error-reporting.appspot.com/r',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/master/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.dev$/,\n  ],\n};\n\nexport const config = {\n  urls,\n};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssEscape} from '../third_party/css-escape/css-escape';\nimport {devAssert} from './log';\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nexport function assertIsName(name) {\n  devAssert(/^[\\w-]+$/.test(name));\n}\n\n/**\n * @type {boolean|undefined}\n */\nlet scopeSelectorSupported;\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\nexport function isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return (scopeSelectorSupported = testScopeSelector(el));\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\nfunction testScopeSelector(el) {\n  try {\n    const doc = el.ownerDocument;\n    const testElement = doc.createElement('div');\n    const testChild = doc.createElement('div');\n    testElement.appendChild(testChild);\n    // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n    return testElement./*OK*/ querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\nexport function prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, `$&${distribute} `);\n}\n\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n */\nexport function escapeCssSelectorIdent(ident) {\n  return cssEscape(ident);\n}\n\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\nexport function escapeCssSelectorNth(ident) {\n  const escaped = String(ident);\n  // Ensure it doesn't close the nth-child psuedo class.\n  devAssert(escaped.indexOf(')') === -1);\n  return escaped;\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether the document is ready.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isDocumentReady(doc) {\n  return doc.readyState != 'loading' && doc.readyState != 'uninitialized';\n}\n\n/**\n * Whether the document has loaded all the css and sub-resources.\n * @param {!Document} doc\n * @return {boolean}\n */\nfunction isDocumentComplete(doc) {\n  return doc.readyState == 'complete';\n}\n\n/**\n * Calls the callback when document is ready.\n * @param {!Document} doc\n * @param {function(!Document)} callback\n */\nexport function onDocumentReady(doc, callback) {\n  onDocumentState(doc, isDocumentReady, callback);\n}\n\n/**\n * Calls the callback when document's state satisfies the stateFn.\n * @param {!Document} doc\n * @param {function(!Document):boolean} stateFn\n * @param {function(!Document)} callback\n */\nfunction onDocumentState(doc, stateFn, callback) {\n  let ready = stateFn(doc);\n  if (ready) {\n    callback(doc);\n  } else {\n    const readyListener = () => {\n      if (stateFn(doc)) {\n        if (!ready) {\n          ready = true;\n          callback(doc);\n        }\n        doc.removeEventListener('readystatechange', readyListener);\n      }\n    };\n    doc.addEventListener('readystatechange', readyListener);\n  }\n}\n\n/**\n * Returns a promise that is resolved when document is ready.\n * @param {!Document} doc\n * @return {!Promise<!Document>}\n */\nexport function whenDocumentReady(doc) {\n  return new Promise(resolve => {\n    onDocumentReady(doc, resolve);\n  });\n}\n\n/**\n * Returns a promise that is resolved when document is complete.\n * @param {!Document} doc\n * @return {!Promise<!Document>}\n */\nexport function whenDocumentComplete(doc) {\n  return new Promise(resolve => {\n    onDocumentState(doc, isDocumentComplete, resolve);\n  });\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './utils/promise';\nimport {\n  assertIsName,\n  isScopeSelectorSupported,\n  prependSelectorsWith,\n} from './css';\nimport {dev, devAssert} from './log';\nimport {dict} from './utils/object';\nimport {includes, startsWith} from './string';\nimport {toWin} from './types';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise(resolve => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise(resolve => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node} after\n */\nexport function insertAfterOrAtStart(root, element, after) {\n  const before = after ? after.nextSibling : root.firstChild;\n  root.insertBefore(element, before);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (n = node; !!n.parentNode && !isShadowRoot(n); n = n.parentNode) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {*} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  // TODO(#22733): remove in preference to dom's `rootNodeFor`.\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\nexport function closest(element, callback, opt_stopAt) {\n  for (let el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\nexport function closestNode(node, callback) {\n  for (let n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\nexport function closestAncestorElementBySelector(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  return closest(element, el => {\n    return matches(el, selector);\n  });\n}\n\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\nexport function ancestorElements(child, predicate) {\n  const ancestors = [];\n  for (\n    let ancestor = child.parentElement;\n    ancestor;\n    ancestor = ancestor.parentElement\n  ) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n  return ancestors;\n}\n\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\nexport function ancestorElementsByTag(child, tagName) {\n  assertIsName(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, el => {\n    return el.tagName == tagName;\n  });\n}\n\n/**\n * Finds the first child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function childElement(parent, callback) {\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\nexport function childElements(parent, callback) {\n  const children = [];\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function lastChildElement(parent, callback) {\n  for (\n    let child = parent.lastElementChild;\n    child;\n    child = child.previousElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\nexport function childNodes(parent, callback) {\n  const nodes = [];\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function childElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelector(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function lastChildElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return lastChildElement(parent, el => {\n    return el.hasAttribute(attr);\n  });\n}\n\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {?Element}\n */\nexport function childElementByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelector(parent, `> ${tagName}`);\n}\n\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> ${tagName}`);\n}\n\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\nexport function matches(el, selector) {\n  const matcher =\n    el.matches ||\n    el.webkitMatchesSelector ||\n    el.mozMatchesSelector ||\n    el.msMatchesSelector ||\n    el.oMatchesSelector;\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n  return false; // IE8 always returns false.\n}\n\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\nexport function elementByTag(element, tagName) {\n  assertIsName(tagName);\n  return element./*OK*/ querySelector(tagName);\n}\n\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nfunction scopedQuerySelectionFallback(root, selector) {\n  const unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  const scopedSelector = prependSelectorsWith(selector, `.${unique}`);\n  const elements = root./*OK*/ querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {?Element}\n */\nexport function scopedQuerySelector(root, selector) {\n  if (isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelector(prependSelectorsWith(selector, ':scope'));\n  }\n\n  // Only IE.\n  const fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nexport function scopedQuerySelectorAll(root, selector) {\n  if (isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelectorAll(\n      prependSelectorsWith(selector, ':scope')\n    );\n  }\n\n  // Only IE.\n  return scopedQuerySelectionFallback(root, selector);\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!Element} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || (key => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    startsWith(tag, 'AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!Element} element\n * @return {!Promise<!Element>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(element);\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Replacement for `Element.requestFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n * @param {!Element} element\n */\nexport function fullscreenEnter(element) {\n  const requestFs =\n    element.requestFullscreen ||\n    element.requestFullScreen ||\n    element.webkitRequestFullscreen ||\n    element.webkitEnterFullscreen ||\n    element.msRequestFullscreen ||\n    element.mozRequestFullScreen;\n  if (requestFs) {\n    requestFs.call(element);\n  }\n}\n\n/**\n * Replacement for `Document.exitFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/exitFullscreen\n * @param {!Element} element\n */\nexport function fullscreenExit(element) {\n  const elementBoundExit =\n    element.cancelFullScreen ||\n    element.exitFullscreen ||\n    element.webkitExitFullscreen ||\n    element.webkitCancelFullScreen ||\n    element.mozCancelFullScreen ||\n    element.msExitFullscreen;\n  if (elementBoundExit) {\n    elementBoundExit.call(element);\n    return;\n  }\n  const {ownerDocument} = element;\n  if (!ownerDocument) {\n    return;\n  }\n  const docBoundExit =\n    ownerDocument.cancelFullScreen ||\n    ownerDocument.exitFullscreencancelFullScreen ||\n    ownerDocument.webkitExitFullscreencancelFullScreen ||\n    ownerDocument.webkitCancelFullScreencancelFullScreen ||\n    ownerDocument.mozCancelFullScreencancelFullScreen ||\n    ownerDocument.msExitFullscreen;\n  if (docBoundExit) {\n    docBoundExit.call(ownerDocument);\n  }\n}\n\n/**\n * Replacement for `Document.fullscreenElement`.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenElement\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isFullscreenElement(element) {\n  const {webkitDisplayingFullscreen} = element;\n  if (webkitDisplayingFullscreen !== undefined) {\n    return webkitDisplayingFullscreen;\n  }\n  const {ownerDocument} = element;\n  if (!ownerDocument) {\n    return false;\n  }\n  const fullscreenElement =\n    ownerDocument.fullscreenElement ||\n    ownerDocument.webkitFullscreenElement ||\n    ownerDocument.mozFullScreenElement ||\n    ownerDocument.webkitCurrentFullScreenElement;\n  return fullscreenElement == element;\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!Element} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport {\n  getAmpdoc,\n  getExistingServiceForDocInEmbedScope,\n  getService,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n  getTopWindow,\n} from './service';\nimport {toWin} from './types';\nimport {userAssert} from './log';\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementService(win, id, extension, opt_element) {\n  return getElementServiceIfAvailable(win, id, extension, opt_element).then(\n    service => assertService(service, id, extension)\n  );\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(win, id, extension, opt_element) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(win, id, extension, opt_element);\n}\n\n/**\n * @param {!Window} win\n * @param {string} elementName Name of an extended custom element.\n * @return {boolean} Whether this element is scheduled to be loaded.\n */\nfunction isElementScheduled(win, elementName) {\n  // Set in custom-element.js\n  if (!win.__AMP_EXTENDED_ELEMENTS) {\n    return false;\n  }\n  return !!win.__AMP_EXTENDED_ELEMENTS[elementName];\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then(service => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .waitForBodyOpen()\n    .then(() =>\n      waitForExtensionIfPresent(ampdoc.win, extension, ampdoc.win.document.head)\n    )\n    .then(() => {\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      } else if (isElementScheduled(ampdoc.win, extension)) {\n        return getServicePromiseForDoc(element, id);\n      }\n      return null;\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getExistingServiceForDocInEmbedScope(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  const win = toWin(element.ownerDocument.defaultView);\n  const topWin = getTopWindow(win);\n  // In embeds, doc services are stored on the embed window.\n  if (win !== topWin) {\n    return getElementServicePromiseOrNull(win, id, extension);\n  } else {\n    // Only fallback to element's ampdoc (top-level) if not embedded.\n    return getElementServiceIfAvailableForDoc(element, id, extension);\n  }\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (userAssert(\n    service,\n    'Service %s was requested to be provided through %s, ' +\n      'but %s is not loaded in the current page. To fix this ' +\n      'problem load the JavaScript file for %s in this page.',\n    id,\n    extension,\n    extension,\n    extension\n  ));\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Array<string>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  const scripts = {};\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const name =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    scripts[name] = true;\n  }\n  return Object.keys(scripts);\n}\n\n/**\n * Waits for body to be present then verifies that an extension script is\n * present in head for installation.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} extensionId\n * @return {!Promise<boolean>}\n */\nexport function isExtensionScriptInNode(ampdoc, extensionId) {\n  return ampdoc.waitForBodyOpen().then(() => {\n    return extensionScriptInNode(ampdoc.getHeadNode(), extensionId);\n  });\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @param {string} extensionId\n * @return {boolean}\n * @private\n */\nfunction extensionScriptInNode(head, extensionId) {\n  return extensionScriptsInNode(head).includes(extensionId);\n}\n\n/**\n * Waits for an extension if its script is present\n * @param {!Window} win\n * @param {string} extension\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Promise}\n * @private\n */\nfunction waitForExtensionIfPresent(win, extension, head) {\n  /**\n   * If there is an extension script wait for it to load before trying\n   * to get the service. Prevents a race condition when everything but\n   * the extensions is in cache. If there is no script then it's either\n   * not present, or the service was defined by a test. In those cases\n   * we don't wait around for an extension that does not exist.\n   */\n\n  // TODO(jpettitt) investigate registerExtension to short circuit\n  // the dom call in extensionScriptsInNode()\n  if (!extensionScriptInNode(head, extension)) {\n    return Promise.resolve();\n  }\n\n  const extensions = getService(win, 'extensions');\n  return /** @type {!Promise<?Object>} */ (extensions.waitForExtension(\n    win,\n    extension\n  ));\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(win, id, extension, opt_element) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => waitForExtensionIfPresent(win, extension, win.document.head))\n    .then(() => {\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      } else if (isElementScheduled(win, extension)) {\n        return getServicePromise(win, id);\n      }\n      return null;\n    });\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AmpEvents} from './amp-events';\nimport {Services} from './services';\nimport {\n  USER_ERROR_SENTINEL,\n  dev,\n  duplicateErrorIfNecessary,\n  isUserErrorEmbed,\n  isUserErrorMessage,\n} from './log';\nimport {dict} from './utils/object';\nimport {experimentTogglesOrNull, getBinaryType, isCanary} from './experiments';\nimport {exponentialBackoff} from './exponential-backoff';\nimport {getMode} from './mode';\nimport {isLoadErrorMessage} from './event-helper';\nimport {isProxyOrigin} from './url';\nimport {makeBodyVisibleRecovery} from './style-installer';\nimport {startsWith} from './string';\nimport {triggerAnalyticsEvent} from './analytics';\nimport {urls} from './config';\n\n/**\n * @const {string}\n */\nconst CANCELLED = 'CANCELLED';\n\n/**\n * @const {string}\n */\nconst BLOCK_BY_CONSENT = 'BLOCK_BY_CONSENT';\n\n/**\n * @const {string}\n */\nconst ABORTED = 'AbortError';\n\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\nconst NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD = 0.001;\n\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\nconst USER_ERROR_THROTTLE_THRESHOLD = 0.1;\n\n/**\n * Collects error messages, so they can be included in subsequent reports.\n * That allows identifying errors that might be caused by previous errors.\n */\nlet accumulatedErrorMessages = self.__AMP_ERRORS || [];\n// Use a true global, to avoid multi-module inclusion issues.\nself.__AMP_ERRORS = accumulatedErrorMessages;\n\n/**\n * Pushes element into array, keeping at most the most recent limit elements\n *\n * @param {!Array<T>} array\n * @param {T} element\n * @param {number} limit\n * @template T\n */\nfunction pushLimit(array, element, limit) {\n  if (array.length >= limit) {\n    array.splice(0, array.length - limit + 1);\n  }\n  array.push(element);\n}\n\n/**\n * A wrapper around our exponentialBackoff, to lazy initialize it to avoid an\n * un-DCE'able side-effect.\n * @param {function()} work the function to execute after backoff\n * @return {number} the setTimeout id\n */\nlet reportingBackoff = function(work) {\n  // Set reportingBackoff as the lazy-created function. JS Vooodoooo.\n  reportingBackoff = exponentialBackoff(1.5);\n  return reportingBackoff(work);\n};\n\n/**\n * Attempts to stringify a value, falling back to String.\n * @param {*} value\n * @return {string}\n */\nfunction tryJsonStringify(value) {\n  try {\n    // Cast is fine, because we really don't care here. Just trying.\n    return JSON.stringify(/** @type {!JsonObject} */ (value));\n  } catch (e) {\n    return String(value);\n  }\n}\n\n/**\n * The true JS engine, as detected by inspecting an Error stack. This should be\n * used with the userAgent to tell definitely. I.e., Chrome on iOS is really a\n * Safari JS engine.\n */\nlet detectedJsEngine;\n\n/**\n * @param {!Window} win\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n */\nexport function reportErrorForWin(win, error, opt_associatedElement) {\n  reportError(error, opt_associatedElement);\n  if (\n    error &&\n    !!win &&\n    isUserErrorMessage(error.message) &&\n    !isUserErrorEmbed(error.message)\n  ) {\n    reportErrorToAnalytics(/** @type {!Error} */ (error), win);\n  }\n}\n\n/**\n * Reports an error. If the error has an \"associatedElement\" property\n * the element is marked with the `i-amphtml-element-error` and displays\n * the message itself. The message is always send to the console.\n * If the error has a \"messageArray\" property, that array is logged.\n * This way one gets the native fidelity of the console for things like\n * elements instead of stringification.\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n * @return {!Error}\n */\nexport function reportError(error, opt_associatedElement) {\n  try {\n    // Convert error to the expected type.\n    let isValidError;\n    if (error) {\n      if (error.message !== undefined) {\n        error = duplicateErrorIfNecessary(/** @type {!Error} */ (error));\n        isValidError = true;\n      } else {\n        const origError = error;\n        error = new Error(tryJsonStringify(origError));\n        error.origError = origError;\n      }\n    } else {\n      error = new Error('Unknown error');\n    }\n    // Report if error is not an expected type.\n    if (!isValidError && getMode().localDev && !getMode().test) {\n      setTimeout(function() {\n        const rethrow = new Error(\n          '_reported_ Error reported incorrectly: ' + error\n        );\n        throw rethrow;\n      });\n    }\n\n    if (error.reported) {\n      return /** @type {!Error} */ (error);\n    }\n    error.reported = true;\n\n    // Update element.\n    const element = opt_associatedElement || error.associatedElement;\n    if (element && element.classList) {\n      element.classList.add('i-amphtml-error');\n      if (getMode().development) {\n        element.classList.add('i-amphtml-element-error');\n        element.setAttribute('error-message', error.message);\n      }\n    }\n\n    // Report to console.\n    if (self.console) {\n      const output = console.error || console.log;\n      if (error.messageArray) {\n        output.apply(console, error.messageArray);\n      } else {\n        if (element) {\n          output.call(console, error.message, element);\n        } else if (!getMode().minified) {\n          output.call(console, error.stack);\n        } else {\n          output.call(console, error.message);\n        }\n      }\n    }\n    if (element && element.dispatchCustomEventForTesting) {\n      element.dispatchCustomEventForTesting(AmpEvents.ERROR, error.message);\n    }\n\n    // 'call' to make linter happy. And .call to make compiler happy\n    // that expects some @this.\n    onError['call'](\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      error\n    );\n  } catch (errorReportingError) {\n    setTimeout(function() {\n      throw errorReportingError;\n    });\n  }\n  return /** @type {!Error} */ (error);\n}\n\n/**\n * Returns an error for a cancellation of a promise.\n * @return {!Error}\n */\nexport function cancellation() {\n  return new Error(CANCELLED);\n}\n\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\nexport function isCancellation(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n  if (typeof errorOrMessage == 'string') {\n    return startsWith(errorOrMessage, CANCELLED);\n  }\n  if (typeof errorOrMessage.message == 'string') {\n    return startsWith(errorOrMessage.message, CANCELLED);\n  }\n  return false;\n}\n\n/**\n * Returns an error for component blocked by consent\n * @return {!Error}\n */\nexport function blockedByConsentError() {\n  return new Error(BLOCK_BY_CONSENT);\n}\n\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\nexport function isBlockedByConsent(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n  if (typeof errorOrMessage == 'string') {\n    return startsWith(errorOrMessage, BLOCK_BY_CONSENT);\n  }\n  if (typeof errorOrMessage.message == 'string') {\n    return startsWith(errorOrMessage.message, BLOCK_BY_CONSENT);\n  }\n  return false;\n}\n\n/**\n * Install handling of global unhandled exceptions.\n * @param {!Window} win\n */\nexport function installErrorReporting(win) {\n  win.onerror = /** @type {!Function} */ (onError);\n  win.addEventListener('unhandledrejection', event => {\n    if (\n      event.reason &&\n      (event.reason.message === CANCELLED ||\n        event.reason.message === BLOCK_BY_CONSENT ||\n        event.reason.message === ABORTED)\n    ) {\n      event.preventDefault();\n      return;\n    }\n    reportError(event.reason || new Error('rejected promise ' + event));\n  });\n}\n\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @this {!Window|undefined}\n */\nfunction onError(message, filename, line, col, error) {\n  // Make an attempt to unhide the body.\n  if (this && this.document) {\n    makeBodyVisibleRecovery(this.document);\n  }\n  if (getMode().localDev || getMode().development || getMode().test) {\n    return;\n  }\n  let hasNonAmpJs = false;\n  try {\n    hasNonAmpJs = detectNonAmpJs(self);\n  } catch (ignore) {\n    // Ignore errors during error report generation.\n  }\n  if (hasNonAmpJs && Math.random() > 0.01) {\n    // Only report 1% of errors on pages with non-AMP JS.\n    // These errors can almost never be acted upon, but spikes such as\n    // due to buggy browser extensions may be helpful to notify authors.\n    return;\n  }\n  const data = getErrorReportData(\n    message,\n    filename,\n    line,\n    col,\n    error,\n    hasNonAmpJs\n  );\n  if (data) {\n    reportingBackoff(() => {\n      try {\n        return reportErrorToServerOrViewer(\n          this,\n          /** @type {!JsonObject} */ (data)\n        ).catch(() => {\n          // catch async errors to avoid recursive errors.\n        });\n      } catch (e) {\n        // catch async errors to avoid recursive errors.\n      }\n    });\n  }\n}\n\n/**\n * Passes the given error data to either server or viewer.\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {Promise<undefined>}\n */\nexport function reportErrorToServerOrViewer(win, data) {\n  // Report the error to viewer if it has the capability. The data passed\n  // to the viewer is exactly the same as the data passed to the server\n  // below.\n  return maybeReportErrorToViewer(win, data).then(reportedErrorToViewer => {\n    if (!reportedErrorToViewer) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('POST', urls.errorReporting, true);\n      xhr.send(JSON.stringify(data));\n    }\n  });\n}\n\n/**\n * Passes the given error data to the viewer if the following criteria is met:\n * - The viewer is a trusted viewer\n * - The viewer has the `errorReporter` capability\n * - The AMP doc is in single doc mode\n * - The AMP doc is opted-in for error interception (`<html>` tag has the\n *   `report-errors-to-viewer` attribute)\n *\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {!Promise<boolean>} `Promise<True>` if the error was sent to the\n *     viewer, `Promise<False>` otherwise.\n * @visibleForTesting\n */\nexport function maybeReportErrorToViewer(win, data) {\n  const ampdocService = Services.ampdocServiceFor(win);\n  if (!ampdocService.isSingleDoc()) {\n    return Promise.resolve(false);\n  }\n  const ampdocSingle = ampdocService.getSingleDoc();\n  const htmlElement = ampdocSingle.getRootNode().documentElement;\n  const docOptedIn = htmlElement.hasAttribute('report-errors-to-viewer');\n  if (!docOptedIn) {\n    return Promise.resolve(false);\n  }\n  const viewer = Services.viewerForDoc(ampdocSingle);\n  if (!viewer.hasCapability('errorReporter')) {\n    return Promise.resolve(false);\n  }\n  return viewer.isTrustedViewer().then(viewerTrusted => {\n    if (!viewerTrusted) {\n      return false;\n    }\n    viewer.sendMessage('error', errorReportingDataForViewer(data));\n    return true;\n  });\n}\n\n/**\n * Strips down the error reporting data to a minimal set\n * to be sent to the viewer.\n * @param {!JsonObject} errorReportData\n * @return {!JsonObject}\n * @visibleForTesting\n */\nexport function errorReportingDataForViewer(errorReportData) {\n  return dict({\n    'm': errorReportData['m'], // message\n    'a': errorReportData['a'], // isUserError\n    's': errorReportData['s'], // error stack\n    'el': errorReportData['el'], // tagName\n    'ex': errorReportData['ex'], // expected error?\n    'v': errorReportData['v'], // runtime\n    'jse': errorReportData['jse'], // detectedJsEngine\n  });\n}\n\n/**\n * @param {string|undefined}  message\n * @param {*|undefined} error\n * @return {string}\n */\nfunction buildErrorMessage_(message, error) {\n  if (error) {\n    if (error.message) {\n      message = error.message;\n    } else {\n      // This should never be a string, but sometimes it is.\n      message = String(error);\n    }\n  }\n  if (!message) {\n    message = 'Unknown error';\n  }\n\n  return message;\n}\n\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @param {boolean} hasNonAmpJs\n * @return {!JsonObject|undefined} The data to post\n * visibleForTesting\n */\nexport function getErrorReportData(\n  message,\n  filename,\n  line,\n  col,\n  error,\n  hasNonAmpJs\n) {\n  message = buildErrorMessage_(message, error);\n  // An \"expected\" error is still an error, i.e. some features are disabled\n  // or not functioning fully because of it. However, it's an expected\n  // error. E.g. as is the case with some browser API missing (storage).\n  // Thus, the error can be classified differently by log aggregators.\n  // The main goal is to monitor that an \"expected\" error doesn't deteriorate\n  // over time. It's impossible to completely eliminate it.\n  let expected = !!(error && error.expected);\n  if (/_reported_/.test(message)) {\n    return;\n  }\n  if (message == CANCELLED) {\n    return;\n  }\n\n  const detachedWindow = !(self && self.window);\n  const throttleBase = Math.random();\n\n  // We throttle load errors and generic \"Script error.\" errors\n  // that have no information and thus cannot be acted upon.\n  if (\n    isLoadErrorMessage(message) ||\n    // See https://github.com/ampproject/amphtml/issues/7353\n    // for context.\n    message == 'Script error.' ||\n    // Window has become detached, really anything can happen\n    // at this point.\n    detachedWindow\n  ) {\n    expected = true;\n\n    if (throttleBase > NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD) {\n      return;\n    }\n  }\n\n  const isUserError = isUserErrorMessage(message);\n\n  // Only report a subset of user errors.\n  if (isUserError && throttleBase > USER_ERROR_THROTTLE_THRESHOLD) {\n    return;\n  }\n\n  // This is the App Engine app in\n  // https://github.com/ampproject/error-tracker\n  // It stores error reports via https://cloud.google.com/error-reporting/\n  // for analyzing production issues.\n  const data = /** @type {!JsonObject} */ (Object.create(null));\n  data['v'] = getMode().rtvVersion;\n  data['noAmp'] = hasNonAmpJs ? '1' : '0';\n  data['m'] = message.replace(USER_ERROR_SENTINEL, '');\n  data['a'] = isUserError ? '1' : '0';\n\n  // Errors are tagged with \"ex\" (\"expected\") label to allow loggers to\n  // classify these errors as benchmarks and not exceptions.\n  data['ex'] = expected ? '1' : '0';\n  data['dw'] = detachedWindow ? '1' : '0';\n\n  let runtime = '1p';\n  if (self.context && self.context.location) {\n    data['3p'] = '1';\n    runtime = '3p';\n  } else if (getMode().runtime) {\n    runtime = getMode().runtime;\n  }\n\n  if (getMode().singlePassType) {\n    data['spt'] = getMode().singlePassType;\n  }\n\n  data['rt'] = runtime;\n\n  // Add our a4a id if we are inabox\n  if (runtime === 'inabox') {\n    data['adid'] = getMode().a4aId;\n  }\n\n  // TODO(erwinm): Remove ca when all systems read `bt` instead of `ca` to\n  // identify js binary type.\n  data['ca'] = isCanary(self) ? '1' : '0';\n\n  // Pass binary type.\n  data['bt'] = getBinaryType(self);\n\n  if (self.location.ancestorOrigins && self.location.ancestorOrigins[0]) {\n    data['or'] = self.location.ancestorOrigins[0];\n  }\n  if (self.viewerState) {\n    data['vs'] = self.viewerState;\n  }\n  // Is embedded?\n  if (self.parent && self.parent != self) {\n    data['iem'] = '1';\n  }\n\n  if (self.AMP && self.AMP.viewer) {\n    const resolvedViewerUrl = self.AMP.viewer.getResolvedViewerUrl();\n    const messagingOrigin = self.AMP.viewer.maybeGetMessagingOrigin();\n    if (resolvedViewerUrl) {\n      data['rvu'] = resolvedViewerUrl;\n    }\n    if (messagingOrigin) {\n      data['mso'] = messagingOrigin;\n    }\n  }\n\n  if (!detectedJsEngine) {\n    detectedJsEngine = detectJsEngineFromStack();\n  }\n  data['jse'] = detectedJsEngine;\n\n  const exps = [];\n  const experiments = experimentTogglesOrNull(self);\n  for (const exp in experiments) {\n    const on = experiments[exp];\n    exps.push(`${exp}=${on ? '1' : '0'}`);\n  }\n  data['exps'] = exps.join(',');\n\n  if (error) {\n    const tagName = error.associatedElement\n      ? error.associatedElement.tagName\n      : 'u'; // Unknown\n    data['el'] = tagName;\n\n    if (error.args) {\n      data['args'] = JSON.stringify(error.args);\n    }\n\n    if (!isUserError && !error.ignoreStack && error.stack) {\n      data['s'] = error.stack;\n    }\n\n    // TODO(jridgewell, #18574); Make sure error is always an object.\n    if (error.message) {\n      error.message += ' _reported_';\n    }\n  } else {\n    data['f'] = filename || '';\n    data['l'] = line || '';\n    data['c'] = col || '';\n  }\n  data['r'] = self.document ? self.document.referrer : '';\n  data['ae'] = accumulatedErrorMessages.join(',');\n  data['fr'] = self.location.originalHash || self.location.hash;\n\n  pushLimit(accumulatedErrorMessages, message, 25);\n\n  return data;\n}\n\n/**\n * Returns true if it appears like there is non-AMP JS on the\n * current page.\n * @param {!Window} win\n * @return {boolean}\n * @visibleForTesting\n */\nexport function detectNonAmpJs(win) {\n  if (!win.document) {\n    return false;\n  }\n  const scripts = win.document.querySelectorAll('script[src]');\n  for (let i = 0; i < scripts.length; i++) {\n    if (!isProxyOrigin(scripts[i].src.toLowerCase())) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Resets accumulated error messages for testing\n */\nexport function resetAccumulatedErrorMessagesForTesting() {\n  accumulatedErrorMessages = [];\n}\n\n/**\n * Does a series of checks on the stack of an thrown error to determine the\n * JS engine that is currently running. This gives a bit more information than\n * just the UserAgent, since browsers often allow overriding it to \"emulate\"\n * mobile.\n * @return {string}\n * @visibleForTesting\n */\nexport function detectJsEngineFromStack() {\n  /** @constructor */\n  function Fn() {}\n  Fn.prototype.t = function() {\n    throw new Error('message');\n  };\n  const object = new Fn();\n  try {\n    object.t();\n  } catch (e) {\n    const {stack} = e;\n\n    // Safari only mentions the method name.\n    if (startsWith(stack, 't@')) {\n      return 'Safari';\n    }\n\n    // Firefox mentions \"prototype\".\n    if (stack.indexOf('.prototype.t@') > -1) {\n      return 'Firefox';\n    }\n\n    // IE looks like Chrome, but includes a context for the base stack line.\n    // Explicitly, we're looking for something like:\n    // \"    at Global code (https://example.com/app.js:1:200)\" or\n    // \"    at Anonymous function (https://example.com/app.js:1:200)\"\n    // vs Chrome which has:\n    // \"    at https://example.com/app.js:1:200\"\n    const last = stack.split('\\n').pop();\n    if (/\\bat .* \\(/i.test(last)) {\n      return 'IE';\n    }\n\n    // Finally, chrome includes the error message in the stack.\n    if (startsWith(stack, 'Error: message')) {\n      return 'Chrome';\n    }\n  }\n\n  return 'unknown';\n}\n\n/**\n * @param {!Error} error\n * @param {!Window} win\n */\nexport function reportErrorToAnalytics(error, win) {\n  // Currently this can only be executed in a single-doc mode. Otherwise,\n  // it's not clear which ampdoc the event would belong too.\n  if (Services.ampdocServiceFor(win).isSingleDoc()) {\n    const vars = dict({\n      'errorName': error.name,\n      'errorMessage': error.message,\n    });\n    triggerAnalyticsEvent(getRootElement_(win), 'user-error', vars);\n  }\n}\n\n/**\n * @param {!Window} win\n * @return {!Element}\n * @private\n */\nfunction getRootElement_(win) {\n  const root = Services.ampdocServiceFor(win)\n    .getSingleDoc()\n    .getRootNode();\n  return dev().assertElement(root.documentElement || root.body || root);\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet optsSupported;\n\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function internalListenImplementation(\n  element,\n  eventType,\n  listener,\n  opt_evtListenerOpts\n) {\n  let localElement = element;\n  let localListener = listener;\n  /**\n   * @type {?Function}\n   */\n  let wrapped;\n\n  wrapped = event => {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n      throw e;\n    }\n  };\n  const optsSupported = detectEvtListenerOptsSupport();\n  let capture = false;\n  if (opt_evtListenerOpts) {\n    capture = opt_evtListenerOpts.capture;\n  }\n  localElement.addEventListener(\n    eventType,\n    wrapped,\n    optsSupported ? opt_evtListenerOpts : capture\n  );\n  return () => {\n    if (localElement) {\n      localElement.removeEventListener(\n        eventType,\n        wrapped,\n        optsSupported ? opt_evtListenerOpts : capture\n      );\n    }\n    // Ensure these are GC'd\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\nexport function detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    const options = {\n      get capture() {\n        optsSupported = true;\n      },\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return optsSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\nexport function resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalListenImplementation} from './event-helper-listen';\nimport {lastChildElement} from './dom';\nimport {user} from './log';\n\n/** @const {string}  */\nconst LOAD_FAILURE_PREFIX = 'Failed to load:';\n\n/** @const {string} */\nexport const MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\nexport function createCustomEvent(win, type, detail, opt_eventInit) {\n  const eventInit = /** @type {!CustomEventInit} */ ({detail});\n  Object.assign(eventInit, opt_eventInit);\n  // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n  if (typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    const e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(\n      type,\n      !!eventInit.bubbles,\n      !!eventInit.cancelable,\n      detail\n    );\n    return e;\n  }\n}\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getData(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.data);\n}\n\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getDetail(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.detail);\n}\n\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  let localListener = listener;\n  const unlisten = internalListenImplementation(\n    element,\n    eventType,\n    event => {\n      try {\n        localListener(event);\n      } finally {\n        // Ensure listener is GC'd\n        localListener = null;\n        unlisten();\n      }\n    },\n    opt_evtListenerOpts\n  );\n  return unlisten;\n}\n\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\nexport function listenOncePromise(\n  element,\n  eventType,\n  opt_evtListenerOpts,\n  opt_cancel\n) {\n  let unlisten;\n  const eventPromise = new Promise(resolve => {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n  return eventPromise;\n}\n\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nexport function isLoaded(eleOrWindow) {\n  return !!(\n    eleOrWindow.complete ||\n    eleOrWindow.readyState == 'complete' ||\n    (isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0) ||\n    // If the passed in thing is a Window, infer loaded state from\n    //\n    (eleOrWindow.document && eleOrWindow.document.readyState == 'complete')\n  );\n}\n\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\nexport function loadPromise(eleOrWindow) {\n  let unlistenLoad;\n  let unlistenError;\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n  const isMediaElement = isHTMLMediaElement(eleOrWindow);\n  if (\n    isMediaElement &&\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc\n  ) {\n    return Promise.reject(eleOrWindow);\n  }\n  const loadingPromise = new Promise((resolve, reject) => {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true,\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    }\n    // Don't unlisten on error for Windows.\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n    let errorTarget = eleOrWindow;\n    // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = lastChildElement(\n        eleOrWindow,\n        child => child.tagName === 'SOURCE'\n      );\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n\n  return loadingPromise.then(\n    () => {\n      if (unlistenError) {\n        unlistenError();\n      }\n      return eleOrWindow;\n    },\n    () => {\n      if (unlistenLoad) {\n        unlistenLoad();\n      }\n      failedToLoad(eleOrWindow);\n    }\n  );\n}\n\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] =\n      eleOrWindow.currentSrc || true;\n  }\n\n  // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n  let target = eleOrWindow;\n  if (target && target.src) {\n    target = target.src;\n  }\n  throw user().createError(LOAD_FAILURE_PREFIX, target);\n}\n\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\nexport function isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\nimport {dev, user} from './log';\nimport {getMode} from './mode';\nimport {hasOwn} from './utils/object';\nimport {parseQueryString} from './url';\n\n/** @const {string} */\nconst TAG = 'EXPERIMENTS';\n\n/** @const {string} */\nconst LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n\n/** @const {string} */\nconst TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n\n/**\n * @typedef {{\n *   isTrafficEligible: function(!Window):boolean,\n *   branches: !Array<string>\n * }}\n */\nexport let ExperimentInfo;\n\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCanary(win) {\n  return !!(win.AMP_CONFIG && win.AMP_CONFIG.canary);\n}\n\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\nexport function getBinaryType(win) {\n  return win.AMP_CONFIG && win.AMP_CONFIG.type\n    ? win.AMP_CONFIG.type\n    : 'unknown';\n}\n\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\nexport function isExperimentOn(win, experimentId) {\n  const toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\nexport function toggleExperiment(\n  win,\n  experimentId,\n  opt_on,\n  opt_transientExperiment\n) {\n  const currentlyOn = isExperimentOn(win, /*OK*/ experimentId);\n  const on = !!(opt_on !== undefined ? opt_on : !currentlyOn);\n  if (on != currentlyOn) {\n    const toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      const storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles);\n      // Avoid affecting tests that spy/stub warn().\n      if (!getMode().test) {\n        user().warn(\n          TAG,\n          '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental',\n          experimentId,\n          on ? 'enabled' : 'disabled',\n          win.location.hostname\n        );\n      }\n    }\n  }\n  return on;\n}\n\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nexport function experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n  win[TOGGLES_WINDOW_PROPERTY] = Object.create(null);\n  const toggles = win[TOGGLES_WINDOW_PROPERTY];\n\n  // Read the default config of this build.\n  if (win.AMP_CONFIG) {\n    for (const experimentId in win.AMP_CONFIG) {\n      const frequency = win.AMP_CONFIG[experimentId];\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  }\n  // Read document level override from meta tag.\n  if (\n    win.AMP_CONFIG &&\n    Array.isArray(win.AMP_CONFIG['allow-doc-opt-in']) &&\n    win.AMP_CONFIG['allow-doc-opt-in'].length > 0\n  ) {\n    const allowed = win.AMP_CONFIG['allow-doc-opt-in'];\n    const meta = win.document.head.querySelector(\n      'meta[name=\"amp-experiments-opt-in\"]'\n    );\n    if (meta) {\n      const optedInExperiments = meta.getAttribute('content').split(',');\n      for (let i = 0; i < optedInExperiments.length; i++) {\n        if (allowed.indexOf(optedInExperiments[i]) != -1) {\n          toggles[optedInExperiments[i]] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  if (\n    win.AMP_CONFIG &&\n    Array.isArray(win.AMP_CONFIG['allow-url-opt-in']) &&\n    win.AMP_CONFIG['allow-url-opt-in'].length > 0\n  ) {\n    const allowed = win.AMP_CONFIG['allow-url-opt-in'];\n    const hash = win.location.originalHash || win.location.hash;\n    const params = parseQueryString(hash);\n    for (let i = 0; i < allowed.length; i++) {\n      const param = params[`e-${allowed[i]}`];\n      if (param == '1') {\n        toggles[allowed[i]] = true;\n      }\n      if (param == '0') {\n        toggles[allowed[i]] = false;\n      }\n    }\n  }\n  return toggles;\n}\n\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {Object<string, boolean>}\n */\nexport function experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nfunction getExperimentToggles(win) {\n  let experimentsString = '';\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch (e) {\n    dev().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n  const tokens = experimentsString ? experimentsString.split(/\\s*,\\s*/g) : [];\n\n  const toggles = Object.create(null);\n  for (let i = 0; i < tokens.length; i++) {\n    if (tokens[i].length == 0) {\n      continue;\n    }\n    if (tokens[i][0] == '-') {\n      toggles[tokens[i].substr(1)] = false;\n    } else {\n      toggles[tokens[i]] = true;\n    }\n  }\n  return toggles;\n}\n\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\nfunction saveExperimentToggles(win, toggles) {\n  const experimentIds = [];\n  for (const experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n  try {\n    if ('localStorage' in win) {\n      win.localStorage.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n    }\n  } catch (e) {\n    user().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\nexport function getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\nexport const RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng,\n};\n\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\nfunction selectRandomItem(arr) {\n  const rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return arr[Math.floor(rn * arr.length)] || null;\n}\n\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Object<string, !ExperimentInfo>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\nexport function randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  const selectedExperiments = {};\n  for (const experimentName in experiments) {\n    // Skip experimentName if it is not a key of experiments object or if it\n    // has already been populated by some other property.\n    if (!hasOwn(experiments, experimentName)) {\n      continue;\n    }\n    if (hasOwn(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (\n      !experiments[experimentName].isTrafficEligible ||\n      !experiments[experimentName].isTrafficEligible(win)\n    ) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    }\n\n    // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n    if (\n      !win.__AMP_EXPERIMENT_BRANCHES[experimentName] &&\n      isExperimentOn(win, /*OK*/ experimentName)\n    ) {\n      const {branches} = experiments[experimentName];\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(\n        branches\n      );\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n  return selectedExperiments;\n}\n\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\nexport function getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES\n    ? win.__AMP_EXPERIMENT_BRANCHES[experimentName]\n    : null;\n}\n\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\nexport function forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {number=} opt_base Exponential base. Defaults to 2.\n * @return {function(function()): number} Function that when invoked will\n *     call the passed in function. On every invocation the next\n *     invocation of the passed in function will be exponentially\n *     later. Returned function returns timeout id.\n */\nexport function exponentialBackoff(opt_base) {\n  const getTimeout = exponentialBackoffClock(opt_base);\n  return work => {\n    return setTimeout(work, getTimeout());\n  };\n}\n\n/**\n * @param {number=} opt_base Exponential base. Defaults to 2.\n * @return {function(): number} Function that when invoked will return\n *    a number that exponentially grows per invocation.\n */\nexport function exponentialBackoffClock(opt_base) {\n  const base = opt_base || 2;\n  let count = 0;\n  return () => {\n    let wait = Math.pow(base, count++);\n    wait += getJitter(wait);\n    return wait * 1000;\n  };\n}\n\n/**\n * Add jitter to avoid the thundering herd. This can e.g. happen when\n * we poll a backend and it fails for everyone at the same time.\n * We add up to 30% (default) longer or shorter than the given time.\n *\n * @param {number} wait the amount if base milliseconds\n * @param {number=} opt_perc the min/max percentage to add or sutract\n * @return {number}\n */\nexport function getJitter(wait, opt_perc) {\n  opt_perc = opt_perc || 0.3;\n  let jitter = wait * opt_perc * Math.random();\n  if (Math.random() > 0.5) {\n    jitter *= -1;\n  }\n  return jitter;\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\nimport {getFormAsObject, getSubmitButtonUsed} from './form';\nimport {iterateCursor} from './dom';\nimport {map} from './utils/object';\n\n/**\n * Create a form data wrapper. The wrapper is necessary to provide a common\n * API for FormData objects on all browsers. For example, not all browsers\n * support the FormData#entries or FormData#delete functions.\n *\n * @param {!Window} win\n * @param {!HTMLFormElement=} opt_form\n * @return {!FormDataWrapperInterface}\n */\nexport function createFormDataWrapper(win, opt_form) {\n  const platform = Services.platformFor(win);\n\n  if (platform.isIos() && platform.getMajorVersion() == 11) {\n    return new Ios11NativeFormDataWrapper(opt_form);\n  } else if (FormData.prototype.entries && FormData.prototype.delete) {\n    return new NativeFormDataWrapper(opt_form);\n  } else {\n    return new PolyfillFormDataWrapper(opt_form);\n  }\n}\n\n/**\n * Check if the given object is a FormDataWrapper instance\n * @param {*} o\n * @return {boolean} True if the object is a FormDataWrapper instance.\n */\nexport function isFormDataWrapper(o) {\n  // instanceof doesn't work as expected, so we detect with duck-typing.\n  return !!o && typeof o.getFormData == 'function';\n}\n\n/**\n * A polyfill wrapper for a `FormData` object.\n *\n * If there's no native `FormData#entries`, chances are there are no native\n * methods to read the content of the `FormData` after construction, so the\n * only way to implement `entries` in this class is to capture the fields in\n * the form passed to the constructor (and the arguments passed to the\n * `append` method).\n *\n * For more details on this, see http://mdn.io/FormData.\n *\n * @implements {FormDataWrapperInterface}\n * @visibleForTesting\n */\nexport class PolyfillFormDataWrapper {\n  /** @override */\n  constructor(opt_form = undefined) {\n    /** @private @const {!Object<string, !Array<string>>} */\n    this.fieldValues_ = opt_form ? getFormAsObject(opt_form) : map();\n  }\n\n  /**\n   * @param {string} name\n   * @param {string|!File} value\n   * @param {string=} opt_filename\n   * @override\n   */\n  append(name, value, opt_filename) {\n    // Coercion to string is required to match\n    // the native FormData.append behavior\n    const nameString = String(name);\n    this.fieldValues_[nameString] = this.fieldValues_[nameString] || [];\n    this.fieldValues_[nameString].push(String(value));\n  }\n\n  /** @override */\n  delete(name) {\n    delete this.fieldValues_[name];\n  }\n\n  /** @override */\n  entries() {\n    const fieldEntries = [];\n    Object.keys(this.fieldValues_).forEach(name => {\n      const values = this.fieldValues_[name];\n      values.forEach(value => fieldEntries.push([name, value]));\n    });\n\n    // Generator functions are not supported by the current Babel configuration,\n    // so we must manually implement the iterator interface.\n    let nextIndex = 0;\n    return /** @type {!Iterator<!Array<string>>} */ ({\n      next() {\n        return nextIndex < fieldEntries.length\n          ? {value: fieldEntries[nextIndex++], done: false}\n          : {value: undefined, done: true};\n      },\n    });\n  }\n\n  /** @override */\n  getFormData() {\n    const formData = new FormData();\n\n    Object.keys(this.fieldValues_).forEach(name => {\n      const values = this.fieldValues_[name];\n      values.forEach(value => formData.append(name, value));\n    });\n\n    return formData;\n  }\n}\n\n/**\n * Wrap the native `FormData` implementation.\n *\n * NOTE: This differs from the standard `FormData` constructor. This constructor\n * includes a submit button if it was used to submit the `opt_form`, where\n * the native `FormData` constructor does not include the submit button used to\n * submit the form.\n * {@link https://xhr.spec.whatwg.org/#dom-formdata}\n * @implements {FormDataWrapperInterface}\n */\nclass NativeFormDataWrapper {\n  /** @override */\n  constructor(opt_form) {\n    /** @private @const {!FormData} */\n    this.formData_ = new FormData(opt_form);\n\n    this.maybeIncludeSubmitButton_(opt_form);\n  }\n\n  /**\n   * If a submit button is focused (because it was used to submit the form),\n   * or was the first submit button present, add its name and value to the\n   * `FormData`, since publishers expect the submit button to be present.\n   * @param {!HTMLFormElement=} opt_form\n   * @private\n   */\n  maybeIncludeSubmitButton_(opt_form) {\n    // If a form is not passed to the constructor,\n    // we are not in a submitting code path.\n    if (!opt_form) {\n      return;\n    }\n\n    const button = getSubmitButtonUsed(opt_form);\n    if (button && button.name) {\n      this.append(button.name, button.value);\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {string|!File} value\n   * @param {string=} opt_filename\n   * @override\n   */\n  append(name, value, opt_filename) {\n    this.formData_.append(name, value);\n  }\n\n  /** @override */\n  delete(name) {\n    this.formData_.delete(name);\n  }\n\n  /** @override */\n  entries() {\n    return this.formData_.entries();\n  }\n\n  /** @override */\n  getFormData() {\n    return this.formData_;\n  }\n}\n\n/**\n * iOS 11 has a bug when submitting empty file inputs.\n * This works around the bug by replacing the empty files with Blob objects.\n */\nclass Ios11NativeFormDataWrapper extends NativeFormDataWrapper {\n  /** @override */\n  constructor(opt_form) {\n    super(opt_form);\n\n    if (opt_form) {\n      iterateCursor(opt_form.elements, input => {\n        if (input.type == 'file' && input.files.length == 0) {\n          this.formData_.delete(input.name);\n          this.formData_.append(input.name, new Blob([]), '');\n        }\n      });\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {string|!File} value\n   * @param {string=} opt_filename\n   * @override\n   */\n  append(name, value, opt_filename) {\n    // Safari 11 breaks on submitting empty File values.\n    if (value && typeof value == 'object' && isEmptyFile(value)) {\n      this.formData_.append(name, new Blob([]), opt_filename || '');\n    } else {\n      this.formData_.append(name, value);\n    }\n  }\n}\n\n/**\n * A wrapper for a native `FormData` object that allows the retrieval of entries\n * in the form data after construction even on browsers that don't natively\n * support `FormData.prototype.entries`.\n *\n * @interface\n * Subclassing `FormData` doesn't work in this case as the transpiler\n *     generates code that calls the super constructor directly using\n *     `Function.prototype.call`. WebKit (Safari) doesn't allow this and\n *     enforces that constructors be called with the `new` operator.\n */\nclass FormDataWrapperInterface {\n  /**\n   * Creates a new wrapper for a `FormData` object.\n   *\n   * If there's no native `FormData#entries`, chances are there are no native\n   * methods to read the content of the `FormData` after construction, so the\n   * only way to implement `entries` in this class is to capture the fields in\n   * the form passed to the constructor (and the arguments passed to the\n   * `append` method).\n   *\n   * This constructor should also add the submitter element as defined in the\n   * HTML spec for Form Submission Algorithm, but is not defined by the standard\n   * when using the `FormData` constructor directly.\n   *\n   * For more details on this, see http://mdn.io/FormData.\n   *\n   * @param {!HTMLFormElement=} opt_form An HTML `<form>` element — when\n   *     specified, the `FormData` object will be populated with the form's\n   *     current keys/values using the name property of each element for the\n   *     keys and their submitted value for the values. It will also encode file\n   *     input content.\n   */\n  constructor(opt_form) {}\n\n  /**\n   * Appends a new value onto an existing key inside a `FormData` object, or\n   * adds the key if it does not already exist.\n   *\n   * Appending a `File` object is not yet supported and the `filename`\n   * parameter is ignored for this wrapper.\n   *\n   * For more details on this, see http://mdn.io/FormData/append.\n   *\n   * TODO(cvializ): Update file support\n   *\n   * @param {string} unusedName The name of the field whose data is contained in\n   *     `value`.\n   * @param {string|!File} unusedValue The field's value.\n   * @param {string=} opt_filename The filename to use if the value is a file.\n   */\n  append(unusedName, unusedValue, opt_filename) {}\n\n  /**\n   * Remove the given value from the FormData.\n   *\n   * For more details on this, see http://mdn.io/FormData/delete.\n   *\n   * @param {string} unusedName The name of the field to remove from the FormData.\n   */\n  delete(unusedName) {}\n\n  /**\n   * Returns an iterator of all key/value pairs contained in this object.\n   *\n   * For more details on this, see http://mdn.io/FormData/entries.\n   *\n   * @return {!Iterator<!Array<string|!File>>}\n   */\n  entries() {}\n\n  /**\n   * Returns the wrapped native `FormData` object.\n   *\n   * @return {!FormData}\n   */\n  getFormData() {}\n}\n\n/**\n * Check if the given file is an empty file, which is the result of submitting\n * an empty `<input type=\"file\">`. These cause errors when submitting forms\n * in Safari 11.\n *\n * @param {!File} file\n * @return {boolean}\n */\nfunction isEmptyFile(file) {\n  return file.name == '' && file.size == 0;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ancestorElementsByTag, iterateCursor} from './dom';\n\n/** @const {string} */\nconst FORM_PROP_ = '__AMP_FORM';\n\n/**\n * @param {!Element} element\n * @return {../extensions/amp-form/0.1/amp-form.AmpForm}\n */\nexport function formOrNullForElement(element) {\n  return element[FORM_PROP_] || null;\n}\n\n/**\n * @param {!Element} element\n * @param {!../extensions/amp-form/0.1/amp-form.AmpForm} form\n */\nexport function setFormForElement(element, form) {\n  element[FORM_PROP_] = form;\n}\n\n/**\n * Returns form data in the passed-in form as an object.\n * Includes focused submit buttons.\n * @param {!HTMLFormElement} form\n * @return {!JsonObject}\n */\nexport function getFormAsObject(form) {\n  const {elements} = form;\n  const data = /** @type {!JsonObject} */ ({});\n  // <button> is handled separately\n  const submittableTagsRegex = /^(?:input|select|textarea)$/i;\n  // type=submit is handled separately\n  const unsubmittableTypesRegex = /^(?:submit|button|image|file|reset)$/i;\n  const checkableType = /^(?:checkbox|radio)$/i;\n\n  for (let i = 0; i < elements.length; i++) {\n    const input = elements[i];\n    const {checked, name, multiple, options, tagName, type, value} = input;\n    if (\n      !name ||\n      isDisabled(input) ||\n      !submittableTagsRegex.test(tagName) ||\n      unsubmittableTypesRegex.test(type) ||\n      (checkableType.test(type) && !checked)\n    ) {\n      continue;\n    }\n\n    if (data[name] === undefined) {\n      data[name] = [];\n    }\n\n    if (multiple) {\n      iterateCursor(options, option => {\n        if (option.selected) {\n          data[name].push(option.value);\n        }\n      });\n      continue;\n    }\n    data[name].push(value);\n  }\n\n  const submitButton = getSubmitButtonUsed(form);\n  if (submitButton && submitButton.name) {\n    const {name} = submitButton;\n    if (data[name] === undefined) {\n      data[name] = [];\n    }\n    data[submitButton.name].push(submitButton.value);\n  }\n\n  // Wait until the end to remove the empty values, since\n  // we don't know when evaluating any one input whether\n  // there will be or have already been inputs with the same names.\n  // e.g. We want to remove empty <select multiple name=x> but\n  // there could also be an <input name=x>. At the end we know if an empty name\n  // can be deleted.\n  Object.keys(data).forEach(key => {\n    if (data[key].length == 0) {\n      delete data[key];\n    }\n  });\n\n  return data;\n}\n\n/**\n * Gets the submit button used to submit the form.\n * This searches through the form elements to find:\n * 1. The first submit button element OR\n * 2. a focused submit button, indicating it was specifically used to submit.\n * 3. null, if neither of the above is found.\n * @param {!HTMLFormElement} form\n * @return {?Element}\n */\nexport function getSubmitButtonUsed(form) {\n  const {elements} = form;\n  const {length} = elements;\n  const {activeElement} = form.ownerDocument;\n  let firstSubmitButton = null;\n\n  for (let i = 0; i < length; i++) {\n    const element = elements[i];\n\n    if (!isSubmitButton(element)) {\n      continue;\n    }\n\n    if (!firstSubmitButton) {\n      firstSubmitButton = element;\n    }\n\n    if (activeElement == element) {\n      return activeElement;\n    }\n  }\n  return firstSubmitButton;\n}\n\n/**\n * True if the given button can submit a form.\n * @param {!Element} element\n * @return {boolean}\n */\nfunction isSubmitButton(element) {\n  const {tagName, type} = element;\n  return tagName == 'BUTTON' || type == 'submit';\n}\n\n/**\n * Checks if a field is disabled.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isDisabled(element) {\n  if (element.disabled) {\n    return true;\n  }\n\n  const ancestors = ancestorElementsByTag(element, 'fieldset');\n  for (let i = 0; i < ancestors.length; i++) {\n    if (ancestors[i].disabled) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Checks if a form field is in its default state.\n * @param {!Element} field\n * @return {boolean}\n */\nexport function isFieldDefault(field) {\n  switch (field.type) {\n    case 'select-multiple':\n    case 'select-one':\n      const {options} = field;\n      for (let j = 0; j < options.length; j++) {\n        if (options[j].selected !== options[j].defaultSelected) {\n          return false;\n        }\n      }\n      break;\n    case 'checkbox':\n    case 'radio':\n      return field.checked === field.defaultChecked;\n    default:\n      return field.value === field.defaultValue;\n  }\n  return true;\n}\n\n/**\n * Checks if a form field is empty. It expects a form field element,\n * i.e. `<input>`, `<textarea>`, or `<select>`.\n * @param {!Element} field\n * @throws {Error}\n * @return {boolean}\n */\nexport function isFieldEmpty(field) {\n  switch (field.tagName) {\n    case 'INPUT':\n      if (field.type == 'checkbox' || field.type == 'radio') {\n        return !field.checked;\n      } else {\n        return !field.value;\n      }\n    case 'TEXTAREA':\n      return !field.value;\n    case 'SELECT':\n      // dropdown menu has at least one option always selected\n      return false;\n    default:\n      throw new Error(\n        `isFieldEmpty: ${field.tagName} is not a supported field element.`\n      );\n  }\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Checks that the document is of an AMP format type.\n * @param {!Array<string>} formats\n * @param {!Document} doc\n * @return {boolean}\n */\nfunction isAmpFormatType(formats, doc) {\n  const html = doc.documentElement;\n  const isFormatType = formats.some(format => html.hasAttribute(format));\n  return isFormatType;\n}\n\n/**\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isAmp4Email(doc) {\n  return isAmpFormatType(['⚡4email', 'amp4email'], doc);\n}\n\n/**\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isAmphtml(doc) {\n  return isAmpFormatType(['⚡', 'amp'], doc);\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n\nimport {childElementsByTag, isJsonScriptTag} from './dom';\nimport {isObject} from './types';\n\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {*} should be string|number|boolean|null\n */\nlet JSONScalarDef;\n\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {*} should be !Object<string, ?JSONValueDef>\n */\nlet JSONObjectDef;\n\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {*} should be !Array<?JSONValueDef>\n */\nlet JSONArrayDef;\n\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {*} should be !JSONScalarDef|!JSONObjectDef|!JSONArrayDef\n */\nlet JSONValueDef;\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = Object.create(null);\n  for (const k in obj) {\n    if (!hasOwnProperty(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (let i = 0; i < parts.length; i++) {\n    const part = parts[i];\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      hasOwnProperty(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {*} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function parseJson(json) {\n  return /** @type {?JsonObject} */ (JSON.parse(/** @type {string} */ (json)));\n}\n\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {*} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    if (opt_onFailed) {\n      opt_onFailed(e);\n    }\n    return null;\n  }\n}\n\n/**\n * Helper method to get the json config from an element <script> tag\n * @param {!Element} element\n * @return {?JsonObject}\n * @throws {!Error} If element does not have exactly one <script> child\n * with type=\"application/json\", or if the <script> contents are not valid JSON.\n */\nexport function getChildJsonConfig(element) {\n  const scripts = childElementsByTag(element, 'script');\n  const n = scripts.length;\n  if (n !== 1) {\n    throw new Error(`Found ${scripts.length} <script> children. Expected 1.`);\n  }\n  const script = scripts[0];\n  if (!isJsonScriptTag(script)) {\n    throw new Error('<script> child must have type=\"application/json\"');\n  }\n  try {\n    return parseJson(script.textContent);\n  } catch (unusedError) {\n    throw new Error('Failed to parse <script> contents. Is it valid JSON?');\n  }\n}\n\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\nexport function deepEquals(a, b, depth = 5) {\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n  const queue = [{a, b, depth}];\n  while (queue.length > 0) {\n    const {a, b, depth} = queue.shift();\n    // Only check deep equality if depth > 0.\n    if (depth > 0) {\n      if (typeof a !== typeof b) {\n        return false;\n      } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          queue.push({a: a[i], b: b[i], depth: depth - 1});\n        }\n        continue;\n      } else if (a && b && typeof a === 'object' && typeof b === 'object') {\n        const keysA = Object.keys(/** @type {!Object} */ (a));\n        const keysB = Object.keys(/** @type {!Object} */ (b));\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n        for (let i = 0; i < keysA.length; i++) {\n          const k = keysA[i];\n          queue.push({a: a[k], b: b[k], depth: depth - 1});\n        }\n        continue;\n      }\n    }\n    // If we get here, then depth == 0 or (a, b) are primitives.\n    if (a !== b) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {*} obj\n * @param {string} key\n * @return {boolean}\n */\nfunction hasOwnProperty(obj, key) {\n  if (obj == null || typeof obj != 'object') {\n    return false;\n  }\n  return Object.prototype.hasOwnProperty.call(\n    /** @type {!Object} */ (obj),\n    key\n  );\n}\n\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\nexport function jsonConfiguration(obj) {\n  return /** @type {!JsonObject} */ (obj);\n}\n\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {!Object|!Array|string|number|boolean|null} value\n * @return {!InternalJsonLiteralTypeDef}\n */\nexport function jsonLiteral(value) {\n  return /** @type {!InternalJsonLiteralTypeDef} */ (value);\n}\n\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\nexport function includeJsonLiteral(value) {\n  return value;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implements element layout. See https://goo.gl/9avXuT for\n * details.\n */\n\nimport {dev, devAssert, userAssert} from './log';\nimport {htmlFor} from './static-template';\nimport {isFiniteNumber} from './types';\nimport {setStyle, setStyles, toggle} from './style';\nimport {startsWith} from './string';\n\n/**\n * @enum {string}\n */\nexport const Layout = {\n  NODISPLAY: 'nodisplay',\n  FIXED: 'fixed',\n  FIXED_HEIGHT: 'fixed-height',\n  RESPONSIVE: 'responsive',\n  CONTAINER: 'container',\n  FILL: 'fill',\n  FLEX_ITEM: 'flex-item',\n  FLUID: 'fluid',\n  INTRINSIC: 'intrinsic',\n};\n\n/**\n * Layout priorities to use with BaseElement#getLayoutPriority() and\n * BaseElement#updateLayoutPriority().\n * @enum {number}\n */\nexport const LayoutPriority = {\n  CONTENT: 0,\n  METADATA: 1,\n  ADS: 2,\n  BACKGROUND: 3,\n};\n\n/**\n * CSS Length type. E.g. \"1px\" or \"20vh\".\n * @typedef {string}\n */\nexport let LengthDef;\n\n/**\n * @typedef {{\n *   width: string,\n *   height: string\n * }}\n */\nlet DimensionsDef;\n\n/**\n * The set of elements with natural dimensions, that is, elements\n * which have a known dimension either based on their value specified here,\n * or, if the value is null, a dimension specific to the browser.\n * `hasNaturalDimensions` checks for membership in this set.\n * `getNaturalDimensions` determines the dimensions for an element in the\n *    set and caches it.\n * @type {!Object<string, ?DimensionsDef>}\n * @private  Visible for testing only!\n */\nexport const naturalDimensions_ = {\n  'AMP-PIXEL': {width: '0px', height: '0px'},\n  'AMP-ANALYTICS': {width: '1px', height: '1px'},\n  // TODO(dvoytenko): audio should have width:auto.\n  'AMP-AUDIO': null,\n  'AMP-SOCIAL-SHARE': {width: '60px', height: '44px'},\n};\n\n/**\n * Elements that the progress can be shown for. This set has to be externalized\n * since the element's implementation may not be downloaded yet.\n * This list does not include video players which are found via regex later.\n * @enum {boolean}\n * @private  Visible for testing only!\n */\nexport const LOADING_ELEMENTS_ = {\n  'AMP-AD': true,\n  'AMP-ANIM': true,\n  'AMP-EMBED': true,\n  'AMP-FACEBOOK': true,\n  'AMP-FACEBOOK-COMMENTS': true,\n  'AMP-FACEBOOK-PAGE': true,\n  'AMP-GOOGLE-DOCUMENT-EMBED': true,\n  'AMP-IFRAME': true,\n  'AMP-IMG': true,\n  'AMP-INSTAGRAM': true,\n  'AMP-LIST': true,\n  'AMP-PINTEREST': true,\n  'AMP-PLAYBUZZ': true,\n  'AMP-TWITTER': true,\n};\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they are listed individually.\n * @private @const {!RegExp}\n */\nconst videoPlayerTagNameRe = /^amp\\-(video|.+player)|AMP-BRIGHTCOVE|AMP-DAILYMOTION|AMP-YOUTUBE|AMP-VIMEO|AMP-IMA-VIDEO/i;\n\n/**\n * @param {string} s\n * @return {Layout|undefined} Returns undefined in case of failure to parse\n *   the layout string.\n */\nexport function parseLayout(s) {\n  for (const k in Layout) {\n    if (Layout[k] == s) {\n      return Layout[k];\n    }\n  }\n  return undefined;\n}\n\n/**\n * @param {!Layout} layout\n * @return {string}\n */\nexport function getLayoutClass(layout) {\n  return 'i-amphtml-layout-' + layout;\n}\n\n/**\n * Whether an element with this layout inherently defines the size.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeDefined(layout) {\n  return (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.FILL ||\n    layout == Layout.FLEX_ITEM ||\n    layout == Layout.FLUID ||\n    layout == Layout.INTRINSIC\n  );\n}\n\n/**\n * Whether an element with this layout has a fixed dimension.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeFixed(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT;\n}\n\n/**\n * Whether the tag is an internal (service) AMP tag.\n * @param {!Node|string} tag\n * @return {boolean}\n */\nexport function isInternalElement(tag) {\n  const tagName = typeof tag == 'string' ? tag : tag.tagName;\n  return tagName && startsWith(tagName.toLowerCase(), 'i-');\n}\n\n/**\n * Parses the CSS length value. If no units specified, the assumed value is\n * \"px\". Returns undefined in case of parsing error.\n * @param {string|undefined|null} s\n * @return {!LengthDef|undefined}\n */\nexport function parseLength(s) {\n  if (typeof s == 'number') {\n    return s + 'px';\n  }\n  if (!s) {\n    return undefined;\n  }\n  if (!/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)?$/.test(s)) {\n    return undefined;\n  }\n  if (/^\\d+(\\.\\d+)?$/.test(s)) {\n    return s + 'px';\n  }\n  return s;\n}\n\n/**\n * Asserts that the supplied value is a non-percent CSS Length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLength(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)$/.test(length),\n    'Invalid length value: %s',\n    length\n  );\n  return /** @type {!LengthDef} */ (length);\n}\n\n/**\n * Asserts that the supplied value is a CSS Length value\n * (including percent unit).\n * @param {!LengthDef|string} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLengthOrPercent(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|%)$/.test(length),\n    'Invalid length or percent value: %s',\n    length\n  );\n  return length;\n}\n\n/**\n * Returns units from the CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {string}\n */\nexport function getLengthUnits(length) {\n  assertLength(length);\n  dev().assertString(length);\n  const m = userAssert(\n    length.match(/[a-z]+/i),\n    'Failed to read units from %s',\n    length\n  );\n  return m[0];\n}\n\n/**\n * Returns the numeric value of a CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {number|undefined}\n */\nexport function getLengthNumeral(length) {\n  const res = parseFloat(length);\n  return isFiniteNumber(res) ? res : undefined;\n}\n\n/**\n * Determines whether the tagName is a known element that has natural dimensions\n * in our runtime or the browser.\n * @param {string} tagName The element tag name.\n * @return {boolean}\n */\nexport function hasNaturalDimensions(tagName) {\n  tagName = tagName.toUpperCase();\n  return naturalDimensions_[tagName] !== undefined;\n}\n\n/**\n * Determines the default dimensions for an element which could vary across\n * different browser implementations, like <audio> for instance.\n * This operation can only be completed for an element whitelisted by\n * `hasNaturalDimensions`.\n * @param {!Element} element\n * @return {DimensionsDef}\n */\nexport function getNaturalDimensions(element) {\n  const tagName = element.tagName.toUpperCase();\n  devAssert(naturalDimensions_[tagName] !== undefined);\n  if (!naturalDimensions_[tagName]) {\n    const doc = element.ownerDocument;\n    const naturalTagName = tagName.replace(/^AMP\\-/, '');\n    const temp = doc.createElement(naturalTagName);\n    // For audio, should no-op elsewhere.\n    temp.controls = true;\n    setStyles(temp, {\n      position: 'absolute',\n      visibility: 'hidden',\n    });\n    doc.body.appendChild(temp);\n    naturalDimensions_[tagName] = {\n      width: (temp./*OK*/ offsetWidth || 1) + 'px',\n      height: (temp./*OK*/ offsetHeight || 1) + 'px',\n    };\n    doc.body.removeChild(temp);\n  }\n  return /** @type {DimensionsDef} */ (naturalDimensions_[tagName]);\n}\n\n/**\n * Whether the loading can be shown for the specified elemeent. This set has\n * to be externalized since the element's implementation may not be\n * downloaded yet.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isLoadingAllowed(element) {\n  const tagName = element.tagName.toUpperCase();\n  return LOADING_ELEMENTS_[tagName] || isIframeVideoPlayerComponent(tagName);\n}\n\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they're present in the LOADING_ELEMENTS_ whitelist.\n * @param {string} tagName\n * @return {boolean}\n */\nexport function isIframeVideoPlayerComponent(tagName) {\n  if (tagName == 'AMP-VIDEO') {\n    return false;\n  }\n  return videoPlayerTagNameRe.test(tagName);\n}\n\n/**\n * Applies layout to the element. Visible for testing only.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this method is used for server-side rendering (SSR) and\n * any changes made to it must be made in coordination with caches that\n * implement SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @param {!Element} element\n * @return {!Layout}\n */\nexport function applyStaticLayout(element) {\n  // Check if the layout has already been done by server-side rendering or\n  // client-side rendering and the element was cloned. The document may be\n  // visible to the user if the boilerplate was removed so please take care in\n  // making changes here.\n  const completedLayoutAttr = element.getAttribute('i-amphtml-layout');\n  if (completedLayoutAttr) {\n    const layout = /** @type {!Layout} */ (devAssert(\n      parseLayout(completedLayoutAttr)\n    ));\n    if (\n      (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) &&\n      element.firstElementChild\n    ) {\n      // Find sizer, but assume that it might not have been parsed yet.\n      element.sizerElement =\n        element.querySelector('i-amphtml-sizer') || undefined;\n    } else if (layout == Layout.NODISPLAY) {\n      toggle(element, false);\n      // TODO(jridgewell): Temporary hack while SSR still adds an inline\n      // `display: none`\n      element['style']['display'] = '';\n    }\n    return layout;\n  }\n\n  // If the layout was already done by server-side rendering (SSR), then the\n  // code below will not run. Any changes below will necessitate a change to SSR\n  // and must be coordinated with caches that implement SSR. See bit.ly/amp-ssr.\n\n  // Parse layout from the element.\n  const layoutAttr = element.getAttribute('layout');\n  const widthAttr = element.getAttribute('width');\n  const heightAttr = element.getAttribute('height');\n  const sizesAttr = element.getAttribute('sizes');\n  const heightsAttr = element.getAttribute('heights');\n\n  // Input layout attributes.\n  const inputLayout = layoutAttr ? parseLayout(layoutAttr) : null;\n  userAssert(inputLayout !== undefined, 'Unknown layout: %s', layoutAttr);\n  /** @const {string|null|undefined} */\n  const inputWidth =\n    widthAttr && widthAttr != 'auto' ? parseLength(widthAttr) : widthAttr;\n  userAssert(inputWidth !== undefined, 'Invalid width value: %s', widthAttr);\n  /** @const {string|null|undefined} */\n  const inputHeight =\n    heightAttr && heightAttr != 'fluid' ? parseLength(heightAttr) : heightAttr;\n  userAssert(inputHeight !== undefined, 'Invalid height value: %s', heightAttr);\n\n  // Effective layout attributes. These are effectively constants.\n  let width;\n  let height;\n  let layout;\n\n  // Calculate effective width and height.\n  if (\n    (!inputLayout ||\n      inputLayout == Layout.FIXED ||\n      inputLayout == Layout.FIXED_HEIGHT) &&\n    (!inputWidth || !inputHeight) &&\n    hasNaturalDimensions(element.tagName)\n  ) {\n    // Default width and height: handle elements that do not specify a\n    // width/height and are defined to have natural browser dimensions.\n    const dimensions = getNaturalDimensions(element);\n    width =\n      inputWidth || inputLayout == Layout.FIXED_HEIGHT\n        ? inputWidth\n        : dimensions.width;\n    height = inputHeight || dimensions.height;\n  } else {\n    width = inputWidth;\n    height = inputHeight;\n  }\n\n  // Calculate effective layout.\n  if (inputLayout) {\n    layout = inputLayout;\n  } else if (!width && !height) {\n    layout = Layout.CONTAINER;\n  } else if (height == 'fluid') {\n    layout = Layout.FLUID;\n  } else if (height && (!width || width == 'auto')) {\n    layout = Layout.FIXED_HEIGHT;\n  } else if (height && width && (sizesAttr || heightsAttr)) {\n    layout = Layout.RESPONSIVE;\n  } else {\n    layout = Layout.FIXED;\n  }\n\n  // Verify layout attributes.\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(height, 'Expected height to be available: %s', heightAttr);\n  }\n  if (layout == Layout.FIXED_HEIGHT) {\n    userAssert(\n      !width || width == 'auto',\n      'Expected width to be either absent or equal \"auto\" ' +\n        'for fixed-height layout: %s',\n      widthAttr\n    );\n  }\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(\n      width && width != 'auto',\n      'Expected width to be available and not equal to \"auto\": %s',\n      widthAttr\n    );\n  }\n\n  if (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    userAssert(\n      getLengthUnits(width) == getLengthUnits(height),\n      'Length units should be the same for width and height: %s, %s',\n      widthAttr,\n      heightAttr\n    );\n  } else {\n    userAssert(\n      heightsAttr === null,\n      'Unexpected \"heights\" attribute for none-responsive layout'\n    );\n  }\n\n  // Apply UI.\n  element.classList.add(getLayoutClass(layout));\n  if (isLayoutSizeDefined(layout)) {\n    element.classList.add('i-amphtml-layout-size-defined');\n  }\n  if (layout == Layout.NODISPLAY) {\n    // CSS defines layout=nodisplay automatically with `display:none`. Thus\n    // no additional styling is needed.\n    toggle(element, false);\n    // TODO(jridgewell): Temporary hack while SSR still adds an inline\n    // `display: none`\n    element['style']['display'] = '';\n  } else if (layout == Layout.FIXED) {\n    setStyles(element, {\n      width: dev().assertString(width),\n      height: dev().assertString(height),\n    });\n  } else if (layout == Layout.FIXED_HEIGHT) {\n    setStyle(element, 'height', dev().assertString(height));\n  } else if (layout == Layout.RESPONSIVE) {\n    const sizer = element.ownerDocument.createElement('i-amphtml-sizer');\n    setStyles(sizer, {\n      paddingTop:\n        (getLengthNumeral(height) / getLengthNumeral(width)) * 100 + '%',\n    });\n    element.insertBefore(sizer, element.firstChild);\n    element.sizerElement = sizer;\n  } else if (layout == Layout.INTRINSIC) {\n    // Intrinsic uses an svg inside the sizer element rather than the padding\n    // trick Note a naked svg won't work becasue other thing expect the\n    // i-amphtml-sizer element\n    const sizer = htmlFor(element)`\n      <i-amphtml-sizer class=\"i-amphtml-sizer\">\n        <img alt=\"\" role=\"presentation\" aria-hidden=\"true\"\n             class=\"i-amphtml-intrinsic-sizer\" />\n      </i-amphtml-sizer>`;\n    const intrinsicSizer = sizer.firstElementChild;\n    intrinsicSizer.setAttribute(\n      'src',\n      `data:image/svg+xml;charset=utf-8,<svg height=\"${height}\" width=\"${width}\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"/>`\n    );\n    element.insertBefore(sizer, element.firstChild);\n    element.sizerElement = sizer;\n  } else if (layout == Layout.FILL) {\n    // Do nothing.\n  } else if (layout == Layout.CONTAINER) {\n    // Do nothing. Elements themselves will check whether the supplied\n    // layout value is acceptable. In particular container is only OK\n    // sometimes.\n  } else if (layout == Layout.FLEX_ITEM) {\n    // Set height and width to a flex item if they exist.\n    // The size set to a flex item could be overridden by `display: flex` later.\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    if (height) {\n      setStyle(element, 'height', height);\n    }\n  } else if (layout == Layout.FLUID) {\n    element.classList.add('i-amphtml-layout-awaiting-size');\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    setStyle(element, 'height', 0);\n  }\n  // Mark the element as having completed static layout, in case it is cloned\n  // in the future.\n  element.setAttribute('i-amphtml-layout', layout);\n  return layout;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\nimport {getModeObject} from './mode-object';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray, isEnumValue} from './types';\nimport {once} from './utils/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n * @private Visible for testing only.\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error.js to break cyclic\n * dependency.\n * @param {function(*, !Element=)|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = arg =>\n  encodeURIComponent(String(elementStringOrPassthru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don’t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(!./mode.ModeDef):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(!./mode.ModeDef):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then(response => response.json(), noop)\n        .then(opt_messages => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    // Delegate to the specific resolver.\n    return this.levelFunc_(getModeObject());\n  }\n\n  /**\n   * @param {string} tag\n   * @param {string} level\n   * @param {!Array} messages\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() != LogLevel.OFF) {\n      let fn = this.win.console.log;\n      if (level == 'ERROR') {\n        fn = this.win.console.error || fn;\n      } else if (level == 'INFO') {\n        fn = this.win.console.info || fn;\n      } else if (level == 'WARN') {\n        fn = this.win.console.warn || fn;\n      }\n      const args = this.maybeExpandMessageArgs_(messages);\n      // Prefix console message with \"[tag]\".\n      const prefix = `[${tag}]`;\n      if (typeof args[0] === 'string') {\n        // Prepend string to avoid breaking string substitutions e.g. %s.\n        args[0] = prefix + ' ' + args[0];\n      } else {\n        args.unshift(prefix);\n      }\n      fn.apply(this.win.console, args);\n    }\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  fine(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.FINE) {\n      this.msg_(tag, 'FINE', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  info(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.INFO) {\n      this.msg_(tag, 'INFO', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  warn(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.WARN) {\n      this.msg_(tag, 'WARN', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} var_args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.ERROR) {\n      this.msg_(tag, 'ERROR', Array.prototype.slice.call(arguments, 1));\n    } else {\n      const error = createErrorVargs.apply(\n        null,\n        Array.prototype.slice.call(arguments, 1)\n      );\n      this.prepareError_(error);\n      return error;\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * NOTE: for an explanation of the tempate R implementation see\n   * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {R} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is `null` or `undefined`.\n   * @template T\n   * @template R :=\n   *     mapunion(T, (V) =>\n   *         cond(eq(V, 'null'),\n   *             none(),\n   *             cond(eq(V, 'undefined'),\n   *                 none(),\n   *                 V)))\n   *  =:\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    let firstElement;\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n    if (!shouldBeTrueish) {\n      const message = opt_message || 'Assertion failed';\n      const splitMessage = message.split('%s');\n      const first = splitMessage.shift();\n      let formatted = first;\n      const messageArray = [];\n      let i = 2;\n      pushIfNonEmpty(messageArray, first);\n      while (splitMessage.length > 0) {\n        const nextConstant = splitMessage.shift();\n        const val = arguments[i++];\n        if (val && val.tagName) {\n          firstElement = val;\n        }\n        messageArray.push(val);\n        pushIfNonEmpty(messageArray, nextConstant.trim());\n        formatted += stringOrElementString(val) + nextConstant;\n      }\n      const e = new Error(formatted);\n      e.fromAssert = true;\n      e.associatedElement = firstElement;\n      e.messageArray = messageArray;\n      this.prepareError_(e);\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n      throw e;\n    }\n    return shouldBeTrueish;\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    const shouldBeTrueish = shouldBeElement && shouldBeElement.nodeType == 1;\n    this.assertType_(\n      shouldBeElement,\n      shouldBeTrueish,\n      'Element expected',\n      opt_message\n    );\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    this.assertType_(\n      shouldBeString,\n      typeof shouldBeString == 'string',\n      'String expected',\n      opt_message\n    );\n    return /** @type {string} */ (shouldBeString);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    this.assertType_(\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    );\n    return /** @type {number} */ (shouldBeNumber);\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    this.assertType_(\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    );\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    this.assertType_(\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    );\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n\n  /**\n   * Asserts and returns the enum value. If the enum doesn't contain such a\n   * value, the error is thrown.\n   *\n   * @param {!Object<T>} enumObj\n   * @param {string} s\n   * @param {string=} opt_enumName\n   * @return {T}\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertEnumValue(enumObj, s, opt_enumName) {\n    if (isEnumValue(enumObj, s)) {\n      return s;\n    }\n    this.assert(false, 'Unknown %s value: \"%s\"', opt_enumName || 'enum', s);\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n\n  /**\n   * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n   *\n   * It understands array-based \"id\"-contracted messages.\n   *\n   * Otherwise creates a sprintf syntax string containing the optional message or the\n   * default. An interpolation token is added at the end to include the `subject`.\n   * @param {*} subject\n   * @param {*} assertion\n   * @param {string} defaultMessage\n   * @param {!Array|string=} opt_message\n   * @private\n   */\n  assertType_(subject, assertion, defaultMessage, opt_message) {\n    if (isArray(opt_message)) {\n      this.assert(assertion, opt_message.concat(subject));\n    } else {\n      this.assert(assertion, `${opt_message || defaultMessage}: %s`, subject);\n    }\n  }\n}\n\n/**\n * @param {string|!Element} val\n * @return {string}\n */\nconst stringOrElementString = val =>\n  /** @type {string} */ (elementStringOrPassthru(val));\n\n/**\n * @param {*} val\n * @return {*}\n */\nfunction elementStringOrPassthru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (val && val.nodeType == 1) {\n    return val.tagName.toLowerCase() + (val.id ? '#' + val.id : '');\n  }\n  return val;\n}\n\n/**\n * @param {!Array} array\n * @param {*} val\n */\nfunction pushIfNonEmpty(array, val) {\n  if (val != '') {\n    array.push(val);\n  }\n}\n\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\nexport function duplicateErrorIfNecessary(error) {\n  const messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n  if (messageProperty && messageProperty.writable) {\n    return error;\n  }\n\n  const {message, stack} = error;\n  const e = new Error(message);\n  // Copy all the extraneous things we attach.\n  for (const prop in error) {\n    e[prop] = error[prop];\n  }\n  // Ensure these are copied.\n  e.stack = stack;\n  return e;\n}\n\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\nexport function createErrorVargs(var_args) {\n  let error = null;\n  let message = '';\n  for (let i = 0; i < arguments.length; i++) {\n    const arg = arguments[i];\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n  return error;\n}\n\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\nexport function rethrowAsync(var_args) {\n  const error = createErrorVargs.apply(null, arguments);\n  setTimeout(() => {\n    // reportError is installed globally per window in the entry point.\n    self.__AMP_REPORT_ERROR(error);\n    throw error;\n  });\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?Function}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log contructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log contructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    mode => {\n      const logNum = parseInt(mode.log, 10);\n      if (mode.development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, mode => {\n    const logNum = parseInt(mode.log, 10);\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\n\n/**\n * Provides info about the current app. This return value may be cached and\n * passed around as it will always be DCE'd.\n * @param {?Window=} opt_win\n * @return {!./mode.ModeDef}\n */\nexport function getModeObject(opt_win) {\n  return {\n    localDev: getMode(opt_win).localDev,\n    development: getMode(opt_win).development,\n    filter: getMode(opt_win).filter,\n    minified: getMode(opt_win).minified,\n    lite: getMode(opt_win).lite,\n    test: getMode(opt_win).test,\n    log: getMode(opt_win).log,\n    version: getMode(opt_win).version,\n    rtvVersion: getMode(opt_win).rtvVersion,\n    singlePassType: getMode(opt_win).singlePassType,\n  };\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString_} from './url-parse-query-string';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   filter: (string|undefined),\n *   minified: boolean,\n *   lite: boolean,\n *   test: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   singlePassType: (string|undefined)\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_DEV is only replaced when `gulp dist` is called without the\n  // --fortesting flag.\n  const IS_DEV = true;\n  const IS_MINIFIED = false;\n\n  const localDevEnabled = !!AMP_CONFIG.localDev;\n  const runningTests =\n    !!AMP_CONFIG.test || (IS_DEV && !!(win.__AMP_TEST || win.__karma__));\n  const runningTestsOnIe = win.__karma__ && win.__karma__.config.amp.testOnIe;\n  const isLocalDev = IS_DEV && (localDevEnabled || runningTests);\n  const hashQuery = parseQueryString_(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location.originalHash || win.location.hash\n  );\n  const singlePassType = AMP_CONFIG.spt;\n\n  const searchQuery = parseQueryString_(win.location.search);\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win, isLocalDev);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `gulp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    // Triggers validation or enable pub level logging. Validation can be\n    // bypassed via #validate=0.\n    // Note that AMP_DEV_MODE flag is used for testing purposes.\n    // Use Array.indexOf instead of Array.includes because of #24219\n    development: !!(\n      ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].indexOf(\n        hashQuery['development']\n      ) >= 0 || win.AMP_DEV_MODE\n    ),\n    examiner: hashQuery['development'] == '2',\n    // Allows filtering validation errors by error category. For the\n    // available categories, see ErrorCategory in validator/validator.proto.\n    filter: hashQuery['filter'],\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    // amp-user-location override\n    userLocationOverride: hashQuery['amp-user-location'],\n    minified: IS_MINIFIED,\n    // Whether document is in an amp-lite viewer. It signal that the user\n    // would prefer to use less bandwidth.\n    lite: searchQuery['amp_lite'] != undefined,\n    test: runningTests,\n    testIe: runningTestsOnIe,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n    singlePassType,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n */\nfunction getRtvVersion(win, isLocalDev) {\n  // If it's local dev then we won't actually have a full version so\n  // just use the version.\n  if (isLocalDev) {\n    return internalRuntimeVersion();\n  }\n\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win, isLocalDev) {\n  return getRtvVersion(win, isLocalDev);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\nimport {devAssert} from './log';\nimport {getServicePromise} from './service';\n\n/**\n * A map of services that delay rendering. The key is the name of the service\n * and the value is a DOM query which is used to check if the service is needed\n * in the current document.\n * Do not add a service unless absolutely necessary.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this list is used for server-side rendering (SSR) and any\n * changes made to it must be made in coordination with caches that implement\n * SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @const {!Object<string, string>}\n */\nconst SERVICES = {\n  'amp-dynamic-css-classes': '[custom-element=amp-dynamic-css-classes]',\n  'variant': 'amp-experiment',\n  'amp-story-render': 'amp-story[standalone]',\n};\n\n/**\n * Base class for render delaying services.\n * This should be extended to ensure the service\n * is properly handled\n *\n * @interface\n */\nexport class RenderDelayingService {\n  /**\n   * Function to return a promise for when\n   * it is finished delaying render, and is ready.\n   * NOTE: This should simply return Promise.resolve,\n   * if your service does not need to perform any logic\n   * after being registered.\n   * @return {!Promise}\n   */\n  whenReady() {}\n}\n\n/**\n * Maximum milliseconds to wait for all extensions to load before erroring.\n * @const\n */\nconst LOAD_TIMEOUT = 3000;\n\n/**\n * Detects any render delaying services that are required on the page, and\n * returns a promise with a timeout.\n * @param {!Window} win\n * @return {!Promise<!Array<*>>} resolves to an Array that has the same length\n *     as the detected render delaying services\n */\nexport function waitForServices(win) {\n  const promises = includedServices(win).map(serviceId => {\n    const serviceReadyPromise = getServicePromise(win, serviceId).then(\n      service => {\n        if (service && isRenderDelayingService(service)) {\n          return service.whenReady().then(() => {\n            return service;\n          });\n        }\n        return service;\n      }\n    );\n\n    return Services.timerFor(win).timeoutPromise(\n      LOAD_TIMEOUT,\n      serviceReadyPromise,\n      `Render timeout waiting for service ${serviceId} to be ready.`\n    );\n  });\n  return Promise.all(promises);\n}\n\n/**\n * Returns true if the page has a render delaying service.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function hasRenderDelayingServices(win) {\n  return includedServices(win).length > 0;\n}\n\n/**\n * Function to determine if the passed\n * Object is a Render Delaying Service\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isRenderDelayingService(service) {\n  const maybeRenderDelayingService = /** @type {!RenderDelayingService}*/ (service);\n  return typeof maybeRenderDelayingService.whenReady == 'function';\n}\n\n/**\n * Detects which, if any, render-delaying extensions are included on the page.\n * @param {!Window} win\n * @return {!Array<string>}\n */\nexport function includedServices(win) {\n  /** @const {!Document} */\n  const doc = win.document;\n  devAssert(doc.body);\n\n  return Object.keys(SERVICES).filter(service => {\n    return doc.querySelector(SERVICES[service]);\n  });\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from './utils/promise';\nimport {dev, devAssert} from './log';\nimport {isExperimentOn} from './experiments';\nimport {toWin} from './types';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (?function(new:Object, !Window)|\n *          ?function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Services must implement this interface to be embeddable in FIEs.\n * @interface\n */\nexport class EmbeddableService {\n  /**\n   * Installs a new instance of the service in the given FIE window.\n   * @param {!Window} unusedEmbedWin\n   * @param {!./service/ampdoc-impl.AmpDoc} unusedAmpDoc\n   */\n  static installInEmbedWindow(unusedEmbedWin, unusedAmpDoc) {}\n}\n\n/**\n * Returns a service with the given id. Assumes that it has been constructed\n * already.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\nexport function getExistingServiceForDocInEmbedScope(element, id) {\n  // TODO(#22733): completely remove this method once ampdoc-fie launches.\n  const document = element.ownerDocument;\n  const win = toWin(document.defaultView);\n  const topWin = getTopWindow(win);\n  // First, try to resolve via local embed window (if applicable).\n  const isEmbed = win != topWin;\n  const ampdocFieExperimentOn = isExperimentOn(topWin, 'ampdoc-fie');\n  if (isEmbed && !ampdocFieExperimentOn) {\n    if (isServiceRegistered(win, id)) {\n      return getServiceInternal(win, id);\n    }\n    // Fallback from FIE to parent is intentionally unsupported for safety.\n    return null;\n  } else {\n    // Resolve via the element's ampdoc.\n    return getServiceForDocOrNullInternal(element, id);\n  }\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedScope(embedWin, id, service) {\n  const topWin = getTopWindow(embedWin);\n  devAssert(\n    embedWin != topWin,\n    'Service override can only be installed in embed window: %s',\n    id\n  );\n  devAssert(\n    !isServiceRegistered(embedWin, id),\n    'Service override has already been installed: %s',\n    id\n  );\n  const ampdocFieExperimentOn = isExperimentOn(topWin, 'ampdoc-fie');\n  if (ampdocFieExperimentOn) {\n    const ampdoc = getAmpdoc(embedWin.document);\n    registerServiceInternal(\n      getAmpdocServiceHolder(ampdoc),\n      ampdoc,\n      id,\n      () => service,\n      /* override */ true\n    );\n  } else {\n    registerServiceInternal(embedWin, embedWin, id, () => service);\n    getServiceInternal(embedWin, id); // Force service to build.\n  }\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\nfunction getServiceForDocOrNullInternal(element, id) {\n  const ampdoc = getAmpdoc(element);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = toWin(\n      /** @type {!Document} */ (nodeOrDoc.ownerDocument || nodeOrDoc)\n        .defaultView\n    );\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (getService(\n    win,\n    'ampdoc'\n  ));\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n * @template T\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.ctor = null;\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n */\nfunction registerServiceInternal(holder, context, id, ctor, opt_override) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n    };\n  }\n\n  if (!opt_override && (s.ctor || s.obj)) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  // TODO(dvoytenko): Consider marking holder as destroyed for later-arriving\n  // service to be canceled automatically.\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then(instance =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * Adopts an embeddable (implements `EmbeddableService` interface) service\n * in embed scope.\n * @param {!Window} embedWin\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} serviceClass\n * @suppress {missingProperties}\n * @return {boolean}\n */\nexport function installServiceInEmbedIfEmbeddable(embedWin, serviceClass) {\n  const isEmbeddableService =\n    typeof serviceClass.installInEmbedWindow === 'function';\n  if (!isEmbeddableService) {\n    return false;\n  }\n  const frameElement = dev().assertElement(\n    embedWin.frameElement,\n    'frameElement not found for embed'\n  );\n  const ampdoc = getAmpdoc(frameElement);\n  serviceClass.installInEmbedWindow(embedWin, ampdoc);\n  return true;\n}\n\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    () => service\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have an implementation or a constructor.\n  return !!(service && (service.ctor || service.obj));\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, resolve, reject} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from '../mode';\nimport {urls} from '../config';\n\n/**\n * Internal structure that maintains the state of an extension through loading.\n *\n * @typedef {{\n *   extensionId: (string|undefined),\n *   extensionVersion: (string|undefined),\n * }}\n * @private\n */\nlet ExtensionInfoDef;\n\n/**\n * Calculate the base url for any scripts.\n * @param {!Location} location The window's location\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateScriptBaseUrl(location, opt_isLocalDev) {\n  if (opt_isLocalDev) {\n    let prefix = `${location.protocol}//${location.host}`;\n    if (location.protocol == 'about:') {\n      prefix = '';\n    }\n    return `${prefix}/dist`;\n  }\n  return urls.cdn;\n}\n\n/**\n * Calculates if we need a single pass folder or not.\n *\n * @return {string}\n */\nfunction getSinglePassExperimentPath() {\n  return getMode().singlePassType ? `${getMode().singlePassType}/` : '';\n}\n\n/**\n * Calculate script url for an extension.\n * @param {!Location} location The window's location\n * @param {string} extensionId\n * @param {string=} opt_extensionVersion\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateExtensionScriptUrl(\n  location,\n  extensionId,\n  opt_extensionVersion,\n  opt_isLocalDev\n) {\n  const base = calculateScriptBaseUrl(location, opt_isLocalDev);\n  const rtv = getMode().rtvVersion;\n  if (opt_extensionVersion == null) {\n    opt_extensionVersion = '0.1';\n  }\n  const extensionVersion = opt_extensionVersion\n    ? '-' + opt_extensionVersion\n    : '';\n  const spPath = getSinglePassExperimentPath();\n  return `${base}/rtv/${rtv}/${spPath}v0/${extensionId}${extensionVersion}.js`;\n}\n\n/**\n * Calculate script url for an entry point.\n * If `opt_rtv` is true, returns the URL matching the current RTV.\n * @param {!Location} location The window's location\n * @param {string} entryPoint\n * @param {boolean=} isLocalDev\n * @param {boolean=} opt_rtv\n * @return {string}\n */\nexport function calculateEntryPointScriptUrl(\n  location,\n  entryPoint,\n  isLocalDev,\n  opt_rtv\n) {\n  const base = calculateScriptBaseUrl(location, isLocalDev);\n  if (opt_rtv) {\n    const spPath = getSinglePassExperimentPath();\n    return `${base}/rtv/${getMode().rtvVersion}/${spPath}${entryPoint}.js`;\n  }\n  return `${base}/${entryPoint}.js`;\n}\n\n/**\n * Parse the extension version from a given script URL.\n * @param {string} scriptUrl\n * @return {!ExtensionInfoDef}\n */\nexport function parseExtensionUrl(scriptUrl) {\n  const regex = /^(.*)\\/(.*)-([0-9.]+)\\.js$/i;\n  const matches = scriptUrl.match(regex);\n\n  return {\n    extensionId: matches ? matches[2] : undefined,\n    extensionVersion: matches ? matches[3] : undefined,\n  };\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getAmpdoc,\n  getExistingServiceForDocInEmbedScope,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServicePromiseForDoc,\n} from './service';\nimport {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from './element-service';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (getElementServiceForDoc(\n      element,\n      'access',\n      'amp-access'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'access',\n      'amp-access'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (getElementServiceForDoc(\n      element,\n      'subscriptions',\n      'amp-subscriptions'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'subscriptions',\n      'amp-subscriptions'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'action'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'standard-actions'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (getElementServiceForDoc(\n      element,\n      'activity',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (getService(\n      window,\n      'ampdoc'\n    ));\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (getElementServiceForDoc(\n      element,\n      'amp-analytics-instrumentation',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'amp-analytics-instrumentation',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (getService(\n      window,\n      'batched-xhr'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (getElementServiceIfAvailableForDocInEmbedScope(\n      element,\n      'bind',\n      'amp-bind'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'cid'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'navigation'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (getElementServiceForDoc(\n      element,\n      'loader',\n      'amp-loader'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (getElementServiceForDoc(\n      element,\n      'standalone',\n      'amp-standalone'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (getService(\n      window,\n      'crypto'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'documentInfo'\n    )).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (getService(\n      window,\n      'extensions'\n    ));\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'form-submit-service'\n    ));\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'hidden-observer'\n    ));\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'history'\n    ));\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'inputmask',\n      'amp-inputmask'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'owners'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (getService(\n      window,\n      'performance'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (getExistingServiceOrNull(\n      window,\n      'performance'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (getService(\n      window,\n      'platform'\n    ));\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (getServiceForDoc(\n      element,\n      'position-observer'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'resources'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'resources'\n    ));\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?{incomingFragment: string, outgoingFragment: string}>}\n   */\n  static shareTrackingForOrNull(win) {\n    return /** @type {!Promise<?{incomingFragment: string, outgoingFragment: string}>} */ (getElementServiceIfAvailable(\n      win,\n      'share-tracking',\n      'amp-share-tracking',\n      true\n    ));\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (getElementServiceIfAvailable(win, 'localization', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  static localizationService(win) {\n    return getService(win, 'localization');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (getElementServiceIfAvailable(win, 'story-analytics', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreServiceV01(win) {\n    return getService(win, 'story-store');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestServiceV01(win) {\n    return getService(win, 'story-request-v01');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNullV01(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (getElementServiceIfAvailable(win, 'localization-v01', 'amp-story', true))\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  static localizationServiceV01(win) {\n    return getService(win, 'localization-v01');\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>}\n   */\n  static viewerIntegrationVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>} */\n      (getElementServiceIfAvailable(\n        win,\n        'viewer-integration-variable',\n        'amp-viewer-integration',\n        true\n      ))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'storage'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesFor(window) {\n    return /** @type {!./service/template-impl.Templates} */ (getService(\n      window,\n      'templates'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (getService(\n      window,\n      'timer'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'url-replace'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (getElementServiceForDoc(\n        element,\n        'userNotificationManager',\n        'amp-user-notification'\n      ))\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (getElementServiceIfAvailableForDoc(\n        element,\n        'consentPolicyManager',\n        'amp-consent'\n      ))\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'geo',\n      'amp-geo',\n      true\n    ));\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>}\n   */\n  static userLocationForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'user-location',\n      'amp-user-location',\n      true\n    ));\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'url'\n    ));\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'variant',\n      'amp-experiment',\n      true\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'video-manager'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>}\n   */\n  static viewerAssistanceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>} */\n      (getElementServiceIfAvailableForDoc(\n        element,\n        'amp-viewer-assistance',\n        'amp-viewer-assistance'\n      ))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'viewer'\n    ));\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'viewer'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (getService(\n      window,\n      'vsync'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'viewport'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert, userAssert} from './log';\n\n/**\n * A single source within a srcset. Only one: width or DPR can be specified at\n * a time.\n * @typedef {{\n *   url: string,\n *   width: (number|undefined),\n *   dpr: (number|undefined)\n * }}\n */\nlet SrcsetSourceDef;\n\n/**\n * General grammar: (URL [NUM[w|x]],)*\n * Example 1: \"image1.png 100w, image2.png 50w\"\n * Example 2: \"image1.png 2x, image2.png\"\n * Example 3: \"image1,100w.png 100w, image2.png 50w\"\n */\nconst srcsetRegex = /(\\S+)(?:\\s+(?:(-?\\d+(?:\\.\\d+)?)([a-zA-Z]*)))?\\s*(?:,|$)/g;\n\n/**\n * Extracts `srcset` and fallbacks to `src` if not available.\n * @param {!Element} element\n * @return {!Srcset}\n */\nexport function srcsetFromElement(element) {\n  const srcsetAttr = element.getAttribute('srcset');\n  if (srcsetAttr) {\n    return parseSrcset(srcsetAttr);\n  }\n  // We can't push `src` via `parseSrcset` because URLs in `src` are not always\n  // RFC compliant and can't be easily parsed as an `srcset`. For instance,\n  // they sometimes contain space characters.\n  const srcAttr = userAssert(\n    element.getAttribute('src'),\n    'Either non-empty \"srcset\" or \"src\" attribute must be specified: %s',\n    element\n  );\n  return srcsetFromSrc(srcAttr);\n}\n\n/**\n * Creates a Srcset from a `src` attribute value.\n * @param {string} src\n * @return {!Srcset}\n */\nexport function srcsetFromSrc(src) {\n  return new Srcset([{url: src, width: undefined, dpr: 1}]);\n}\n\n/**\n * Parses the text representation of srcset into Srcset object.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#Attributes.\n * See http://www.w3.org/html/wg/drafts/html/master/semantics.html#attr-img-srcset.\n * @param {string} s\n * @return {!Srcset}\n */\nexport function parseSrcset(s) {\n  const sources = [];\n  let match;\n  while ((match = srcsetRegex.exec(s))) {\n    const url = match[1];\n    let width, dpr;\n    if (match[2]) {\n      const type = match[3].toLowerCase();\n      if (type == 'w') {\n        width = parseInt(match[2], 10);\n      } else if (type == 'x') {\n        dpr = parseFloat(match[2]);\n      } else {\n        continue;\n      }\n    } else {\n      // If no \"w\" or \"x\" specified, we assume it's \"1x\".\n      dpr = 1;\n    }\n    sources.push({url, width, dpr});\n  }\n  return new Srcset(sources);\n}\n\n/**\n * A srcset object contains one or more sources.\n *\n * There are two types of sources: width-based and DPR-based. Only one type\n * of sources allowed to be specified within a single srcset. Depending on a\n * usecase, the components are free to choose any source that best corresponds\n * to the required rendering quality and network and CPU conditions. See\n * \"select\" method for details on how this selection is performed.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#Attributes\n */\nexport class Srcset {\n  /**\n   * @param {!Array<!SrcsetSourceDef>} sources\n   */\n  constructor(sources) {\n    userAssert(sources.length > 0, 'Srcset must have at least one source');\n    /** @private @const {!Array<!SrcsetSourceDef>} */\n    this.sources_ = sources;\n\n    // Only one type of source specified can be used - width or DPR.\n    let hasWidth = false;\n    let hasDpr = false;\n    for (let i = 0; i < sources.length; i++) {\n      const source = sources[i];\n      hasWidth = hasWidth || !!source.width;\n      hasDpr = hasDpr || !!source.dpr;\n    }\n    userAssert(\n      !!(hasWidth ^ hasDpr),\n      'Srcset must have width or dpr sources, but not both'\n    );\n\n    // Source and assert duplicates.\n    sources.sort(hasWidth ? sortByWidth : sortByDpr);\n\n    /** @private @const {boolean} */\n    this.widthBased_ = hasWidth;\n  }\n\n  /**\n   * Performs selection for specified width and DPR. Here, width is the width\n   * in screen pixels and DPR is the device-pixel-ratio or pixel density of\n   * the device. Depending on the circumstances, such as low network conditions,\n   * it's possible to manipulate the result of this method by passing a lower\n   * DPR value.\n   *\n   * The source selection depends on whether this is width-based or DPR-based\n   * srcset.\n   *\n   * In a width-based source, the source's width is the physical width of a\n   * resource (e.g. an image). Depending on the provided DPR, this width is\n   * converted to the screen pixels as following:\n   *   pixelWidth = sourceWidth / DPR\n   *\n   * Then, the source closest to the requested \"width\" is selected using\n   * the \"pixelWidth\". The slight preference is given to the bigger sources to\n   * ensure the most optimal quality.\n   *\n   * In a DPR-based source, the source's DPR is used to return the source that\n   * is closest to the requested DPR.\n   *\n   * Based on\n   * http://www.w3.org/html/wg/drafts/html/master/semantics.html#attr-img-srcset.\n   * @param {number} width\n   * @param {number} dpr\n   * @return {string}\n   */\n  select(width, dpr) {\n    devAssert(width, 'width=%s', width);\n    devAssert(dpr, 'dpr=%s', dpr);\n    let index = 0;\n    if (this.widthBased_) {\n      index = this.selectByWidth_(width * dpr);\n    } else {\n      index = this.selectByDpr_(dpr);\n    }\n    return this.sources_[index].url;\n  }\n\n  /**\n   * @param {number} width\n   * @return {number}\n   * @private\n   */\n  selectByWidth_(width) {\n    const sources = this.sources_;\n    let minIndex = 0;\n    let minScore = Infinity;\n    let minWidth = Infinity;\n\n    for (let i = 0; i < sources.length; i++) {\n      const sWidth = sources[i].width;\n      const score = Math.abs(sWidth - width);\n\n      // Select the one that is closer with a slight preference toward larger\n      // widths. If smaller size is closer, enforce minimum ratio to ensure\n      // image isn't too distorted.\n      if (score <= minScore * 1.1 || width / minWidth > 1.2) {\n        minIndex = i;\n        minScore = score;\n        minWidth = sWidth;\n      } else {\n        break;\n      }\n    }\n    return minIndex;\n  }\n\n  /**\n   * @param {number} dpr\n   * @return {number}\n   * @private\n   */\n  selectByDpr_(dpr) {\n    const sources = this.sources_;\n    let minIndex = 0;\n    let minScore = Infinity;\n\n    for (let i = 0; i < sources.length; i++) {\n      const score = Math.abs(sources[i].dpr - dpr);\n      if (score <= minScore) {\n        minIndex = i;\n        minScore = score;\n      } else {\n        break;\n      }\n    }\n    return minIndex;\n  }\n\n  /**\n   * Returns all URLs in the srcset.\n   * @return {!Array<string>}\n   */\n  getUrls() {\n    return this.sources_.map(s => s.url);\n  }\n\n  /**\n   * Reconstructs the string expression for this srcset.\n   * @param {function(string):string=} opt_mapper\n   * @return {string}\n   */\n  stringify(opt_mapper) {\n    const res = [];\n    const sources = this.sources_;\n    for (let i = 0; i < sources.length; i++) {\n      const source = sources[i];\n      let src = source.url;\n      if (opt_mapper) {\n        src = opt_mapper(src);\n      }\n      if (this.widthBased_) {\n        src += ` ${source.width}w`;\n      } else {\n        src += ` ${source.dpr}x`;\n      }\n      res.push(src);\n    }\n    return res.join(', ');\n  }\n}\n\n/**\n * Sorts by width\n *\n * @param {number} s1\n * @param {number} s2\n * @return {number}\n */\nfunction sortByWidth(s1, s2) {\n  userAssert(s1.width != s2.width, 'Duplicate width: %s', s1.width);\n  return s1.width - s2.width;\n}\n\n/**\n * Sorts by dpr\n *\n * @param {!Object} s1\n * @param {!Object} s2\n * @return {number}\n */\nfunction sortByDpr(s1, s2) {\n  userAssert(s1.dpr != s2.dpr, 'Duplicate dpr: %s', s1.dpr);\n  return s1.dpr - s2.dpr;\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from './log';\nimport {map} from './utils/object.js';\n\nlet htmlContainer;\nlet svgContainer;\n\n/**\n * Creates the html helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\nexport function htmlFor(nodeOrDoc) {\n  const doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n  if (!htmlContainer || htmlContainer.ownerDocument !== doc) {\n    htmlContainer = doc.createElement('div');\n  }\n\n  return html;\n}\n\n/**\n * Creates the svg helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\nexport function svgFor(nodeOrDoc) {\n  const doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n  if (!svgContainer || svgContainer.ownerDocument !== svgContainer) {\n    svgContainer = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  }\n\n  return svg;\n}\n\n/**\n * A tagged template literal helper to generate static SVG trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const circle = svg`<circle cx=\"60\" cy=\"60\" r=\"22\"></circle>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction svg(strings) {\n  return createNode(svgContainer, strings);\n}\n\n/**\n * A tagged template literal helper to generate static DOM trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const div = html`<div><span></span></div>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction html(strings) {\n  return createNode(htmlContainer, strings);\n}\n\n/**\n * Helper used by html and svg string literal functions.\n * @param {!Element} container\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction createNode(container, strings) {\n  devAssert(strings.length === 1, 'Improper html template tag usage.');\n  container./*OK*/ innerHTML = strings[0];\n\n  const el = container.firstElementChild;\n  devAssert(el, 'No elements in template');\n  devAssert(!el.nextElementSibling, 'Too many root elements in template');\n\n  // Clear to free memory.\n  container.removeChild(el);\n\n  return el;\n}\n\n/**\n * Queries an element for all elements with a \"ref\" attribute, removing\n * the attribute afterwards.\n * Returns a named map of all ref elements.\n *\n * @param {!Element} root\n * @return {!Object<string, !Element>}\n */\nexport function htmlRefs(root) {\n  const elements = root.querySelectorAll('[ref]');\n  const refs = map();\n\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n    const ref = devAssert(element.getAttribute('ref'), 'Empty ref attr');\n    element.removeAttribute('ref');\n    devAssert(refs[ref] === undefined, 'Duplicate ref');\n    refs[ref] = element;\n  }\n\n  return refs;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.startsWith.\n * @param {string} string\n * @param {string} prefix\n * @return {boolean}\n */\nexport function startsWith(string, prefix) {\n  if (prefix.length > string.length) {\n    return false;\n  }\n  return string.lastIndexOf(prefix, 0) == 0;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {*} TODO(#23582): Specify return type\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CommonSignals} from './common-signals';\nimport {Services} from './services';\nimport {dev, devAssert, rethrowAsync} from './log';\nimport {getAmpdoc} from './service';\nimport {insertAfterOrAtStart, waitForBodyOpenPromise} from './dom';\nimport {map} from './utils/object';\nimport {setStyles} from './style';\nimport {waitForServices} from './render-delaying-services';\n\nconst TRANSFORMER_PROP = '__AMP_CSS_TR';\nconst STYLE_MAP_PROP = '__AMP_CSS_SM';\n\n/**\n * Adds the given css text to the given ampdoc.\n *\n * The style tags will be at the beginning of the head before all author\n * styles. One element can be the main runtime CSS. This is guaranteed\n * to always be the first stylesheet in the doc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc The ampdoc that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are available.\n *     Not using a promise, because this is synchronous when possible.\n *     for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\nexport function installStylesForDoc(\n  ampdoc,\n  cssText,\n  cb,\n  opt_isRuntimeCss,\n  opt_ext\n) {\n  const cssRoot = ampdoc.getHeadNode();\n  const style = insertStyleElement(\n    cssRoot,\n    maybeTransform(cssRoot, cssText),\n    opt_isRuntimeCss || false,\n    opt_ext || null\n  );\n\n  if (cb) {\n    const rootNode = ampdoc.getRootNode();\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(rootNode, style)) {\n      cb(style);\n      return style;\n    }\n    // Poll until styles are available.\n    const interval = setInterval(() => {\n      if (styleLoaded(rootNode, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n  return style;\n}\n\n/**\n * Adds the given css text to the given document.\n * TODO(dvoytenko, #22733): Remove this method once FIE/ampdoc migration is\n * done.\n *\n * @param {!Document} doc The document that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are\n *     available. Not using a promise, because this is synchronous when\n *     possible. for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\nexport function installStylesLegacy(\n  doc,\n  cssText,\n  cb,\n  opt_isRuntimeCss,\n  opt_ext\n) {\n  const style = insertStyleElement(\n    dev().assertElement(doc.head),\n    cssText,\n    opt_isRuntimeCss || false,\n    opt_ext || null\n  );\n\n  if (cb) {\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(doc, style)) {\n      cb(style);\n      return style;\n    }\n    // Poll until styles are available.\n    const interval = setInterval(() => {\n      if (styleLoaded(doc, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n  return style;\n}\n\n/**\n * Creates the properly configured style element.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @param {boolean} isRuntimeCss\n * @param {?string} ext\n * @return {!Element}\n */\nfunction insertStyleElement(cssRoot, cssText, isRuntimeCss, ext) {\n  let styleMap = cssRoot[STYLE_MAP_PROP];\n  if (!styleMap) {\n    styleMap = cssRoot[STYLE_MAP_PROP] = map();\n  }\n\n  const isExtCss =\n    !isRuntimeCss && (ext && ext != 'amp-custom' && ext != 'amp-keyframes');\n  const key = isRuntimeCss\n    ? 'amp-runtime'\n    : isExtCss\n    ? `amp-extension=${ext}`\n    : null;\n\n  // Check if it has already been created or discovered.\n  if (key) {\n    const existing = getExistingStyleElement(cssRoot, styleMap, key);\n    if (existing) {\n      if (existing.textContent !== cssText) {\n        existing.textContent = cssText;\n      }\n      return existing;\n    }\n  }\n\n  // Create the new style element and append to cssRoot.\n  const doc = cssRoot.ownerDocument || cssRoot;\n  const style = doc.createElement('style');\n  style./*OK*/ textContent = cssText;\n  let afterElement = null;\n  // Make sure that we place style tags after the main runtime CSS. Otherwise\n  // the order is random.\n  if (isRuntimeCss) {\n    style.setAttribute('amp-runtime', '');\n  } else if (isExtCss) {\n    style.setAttribute('amp-extension', ext || '');\n    afterElement = dev().assertElement(\n      getExistingStyleElement(cssRoot, styleMap, 'amp-runtime')\n    );\n  } else {\n    if (ext) {\n      style.setAttribute(ext, '');\n    }\n    afterElement = cssRoot.lastChild;\n  }\n  insertAfterOrAtStart(cssRoot, style, afterElement);\n  if (key) {\n    styleMap[key] = style;\n  }\n  return style;\n}\n\n/**\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {!Object<string, !Element>} styleMap\n * @param {string} key\n * @return {?Element}\n */\nfunction getExistingStyleElement(cssRoot, styleMap, key) {\n  // Already cached.\n  if (styleMap[key]) {\n    return styleMap[key];\n  }\n  // Check if the style has already been added by the server layout.\n  const existing = cssRoot./*OK*/ querySelector(`style[${key}]`);\n  if (existing) {\n    styleMap[key] = existing;\n    return existing;\n  }\n  // Nothing found.\n  return null;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {function(string):string} transformer\n */\nexport function installCssTransformer(cssRoot, transformer) {\n  cssRoot[TRANSFORMER_PROP] = transformer;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @return {string}\n */\nfunction maybeTransform(cssRoot, cssText) {\n  const transformer = cssRoot[TRANSFORMER_PROP];\n  return transformer ? transformer(cssText) : cssText;\n}\n\n/** @private {boolean} */\nlet bodyMadeVisible = false;\n\n/**\n * @param {boolean} value\n * @visibleForTesting\n */\nexport function setBodyMadeVisibleForTesting(value) {\n  bodyMadeVisible = value;\n}\n\n/**\n * Sets the document's body opacity to 1.\n * If the body is not yet available (because our script was loaded\n * synchronously), polls until it is.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisible(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  const win = /** @type {!Window} */ (doc.defaultView);\n  waitForBodyOpenPromise(doc)\n    .then(() => {\n      return waitForServices(win);\n    })\n    .catch(reason => {\n      rethrowAsync(reason);\n      return [];\n    })\n    .then(services => {\n      bodyMadeVisible = true;\n      setBodyVisibleStyles(doc);\n      const ampdoc = getAmpdoc(doc);\n      ampdoc.signals().signal(CommonSignals.RENDER_START);\n      if (services.length > 0) {\n        const resources = Services.resourcesForDoc(doc.documentElement);\n        resources./*OK*/ schedulePass(1, /* relayoutAll */ true);\n      }\n      try {\n        const perf = Services.performanceFor(win);\n        perf.tick('mbv');\n        perf.flush();\n      } catch (e) {}\n    });\n}\n\n/**\n * Set the document's body opacity to 1. Called in error cases.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisibleRecovery(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  if (bodyMadeVisible) {\n    return;\n  }\n  bodyMadeVisible = true;\n  setBodyVisibleStyles(doc);\n}\n\n/**\n * Make sure that body exists, and make it visible.\n * @param {!Document} doc\n */\nfunction setBodyVisibleStyles(doc) {\n  setStyles(dev().assertElement(doc.body), {\n    opacity: 1,\n    visibility: 'visible',\n    'animation': 'none',\n  });\n}\n\n/**\n * Indicates that the body is always visible. For instance, in case of PWA.\n * This check is on a module level variable, and could be problematic if you are\n * relying on this function across different binaries.\n * @param {!Window} unusedWin\n */\nexport function bodyAlwaysVisible(unusedWin) {\n  bodyMadeVisible = true;\n}\n\n/**\n * Checks whether a style element was registered in the DOM.\n * @param {!Document|!ShadowRoot} doc\n * @param {!Element} style\n * @return {boolean}\n */\nfunction styleLoaded(doc, style) {\n  const sheets = doc.styleSheets;\n  for (let i = 0; i < sheets.length; i++) {\n    const sheet = sheets[i];\n    if (sheet.ownerNode == style) {\n      return true;\n    }\n  }\n  return false;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {dev, devAssert} from './log';\nimport {map} from './utils/object.js';\nimport {startsWith} from './string';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\n/**\n * @export\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @export\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (startsWith(camelCase, '--')) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      styles[k].toString(),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (propertyName) {\n    element.style[propertyName] = /** @type {string} */ (opt_units\n      ? value + opt_units\n      : value);\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  if (style === 'display') {\n    dev().error(\n      'STYLE',\n      '`display` style detected. You must use toggle instead.'\n    );\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    dev().error(\n      'STYLE',\n      '`display` style detected in styles. You must use toggle instead.'\n    );\n  }\n  return styles;\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x}, ${opt_y})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n  return `rotate(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!Object<string, string>}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return /** @type {!Object<string, string>} */ (style) || map();\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst toString_ = Object.prototype.toString;\n\n/**\n * Returns the ECMA [[Class]] of a value\n * @param {*} value\n * @return {string}\n */\nfunction toString(value) {\n  return toString_.call(value);\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport function isArray(value) {\n  return Array.isArray(value);\n}\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString(value) === '[object Object]';\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Checks whether `s` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} s\n * @return {boolean}\n * @template T\n */\nexport function isEnumValue(enumObj, s) {\n  for (const k in enumObj) {\n    if (enumObj[k] === s) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {!Window|null} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {tryDecodeUriComponent_} from './url-try-decode-uri-component';\n\nconst regex = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * DO NOT import the function from this file. Instead, import parseQueryString\n * from `src/url.js`.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString_(queryString) {\n  const params = /** @type {!JsonObject} */ (Object.create(null));\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = regex.exec(queryString))) {\n    const name = tryDecodeUriComponent_(match[1], match[1]);\n    const value = match[2] ? tryDecodeUriComponent_(match[2], match[2]) : '';\n    params[name] = value;\n  }\n  return params;\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  checkCorsUrl,\n  getSourceUrl,\n  isProxyOrigin,\n  parseUrlDeprecated,\n  resolveRelativeUrl,\n} from './url';\nimport {parseSrcset} from './srcset';\nimport {startsWith} from './string';\nimport {urls} from './config';\nimport {user} from './log';\n\nconst TAG = 'URL-REWRITE';\n\n/** @private @const {string} */\nconst ORIGINAL_TARGET_VALUE = '__AMP_ORIGINAL_TARGET_VALUE_';\n\n/**\n * The same as rewriteAttributeValue() but actually updates the element and\n * modifies other related attribute(s) for special cases, i.e. `target` for <a>.\n * @param {!Element} element\n * @param {string} attrName\n * @param {string} attrValue\n * @param {!Location=} opt_location\n * @param {boolean=} opt_updateProperty\n * @return {string}\n */\nexport function rewriteAttributesForElement(\n  element,\n  attrName,\n  attrValue,\n  opt_location,\n  opt_updateProperty\n) {\n  const tag = element.tagName.toLowerCase();\n  const attr = attrName.toLowerCase();\n  const rewrittenValue = rewriteAttributeValue(tag, attr, attrValue);\n  // When served from proxy (CDN), changing an <a> tag from a hash link to a\n  // non-hash link requires updating `target` attribute per cache modification\n  // rules. @see amp-cache-modifications.md#url-rewrites\n  const isProxy = isProxyOrigin(opt_location || self.location);\n  if (isProxy && tag === 'a' && attr === 'href') {\n    const oldValue = element.getAttribute(attr);\n    const newValueIsHash = rewrittenValue[0] === '#';\n    const oldValueIsHash = oldValue && oldValue[0] === '#';\n\n    if (newValueIsHash && !oldValueIsHash) {\n      // Save the original value of `target` so it can be restored (if needed).\n      if (!element[ORIGINAL_TARGET_VALUE]) {\n        element[ORIGINAL_TARGET_VALUE] = element.getAttribute('target');\n      }\n      element.removeAttribute('target');\n    } else if (oldValueIsHash && !newValueIsHash) {\n      // Restore the original value of `target` or default to `_top`.\n      element.setAttribute('target', element[ORIGINAL_TARGET_VALUE] || '_top');\n    }\n  }\n  if (opt_updateProperty) {\n    // Must be done first for <input> elements to correctly update the UI for\n    // the first change on Safari and Chrome.\n    element[attr] = rewrittenValue;\n  }\n  element.setAttribute(attr, rewrittenValue);\n  return rewrittenValue;\n}\n\n/**\n * If (tagName, attrName) is a CDN-rewritable URL attribute, returns the\n * rewritten URL value. Otherwise, returns the unchanged `attrValue`.\n * See resolveUrlAttr() for rewriting rules.\n * @param {string} tagName Lowercase tag name.\n * @param {string} attrName Lowercase attribute name.\n * @param {string} attrValue\n * @return {string}\n * @private\n * @visibleForTesting\n */\nexport function rewriteAttributeValue(tagName, attrName, attrValue) {\n  if (isUrlAttribute(attrName)) {\n    return resolveUrlAttr(tagName, attrName, attrValue, self.location);\n  }\n  return attrValue;\n}\n\n/**\n * @param {string} attrName Lowercase attribute name.\n * @return {boolean}\n */\nexport function isUrlAttribute(attrName) {\n  return attrName == 'src' || attrName == 'href' || attrName == 'srcset';\n}\n\n/**\n * Rewrites the URL attribute values. URLs are rewritten as following:\n * - If URL is absolute, it is not rewritten\n * - If URL is relative, it's rewritten as absolute against the source origin\n * - If resulting URL is a `http:` URL and it's for image, the URL is rewritten\n *   again to be served with AMP Cache (cdn.ampproject.org).\n *\n * @param {string} tagName Lowercase tag name.\n * @param {string} attrName Lowercase attribute name.\n * @param {string} attrValue\n * @param {!Location} windowLocation\n * @return {string}\n * @private\n * @visibleForTesting\n */\nexport function resolveUrlAttr(tagName, attrName, attrValue, windowLocation) {\n  checkCorsUrl(attrValue);\n  const isProxyHost = isProxyOrigin(windowLocation);\n  const baseUrl = parseUrlDeprecated(getSourceUrl(windowLocation));\n\n  if (attrName == 'href' && !startsWith(attrValue, '#')) {\n    return resolveRelativeUrl(attrValue, baseUrl);\n  }\n\n  if (attrName == 'src') {\n    if (tagName == 'amp-img') {\n      return resolveImageUrlAttr(attrValue, baseUrl, isProxyHost);\n    }\n    return resolveRelativeUrl(attrValue, baseUrl);\n  }\n\n  if (attrName == 'srcset') {\n    let srcset;\n    try {\n      srcset = parseSrcset(attrValue);\n    } catch (e) {\n      // Do not fail the whole template just because one srcset is broken.\n      // An AMP element will pick it up and report properly.\n      user().error(TAG, 'Failed to parse srcset: ', e);\n      return attrValue;\n    }\n    return srcset.stringify(url =>\n      resolveImageUrlAttr(url, baseUrl, isProxyHost)\n    );\n  }\n\n  return attrValue;\n}\n\n/**\n * Non-HTTPs image URLs are rewritten via proxy.\n * @param {string} attrValue\n * @param {!Location} baseUrl\n * @param {boolean} isProxyHost\n * @return {string}\n */\nfunction resolveImageUrlAttr(attrValue, baseUrl, isProxyHost) {\n  const src = parseUrlDeprecated(resolveRelativeUrl(attrValue, baseUrl));\n\n  // URLs such as `data:` or proxy URLs are returned as is. Unsafe protocols\n  // do not arrive here - already stripped by the sanitizer.\n  if (src.protocol == 'data:' || isProxyOrigin(src) || !isProxyHost) {\n    return src.href;\n  }\n\n  // Rewrite as a proxy URL.\n  return (\n    `${urls.cdn}/i/` +\n    (src.protocol == 'https:' ? 's/' : '') +\n    encodeURIComponent(src.host) +\n    src.pathname +\n    (src.search || '') +\n    (src.hash || '')\n  );\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * DO NOT import the function from this file. Instead, import\n * tryDecodeUriComponent from `src/url.js`.\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent_(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LruCache} from './utils/lru-cache';\nimport {dict, hasOwn} from './utils/object';\nimport {endsWith, startsWith} from './string';\nimport {getMode} from './mode';\nimport {isArray} from './types';\nimport {parseQueryString_} from './url-parse-query-string';\nimport {tryDecodeUriComponent_} from './url-try-decode-uri-component';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\n/**\n * @type {!JsonObject}\n */\nconst SERVING_TYPE_PREFIX = dict({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n  // Actions viewer\n  'action': true,\n});\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet a;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet cache;\n\n/** @private @const Matches amp_js_* parameters in query string. */\nconst AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n\n/** @private @const Matches amp_gsa parameters in query string. */\nconst AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n\n/** @private @const Matches amp_r parameters in query string. */\nconst AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n\n/** @private @const Matches amp_kit parameters in query string. */\nconst AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n\n/** @private @const Matches usqp parameters from goog experiment in query string. */\nconst GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\n\nconst INVALID_PROTOCOLS = [\n  /*eslint no-script-url: 0*/ 'javascript:',\n  /*eslint no-script-url: 0*/ 'data:',\n  /*eslint no-script-url: 0*/ 'vbscript:',\n];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a = /** @type {!HTMLAnchorElement} */ (self.document.createElement('a'));\n    cache = self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, opt_nocache ? null : cache);\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(a, url, opt_cache) {\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = getMode().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  const field = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    const v = params[k];\n    if (v == null) {\n      continue;\n    } else if (isArray(v)) {\n      for (let i = 0; i < v.length; i++) {\n        const sv = /** @type {string} */ (v[i]);\n        s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n      }\n    } else {\n      const sv = /** @type {string} */ (v);\n      s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  // (erwinm, #4560): type cast necessary until #4560 is fixed.\n  const theUrlString = /** @type {string} */ (urlString);\n  userAssert(\n    isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    theUrlString\n  );\n  return theUrlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * This function is implemented in a separate file to avoid a circular\n * dependency.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  return parseQueryString_(queryString);\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.cdnProxyRegex.test(url.origin);\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.localhostRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const parsed = parseUrlDeprecated(url);\n  const search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const search = urlSearch\n    .replace(AMP_JS_PARAMS_REGEX, '')\n    .replace(AMP_GSA_PARAMS_REGEX, '')\n    .replace(AMP_R_PARAMS_REGEX, '')\n    .replace(AMP_KIT_PARAMS_REGEX, '')\n    .replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '')\n    .replace(/^[?&]/, ''); // Removes first ? or &.\n  return search ? '?' + search : '';\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}=[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX[prefix],\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  if (typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private Visible for testing.\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (startsWith(relativeUrlString.toLowerCase(), relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (startsWith(relativeUrlString, '//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (startsWith(relativeUrlString, '/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} opt_fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, opt_fallback) {\n  return tryDecodeUriComponent_(component, opt_fallback);\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n  }\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// TODO(rsimha, #15334): Enable this rule.\n/* eslint jsdoc/check-types: 0 */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nexport function once(fn) {\n  let evaluated = false;\n  let retValue = null;\n  let callback = fn;\n  return (...args) => {\n    if (!evaluated) {\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n    return retValue;\n  };\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dev} from '../log';\n\n/** @const {string} */\nconst TAG = 'lru-cache';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = Object.create(null);\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    dev().warn(TAG, 'Trimming LRU cache');\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isObject} from '../types';\n\n/* @const */\nconst hasOwn_ = Object.prototype.hasOwnProperty;\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {t, s, d} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    Object.keys(s).forEach(key => {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          return;\n        }\n      }\n      t[key] = newValue;\n    });\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A priority queue backed with sorted array.\n * @template T\n */\nexport default class PriorityQueue {\n  /**\n   * Creates an instance of PriorityQueue.\n   */\n  constructor() {\n    /** @private @const {Array<{item: T, priority: number}>} */\n    this.queue_ = [];\n  }\n\n  /**\n   * Returns the max priority item without dequeueing it.\n   * @return {T}\n   */\n  peek() {\n    const l = this.queue_.length;\n    if (!l) {\n      return null;\n    }\n    return this.queue_[l - 1].item;\n  }\n\n  /**\n   * Enqueues an item with the given priority.\n   * @param {T} item\n   * @param {number} priority\n   */\n  enqueue(item, priority) {\n    if (isNaN(priority)) {\n      throw new Error('Priority must not be NaN.');\n    }\n    const i = this.binarySearch_(priority);\n    this.queue_.splice(i, 0, {item, priority});\n  }\n\n  /**\n   * Returns index at which item with `target` priority should be inserted.\n   * @param {number} target\n   * @return {number}\n   * @private\n   */\n  binarySearch_(target) {\n    let i = -1;\n    let lo = 0;\n    let hi = this.queue_.length;\n    while (lo <= hi) {\n      i = Math.floor((lo + hi) / 2);\n      // This means `target` is the new max priority in the queue.\n      if (i === this.queue_.length) {\n        break;\n      }\n      // Stop searching once p[i] >= target AND p[i-1] < target.\n      // This way, we'll return the index of the first occurence of `target`\n      // priority (if any), which preserves FIFO order of same-priority items.\n      if (this.queue_[i].priority < target) {\n        lo = i + 1;\n      } else if (i > 0 && this.queue_[i - 1].priority >= target) {\n        hi = i - 1;\n      } else {\n        break;\n      }\n    }\n    return i;\n  }\n\n  /**\n   * @param {function(T)} callback\n   */\n  forEach(callback) {\n    let index = this.queue_.length;\n    while (index--) {\n      callback(this.queue_[index].item);\n    }\n  }\n\n  /**\n   * Dequeues the max priority item.\n   * Items with the same priority are dequeued in FIFO order.\n   * @return {T}\n   */\n  dequeue() {\n    if (!this.queue_.length) {\n      return null;\n    }\n    return this.queue_.pop().item;\n  }\n\n  /**\n   * The number of items in the queue.\n   * @return {number}\n   */\n  get length() {\n    return this.queue_.length;\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /**\n   * Creates an instance of Deferred.\n   */\n  constructor() {\n    let resolve, reject;\n\n    /**\n     * @const {!Promise<T>}\n     */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n\n    /**\n     * @const {function(T=)}\n     */\n    this.resolve = resolve;\n\n    /**\n     * @const {function(*=)}\n     */\n    this.reject = reject;\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise(resolve => {\n    resolve(fn());\n  });\n}\n\n/**\n * Returns a promise which resolves if a threshold amount of the given promises\n * resolve, and rejects otherwise.\n * @param {!Array<!Promise>} promises The array of promises to test.\n * @param {number} count The number of promises that must resolve for the\n *     returned promise to resolve.\n * @return {!Promise} A promise that resolves if any of the given promises\n *     resolve, and which rejects otherwise.\n */\nexport function some(promises, count = 1) {\n  return new Promise((resolve, reject) => {\n    count = Math.max(count, 0);\n    const extra = promises.length - count;\n    if (extra < 0) {\n      reject(new Error('not enough promises to resolve'));\n    }\n    if (promises.length == 0) {\n      resolve([]);\n    }\n    const values = [];\n    const reasons = [];\n\n    const onFulfilled = value => {\n      if (values.length < count) {\n        values.push(value);\n      }\n      if (values.length == count) {\n        resolve(values);\n      }\n    };\n    const onRejected = reason => {\n      if (reasons.length <= extra) {\n        reasons.push(reason);\n      }\n      if (reasons.length > extra) {\n        reject(reasons);\n      }\n    };\n    for (let i = 0; i < promises.length; i++) {\n      Promise.resolve(promises[i]).then(onFulfilled, onRejected);\n    }\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!Promise>=} opt_promises\n   */\n  constructor(opt_promises) {\n    let resolve_, reject_;\n    /** @private @const {!Promise} */\n    this.promise_ = new Promise((resolve, reject) => {\n      resolve_ = resolve;\n      reject_ = reject;\n    });\n\n    /** @private */\n    this.resolve_ = resolve_;\n\n    /** @private */\n    this.reject_ = reject_;\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (let i = 0; i < opt_promises.length; i++) {\n        this.add(opt_promises[i]);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!Promise} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    Promise.resolve(promise).then(\n      result => {\n        if (this.count_ === countAtAdd) {\n          this.resolve_(result);\n        }\n      },\n      error => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.reject_(error);\n        }\n      }\n    );\n    return this.promise_;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.promise_.then(opt_resolve, opt_reject);\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Wraps a given callback and applies a rate limit.\n * It throttles the calls so that no consequent calls have time interval\n * smaller than the given minimal interval.\n *\n * @param {!Window} win\n * @param {function(...*)} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...*)}\n */\nexport function throttle(win, callback, minInterval) {\n  let locker = 0;\n  let nextCallArgs = null;\n\n  /**\n   * @param {!Object} args\n   */\n  function fire(args) {\n    nextCallArgs = null;\n    // Lock the fire for minInterval milliseconds\n    locker = win.setTimeout(waiter, minInterval);\n\n    callback.apply(null, args);\n  }\n\n  /**\n   * Waiter function\n   */\n  function waiter() {\n    locker = 0;\n    // If during the period there're invocations queued up, fire once.\n    if (nextCallArgs) {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function(...args) {\n    if (locker) {\n      nextCallArgs = args;\n    } else {\n      fire(args);\n    }\n  };\n}\n\n/**\n * Wraps a given callback and applies a wait timer, so that minInterval\n * milliseconds must pass since the last call before the callback is actually\n * invoked.\n *\n * @param {!Window} win\n * @param {function(...*)} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...*)}\n */\nexport function debounce(win, callback, minInterval) {\n  let locker = 0;\n  let timestamp = 0;\n  let nextCallArgs = null;\n\n  /**\n   * @param {?Array} args\n   */\n  function fire(args) {\n    nextCallArgs = null;\n    callback.apply(null, args);\n  }\n\n  /**\n   * Wait function for debounce\n   */\n  function waiter() {\n    locker = 0;\n    const remaining = minInterval - (win.Date.now() - timestamp);\n    if (remaining > 0) {\n      locker = win.setTimeout(waiter, remaining);\n    } else {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function(...args) {\n    timestamp = win.Date.now();\n    nextCallArgs = args;\n    if (!locker) {\n      locker = win.setTimeout(waiter, minInterval);\n    }\n  };\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './promise';\nimport {map} from './object';\n\n/**\n * This object tracts signals and allows blocking until a signal has been\n * received.\n */\nexport class Signals {\n  /**\n   * Creates an instance of Signals.\n   */\n  constructor() {\n    /**\n     * A mapping from a signal name to the signal response: either time or\n     * an error.\n     * @private @const {!Object<string, (time|!Error)>}\n     */\n    this.map_ = map();\n\n    /**\n     * A mapping from a signal name to the signal promise, resolve and reject.\n     * Only allocated when promise has been requested.\n     * @private {?Object<string, {\n     *   promise: !Promise,\n     *   resolve: (function(time)|undefined),\n     *   reject: (function(!Error)|undefined)\n     * }>}\n     */\n    this.promiseMap_ = null;\n  }\n\n  /**\n   * Returns the current known value of the signal. If signal is not yet\n   * available, `null` is returned.\n   * @param {string} name\n   * @return {number|!Error|null}\n   */\n  get(name) {\n    const v = this.map_[name];\n    return v == null ? null : v;\n  }\n\n  /**\n   * Returns the promise that's resolved when the signal is triggered. The\n   * resolved value is the time of the signal.\n   * @param {string} name\n   * @return {!Promise<time>}\n   */\n  whenSignal(name) {\n    let promiseStruct = this.promiseMap_ && this.promiseMap_[name];\n    if (!promiseStruct) {\n      const result = this.map_[name];\n      if (result != null) {\n        // Immediately resolve signal.\n        const promise =\n          typeof result == 'number'\n            ? Promise.resolve(result)\n            : Promise.reject(result);\n        promiseStruct = {promise};\n      } else {\n        // Allocate the promise/resolver for when the signal arrives in the\n        // future.\n        const deferred = new Deferred();\n        const {promise, resolve, reject} = deferred;\n\n        promiseStruct = {promise, resolve, reject};\n      }\n      if (!this.promiseMap_) {\n        this.promiseMap_ = map();\n      }\n      this.promiseMap_[name] = promiseStruct;\n    }\n    return promiseStruct.promise;\n  }\n\n  /**\n   * Triggers the signal with the specified name on the element. The time is\n   * optional; if not provided, the current time is used. The associated\n   * promise is resolved with the resulting time.\n   * @param {string} name\n   * @param {time=} opt_time\n   */\n  signal(name, opt_time) {\n    if (this.map_[name] != null) {\n      // Do not duplicate signals.\n      return;\n    }\n    const time = opt_time || Date.now();\n    this.map_[name] = time;\n    const promiseStruct = this.promiseMap_ && this.promiseMap_[name];\n    if (promiseStruct && promiseStruct.resolve) {\n      promiseStruct.resolve(time);\n      promiseStruct.resolve = undefined;\n      promiseStruct.reject = undefined;\n    }\n  }\n\n  /**\n   * Rejects the signal. Indicates that the signal will never succeed. The\n   * associated signal is rejected.\n   * @param {string} name\n   * @param {!Error} error\n   */\n  rejectSignal(name, error) {\n    if (this.map_[name] != null) {\n      // Do not duplicate signals.\n      return;\n    }\n    this.map_[name] = error;\n    const promiseStruct = this.promiseMap_ && this.promiseMap_[name];\n    if (promiseStruct && promiseStruct.reject) {\n      promiseStruct.reject(error);\n      promiseStruct.resolve = undefined;\n      promiseStruct.reject = undefined;\n    }\n  }\n\n  /**\n   * Resets all signals.\n   * @param {string} name\n   */\n  reset(name) {\n    if (this.map_[name]) {\n      delete this.map_[name];\n    }\n    // Reset promise it has already been resolved.\n    const promiseStruct = this.promiseMap_ && this.promiseMap_[name];\n    if (promiseStruct && !promiseStruct.resolve) {\n      delete this.promiseMap_[name];\n    }\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../services';\nimport {devAssert, user, userAssert} from '../log';\nimport {dict, map} from './object';\nimport {fromIterator} from './array';\nimport {\n  getCorsUrl,\n  getWinOrigin,\n  isProxyOrigin,\n  parseUrlDeprecated,\n  serializeQueryString,\n} from '../url';\nimport {getMode} from '../mode';\nimport {isArray, isObject} from '../types';\nimport {isExperimentOn} from '../experiments';\nimport {isFormDataWrapper} from '../form-data-wrapper';\n\n/** @private @const {!Array<string>} */\nconst allowedMethods_ = ['GET', 'POST'];\n\n/** @private @const {!Array<function(*):boolean>} */\nconst allowedJsonBodyTypes_ = [isArray, isObject];\n\n/**\n * Serializes a fetch request so that it can be passed to `postMessage()`,\n * i.e., can be cloned using the\n * [structured clone algorithm](http://mdn.io/Structured_clone_algorithm).\n *\n * The request is serialized in the following way:\n *\n * 1. If the `init.body` is a `FormData`, set content-type header to\n * `multipart/form-data` and transform `init.body` into an\n * `!Array<!Array<string>>` holding the list of form entries, where each\n * element in the array is a form entry (key-value pair) represented as a\n * 2-element array.\n *\n * 2. Return a new object having properties `input` and the transformed\n * `init`.\n *\n * The serialized request is assumed to be de-serialized in the following way:\n *\n * 1.If content-type header starts with `multipart/form-data`\n * (case-insensitive), transform the entry array in `init.body` into a\n * `FormData` object.\n *\n * 2. Pass `input` and transformed `init` to `fetch` (or the constructor of\n * `Request`).\n *\n * Currently only `FormData` used in `init.body` is handled as it's the only\n * type being used in AMP runtime that needs serialization. The `Headers` type\n * also needs serialization, but callers should not be passing `Headers`\n * object in `init`, as that fails `fetchPolyfill` on browsers that don't\n * support fetch. Some serialization-needing types for `init.body` such as\n * `ArrayBuffer` and `Blob` are already supported by the structured clone\n * algorithm. Other serialization-needing types such as `URLSearchParams`\n * (which is not supported in IE and Safari) and `FederatedCredentials` are\n * not used in AMP runtime.\n *\n * @param {string} input The URL of the XHR to convert to structured\n *     cloneable.\n * @param {!FetchInitDef} init The options of the XHR to convert to structured\n *     cloneable.\n * @return {{input: string, init: !FetchInitDef}} The serialized structurally-\n *     cloneable request.\n * @private\n */\nexport function toStructuredCloneable(input, init) {\n  const newInit = Object.assign({}, init);\n  if (isFormDataWrapper(init.body)) {\n    const wrapper = /** @type {!FormDataWrapperInterface} */ (init.body);\n    newInit.headers['Content-Type'] = 'multipart/form-data;charset=utf-8';\n    newInit.body = fromIterator(wrapper.entries());\n  }\n  return {input, init: newInit};\n}\n\n/**\n * De-serializes a fetch response that was made possible to be passed to\n * `postMessage()`, i.e., can be cloned using the\n * [structured clone algorithm](http://mdn.io/Structured_clone_algorithm).\n *\n * The response is assumed to be serialized in the following way:\n *\n * 1. Transform the entries in the headers of the response into an\n * `!Array<!Array<string>>` holding the list of header entries, where each\n * element in the array is a header entry (key-value pair) represented as a\n * 2-element array. The header key is case-insensitive.\n *\n * 2. Include the header entry list and `status` and `statusText` properties\n * of the response in as `headers`, `status` and `statusText` properties of\n * `init`.\n *\n * 3. Include the body of the response serialized as string in `body`.\n *\n * 4. Return a new object having properties `body` and `init`.\n *\n * The response is de-serialized in the following way:\n *\n * 1. If the `Response` type is supported and `responseType` is not\n * document, pass `body` and `init` directly to the constructor of `Response`.\n *\n * 2. Otherwise, populate a fake XHR object to pass to `FetchResponse` as if\n * the response is returned by the fetch polyfill.\n *\n * 3. If `responseType` is `document`, also parse the body and populate\n * `responseXML` as a `Document` type.\n *\n * @param {JsonObject|string|undefined} response The structurally-cloneable\n *     response to convert back to a regular Response.\n * @param {string|undefined} responseType The original response type used to\n *     initiate the XHR.\n * @return {!Response} The deserialized regular response.\n * @private\n */\nexport function fromStructuredCloneable(response, responseType) {\n  userAssert(isObject(response), 'Object expected: %s', response);\n\n  const isDocumentType = responseType == 'document';\n  if (!isDocumentType) {\n    // Use native `Response` type if available for performance. If response\n    // type is `document`, we must fall back to `FetchResponse` polyfill\n    // because callers would then rely on the `responseXML` property being\n    // present, which is not supported by the Response type.\n    return new Response(response['body'], response['init']);\n  }\n\n  const lowercasedHeaders = map();\n  const data = {\n    status: 200,\n    statusText: 'OK',\n    /**\n     * @param {string} name\n     * @return {string}\n     */\n    getResponseHeader(name) {\n      return lowercasedHeaders[String(name).toLowerCase()] || null;\n    },\n  };\n\n  if (response['init']) {\n    const init = response['init'];\n    if (isArray(init.headers)) {\n      init.headers.forEach(entry => {\n        const headerName = entry[0];\n        const headerValue = entry[1];\n        lowercasedHeaders[String(headerName).toLowerCase()] = String(\n          headerValue\n        );\n      });\n    }\n    if (init.status) {\n      data.status = parseInt(init.status, 10);\n    }\n    if (init.statusText) {\n      data.statusText = String(init.statusText);\n    }\n  }\n\n  return new Response(response['body'] ? String(response['body']) : '', data);\n}\n\n/**\n * Intercepts the XHR and proxies it through the viewer if necessary.\n *\n * XHRs are intercepted if all of the following are true:\n * - The AMP doc is in single doc mode\n * - The requested resource is not a 1p request.\n * - The viewer has the `xhrInterceptor` capability\n * - The Viewer is a trusted viewer or AMP is currently in developement mode\n * - The AMP doc is opted-in for XHR interception (`<html>` tag has\n *   `allow-xhr-interception` attribute)\n *\n * @param {!Window} win\n * @param {?../service/ampdoc-impl.AmpDoc} ampdocSingle\n * @param {string} input The URL of the XHR which may get intercepted.\n * @param {!FetchInitDef} init The options of the XHR which may get\n *     intercepted.\n * @return {!Promise<!Response|undefined>}\n *     A response returned by the interceptor if XHR is intercepted or\n *     `Promise<undefined>` otherwise.\n * @private\n */\nexport function getViewerInterceptResponse(win, ampdocSingle, input, init) {\n  if (!ampdocSingle) {\n    return Promise.resolve();\n  }\n\n  const whenUnblocked = init.prerenderSafe\n    ? Promise.resolve()\n    : ampdocSingle.whenFirstVisible();\n  const viewer = Services.viewerForDoc(ampdocSingle);\n  const urlIsProxy = isProxyOrigin(input);\n  const viewerCanIntercept = viewer.hasCapability('xhrInterceptor');\n  const interceptorDisabledForLocalDev =\n    init.bypassInterceptorForDev && getMode(win).localDev;\n  if (urlIsProxy || !viewerCanIntercept || interceptorDisabledForLocalDev) {\n    return whenUnblocked;\n  }\n\n  const htmlElement = ampdocSingle.getRootNode().documentElement;\n  const docOptedIn = htmlElement.hasAttribute('allow-xhr-interception');\n  if (!docOptedIn) {\n    return whenUnblocked;\n  }\n\n  return whenUnblocked\n    .then(() => viewer.isTrustedViewer())\n    .then(viewerTrusted => {\n      if (\n        !(\n          viewerTrusted ||\n          getMode(win).localDev ||\n          isExperimentOn(win, 'untrusted-xhr-interception')\n        )\n      ) {\n        return;\n      }\n      const messagePayload = dict({\n        'originalRequest': toStructuredCloneable(input, init),\n      });\n      return viewer\n        .sendMessageAwaitResponse('xhr', messagePayload)\n        .then(response => fromStructuredCloneable(response, init.responseType));\n    });\n}\n\n/**\n * Sets up URL based on ampCors\n * @param {!Window} win\n * @param {string} input\n * @param {!FetchInitDef} init The options of the XHR which may get\n * intercepted.\n * @return {string}\n */\nexport function setupInput(win, input, init) {\n  devAssert(typeof input == 'string', 'Only URL supported: %s', input);\n  if (init.ampCors !== false) {\n    input = getCorsUrl(win, input);\n  }\n  return input;\n}\n\n/**\n * Sets up and normalizes the FetchInitDef\n *\n * @param {?FetchInitDef=} opt_init Fetch options object.\n * @param {string=} opt_accept The HTTP Accept header value.\n * @return {!FetchInitDef}\n */\nexport function setupInit(opt_init, opt_accept) {\n  const init = opt_init || {};\n\n  // In particular, Firefox does not tolerate `null` values for\n  // `credentials`.\n  const creds = init.credentials;\n  devAssert(\n    creds === undefined || creds == 'include' || creds == 'omit',\n    'Only credentials=include|omit support: %s',\n    creds\n  );\n\n  init.method = normalizeMethod_(init.method);\n  init.headers = init.headers || dict({});\n  if (opt_accept) {\n    init.headers['Accept'] = opt_accept;\n  }\n\n  // In edge a `TypeMismatchError` is thrown when body is set to null.\n  devAssert(init.body !== null, 'fetch `body` can not be `null`');\n\n  return init;\n}\n\n/**\n *\n * Sets up AMPSpecific CORS headers.\n * @param {!Window} win\n * @param {string} input\n * @param {?FetchInitDef=} init\n * @return {!FetchInitDef}\n */\nexport function setupAMPCors(win, input, init) {\n  init = init || {};\n  // For some same origin requests, add AMP-Same-Origin: true header to allow\n  // publishers to validate that this request came from their own origin.\n  const currentOrigin = getWinOrigin(win);\n  const targetOrigin = parseUrlDeprecated(input).origin;\n  if (currentOrigin == targetOrigin) {\n    init['headers'] = init['headers'] || {};\n    init['headers']['AMP-Same-Origin'] = 'true';\n  }\n  return init;\n}\n\n/**\n * @param {?FetchInitDef=} init\n * @return {!FetchInitDef}\n */\nexport function setupJsonFetchInit(init) {\n  const fetchInit = setupInit(init, 'application/json');\n  if (fetchInit.method == 'POST' && !isFormDataWrapper(fetchInit.body)) {\n    // Assume JSON strict mode where only objects or arrays are allowed\n    // as body.\n    devAssert(\n      allowedJsonBodyTypes_.some(test => test(fetchInit.body)),\n      'body must be of type object or array. %s',\n      fetchInit.body\n    );\n\n    // Content should be 'text/plain' to avoid CORS preflight.\n    fetchInit.headers['Content-Type'] =\n      fetchInit.headers['Content-Type'] || 'text/plain;charset=utf-8';\n    const headerContentType = fetchInit.headers['Content-Type'];\n    // Cast is valid, because we checked that it is not form data above.\n    if (headerContentType === 'application/x-www-form-urlencoded') {\n      fetchInit.body = serializeQueryString(\n        /** @type {!JsonObject} */ (fetchInit.body)\n      );\n    } else {\n      fetchInit.body = JSON.stringify(\n        /** @type {!JsonObject} */ (fetchInit.body)\n      );\n    }\n  }\n  return fetchInit;\n}\n\n/**\n * Normalized method name by uppercasing.\n * @param {string|undefined} method\n * @return {string}\n * @private\n */\nfunction normalizeMethod_(method) {\n  if (method === undefined) {\n    return 'GET';\n  }\n  method = method.toUpperCase();\n  devAssert(\n    allowedMethods_.includes(method),\n    'Only one of %s is currently allowed. Got %s',\n    allowedMethods_.join(', '),\n    method\n  );\n  return method;\n}\n\n/**\n * If 415 or in the 5xx range.\n * @param {number} status\n * @return {boolean}\n */\nfunction isRetriable(status) {\n  return status == 415 || (status >= 500 && status < 600);\n}\n\n/**\n * Returns the response if successful or otherwise throws an error.\n * @param {!Response} response\n * @return {!Promise<!Response>}\n * @private Visible for testing\n */\nexport function assertSuccess(response) {\n  return new Promise(resolve => {\n    if (response.ok) {\n      return resolve(response);\n    }\n\n    const {status} = response;\n    const err = user().createError(`HTTP error ${status}`);\n    err.retriable = isRetriable(status);\n    // TODO(@jridgewell, #9448): Callers who need the response should\n    // skip processing.\n    err.response = response;\n    throw err;\n  });\n}\n\n/**\n * Returns a promise resolving to a string identity token if the element\n * contains the 'crossorigin' attribute and the amp-viewer-assistance extension\n * is present. Resolves to undefined otherwise.\n * @param {!Element} element\n * @return {!Promise<undefined>}\n */\nexport function getViewerAuthTokenIfAvailable(element) {\n  const crossOriginAttr = element.getAttribute('crossorigin');\n  if (\n    crossOriginAttr &&\n    crossOriginAttr.trim() === 'amp-viewer-auth-token-via-post'\n  ) {\n    return (\n      Services.viewerAssistanceForDocOrNull(element)\n        .then(va => {\n          userAssert(\n            va,\n            'crossorigin=\"amp-viewer-auth-token-post\" ' +\n              'requires amp-viewer-assistance extension.'\n          );\n          return va.getIdTokenPromise();\n        })\n        // If crossorigin attr is present, resolve with token or empty string.\n        .then(token => token || '')\n        .catch(() => '')\n    );\n  }\n  // If crossorigin attribute is missing, always resolve with undefined.\n  return Promise.resolve(undefined);\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ModeDef, getMode} from '../mode';\nimport {Services} from '../services';\nimport {calculateEntryPointScriptUrl} from '../service/extension-location';\nimport {dev, devAssert} from '../log';\nimport {getService, registerServiceBuilder} from '../service';\n\nconst TAG = 'web-worker';\n\n/**\n * @typedef {{method: string, resolve: !Function, reject: !Function}}\n */\nlet PendingMessageDef;\n\n/**\n * Invokes function named `method` with args `opt_args` on the web worker\n * and returns a Promise that will be resolved with the function's return value.\n *\n * If `opt_localWin` is provided, method will be executed in a scope limited\n * to other invocations with `opt_localWin`.\n *\n * Note: Currently only works in a single entry point (amp-bind.js).\n *\n * @param {!Window} win\n * @param {string} method\n * @param {!Array=} opt_args\n * @param {!Window=} opt_localWin\n * @return {!Promise}\n */\nexport function invokeWebWorker(win, method, opt_args, opt_localWin) {\n  if (!win.Worker) {\n    return Promise.reject('Worker not supported in window.');\n  }\n  registerServiceBuilder(win, 'amp-worker', AmpWorker);\n  const worker = getService(win, 'amp-worker');\n  return worker.sendMessage_(method, opt_args || [], opt_localWin);\n}\n\n/**\n * @param {!Window} win\n * @return {!AmpWorker}\n * @visibleForTesting\n */\nexport function ampWorkerForTesting(win) {\n  registerServiceBuilder(win, 'amp-worker', AmpWorker);\n  return getService(win, 'amp-worker');\n}\n\n/**\n * A Promise-based API wrapper around a single Web Worker.\n * @private\n */\nclass AmpWorker {\n  /**\n   * @param {!Window} win\n   */\n  constructor(win) {\n    /** @const @private {!Window} */\n    this.win_ = win;\n\n    /** @const @private {!../service/xhr-impl.Xhr} */\n    this.xhr_ = Services.xhrFor(win);\n\n    // Use `testLocation` for testing with iframes. @see testing/iframe.js.\n    let loc = win.location;\n    if (getMode().test && win.testLocation) {\n      loc = win.testLocation;\n    }\n    // Use RTV to make sure we fetch prod/canary/experiment correctly.\n    const useLocal = getMode().localDev || getMode().test;\n    const useRtvVersion = !useLocal;\n    const url = calculateEntryPointScriptUrl(\n      loc,\n      'ww',\n      useLocal,\n      useRtvVersion\n    );\n    dev().fine(TAG, 'Fetching web worker from', url);\n\n    /** @private {Worker} */\n    this.worker_ = null;\n\n    /** @const @private {!Promise} */\n    this.fetchPromise_ = this.xhr_\n      .fetchText(url, {\n        ampCors: false,\n        bypassInterceptorForDev: getMode().localDev,\n      })\n      .then(res => res.text())\n      .then(text => {\n        // Workaround since Worker constructor only accepts same origin URLs.\n        const blob = new win.Blob([text + '\\n//# sourceurl=' + url], {\n          type: 'text/javascript',\n        });\n        const blobUrl = win.URL.createObjectURL(blob);\n        this.worker_ = new win.Worker(blobUrl);\n        this.worker_.onmessage = this.receiveMessage_.bind(this);\n      });\n\n    /**\n     * Array of in-flight messages pending response from worker.\n     * @const @private {!Object<number, PendingMessageDef>}\n     */\n    this.messages_ = {};\n\n    /**\n     * Monotonically increasing integer that increments on each message.\n     * @private {number}\n     */\n    this.counter_ = 0;\n\n    /**\n     * Array of top-level and local windows passed into `invokeWebWorker`.\n     * Used to uniquely identify windows for scoping worker functions when\n     * a single worker is used for multiple windows (i.e. FIE).\n     * @const @private {!Array<!Window>}\n     */\n    this.windows_ = [win];\n  }\n\n  /**\n   * Sends a method invocation request to the worker and returns a Promise.\n   * @param {string} method\n   * @param {!Array} args\n   * @param {Window=} opt_localWin\n   * @return {!Promise}\n   * @private\n   * @restricted\n   */\n  sendMessage_(method, args, opt_localWin) {\n    return this.fetchPromise_.then(() => {\n      return new Promise((resolve, reject) => {\n        const id = this.counter_++;\n        this.messages_[id] = {method, resolve, reject};\n\n        const scope = this.idForWindow_(opt_localWin || this.win_);\n\n        const message = /** @type {ToWorkerMessageDef} */ ({\n          method,\n          args,\n          scope,\n          id,\n        });\n        this.worker_./*OK*/ postMessage(message);\n      });\n    });\n  }\n\n  /**\n   * Receives the result of a method invocation from the worker and resolves\n   * the Promise returned from the corresponding `sendMessage_()` call.\n   * @param {!MessageEvent} event\n   * @private\n   */\n  receiveMessage_(event) {\n    const {\n      method,\n      returnValue,\n      id,\n    } = /** @type {FromWorkerMessageDef} */ (event.data);\n\n    const message = this.messages_[id];\n    if (!message) {\n      dev().error(\n        TAG,\n        `Received unexpected message (${method}, ${id}) from worker.`\n      );\n      return;\n    }\n    devAssert(\n      method == message.method,\n      'Received mismatched method ' +\n        `(${method}, ${id}), expected ${message.method}.`\n    );\n\n    message.resolve(returnValue);\n\n    delete this.messages_[id];\n  }\n\n  /**\n   * @return {boolean}\n   * @visibleForTesting\n   */\n  hasPendingMessages() {\n    return Object.keys(this.messages_).length > 0;\n  }\n\n  /**\n   * Returns an identifier for `win`, unique for set of windows seen so far.\n   * @param {!Window} win\n   * @return {number}\n   * @private\n   */\n  idForWindow_(win) {\n    const index = this.windows_.indexOf(win);\n    if (index >= 0) {\n      return index;\n    } else {\n      return this.windows_.push(win) - 1;\n    }\n  }\n\n  /**\n   * @return {!Promise}\n   * @visibleForTesting\n   */\n  fetchPromiseForTesting() {\n    return this.fetchPromise_;\n  }\n}\n","/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n"]}