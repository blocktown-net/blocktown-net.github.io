{"version":3,"sources":["regexp/wrapper","node_modules/browser-pack/_prelude.js","amp-form.js","build/amp-form-0.1.css.js","extensions/amp-form/0.1/amp-form-textarea.js","extensions/amp-form/0.1/amp-form.js","extensions/amp-form/0.1/form-dirtiness.js","extensions/amp-form/0.1/form-events.js","extensions/amp-form/0.1/form-proxy.js","extensions/amp-form/0.1/form-submit-service.js","extensions/amp-form/0.1/form-validators.js","extensions/amp-form/0.1/form-verifiers.js","extensions/amp-form/0.1/validation-bubble.js","src/action-constants.js","src/amp-events.js","src/analytics.js","src/async-input.js","src/common-signals.js","src/config.js","src/css.js","src/dom.js","src/element-service.js","src/event-helper-listen.js","src/event-helper.js","src/experiments.js","src/form-data-wrapper.js","src/form.js","src/internal-version.js","src/log.js","src/mode-object.js","src/mode.js","src/observable.js","src/render-delaying-services.js","src/service.js","src/services.js","src/ssr-template-helper.js","src/string.js","src/style-installer.js","src/style.js","src/types.js","src/url-parse-query-string.js","src/url-try-decode-uri-component.js","src/url.js","src/utils/array.js","src/utils/function.js","src/utils/lru-cache.js","src/utils/object.js","src/utils/promise.js","src/utils/rate-limit.js","src/utils/xhr-utils.js","third_party/css-escape/css-escape.js"],"names":[],"mappings":"AAAA;ACAA;ACCA;AACA;AACA;AACA;ACJO;ADMP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEAA;AFEA;AEDA;AFGA;AEFA;AFIA;AEHA;AFKA;AEJA;AFMA;AELA;AFOA;AENA;AFQA;AEPA;AFSA;AEhCA;AFkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEtBA;AAEA;AAEA;AAEA;AAEA;AAEA;AFmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEpBE;AFsBF;AACA;AACA;AACA;AACA;AEpBI;AAEA;AFqBJ;AEpBI;AACE;AFsBN;AErBM;AACE;AACA;AACD;AFuBP;AErBM;AACE;AACA;AACA;AACD;AACF;AFuBL;AErBI;AACA;AACD;AAED;AFsBF;AACA;AACA;AACA;AEtBE;AACE;AAEA;AFuBJ;AEtBI;AAEA;AFuBJ;AEtBI;AAAY;AAAwB;AAEpC;AFyBJ;AExBI;AAEA;AFyBJ;AExBI;AAEA;AAEI;AFwBR;AEvBQ;AAIE;AACD;AFsBT;AEpBQ;AACD;AAGH;AAEI;AACE;AACD;AFmBT;AEjBQ;AAEA;AFkBR;AEjBQ;AACE;AACD;AFmBT;AEjBQ;AACD;AAGH;AACA;AAEI;AACD;AAEH;AAGI;AACE;AACD;AACF;AAGH;AAEA;AACD;AAED;AFSF;AACA;AACA;AACA;AACA;AACA;AACA;AEXI;AAAoC;AAAA;AACrC;AFeH;AACA;AACA;AEdA;AFgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AElBO;AACL;AAEI;AACE;AACE;AAMA;AACD;AACF;AACF;AAEJ;AAED;AFYA;AACA;AACA;AACA;AACA;AACA;AACA;AEZO;AACL;AFcF;AEbE;AACE;AAAe;AAAO;AAAuB;AAAO;AACrD;AACF;AAED;AFkBA;AACA;AACA;AACA;AACA;AElBA;AACE;AACE;AAIE;AACD;AFiBL;AEfI;AACD;AACF;AAED;AFgBA;AACA;AACA;AACA;AACA;AACA;AACA;AEhBA;AACE;AFkBF;AEhBE;AAC2B;AAAc;AAAO;AAArB;AAGzB;AACA;AAEA;AAGI;AAAwB;AAAO;AAChC;AAEC;AACD;AAEJ;AACF;AAED;AFeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEfA;AACE;AACE;AACD;AACF;AAED;AFgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEhBO;AACL;AFkBF;AEjBE;AAAY;AAAwB;AAIpC;AACA;AACA;AAGA;AACA;AACA;AFgBF;AEfE;AAEA;AAGI;AACA;AAAuB;AAAO;AAE9B;AAIA;AFYN;AEVM;AACE;AAGD;AACC;AAGD;AACF;AAEC;AACE;AAEA;AFMR;AELQ;AFOR;AEJQ;AAEA;AFKR;AEHQ;AACE;AFKV;AEHU;AACD;AACF;AACF;AAEJ;AAED;AFGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEHA;AACE;AAAY;AAA0B;AACtC;AAAY;AAAwB;AACpC;AAAa;AAAiC;AFWhD;AEVE;AFYF;AEVE;AAAiC;AAAS;AAC1C;AAEA;AACA;AACA;AAEA;AAIM;AACA;AFSR;AERQ;AFUR;AERQ;AAC+B;AAAO;AACvC;AAEC;AACA;AACE;AAAS;AAAO;AACjB;AAGD;AFUR;AACA;AEVQ;AFYR;AETQ;AACD;AAGD;AAGI;AAAwB;AAAO;AAChC;AAEC;AACD;AAEJ;AACK;AAAA;AACT;AFQD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG9WA;AHgXA;AG/WA;AHiXA;AGhXA;AHkXA;AGjXA;AHmXA;AG/WA;AHiXA;AGhXA;AHkXA;AGjXA;AHmXA;AG9WA;AHgXA;AG/WA;AHiXA;AGhXA;AHkXA;AGjXA;AHmXA;AGlXA;AHoXA;AGnXA;AHqXA;AGpXA;AHsXA;AG9WA;AHgXA;AG/WA;AHiXA;AGhXA;AHkXA;AGjXA;AHmXA;AGlXA;AHoXA;AGnXA;AHqXA;AGhXA;AHkXA;AGjXA;AHmXA;AGlXA;AHoXA;AG9WA;AHgXA;AG/WA;AHiXA;AGhXA;AHkXA;AGjXA;AHmXA;AGpbA;AHsbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGjYA;AACA;AAEA;AHkYA;AACA;AACA;AACA;AGjYA;AAEA;AHkYA;AGjYA;AACE;AACA;AACA;AACA;AACA;AACA;AANgB;AASlB;AHkYA;AGjYA;AACE;AACA;AACA;AAHwB;AAM1B;AHkYA;AGjYA;AAEA;AHkYA;AACA;AACA;AACA;AGjYA;AHmYA;AACA;AACA;AACA;AGnYE;AHqYF;AACA;AACA;AACA;AGnYE;AAAyB;AHsY3B;AGrYI;AACA;AACE;AACD;AACC;AACD;AHuYL;AGrYI;AAEA;AHsYJ;AGrYI;AAEA;AHsYJ;AGrYI;AAEA;AHsYJ;AGrYI;AAEA;AHsYJ;AGrYI;AAEA;AHsYJ;AGrYI;AAEA;AHsYJ;AGrYI;AAEA;AHsYJ;AGrYI;AAEA;AHsYJ;AGrYI;AAEA;AHsYJ;AGrYI;AAEA;AHsYJ;AGrYI;AAEA;AHsYJ;AGrYI;AAEA;AHsYJ;AGrYI;AAEA;AHsYJ;AACA;AACA;AACA;AGrYI;AAMA;AHkYJ;AGjYI;AAEA;AHkYJ;AGjYI;AAEA;AHkYJ;AGjYI;AAEA;AHkYJ;AGjYI;AAEA;AHkYJ;AGjYI;AAEA;AACA;AHkYJ;AGjYI;AHmYJ;AGlYI;AACE;AACD;AHoYL;AGnYI;AAEA;AHoYJ;AGnYI;AAEA;AHoYJ;AGnYI;AAAwC;AAEtC;AAMD;AAED;AH+XJ;AACA;AG/XI;AAEA;AHgYJ;AG/XI;AAEA;AHgYJ;AG/XI;AAA6C;AAAA;AAE7C;AAIA;AACA;AAEA;AH8XJ;AG7XI;AAEA;AH8XJ;AG7XI;AAEA;AH8XJ;AG7XI;AH+XJ;AG9XI;AACE;AACD;AACF;AAED;AH+XF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGjYI;AHmYJ;AGlYI;AACE;AHoYN;AGnYM;AACA;AAMD;AHgYL;AG/XI;AACD;AAED;AHgYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGhYI;AACA;AHkYJ;AGjYI;AACE;AACA;AHmYN;AGlYM;AACE;AACE;AACD;AACF;AHoYP;AGlYM;AACE;AACD;AHoYP;AGnYM;AACD;AACC;AACA;AHqYN;AGpYM;AACE;AACE;AACD;AACF;AHsYP;AGpYM;AACE;AACD;AACF;AAED;AHqYJ;AACA;AGrYI;AACE;AACA;AACE;AACA;AACA;AACA;AAAiB;AAAD;AAJH;AAFD;AAUhB;AACE;AACE;AAIA;AACD;AHqYP;AGpYM;AACD;AACF;AAED;AHqYF;AACA;AACA;AACA;AACA;AACA;AGrYI;AACD;AAED;AHsYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGvY6B;AHyY7B;AGxYI;AACE;AACD;AH0YL;AGzYI;AACE;AACE;AACD;AACF;AACC;AACD;AH2YL;AG1YI;AACD;AAED;AH2YF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG3YI;AACE;AACD;AH6YL;AG5YI;AAA+B;AAAO;AHgZ1C;AG5YI;AAA4C;AAAA;AAC5C;AAID;AAED;AH4YF;AACA;AACA;AG7Y0B;AH+Y1B;AG9YI;AACE;AHgZN;AG/YM;AACE;AACD;AACF;AAED;AAMA;AAGI;AHyYR;AGxYQ;AACD;AH0YP;AGrYI;AACE;AACE;AAA8D;AAAA;AAC5D;AAEA;AHwYV;AGvYU;AHyYV;AACA;AGvYU;AACE;AACE;AHyYd;AGxYc;AAA2B;AAAD;AACxB;AACD;AACF;AACC;AACD;AACF;AACF;AACF;AACF;AH4YL;AG1YI;AACE;AH4YN;AG3YM;AACD;AACF;AAED;AH4YF;AACA;AACA;AG5YI;AACE;AACE;AACD;AACF;AACF;AAED;AH6YF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG7YI;AACA;AACA;AH+YJ;AG7YI;AACE;AACE;AACD;AACF;AH+YL;AG9YI;AAEA;AACD;AAED;AH8YF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG9YI;AACE;AACD;AHgZL;AACA;AG/YI;AACD;AAED;AHgZF;AACA;AACA;AACA;AACA;AACA;AGhZI;AACA;AACA;AACA;AAEA;AAGA;AACE;AACA;AACD;AAED;AAGA;AACE;AACD;AAED;AACD;AAED;AH0YF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG1YI;AACE;AACA;AACA;AACD;AH4YL;AG1YI;AACE;AACD;AH4YL;AACA;AG1YI;AACD;AAED;AH2YF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG5YwB;AH8YxB;AG7YI;AACE;AACE;AACA;AAFY;AAId;AACD;AACC;AACD;AH+YL;AACA;AG7YI;AACA;AAIA;AAGA;AACA;AACA;AH0YJ;AGzYI;AACE;AACA;AH2YN;AGxYM;AACE;AACE;AACD;AAED;AHyYR;AACA;AACA;AACA;AACA;AGzYQ;AAEA;AACA;AACA;AACD;AH0YP;AGxYM;AACE;AACD;AACF;AH0YL;AACA;AGxYI;AH0YJ;AGvYI;AHyYJ;AGvYI;AACA;AACA;AACE;AHyYN;AGxYM;AAGE;AACD;AACC;AACD;AACF;AAED;AAEI;AAIE;AAAA;AACK;AAAA;AAER;AACI;AAAA;AAER;AAED;AHmYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGnYI;AHqYJ;AGpYI;AACE;AACD;AHsYL;AGrYI;AACD;AAED;AHsYF;AACA;AACA;AACA;AACA;AACA;AACA;AGtYI;AACA;AACD;AAED;AHuYF;AACA;AACA;AACA;AACA;AACA;AACA;AGvYI;AACE;AACD;AACC;AACD;AACC;AAAsB;AAA8B;AACrD;AH2YL;AG1YI;AACD;AAED;AH2YF;AACA;AACA;AACA;AACA;AACA;AACA;AG5YqB;AH8YrB;AG7YI;AACE;AACD;AH+YL;AG9YI;AACA;AAEA;AAAsD;AAAA;AAGvD;AAED;AH8YF;AACA;AACA;AACA;AACA;AACA;AACA;AG/Y0B;AHiZ1B;AGhZI;AHkZJ;AGjZI;AACE;AACD;AACC;AACA;AACU;AAAA;AACH;AAAA;AAER;AHoZL;AGnZI;AACE;AACD;AHqZL;AGpZI;AACD;AAED;AHqZF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGtZ4B;AHwZ5B;AGvZI;AHyZJ;AGvZI;AACA;AACQ;AAIF;AAAY;AAJV;AAQA;AAAA;AAOJ;AACA;AACA;AAKA;AAKA;AAKD;AAES;AAAA;AAEN;AHmYV;AGlYU;AACE;AACD;AHoYX;AGnYU;AACD;AAEN;AAED;AHmYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGnYI;AACA;AHqYJ;AGpYI;AACE;AACD;AHsYL;AGpYI;AACA;AHsYJ;AGrYI;AACE;AACD;AHuYL;AGtYI;AAAQ;AAAiB;AAAlB;AACR;AAED;AH0YF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG1YI;AAA4C;AAAA;AAC7C;AAED;AH6YF;AACA;AACA;AACA;AACA;AACA;AG9Y8B;AHgZ9B;AG/YI;AHiZJ;AG/YI;AAEA;AHgZJ;AG/YI;AACE;AAGE;AAAY;AAGf;AACF;AAED;AH6YF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG7YI;AH+YJ;AG9YI;AACE;AAGD;AH8YL;AG7YI;AACD;AAED;AH8YF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG/YqC;AHiZrC;AGhZI;AAEsB;AAAA;AAElB;AHiZR;AGhZQ;AHkZR;AG/YQ;AACE;AAII;AACA;AAFG;AAKR;AH6YT;AG5YQ;AH8YR;AG7YQ;AACD;AACJ;AAED;AH8YF;AACA;AACA;AACA;AACA;AACA;AACA;AG9YI;AACD;AAED;AH+YF;AACA;AACA;AACA;AACA;AACA;AACA;AGhZiB;AHkZjB;AGjZI;AAKA;AAA0C;AAAA;AAE1C;AAIE;AAAwB;AAE3B;AAED;AH4YF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG7Y2D;AH+Y3D;AG9YI;AACA;AAKc;AAAA;AACf;AAED;AH4YF;AACA;AACA;AACA;AACA;AACA;AACA;AG7YoC;AH+YpC;AG9YI;AAAa;AAAsC;AACnD;AACE;AHkZN;AGjZM;AACD;AACF;AAED;AHkZF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGnZoC;AHqZpC;AGpZI;AAEI;AHqZR;AGpZQ;AACE;AHsZV;AGrZU;AACD;AACF;AAEC;AACD;AAEJ;AAED;AHoZF;AACA;AACA;AACA;AACA;AACA;AACA;AGrZ6B;AHuZ7B;AGtZI;AHwZJ;AGvZI;AACE;AAAc;AAAuB;AACrC;AAAsC;AAAA;AACvC;AACC;AACD;AH6ZL;AG5ZI;AACE;AH8ZN;AG7ZM;AH+ZN;AG9ZM;AACD;AACF;AAED;AH+ZF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGhaoC;AHkapC;AGjaI;AACA;AACA;AACE;AACE;AHmaR;AGlaQ;AACD;AACF;AACF;AAED;AHmaF;AACA;AACA;AGnaI;AACA;AAMD;AAED;AH+ZF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG/ZI;AHiaJ;AGhaI;AACE;AACD;AHkaL;AGjaI;AACD;AAED;AHkaF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGlaI;AACA;AAKD;AAED;AH+ZF;AACA;AACA;AACA;AACA;AACA;AACA;AG/ZI;AAGA;AAKD;AAED;AH0ZF;AACA;AACA;AACA;AACA;AACA;AG1ZI;AACE;AACA;AACA;AH4ZN;AG3ZM;AACE;AACA;AACD;AACF;AH6ZL;AG5ZI;AACD;AAED;AH6ZF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG7ZI;AH+ZJ;AG9ZI;AACE;AACD;AHgaL;AG/ZI;AHiaJ;AGhaI;AACE;AHkaN;AG5ZM;AACE;AH8ZR;AG7ZQ;AACA;AACD;AACC;AAMD;AH0ZP;AGzZM;AH2ZN;AG1ZM;AACD;AACF;AAED;AH2ZF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG3ZI;AAGQ;AAAD;AAEP;AACD;AAED;AH0ZF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG1ZI;AACD;AAED;AH2ZF;AACA;AACA;AACA;AACA;AACA;AACA;AG3ZI;AACD;AAED;AH4ZF;AACA;AACA;AACA;AACA;AACA;AACA;AG5ZI;AACD;AAED;AH6ZF;AACA;AACA;AACA;AACA;AACA;AACA;AG7ZI;AACA;AACA;AACA;AACA;AACD;AAED;AH8ZF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG/ZwB;AHiaxB;AGhaI;AACE;AACA;AAID;AH+ZL;AG9ZI;AAA6B;AAAO;AACpC;AHkaJ;AGjaI;AACE;AACA;AACA;AACA;AHmaN;AGlaM;AACE;AAGI;AACA;AACA;AAGI;AACA;AAGE;AAAa;AACZ;AAAD;AAEF;AACD;AAEJ;AACJ;AACC;AACA;AACA;AACA;AACA;AACD;AACF;AH8ZL;AG5ZI;AACE;AACD;AH8ZL;AG5ZI;AACD;AAED;AH6ZF;AACA;AACA;AACA;AACA;AACA;AACA;AG7ZI;AAA6B;AAAO;AHiaxC;AGhaI;AACE;AACD;AHkaL;AGjaI;AHmaJ;AGlaI;AACE;AACD;AACF;AAED;AHmaF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGnaI;AACD;AAED;AHoaF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGpaI;AACD;AHsaH;AACA;AACA;AGraA;AHuaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGzaA;AACE;AACA;AAA+B;AAAA;AAC/B;AACD;AAED;AH4aA;AACA;AACA;AACA;AACA;AACA;AG5aA;AACE;AACE;AACD;AACC;AACD;AH8aH;AG5aE;AACD;AAED;AH6aA;AACA;AACA;AACA;AACA;AACA;AG7aA;AACE;AACE;AACD;AH+aH;AG9aE;AACE;AACD;AACF;AAED;AH+aA;AACA;AACA;AACA;AACA;AG/aA;AACE;AHibF;AGlb0C;AAGtC;AAGA;AACE;AAGD;AAVqC;AHyb1C;AGvbE;AAAiD;AAShD;AACF;AAED;AHibA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGjbA;AAAuD;AAAnB;AAAmB;AHsbvD;AGrbE;AACA;AACA;AACA;AACE;AACD;AHubH;AGtbE;AACA;AACA;AHwbF;AGvbE;AAIE;AACA;AHsbJ;AGpbI;AACD;AAIC;AACA;AAEA;AHkbJ;AGjbI;AACD;AHmbH;AGlbE;AHobF;AGlbE;AACE;AACA;AHobJ;AGnbI;AACE;AACD;AHqbL;AACA;AGpbI;AACE;AACD;AACF;AHsbH;AGpbE;AACD;AAED;AHqbA;AACA;AACA;AACA;AACA;AACA;AACA;AGrbO;AACL;AAAyB;AAAgB;AAC1C;AAED;AHwbA;AACA;AACA;AACA;AACA;AACA;AACA;AG1bE;AH4bF;AACA;AG1bE;AAAoB;AH6btB;AG5bI;AACA;AAAyD;AAAA;AHgc7D;AG3bI;AACE;AAAiC;AAE/B;AACE;AADkE;AAGpE;AACD;AACF;AACF;AAED;AH4bF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG9bI;AACD;AAED;AH+bF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG/bI;AACA;AACA;AACD;AAED;AHgcF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGjc2B;AHmc3B;AGlcI;AACE;AHocN;AGlcM;AHocN;AGncM;AHqcN;AGpcM;AACD;AACF;AAED;AHqcF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGrcI;AACE;AACD;AHucL;AGrcI;AACE;AHucN;AGtcM;AACE;AACD;AACF;AACF;AAED;AHucF;AACA;AACA;AACA;AACA;AACA;AACA;AGxcmC;AH0cnC;AGzcI;AACE;AACD;AACF;AH2cH;AACA;AACA;AACA;AACA;AG5cA;AACE;AACA;AACD;AH8cD;AACA;AACA;AACA;AACA;AACA;AACA;AIn3DA;AJq3DA;AIp3DA;AJs3DA;AIr3DA;AJu3DA;AIt3DA;AJw3DA;AIv3DA;AJy3DA;AIx3DA;AJ03DA;AI/4DA;AJi5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIv4DO;AAEP;AJw4DA;AACA;AIx4DA;AACE;AACA;AACA;AAH0B;AJ84D5B;AACA;AACA;AACA;AI14DE;AJ44DF;AACA;AACA;AI14DE;AACE;AACA;AAEA;AJ24DJ;AI14DI;AAEA;AJ24DJ;AI14DI;AAEA;AJ24DJ;AI14DI;AAEA;AJ24DJ;AI14DI;AAEA;AJ24DJ;AI14DI;AAEA;AJ24DJ;AI14DI;AAEA;AAGA;AACA;AJy4DJ;AIx4DI;AACD;AAED;AJy4DF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI34DI;AACA;AACD;AAED;AJ44DF;AACA;AACA;AACA;AACA;AACA;AI54DI;AACA;AACD;AAED;AJ64DF;AACA;AACA;AACA;AACA;AACA;AI74DI;AACA;AACA;AACA;AACD;AAED;AJ84DF;AACA;AACA;AACA;AACA;AACA;AI94DI;AACD;AAED;AJ+4DF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI/4DI;AJi5DJ;AI/4DI;AACE;AAEA;AAGQ;AAAD;AACJ;AAAD;AAEF;AACD;AJ+4DL;AI74DI;AACD;AAED;AJ84DF;AACA;AACA;AACA;AACA;AI94DI;AACA;AAGA;AJ84DJ;AI74DI;AAID;AAED;AJ24DF;AACA;AACA;AI34DI;AACE;AACD;AJ64DL;AI54DI;AACD;AAED;AJ64DF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI74DI;AACA;AACA;AACD;AAED;AJ84DF;AACA;AACA;AACA;AACA;AACA;AACA;AI94DI;AACA;AACD;AAED;AJ+4DF;AACA;AACA;AACA;AACA;AACA;AACA;AI/4DI;AACE;AACD;AJi5DL;AI/4DI;AAKE;AACD;AACC;AACD;AACF;AAED;AJ44DF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI54DI;AACE;AACD;AJ84DL;AIj5DsC;AAAA;AAKlC;AACD;AAED;AJ+4DF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI/4DI;AACE;AACA;AACD;AACF;AAED;AJg5DF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIh5DI;AACE;AACA;AACD;AACF;AAED;AJi5DF;AACA;AACA;AACA;AACA;AACA;AIj5DI;AACA;AACD;AJm5DH;AACA;AACA;AIl5DA;AJo5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIt5DA;AAAyC;AAAA;AAAA;AJ25DzC;AIx5DE;AACE;AACD;AJ05DH;AIx5DE;AACD;AJ05DD;AACA;AACA;AACA;AACA;AACA;AACA;AKpqEA;ALsqEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKpqEA;AACO;AACL;AACA;AAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AARwB;ALgrE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMzrEA;AN2rEA;AM1rEA;AN4rEA;AM3rEA;AN6rEA;AM5rEA;AN8rEA;AMjtEA;ANmtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AM5sEA;AN8sEA;AACA;AACA;AM5sEA;AAEA;AN6sEA;AACA;AACA;AACA;AM5sEO;AACL;AACD;AAED;AN6sEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AM7sEO;AACL;AACA;AN+sEF;AM9sEE;AACE;AACD;ANgtEH;AM/sEE;AACA;AACD;AAED;ANgtEA;AACA;AACA;AACA;AACA;AMhtEA;AACE;AACE;AACD;ANktEH;AMjtEE;AACD;AAED;ANktEA;AACA;AACA;AACA;AACA;AMltEA;AACE;ANotEF;AACA;AACA;AMltEE;AACE;AACA;AACD;ANotEH;AMltEE;AAVkC;AAYlC;AAGA;AACA;ANktEF;AMjtEE;AACA;AACE;ANmtEJ;AMltEI;AACE;AACE;AACD;ANotEP;AMntEM;AACA;AACD;ANqtEL;AMntEI;AACD;AAED;AAA6B;AAEzB;ANotEN;AMntEM;AAGE;AAEA;AAEA;AAEC;AAED;AACD;AN+sEP;AM9sEM;AACE;AACA;ANgtER;AM/sEQ;AACE;AACE;AAA2B;AAG9B;AACF;AACC;AACA;ANgtER;AM/sEQ;AACE;AACE;AAAyB;AAA2B;AACrD;AACF;ANmtET;AMltEQ;AACE;AACE;AAAyB;AAA2B;AACrD;AACF;ANstET;AMrtEQ;AACD;AAvCwB;AN+vE/B;AM9vEI;AAA0B;ANiwE9B;AMjwE8B;AAuCzB;AACF;AAED;AACD;AAED;AN2tEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AM3tEA;AACE;AACA;AAEE;AAAW;AN6tEf;AMjuEuC;AAOnC;AAGE;AAEA;AAEA;AACD;ANytEL;AMxtEI;AACA;AN0tEJ;AMztEI;AACE;AACE;AACA;AACA;AN2tER;AM1tEQ;AACE;AACA;AACA;AAH+B;AAAA;AAK/B;AN6tEV;AM5tEU;AACE;AACD;AACC;AACD;AACF;AACC;AACD;AN8tET;AM7tEQ;AACE;AACE;AACD;AAHgC;AAKpC;AACC;AACA;AACA;AACA;AACE;AACE;AN+tEZ;AM9tEY;AACE;AACD;ANguEb;AM/tEY;AACE;AACD;ANiuEb;AMhuEY;AACE;AACD;ANkuEb;AMjuEY;AACE;AACA;AACA;AAAY;AAAuB;AACnC;AACD;ANquEb;AMpuEY;AACD;AACD;AACE;AACE;AACE;AACD;AACC;AACD;AACF;ANsuEb;AMruEY;AACE;AACD;AACC;AACD;AACF;AAjCgC;AAmCpC;AACC;AACD;AACF;AACC;AACA;AACE;AACE;AACD;AACD;AACE;AACD;AANgC;AAQpC;AA9FkC;ANs0EvC;AMh0EE;AAA0B;ANm0E5B;AMn0E4B;AAyFzB;AACF;AAED;AN4uEA;AACA;AACA;AACA;AM5uEA;AACE;AACA;AAF2B;AAK7B;AN6uEA;AACA;AACA;AM5uEA;AACE;AACA;AACA;AAHyB;AAM3B;AN6uEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AM5uEA;AACE;AACE;AACA;AAFe;AAIjB;AACE;AACA;AAFW;AAIb;AACE;AACA;AAFQ;AAIV;AACE;AADY;AAGd;AACE;AACA;AAFc;AAIhB;AACE;AADU;AAGZ;AACE;AADS;AAGX;AACE;AADK;AAGP;AACE;AACA;AACA;AAHW;AAKb;AACE;AADU;AAGZ;AACE;AADU;AAGZ;AACE;AADS;AAGX;AACE;AACA;AACA;AAHQ;AAKV;AACE;AACA;AAFI;AAIN;AACE;AADM;AAGR;AACE;AADW;AAGb;AACE;AACA;AAFQ;AAIV;AACE;AADM;AAGR;AACE;AACA;AACA;AACA;AAJY;AAMd;AACE;AADQ;AAGV;AACE;AADY;AAGd;AACE;AADO;AAGT;AACE;AACA;AAFQ;AAIV;AACE;AADO;AAGT;AACE;AADW;AAvFM;ANw0ErB;AACA;AACA;AACA;AACA;AACA;AACA;AO1lFA;AP4lFA;AO5mFA;AP8mFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO1mFA;AP4mFA;AACA;AACA;AACA;AACA;AO1mFO;AP4mFP;AACA;AACA;AACA;AACA;AO7mFE;AP+mFF;AACA;AACA;AO7mFE;AACE;AACD;AAED;AP8mFF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOhnFI;AACD;AAED;APinFF;AACA;AACA;AACA;AACA;AACA;AOjnFI;AACD;APmnFH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQrqFA;ARuqFA;AQtqFA;ARwqFA;AQvqFA;ARyqFA;AQxqFA;AR0qFA;AQzqFA;AR2qFA;AQ1qFA;AR4qFA;AQ3qFA;AR6qFA;AACA;AACA;AQ7qFA;AACA;AAEA;AR8qFA;AQ7qFA;AAEA;AR8qFA;AQ7qFA;AAEA;AR8qFA;AACA;AACA;AACA;AACA;AQ7qFA;AAEA;AR8qFA;AQ7qFA;AAEA;AR8qFA;AQ7qFA;AAEA;AR8qFA;AQ7qFA;AAEA;AR8qFA;AACA;AACA;AACA;AQ7qFO;AACL;AACD;AAED;AR8qFA;AACA;AACA;AACA;AACA;AQ9qFO;AACL;AACD;AAED;AR+qFA;AACA;AQ/qFA;AACE;AACA;AACA;AACA;AAJ4B;AAO9B;ARgrFA;AACA;AACA;AACA;AACA;AACA;AACA;AQjrFE;ARmrFF;AACA;AQjrFE;AACE;AACA;AAEA;ARkrFJ;AQjrFI;AAEA;ARkrFJ;AQjrFI;AAEA;ARkrFJ;AQjrFI;AAEA;ARkrFJ;AACA;AACA;AACA;AQjrFI;AACD;AAED;ARkrFF;AACA;AACA;AACA;AACA;AACA;AACA;AQnrFE;ARqrFF;AACA;AACA;AACA;AACA;AQprFE;ARsrFF;AACA;AACA;AACA;AACA;AQrrFE;ARurFF;AACA;AACA;AQvrFI;AACD;AAED;ARwrFF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQxrFI;AACE;AACA;AACA;AAIE;AACA;AACA;AACA;AACD;AACF;ARurFL;AQtrFI;AACD;AAED;ARurFF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQvrFI;AACA;AACD;AAED;ARwrFF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQxrFI;AACA;AACD;AAED;ARyrFF;AACA;AACA;AACA;AACA;AACA;AQ1rFqC;AR4rFrC;AQ3rFI;AACE;AACE;AACD;AACF;AACF;AAED;AR4rFF;AACA;AACA;AACA;AACA;AACA;AACA;AQ5rFI;AACA;AR8rFJ;AQ7rFI;AACE;AACA;AACA;AAAkD;AAAD;AACjD;AACD;AACF;ARisFH;AACA;AACA;AQhsFA;ARksFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQ9sFE;ARgtFF;AQ9sFI;AACA;AACD;ARgtFH;AACA;AACA;AQ/sFA;ARitFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQvtFE;ARytFF;AACA;AACA;AQvtFE;AAAkB;AR0tFpB;AQztFI;AACA;AACA;AR2tFJ;AQ1tFI;AAJgB;AAKjB;AAED;AR4tFF;AACA;AACA;AACA;AACA;AQ9tFI;ARguFJ;AQ/tFI;AACE;AACE;AAAU;AAAW;AACrB;AACA;AACD;AACF;ARmuFL;AQjuFI;AACD;AAED;ARkuFF;AACA;AACA;AQluFI;AACA;AACA;AACA;AACE;AACD;ARouFL;AQnuFI;AACD;AAED;ARouFF;AACA;AACA;AQpuFI;ARsuFJ;AQruFI;AACE;AACD;ARuuFL;AQruFI;AACE;AACA;AACD;AACC;AACA;AACD;AACF;ARuuFH;AACA;AACA;AQtuFA;ARwuFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQ9uFE;ARgvFF;AACA;AACA;AQ9uFE;AAAkB;ARivFpB;AQhvFI;AAEA;ARivFJ;AQhvFI;AAIA;AR+uFJ;AACA;AACA;AACA;AACA;AQ9uFI;AAbgB;AAcjB;AAED;ARgvFF;AACA;AACA;AACA;AACA;AACA;AACA;AQlvFI;ARovFJ;AQnvFI;AACE;AACD;AACF;AAED;ARovFF;AACA;AACA;AACA;AACA;AACA;AQpvFI;AAED;AAED;ARovFF;AACA;AACA;AACA;AACA;AQpvFI;ARsvFJ;AQrvFI;AACE;AACD;AACF;AAED;ARsvFF;AACA;AACA;AACA;AACA;AACA;AACA;AQvvFwD;AAA9B;AAA8B;AR2vFxD;AQ1vFI;AACE;AACD;AR4vFL;AQ3vFI;AACA;AR6vFJ;AQ5vFI;AACE;AAGA;AACD;AR4vFL;AQ3vFI;AACD;AAED;AR4vFF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQ7vFuD;AAA9B;AAA8B;ARiwFvD;AQjwFuD;AAAA;AAInD;AACA;ARiwFJ;AQhwFI;AAKE;AACD;AR8vFL;AQ5vFI;AACD;AAED;AR6vFF;AACA;AACA;AACA;AACA;AACA;AQ7vFI;AR+vFJ;AQ9vFI;AACE;AACD;ARgwFL;AQ/vFI;AACE;AACD;ARiwFL;AQhwFI;AAEA;ARiwFJ;AQhwFI;AACE;AACA;AACD;ARkwFL;AQhwFI;AACA;AAEA;AAAyC;AAAA;AAG1C;AAED;ARgwFF;AACA;AACA;AACA;AACA;AQhwFI;ARkwFJ;AQjwFI;AACE;AACD;ARmwFL;AQlwFI;AAEA;AACA;AAEA;AAAgD;AAAA;AAGjD;AAED;ARiwFF;AACA;AACA;AACA;AACA;AACA;AQjwFI;AACD;AAED;ARkwFF;AACA;AACA;AACA;AACA;AACA;AACA;AQlwFI;AACD;AAED;ARmwFF;AACA;AACA;AACA;AACA;AQnwFI;AACA;AAGA;ARmwFJ;AQlwFI;AACE;AACD;AACF;AAED;ARmwFF;AACA;AACA;AQnwFI;AACD;AAED;ARowFF;AACA;AACA;AQpwFI;AACD;ARswFH;AACA;AACA;AQrwFA;ARuwFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQnxFE;ARqxFF;AQnxFI;AACA;ARqxFJ;AQpxFI;AACE;AACE;AACA;AAAU;AAAW;AACrB;AACD;AACF;ARwxFL;AQtxFI;AACD;AAED;ARuxFF;AACA;AACA;AQvxFI;AACD;ARyxFH;AACA;AACA;AQxxFA;AR0xFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQtyFE;ARwyFF;AQtyFI;AACA;AACA;ARwyFJ;AQvyFI;AACE;AACE;AACA;AACD;AACF;ARyyFL;AQvyFI;AACE;AAAkB;AAAW;AAC9B;AR2yFL;AQzyFI;AACD;AAED;AR0yFF;AACA;AACA;AQ1yFI;AACD;AR4yFH;AACA;AACA;AQ3yFA;AR6yFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQzzFE;AR2zFF;AQzzFI;AACD;AAED;AR0zFF;AACA;AACA;AQ1zFI;AR4zFJ;AQ3zFI;AACD;AR6zFH;AACA;AACA;AQ5zFA;AR8zFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQ10FE;AR40FF;AQ10FI;AACD;AAED;AR20FF;AACA;AACA;AQ30FI;AR60FJ;AQ50FI;AACD;AR80FH;AACA;AACA;AQ70FA;AR+0FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQj1FO;AACL;ARm1FF;AQl1FE;AACE;AACE;ARo1FN;AQn1FI;AACE;ARq1FN;AQp1FI;AACE;ARs1FN;AQr1FI;AACE;AARJ;ARg2FF;AQr1FE;AACE;AACD;ARu1FH;AQr1FE;AACD;AAED;ARs1FA;AACA;AACA;AACA;AACA;AACA;AQt1FA;AACE;AACE;AACD;ARw1FH;AQv1FE;AACD;AAED;ARw1FA;AACA;AACA;AACA;AACA;AACA;AQx1FO;AACL;AACE;AACD;AR01FH;AQz1FE;AACD;AAED;AR01FA;AACA;AACA;AACA;AACA;AACA;AACA;AQ11FA;AACE;AACA;AR41FF;AQ31FE;AACE;AACA;AACE;AACD;AACF;AR61FH;AACA;AQ51FE;AAA0C;AAAA;AAC1C;AACD;ARg2FD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASv6GA;ATy6GA;ASx6GA;AT06GA;ASz6GA;AT26GA;AS16GA;AT46GA;AACA;AACA;AS56GO;AT86GP;AS56GO;AAEP;AT66GA;AACA;AACA;AACA;AACA;AACA;AACA;AS76GA;AAEA;AT86GA;AACA;AACA;AACA;AACA;AACA;AS76GA;AAEA;AT86GA;AACA;AACA;AACA;AACA;AACA;AACA;AS76GO;AACL;AACE;AACD;AACC;AACD;AACF;AAED;AT86GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASh7GE;ATk7GF;AACA;ASh7GE;AACE;AACA;AACD;AAED;ATi7GF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASn7GI;ATq7GJ;ASp7GI;AACE;AACD;AACC;AACE;AAAiC;AAC/B;AACA;AAF+B;AAKpC;AACF;AAED;ATq7GF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASr7GI;AACE;AAAiC;AAC/B;AACA;AAF+B;AAKpC;AAED;ATs7GF;AACA;AACA;AACA;AACA;AACA;AACA;ASv7Ga;ATy7Gb;ASv7GI;AACE;ATy7GN;ASx7GM;AACE;AACD;AT07GP;ASx7GM;AACE;AACD;AACF;AT07GL;ASz7GI;AACD;AAED;AT07GF;AACA;AACA;AACA;AACA;AACA;AS37G6B;AT67G7B;AS37GI;AACE;AACE;AACD;AACF;AACF;AT67GH;AACA;AACA;AS57GA;AT87GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASz8GA;AT28GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASj9GE;ATm9GF;AACA;AACA;ASj9GE;AAAuB;ATo9GzB;ASn9GI;AAEA;ATo9GJ;ASn9GI;AAEA;ATo9GJ;ASn9GI;AAEA;ATo9GJ;ASn9GI;AAVqB;AAWtB;AAED;ATq9GF;AACA;AACA;AACA;AACA;ASx9GY;AT09GZ;ASz9GI;AAEI;AACD;AAEC;AAA6B;AAAuB;AACrD;AAGH;AAAwD;AAAA;AAGzD;AAED;ATw9GF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASz9G0B;AT29G1B;AS19GI;AACE;AT49GN;AS39GM;AAAgB;AAAA;AT+9GtB;AS99GM;AACD;ATg+GL;AS/9GI;AACD;AAED;ATg+GF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASj+GuB;ATm+GvB;ASl+GI;AAEA;AACA;ATm+GJ;ASh+GI;AACE;AACA;AAIA;AAKA;AT29GN;AS19GM;AACa;AAAO;AAKpB;AACA;ATy9GN;ASx9GM;AACE;AACA;AACD;AACF;AT09GL;AACA;ASx9GI;AAA6B;AACT;AAAA;AADS;AT89GjC;AS59GI;AAEQ;AAAe;AAAO;AAAtB;AAER;AAAO;AAAkC;AACvC;AACA;AAFuC;AAAzC;AAID;ATk+GH;AACA;AACA;ASj+GA;ATm+GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASr+GA;AAAsC;ATw+GtC;ASt+GE;AACE;AACD;ATw+GH;ASt+GE;AAAgC;AAAA;AAA6B;AAAA;AAC9D;AT4+GD;AACA;AACA;AACA;AACA;AACA;AACA;AUhvHA;AVkvHA;AUjvHA;AVmvHA;AUlvHA;AVovHA;AUtwHA;AVwwHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AUlwHA;AACA;AVowHA;AACA;AACA;AACA;AUpwHE;AVswHF;AACA;AACA;AACA;AUpwHE;AACE;AACA;AAEA;AVqwHJ;AUpwHI;AAEA;AVqwHJ;AUpwHI;AAEA;AVqwHJ;AUpwHI;AAEA;AVqwHJ;AUpwHI;AAEA;AVqwHJ;AUpwHI;AAEA;AVqwHJ;AUpwHI;AACA;AAEA;AACA;AACA;AACD;AAED;AVowHF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AUtwHI;AACD;AAED;AVuwHF;AACA;AACA;AACA;AACA;AUvwHI;AACE;AACD;AVywHL;AUvwHI;AACA;AACA;AAEA;AAEI;AACA;AAFF;AAKE;AADF;AAIH;AAED;AVowHF;AACA;AACA;AACA;AACA;AACA;AACA;AUpwHI;AACE;AACD;AVswHL;AUpwHI;AACA;AACA;AACA;AACE;AACA;AACA;AACA;AACA;AALY;AAOd;AAEI;AACA;AAFF;AAMH;AVmwHH;AACA;AACA;AUlwHA;AVowHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AUtwHA;AACE;AACA;AACA;AACA;AACD;AAED;AVuwHA;AACA;AACA;AACA;AACA;AACA;AUvwHA;AACE;AACD;AAED;AVwwHA;AACA;AACA;AACA;AACA;AACA;AUxwHA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AAF6B;AAIhC;AV0wHD;AACA;AACA;AACA;AACA;AACA;AACA;AW96HA;AXg7HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AW96HA;AXg7HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AW96HO;AAEP;AX+6HA;AACA;AW/6HO;AAEP;AXg7HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWh7HO;AACL;AACA;AAFyB;AXq7H3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYr+HA;AZu+HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYr+HA;AZu+HA;AACA;AACA;AYr+HO;AACL;AACA;AACA;AACA;AAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZuB;AZq/HzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AahgIA;AbkgIA;AalhIA;AbohIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AahhIA;AbkhIA;AACA;AACA;AACA;AACA;AACA;AahhIO;AACL;AACE;AACE;AACD;AbkhIL;AajhII;AACD;AACF;AbmhID;AACA;AACA;AACA;AACA;AACA;AACA;AczjIA;Ad2jIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AczjIA;Ad2jIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac/jIE;AdikIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AchkIA;AdkkIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcnkIO;AACL;AdqkIF;AACA;AACA;AACA;AACA;AACA;AcnkIE;AARkC;AAWpC;AdokIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcpkIO;AACL;AdskIF;AACA;AACA;AACA;AACA;AACA;AACA;AcpkIE;AdskIF;AcrkIE;AdukIF;AACA;AACA;AACA;AACA;AACA;AcrkIE;AAjB+B;AdylIjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AerqIA;AfuqIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AerqIA;AfuqIA;AACA;AACA;AerqIO;AACL;AfuqIF;AACA;AerqIE;AfuqIF;AerqIE;AfuqIF;AACA;AerqIE;AfuqIF;AerqIE;AfuqIF;AACA;AACA;AerqIE;AfuqIF;AerqIE;AfuqIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AerqIE;AfuqIF;AerqIE;AfuqIF;AACA;AACA;AACA;AerqIE;AfuqIF;AerqIE;AfuqIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AerqIE;AfuqIF;AerqIE;AfuqIF;AACA;AerqIE;AArD2B;Af6tI7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBxvIA;AhB0vIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBxvIA;AhB0vIA;AACA;AACA;AACA;AACA;AACA;AgBxvIA;AAEA;AAKA;AAKA;AhBivIA;AgBhvIO;AACL;AACA;AACA;AACA;AhBkvIF;AgBjvIE;AhBmvIF;AACA;AgBjvIE;AAEA;AACA;AAEA;AhBivIF;AgBhvIE;AhBkvIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBhvIE;AAvBkB;AhB0wIpB;AgB7uIO;AACL;AADoB;AhBivItB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiB9yIA;AjBgzIA;AiB/yIA;AjBizIA;AiBl0IA;AjBo0IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiB/zIA;AjBi0IA;AACA;AACA;AACA;AACA;AiB/zIO;AACL;AACD;AAED;AjBg0IA;AACA;AACA;AACA;AiBh0IA;AAEA;AjBi0IA;AACA;AACA;AACA;AiBh0IO;AACL;AACD;AAED;AjBi0IA;AACA;AACA;AACA;AACA;AACA;AiBj0IO;AACL;AACE;AACD;AjBm0IH;AiBj0IE;AACD;AAED;AjBk0IA;AACA;AACA;AACA;AACA;AACA;AiBl0IA;AACE;AACE;AACA;AACA;AACA;AAEA;AjBm0IJ;AiBl0II;AAAmB;AAAO;AAC3B;AACC;AACD;AACF;AAED;AjBq0IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBr0IO;AACL;AACD;AAED;AjBs0IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBt0IO;AACL;AACD;AAED;AjBu0IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBv0IO;AACL;AjBy0IF;AiBv0IE;AACA;AACD;AjBy0ID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB3+IA;AlB6+IA;AkB5+IA;AlB8+IA;AkBz+IA;AlB2+IA;AkB1+IA;AlB4+IA;AkB3+IA;AlB6+IA;AkB5+IA;AlB8+IA;AkBvgJA;AlBygJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB3/IA;AACE;AACA;AACA;AACA;AACA;AACA;AANwB;AAQ1B;AAEA;AlB4/IA;AkB3/IO;AAEP;AlB4/IA;AACA;AkB5/IO;AAEP;AlB6/IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB9/IO;AACL;AACE;AACA;AACD;AACD;AlBggJF;AACA;AkBhgJE;AlBkgJF;AkBjgJE;AACE;AACA;AACE;AACE;AACA;AACD;AACF;AACD;AAA0B;AAAD;AAC1B;AACC;AACA;AACE;AACE;AACA;AACD;AACF;AAAE;AAAmB;AACvB;AACF;AAED;AlBsgJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBtgJO;AACL;AACE;AACD;AACF;AAED;AlBugJA;AACA;AACA;AACA;AACA;AACA;AkBvgJO;AACL;AAAkC;AAAA;AACnC;AAED;AlB0gJA;AACA;AACA;AACA;AACA;AACA;AkB1gJO;AACL;AAA0B;AAAA;AAC3B;AAED;AlB6gJA;AACA;AACA;AACA;AACA;AkB7gJO;AACL;AACE;AACD;AACF;AAED;AlB8gJA;AACA;AACA;AACA;AACA;AkB9gJO;AACL;AACE;AACD;AACF;AAED;AlB+gJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB/gJO;AACL;AlBihJF;AkBhhJE;AACE;AACD;AlBkhJH;AkBjhJE;AACD;AAED;AlBkhJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBlhJO;AACL;AACA;AACD;AAED;AlBmhJA;AACA;AACA;AACA;AACA;AACA;AACA;AkBnhJO;AACL;AACE;AACD;AlBqhJH;AkBphJE;AACD;AAED;AlBqhJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBrhJO;AACL;AACA;AACD;AAED;AlBshJA;AACA;AACA;AACA;AACA;AACA;AACA;AkBthJO;AACL;AlBwhJF;AkBvhJE;AACE;AACD;AlByhJH;AACA;AkBvhJE;AlByhJF;AkBxhJE;AACE;AlB0hJJ;AkBzhJI;AACE;AACD;AACC;AACD;AACF;AlB2hJH;AkB1hJE;AACD;AAED;AlB2hJA;AACA;AACA;AACA;AACA;AACA;AkB3hJO;AACL;AACE;AACA;AACD;AlB6hJH;AkB5hJE;AlB8hJF;AkB5hJE;AlB8hJF;AkB7hJE;AACD;AAED;AlB8hJA;AACA;AACA;AACA;AACA;AACA;AkB9hJO;AACL;AACA;AACE;AACD;AAED;AlB+hJF;AACA;AkB/hJE;AACE;AACD;AlBiiJH;AkBhiJE;AACoB;AAAwB;AAG7C;AAED;AlBgiJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBhiJO;AACL;AACE;AACE;AACD;AACF;AlBkiJH;AkBjiJE;AACD;AAED;AlBkiJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBliJO;AACL;AACE;AACE;AACD;AACF;AlBoiJH;AkBniJE;AACD;AAED;AlBoiJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBpiJO;AACL;AACE;AACD;AlBsiJH;AkBpiJE;AACE;AACD;AACF;AAED;AlBqiJA;AACA;AACA;AACA;AACA;AACA;AACA;AkBriJO;AACL;AlBuiJF;AkBtiJE;AAKE;AACE;AACD;AACF;AlBoiJH;AkBniJE;AACD;AAED;AlBoiJA;AACA;AACA;AACA;AACA;AACA;AACA;AkBpiJO;AACL;AACA;AACA;AACE;AACD;AACF;AAED;AlBqiJA;AACA;AACA;AACA;AACA;AACA;AACA;AkBriJO;AACL;AAKE;AACE;AACD;AACF;AlBmiJH;AkBliJE;AACD;AAED;AlBmiJA;AACA;AACA;AACA;AACA;AACA;AACA;AkBniJO;AACL;AlBqiJF;AkBpiJE;AAKE;AACE;AACD;AACF;AlBkiJH;AkBjiJE;AACD;AAED;AlBkiJA;AACA;AACA;AACA;AACA;AACA;AACA;AkBliJO;AACL;AAKE;AACE;AACD;AACF;AlBgiJH;AkB/hJE;AACD;AAED;AlBgiJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBhiJO;AACL;AlBkiJF;AkBjiJE;AACE;AACE;AACD;AACF;AlBmiJH;AkBliJE;AACD;AAED;AlBmiJA;AACA;AACA;AACA;AACA;AACA;AACA;AkBniJO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AlBuiJA;AACA;AACA;AACA;AACA;AACA;AACA;AkBviJO;AACL;AACA;AACE;AACD;AACF;AAED;AlBwiJA;AACA;AACA;AACA;AACA;AACA;AACA;AkBxiJO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AlB4iJA;AACA;AACA;AACA;AACA;AACA;AACA;AkB5iJO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AlBgjJA;AACA;AACA;AACA;AACA;AACA;AACA;AkBhjJO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AlBojJA;AACA;AACA;AACA;AACA;AACA;AACA;AkBpjJO;AACL;AlBsjJF;AkBhjJE;AACE;AACD;AlBkjJH;AkBjjJE;AACD;AAED;AlBkjJA;AACA;AACA;AACA;AACA;AACA;AACA;AkBljJO;AACL;AACA;AAAe;AAAO;AACvB;AAED;AlBqjJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBrjJA;AACE;AACA;AACA;AACA;AAAsB;AAAO;AAC7B;AACA;AACD;AAED;AlBwjJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBxjJO;AACL;AACE;AAAY;AAAO;AACpB;AlB4jJH;AACA;AkB1jJE;AACA;AACD;AAED;AlB2jJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB3jJO;AACL;AACE;AAAY;AAAO;AAGpB;AlB6jJH;AACA;AkB3jJE;AACD;AAED;AlB4jJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB5jJO;AAKL;AAA6D;AAAA;AlB4jJ/D;AkB7jJE;AAGA;AACA;AlB6jJF;AkB5jJE;AACE;AlB8jJJ;AkB7jJI;AACE;AlB+jJN;AkB9jJM;AACD;AACF;AlBgkJH;AkB/jJE;AACD;AAED;AlBgkJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBhkJO;AACL;AlBkkJF;AkBjkJE;AACE;AACE;AACD;AACF;AlBmkJH;AkB/jJE;AACD;AAED;AlBgkJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBhkJO;AACL;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAED;AlBikJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBjkJO;AAAqC;AlBokJ5C;AkBlkJE;AACE;AACD;AACF;AAED;AlBmkJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBnkJO;AACL;AACA;AACA;AACA;AlBqkJF;AkBpkJE;AACE;AACD;AACC;AACD;AlBskJH;AACA;AkBpkJE;AACE;AACD;AlBskJH;AkBrkJE;AACD;AAED;AlBskJA;AACA;AACA;AACA;AACA;AACA;AkBtkJO;AACL;AAKD;AAED;AlBmkJA;AACA;AACA;AACA;AACA;AACA;AkBnkJO;AACL;AAID;AAED;AlBikJA;AACA;AACA;AACA;AACA;AACA;AkBjkJO;AACL;AAIA;AACD;AAED;AlB+jJA;AACA;AACA;AACA;AACA;AACA;AkB/jJO;AACL;AACE;AACD;AlBikJH;AkBhkJE;AACD;AAED;AlBikJA;AACA;AACA;AACA;AACA;AkBjkJA;AACE;AACD;AAED;AlBkkJA;AACA;AACA;AACA;AACA;AACA;AkBlkJO;AACL;AACE;AAAQ;AAAO;AAChB;AAEA;AACF;AAED;AlBokJA;AACA;AACA;AACA;AACA;AACA;AkBpkJO;AACL;AACD;AAED;AlBqkJA;AACA;AACA;AACA;AACA;AACA;AkBrkJO;AACL;AAEA;AlBskJF;AkBrkJE;AAGE;AAEH;AAED;AlBmkJA;AACA;AACA;AACA;AACA;AACA;AACA;AkBnkJO;AACL;AlBqkJF;AkBpkJE;AACE;AACA;AACD;AAED;AlBqkJF;AACA;AkBrkJE;AACE;AACA;AACA;AACD;AlBukJH;AkBrkJE;AACD;AAED;AlBskJA;AACA;AACA;AACA;AACA;AACA;AkBtkJO;AACL;AlBwkJF;AkBjkJE;AACE;AACD;AACF;AAED;AlBkkJA;AACA;AACA;AACA;AACA;AACA;AkBlkJO;AACL;AlBokJF;AkB7jJE;AACE;AACA;AACD;AlB+jJH;AkB1kJwC;AlB4kJxC;AkB/jJE;AACE;AACD;AlBikJH;AkBhkJE;AlBkkJF;AkB3jJE;AACE;AACD;AACF;AAED;AlB4jJA;AACA;AACA;AACA;AACA;AACA;AACA;AkB5jJO;AAAsC;AlB+jJ7C;AkB7jJE;AACE;AACD;AlB+jJH;AkBnkJ6C;AlBqkJ7C;AkB/jJE;AACE;AACD;AlBikJH;AkBhkJE;AAKA;AACD;AAED;AlB6jJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB7jJO;AACL;AACD;AAED;AlB8jJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB9jJO;AACL;AACE;AACD;AlBgkJH;AkB9jJE;AACA;AlBgkJF;AkB5jJE;AACE;AACD;AlB8jJH;AACA;AkB5jJE;AACD;AAED;AlB6jJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB7jJO;AACL;AACA;AlB+jJF;AkB7jJE;AACE;AACE;AACD;AACC;AACD;AACF;AlB+jJH;AkB7jJE;AACD;AAED;AlB8jJA;AACA;AACA;AACA;AACA;AkB9jJO;AAAwC;AAE7C;AAAwB;AAAO;AAC/B;AAAsC;AAAO;AAC7C;AACD;AlBokJD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB59KA;AnB89KA;AmB79KA;AnB+9KA;AmBr9KA;AnBu9KA;AmBt9KA;AnBw9KA;AACA;AACA;AACA;AACA;AmBx/KA;AnB0/KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB1+KA;AnB4+KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB1+KO;AACL;AACS;AAAA;AAEV;AAED;AnB2+KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB3+KO;AACL;AnB6+KF;AmB5+KE;AACE;AAAO;AAAkC;AAAzC;AACD;AnBi/KH;AmBh/KE;AACD;AAED;AnBi/KA;AACA;AACA;AACA;AACA;AACA;AmBj/KA;AACE;AACA;AACE;AACD;AnBm/KH;AmBl/KE;AACD;AAED;AnBm/KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBn/KO;AACL;AAKc;AAAA;AACf;AAED;AnBi/KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBj/KO;AAML;AnB8+KF;AmB7+KE;AACE;AAAO;AAAkC;AAAzC;AACD;AnBk/KH;AmBj/KE;AACA;AAEQ;AAAA;AAIJ;AACA;AACA;AACE;AACD;AACC;AACD;AnBg/KP;AmB/+KM;AACD;AACJ;AAED;AnBg/KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBh/KO;AAKL;AnB8+KF;AmB7+KE;AACE;AAAO;AAAkC;AAAzC;AACD;AnBk/KH;AmBj/KE;AACA;AnBm/KF;AmBj/KE;AACE;AACD;AACC;AACA;AACD;AACF;AAED;AnBk/KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBl/KA;AACE;AAAO;AAAwB;AAA/B;AAUD;AAED;AnB6+KA;AACA;AACA;AACA;AACA;AACA;AmB7+KO;AACL;AACA;AACE;AACD;AnB++KH;AmB9+KE;AAEA;AnB++KF;AmB9+KE;AnBg/KF;AmB7+KE;AACE;AACA;AAGA;AACD;AnB6+KH;AmB5+KE;AACD;AAED;AnB6+KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB7+KO;AACL;AACE;AACD;AACF;AAED;AnB8+KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB9+KA;AACE;AACD;AAED;AnB++KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB/+KA;AACE;AnBi/KF;AACA;AACA;AACA;AACA;AACA;AmB9+KE;AACA;AACA;AACE;AACD;AnBg/KH;AmB9+KE;AACA;AAAO;AAAkC;AAAzC;AAID;AAED;AnB++KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB/+KA;AACE;AAEQ;AAAA;AAEJ;AACA;AACA;AACE;AACD;AACC;AACD;AnBg/KP;AmB/+KM;AACD;AACJ;AnBi/KD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBvyLA;ApByyLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBvyLA;ApByyLA;AACA;AACA;AACA;AoBvyLA;AAEA;ApBwyLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBvyLO;AAML;AACA;AACA;ApBoyLF;AACA;AACA;AoBnyLE;ApBqyLF;AoBnyLE;AACE;AACE;AACD;AACC;AACA;ApBqyLN;AoBpyLM;AACD;AACF;ApBsyLH;AoBryLE;AACA;ApBuyLF;AoBtyLE;AACE;AACD;ApBwyLH;AoBvyLE;AAKA;AACE;AACE;AAKD;ApBiyLL;AACA;AoBhyLI;AACA;AACA;AACD;AACF;AAED;ApBiyLA;AACA;AACA;AACA;AACA;AACA;AACA;AoBjyLO;AACL;AACA;AACE;AACD;ApBmyLH;AoBjyLE;ApBmyLF;AoBlyLE;AACE;AACA;AACE;AACE;AACD;ApBoyLP;AoBvyLoB;AAKhB;AACA;AACD;AAEA;ApBoyLH;AoBnyLE;AACD;AAED;ApBoyLA;AACA;AACA;AACA;AoBpyLO;AACL;AACD;ApBsyLD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBz5LA;ArB25LA;AqB15LA;ArB45LA;AqB35LA;ArB65LA;AqB/6LA;ArBi7LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB36LA;AACA;AAEA;ArB46LA;AqB36LO;AAEP;ArB46LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB76LO;AACL;AAAkB;AAAiC;AAAC;AAAD;AACnD;AAEA;ArBk7LF;AqBj7LE;AACE;AACD;AACC;AACA;AACA;AAMA;AACD;AACF;AAED;ArB66LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB76LO;AACL;AAMD;AAED;ArBy6LA;AACA;AACA;AACA;AACA;AACA;AqBz6LO;AACL;AAAO;AAA6C;AAApD;AACD;AAED;ArB66LA;AACA;AACA;AACA;AACA;AACA;AqB76LO;AACL;AAAO;AAA6C;AAApD;AACD;AAED;ArBi7LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBj7LO;AACL;AACA;AAII;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAGH;AACD;AAED;ArB66LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB76LO;AAML;AACA;AACE;AACD;AACD;ArB06LF;AqBz6LE;AACE;AACD;ArB26LH;AqB16LE;AACD;AAED;ArB26LA;AACA;AACA;AACA;AACA;AACA;AqB36LO;AACL;AAKE;AACC;AAEJ;AAED;ArBu6LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBv6LO;AACL;AACA;ArBy6LF;AqBx6LE;AACE;AACD;ArB06LH;AqBz6LE;ArB26LF;AqB16LE;AAIE;AACD;ArBy6LH;AqBx6LE;AACE;AACA;AACA;AACE;AACA;AACA;AACE;AADgE;AAGnE;AACC;AACD;ArB06LL;AACA;AqBz6LI;AACE;AACD;ArB26LL;AqB16LI;AAEA;AACA;ArB26LJ;AqB16LI;AACE;AAEO;AAAA;ArB46Lb;AqB16LM;AACE;AACD;AACF;ArB46LL;AqB36LI;AACD;AAED;AAEI;AACE;AACD;ArB26LP;AqB16LM;AACD;AAEC;AACE;AACD;ArB26LP;AqB16LM;AACD;AAEJ;AAED;ArB06LA;AACA;AACA;AACA;AACA;AACA;AqB16LA;AACE;AACA;AACA;AACA;AACE;AAED;AAGD;ArBy6LF;AACA;AqBz6LE;ArB26LF;AqB16LE;AACE;AACD;ArB46LH;AqB36LE;AACD;AAED;ArB46LA;AACA;AACA;AACA;AACA;AACA;AqB56LA;AACE;AACD;AAED;ArB66LA;AACA;AACA;AACA;AACA;AACA;AqB76LO;AACL;AACD;ArB+6LD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBtrMA;AtBwrMA;AsBvrMA;AtByrMA;AsBxrMA;AtB0rMA;AsBzrMA;AtB2rMA;AsBrtMA;AtButMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBrtMA;AtButMA;AACA;AACA;AACA;AACA;AACA;AsBhtMA;AACA;AAEA;AtBitMA;AsBhtMA;AAEA;AtBitMA;AsBhtMA;AAEA;AtBitMA;AACA;AACA;AACA;AACA;AACA;AsBhtMO;AAEP;AtBitMA;AACA;AACA;AACA;AACA;AACA;AACA;AsBltMO;AACL;AACD;AAED;AtBmtMA;AACA;AACA;AACA;AACA;AACA;AsBntMO;AACL;AAGD;AAED;AtBktMA;AACA;AACA;AACA;AACA;AACA;AACA;AsBltMO;AACL;AACA;AACD;AAED;AtBmtMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBntMO;AAML;AAAwC;AAAO;AAC/C;AtBktMF;AsBjtME;AACE;AACA;AtBmtMJ;AsBjtMI;AACE;AACA;AACA;AtBmtMN;AsBjtMM;AACE;AAOD;AACF;AACF;AtB6sMH;AsB5sME;AACD;AAED;AtB6sMA;AACA;AACA;AACA;AACA;AACA;AACA;AsB7sMO;AACL;AACE;AACD;AtB+sMH;AsB9sME;AACA;AtBgtMF;AsB7sME;AACE;AACE;AtB+sMN;AsB9sMM;AACE;AACD;AACF;AACF;AtBgtMH;AACA;AsB/sME;AAKE;AACA;AtB6sMJ;AsB1sMI;AACE;AtB4sMN;AsB3sMM;AACE;AACE;AACD;AACF;AACF;AACF;AtB6sMH;AsB3sME;AtB6sMF;AsB3sME;AAKE;AACA;AACA;AtBysMJ;AsBxsMI;AACE;AtB0sMN;AsBzsMM;AACE;AACD;AtB2sMP;AsB1sMM;AACE;AACD;AACF;AACF;AtB4sMH;AsB3sME;AACD;AAED;AtB4sMA;AACA;AACA;AACA;AACA;AACA;AACA;AsB5sMO;AACL;AACD;AAED;AtB6sMA;AACA;AACA;AACA;AACA;AACA;AsB7sMA;AACE;AtB+sMF;AsB9sME;AACE;AACE;AACD;AACF;AACC;AACD;AtBgtMH;AsB/sME;AAEA;AtBgtMF;AsB/sME;AACE;AACE;AACD;AtBitML;AsBhtMI;AACE;AACD;AACC;AACD;AACF;AtBktMH;AsBjtME;AACD;AAED;AtBktMA;AACA;AACA;AACA;AACA;AACA;AsBltMA;AACE;AtBotMF;AsBntME;AACE;AACD;AtBqtMH;AsBptME;AACE;AACE;AACD;AACF;AACC;AACD;AACF;AAED;AtBqtMA;AACA;AACA;AACA;AACA;AACA;AACA;AsBrtMO;AACL;AACD;AAED;AtBstMA;AACA;AACA;AACA;AACA;AACA;AsBttMO;AACL;AACA;AACD;AAED;AtButMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBvtMA;AACE;AACA;AACD;AAED;AtBwtMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBxtMO;AACL;AADsC;AAIxC;AtBytMA;AACA;AACA;AACA;AACA;AACA;AACA;AsB1tMA;AACE;AACA;AACD;AAED;AtB2tMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB3tMO;AACL;AACA;AtB6tMF;AsB5tME;AACE;AACA;AACA;AACE;AACD;AtB8tML;AsB7tMI;AACE;AAEA;AACD;AtB8tML;AsB5tMI;AAIE;AACA;AACD;AAGD;AACA;AtBytMJ;AACA;AsBztMI;AAEsB;AAAO;AAC3B;AAEA;AAGA;AAED;AACF;AtButMH;AsBttME;AACD;AAED;AtButMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBvtMO;AACL;AAGD;AAED;AtBstMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBttMO;AACL;AACA;AACA;AACD;AtBwtMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBllNA;AvBolNA;AuBnlNA;AvBqlNA;AuBplNA;AvBslNA;AuBrlNA;AvBulNA;AACA;AACA;AuBvlNA;AvBylNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBvlNO;AACL;AvBylNF;AuBvlNE;AACE;AACD;AACC;AACD;AACC;AACD;AACF;AAED;AvBwlNA;AACA;AACA;AACA;AACA;AACA;AuBxlNO;AACL;AACA;AACD;AAED;AvBylNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB3lNE;AACA;AAAkC;AAAtB;AAAsB;AvBgmNpC;AuB/lNI;AACA;AACD;AAED;AvBgmNF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBlmNI;AACA;AACA;AACA;AACA;AACD;AAED;AvBmmNF;AACA;AACA;AuBnmNI;AACD;AAED;AvBomNF;AACA;AACA;AuBrmNY;AvBumNZ;AuBtmNI;AACA;AACE;AACA;AAAoB;AAAA;AACrB;AAGD;AvBwmNJ;AuBvmNI;AACA;AAAO;AAA0C;AAC/C;AACE;AACK;AAAkC;AAAnC;AACC;AAAkB;AAAnB;AACL;AAL8C;AAAjD;AAOD;AAED;AvB+mNF;AACA;AACA;AuBhnNgB;AvBknNhB;AuBjnNI;AAEA;AACE;AACA;AAAoB;AAAA;AACrB;AAED;AACD;AvBmnNH;AACA;AACA;AuBlnNA;AvBonNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBxnNE;AACA;AACE;AACA;AAEA;AACD;AAED;AvBwnNF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB1nNI;AACA;AACA;AACE;AACD;AvB4nNL;AuB1nNI;AvB4nNJ;AuB3nNI;AACE;AACD;AACF;AAED;AvB4nNF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB5nNI;AACD;AAED;AvB6nNF;AACA;AACA;AuB7nNI;AACD;AAED;AvB8nNF;AACA;AACA;AuB9nNI;AACD;AAED;AvB+nNF;AACA;AACA;AuB/nNI;AACD;AvBioNH;AACA;AACA;AuBhoNA;AvBkoNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBtoNE;AACA;AAAsB;AvByoNxB;AuBxoNI;AvB0oNJ;AuBxoNI;AACE;AACE;AACE;AvB0oNV;AuBzoNU;AACD;AACF;AACF;AvB2oNL;AuBrpNwB;AAWrB;AAED;AvB4oNF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB9oNI;AACA;AACE;AACD;AACC;AACD;AACF;AvBgpNH;AACA;AACA;AuB/oNA;AvBipNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBnpNE;AvBqpNF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBnpNE;AAEA;AvBopNF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBrpNE;AvBupNF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBtpNE;AvBwpNF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBvpNE;AvBypNF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB1pNA;AvB4pNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB5pNA;AACE;AACD;AvB8pND;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBp9NA;AxBs9NA;AwBt+NA;AxBw+NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBp+NA;AACA;AAEA;AxBq+NA;AACA;AACA;AACA;AwBp+NO;AACL;AACD;AAED;AxBq+NA;AACA;AACA;AACA;AACA;AwBr+NO;AACL;AACD;AAED;AxBs+NA;AACA;AACA;AACA;AACA;AACA;AACA;AwBt+NO;AAA+B;AAEpC;AAAa;AAA4B;AxB0+N3C;AwBx+NE;AxB0+NF;AwBx+NE;AACA;AxB0+NF;AwBj/NsC;AAUlC;AAVkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AxB2/NtC;AwB/+NI;AAOE;AACD;AxB2+NL;AwBz+NI;AACE;AACD;AxB2+NL;AwBz+NI;AACE;AACE;AACE;AACD;AACF;AACD;AACD;AxB2+NL;AwB1+NI;AAlCkC;AxB+gOtC;AwBtgOE;AAA0C;AxBygO5C;AwBzgO4C;AA0BzC;AxBk/NH;AwBh/NE;AxBk/NF;AwBj/NE;AAAuC;AxBo/NzC;AwBl/NI;AACE;AACD;AxBo/NL;AwBn/NI;AACD;AAGD;AACA;AACA;AACA;AACA;AxBm/NF;AACA;AwBn/NE;AACE;AACE;AACD;AACF;AAED;AACD;AAED;AxBm/NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBn/NO;AAAmC;AAAA;AAAA;AAIxC;AxBq/NF;AwBn/NE;AACE;AxBq/NJ;AwBn/NI;AACE;AACD;AxBq/NL;AwBn/NI;AACE;AACD;AxBq/NL;AwBn/NI;AACE;AACD;AACF;AxBq/NH;AwBp/NE;AACD;AAED;AxBq/NA;AACA;AACA;AACA;AACA;AACA;AwBr/NA;AAAiC;AAAA;AAE/B;AACD;AAED;AxBu/NA;AACA;AACA;AACA;AACA;AACA;AwBv/NO;AACL;AACE;AACD;AxBy/NH;AwBv/NE;AxBy/NF;AwBx/NE;AACE;AACE;AACD;AACF;AxB0/NH;AwBz/NE;AACD;AAED;AxB0/NA;AACA;AACA;AACA;AACA;AACA;AwB1/NO;AACL;AACE;AACA;AAAA;AxB6/NJ;AwB3/NM;AACE;AACE;AACD;AACF;AxB6/NP;AwB5/NM;AxB8/NN;AwB7/NI;AACA;AACE;AxB+/NN;AwB9/NI;AACE;AAdJ;AxB+gOF;AwB//NE;AACD;AAED;AxBggOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBhgOO;AACL;AACE;AACE;AACE;AACD;AACC;AACD;AxBkgOP;AwBjgOI;AACE;AxBmgON;AwBlgOI;AACE;AACA;AxBogON;AwBngOI;AACE;AAbJ;AAiBD;AxBmgOD;AACA;AACA;AACA;AACA;AACA;AACA;AyBjuOA;AzBmuOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBjuOA;AzBmuOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBjuOO;AACL;AACD;AzBmuOD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BlwOA;A1BowOA;A0BnwOA;A1BqwOA;A0BpwOA;A1BswOA;A0BrwOA;A1BuwOA;A0BtwOA;A1BwwOA;A0BvwOA;A1BywOA;A0B9xOA;A1BgyOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BtxOA;AAEA;A1BuxOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BvxOO;AAEP;A1BwxOA;AACA;AACA;AACA;AACA;AACA;A0BxxOO;AAEP;A1ByxOA;AACA;AACA;AACA;AACA;AACA;A0B1xOO;AACL;AACD;AAED;A1B2xOA;AACA;AACA;AACA;AACA;A0B3xOO;AACL;AACD;AAED;A1B4xOA;AACA;AACA;AACA;AACA;A0B5xOO;AACL;AACA;AACA;AACA;AACA;AALsB;AAQxB;A1B6xOA;AACA;AACA;AACA;AACA;AACA;AACA;A0B9xOO;AACL;AACD;AAED;A1B+xOA;AACA;AACA;AACA;AACA;A0B/xOA;AAEA;A1BgyOA;AACA;AACA;A0B/xOO;AACL;AACD;AAED;A1BgyOA;AACA;AACA;AACA;AACA;AACA;AACA;A0BhyOA;AAAsB;AAAA;AAEtB;A1BmyOA;AACA;AACA;AACA;AACA;AACA;AACA;A0BnyOA;AAA2B;AAEvB;AAAA;AAFuB;AAM3B;A1BoyOA;AACA;AACA;AACA;AACA;AACA;A0BpyOA;AAAuC;AAAA;AAGvC;A1BsyOA;AACA;AACA;AACA;AACA;A0BtyOA;AAAwC;AAAA;AAGxC;A1BwyOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B1yOE;A1B4yOF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B1yOE;AAA6C;A1B6yO/C;A0B7yO+C;AAAjB;AAAiB;A1BizO/C;A0BhzOI;A1BkzOJ;AACA;AACA;AACA;A0BhzOI;AAEA;A1BizOJ;A0BhzOI;AAEA;A1BizOJ;A0BhzOI;AAEA;A1BizOJ;A0BhzOI;AAEA;A1BizOJ;A0BhzOI;AAEA;AACE;AAEgB;AAAA;AAEZ;AACE;AAAiB;AAA4B;AAC9C;AACF;AACJ;AACF;AAED;A1BizOF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BnzOI;AACD;AAED;A1BozOF;AACA;AACA;AACA;AACA;AACA;A0BpzOI;AACA;AACE;AACD;A1BszOL;AACA;A0BpzOI;AACE;AACD;A1BszOL;AACA;A0BpzOI;AACE;AACD;A1BszOL;AACA;A0BpzOI;AACE;AACD;A1BszOL;AACA;A0BpzOI;AACD;AAED;A1BqzOF;AACA;AACA;AACA;AACA;AACA;AACA;A0BrzOI;AACE;A1BuzON;A0BtzOM;AACE;AACD;AACC;AACD;AACC;AACD;A1BwzOP;A0BvzOM;A1ByzON;A0BvzOM;A1ByzON;A0BxzOM;AACE;AACA;AACD;AACC;AACD;A1B0zOP;A0BzzOM;AACD;AACF;AAED;A1B0zOF;AACA;AACA;AACA;AACA;AACA;A0B1zOI;AACD;AAED;A1B2zOF;AACA;AACA;AACA;AACA;AACA;AACA;A0B3zOI;AACE;AACD;AACF;AAED;A1B4zOF;AACA;AACA;AACA;AACA;AACA;AACA;A0B5zOI;AACE;AACD;AACF;AAED;A1B6zOF;AACA;AACA;AACA;AACA;AACA;AACA;A0B7zOI;AACE;AACD;AACF;AAED;A1B8zOF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B9zOI;AACE;AACD;AACC;AAIA;AACA;AACD;AACF;AAED;A1B4zOF;AACA;AACA;AACA;AACA;AACA;AACA;A0B5zOI;A1B8zOJ;A0B7zOI;AACE;A1B+zON;A0B7zOM;AACD;AACF;AAED;A1B8zOF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B9zOI;A1Bg0OJ;A0B/zOI;AACE;A1Bi0ON;A0B/zOM;AACD;AACF;AAED;A1Bg0OF;AACA;AACA;AACA;AACA;AACA;AACA;A0Bh0OI;AACA;AACA;AACD;AAED;A1Bi0OF;AACA;AACA;AACA;AACA;AACA;AACA;A0Bj0OI;AACA;AACA;AACA;AACD;AAED;A1Bk0OF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Bl0OI;A1Bo0OJ;A0Bn0OI;AACE;AAG4B;AAAuB;AAGpD;A1Bk0OL;A0Bj0OI;AACE;AACA;AACA;AACA;AACA;AACA;AACA;A1Bm0ON;A0Bl0OM;AACE;AACA;A1Bo0OR;A0Bn0OQ;AACE;AACD;A1Bq0OT;A0Bp0OQ;AACA;AACA;AACD;A1Bs0OP;A0Br0OM;AACA;AACA;AACA;AACA;A1Bu0ON;A0Br0OM;A1Bu0ON;A0Bt0OM;AACD;A1Bw0OL;A0Bv0OI;AACD;AAED;A1Bw0OF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Bx0OI;AACA;AAMA;AAAO;AAAyB;AAAhC;AACD;AAED;A1Bu0OF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Bv0OI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;A1Bs0OF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Bt0OI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;A1Bq0OF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Br0OI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;A1Bo0OF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Bp0OI;AAMA;AAAO;AAAwB;AAA/B;AACD;AAED;A1Bm0OF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Bn0OI;AACE;AACD;A1Bq0OL;A0Bp0OI;AACD;AAED;A1Bq0OF;AACA;AACA;AACA;AACA;AACA;A0Br0OI;A1Bu0OJ;A0Bt0OI;AACE;AACE;AACD;AACC;AACD;AACF;AACC;AACD;AACF;AAED;A1Bu0OF;AACA;AACA;AACA;AACA;AACA;AACA;A0Bv0OI;AACE;AAA+B;AAAuB;AACvD;A1B20OL;A0B10OI;AACD;AAED;A1B20OF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B30OI;AACA;AAEA;AACA;AACA;A1B40OJ;A0B30OI;AACE;AACD;A1B60OL;A0B50OI;AACE;AACD;A1B80OL;A0B70OI;AACD;AAED;A1B80OF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B90OI;AACE;AACD;AACC;AACD;AACF;A1Bg1OH;AACA;AACA;A0B/0OA;A1Bi1OA;AACA;AACA;AACA;AACA;AACA;AACA;A0Bn1OA;AAAiC;AAC/B;AAAuB;AADQ;AAAA;AAGjC;A1Bw1OA;AACA;AACA;AACA;AACA;A0Bx1OA;AACE;AACA;AACE;AACD;A1B01OH;A0Bz1OE;AACD;AAED;A1B01OA;AACA;AACA;AACA;AACA;A0B11OA;AACE;AACE;AACD;AACF;AAED;A1B21OA;AACA;AACA;AACA;AACA;AACA;A0B31OO;AACL;A1B61OF;A0B51OE;AACE;AACD;A1B81OH;A0Bl2OiD;AAAA;AAO/C;A1B+1OF;A0B71OE;AACE;AACD;A1B+1OH;AACA;A0B91OE;AACA;AACD;AAED;A1B+1OA;AACA;AACA;AACA;AACA;AACA;A0B/1OO;AACL;AACA;A1Bi2OF;A0Bh2OE;AACE;A1Bk2OJ;A0Bj2OI;AACE;AACD;AACC;AACE;AACD;A1Bm2OP;A0Bl2OM;AACD;AACF;A1Bo2OH;A0Bl2OE;AACE;AACD;AACC;AACD;A1Bo2OH;A0Bn2OE;AACD;AAED;A1Bo2OA;AACA;AACA;AACA;AACA;AACA;A0Bp2OO;AACL;AACA;AACE;AACA;A1Bs2OJ;A0Br2OI;AACD;AACF;AAED;A1Bs2OA;AACA;AACA;AACA;AACA;AACA;A0Bt2OA;AACE;AACA;AACA;AAHiC;AAMnC;AAEA;A1Bs2OA;AACA;AACA;AACA;AACA;AACA;A0Br2OA;AAEA;A1Bs2OA;AACA;AACA;A0Br2OO;AACL;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;A1Bs2OF;A0Br2OE;AACA;AACD;AAED;A1Bs2OA;AACA;AACA;AACA;A0Bt2OO;AACL;AACD;AAED;A1Bu2OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Bv2OO;AACL;AACE;AACD;A1By2OH;A0Bx2OE;AACE;AACD;AACC;AACE;AACD;A1B02OL;A0Bz2OI;AACD;AACF;AAED;A1B02OA;AACA;AACA;AACA;AACA;AACA;A0B12OA;AACE;AACE;AACD;A1B42OH;A0B32OE;AAGI;A1B22ON;A0B12OM;AACE;AACD;A1B42OP;A0B32OM;AACD;AAGJ;AAED;A1B02OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B12OO;AACL;AACE;AACD;A1B42OH;A0B32OE;AACE;AACD;A1B62OH;A0B52OE;AACE;A1B82OJ;A0B72OI;AACE;AACD;A1B+2OL;A0B92OI;AACE;AACD;A1Bg3OL;A0B/2OI;AACD;AACF;AAED;A1Bg3OA;AACA;AACA;AACA;AACA;AACA;A0Bh3OO;AACL;AACE;AACD;A1Bk3OH;A0Bj3OE;AACD;AAED;A1Bk3OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Bl3OO;AAaL;AACE;AACD;A1Bw2OH;A0Bv2OE;AAAa;AAAc;AAa5B;AAED;A1B81OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B91OO;AAaL;AAAc;AAAc;AAa7B;A1B00OD;AACA;AACA;AACA;AACA;AACA;AACA;A2BxyQA;A3B0yQA;A2B1zQA;A3B4zQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2BxzQA;A3B0zQA;AACA;AACA;AACA;AACA;A2BxzQO;AACL;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVK;AAYR;A3B0zQD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Bx1QA;A5B01QA;A4Bz1QA;A5B21QA;A4B52QA;A5B82QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Bz2QA;A5B22QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Bz2QO;AAEP;A5B02QA;AACA;AACA;AACA;AACA;AACA;A4B12QA;AAEA;A5B22QA;AACA;AACA;AACA;AACA;A4B12QO;AACL;A5B42QF;A4B32QE;AACE;AACD;A5B62QH;A4B52QE;AACD;AAED;A5B62QA;AACA;AACA;AACA;AACA;AACA;A4B72QA;AACE;AACA;AAGA;AACA;AACA;A5B62QF;A4B52QE;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEE;AACA;AAEF;AAEA;A5By2QF;A4Bv2QE;AACE;AACD;AAGD;AACA;AACA;A5Bu2QF;AACA;A4Bv2QE;AACE;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BK;AA8BR;AAED;A5Bo2QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Bp2QA;AACE;AACA;AACA;AACE;AACD;A5Bs2QH;A4Bp2QE;AACE;AACD;AAGD;AACA;AACA;AACA;A5Bo2QF;AACA;A4Bp2QE;AACD;AAED;A5Bq2QA;AACA;AACA;AACA;AACA;AACA;AACA;A4Br2QO;AACL;AACD;AAED;A5Bs2QA;AACA;A4Bt2QO;AACL;AACD;A5Bw2QD;AACA;AACA;AACA;AACA;AACA;AACA;A6BrhRA;A7BuhRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BrhRA;A7BuhRA;AACA;AACA;AACA;AACA;AACA;AACA;A6BvhRE;A7ByhRF;AACA;A6BvhRE;AACE;AACA;AACD;AAED;A7BwhRF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B3hRe;A7B6hRf;A6B5hRI;AACE;AACD;A7B8hRL;A6B7hRI;AACA;AACE;AACD;AACF;AAED;A7B8hRF;AACA;AACA;AACA;AACA;AACA;A6B9hRI;AACE;AACD;A7BgiRL;A6B/hRI;A7BiiRJ;A6BhiRI;AACE;AACD;AACF;AAED;A7BiiRF;AACA;AACA;AACA;AACA;A6BjiRI;AACE;AACD;A7BmiRL;A6BliRI;AACD;AAED;A7BmiRF;AACA;AACA;AACA;AACA;AACA;A6BniRI;AACE;AACD;A7BqiRL;A6BpiRI;A7BsiRJ;A6BriRI;AACE;AACA;AACD;AACF;AAED;A7BsiRF;AACA;AACA;AACA;AACA;AACA;A6BtiRI;AACE;AACD;A7BwiRL;A6BviRI;AACD;A7ByiRH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BroRA;A9BuoRA;A8BtoRA;A9BwoRA;A8BvoRA;A9ByoRA;A8B3pRA;A9B6pRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BvpRA;A9BypRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BvpRA;AACE;AACA;AACA;AAHe;AAMjB;A9BwpRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8B7pRE;A9B+pRF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8B9pRA;A9BgqRA;AACA;AACA;AACA;AACA;AACA;A8BjqRA;AAEA;A9BkqRA;AACA;AACA;AACA;AACA;AACA;AACA;A8BjqRO;AACL;AACE;AAEI;AACE;AACE;AACD;AACF;A9BkqRT;A8BjqRQ;AACD;AAGH;AAKD;AACD;AACD;AAED;A9B4pRA;AACA;AACA;AACA;AACA;AACA;A8B5pRO;AACL;AACD;AAED;A9B6pRA;AACA;AACA;AACA;AACA;AACA;AACA;A8B7pRO;AACL;AAAmC;AAAsC;AACzE;AACD;AAED;A9BgqRA;AACA;AACA;AACA;AACA;AACA;A8BhqRO;AACL;AACA;AACA;AAEA;AACE;AACD;AACF;A9BiqRD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B5yRA;A/B8yRA;A+B7yRA;A/B+yRA;A+B9yRA;A/BgzRA;A+B/yRA;A/BizRA;A+B10RA;A/B40RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B10RA;A/B40RA;AACA;AACA;AACA;AACA;A+Br0RA;A/Bu0RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Br0RA;AAEA;A/Bs0RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B30RE;A/B60RF;AACA;AACA;AACA;AACA;AACA;AACA;A+B50RA;A/B80RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Bp1RE;A/Bs1RF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Br1RA;A/Bu1RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Bz1RO;AACL;AACA;AACA;AACA;A/B21RF;A+Bz1RE;AACA;A/B21RF;A+B11RE;AACE;AACE;AACD;A/B41RL;AACA;A+B31RI;AACD;AACC;AACA;AACD;AACF;AAED;A/B41RA;AACA;AACA;AACA;AACA;AACA;AACA;A+B51RO;AACL;AACA;AAKA;AAKA;A/Bs1RF;A+Br1RE;AACE;AACA;AAIE;AAAA;AACA;AAAe;AAElB;AACC;AAAgD;AAAA;AAChD;AACD;AACF;AAED;A/Bs1RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Bt1RO;AACL;AACA;A/Bw1RF;A+Bv1RE;AACE;AACD;AACF;AAED;A/Bw1RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Bx1RO;AAML;AACA;AACA;A/Bq1RF;A+Bp1RE;AACE;AACD;AACF;AAED;A/Bq1RA;AACA;AACA;AACA;AACA;AACA;AACA;A+Br1RO;AACL;AACA;AACA;AACD;AAED;A/Bs1RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Bt1RO;AACL;AACA;AACD;AAED;A/Bu1RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Bv1RO;AACL;AACD;AAED;A/Bw1RA;AACA;AACA;AACA;AACA;AACA;AACA;A+Bx1RO;AACL;A/B01RF;A+Bz1RE;AACE;AACD;AACC;AACD;AACF;AAED;A/B01RA;AACA;AACA;AACA;AACA;AACA;AACA;A+B11RO;AACL;AACD;AAED;A/B21RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B31RO;AACL;AACA;AACA;AACD;AAED;A/B41RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B51RA;AACE;AACA;A/B81RF;A+B71RE;AACE;AACD;AACC;AACD;AACF;AAED;A/B81RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B91RO;AACL;AACD;AAED;A/B+1RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B/1RO;AACL;AAID;AAED;A/B61RA;AACA;AACA;AACA;AACA;AACA;A+B71RO;AACL;AACA;AACD;AAED;A/B81RA;AACA;AACA;AACA;AACA;AACA;A+B91RO;AACL;AACD;AAED;A/B+1RA;AACA;AACA;AACA;AACA;AACA;AACA;A+B/1RO;AACL;AACD;AAED;A/Bg2RA;AACA;AACA;AACA;AACA;AACA;AACA;A+Bh2RO;AACL;AACA;A/Bk2RF;A+Bj2RE;AACE;AACE;AAAO;AAAmC;AAA1C;AACD;AAEA;AACF;A/Bq2RH;A+Bp2RE;AACD;AAED;A/Bq2RA;AACA;AACA;AACA;AACA;A+Br2RO;AACL;AACE;AACE;AAAyB;AAG3B;AAAuC;AAAsB;AAC9D;A/Bw2RH;A+Bv2RE;AAAO;AAA8C;AAArD;AACD;AAED;A/B22RA;AACA;AACA;AACA;AACA;A+B32RA;AACE;AACA;AACD;AAED;A/B42RA;AACA;AACA;AACA;AACA;AACA;AACA;A+B52RA;AACE;AAAO;AAAqD;AAA5D;AAID;AAED;A/B62RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B72RA;AACE;AAIA;AACA;A/B42RF;A+B32RE;AACE;AACA;AACA;AACA;AACA;AACA;AAEA;A/B42RJ;A+B32RI;AACE;AACD;AACF;A/B62RH;A+B52RE;AACD;AAED;A/B62RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B72RA;AACE;AACA;A/B+2RF;A+B72RE;AACE;AACE;AACA;AACA;AACA;AACA;AACA;AANiB;AAQpB;A/B+2RH;A+B72RE;AACE;AACA;AACD;A/B+2RH;A+B72RE;AACA;AAGA;A/B62RF;A+B52RE;AACE;AACA;AACD;AACF;AAED;A/B62RA;AACA;AACA;AACA;AACA;AACA;A+B72RA;AACE;A/B+2RF;A+B92RE;AACE;AACD;AAGD;AACA;A/B82RF;AACA;A+B92RE;AACA;AACA;AAAO;AAAkC;AAAzC;AACD;AAED;A/Bk3RA;AACA;AACA;AACA;AACA;AACA;A+Bl3RA;AACE;AACA;A/Bo3RF;A+Bn3RE;AACE;AACE;AACD;A/Bq3RL;A+Bp3RI;AACD;A/Bs3RH;A+Bp3RE;AACA;AACD;AAED;A/Bq3RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Br3RA;AACE;AACA;A/Bu3RF;A+Bt3RE;AACE;AACE;AACD;AACC;AACA;AACA;AAAoC;AAAwB;AAC7D;AACF;A/B03RH;A+Bz3RE;AACD;AAED;A/B03RA;AACA;AACA;AACA;AACA;AACA;A+B13RA;AACE;A/B43RF;A+B33RE;AACE;AACD;A/B63RH;A+B53RE;AACD;AAED;A/B63RA;AACA;AACA;AACA;AACA;AACA;A+B73RO;AACL;AACD;AAED;A/B83RA;AACA;AACA;AACA;AACA;AACA;AACA;A+B93RO;AACL;AACA;AAAO;AAA4B;AAAnC;AACD;AAED;A/Bk4RA;AACA;AACA;AACA;AACA;AACA;A+Bl4RO;AACL;AACD;AAED;A/Bm4RA;AACA;AACA;AACA;AACA;AACA;A+Bn4RO;AACL;AACD;AAED;A/Bo4RA;AACA;AACA;AACA;A+Bp4RA;AACE;AACA;AACA;A/Bs4RF;A+Bz4RyC;AAKrC;AACE;AACD;A/Bu4RL;A+Bt4RI;A/Bw4RJ;A+Bv4RI;AACE;AACD;AACC;AAAmC;AAAA;AAGpC;AAfoC;A/By5RzC;A+Br5RE;AAA2B;A/Bw5R7B;A+Bx5R6B;AAY1B;AACF;AAED;A/B84RA;AACA;AACA;AACA;AACA;A+B94RA;AACE;AACE;AACD;A/Bg5RH;A+B/4RE;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAED;A/Bg5RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Bh5RO;AACL;A/Bk5RF;A+Bh5RE;AACE;AACD;A/Bk5RH;A+Bj5RE;AAIA;AACA;AACA;AACD;AAED;A/B+4RA;AACA;AACA;AACA;AACA;A+B/4RO;AACL;AAIA;AAIE;AAAA;AAEH;AAED;A/B04RA;AACA;AACA;AACA;AACA;AACA;A+B14RO;AACL;AACE;AACD;AACF;AAED;A/B24RA;AACA;AACA;AACA;AACA;AACA;A+B34RA;AACE;A/B64RF;A+B34RE;AACD;AAED;A/B44RA;AACA;A+B54RA;AACE;AADuC;AAAA;AAAA;AAGvC;A/Bg5RF;A+B/4RE;AACE;AACA;AACA;AACA;AACA;AACA;AANK;AAQR;A/Bi5RD;AACA;AACA;AACA;AACA;AACA;AACA;AgCxiTA;AhC0iTA;AgCliTA;AhCoiTA;AgC5jTA;AhC8jTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgC7iTA;AACO;AhC+iTP;AACA;AACA;AACA;AACA;AACA;AACA;AgCljTE;AhCojTF;AACA;AACA;AACA;AgCljTE;AhCojTF;AACA;AACA;AACA;AACA;AgCljTI;AAAO;AAAiF;AAAxF;AAKD;AAED;AhCkjTF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCljTI;AAAO;AAAiF;AAAxF;AAKD;AAED;AhCkjTF;AACA;AACA;AACA;AACA;AACA;AACA;AgCljTI;AAAO;AAA+C;AAAtD;AAKD;AAED;AhCkjTF;AACA;AACA;AACA;AACA;AACA;AACA;AgCljTI;AAAO;AAA+C;AAAtD;AAKD;AAED;AhCkjTF;AACA;AACA;AACA;AACA;AACA;AgCljTI;AAAO;AAAqD;AAA5D;AAID;AAED;AhCmjTF;AACA;AACA;AACA;AACA;AACA;AgCnjTI;AAAO;AAAiE;AAAxE;AAID;AAED;AhCojTF;AACA;AACA;AACA;AACA;AACA;AgCpjTI;AAAO;AAAkF;AAAzF;AAKD;AAED;AhCojTF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCpjTI;AAAO;AAAqD;AAA5D;AAID;AAED;AhCqjTF;AACA;AACA;AACA;AACA;AACA;AACA;AgCrjTI;AACD;AAED;AhCsjTF;AACA;AACA;AACA;AACA;AACA;AACA;AgCvjTyD;AAAvB;AAAuB;AhC2jTzD;AgC1jTI;AACE;AACA;AACA;AAAmC;AAAO;AAI3C;AhC2jTL;AgC1jTI;AAAO;AAAkG;AAAzG;AAKD;AAED;AhC0jTF;AACA;AACA;AACA;AACA;AACA;AgC1jTI;AAAO;AAAkG;AAAzG;AAKD;AAED;AhC0jTF;AACA;AACA;AACA;AACA;AACA;AgC1jTI;AAAO;AAAuD;AAA9D;AAID;AAED;AhC2jTF;AACA;AACA;AACA;AACA;AACA;AgC3jTI;AAAO;AAAqE;AAA5E;AAKD;AAED;AhC2jTF;AACA;AACA;AACA;AACA;AACA;AgC3jTI;AAAO;AAAqD;AAA5D;AAID;AAED;AhC4jTF;AACA;AACA;AACA;AACA;AACA;AgC5jTI;AAAO;AAAiD;AAAxD;AAID;AAED;AhC6jTF;AACA;AACA;AACA;AACA;AACA;AgC7jTI;AAAO;AAAiF;AAAxF;AAKD;AAED;AhC6jTF;AACA;AACA;AACA;AACA;AACA;AgC7jTI;AAAO;AAA6F;AAApG;AAKD;AAED;AhC6jTF;AACA;AACA;AACA;AACA;AACA;AgC7jTI;AAAO;AAA8C;AAArD;AAID;AAED;AhC8jTF;AACA;AACA;AACA;AACA;AACA;AgC9jTI;AAAO;AAAsD;AAA7D;AAID;AAED;AhC+jTF;AACA;AACA;AACA;AACA;AACA;AgC/jTI;AAAO;AAAsD;AAA7D;AAID;AAED;AhCgkTF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgChkTI;AAAO;AAA2F;AAAlG;AAID;AAED;AhCikTF;AACA;AACA;AACA;AACA;AACA;AACA;AgCjkTI;AAAO;AAA+D;AAAtE;AAID;AAED;AhCkkTF;AACA;AACA;AACA;AACA;AACA;AACA;AgClkTI;AAAO;AAAgD;AAAvD;AAID;AAED;AhCmkTF;AACA;AACA;AACA;AACA;AACA;AgCnkTI;AACD;AAED;AhCokTF;AACA;AACA;AACA;AACA;AACA;AACA;AgCpkTI;AAAO;AAA6F;AAApG;AAKD;AAED;AhCokTF;AACA;AACA;AACA;AACA;AACA;AgCpkTI;AAAO;AAA4D;AAAnE;AAID;AAED;AhCqkTF;AACA;AACA;AACA;AACA;AACA;AgCrkTI;AAAO;AAAuD;AAA9D;AAID;AAED;AhCskTF;AACA;AACA;AACA;AACA;AACA;AgCtkTI;AAAO;AAAuD;AAA9D;AAID;AAED;AhCukTF;AACA;AACA;AACA;AACA;AACA;AgCvkTI;AAAO;AAAkD;AAAzD;AAID;AAED;AhCwkTF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCxkTI;AAAO;AAAqF;AAA5F;AAID;AAED;AhCykTF;AACA;AACA;AACA;AACA;AACA;AgCzkTI;AAAO;AAAkE;AAAzE;AAID;AAED;AhC0kTF;AACA;AACA;AACA;AACA;AACA;AgC1kTI;AAAO;AAA4E;AAAnF;AAID;AAED;AhC2kTF;AACA;AACA;AACA;AACA;AACA;AgC3kTI;AAAO;AAAgF;AAAvF;AAMD;AAED;AhC0kTF;AACA;AACA;AACA;AACA;AACA;AACA;AgC1kTI;AACE;AACC;AAFH;AAID;AAED;AhC2kTF;AACA;AACA;AACA;AACA;AACA;AgC3kTI;AACE;AACC;AAFH;AAID;AAED;AhC4kTF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgC5kTI;AACE;AACC;AAFH;AAID;AAED;AhC6kTF;AACA;AACA;AACA;AACA;AACA;AgC7kTI;AACE;AACC;AAFH;AAID;AAED;AhC8kTF;AACA;AACA;AACA;AACA;AACA;AgC9kTI;AACE;AACC;AAFH;AAID;AAED;AhC+kTF;AACA;AACA;AACA;AACA;AACA;AgC/kTI;AACE;AACC;AAFH;AAID;AAED;AhCglTF;AACA;AACA;AACA;AACA;AACA;AgChlTI;AACE;AACC;AAFH;AAID;AAED;AhCilTF;AACA;AACA;AACA;AACA;AACA;AgCjlTI;AACE;AACC;AAFH;AAID;AAED;AhCklTF;AACA;AACA;AACA;AACA;AACA;AgCllTI;AACD;AAED;AhCmlTF;AACA;AACA;AACA;AACA;AACA;AACA;AgCnlTI;AACE;AACC;AAFH;AAID;AAED;AhColTF;AACA;AACA;AACA;AACA;AACA;AgCplTI;AACE;AACC;AAFH;AAID;AAED;AhCqlTF;AACA;AACA;AACA;AACA;AACA;AACA;AgCrlTI;AACD;AAED;AhCslTF;AACA;AACA;AACA;AACA;AACA;AACA;AgCtlTI;AACD;AAED;AhCulTF;AACA;AACA;AACA;AACA;AACA;AACA;AgCvlTI;AACE;AACC;AAFH;AAID;AAED;AhCwlTF;AACA;AACA;AACA;AACA;AACA;AACA;AgCxlTI;AACD;AAED;AhCylTF;AACA;AACA;AACA;AACA;AACA;AgCzlTI;AACE;AACC;AAFH;AASD;AAED;AhCqlTF;AACA;AACA;AACA;AACA;AACA;AgCrlTI;AACE;AACC;AAFH;AAID;AAED;AhCslTF;AACA;AACA;AACA;AACA;AACA;AgCtlTI;AAAO;AAA0D;AAAjE;AAID;AAED;AhCulTF;AACA;AACA;AACA;AACA;AACA;AgCvlTI;AAAO;AAAmD;AAA1D;AAID;AAED;AhCwlTF;AACA;AACA;AACA;AACA;AACA;AgCxlTI;AACA;AAAO;AAA4C;AAAnD;AAID;AAED;AhCylTF;AACA;AACA;AACA;AACA;AACA;AgCzlTI;AAAO;AAAiE;AAAxE;AAID;AAED;AhC0lTF;AACA;AACA;AACA;AACA;AACA;AgC1lTI;AACE;AACC;AAFH;AAQD;AAED;AhCulTF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCvlTI;AACE;AACC;AAFH;AAQD;AAED;AhColTF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCplTI;AAAO;AAAoE;AAA3E;AAMD;AAED;AhCmlTF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCnlTI;AAAO;AAAyG;AAAhH;AAMD;AAED;AhCklTF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCllTI;AAAO;AAAwC;AAA/C;AAID;AAED;AhCmlTF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCnlTI;AAAO;AAA6E;AAApF;AAMD;AAED;AhCklTF;AACA;AACA;AACA;AACA;AACA;AgCllTI;AAAO;AAA2D;AAAlE;AAID;AAED;AhCmlTF;AACA;AACA;AACA;AACA;AACA;AgCnlTI;AACE;AACC;AAFH;AAQD;AAED;AhCglTF;AACA;AACA;AACA;AACA;AACA;AgChlTI;AAAO;AAA4D;AAAnE;AAID;AAED;AhCilTF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCjlTI;AAAO;AAAsE;AAA7E;AAID;AAED;AhCklTF;AACA;AACA;AACA;AACA;AACA;AgCllTI;AAAO;AAA4C;AAAnD;AAID;AAED;AhCmlTF;AACA;AACA;AACA;AACA;AACA;AgCnlTI;AAAO;AAAyE;AAAhF;AAID;AAED;AhColTF;AACA;AACA;AACA;AACA;AACA;AgCplTI;AAAO;AAAwC;AAA/C;AACD;AhCylTH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCz5UA;AjC25UA;AiC15UA;AjC45UA;AiC35UA;AjC65UA;AiC55UA;AjC85UA;AiCj7UA;AjCm7UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiC56UA;AjC86UA;AACA;AACA;AACA;AACA;AiC56UO;AAEP;AjC66UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCh7UE;AjCk7UF;AACA;AACA;AACA;AiCh7UE;AACE;AACA;AAEA;AjCi7UJ;AiCh7UI;AAEA;AjCi7UJ;AiCh7UI;AACD;AAED;AjCi7UF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCn7UI;AjCq7UJ;AiCp7UI;AACE;AjCs7UN;AiCr7UM;AACE;AACD;AACF;AjCu7UL;AiCt7UI;AACD;AAED;AjCu7UF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCn7UI;AAFA;AAEA;AjCu7UJ;AiCv7UI;AADA;AACA;AjC27UJ;AiC17UI;AjC47UJ;AiC37UI;AACE;AACD;AjC67UL;AiC57UI;AASD;AAED;AjCq7UF;AACA;AACA;AACA;AACA;AACA;AACA;AiCr7UI;AjCu7UJ;AiCt7UI;AACE;AAIA;AAEE;AAAuB;AAE1B;AACC;AAEE;AAAuB;AAE1B;AACC;AAEE;AAA4B;AAE/B;AjCk7UL;AiCh7UI;AACD;AAED;AjCi7UF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCl7U+E;AAArB;AAAqB;AjCs7U/E;AiCr7UI;AAA2B;AAAD;AAE1B;AACA;AjCw7UJ;AiCp7UI;AACE;AACE;AACA;AAA2B;AAAW;AAFL;AAIpC;AjCw7UL;AiCt7UI;AACA;AjCw7UJ;AiCp7UI;AACE;AACE;AACA;AAAyB;AAAW;AAFL;AAIlC;AjCw7UL;AiCt7UI;AACE;AACD;AjCw7UL;AiCt7UI;AACE;AAIA;AALgB;AAQlB;AACD;AjCo7UH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCznVA;AlC2nVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCznVA;AlC2nVA;AACA;AACA;AACA;AkCznVA;AACE;AACD;AAED;AlC0nVA;AACA;AACA;AACA;AACA;AkC1nVA;AACE;AACD;AAED;AlC2nVA;AACA;AACA;AACA;AACA;AACA;AkC3nVO;AACL;AACD;AAED;AlC4nVA;AACA;AACA;AACA;AACA;AACA;AACA;AkC5nVO;AACL;AACD;AAED;AlC6nVA;AACA;AACA;AACA;AACA;AkC7nVO;AACL;AACD;AAED;AlC8nVA;AACA;AACA;AACA;AACA;AACA;AACA;AkC9nVO;AACL;AACA;AACD;AAED;AlC+nVA;AACA;AACA;AACA;AACA;AACA;AACA;AkC/nVO;AACL;AACE;AACD;AlCioVH;AkChoVE;AACD;AAED;AlCioVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCjoVO;AACL;AACE;AACD;AlCmoVH;AkCloVE;AACE;AACD;AlCooVH;AkCnoVE;AACD;AAED;AlCooVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCpoVO;AACL;AlCsoVF;AkCvoVoE;AAGhE;AACA;AACE;AACA;AACD;AlCuoVL;AkCtoVI;AACE;AACD;AAV+D;AlCmpVpE;AkCjpVE;AAAwC;AlCopV1C;AkCppV0C;AASvC;AlC8oVH;AkC7oVE;AACD;AAED;AlC8oVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkC9oVO;AAA2B;AAEhC;AlCgpVF;AkC/oVE;AACE;AACD;AlCipVH;AACA;AkChpVE;AACD;AAED;AlCipVA;AACA;AACA;AACA;AACA;AACA;AkCjpVO;AACL;AACA;AACE;AACD;AlCmpVH;AkCjpVE;AACD;AAED;AlCkpVA;AACA;AACA;AACA;AACA;AACA;AkClpVO;AACL;AACE;AACD;AlCopVH;AkClpVE;AACD;AAED;AlCmpVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCnpVO;AACL;AACE;AACD;AlCqpVH;AkCppVE;AACA;AlCspVF;AkCrpVE;AACE;AACD;AlCupVH;AkCtpVE;AACD;AlCwpVD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCp1VA;AnCs1VA;AmCr1VA;AnCu1VA;AmCt1VA;AnCw1VA;AmCv1VA;AnCy1VA;AmCx1VA;AnC01VA;AmCz1VA;AnC21VA;AmC11VA;AnC41VA;AmC31VA;AnC61VA;AmCp3VA;AnCs3VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmC12VA;AACA;AAEA;AnC22VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmC12VO;AAOL;AACA;AnCs2VF;AmC/1VE;AACE;AAEA;AACA;AACA;AACA;AnCg2VJ;AmC/1VI;AACE;AACA;AACD;AnCi2VL;AACA;AmCh2VI;AACE;AACE;AACA;AACD;AACF;AACF;AnCk2VH;AmCj2VE;AACD;AAED;AnCk2VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCl2VO;AAOL;AnC81VF;AmCv1VE;AACE;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACD;AnCy1VL;AACA;AmCx1VI;AACE;AACE;AACA;AACD;AACF;AACF;AnC01VH;AmCz1VE;AACD;AAED;AnC01VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmC11VA;AACE;AnC41VF;AmC31VE;AACE;AACD;AnC61VH;AmC31VE;AAEA;AnC41VF;AmCr1VE;AACE;AnCu1VJ;AmCt1VI;AACE;AACE;AACD;AnCw1VP;AmCv1VM;AACD;AACF;AnCy1VH;AACA;AmCv1VE;AACA;AACA;AAAM;AAAO;AACb;AAEA;AnC01VF;AmCz1VE;AACE;AACD;AACC;AACA;AAGD;AACC;AACE;AACD;AnCy1VL;AmCx1VI;AACD;AnC01VH;AmCz1VE;AnC21VF;AmC11VE;AACE;AACD;AnC41VH;AmC31VE;AACD;AAED;AnC41VA;AACA;AACA;AACA;AACA;AACA;AACA;AmC51VA;AACE;AACA;AACE;AACD;AnC81VH;AACA;AmC71VE;AAAyB;AAAO;AnCi2VlC;AmCh2VE;AACE;AACA;AACD;AnCk2VH;AACA;AmCj2VE;AACD;AAED;AnCk2VA;AACA;AACA;AACA;AACA;AACA;AmCl2VO;AACL;AACD;AAED;AnCm2VA;AACA;AACA;AACA;AACA;AACA;AACA;AmCn2VA;AACE;AACA;AACD;AAED;AnCo2VA;AACA;AmCp2VA;AAEA;AnCq2VA;AACA;AACA;AACA;AmCp2VO;AACL;AACD;AAED;AnCq2VA;AACA;AACA;AACA;AACA;AACA;AACA;AmCr2VO;AACL;AACA;AAAY;AAAwB;AACpC;AAEI;AACD;AAEC;AACA;AACD;AAEC;AACA;AACA;AACA;AnCs2VN;AmCr2VM;AACE;AnCu2VR;AmCt2VQ;AAAU;AAAO;AAAgB;AAAkB;AACpD;AnC42VP;AmC32VM;AACE;AnC62VR;AmC52VQ;AACA;AACD;AACF;AACJ;AAED;AnC62VA;AACA;AACA;AACA;AACA;AmC72VO;AACL;AnC+2VF;AmC92VE;AACE;AACD;AnCg3VH;AmC/2VE;AACA;AACD;AAED;AnCg3VA;AACA;AACA;AACA;AACA;AmCh3VA;AACE;AACE;AACA;AACA;AAHuC;AAK1C;AAED;AnCi3VA;AACA;AACA;AACA;AACA;AACA;AACA;AmCj3VO;AACL;AACD;AAED;AnCk3VA;AACA;AACA;AACA;AACA;AACA;AACA;AmCl3VA;AACE;AnCo3VF;AmCn3VE;AACE;AnCq3VJ;AmCp3VI;AACE;AACD;AACF;AnCs3VH;AmCr3VE;AACD;AnCu3VD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCzsWA;ApC2sWA;AoC1sWA;ApC4sWA;AoC3sWA;ApC6sWA;AoChuWA;ApCkuWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoC/tWA;ApCiuWA;AoC5tWA;AACA;AAEA;ApC6tWA;AoC5tWA;AAEA;ApC6tWA;AACA;AACA;AACA;AACA;AoC5tWO;AACL;AACD;AAED;ApC6tWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoC7tWA;AACE;AACE;ApC+tWJ;AoC9tWI;AACE;AACD;AACF;ApCguWH;AoC/tWE;AACD;AAED;ApCguWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoChuWO;AACL;AACE;AACA;AACD;ApCkuWH;AoCjuWE;AACE;AACD;ApCmuWH;AoCluWE;ApCouWF;AoCnuWE;AACE;ApCquWJ;AoCpuWI;AACE;AACA;ApCsuWN;AoCpuWM;AACE;AACD;AACF;ApCsuWL;AoCruWI;AACE;AACD;AACF;ApCuuWH;AoCtuWE;AACD;AAED;ApCuuWA;AACA;AACA;AACA;AACA;AACA;AACA;AoCvuWO;AAA6C;ApC0uWpD;AoCxuWE;AACE;AAKD;AACF;AAED;ApCquWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCruWO;AACL;ApCuuWF;AoCluWE;AACE;AAA8B;AAAuB;AAGtD;AACF;AAED;ApCmuWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCnuWO;AACL;ApCquWF;AoChuWE;AACE;AACD;ApCkuWH;AoCjuWE;AACD;AAED;ApCkuWA;AACA;AACA;AACA;AACA;AACA;AACA;AoCluWO;AACL;AACE;AACD;AACF;AAED;ApCmuWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCnuWO;AACL;AACE;AAID;ApCkuWH;AoCjuWE;AACD;AAED;ApCkuWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCluWO;AACL;AACE;AAID;ApCiuWH;AoChuWE;AACD;AAED;ApCiuWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCjuWO;AAAsC;AAE3C;AAIA;AAMA;AACD;AAED;ApC0tWA;AACA;AACA;AACA;AACA;AACA;AoC1tWO;AACL;AACE;AACD;ApC4tWH;AoC3tWE;AACE;AACD;AACC;AACD;AACF;AAED;ApC4tWA;AACA;AACA;AACA;AACA;AACA;AoC5tWO;AACL;AACD;AAED;ApC6tWA;AACA;AACA;AACA;AACA;AACA;AoC7tWO;AACL;AACD;AAED;ApC8tWA;AACA;AACA;AACA;AACA;AACA;AoC9tWO;AACL;AACE;AACD;ApCguWH;AoC/tWE;AACD;AAED;ApCguWA;AACA;AACA;AACA;AACA;AACA;AACA;AoChuWO;AACL;AACE;AACD;ApCkuWH;AoCjuWE;AACE;AACD;ApCmuWH;AoCluWE;AACE;AACD;ApCouWH;AoCnuWE;AACD;AAED;ApCouWA;AACA;AACA;AACA;AACA;AACA;AoCpuWO;AACL;AACD;AAED;ApCquWA;AACA;AACA;AACA;AACA;AACA;AoCruWO;AACL;AACE;AACD;ApCuuWH;AoCtuWE;AACD;AAED;ApCuuWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCvuWO;AACL;AAID;AAED;ApCquWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCruWO;AACL;AAAc;AAAqC;AACnD;AAAO;AAAwC;AAA/C;AACD;AAED;ApC2uWA;AACA;AACA;AACA;AACA;AACA;AoC3uWO;AACL;AACE;AACD;AACF;AAED;ApC4uWA;AACA;AACA;AACA;AACA;AACA;AoC5uWO;AACL;AACE;AACD;ApC8uWH;AoC5uWE;AACE;AACD;AACF;ApC8uWD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqClmXA;ArComXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqClmXA;AACA;AAEA;ArCmmXA;AACA;AACA;AACA;AACA;AqClmXA;AACE;AACD;AAED;ArCmmXA;AACA;AACA;AACA;AACA;AACA;AqCnmXO;AACL;AACD;AAED;ArComXA;AACA;AACA;AACA;AACA;AACA;AACA;AqCpmXO;AACL;AACD;AAED;ArCqmXA;AACA;AACA;AACA;AACA;AACA;AqCrmXO;AACL;AACD;AAED;ArCsmXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqCtmXO;AACL;AACD;AAED;ArCumXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqCvmXO;AACL;AACE;AACE;AACD;AACF;ArCymXH;AqCxmXE;AACD;AAED;ArCymXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqCzmXO;AACL;AAAO;AAAwB;AAA/B;AACD;ArC8mXD;AACA;AACA;AACA;AACA;AACA;AACA;AsCpsXA;AtCssXA;AsCttXA;AtCwtXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCntXA;AAEA;AtCotXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCntXO;AACL;AAAe;AAA4B;AtCutX7C;AsCttXE;AACE;AACD;AtCwtXH;AsCttXE;AtCwtXF;AsCvtXE;AACE;AACA;AACA;AACD;AtCytXH;AsCxtXE;AACD;AtC0tXD;AACA;AACA;AACA;AACA;AACA;AACA;AuC3wXA;AvC6wXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuC3wXA;AvC6wXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuC3wXO;AAA0D;AAAf;AAAe;AvCgxXjE;AuC/wXE;AACE;AACD;AACC;AACD;AACF;AvCixXD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCp0XA;AxCs0XA;AwCr0XA;AxCu0XA;AwCt0XA;AxCw0XA;AwCv0XA;AxCy0XA;AwCx0XA;AxC00XA;AwCz0XA;AxC20XA;AwC10XA;AxC40XA;AwC30XA;AxC60XA;AwC50XA;AxC80XA;AwCt2XA;AxCw2XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwC51XA;AxC81XA;AACA;AwC51XA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAV+B;AAajC;AxC61XA;AACA;AACA;AACA;AwC51XA;AAEA;AxC61XA;AACA;AACA;AACA;AACA;AACA;AwC51XA;AAEA;AxC61XA;AwC51XA;AAEA;AxC61XA;AwC51XA;AAEA;AxC61XA;AwC51XA;AAEA;AxC61XA;AwC51XA;AAEA;AxC61XA;AwC51XA;AAEA;AACE;AAA4B;AAC5B;AAA4B;AAC5B;AAA4B;AAG9B;AxC81XA;AwC71XO;AAEP;AxC81XA;AACA;AACA;AACA;AACA;AACA;AACA;AwC/1XO;AACL;AACD;AAED;AxCg2XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCh2XO;AACL;AACE;AAAI;AAAmC;AACvC;AACD;AxCo2XH;AwCl2XE;AACD;AAED;AxCm2XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCn2XO;AACL;AACE;AACD;AxCq2XH;AwCn2XE;AAGA;AxCm2XF;AwCl2XE;AACE;AACD;AxCo2XH;AwCl2XE;AAAa;AAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AxCs2XJ;AwC/2XyC;AAavC;AxCq2XF;AwCp2XE;AACE;AACD;AAGD;AxCo2XF;AACA;AwCp2XE;AAIE;AACA;AACD;AAGD;AxCi2XF;AACA;AwCj2XE;AxCm2XF;AwCl2XE;AACE;AACD;AACC;AACD;AACC;AACD;AxCo2XH;AwCn2XE;AxCq2XF;AwCl2XE;AxCo2XF;AwCl2XE;AACE;AACD;AxCo2XH;AwCl2XE;AACD;AAED;AxCm2XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCn2XO;AAKL;AACE;AACD;AxCi2XH;AwCh2XE;AACA;AAEA;AAOA;AACA;AACD;AACD;AxC21XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwC31XO;AACL;AACA;AACD;AAED;AxC41XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwC51XO;AACL;AACD;AAED;AxC61XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwC71XO;AACL;AACA;AACA;AACA;AxC+1XF;AwC91XE;AACE;AACE;AACD;AACF;AxCg2XH;AwC/1XE;AACD;AAED;AxCg2XA;AACA;AACA;AACA;AACA;AACA;AACA;AwCh2XO;AACL;AxCk2XF;AwCj2XE;AACE;AxCm2XJ;AwCl2XI;AACE;AACD;AACC;AACE;AAAW;AAAuB;AAClC;AACD;AACF;AACC;AAAW;AAAuB;AAClC;AACD;AACF;AxCw2XH;AwCv2XE;AACD;AAED;AxCw2XA;AACA;AACA;AACA;AACA;AACA;AwCx2XO;AACL;AACE;AACD;AxC02XH;AwCz2XE;AAMD;AAED;AxCq2XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCr2XO;AAIL;AADA;AACA;AxCs2XF;AwCr2XE;AxCu2XF;AwCh2XE;AAAqB;AAAuB;AAC5C;AASA;AACD;AAED;AxC21XA;AACA;AACA;AACA;AACA;AACA;AwC31XO;AACL;AAKA;AACD;AAED;AxCw1XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCx1XO;AACL;AACD;AAED;AxCy1XA;AACA;AACA;AACA;AACA;AACA;AACA;AwCz1XO;AACL;AxC21XF;AwC11XE;AACE;AACD;AxC41XH;AwC31XE;AACD;AAED;AxC41XA;AACA;AACA;AACA;AACA;AACA;AACA;AwC51XO;AACL;AxC81XF;AwC71XE;AACE;AACD;AxC+1XH;AwC91XE;AACD;AAED;AxC+1XA;AACA;AACA;AACA;AACA;AACA;AwC/1XO;AACL;AACE;AACD;AxCi2XH;AwCh2XE;AACD;AAED;AxCi2XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCj2XO;AACL;AACE;AACD;AxCm2XH;AwCl2XE;AACE;AACD;AxCo2XH;AwCn2XE;AACA;AACD;AAED;AxCo2XA;AACA;AACA;AACA;AACA;AACA;AwCp2XO;AACL;AACE;AACD;AxCs2XH;AwCr2XE;AACD;AAED;AxCs2XA;AACA;AACA;AACA;AACA;AACA;AACA;AwCt2XO;AACL;AACE;AACD;AxCw2XH;AwCv2XE;AACE;AACD;AxCy2XH;AwCx2XE;AACD;AAED;AxCy2XA;AACA;AACA;AACA;AACA;AACA;AwCz2XO;AACL;AACA;AACA;AACD;AAED;AxC02XA;AACA;AACA;AACA;AACA;AACA;AwC12XO;AACL;AxC42XF;AwC32XE;AACE;AACD;AxC62XH;AwC52XE;AACA;AACD;AAED;AxC62XA;AACA;AACA;AACA;AACA;AACA;AACA;AwC72XA;AACE;AACE;AACD;AxC+2XH;AwC92XE;AxCg3XF;AwCz2XE;AACD;AAED;AxC02XA;AACA;AACA;AACA;AACA;AACA;AACA;AwC12XO;AACL;AACA;AACA;AACE;AACD;AxC42XH;AwC32XE;AACA;AACA;AACD;AAED;AxC42XA;AACA;AACA;AACA;AACA;AACA;AACA;AwC52XO;AACL;AACE;AACD;AxC82XH;AACA;AwC52XE;AACE;AACD;AAGD;AACA;AACA;AxC42XF;AACA;AwC52XE;AACA;AACA;AAKA;AACA;AxC02XF;AwCr2XE;AACA;AACA;AAMD;AAED;AxCi2XA;AACA;AACA;AACA;AACA;AACA;AACA;AwCj2XO;AACL;AACD;AAED;AxCk2XA;AACA;AACA;AACA;AACA;AACA;AACA;AwCl2XO;AACL;AACE;AACD;AxCo2XH;AwCn2XE;AACE;AACD;AxCq2XH;AwCp2XE;AACD;AAED;AxCq2XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCr2XO;AACL;AACE;AACD;AxCu2XH;AwCt2XE;AACA;AxCw2XF;AwCr2XE;AACE;AACD;AxCu2XH;AACA;AwCr2XE;AACE;AACD;AxCu2XH;AACA;AwCr2XE;AACE;AACD;AxCu2XH;AACA;AwCr2XE;AAKD;AAED;AxCk2XA;AACA;AACA;AACA;AACA;AACA;AACA;AwCl2XO;AACL;AACA;AACA;AACD;AAED;AxCm2XA;AACA;AACA;AACA;AACA;AwCn2XO;AACL;AACA;AACA;AAKD;AAED;AxCg2XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCh2XO;AACL;AACD;AxCk2XD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyCx/YA;AzC0/YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyCx/YA;AzC0/YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyCx/YO;AACL;AACE;AACD;AzC0/YH;AyCz/YE;AACE;AACE;AACD;AACF;AzC2/YH;AyC1/YE;AACD;AAED;AzC2/YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyC3/YO;AACL;AACA;AzC6/YF;AyC5/YE;AACE;AzC8/YJ;AyC7/YI;AACE;AACD;AACC;AACE;AACD;AzC+/YP;AyC9/YM;AACD;AACF;AzCggZH;AyC//YE;AACE;AACD;AzCigZH;AyChgZE;AACD;AAED;AzCigZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyCjgZO;AACL;AACE;AACE;AACD;AACF;AzCmgZH;AyClgZE;AACD;AAED;AzCmgZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyCngZO;AACL;AzCqgZF;AyCpgZE;AACE;AACD;AzCsgZH;AyCrgZE;AACD;AAED;AzCsgZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyCtgZO;AACL;AACE;AACD;AACF;AAED;AzCugZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyCvgZO;AACL;AACD;AzCygZD;AACA;AACA;AACA;AACA;AACA;AACA;A0CvoZA;A1CyoZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0CtoZA;A1CwoZA;A0CvoZA;A1CyoZA;A0CvoZA;A1CyoZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0CvoZO;AACL;AACA;AACA;AACA;AACE;AAAgB;AADP;AACO;A1C4oZpB;A0C3oZM;AACA;AACA;AACD;A1C6oZL;A0C5oZI;AACD;AACF;A1C8oZD;AACA;AACA;AACA;AACA;AACA;AACA;A2C/qZA;A3CirZA;A2CjsZA;A3CmsZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2C/rZA;AACA;AAEA;A3CgsZA;AACA;AACA;AACA;AACA;AACA;A2CjsZE;A3CmsZF;AACA;A2CjsZE;AACE;AACA;AAEA;A3CksZJ;A2CjsZI;AAEA;A3CksZJ;AACA;AACA;AACA;A2CjsZI;AAEA;A3CksZJ;A2CjsZI;AACD;AAED;A3CksZF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2CpsZI;AACD;AAED;A3CqsZF;AACA;AACA;AACA;AACA;AACA;A2CrsZI;A3CusZJ;A2CtsZI;AACE;AACA;AACD;A3CwsZL;A2CvsZI;AACD;AAED;A3CwsZF;AACA;AACA;AACA;AACA;AACA;A2CxsZI;AACE;AACD;A3C0sZL;A2CzsZI;AAAoB;AAAS;AAAV;AACnB;AACD;AAED;A3C6sZF;AACA;AACA;AACA;AACA;A2C7sZI;AACE;AACD;A3C+sZL;A2C7sZI;AACA;AACA;AACA;A3C+sZJ;A2C9sZI;AAAyB;A3CitZ7B;A2C/sZM;AACE;AACA;AACD;AACF;A3CitZL;A2C/sZI;AACE;AACA;AACD;AACF;A3CitZH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4CzzZA;A5C2zZA;A4C30ZA;A5C60ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Cz0ZA;AACA;AAEA;A5C00ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Cz0ZO;AACL;A5C20ZF;A4C10ZE;AACE;AACD;A5C40ZH;A4C30ZE;AACD;AAED;A5C40ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4C50ZO;AACL;AACA;AACA;AAAO;AAA4B;AAAnC;AACD;AAED;A5Cg1ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Ch1ZO;AACL;AACD;AAED;A5Ci1ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Cj1ZO;AACL;AACE;AACD;AACC;AACD;AACF;AAED;A5Ck1ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Cl1ZO;AAA+C;AAAZ;AAAY;A5Cu1ZtD;A4Ct1ZE;AACA;AAEA;A5Cu1ZF;A4Ct1ZE;AACA;AAAY;AAAW;AAAW;AAAvB;A5C41Zb;A4Cl2ZsD;AAAA;AAAA;AAAA;AAAA;A5Cw2ZtD;A4C71ZI;AACE;AACD;A5C+1ZL;A4C91ZI;A5Cg2ZJ;A4C/1ZI;AACE;AACD;A5Ci2ZL;A4Ch2ZI;AACE;AACA;AACD;A5Ck2ZL;A4Cj2ZI;AACE;AAEA;A5Ck2ZN;A4Cj2ZM;AACE;A5Cm2ZR;A4Cl2ZQ;AACE;AAAY;AAAa;AAAa;AAA3B;AACX;AACD;AACF;A5Cw2ZP;A4Cv2ZM;AACD;AAlCiD;A5C44ZtD;A4Cn4ZE;AAAyB;A5Cs4Z3B;A4Ct4Z2B;AA0BxB;A5C+2ZH;A4C92ZE;AACD;AAED;A5C+2ZA;AACA;AACA;AACA;AACA;AACA;A4C/2ZO;AACL;AACE;AACE;AACD;A5Ci3ZL;A4Ch3ZI;AACD;AACF;A5Ck3ZD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6C1gaA;A7C4gaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6C1gaA;A7C4gaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6C1gaE;A7C4gaF;AACA;A6C1gaE;AACE;AAEA;A7C2gaJ;AACA;AACA;A6C1gaI;AAAmB;AAAO;AACxB;AACA;AACD;AAED;A7C6gaJ;AACA;AACA;A6C5gaI;AAEA;A7C6gaJ;AACA;AACA;A6C5gaI;AACD;AAGH;A7C4gaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6C9gaO;AACL;AACE;AACD;AACF;AAED;A7C+gaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6C/gaO;AAAmC;AAAX;AAAW;A7Coha1C;A6CnhaE;AACE;AACA;A7CqhaJ;A6CphaI;AACE;AACD;A7CshaL;A6CrhaI;AACE;AACD;A7CuhaL;A6CthaI;AACA;A7CwhaJ;A6CthaI;AACE;AACE;AACD;A7CwhaP;A6CvhaM;AACE;AACD;AACF;A7CyhaL;A6CxhaI;AACE;AACE;AACD;A7C0haP;A6CzhaM;AACE;AACD;AACF;A7C2haL;A6C1haI;AACE;AACD;AACF;AACF;AAED;A7C2haA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6C7haE;A7C+haF;AACA;A6C7haE;AACE;AACA;A7C+haJ;A6C9haI;AACE;AACA;AACD;AAED;A7C+haJ;A6C9haI;AAEA;A7C+haJ;A6C9haI;AAEA;A7C+haJ;A6C9haI;A7CgiaJ;A6C9haI;AACE;AACE;AACD;AACF;AACF;AAED;A7C+haF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Cliae;A7Coiaf;A6CniaI;AACA;AAEI;AACE;AACD;AACF;AAEC;AACA;AACA;AACE;AACD;AACF;AAEH;AACD;AAED;A7CiiaF;AACA;AACA;A6CjiaI;AACD;A7CmiaH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8CpuaA;A9CsuaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8CpuaA;A9CsuaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8CpuaO;AACL;AACA;AAEA;A9CquaF;AACA;AACA;A8CpuaE;AACE;A9CsuaJ;A8CpuaI;AAEA;AACD;AAED;A9CouaF;AACA;AACA;AACA;A8CpuaE;AACE;A9CsuaJ;A8CpuaI;AACE;AACD;AACF;A9CsuaH;A8CpuaE;AAAyB;AAAN;AAAM;A9Cyua3B;A8CxuaI;AACE;AACD;AACC;AACD;AACF;AACF;AAED;A9CyuaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8CzuaO;AACL;AACA;AACA;AAEA;A9C0uaF;AACA;AACA;A8CzuaE;AACE;AACA;AACD;AAED;A9C0uaF;AACA;AACA;AACA;A8C1uaE;AACE;AACA;A9C4uaJ;A8C3uaI;AACE;AACD;AACC;AACD;AACF;A9C6uaH;A8C3uaE;AACE;A9C6uaJ;A8C9ua2B;AAAN;AAAM;A9Ckva3B;A8ChvaI;A9CkvaJ;A8CjvaI;AACE;AACD;AACF;AACF;A9CmvaD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Cz1aA;A/C21aA;A+C11aA;A/C41aA;A+C31aA;A/C61aA;A+C51aA;A/C81aA;A+C71aA;A/C+1aA;A+Cx1aA;A/C01aA;A+Cz1aA;A/C21aA;A+C11aA;A/C41aA;A+C31aA;A/C61aA;A+C33aA;A/C63aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+C32aA;AACA;AAEA;A/C42aA;A+C32aA;AAEA;A/C42aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+C32aO;AACL;A/C62aF;A+C52aE;AACE;AAAgB;AAA0C;AAC1D;AACA;AACD;A/Cg3aH;A+C/2aE;AAAQ;AAAO;AAAR;AACR;AAED;A/Cm3aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Cn3aO;AACL;AAEA;A/Co3aF;A+Cn3aE;AACE;AACA;AACA;AACA;AACA;AACD;A/Cq3aH;A+Cn3aE;AACA;AACE;AACA;A/Cq3aJ;A+Cp3aI;A/Cs3aJ;AACA;AACA;A+Cp3aI;AACE;AACD;AATU;A/Cg4af;A+Cp3aE;AACE;A/Cs3aJ;A+Cr3aI;AACE;AACE;AACA;AACA;AAGD;AACF;A/Cq3aL;A+Cp3aI;AACE;AACD;A/Cs3aL;A+Cr3aI;AACE;AACD;AACF;A/Cu3aH;A+Cr3aE;AACD;AAED;A/Cs3aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Ct3aO;AACL;AACE;AACD;A/Cw3aH;A+Ct3aE;A/Cw3aF;A+Cr3aE;A/Cu3aF;A+Ct3aE;AACA;AACA;A/Cw3aF;A+Ct3aE;AACE;AACD;A/Cw3aH;A+Ct3aE;AACA;A/Cw3aF;A+Cv3aE;AACE;AACD;A/Cy3aH;A+Cv3aE;AACQ;AAAA;AAEJ;AAOE;AACD;A/Cm3aP;A+Cl3aM;AACE;AAD0B;AAG5B;AAEgB;AAAA;AACjB;AACJ;AAED;A/Cm3aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Cn3aO;AACL;A/Cq3aF;A+Cp3aE;AACE;AACD;A/Cs3aH;A+Cr3aE;AACD;AAED;A/Cs3aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Ct3aO;AACL;AAGA;A/Cs3aF;A+Cr3aE;AACA;AAMA;AACA;A/Ck3aF;A+Cj3aE;AACE;AACD;A/Cm3aH;AACA;A+Cj3aE;AAEA;AACD;AAED;A/Ci3aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Cj3aO;AACL;AAEA;A/Ck3aF;A+Cj3aE;AACA;A/Cm3aF;A+Cl3aE;AACE;AACA;AACD;A/Co3aH;A+Cn3aE;AACD;AAED;A/Co3aA;AACA;AACA;AACA;AACA;A+Cp3aO;AACL;A/Cs3aF;A+Cr3aE;AACE;AACA;AACA;AACiC;AAAA;A/Cw3arC;A+Cl3aI;AAEA;A/Cm3aJ;A+Cj3aI;AACE;AACE;AAA4B;AAE/B;AACC;AACE;AAA4B;AAE/B;AACF;A/Cm3aH;A+Cl3aE;AACD;AAED;A/Cm3aA;AACA;AACA;AACA;AACA;AACA;AACA;A+Cn3aA;AACE;AACE;AACD;A/Cq3aH;A+Cp3aE;AACA;AAMA;AACD;AAED;A/Cg3aA;AACA;AACA;AACA;AACA;AACA;A+Ch3aA;AACE;AACD;AAED;A/Ci3aA;AACA;AACA;AACA;AACA;AACA;AACA;A+Cj3aO;AACL;AACE;AACE;AACD;A/Cm3aL;A+Ct3agC;AAM5B;AACA;AAEA;A/Ck3aJ;A+Cj3aI;AACA;AACD;AACF;AAED;A/Ck3aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Cl3aO;AACL;A/Co3aF;A+Cn3aE;AAIE;AAGM;AAKA;AACD;AARH;AAUa;AAAA;AACJ;AAAA;AAEZ;A/C62aH;AACA;A+C52aE;AACD;A/C82aD;AACA;AACA;AACA;AACA;AACA;AACA;AgD3xbA;AhD6xbA;AgD1xbA;AhD4xbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgD1xbA;AhD4xbA;AgD1xbA;AACE;AACA;AACE;AACD;AhD4xbH;AACA;AgD3xbE;AACE;AACD;AAED;AACA;AhD4xbF;AACA;AgD5xbE;AACE;AACD;AAED;AhD6xbF;AACA;AgD7xbE;AACD;AAED;AhD8xbA;AACA;AACA;AACA;AACA;AACA;AgD9xbO;AACL;AACD;AhDgybD;AACA;AACA;AFl1bA;AACA","file":"amp-form-0.1.max.js","sourcesContent":["(self.AMP=self.AMP||[]).push({n:\"amp-form\",v:\"1910040511210\",f:(function(AMP,_){\n$1\n})});","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.CSS = void 0;\nvar CSS = \"form.amp-form-submit-error [submit-error],form.amp-form-submit-success [submit-success],form.amp-form-submitting [submitting]{display:block}textarea[autoexpand]:not(.i-amphtml-textarea-max){overflow:hidden!important}.i-amphtml-textarea-clone{visibility:hidden;position:absolute;top:-9999px;left:-9999px;height:0!important}.i-amphtml-validation-bubble{transform:translate(-50%,-100%);background-color:#fff;box-shadow:0 5px 15px 0 rgba(0,0,0,0.5);max-width:200px;position:absolute;display:block;box-sizing:border-box;padding:10px;border-radius:5px}.i-amphtml-validation-bubble:after{content:\\\" \\\";position:absolute;bottom:-8px;left:30px;width:0;height:0;border-left:8px solid transparent;border-right:8px solid transparent;border-top:8px solid #fff}[visible-when-invalid]{color:red}\\n/*# sourceURL=/extensions/amp-form/0.1/amp-form.css*/\";\nexports.CSS = CSS;\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.handleInitialOverflowElements = handleInitialOverflowElements;\nexports.getHasOverflow = getHasOverflow;\nexports.maybeResizeTextarea = maybeResizeTextarea;\nexports.AmpFormTextarea = void 0;\n\nvar _ampEvents = require(\"../../../src/amp-events\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _style = require(\"../../../src/style\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _dom = require(\"../../../src/dom\");\n\nvar _eventHelper = require(\"../../../src/event-helper\");\n\nvar _rateLimit = require(\"../../../src/utils/rate-limit\");\n\nvar _types = require(\"../../../src/types\");\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar AMP_FORM_TEXTAREA_EXPAND_ATTR = 'autoexpand';\nvar MIN_EVENT_INTERVAL_MS = 100;\nvar AMP_FORM_TEXTAREA_CLONE_CSS = 'i-amphtml-textarea-clone';\nvar AMP_FORM_TEXTAREA_MAX_CSS = 'i-amphtml-textarea-max';\nvar AMP_FORM_TEXTAREA_HAS_EXPANDED_DATA = 'iAmphtmlHasExpanded';\n/**\n * Install expandable textarea behavior for the given form.\n *\n * This class should be able to be removed when browsers implement\n * `height: max-content` for the textarea element.\n * https://github.com/w3c/csswg-drafts/issues/2141\n */\n\nvar AmpFormTextarea =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Install, monitor and cleanup the document as `textarea[autoexpand]`\n   * elements are added and removed.\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  AmpFormTextarea.install = function install(ampdoc) {\n    var root = ampdoc.getRootNode();\n    var ampFormTextarea = null;\n\n    var maybeInstall = function maybeInstall() {\n      var autoexpandTextarea = root.querySelector('textarea[autoexpand]');\n\n      if (autoexpandTextarea && !ampFormTextarea) {\n        ampFormTextarea = new AmpFormTextarea(ampdoc);\n        return;\n      }\n\n      if (!autoexpandTextarea && ampFormTextarea) {\n        ampFormTextarea.dispose();\n        ampFormTextarea = null;\n        return;\n      }\n    };\n\n    (0, _eventHelper.listen)(root, _ampEvents.AmpEvents.DOM_UPDATE, maybeInstall);\n    maybeInstall();\n  }\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  ;\n\n  function AmpFormTextarea(ampdoc) {\n    var root = ampdoc.getRootNode();\n    /** @private @const */\n\n    this.doc_ = root.ownerDocument || root;\n    /** @private @const */\n\n    this.win_ =\n    /** @type {!Window} */\n    (0, _log.devAssert)(this.doc_.defaultView);\n    /** @private @const */\n\n    this.viewport_ = _services.Services.viewportForDoc(ampdoc);\n    /** @private */\n\n    this.unlisteners_ = [];\n    this.unlisteners_.push((0, _eventHelper.listen)(root, 'input', function (e) {\n      var element = (0, _log.dev)().assertElement(e.target);\n\n      if (element.tagName != 'TEXTAREA' || !element.hasAttribute(AMP_FORM_TEXTAREA_EXPAND_ATTR)) {\n        return;\n      }\n\n      maybeResizeTextarea(element);\n    }));\n    this.unlisteners_.push((0, _eventHelper.listen)(root, 'mousedown', function (e) {\n      if (e.which != 1) {\n        return;\n      }\n\n      var element = (0, _log.dev)().assertElement(e.target); // Handle all text area drag as we want to measure mutate and notify\n      // the viewer of possible doc height changes.\n\n      if (element.tagName != 'TEXTAREA') {\n        return;\n      }\n\n      handleTextareaDrag(element);\n    }));\n    var cachedTextareaElements = root.querySelectorAll('textarea');\n    this.unlisteners_.push((0, _eventHelper.listen)(root, _ampEvents.AmpEvents.DOM_UPDATE, function () {\n      cachedTextareaElements = root.querySelectorAll('textarea');\n    }));\n    var throttledResize = (0, _rateLimit.throttle)(this.win_, function (e) {\n      if (e.relayoutAll) {\n        resizeTextareaElements(cachedTextareaElements);\n      }\n    }, MIN_EVENT_INTERVAL_MS);\n    this.unlisteners_.push(this.viewport_.onResize(throttledResize));\n    handleInitialOverflowElements(cachedTextareaElements);\n  }\n  /**\n   * Cleanup any consumed resources\n   */\n\n\n  var _proto = AmpFormTextarea.prototype;\n\n  _proto.dispose = function dispose() {\n    this.unlisteners_.forEach(function (unlistener) {\n      return unlistener();\n    });\n  };\n\n  return AmpFormTextarea;\n}();\n/**\n * For now, warn if textareas with initial overflow are present, and\n * prevent them from becoming autoexpand textareas.\n * @param {!IArrayLike<!Element>} textareas\n * @return {!Promise}\n */\n\n\nexports.AmpFormTextarea = AmpFormTextarea;\n\nfunction handleInitialOverflowElements(textareas) {\n  return Promise.all((0, _types.toArray)(textareas).map(function (element) {\n    return getHasOverflow(element).then(function (hasOverflow) {\n      if (hasOverflow) {\n        (0, _log.user)().warn('AMP-FORM', '\"textarea[autoexpand]\" with initially scrolling content ' + 'will not autoexpand.\\n' + 'See https://github.com/ampproject/amphtml/issues/20839');\n        element.removeAttribute(AMP_FORM_TEXTAREA_EXPAND_ATTR);\n      }\n    });\n  }));\n}\n/**\n * Measure if any overflow is present on the element.\n * @param {!Element} element\n * @return {!Promise<boolean>}\n * @visibleForTesting\n */\n\n\nfunction getHasOverflow(element) {\n  var resources = _services.Services.resourcesForDoc(element);\n\n  return resources.measureElement(function () {\n    return element.\n    /*OK*/\n    scrollHeight > element.\n    /*OK*/\n    clientHeight;\n  });\n}\n/**\n * Attempt to resize all textarea elements\n * @param {!IArrayLike<!Element>} elements\n */\n\n\nfunction resizeTextareaElements(elements) {\n  (0, _dom.iterateCursor)(elements, function (element) {\n    if (element.tagName != 'TEXTAREA' || !element.hasAttribute(AMP_FORM_TEXTAREA_EXPAND_ATTR)) {\n      return;\n    }\n\n    maybeResizeTextarea(element);\n  });\n}\n/**\n * This makes no assumptions about the location of the resize handle, and it\n * assumes that if the user drags the mouse at any position and the height of\n * the textarea changes, then the user intentionally resized the textarea.\n * @param {!Element} element\n */\n\n\nfunction handleTextareaDrag(element) {\n  var resources = _services.Services.resourcesForDoc(element);\n\n  Promise.all([resources.measureElement(function () {\n    return element.\n    /*OK*/\n    scrollHeight;\n  }), (0, _eventHelper.listenOncePromise)(element, 'mouseup')]).then(function (results) {\n    var heightMouseDown = results[0];\n    var heightMouseUp = 0;\n    return resources.measureMutateElement(element, function () {\n      heightMouseUp = element.\n      /*OK*/\n      scrollHeight;\n    }, function () {\n      maybeRemoveResizeBehavior(element, heightMouseDown, heightMouseUp);\n    });\n  });\n}\n/**\n * Remove the resize behavior if a user drags the resize handle and changes\n * the height of the textarea.\n * @param {!Element} element\n * @param {number} startHeight\n * @param {number} endHeight\n */\n\n\nfunction maybeRemoveResizeBehavior(element, startHeight, endHeight) {\n  if (startHeight != endHeight) {\n    element.removeAttribute(AMP_FORM_TEXTAREA_EXPAND_ATTR);\n  }\n}\n/**\n * Resize the textarea to fit its current text, by expanding or shrinking if\n * needed.\n * @param {!Element} element\n * @return {!Promise}\n * @visibleForTesting\n */\n\n\nfunction maybeResizeTextarea(element) {\n  var resources = _services.Services.resourcesForDoc(element);\n\n  var win =\n  /** @type {!Window} */\n  (0, _log.devAssert)(element.ownerDocument.defaultView);\n  var offset = 0;\n  var scrollHeight = 0;\n  var maxHeight = 0; // The minScrollHeight is the minimimum height required to contain the\n  // text content without showing a scrollbar.\n  // This is different than scrollHeight, which is the larger of: 1. the\n  // element's content, or 2. the element itself.\n\n  var minScrollHeightPromise = getShrinkHeight(element);\n  return resources.measureMutateElement(element, function () {\n    var computed = (0, _style.computedStyle)(win, element);\n    scrollHeight = element.\n    /*OK*/\n    scrollHeight;\n    var maybeMaxHeight = parseInt(computed.getPropertyValue('max-height'), 10);\n    maxHeight = isNaN(maybeMaxHeight) ? Infinity : maybeMaxHeight;\n\n    if (computed.getPropertyValue('box-sizing') == 'content-box') {\n      offset = -parseInt(computed.getPropertyValue('padding-top'), 10) + -parseInt(computed.getPropertyValue('padding-bottom'), 10);\n    } else {\n      offset = parseInt(computed.getPropertyValue('border-top-width'), 10) + parseInt(computed.getPropertyValue('border-bottom-width'), 10);\n    }\n  }, function () {\n    return minScrollHeightPromise.then(function (minScrollHeight) {\n      var height = minScrollHeight + offset; // Prevent the scrollbar from appearing\n      // unless the text is beyond the max-height\n\n      element.classList.toggle(AMP_FORM_TEXTAREA_MAX_CSS, height > maxHeight); // Prevent the textarea from shrinking if it has not yet expanded.\n\n      var hasExpanded = AMP_FORM_TEXTAREA_HAS_EXPANDED_DATA in element.dataset;\n      var shouldResize = hasExpanded || scrollHeight <= minScrollHeight;\n\n      if (shouldResize) {\n        element.dataset[AMP_FORM_TEXTAREA_HAS_EXPANDED_DATA] = ''; // Set the textarea height to the height of the text\n\n        (0, _style.setStyle)(element, 'height', (0, _style.px)(minScrollHeight + offset));\n      }\n    });\n  });\n}\n/**\n * If shrink behavior is enabled, get the amount to shrink or expand. This\n * uses a more expensive method to calculate the new height creating a temporary\n * clone of the node and setting its height to 0 to get the minimum scrollHeight\n * of the element's contents.\n * @param {!Element} textarea\n * @return {!Promise<number>}\n */\n\n\nfunction getShrinkHeight(textarea) {\n  var doc =\n  /** @type {!Document} */\n  (0, _log.devAssert)(textarea.ownerDocument);\n  var win =\n  /** @type {!Window} */\n  (0, _log.devAssert)(doc.defaultView);\n  var body =\n  /** @type {!HTMLBodyElement} */\n  (0, _log.devAssert)(doc.body);\n\n  var resources = _services.Services.resourcesForDoc(textarea);\n\n  var clone = textarea.cloneNode(\n  /*deep*/\n  false);\n  clone.classList.add(AMP_FORM_TEXTAREA_CLONE_CSS);\n  var cloneWidth = 0;\n  var resultingHeight = 0;\n  var shouldKeepTop = false;\n  return resources.measureMutateElement(body, function () {\n    var computed = (0, _style.computedStyle)(win, textarea);\n    var maxHeight = parseInt(computed.getPropertyValue('max-height'), 10); // TODO(cvializ): what if it's a percent?\n\n    cloneWidth = parseInt(computed.getPropertyValue('width'), 10); // maxHeight is NaN if the max-height property is 'none'.\n\n    shouldKeepTop = isNaN(maxHeight) || textarea.\n    /*OK*/\n    scrollHeight < maxHeight;\n  }, function () {\n    // Prevent a jump from the textarea element scrolling\n    if (shouldKeepTop) {\n      textarea.\n      /*OK*/\n      scrollTop = 0;\n    } // Keep the clone's width consistent if the textarea was sized relative\n    // to its parent element.\n\n\n    (0, _style.setStyle)(clone, 'width', (0, _style.px)(cloneWidth)); // Append the clone to the DOM so its scrollHeight can be read\n\n    doc.body.appendChild(clone);\n  }).then(function () {\n    return resources.measureMutateElement(body, function () {\n      resultingHeight = clone.\n      /*OK*/\n      scrollHeight;\n    }, function () {\n      (0, _dom.removeElement)(clone);\n    });\n  }).then(function () {\n    return resultingHeight;\n  });\n}\n\n},{\"../../../src/amp-events\":12,\"../../../src/dom\":18,\"../../../src/event-helper\":21,\"../../../src/log\":26,\"../../../src/services\":32,\"../../../src/style\":36,\"../../../src/types\":37,\"../../../src/utils/rate-limit\":46}],3:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.checkUserValidityAfterInteraction_ = checkUserValidityAfterInteraction_;\nexports.AmpFormService = exports.AmpForm = void 0;\n\nvar _actionConstants = require(\"../../../src/action-constants\");\n\nvar _ampEvents = require(\"../../../src/amp-events\");\n\nvar _ampFormTextarea = require(\"./amp-form-textarea\");\n\nvar _asyncInput = require(\"../../../src/async-input\");\n\nvar _ampForm = require(\"../../../build/amp-form-0.1.css\");\n\nvar _promise = require(\"../../../src/utils/promise\");\n\nvar _formVerifiers = require(\"./form-verifiers\");\n\nvar _formDirtiness = require(\"./form-dirtiness\");\n\nvar _formEvents = require(\"./form-events\");\n\nvar _formSubmitService = require(\"./form-submit-service\");\n\nvar _url = require(\"../../../src/url\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _ssrTemplateHelper = require(\"../../../src/ssr-template-helper\");\n\nvar _dom = require(\"../../../src/dom\");\n\nvar _eventHelper = require(\"../../../src/event-helper\");\n\nvar _formDataWrapper = require(\"../../../src/form-data-wrapper\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _css = require(\"../../../src/css\");\n\nvar _form = require(\"../../../src/form\");\n\nvar _formValidators = require(\"./form-validators\");\n\nvar _mode = require(\"../../../src/mode\");\n\nvar _xhrUtils = require(\"../../../src/utils/xhr-utils\");\n\nvar _formProxy = require(\"./form-proxy\");\n\nvar _styleInstaller = require(\"../../../src/style-installer\");\n\nvar _types = require(\"../../../src/types\");\n\nvar _analytics = require(\"../../../src/analytics\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nvar TAG = 'amp-form';\n/**\n * A list of external dependencies that can be included in forms.\n * @const {!Array<string>}\n */\n\nvar EXTERNAL_DEPS = ['amp-selector'];\n/** @const @enum {string} */\n\nvar FormState = {\n  INITIAL: 'initial',\n  VERIFYING: 'verifying',\n  VERIFY_ERROR: 'verify-error',\n  SUBMITTING: 'submitting',\n  SUBMIT_ERROR: 'submit-error',\n  SUBMIT_SUCCESS: 'submit-success'\n};\n/** @const @enum {string} */\n\nvar UserValidityState = {\n  NONE: 'none',\n  USER_VALID: 'valid',\n  USER_INVALID: 'invalid'\n};\n/** @private @const {string} */\n\nvar REDIRECT_TO_HEADER = 'AMP-Redirect-To';\n/**\n * Time to wait for services / async input before throwing an error.\n * @private @const {number}\n */\n\nvar SUBMIT_TIMEOUT = 10000;\n\nvar AmpForm =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Adds functionality to the passed form element and listens to submit event.\n   * @param {!HTMLFormElement} element\n   * @param {string} id\n   */\n  function AmpForm(element, id) {\n    var _this = this;\n\n    //TODO(dvoytenko, #7063): Remove the try catch.\n    try {\n      (0, _formProxy.installFormProxy)(element);\n    } catch (e) {\n      (0, _log.dev)().error(TAG, 'form proxy failed to install', e);\n    }\n\n    (0, _form.setFormForElement)(element, this);\n    /** @private @const {string} */\n\n    this.id_ = id;\n    /** @const @private {!Window} */\n\n    this.win_ = (0, _types.toWin)(element.ownerDocument.defaultView);\n    /** @const @private {!../../../src/service/timer-impl.Timer} */\n\n    this.timer_ = _services.Services.timerFor(this.win_);\n    /** @const @private {!../../../src/service/url-replacements-impl.UrlReplacements} */\n\n    this.urlReplacement_ = _services.Services.urlReplacementsForDoc(element);\n    /** @private {?Promise} */\n\n    this.dependenciesPromise_ = null;\n    /** @const @private {!HTMLFormElement} */\n\n    this.form_ = element;\n    /** @const @private {!../../../src/service/ampdoc-impl.AmpDoc}  */\n\n    this.ampdoc_ = _services.Services.ampdoc(this.form_);\n    /** @const @private {!../../../src/service/template-impl.Templates} */\n\n    this.templates_ = _services.Services.templatesFor(this.win_);\n    /** @const @private {!../../../src/service/xhr-impl.Xhr} */\n\n    this.xhr_ = _services.Services.xhrFor(this.win_);\n    /** @const @private {!../../../src/service/action-impl.ActionService} */\n\n    this.actions_ = _services.Services.actionServiceForDoc(this.form_);\n    /** @const @private {!../../../src/service/resources-interface.ResourcesInterface} */\n\n    this.resources_ = _services.Services.resourcesForDoc(this.form_);\n    /** @const @private {!../../../src/service/viewer-interface.ViewerInterface}  */\n\n    this.viewer_ = _services.Services.viewerForDoc(this.form_);\n    /**\n     * @const {!../../../src/ssr-template-helper.SsrTemplateHelper}\n     * @private\n     */\n\n    this.ssrTemplateHelper_ = new _ssrTemplateHelper.SsrTemplateHelper(TAG, this.viewer_, this.templates_);\n    /** @const @private {string} */\n\n    this.method_ = (this.form_.getAttribute('method') || 'GET').toUpperCase();\n    /** @const @private {string} */\n\n    this.target_ = this.form_.getAttribute('target');\n    /** @private {?string} */\n\n    this.xhrAction_ = this.getXhrUrl_('action-xhr');\n    /** @const @private {?string} */\n\n    this.xhrVerify_ = this.getXhrUrl_('verify-xhr');\n    /** @const @private {boolean} */\n\n    this.shouldValidate_ = !this.form_.hasAttribute('novalidate'); // Need to disable browser validation in order to allow us to take full\n    // control of this. This allows us to trigger validation APIs and reporting\n    // when we need to.\n\n    this.form_.setAttribute('novalidate', '');\n\n    if (!this.shouldValidate_) {\n      this.form_.setAttribute('amp-novalidate', '');\n    }\n\n    this.form_.classList.add('i-amphtml-form');\n    /** @private {!FormState} */\n\n    this.state_ = FormState.INITIAL;\n    var inputs = this.form_.elements;\n\n    for (var i = 0; i < inputs.length; i++) {\n      var name = inputs[i].name;\n      (0, _log.userAssert)(name != _url.SOURCE_ORIGIN_PARAM && name != _formVerifiers.FORM_VERIFY_PARAM, 'Illegal input name, %s found: %s', name, inputs[i]);\n    }\n    /** @const @private {!./form-dirtiness.FormDirtiness} */\n\n\n    this.dirtinessHandler_ = new _formDirtiness.FormDirtiness(this.form_, this.win_);\n    /** @const @private {!./form-validators.FormValidator} */\n\n    this.validator_ = (0, _formValidators.getFormValidator)(this.form_);\n    /** @const @private {!./form-verifiers.FormVerifier} */\n\n    this.verifier_ = (0, _formVerifiers.getFormVerifier)(this.form_, function () {\n      return _this.handleXhrVerify_();\n    });\n    this.actions_.installActionHandler(this.form_, this.actionHandler_.bind(this));\n    this.installEventHandlers_();\n    this.installInputMasking_();\n    /** @private {?Promise} */\n\n    this.xhrSubmitPromise_ = null;\n    /** @private {?Promise} */\n\n    this.renderTemplatePromise_ = null;\n    /** @private {?./form-submit-service.FormSubmitService} */\n\n    this.formSubmitService_ = null;\n\n    _services.Services.formSubmitForDoc(element).then(function (service) {\n      _this.formSubmitService_ = service;\n    });\n  }\n  /**\n   * Gets and validates an attribute for form request URLs.\n   * @param {string} attribute\n   * @return {?string}\n   * @private\n   */\n\n\n  var _proto = AmpForm.prototype;\n\n  _proto.getXhrUrl_ = function getXhrUrl_(attribute) {\n    var url = this.form_.getAttribute(attribute);\n\n    if (url) {\n      var urlService = _services.Services.urlForDoc(this.form_);\n\n      urlService.assertHttpsUrl(url, this.form_, attribute);\n      (0, _log.userAssert)(!urlService.isProxyOrigin(url), 'form %s should not be on AMP CDN: %s', attribute, this.form_);\n    }\n\n    return url;\n  }\n  /**\n   * Builds fetch request data for amp-form elements.\n   * @param {string} url\n   * @param {string} method\n   * @param {!Object<string, string>=} opt_extraFields\n   * @param {!Array<string>=} opt_fieldBlacklist\n   * @return {!Promise<!FetchRequestDef>}\n   */\n  ;\n\n  _proto.requestForFormFetch = function requestForFormFetch(url, method, opt_extraFields, opt_fieldBlacklist) {\n    var xhrUrl, body;\n    var isHeadOrGet = method == 'GET' || method == 'HEAD';\n\n    if (isHeadOrGet) {\n      this.assertNoSensitiveFields_();\n      var values = this.getFormAsObject_();\n\n      if (opt_fieldBlacklist) {\n        opt_fieldBlacklist.forEach(function (name) {\n          delete values[name];\n        });\n      }\n\n      if (opt_extraFields) {\n        (0, _object.deepMerge)(values, opt_extraFields);\n      }\n\n      xhrUrl = (0, _url.addParamsToUrl)(url, values);\n    } else {\n      xhrUrl = url;\n      body = (0, _formDataWrapper.createFormDataWrapper)(this.win_, this.form_);\n\n      if (opt_fieldBlacklist) {\n        opt_fieldBlacklist.forEach(function (name) {\n          body.delete(name);\n        });\n      }\n\n      for (var key in opt_extraFields) {\n        body.append(key, opt_extraFields[key]);\n      }\n    }\n    /** @type {!FetchRequestDef}*/\n\n\n    var request = {\n      xhrUrl: xhrUrl,\n      fetchOpt: (0, _object.dict)({\n        'body': body,\n        'method': method,\n        'credentials': 'include',\n        'headers': (0, _object.dict)({\n          'Accept': 'application/json'\n        })\n      })\n    };\n    return (0, _xhrUtils.getViewerAuthTokenIfAvailable)(this.form_).then(function (token) {\n      if (token) {\n        (0, _log.userAssert)(request.fetchOpt['method'] == 'POST', 'Cannot attach auth token with GET request.');\n        body.append('ampViewerAuthToken', token);\n      }\n\n      return request;\n    });\n  }\n  /**\n   * Setter to change cached action-xhr.\n   * @param {string} url\n   */\n  ;\n\n  _proto.setXhrAction = function setXhrAction(url) {\n    this.xhrAction_ = url;\n  }\n  /**\n   * Handle actions that require at least high trust.\n   * @param {!../../../src/service/action-impl.ActionInvocation} invocation\n   * @return {?Promise}\n   * @private\n   */\n  ;\n\n  _proto.actionHandler_ = function actionHandler_(invocation) {\n    var _this2 = this;\n\n    if (!invocation.satisfiesTrust(_actionConstants.ActionTrust.HIGH)) {\n      return null;\n    }\n\n    if (invocation.method == 'submit') {\n      return this.whenDependenciesReady_().then(function () {\n        return _this2.handleSubmitAction_(invocation);\n      });\n    } else if (invocation.method === 'clear') {\n      this.handleClearAction_();\n    }\n\n    return null;\n  }\n  /**\n   * Returns a promise that will be resolved when all dependencies used inside\n   * the form tag are loaded and built (e.g. amp-selector) or 2 seconds timeout\n   * - whichever is first.\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto.whenDependenciesReady_ = function whenDependenciesReady_() {\n    if (this.dependenciesPromise_) {\n      return this.dependenciesPromise_;\n    }\n\n    var depElements = this.form_.\n    /*OK*/\n    querySelectorAll(EXTERNAL_DEPS.join(',')); // Wait for an element to be built to make sure it is ready.\n\n    var promises = (0, _types.toArray)(depElements).map(function (el) {\n      return el.whenBuilt();\n    });\n    return this.dependenciesPromise_ = this.waitOnPromisesOrTimeout_(promises, 2000);\n  }\n  /** @private */\n  ;\n\n  _proto.installEventHandlers_ = function installEventHandlers_() {\n    var _this3 = this;\n\n    this.ampdoc_.whenNextVisible().then(function () {\n      var autofocus = _this3.form_.querySelector('[autofocus]');\n\n      if (autofocus) {\n        (0, _dom.tryFocus)(autofocus);\n      }\n    });\n    this.form_.addEventListener('submit', this.handleSubmitEvent_.bind(this), true);\n    this.form_.addEventListener('blur', function (e) {\n      checkUserValidityAfterInteraction_((0, _log.dev)().assertElement(e.target));\n\n      _this3.validator_.onBlur(e);\n    }, true); //  Form verification is not supported when SSRing templates is enabled.\n\n    if (!this.ssrTemplateHelper_.isSupported()) {\n      this.form_.addEventListener('change', function (e) {\n        _this3.verifier_.onCommit().then(function (_ref) {\n          var updatedElements = _ref.updatedElements,\n              errors = _ref.errors;\n          updatedElements.forEach(checkUserValidityAfterInteraction_); // Tell the validation to reveal any input.validationMessage added\n          // by the form verifier.\n\n          _this3.validator_.onBlur(e); // Only make the verify XHR if the user hasn't pressed submit.\n\n\n          if (_this3.state_ === FormState.VERIFYING) {\n            if (errors.length) {\n              _this3.setState_(FormState.VERIFY_ERROR);\n\n              _this3.renderTemplate_((0, _object.dict)({\n                'verifyErrors': errors\n              })).then(function () {\n                _this3.triggerAction_(_formEvents.FormEvents.VERIFY_ERROR, errors);\n              });\n            } else {\n              _this3.setState_(FormState.INITIAL);\n            }\n          }\n        });\n      });\n    }\n\n    this.form_.addEventListener('input', function (e) {\n      checkUserValidityAfterInteraction_((0, _log.dev)().assertElement(e.target));\n\n      _this3.validator_.onInput(e);\n    });\n  }\n  /** @private */\n  ;\n\n  _proto.installInputMasking_ = function installInputMasking_() {\n    _services.Services.inputmaskServiceForDocOrNull(this.form_).then(function (inputmaskService) {\n      if (inputmaskService) {\n        inputmaskService.install();\n      }\n    });\n  }\n  /**\n   * Triggers 'amp-form-submit' event in 'amp-analytics' and\n   * generates variables for form fields to be accessible in analytics\n   *\n   * @param {string} eventType\n   * @private\n   */\n  ;\n\n  _proto.triggerFormSubmitInAnalytics_ = function triggerFormSubmitInAnalytics_(eventType) {\n    this.assertSsrTemplate_(false, 'Form analytics not supported');\n    var formDataForAnalytics = (0, _object.dict)({});\n    var formObject = this.getFormAsObject_();\n\n    for (var k in formObject) {\n      if (Object.prototype.hasOwnProperty.call(formObject, k)) {\n        formDataForAnalytics['formFields[' + k + ']'] = formObject[k].join(',');\n      }\n    }\n\n    formDataForAnalytics['formId'] = this.form_.id;\n    this.analyticsEvent_(eventType, formDataForAnalytics);\n  }\n  /**\n   * Handles submissions through action service invocations.\n   *   e.g. <img on=tap:form.submit>\n   * @param {!../../../src/service/action-impl.ActionInvocation} invocation\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto.handleSubmitAction_ = function handleSubmitAction_(invocation) {\n    if (this.state_ == FormState.SUBMITTING || !this.checkValidity_()) {\n      return Promise.resolve(null);\n    } // `submit` has the same trust level as the AMP Action that caused it.\n\n\n    return this.submit_(invocation.trust, null);\n  }\n  /**\n   * Handles clearing the form through action service invocations.\n   * @private\n   */\n  ;\n\n  _proto.handleClearAction_ = function handleClearAction_() {\n    this.form_.reset();\n    this.setState_(FormState.INITIAL);\n    this.form_.classList.remove('user-valid');\n    this.form_.classList.remove('user-invalid');\n    var validityElements = this.form_.querySelectorAll('.user-valid, .user-invalid');\n    (0, _dom.iterateCursor)(validityElements, function (element) {\n      element.classList.remove('user-valid');\n      element.classList.remove('user-invalid');\n    });\n    var messageElements = this.form_.querySelectorAll('.visible[validation-for]');\n    (0, _dom.iterateCursor)(messageElements, function (element) {\n      element.classList.remove('visible');\n    });\n    removeValidityStateClasses(this.form_);\n  }\n  /**\n   * Note on stopImmediatePropagation usage here, it is important to emulate\n   * native browser submit event blocking. Otherwise any other submit listeners\n   * would get the event.\n   *\n   * For example, action service shouldn't trigger 'submit' event if form is\n   * actually invalid. stopImmediatePropagation allows us to make sure we don't\n   * trigger it.\n   *\n   * This prevents the default submission event in any of following cases:\n   *   - The form is still finishing a previous submission.\n   *   - The form is invalid.\n   *   - Handling an XHR submission.\n   *   - It's a non-XHR POST submission (unsupported).\n   *\n   * @param {!Event} event\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto.handleSubmitEvent_ = function handleSubmitEvent_(event) {\n    if (this.state_ == FormState.SUBMITTING || !this.checkValidity_()) {\n      event.stopImmediatePropagation();\n      event.preventDefault();\n      return Promise.resolve(null);\n    }\n\n    if (this.xhrAction_ || this.method_ == 'POST') {\n      event.preventDefault();\n    } // Submits caused by user input have high trust.\n\n\n    return this.submit_(_actionConstants.ActionTrust.HIGH, event);\n  }\n  /**\n   * Helper method that actual handles the different cases (post, get, xhr...).\n   * @param {ActionTrust} trust\n   * @param {?Event} event\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto.submit_ = function submit_(trust, event) {\n    var _this4 = this;\n\n    try {\n      var _event = {\n        form: this.form_,\n        actionXhrMutator: this.setXhrAction.bind(this)\n      };\n      (0, _log.devAssert)(this.formSubmitService_).fire(_event);\n    } catch (e) {\n      (0, _log.dev)().error(TAG, 'Form submit service failed: %s', e);\n    } // Get our special fields\n\n\n    var varSubsFields = this.getVarSubsFields_();\n    var asyncInputs = this.form_.getElementsByClassName(_asyncInput.AsyncInputClasses.ASYNC_INPUT);\n    this.dirtinessHandler_.onSubmitting(); // Do any assertions we may need to do\n    // For NonXhrGET\n    // That way we can determine if\n    // we can submit synchronously\n\n    if (!this.xhrAction_ && this.method_ == 'GET') {\n      this.assertSsrTemplate_(false, 'Non-XHR GETs not supported.');\n      this.assertNoSensitiveFields_(); // If we have no async inputs, we can just submit synchronously\n\n      if (asyncInputs.length === 0) {\n        for (var i = 0; i < varSubsFields.length; i++) {\n          this.urlReplacement_.expandInputValueSync(varSubsFields[i]);\n        }\n        /**\n         * If the submit was called with an event, then we shouldn't\n         * manually submit the form\n         */\n\n\n        var shouldSubmitFormElement = !event;\n        this.handleNonXhrGet_(shouldSubmitFormElement);\n        this.dirtinessHandler_.onSubmitSuccess();\n        return Promise.resolve();\n      }\n\n      if (event) {\n        event.preventDefault();\n      }\n    } // Set ourselves to the SUBMITTING State\n\n\n    this.setState_(FormState.SUBMITTING); // Promises to run before submit without timeout.\n\n    var requiredActionPromises = []; // Promises to run before submitting the form\n\n    var presubmitPromises = [];\n    presubmitPromises.push(this.doVarSubs_(varSubsFields));\n    (0, _dom.iterateCursor)(asyncInputs, function (asyncInput) {\n      var asyncCall = _this4.getValueForAsyncInput_(asyncInput);\n\n      if (asyncInput.classList.contains(_asyncInput.AsyncInputClasses.ASYNC_REQUIRED_ACTION)) {\n        requiredActionPromises.push(asyncCall);\n      } else {\n        presubmitPromises.push(asyncCall);\n      }\n    });\n    return Promise.all(requiredActionPromises).then(function () {\n      return _this4.waitOnPromisesOrTimeout_(presubmitPromises, SUBMIT_TIMEOUT).then(function () {\n        return _this4.handlePresubmitSuccess_(trust);\n      }, function (error) {\n        return _this4.handlePresubmitError_(error);\n      });\n    }, function (error) {\n      return _this4.handlePresubmitError_(error);\n    });\n  }\n  /**\n   * @private\n   * Handle form error for presubmit async calls\n   * @param {*} error\n   * @return {Promise}\n   */\n  ;\n\n  _proto.handlePresubmitError_ = function handlePresubmitError_(error) {\n    var detail = (0, _object.dict)();\n\n    if (error && error.message) {\n      detail['error'] = error.message;\n    }\n\n    return this.handleSubmitFailure_(error, detail);\n  }\n  /**\n   * Get form fields that require variable substitutions\n   * @return {!IArrayLike<!HTMLInputElement>}\n   * @private\n   */\n  ;\n\n  _proto.getVarSubsFields_ = function getVarSubsFields_() {\n    // Fields that support var substitutions.\n    return this.form_.querySelectorAll('[type=\"hidden\"][data-amp-replace]');\n  }\n  /**\n   * Handle successful presubmit tasks\n   * @param {!ActionTrust} trust\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.handlePresubmitSuccess_ = function handlePresubmitSuccess_(trust) {\n    if (this.xhrAction_) {\n      return this.handleXhrSubmit_(trust);\n    } else if (this.method_ == 'POST') {\n      this.handleNonXhrPost_();\n    } else if (this.method_ == 'GET') {\n      this.handleNonXhrGet_(\n      /* shouldSubmitFormElement */\n      true);\n    }\n\n    return Promise.resolve();\n  }\n  /**\n   * Send the verify request and control the VERIFYING state.\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto.handleXhrVerify_ = function handleXhrVerify_() {\n    var _this5 = this;\n\n    if (this.state_ === FormState.SUBMITTING) {\n      return Promise.resolve();\n    }\n\n    this.setState_(FormState.VERIFYING);\n    this.triggerAction_(_formEvents.FormEvents.VERIFY, null);\n    return this.doVarSubs_(this.getVarSubsFields_()).then(function () {\n      return _this5.doVerifyXhr_();\n    });\n  }\n  /**\n   * @private\n   * @param {ActionTrust} trust\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.handleXhrSubmit_ = function handleXhrSubmit_(trust) {\n    var _this6 = this;\n\n    var p;\n\n    if (this.ssrTemplateHelper_.isSupported()) {\n      p = this.handleSsrTemplate_(trust);\n    } else {\n      this.submittingWithTrust_(trust);\n      p = this.doActionXhr_().then(function (response) {\n        return _this6.handleXhrSubmitSuccess_(response);\n      }, function (error) {\n        return _this6.handleXhrSubmitFailure_(error);\n      });\n    }\n\n    if ((0, _mode.getMode)().test) {\n      this.xhrSubmitPromise_ = p;\n    }\n\n    return p;\n  }\n  /**\n   * Handles the server side proxying and then rendering of the template.\n   * @param {ActionTrust} trust\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto.handleSsrTemplate_ = function handleSsrTemplate_(trust) {\n    var _this7 = this;\n\n    var request; // Render template for the form submitting state.\n\n    var values = this.getFormAsObject_();\n    return this.renderTemplate_(values).then(function () {\n      return _this7.actions_.trigger(_this7.form_, _formEvents.FormEvents.SUBMIT,\n      /* event */\n      null, trust);\n    }).then(function () {\n      return _this7.requestForFormFetch((0, _log.dev)().assertString(_this7.xhrAction_), _this7.method_);\n    }).then(function (formRequest) {\n      request = formRequest;\n      request.fetchOpt = (0, _xhrUtils.setupInit)(request.fetchOpt);\n      request.fetchOpt = (0, _xhrUtils.setupAMPCors)(_this7.win_, request.xhrUrl, request.fetchOpt);\n      request.xhrUrl = (0, _xhrUtils.setupInput)(_this7.win_, request.xhrUrl, request.fetchOpt);\n      return _this7.ssrTemplateHelper_.fetchAndRenderTemplate(_this7.form_, request, _this7.templatesForSsr_());\n    }).then(function (response) {\n      return _this7.handleSsrTemplateSuccess_(response);\n    }, function (error) {\n      var detail = (0, _object.dict)();\n\n      if (error && error.message) {\n        detail['error'] = error.message;\n      }\n\n      return _this7.handleSubmitFailure_(error, detail);\n    });\n  }\n  /**\n   * If present, finds and returns the success and error response templates.\n   * Note that we do not render the submitting state template and only\n   * deal with submit-success or submit-error.\n   * @return {!../../../src/ssr-template-helper.SsrTemplateDef}\n   * @private\n   */\n  ;\n\n  _proto.templatesForSsr_ = function templatesForSsr_() {\n    var successTemplate;\n    var successContainer = this.form_.querySelector('[submit-success]');\n\n    if (successContainer) {\n      successTemplate = this.templates_.maybeFindTemplate(successContainer);\n    }\n\n    var errorTemplate;\n    var errorContainer = this.form_.querySelector('[submit-error]');\n\n    if (errorContainer) {\n      errorTemplate = this.templates_.maybeFindTemplate(errorContainer);\n    }\n\n    return {\n      successTemplate: successTemplate,\n      errorTemplate: errorTemplate\n    };\n  }\n  /**\n   * Transition the form to the submit success state.\n   * @param {!JsonObject} response\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto.handleSsrTemplateSuccess_ = function handleSsrTemplateSuccess_(response) {\n    return this.handleSubmitSuccess_((0, _promise.tryResolve)(function () {\n      return response;\n    }));\n  }\n  /**\n   * Triggers the analytics and renders any template for submitting state.\n   * @param {ActionTrust} trust\n   */\n  ;\n\n  _proto.submittingWithTrust_ = function submittingWithTrust_(trust) {\n    var _this8 = this;\n\n    this.triggerFormSubmitInAnalytics_('amp-form-submit'); // After variable substitution\n\n    var values = this.getFormAsObject_(); // At the form submitting state, we want to display any template\n    // messages with the submitting attribute.\n\n    this.renderTemplate_(values).then(function () {\n      _this8.actions_.trigger(_this8.form_, _formEvents.FormEvents.SUBMIT,\n      /* event */\n      null, trust);\n    });\n  }\n  /**\n   * Perform asynchronous variable substitution on the fields that require it.\n   * @param {!IArrayLike<!HTMLInputElement>} varSubsFields\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto.doVarSubs_ = function doVarSubs_(varSubsFields) {\n    var varSubPromises = [];\n\n    for (var i = 0; i < varSubsFields.length; i++) {\n      varSubPromises.push(this.urlReplacement_.expandInputValueAsync(varSubsFields[i]));\n    }\n\n    return this.waitOnPromisesOrTimeout_(varSubPromises, 100);\n  }\n  /**\n   * Call getValue() on Async Input elements, and\n   * Create hidden inputs containing their returned values\n   * @param {!Element} asyncInput\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto.getValueForAsyncInput_ = function getValueForAsyncInput_(asyncInput) {\n    var _this9 = this;\n\n    return asyncInput.getImpl().then(function (implementation) {\n      return implementation.getValue();\n    }).then(function (value) {\n      var name = asyncInput.getAttribute(_asyncInput.AsyncInputAttributes.NAME);\n\n      var input = _this9.form_.querySelector(\"input[name=\" + (0, _css.escapeCssSelectorIdent)(name) + \"]\");\n\n      if (!input) {\n        input = (0, _dom.createElementWithAttributes)(_this9.win_.document, 'input', (0, _object.dict)({\n          'name': asyncInput.getAttribute(_asyncInput.AsyncInputAttributes.NAME),\n          'hidden': 'true'\n        }));\n      }\n\n      input.setAttribute('value', value);\n\n      _this9.form_.appendChild(input);\n    });\n  }\n  /**\n   * Send a request to the form's action endpoint.\n   * @return {!Promise<!Response>}\n   * @private\n   */\n  ;\n\n  _proto.doActionXhr_ = function doActionXhr_() {\n    return this.doXhr_((0, _log.dev)().assertString(this.xhrAction_), this.method_);\n  }\n  /**\n   * Send a request to the form's verify endpoint.\n   * @return {!Promise<!Response>}\n   * @private\n   */\n  ;\n\n  _proto.doVerifyXhr_ = function doVerifyXhr_() {\n    var _this$doXhr_;\n\n    var noVerifyFields = (0, _types.toArray)(this.form_.querySelectorAll(\"[\" + (0, _css.escapeCssSelectorIdent)(_formVerifiers.FORM_VERIFY_OPTOUT) + \"]\"));\n    var blacklist = noVerifyFields.map(function (field) {\n      return field.name || field.id;\n    });\n    return this.doXhr_((0, _log.dev)().assertString(this.xhrVerify_), this.method_, (_this$doXhr_ = {}, _this$doXhr_[_formVerifiers.FORM_VERIFY_PARAM] = true, _this$doXhr_),\n    /**opt_fieldBlacklist*/\n    blacklist);\n  }\n  /**\n   * Send a request to a form endpoint.\n   * @param {string} url\n   * @param {string} method\n   * @param {!Object<string, string>=} opt_extraFields\n   * @param {!Array<string>=} opt_fieldBlacklist\n   * @return {!Promise<!Response>}\n   * @private\n   */\n  ;\n\n  _proto.doXhr_ = function doXhr_(url, method, opt_extraFields, opt_fieldBlacklist) {\n    var _this10 = this;\n\n    this.assertSsrTemplate_(false, 'XHRs should be proxied.');\n    return this.requestForFormFetch(url, method, opt_extraFields, opt_fieldBlacklist).then(function (request) {\n      return _this10.xhr_.fetch(request.xhrUrl, request.fetchOpt);\n    });\n  }\n  /**\n   * @param {!Response} response\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto.handleXhrSubmitSuccess_ = function handleXhrSubmitSuccess_(response) {\n    var _this11 = this;\n\n    var json =\n    /** @type {!Promise<!JsonObject>} */\n    response.json();\n    return this.handleSubmitSuccess_(json).then(function () {\n      _this11.triggerFormSubmitInAnalytics_('amp-form-submit-success');\n\n      _this11.maybeHandleRedirect_(response);\n    });\n  }\n  /**\n   * Transition the form to the submit success state.\n   * @param {!Promise<!JsonObject>} jsonPromise\n   * @return {!Promise}\n   * @private visible for testing\n   */\n  ;\n\n  _proto.handleSubmitSuccess_ = function handleSubmitSuccess_(jsonPromise) {\n    var _this12 = this;\n\n    return jsonPromise.then(function (json) {\n      _this12.setState_(FormState.SUBMIT_SUCCESS);\n\n      _this12.renderTemplate_(json || {}).then(function () {\n        _this12.triggerAction_(_formEvents.FormEvents.SUBMIT_SUCCESS, json);\n\n        _this12.dirtinessHandler_.onSubmitSuccess();\n      });\n    }, function (error) {\n      (0, _log.user)().error(TAG, 'Failed to parse response JSON: %s', error);\n    });\n  }\n  /**\n   * @param {*} e\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto.handleXhrSubmitFailure_ = function handleXhrSubmitFailure_(e) {\n    var _this13 = this;\n\n    var promise;\n\n    if (e && e.response) {\n      var error =\n      /** @type {!Error} */\n      e;\n      promise = error.response.json().catch(function () {\n        return null;\n      });\n    } else {\n      promise = Promise.resolve(null);\n    }\n\n    return promise.then(function (responseJson) {\n      _this13.triggerFormSubmitInAnalytics_('amp-form-submit-error');\n\n      _this13.handleSubmitFailure_(e, responseJson);\n\n      _this13.maybeHandleRedirect_(e.response);\n    });\n  }\n  /**\n   * Transition the form the the submit error state.\n   * @param {*} error\n   * @param {!JsonObject} json\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto.handleSubmitFailure_ = function handleSubmitFailure_(error, json) {\n    var _this14 = this;\n\n    this.setState_(FormState.SUBMIT_ERROR);\n    (0, _log.user)().error(TAG, 'Form submission failed: %s', error);\n    return (0, _promise.tryResolve)(function () {\n      _this14.renderTemplate_(json).then(function () {\n        _this14.triggerAction_(_formEvents.FormEvents.SUBMIT_ERROR, json);\n\n        _this14.dirtinessHandler_.onSubmitError();\n      });\n    });\n  }\n  /** @private */\n  ;\n\n  _proto.handleNonXhrPost_ = function handleNonXhrPost_() {\n    // non-XHR POST requests are not supported.\n    (0, _log.userAssert)(false, 'Only XHR based (via action-xhr attribute) submissions are supported ' + 'for POST requests. %s', this.form_);\n  }\n  /**\n   * Triggers Submit Analytics,\n   * and Form Element submit if passed by param.\n   * shouldSubmitFormElement should ONLY be true\n   * If the submit event.preventDefault was called\n   * @param {boolean} shouldSubmitFormElement\n   */\n  ;\n\n  _proto.handleNonXhrGet_ = function handleNonXhrGet_(shouldSubmitFormElement) {\n    this.triggerFormSubmitInAnalytics_('amp-form-submit');\n\n    if (shouldSubmitFormElement) {\n      this.form_.submit();\n    }\n\n    this.setState_(FormState.INITIAL);\n  }\n  /**\n   * Asserts that SSR support is the same as value.\n   * @param {boolean} value\n   * @param {string} msg\n   * @private\n   */\n  ;\n\n  _proto.assertSsrTemplate_ = function assertSsrTemplate_(value, msg) {\n    var supported = this.ssrTemplateHelper_.isSupported();\n    (0, _log.userAssert)(supported === value, '[amp-form]: viewerRenderTemplate | %s', msg);\n  }\n  /**\n   * Fail if there are password or file fields present when the function\n   * is called.\n   * @private\n   */\n  ;\n\n  _proto.assertNoSensitiveFields_ = function assertNoSensitiveFields_() {\n    var fields = this.form_.querySelectorAll('input[type=password],input[type=file]');\n    (0, _log.userAssert)(fields.length == 0, 'input[type=password] or input[type=file] ' + 'may only appear in form[method=post]');\n  }\n  /**\n   * @return {boolean} False if the form is invalid.\n   * @private\n   */\n  ;\n\n  _proto.checkValidity_ = function checkValidity_() {\n    if ((0, _formValidators.isCheckValiditySupported)(this.win_.document)) {\n      // Validity checking should always occur, novalidate only circumvent\n      // reporting and blocking submission on non-valid forms.\n      var isValid = checkUserValidityOnSubmission(this.form_);\n\n      if (this.shouldValidate_) {\n        this.validator_.report();\n        return isValid;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Handles response redirect throught the AMP-Redirect-To response header.\n   * Not applicable if viewer can render templates.\n   * @param {?Response} response\n   * @private\n   */\n  ;\n\n  _proto.maybeHandleRedirect_ = function maybeHandleRedirect_(response) {\n    this.assertSsrTemplate_(false, 'Redirects not supported.');\n\n    if (!response || !response.headers) {\n      return;\n    }\n\n    var redirectTo = response.headers.get(REDIRECT_TO_HEADER);\n\n    if (redirectTo) {\n      (0, _log.userAssert)(this.target_ != '_blank', 'Redirecting to target=_blank using AMP-Redirect-To is currently ' + 'not supported, use target=_top instead. %s', this.form_);\n\n      try {\n        var urlService = _services.Services.urlForDoc(this.form_);\n\n        urlService.assertAbsoluteHttpOrHttpsUrl(redirectTo);\n        urlService.assertHttpsUrl(redirectTo, 'AMP-Redirect-To', 'Url');\n      } catch (e) {\n        (0, _log.userAssert)(false, 'The `AMP-Redirect-To` header value must be an ' + 'absolute URL starting with https://. Found %s', redirectTo);\n      }\n\n      var navigator = _services.Services.navigationForDoc(this.form_);\n\n      navigator.navigateTo(this.win_, redirectTo, REDIRECT_TO_HEADER);\n    }\n  }\n  /**\n   * Triggers either a submit-success or submit-error action with response data.\n   * @param {!FormEvents} name\n   * @param {?JsonObject|!Array<{message: string, name: string}>} detail\n   * @private\n   */\n  ;\n\n  _proto.triggerAction_ = function triggerAction_(name, detail) {\n    var event = (0, _eventHelper.createCustomEvent)(this.win_, TAG + \".\" + name, (0, _object.dict)({\n      'response': detail\n    }));\n    this.actions_.trigger(this.form_, name, event, _actionConstants.ActionTrust.HIGH);\n  }\n  /**\n   * Returns a race promise between resolving all promises or timing out.\n   * @param {!Array<!Promise>} promises\n   * @param {number} timeout\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto.waitOnPromisesOrTimeout_ = function waitOnPromisesOrTimeout_(promises, timeout) {\n    return Promise.race([Promise.all(promises), this.timer_.promise(timeout)]);\n  }\n  /**\n   * @param {string} eventType\n   * @param {!JsonObject=} opt_vars A map of vars and their values.\n   * @private\n   */\n  ;\n\n  _proto.analyticsEvent_ = function analyticsEvent_(eventType, opt_vars) {\n    (0, _analytics.triggerAnalyticsEvent)(this.form_, eventType, opt_vars);\n  }\n  /**\n   * Returns form data as an object.\n   * @return {!JsonObject}\n   * @private\n   */\n  ;\n\n  _proto.getFormAsObject_ = function getFormAsObject_() {\n    return (0, _form.getFormAsObject)(this.form_);\n  }\n  /**\n   * Adds proper classes for the state passed.\n   * @param {!FormState} newState\n   * @private\n   */\n  ;\n\n  _proto.setState_ = function setState_(newState) {\n    var previousState = this.state_;\n    this.form_.classList.remove(\"amp-form-\" + previousState);\n    this.form_.classList.add(\"amp-form-\" + newState);\n    this.cleanupRenderedTemplate_(previousState);\n    this.state_ = newState;\n  }\n  /**\n   * Renders a template based on the form state and its presence in the form.\n   * @param {!JsonObject} data\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto.renderTemplate_ = function renderTemplate_(data) {\n    var _this15 = this;\n\n    if ((0, _types.isArray)(data)) {\n      data = (0, _object.dict)();\n      (0, _log.user)().warn(TAG, \"Unexpected data type: \" + data + \". Expected non JSON array.\");\n    }\n\n    var container = this.form_.\n    /*OK*/\n    querySelector(\"[\" + this.state_ + \"]\");\n    var p = Promise.resolve();\n\n    if (container) {\n      var messageId = \"rendered-message-\" + this.id_;\n      container.setAttribute('role', 'alert');\n      container.setAttribute('aria-labeledby', messageId);\n      container.setAttribute('aria-live', 'assertive');\n\n      if (this.templates_.hasTemplate(container)) {\n        p = this.ssrTemplateHelper_.renderTemplate((0, _log.devAssert)(container), data).then(function (rendered) {\n          rendered.id = messageId;\n          rendered.setAttribute('i-amphtml-rendered', '');\n          return _this15.resources_.mutateElement((0, _log.dev)().assertElement(container), function () {\n            container.appendChild(rendered);\n            var renderedEvent = (0, _eventHelper.createCustomEvent)(_this15.win_, _ampEvents.AmpEvents.DOM_UPDATE,\n            /* detail */\n            null, {\n              bubbles: true\n            });\n            container.dispatchEvent(renderedEvent);\n          });\n        });\n      } else {\n        // TODO(vializ): This is to let AMP know that the AMP elements inside\n        // this container are now visible so they get scheduled for layout.\n        // This will be unnecessary when the AMP Layers implementation is\n        // complete.\n        this.resources_.mutateElement(container, function () {});\n      }\n    }\n\n    if ((0, _mode.getMode)().test) {\n      this.renderTemplatePromise_ = p;\n    }\n\n    return p;\n  }\n  /**\n   * Removes the template for the passed state.\n   * @param {!FormState} state\n   * @private\n   */\n  ;\n\n  _proto.cleanupRenderedTemplate_ = function cleanupRenderedTemplate_(state) {\n    var container = this.form_.\n    /*OK*/\n    querySelector(\"[\" + state + \"]\");\n\n    if (!container) {\n      return;\n    }\n\n    var previousRender = (0, _dom.childElementByAttr)(container, 'i-amphtml-rendered');\n\n    if (previousRender) {\n      (0, _dom.removeElement)(previousRender);\n    }\n  }\n  /**\n   * Returns a promise that resolves when tempalte render finishes. The promise\n   * will be null if the template render has not started.\n   * @visibleForTesting\n   * @return {*} TODO(#23582): Specify return type\n   */\n  ;\n\n  _proto.renderTemplatePromiseForTesting = function renderTemplatePromiseForTesting() {\n    return this.renderTemplatePromise_;\n  }\n  /**\n   * Returns a promise that resolves when xhr submit finishes. The promise\n   * will be null if xhr submit has not started.\n   * @visibleForTesting\n   * @return {*} TODO(#23582): Specify return type\n   */\n  ;\n\n  _proto.xhrSubmitPromiseForTesting = function xhrSubmitPromiseForTesting() {\n    return this.xhrSubmitPromise_;\n  };\n\n  return AmpForm;\n}();\n/**\n * Checks user validity for all inputs, fieldsets and the form.\n * @param {!HTMLFormElement} form\n * @return {boolean} Whether the form is currently valid or not.\n */\n\n\nexports.AmpForm = AmpForm;\n\nfunction checkUserValidityOnSubmission(form) {\n  var elements = form.querySelectorAll('input,select,textarea,fieldset');\n  (0, _dom.iterateCursor)(elements, function (element) {\n    return checkUserValidity(element);\n  });\n  return checkUserValidity(form);\n}\n/**\n * Returns the user validity state of the element.\n * @param {!Element} element\n * @return {string}\n */\n\n\nfunction getUserValidityStateFor(element) {\n  if (element.classList.contains('user-valid')) {\n    return UserValidityState.USER_VALID;\n  } else if (element.classList.contains('user-invalid')) {\n    return UserValidityState.USER_INVALID;\n  }\n\n  return UserValidityState.NONE;\n}\n/**\n * Updates class names on the element to reflect the active invalid types on it.\n *\n * @param {!Element} element\n */\n\n\nfunction updateInvalidTypesClasses(element) {\n  if (!element.validity) {\n    return;\n  }\n\n  for (var validationType in element.validity) {\n    element.classList.toggle(validationType, element.validity[validationType]);\n  }\n}\n/**\n * Removes all validity classes from elements in the given form.\n * @param {!Element} form\n */\n\n\nfunction removeValidityStateClasses(form) {\n  var dummyInput = document.createElement('input');\n\n  var _loop = function _loop(validityState) {\n    var elements = form.querySelectorAll(\".\" + (0, _css.escapeCssSelectorIdent)(validityState));\n    (0, _dom.iterateCursor)(elements, function (element) {\n      (0, _log.dev)().assertElement(element).classList.remove(validityState);\n    });\n  };\n\n  for (var validityState in dummyInput.validity) {\n    _loop(validityState);\n  }\n}\n/**\n * Checks user validity which applies .user-valid and .user-invalid AFTER the\n * user interacts with the input by moving away from the input (blur) or by\n * changing its value (input).\n *\n * See :user-invalid spec for more details:\n *   https://drafts.csswg.org/selectors-4/#user-pseudos\n *\n * The specs are still not fully specified. The current solution tries to follow\n * a common sense approach for when to apply these classes. As the specs gets\n * clearer, we should strive to match it as much as possible.\n *\n * @param {!Element} element\n * @param {boolean=} propagate Whether to propagate the user validity to\n * ancestors.\n * @return {boolean} Whether the element is valid or not.\n */\n\n\nfunction checkUserValidity(element, propagate) {\n  if (propagate === void 0) {\n    propagate = false;\n  }\n\n  // TODO(mkhatib, #6930): Implement basic validation for custom inputs like\n  // amp-selector.\n  // If this is not a field type with checkValidity don't do anything.\n  if (!element.checkValidity) {\n    return true;\n  }\n\n  var shouldPropagate = false;\n  var previousValidityState = getUserValidityStateFor(element);\n  var isCurrentlyValid = element.checkValidity();\n\n  if (previousValidityState != UserValidityState.USER_VALID && isCurrentlyValid) {\n    element.classList.add('user-valid');\n    element.classList.remove('user-invalid'); // Don't propagate user-valid unless it was marked invalid before.\n\n    shouldPropagate = previousValidityState == UserValidityState.USER_INVALID;\n  } else if (previousValidityState != UserValidityState.USER_INVALID && !isCurrentlyValid) {\n    element.classList.add('user-invalid');\n    element.classList.remove('user-valid'); // Always propagate an invalid state change. One invalid input field is\n    // guaranteed to make the fieldset and form invalid as well.\n\n    shouldPropagate = true;\n  }\n\n  updateInvalidTypesClasses(element);\n\n  if (propagate && shouldPropagate) {\n    // Propagate user validity to ancestor fieldsets.\n    var ancestors = (0, _dom.ancestorElementsByTag)(element, 'fieldset');\n\n    for (var i = 0; i < ancestors.length; i++) {\n      checkUserValidity(ancestors[i]);\n    } // Also update the form user validity.\n\n\n    if (element.form) {\n      checkUserValidity(element.form);\n    }\n  }\n\n  return isCurrentlyValid;\n}\n/**\n * Responds to user interaction with an input by checking user validity of the\n * input and possibly its input-related ancestors (e.g. feildset, form).\n * @param {!Element} input\n * @private visible for testing.\n */\n\n\nfunction checkUserValidityAfterInteraction_(input) {\n  checkUserValidity(input,\n  /* propagate */\n  true);\n}\n/**\n * Bootstraps the amp-form elements\n */\n\n\nvar AmpFormService =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param  {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  function AmpFormService(ampdoc) {\n    var _this16 = this;\n\n    /** @const @private {!Promise} */\n    this.whenInitialized_ = this.installStyles_(ampdoc).then(function () {\n      return _this16.installHandlers_(ampdoc);\n    }); // Dispatch a test-only event for integration tests.\n\n    if ((0, _mode.getMode)().test) {\n      this.whenInitialized_.then(function () {\n        var win = ampdoc.win;\n        var event = (0, _eventHelper.createCustomEvent)(win, _formEvents.FormEvents.SERVICE_INIT, null, {\n          bubbles: true\n        });\n        win.dispatchEvent(event);\n      });\n    }\n  }\n  /**\n   * Returns a promise that resolves when all form implementations (if any)\n   * have been upgraded.\n   * @return {!Promise}\n   */\n\n\n  var _proto2 = AmpFormService.prototype;\n\n  _proto2.whenInitialized = function whenInitialized() {\n    return this.whenInitialized_;\n  }\n  /**\n   * Install the amp-form CSS\n   * @param  {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto2.installStyles_ = function installStyles_(ampdoc) {\n    var deferred = new _promise.Deferred();\n    (0, _styleInstaller.installStylesForDoc)(ampdoc, _ampForm.CSS, deferred.resolve, false, TAG);\n    return deferred.promise;\n  }\n  /**\n   * Install the event handlers\n   * @param  {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto2.installHandlers_ = function installHandlers_(ampdoc) {\n    var _this17 = this;\n\n    return ampdoc.whenReady().then(function () {\n      var root = ampdoc.getRootNode();\n\n      _this17.installSubmissionHandlers_(root.querySelectorAll('form'));\n\n      _ampFormTextarea.AmpFormTextarea.install(ampdoc);\n\n      _this17.installGlobalEventListener_(root);\n    });\n  }\n  /**\n   * Install submission handler on all forms in the document.\n   * @param {?IArrayLike<T>} forms\n   * @template T\n   * @private\n   */\n  ;\n\n  _proto2.installSubmissionHandlers_ = function installSubmissionHandlers_(forms) {\n    if (!forms) {\n      return;\n    }\n\n    (0, _dom.iterateCursor)(forms, function (form, index) {\n      var existingAmpForm = (0, _form.formOrNullForElement)(form);\n\n      if (!existingAmpForm) {\n        new AmpForm(form, \"amp-form-\" + index);\n      }\n    });\n  }\n  /**\n   * Listen for DOM updated messages sent to the document.\n   * @param {!Document|!ShadowRoot} doc\n   * @private\n   */\n  ;\n\n  _proto2.installGlobalEventListener_ = function installGlobalEventListener_(doc) {\n    var _this18 = this;\n\n    doc.addEventListener(_ampEvents.AmpEvents.DOM_UPDATE, function () {\n      _this18.installSubmissionHandlers_(doc.querySelectorAll('form'));\n    });\n  };\n\n  return AmpFormService;\n}();\n\nexports.AmpFormService = AmpFormService;\nAMP.extension(TAG, '0.1', function (AMP) {\n  AMP.registerServiceForDoc('form-submit-service', _formSubmitService.FormSubmitService);\n  AMP.registerServiceForDoc(TAG, AmpFormService);\n});\n\n},{\"../../../build/amp-form-0.1.css\":1,\"../../../src/action-constants\":11,\"../../../src/amp-events\":12,\"../../../src/analytics\":13,\"../../../src/async-input\":14,\"../../../src/css\":17,\"../../../src/dom\":18,\"../../../src/event-helper\":21,\"../../../src/form\":24,\"../../../src/form-data-wrapper\":23,\"../../../src/log\":26,\"../../../src/mode\":28,\"../../../src/services\":32,\"../../../src/ssr-template-helper\":33,\"../../../src/style-installer\":35,\"../../../src/types\":37,\"../../../src/url\":40,\"../../../src/utils/object\":44,\"../../../src/utils/promise\":45,\"../../../src/utils/xhr-utils\":47,\"./amp-form-textarea\":2,\"./form-dirtiness\":4,\"./form-events\":5,\"./form-proxy\":6,\"./form-submit-service\":7,\"./form-validators\":8,\"./form-verifiers\":9}],4:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.FormDirtiness = exports.DIRTINESS_INDICATOR_CLASS = void 0;\n\nvar _ampEvents = require(\"../../../src/amp-events\");\n\nvar _eventHelper = require(\"../../../src/event-helper\");\n\nvar _formDataWrapper = require(\"../../../src/form-data-wrapper\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _form = require(\"../../../src/form\");\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar DIRTINESS_INDICATOR_CLASS = 'amp-form-dirty';\n/** @private {!Object<string, boolean>} */\n\nexports.DIRTINESS_INDICATOR_CLASS = DIRTINESS_INDICATOR_CLASS;\nvar SUPPORTED_TAG_NAMES = {\n  'INPUT': true,\n  'SELECT': true,\n  'TEXTAREA': true\n};\n\nvar FormDirtiness =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!HTMLFormElement} form\n   * @param {!Window} win\n   */\n  function FormDirtiness(form, win) {\n    /** @private @const {!HTMLFormElement} */\n    this.form_ = form;\n    /** @private @const {!Window} */\n\n    this.win_ = win;\n    /** @private {number} */\n\n    this.dirtyFieldCount_ = 0;\n    /** @private {!Object<string, boolean>} */\n\n    this.isFieldNameDirty_ = (0, _object.map)();\n    /** @private {?FormData} */\n\n    this.submittedFormData_ = null;\n    /** @private {boolean} */\n\n    this.isSubmitting_ = false;\n    /** @private {boolean} */\n\n    this.wasDirty_ = false;\n    this.installEventHandlers_(); // New forms are usually clean. However, if `amp-bind` mutates a form field\n    // before the `amp-form` is initialized, the `amp-form` will miss the\n    // `FORM_VALUE_CHANGE` event dispatched.\n\n    this.determineInitialDirtiness_();\n  }\n  /**\n   * Processes dirtiness state when a form is being submitted. This puts the\n   * form in a \"submitting\" state, and temporarily clears the dirtiness state.\n   */\n\n\n  var _proto = FormDirtiness.prototype;\n\n  _proto.onSubmitting = function onSubmitting() {\n    this.isSubmitting_ = true;\n    this.updateClassAndDispatchEventIfDirtyStateChanged_();\n  }\n  /**\n   * Processes dirtiness state when the form submission fails. This clears the\n   * \"submitting\" state and reverts the form's dirtiness state.\n   */\n  ;\n\n  _proto.onSubmitError = function onSubmitError() {\n    this.isSubmitting_ = false;\n    this.updateClassAndDispatchEventIfDirtyStateChanged_();\n  }\n  /**\n   * Processes dirtiness state when the form submission succeeds. This clears\n   * the \"submitting\" state and the form's overall dirtiness.\n   */\n  ;\n\n  _proto.onSubmitSuccess = function onSubmitSuccess() {\n    this.isSubmitting_ = false;\n    this.submittedFormData_ = this.takeFormDataSnapshot_();\n    this.clearDirtyFields_();\n    this.updateClassAndDispatchEventIfDirtyStateChanged_();\n  }\n  /**\n   * @return {!FormData}\n   * @private\n   */\n  ;\n\n  _proto.takeFormDataSnapshot_ = function takeFormDataSnapshot_() {\n    return (0, _formDataWrapper.createFormDataWrapper)(this.win_, this.form_).getFormData();\n  }\n  /**\n   * Adds or removes the `amp-form-dirty` class and dispatches a\n   * `FORM_DIRTINESS_CHANGE` event that reflects the current dirtiness state,\n   * when the form dirtiness state changes. Does nothing otherwise.\n   * @private\n   */\n  ;\n\n  _proto.updateClassAndDispatchEventIfDirtyStateChanged_ = function updateClassAndDispatchEventIfDirtyStateChanged_() {\n    var isDirty = this.dirtyFieldCount_ > 0 && !this.isSubmitting_;\n\n    if (isDirty !== this.wasDirty_) {\n      this.form_.classList.toggle(DIRTINESS_INDICATOR_CLASS, isDirty);\n      var formDirtinessChangeEvent = (0, _eventHelper.createCustomEvent)(this.win_, _ampEvents.AmpEvents.FORM_DIRTINESS_CHANGE, (0, _object.dict)({\n        'isDirty': isDirty\n      }), {\n        bubbles: true\n      });\n      this.form_.dispatchEvent(formDirtinessChangeEvent);\n    }\n\n    this.wasDirty_ = isDirty;\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.installEventHandlers_ = function installEventHandlers_() {\n    this.form_.addEventListener('input', this.onInput_.bind(this));\n    this.form_.addEventListener('reset', this.onReset_.bind(this)); // `amp-bind` dispatches the custom event `FORM_VALUE_CHANGE` when it\n    // mutates the value of a form field (e.g. textarea, input, etc)\n\n    this.form_.addEventListener(_ampEvents.AmpEvents.FORM_VALUE_CHANGE, this.onInput_.bind(this));\n  }\n  /** @private */\n  ;\n\n  _proto.determineInitialDirtiness_ = function determineInitialDirtiness_() {\n    for (var i = 0; i < this.form_.elements.length; ++i) {\n      this.checkDirtinessAfterUserInteraction_(this.form_.elements[i]);\n    }\n\n    this.updateClassAndDispatchEventIfDirtyStateChanged_();\n  }\n  /**\n   * Listens to form field value changes, determines the field's dirtiness, and\n   * updates the form's overall dirtiness.\n   * @param {!Event} event\n   * @private\n   */\n  ;\n\n  _proto.onInput_ = function onInput_(event) {\n    var field = (0, _log.dev)().assertElement(event.target);\n    this.checkDirtinessAfterUserInteraction_(field);\n    this.updateClassAndDispatchEventIfDirtyStateChanged_();\n  }\n  /**\n   * Listens to the form reset event, and clears the overall dirtiness.\n   * @param {!Event} unusedEvent\n   * @private\n   */\n  ;\n\n  _proto.onReset_ = function onReset_(unusedEvent) {\n    this.clearDirtyFields_();\n    this.updateClassAndDispatchEventIfDirtyStateChanged_();\n  }\n  /**\n   * Determine the given field's dirtiness.\n   * @param {!Element} field\n   * @private\n   */\n  ;\n\n  _proto.checkDirtinessAfterUserInteraction_ = function checkDirtinessAfterUserInteraction_(field) {\n    if (shouldSkipDirtinessCheck(field)) {\n      return;\n    }\n\n    if ((0, _form.isFieldEmpty)(field) || (0, _form.isFieldDefault)(field) || this.isFieldSameAsLastSubmission_(field)) {\n      this.removeDirtyField_(field.name);\n    } else {\n      this.addDirtyField_(field.name);\n    }\n  }\n  /**\n   * Returns true if the form field's current value matches its most recent\n   * submitted value.\n   * @param {!Element} field\n   * @return {boolean}\n   * @private\n   */\n  ;\n\n  _proto.isFieldSameAsLastSubmission_ = function isFieldSameAsLastSubmission_(field) {\n    if (!this.submittedFormData_) {\n      return false;\n    }\n\n    var name = field.name,\n        value = field.value;\n    return this.submittedFormData_.get(name) === value;\n  }\n  /**\n   * Mark the field as dirty and increase the overall dirty field count, if the\n   * field is previously clean.\n   * @param {string} fieldName\n   * @private\n   */\n  ;\n\n  _proto.addDirtyField_ = function addDirtyField_(fieldName) {\n    if (!this.isFieldNameDirty_[fieldName]) {\n      this.isFieldNameDirty_[fieldName] = true;\n      ++this.dirtyFieldCount_;\n    }\n  }\n  /**\n   * Mark the field as clean and decrease the overall dirty field count, if the\n   * field is previously dirty.\n   * @param {string} fieldName\n   * @private\n   */\n  ;\n\n  _proto.removeDirtyField_ = function removeDirtyField_(fieldName) {\n    if (this.isFieldNameDirty_[fieldName]) {\n      this.isFieldNameDirty_[fieldName] = false;\n      --this.dirtyFieldCount_;\n    }\n  }\n  /**\n   * Clears the dirty field name map and counter.\n   * @private\n   */\n  ;\n\n  _proto.clearDirtyFields_ = function clearDirtyFields_() {\n    this.isFieldNameDirty_ = (0, _object.map)();\n    this.dirtyFieldCount_ = 0;\n  };\n\n  return FormDirtiness;\n}();\n/**\n * Returns true if the form should be subject to dirtiness check. Unsupported\n * elements, disabled elements, hidden elements, or elements without the `name`\n * attribute are skipped.\n * @param {!Element} field\n * @return {boolean}\n */\n\n\nexports.FormDirtiness = FormDirtiness;\n\nfunction shouldSkipDirtinessCheck(field) {\n  var tagName = field.tagName,\n      name = field.name,\n      hidden = field.hidden;\n\n  if (!SUPPORTED_TAG_NAMES[tagName]) {\n    return true;\n  }\n\n  return !name || hidden || (0, _form.isDisabled)(field);\n}\n\n},{\"../../../src/amp-events\":12,\"../../../src/event-helper\":21,\"../../../src/form\":24,\"../../../src/form-data-wrapper\":23,\"../../../src/log\":26,\"../../../src/utils/object\":44}],5:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.FormEvents = void 0;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nvar FormEvents = {\n  INVALID: 'invalid',\n  SERVICE_INIT: 'amp:form-service:initialize',\n  // Dispatched by the window when AmpFormService initializes.\n  SUBMIT_ERROR: 'submit-error',\n  SUBMIT_SUCCESS: 'submit-success',\n  SUBMIT: 'submit',\n  VALID: 'valid',\n  VERIFY_ERROR: 'verify-error',\n  VERIFY: 'verify'\n};\nexports.FormEvents = FormEvents;\n\n},{}],6:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.setBlacklistedPropertiesForTesting = setBlacklistedPropertiesForTesting;\nexports.installFormProxy = installFormProxy;\n\nvar _services = require(\"../../../src/services\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _string = require(\"../../../src/string\");\n\nvar _types = require(\"../../../src/types\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Blacklisted properties. Used mainly fot testing.\n * @type {?Array<string>}\n */\nvar blacklistedProperties = null;\n/**\n * @param {?Array<string>} properties\n * @visibleForTesting\n */\n\nfunction setBlacklistedPropertiesForTesting(properties) {\n  blacklistedProperties = properties;\n}\n/**\n * Creates a proxy object `form.$p` that proxies all of the methods and\n * properties to the original DOM APIs. This is to work around the problematic\n * forms feature where inputs mask DOM APIs.\n *\n * E.g. a `<input id=\"id\">` will override `form.id` from the original DOM API.\n * Form proxy will give access to the original `id` value via `form.$p.id`.\n *\n * See https://medium.com/@dvoytenko/solving-conflicts-between-form-inputs-and-dom-api-535c45333ae4\n *\n * @param {!HTMLFormElement} form\n * @return {!Object}\n */\n\n\nfunction installFormProxy(form) {\n  var constr = getFormProxyConstr((0, _types.toWin)(form.ownerDocument.defaultView));\n  var proxy = new constr(form);\n\n  if (!('action' in proxy)) {\n    setupLegacyProxy(form, proxy);\n  }\n\n  form['$p'] = proxy;\n  return proxy;\n}\n/**\n * @param {!Window} win\n * @return {function(new:Object, !HTMLFormElement)}\n */\n\n\nfunction getFormProxyConstr(win) {\n  if (!win.FormProxy) {\n    win.FormProxy = createFormProxyConstr(win);\n  }\n\n  return win.FormProxy;\n}\n/**\n * @param {!Window} win\n * @return {function(new:Object, !HTMLFormElement)}\n */\n\n\nfunction createFormProxyConstr(win) {\n  /**\n   * @param {!HTMLFormElement} form\n   * @constructor\n   */\n  function FormProxy(form) {\n    /** @private @const {!HTMLFormElement} */\n    this.form_ = form;\n  }\n\n  var FormProxyProto = FormProxy.prototype;\n  var Object = win.Object;\n  var ObjectProto = Object.prototype; // Hierarchy:\n  //   Node  <==  Element <== HTMLElement <== HTMLFormElement\n  //   EventTarget  <==  HTMLFormElement\n\n  var baseClasses = [win.HTMLFormElement, win.EventTarget];\n  var inheritance = baseClasses.reduce(function (all, klass) {\n    var proto = klass && klass.prototype;\n\n    while (proto && proto !== ObjectProto) {\n      if (all.indexOf(proto) >= 0) {\n        break;\n      }\n\n      all.push(proto);\n      proto = Object.getPrototypeOf(proto);\n    }\n\n    return all;\n  }, []);\n  inheritance.forEach(function (proto) {\n    var _loop = function _loop(name) {\n      var property = win.Object.getOwnPropertyDescriptor(proto, name);\n\n      if (!property || // Exclude constants.\n      name.toUpperCase() == name || // Exclude on-events.\n      (0, _string.startsWith)(name, 'on') || // Exclude properties that already been created.\n      ObjectProto.hasOwnProperty.call(FormProxyProto, name) || // Exclude some properties. Currently only used for testing.\n      blacklistedProperties && blacklistedProperties.includes(name)) {\n        return \"continue\";\n      }\n\n      if (typeof property.value == 'function') {\n        // A method call. Call the original prototype method via `call`.\n        var method = property.value;\n\n        FormProxyProto[name] = function () {\n          return method.apply(\n          /** @type {!FormProxy} */\n          this.form_, arguments);\n        };\n      } else {\n        // A read/write property. Call the original prototype getter/setter.\n        var spec = {};\n\n        if (property.get) {\n          spec.get = function () {\n            return property.get.call(\n            /** @type {!FormProxy} */\n            this.form_);\n          };\n        }\n\n        if (property.set) {\n          spec.set = function (v) {\n            return property.set.call(\n            /** @type {!FormProxy} */\n            this.form_, v);\n          };\n        }\n\n        win.Object.defineProperty(FormProxyProto, name, spec);\n      }\n    };\n\n    for (var name in proto) {\n      var _ret = _loop(name);\n\n      if (_ret === \"continue\") continue;\n    }\n  });\n  return FormProxy;\n}\n/**\n * This is a very heavy-handed way to support browsers that do not have\n * properties defined in the prototype chain. Specifically, this is necessary\n * for Chrome 45 and under.\n *\n * See https://developers.google.com/web/updates/2015/04/DOM-attributes-now-on-the-prototype-chain\n * for more info.\n *\n * @param {!HTMLFormElement} form\n * @param {!Object} proxy\n */\n\n\nfunction setupLegacyProxy(form, proxy) {\n  var win = form.ownerDocument.defaultView;\n  var proto = win.HTMLFormElement.prototype.cloneNode.call(form,\n  /* deep */\n  false);\n\n  var _loop2 = function _loop2(name) {\n    if (name in proxy || // Exclude constants.\n    name.toUpperCase() == name || // Exclude on-events.\n    (0, _string.startsWith)(name, 'on')) {\n      return \"continue\";\n    }\n\n    var desc = LEGACY_PROPS[name];\n    var current = form[name];\n\n    if (desc) {\n      if (desc.access == LegacyPropAccessType.READ_ONCE) {\n        // A property such as `style`. The only way is to read this value\n        // once and use it for all subsequent calls.\n        var actual;\n\n        if (current && current.nodeType) {\n          // The overriding input, if present, has to be removed and re-added\n          // (renaming does NOT work). Completely insane, I know.\n          var element = (0, _log.dev)().assertElement(current);\n          var nextSibling = element.nextSibling,\n              parent = element.parentNode;\n          parent.removeChild(element);\n\n          try {\n            actual = form[name];\n          } finally {\n            parent.insertBefore(element, nextSibling);\n          }\n        } else {\n          actual = current;\n        }\n\n        Object.defineProperty(proxy, name, {\n          get: function get() {\n            return actual;\n          }\n        });\n      } else if (desc.access == LegacyPropAccessType.ATTR) {\n        // An attribute-based property. We can use DOM API to read and write\n        // with a minimal type conversion.\n        var attr = desc.attr || name;\n        Object.defineProperty(proxy, name, {\n          get: function get() {\n            var value = proxy.getAttribute(attr);\n\n            if (value == null && desc.def !== undefined) {\n              return desc.def;\n            }\n\n            if (desc.type == LegacyPropDataType.BOOL) {\n              return value === 'true';\n            }\n\n            if (desc.type == LegacyPropDataType.TOGGLE) {\n              return value != null;\n            }\n\n            if (desc.type == LegacyPropDataType.URL) {\n              // URLs, e.g. in `action` attribute are resolved against the\n              // document's base.\n              var str =\n              /** @type {string} */\n              value || '';\n              return _services.Services.urlForDoc(form).parse(str).href;\n            }\n\n            return value;\n          },\n          set: function set(value) {\n            if (desc.type == LegacyPropDataType.TOGGLE) {\n              if (value) {\n                value = '';\n              } else {\n                value = null;\n              }\n            }\n\n            if (value != null) {\n              proxy.setAttribute(attr, value);\n            } else {\n              proxy.removeAttribute(attr);\n            }\n          }\n        });\n      } else {\n        (0, _log.devAssert)(false, 'unknown property access type: %s', desc.access);\n      }\n    } else {\n      // Not a known property - proxy directly.\n      Object.defineProperty(proxy, name, {\n        get: function get() {\n          return form[name];\n        },\n        set: function set(value) {\n          form[name] = value;\n        }\n      });\n    }\n  };\n\n  for (var name in proto) {\n    var _ret2 = _loop2(name);\n\n    if (_ret2 === \"continue\") continue;\n  }\n}\n/**\n * @enum {number}\n */\n\n\nvar LegacyPropAccessType = {\n  ATTR: 1,\n  READ_ONCE: 2\n};\n/**\n * @enum {number}\n */\n\nvar LegacyPropDataType = {\n  URL: 1,\n  BOOL: 2,\n  TOGGLE: 3\n};\n/**\n * @const {!Object<string, {\n *   access: !LegacyPropAccessType,\n *   attr: (string|undefined),\n *   type: (LegacyPropDataType|undefined),\n *   def: *,\n * }>}\n */\n\nvar LEGACY_PROPS = {\n  'acceptCharset': {\n    access: LegacyPropAccessType.ATTR,\n    attr: 'accept-charset'\n  },\n  'accessKey': {\n    access: LegacyPropAccessType.ATTR,\n    attr: 'accesskey'\n  },\n  'action': {\n    access: LegacyPropAccessType.ATTR,\n    type: LegacyPropDataType.URL\n  },\n  'attributes': {\n    access: LegacyPropAccessType.READ_ONCE\n  },\n  'autocomplete': {\n    access: LegacyPropAccessType.ATTR,\n    def: 'on'\n  },\n  'children': {\n    access: LegacyPropAccessType.READ_ONCE\n  },\n  'dataset': {\n    access: LegacyPropAccessType.READ_ONCE\n  },\n  'dir': {\n    access: LegacyPropAccessType.ATTR\n  },\n  'draggable': {\n    access: LegacyPropAccessType.ATTR,\n    type: LegacyPropDataType.BOOL,\n    def: false\n  },\n  'elements': {\n    access: LegacyPropAccessType.READ_ONCE\n  },\n  'encoding': {\n    access: LegacyPropAccessType.READ_ONCE\n  },\n  'enctype': {\n    access: LegacyPropAccessType.ATTR\n  },\n  'hidden': {\n    access: LegacyPropAccessType.ATTR,\n    type: LegacyPropDataType.TOGGLE,\n    def: false\n  },\n  'id': {\n    access: LegacyPropAccessType.ATTR,\n    def: ''\n  },\n  'lang': {\n    access: LegacyPropAccessType.ATTR\n  },\n  'localName': {\n    access: LegacyPropAccessType.READ_ONCE\n  },\n  'method': {\n    access: LegacyPropAccessType.ATTR,\n    def: 'get'\n  },\n  'name': {\n    access: LegacyPropAccessType.ATTR\n  },\n  'noValidate': {\n    access: LegacyPropAccessType.ATTR,\n    attr: 'novalidate',\n    type: LegacyPropDataType.TOGGLE,\n    def: false\n  },\n  'prefix': {\n    access: LegacyPropAccessType.READ_ONCE\n  },\n  'spellcheck': {\n    access: LegacyPropAccessType.ATTR\n  },\n  'style': {\n    access: LegacyPropAccessType.READ_ONCE\n  },\n  'target': {\n    access: LegacyPropAccessType.ATTR,\n    def: ''\n  },\n  'title': {\n    access: LegacyPropAccessType.ATTR\n  },\n  'translate': {\n    access: LegacyPropAccessType.ATTR\n  }\n};\n\n},{\"../../../src/log\":26,\"../../../src/services\":32,\"../../../src/string\":34,\"../../../src/types\":37}],7:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.FormSubmitService = exports.FormSubmitEventDef = void 0;\n\nvar _observable = require(\"../../../src/observable\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   form: !HTMLFormElement,\n *   actionXhrMutator: function(string)\n * }}\n */\nvar FormSubmitEventDef;\nexports.FormSubmitEventDef = FormSubmitEventDef;\n\nvar FormSubmitService =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Global service used to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   */\n  function FormSubmitService() {\n    this.observable_ = new _observable.Observable();\n  }\n  /**\n   * Used to register callbacks.\n   * @param {function(!FormSubmitEventDef)} cb\n   * @return {!UnlistenDef}\n   */\n\n\n  var _proto = FormSubmitService.prototype;\n\n  _proto.beforeSubmit = function beforeSubmit(cb) {\n    return this.observable_.add(cb);\n  }\n  /**\n   * Fired when form is submitted.\n   * @param {!FormSubmitEventDef} event\n   */\n  ;\n\n  _proto.fire = function fire(event) {\n    this.observable_.fire(event);\n  };\n\n  return FormSubmitService;\n}();\n\nexports.FormSubmitService = FormSubmitService;\n\n},{\"../../../src/observable\":29}],8:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.setReportValiditySupportedForTesting = setReportValiditySupportedForTesting;\nexports.setCheckValiditySupportedForTesting = setCheckValiditySupportedForTesting;\nexports.getFormValidator = getFormValidator;\nexports.isCheckValiditySupported = isCheckValiditySupported;\nexports.InteractAndSubmitValidator = exports.AsYouGoValidator = exports.ShowAllOnSubmitValidator = exports.ShowFirstOnSubmitValidator = exports.AbstractCustomValidator = exports.PolyfillDefaultValidator = exports.DefaultValidator = exports.FormValidator = void 0;\n\nvar _formEvents = require(\"./form-events\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _validationBubble = require(\"./validation-bubble\");\n\nvar _eventHelper = require(\"../../../src/event-helper\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _dom = require(\"../../../src/dom\");\n\nvar _types = require(\"../../../src/types\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/** @const @private {string} */\nvar VALIDATION_CACHE_PREFIX = '__AMP_VALIDATION_';\n/** @const @private {string} */\n\nvar VISIBLE_VALIDATION_CACHE = '__AMP_VISIBLE_VALIDATION';\n/** @const @private {string} */\n\nvar ARIA_DESC_ID_PREFIX = 'i-amphtml-aria-desc-';\n/**\n * Validation user message for non-standard pattern mismatch errors.\n * Note this isn't localized but custom validation can be used instead.\n * @const @private {string}\n */\n\nvar CUSTOM_PATTERN_ERROR = 'Please match the requested format.';\n/** @type {boolean|undefined} */\n\nvar reportValiditySupported;\n/** @type {boolean|undefined} */\n\nvar checkValiditySupported;\n/** @type {number} */\n\nvar validationBubbleCount = 0;\n/**\n * @param {boolean} isSupported\n * @private visible for testing.\n */\n\nfunction setReportValiditySupportedForTesting(isSupported) {\n  reportValiditySupported = isSupported;\n}\n/**\n * @param {boolean} isSupported\n * @private visible for testing.\n */\n\n\nfunction setCheckValiditySupportedForTesting(isSupported) {\n  checkValiditySupported = isSupported;\n}\n/** @const @enum {string} */\n\n\nvar CustomValidationTypes = {\n  AsYouGo: 'as-you-go',\n  ShowAllOnSubmit: 'show-all-on-submit',\n  InteractAndSubmit: 'interact-and-submit',\n  ShowFirstOnSubmit: 'show-first-on-submit'\n};\n/**\n * Form validator interface.\n * @abstract\n */\n\nvar FormValidator =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!HTMLFormElement} form\n   */\n  function FormValidator(form) {\n    /** @protected @const {!HTMLFormElement} */\n    this.form = form;\n    /** @protected @const {!../../../src/service/ampdoc-impl.AmpDoc} */\n\n    this.ampdoc = _services.Services.ampdoc(form);\n    /** @const @protected {!../../../src/service/resources-interface.ResourcesInterface} */\n\n    this.resources = _services.Services.resourcesForDoc(form);\n    /** @protected @const {!Document|!ShadowRoot} */\n\n    this.root = this.ampdoc.getRootNode();\n    /**\n     * Tribool indicating last known validity of form.\n     * @private {boolean|null}\n     */\n\n    this.formValidity_ = null;\n  }\n  /**\n   * Called to report validation errors.\n   */\n\n\n  var _proto = FormValidator.prototype;\n\n  _proto.report = function report() {}\n  /**\n   * @param {!Event} unusedEvent\n   */\n  ;\n\n  _proto.onBlur = function onBlur(unusedEvent) {}\n  /**\n   * @param {!Event} unusedEvent\n   */\n  ;\n\n  _proto.onInput = function onInput(unusedEvent) {}\n  /** @return {!NodeList} */\n  ;\n\n  _proto.inputs = function inputs() {\n    return this.form.querySelectorAll('input,select,textarea');\n  }\n  /**\n   * Wraps `checkValidity` on input elements to support `pattern` attribute on\n   * <textarea> which is not supported in HTML5.\n   * @param {!Element} input\n   * @return {boolean}\n   * @protected\n   */\n  ;\n\n  _proto.checkInputValidity = function checkInputValidity(input) {\n    if (input.tagName === 'TEXTAREA' && input.hasAttribute('pattern')) {\n      // FormVerifier also uses setCustomValidity() to signal verification\n      // errors. Make sure we only override pattern errors here.\n      if (input.checkValidity() || input.validationMessage === CUSTOM_PATTERN_ERROR) {\n        var pattern = input.getAttribute('pattern');\n        var re = new RegExp(\"^\" + pattern + \"$\", 'm');\n        var valid = re.test(input.value);\n        input.setCustomValidity(valid ? '' : CUSTOM_PATTERN_ERROR);\n      }\n    }\n\n    return input.checkValidity();\n  }\n  /**\n   * Wraps `checkValidity` on form elements to support `pattern` attribute on\n   * <textarea> which is not supported in HTML5.\n   * @param {!HTMLFormElement} form\n   * @return {boolean}\n   * @protected\n   */\n  ;\n\n  _proto.checkFormValidity = function checkFormValidity(form) {\n    this.checkTextAreaValidityInForm_(form);\n    return form.checkValidity();\n  }\n  /**\n   * Wraps `reportValidity` on form elements to support `pattern` attribute on\n   * <textarea> which is not supported in HTML5.\n   * @param {!HTMLFormElement} form\n   * @return {boolean}\n   * @protected\n   */\n  ;\n\n  _proto.reportFormValidity = function reportFormValidity(form) {\n    this.checkTextAreaValidityInForm_(form);\n    return form.reportValidity();\n  }\n  /**\n   * @param {!HTMLFormElement} form\n   * @private\n   */\n  ;\n\n  _proto.checkTextAreaValidityInForm_ = function checkTextAreaValidityInForm_(form) {\n    var _this = this;\n\n    (0, _dom.iterateCursor)(form.elements, function (element) {\n      if (element.tagName == 'TEXTAREA') {\n        _this.checkInputValidity(element);\n      }\n    });\n  }\n  /**\n   * Fires a valid/invalid event from the form if its validity state\n   * has changed since the last invocation of this function.\n   * @visibleForTesting\n   */\n  ;\n\n  _proto.fireValidityEventIfNecessary = function fireValidityEventIfNecessary() {\n    var previousValidity = this.formValidity_;\n    this.formValidity_ = this.checkFormValidity(this.form);\n\n    if (previousValidity !== this.formValidity_) {\n      var win = (0, _types.toWin)(this.form.ownerDocument.defaultView);\n      var type = this.formValidity_ ? _formEvents.FormEvents.VALID : _formEvents.FormEvents.INVALID;\n      var event = (0, _eventHelper.createCustomEvent)(win, type, null, {\n        bubbles: true\n      });\n      this.form.dispatchEvent(event);\n    }\n  };\n\n  return FormValidator;\n}();\n/** @private visible for testing */\n\n\nexports.FormValidator = FormValidator;\n\nvar DefaultValidator =\n/*#__PURE__*/\nfunction (_FormValidator) {\n  _inheritsLoose(DefaultValidator, _FormValidator);\n\n  function DefaultValidator() {\n    return _FormValidator.apply(this, arguments) || this;\n  }\n\n  var _proto2 = DefaultValidator.prototype;\n\n  /** @override */\n  _proto2.report = function report() {\n    this.reportFormValidity(this.form);\n    this.fireValidityEventIfNecessary();\n  };\n\n  return DefaultValidator;\n}(FormValidator);\n/** @private visible for testing */\n\n\nexports.DefaultValidator = DefaultValidator;\n\nvar PolyfillDefaultValidator =\n/*#__PURE__*/\nfunction (_FormValidator2) {\n  _inheritsLoose(PolyfillDefaultValidator, _FormValidator2);\n\n  /**\n   * Creates an instance of PolyfillDefaultValidator.\n   * @param {!HTMLFormElement} form\n   */\n  function PolyfillDefaultValidator(form) {\n    var _this2;\n\n    _this2 = _FormValidator2.call(this, form) || this;\n    var bubbleId = \"i-amphtml-validation-bubble-\" + validationBubbleCount++;\n    /** @private @const {!./validation-bubble.ValidationBubble} */\n\n    _this2.validationBubble_ = new _validationBubble.ValidationBubble(_this2.ampdoc, bubbleId);\n    return _this2;\n  }\n  /** @override */\n\n\n  var _proto3 = PolyfillDefaultValidator.prototype;\n\n  _proto3.report = function report() {\n    var inputs = this.inputs();\n\n    for (var i = 0; i < inputs.length; i++) {\n      if (!this.checkInputValidity(inputs[i])) {\n        inputs[i].\n        /*REVIEW*/\n        focus();\n        this.validationBubble_.show(inputs[i], inputs[i].validationMessage);\n        break;\n      }\n    }\n\n    this.fireValidityEventIfNecessary();\n  }\n  /** @override */\n  ;\n\n  _proto3.onBlur = function onBlur(e) {\n    // NOTE: IE11 focuses the submit button after submitting a form.\n    // Then amp-form focuses the first field with an error, which causes the\n    // submit button to blur. So we need to disregard the submit button blur.\n    if (e.target.type == 'submit') {\n      return;\n    }\n\n    this.validationBubble_.hide();\n  }\n  /** @override */\n  ;\n\n  _proto3.onInput = function onInput(event) {\n    var input = (0, _log.dev)().assertElement(event.target);\n\n    if (!this.validationBubble_.isActiveOn(input)) {\n      return;\n    }\n\n    if (this.checkInputValidity(input)) {\n      input.removeAttribute('aria-invalid');\n      this.validationBubble_.hide();\n    } else {\n      input.setAttribute('aria-invalid', 'true');\n      this.validationBubble_.show(input, input.validationMessage);\n    }\n  };\n\n  return PolyfillDefaultValidator;\n}(FormValidator);\n/**\n * @abstract\n * @private visible for testing\n */\n\n\nexports.PolyfillDefaultValidator = PolyfillDefaultValidator;\n\nvar AbstractCustomValidator =\n/*#__PURE__*/\nfunction (_FormValidator3) {\n  _inheritsLoose(AbstractCustomValidator, _FormValidator3);\n\n  /**\n   * Creates an instance of AbstractCustomValidator.\n   * @param {!HTMLFormElement} form\n   */\n  function AbstractCustomValidator(form) {\n    var _this3;\n\n    _this3 = _FormValidator3.call(this, form) || this;\n    /** @private {string} */\n\n    _this3.uniqueFormId_ = _this3.form.id ? _this3.form.id : String(Date.now() + Math.floor(Math.random() * 100));\n    /**\n     * Counter used to create a unique id for every validation message\n     * to be used with `aria-describedby`.\n     * @private {number}\n     */\n\n    _this3.ariaDescCounter_ = 0;\n    return _this3;\n  }\n  /**\n   * @param {!Element} input\n   */\n\n\n  var _proto4 = AbstractCustomValidator.prototype;\n\n  _proto4.reportInput = function reportInput(input) {\n    var invalidType = getInvalidType(input);\n\n    if (invalidType) {\n      this.showValidationFor(input, invalidType);\n    }\n  }\n  /**\n   * @return {string} A unique ID.\n   * @private\n   */\n  ;\n\n  _proto4.createUniqueAriaDescId_ = function createUniqueAriaDescId_() {\n    return \"\" + ARIA_DESC_ID_PREFIX + this.uniqueFormId_ + \"-\" + this.ariaDescCounter_++;\n  }\n  /**\n   * Hides all validation messages.\n   */\n  ;\n\n  _proto4.hideAllValidations = function hideAllValidations() {\n    var inputs = this.inputs();\n\n    for (var i = 0; i < inputs.length; i++) {\n      this.hideValidationFor((0, _log.dev)().assertElement(inputs[i]));\n    }\n  }\n  /**\n   * @param {!Element} input\n   * @param {string=} inputInvalidType\n   * @return {?Element}\n   */\n  ;\n\n  _proto4.getValidationFor = function getValidationFor(input, inputInvalidType) {\n    if (inputInvalidType === void 0) {\n      inputInvalidType = undefined;\n    }\n\n    if (!input.id) {\n      return null;\n    }\n\n    var invalidType = this.getInvalidType_(input, inputInvalidType);\n    var property = VALIDATION_CACHE_PREFIX + invalidType;\n\n    if (!(property in input)) {\n      var selector = \"[visible-when-invalid=\" + invalidType + \"]\" + (\"[validation-for=\" + input.id + \"]\");\n      input[property] = this.root.querySelector(selector);\n    }\n\n    return input[property];\n  }\n  /**\n   * Wraps the validity type for inputs to support pattern on <textarea>\n   * @param {!Element} input\n   * @param {string=} inputInvalidType\n   * @return {*} TODO(#23582): Specify return type\n   */\n  ;\n\n  _proto4.getInvalidType_ = function getInvalidType_(input, inputInvalidType) {\n    if (inputInvalidType === void 0) {\n      inputInvalidType = undefined;\n    }\n\n    var tagName = input.tagName,\n        validationMessage = input.validationMessage; // <textarea> only supports `pattern` and `valueMissing`.\n    // `pattern` is implemented via setCustomValidity(),\n    // which results in the 'customError' validity state.\n\n    if (tagName === 'TEXTAREA' && inputInvalidType === 'customError' && validationMessage === CUSTOM_PATTERN_ERROR) {\n      return 'patternMismatch';\n    }\n\n    return inputInvalidType;\n  }\n  /**\n   * @param {!Element} input\n   * @param {string} invalidType\n   */\n  ;\n\n  _proto4.showValidationFor = function showValidationFor(input, invalidType) {\n    var validation = this.getValidationFor(input, invalidType);\n\n    if (!validation) {\n      return;\n    }\n\n    if (!validation.textContent.trim()) {\n      validation.textContent = input.validationMessage;\n    }\n\n    input[VISIBLE_VALIDATION_CACHE] = validation;\n    var validationId = validation.getAttribute('id');\n\n    if (!validationId) {\n      validationId = this.createUniqueAriaDescId_();\n      validation.setAttribute('id', validationId);\n    }\n\n    input.setAttribute('aria-invalid', 'true');\n    input.setAttribute('aria-describedby', validationId);\n    this.resources.mutateElement(validation, function () {\n      return validation.classList.add('visible');\n    });\n  }\n  /**\n   * @param {!Element} input\n   */\n  ;\n\n  _proto4.hideValidationFor = function hideValidationFor(input) {\n    var visibleValidation = this.getVisibleValidationFor(input);\n\n    if (!visibleValidation) {\n      return;\n    }\n\n    delete input[VISIBLE_VALIDATION_CACHE];\n    input.removeAttribute('aria-invalid');\n    input.removeAttribute('aria-describedby');\n    this.resources.mutateElement(visibleValidation, function () {\n      return visibleValidation.classList.remove('visible');\n    });\n  }\n  /**\n   * @param {!Element} input\n   * @return {?Element}\n   */\n  ;\n\n  _proto4.getVisibleValidationFor = function getVisibleValidationFor(input) {\n    return input[VISIBLE_VALIDATION_CACHE];\n  }\n  /**\n   * Whether an input should validate after an interaction.\n   * @param {!Element} unusedInput\n   * @return {boolean}\n   */\n  ;\n\n  _proto4.shouldValidateOnInteraction = function shouldValidateOnInteraction(unusedInput) {\n    throw Error('Not Implemented');\n  }\n  /**\n   * @param {!Event} event\n   */\n  ;\n\n  _proto4.onInteraction = function onInteraction(event) {\n    var input = (0, _log.dev)().assertElement(event.target);\n    var shouldValidate = !!input.checkValidity && this.shouldValidateOnInteraction(input);\n    this.hideValidationFor(input);\n\n    if (shouldValidate && !this.checkInputValidity(input)) {\n      this.reportInput(input);\n    }\n  }\n  /** @override */\n  ;\n\n  _proto4.onBlur = function onBlur(event) {\n    this.onInteraction(event);\n  }\n  /** @override */\n  ;\n\n  _proto4.onInput = function onInput(event) {\n    this.onInteraction(event);\n  };\n\n  return AbstractCustomValidator;\n}(FormValidator);\n/** @private visible for testing */\n\n\nexports.AbstractCustomValidator = AbstractCustomValidator;\n\nvar ShowFirstOnSubmitValidator =\n/*#__PURE__*/\nfunction (_AbstractCustomValida) {\n  _inheritsLoose(ShowFirstOnSubmitValidator, _AbstractCustomValida);\n\n  function ShowFirstOnSubmitValidator() {\n    return _AbstractCustomValida.apply(this, arguments) || this;\n  }\n\n  var _proto5 = ShowFirstOnSubmitValidator.prototype;\n\n  /** @override */\n  _proto5.report = function report() {\n    this.hideAllValidations();\n    var inputs = this.inputs();\n\n    for (var i = 0; i < inputs.length; i++) {\n      if (!this.checkInputValidity(inputs[i])) {\n        this.reportInput(inputs[i]);\n        inputs[i].\n        /*REVIEW*/\n        focus();\n        break;\n      }\n    }\n\n    this.fireValidityEventIfNecessary();\n  }\n  /** @override */\n  ;\n\n  _proto5.shouldValidateOnInteraction = function shouldValidateOnInteraction(input) {\n    return !!this.getVisibleValidationFor(input);\n  };\n\n  return ShowFirstOnSubmitValidator;\n}(AbstractCustomValidator);\n/** @private visible for testing */\n\n\nexports.ShowFirstOnSubmitValidator = ShowFirstOnSubmitValidator;\n\nvar ShowAllOnSubmitValidator =\n/*#__PURE__*/\nfunction (_AbstractCustomValida2) {\n  _inheritsLoose(ShowAllOnSubmitValidator, _AbstractCustomValida2);\n\n  function ShowAllOnSubmitValidator() {\n    return _AbstractCustomValida2.apply(this, arguments) || this;\n  }\n\n  var _proto6 = ShowAllOnSubmitValidator.prototype;\n\n  /** @override */\n  _proto6.report = function report() {\n    this.hideAllValidations();\n    var firstInvalidInput = null;\n    var inputs = this.inputs();\n\n    for (var i = 0; i < inputs.length; i++) {\n      if (!this.checkInputValidity(inputs[i])) {\n        firstInvalidInput = firstInvalidInput || inputs[i];\n        this.reportInput(inputs[i]);\n      }\n    }\n\n    if (firstInvalidInput) {\n      firstInvalidInput.\n      /*REVIEW*/\n      focus();\n    }\n\n    this.fireValidityEventIfNecessary();\n  }\n  /** @override */\n  ;\n\n  _proto6.shouldValidateOnInteraction = function shouldValidateOnInteraction(input) {\n    return !!this.getVisibleValidationFor(input);\n  };\n\n  return ShowAllOnSubmitValidator;\n}(AbstractCustomValidator);\n/** @private visible for testing */\n\n\nexports.ShowAllOnSubmitValidator = ShowAllOnSubmitValidator;\n\nvar AsYouGoValidator =\n/*#__PURE__*/\nfunction (_AbstractCustomValida3) {\n  _inheritsLoose(AsYouGoValidator, _AbstractCustomValida3);\n\n  function AsYouGoValidator() {\n    return _AbstractCustomValida3.apply(this, arguments) || this;\n  }\n\n  var _proto7 = AsYouGoValidator.prototype;\n\n  /** @override */\n  _proto7.shouldValidateOnInteraction = function shouldValidateOnInteraction(unusedInput) {\n    return true;\n  }\n  /** @override */\n  ;\n\n  _proto7.onInteraction = function onInteraction(event) {\n    _AbstractCustomValida3.prototype.onInteraction.call(this, event);\n\n    this.fireValidityEventIfNecessary();\n  };\n\n  return AsYouGoValidator;\n}(AbstractCustomValidator);\n/** @private visible for testing */\n\n\nexports.AsYouGoValidator = AsYouGoValidator;\n\nvar InteractAndSubmitValidator =\n/*#__PURE__*/\nfunction (_ShowAllOnSubmitValid) {\n  _inheritsLoose(InteractAndSubmitValidator, _ShowAllOnSubmitValid);\n\n  function InteractAndSubmitValidator() {\n    return _ShowAllOnSubmitValid.apply(this, arguments) || this;\n  }\n\n  var _proto8 = InteractAndSubmitValidator.prototype;\n\n  /** @override */\n  _proto8.shouldValidateOnInteraction = function shouldValidateOnInteraction(unusedInput) {\n    return true;\n  }\n  /** @override */\n  ;\n\n  _proto8.onInteraction = function onInteraction(event) {\n    _ShowAllOnSubmitValid.prototype.onInteraction.call(this, event);\n\n    this.fireValidityEventIfNecessary();\n  };\n\n  return InteractAndSubmitValidator;\n}(ShowAllOnSubmitValidator);\n/**\n * Returns the form validator instance.\n *\n * @param {!HTMLFormElement} form\n * @return {!FormValidator}\n */\n\n\nexports.InteractAndSubmitValidator = InteractAndSubmitValidator;\n\nfunction getFormValidator(form) {\n  var customValidation = form.getAttribute('custom-validation-reporting');\n\n  switch (customValidation) {\n    case CustomValidationTypes.AsYouGo:\n      return new AsYouGoValidator(form);\n\n    case CustomValidationTypes.ShowAllOnSubmit:\n      return new ShowAllOnSubmitValidator(form);\n\n    case CustomValidationTypes.InteractAndSubmit:\n      return new InteractAndSubmitValidator(form);\n\n    case CustomValidationTypes.ShowFirstOnSubmit:\n      return new ShowFirstOnSubmitValidator(form);\n  }\n\n  if (isReportValiditySupported(form.ownerDocument)) {\n    return new DefaultValidator(form);\n  }\n\n  return new PolyfillDefaultValidator(form);\n}\n/**\n * Returns whether reportValidity API is supported.\n * @param {?Document} doc\n * @return {boolean}\n */\n\n\nfunction isReportValiditySupported(doc) {\n  if (doc && reportValiditySupported === undefined) {\n    reportValiditySupported = !!document.createElement('form').reportValidity;\n  }\n\n  return !!reportValiditySupported;\n}\n/**\n * Returns whether reportValidity API is supported.\n * @param {!Document} doc\n * @return {boolean}\n */\n\n\nfunction isCheckValiditySupported(doc) {\n  if (checkValiditySupported === undefined) {\n    checkValiditySupported = !!doc.createElement('input').checkValidity;\n  }\n\n  return checkValiditySupported;\n}\n/**\n * Returns invalid error type on the input.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/ValidityState\n * @param {!Element} input\n * @return {?string}\n */\n\n\nfunction getInvalidType(input) {\n  // 'badInput' takes precedence over others.\n  var validityTypes = ['badInput'];\n\n  for (var invalidType in input.validity) {\n    // add other types after\n    if (!validityTypes.includes(invalidType)) {\n      validityTypes.push(invalidType);\n    }\n  } // Finding error type with value true\n\n\n  var response = validityTypes.filter(function (type) {\n    return input.validity[type] === true;\n  });\n  return response.length ? response[0] : null;\n}\n\n},{\"../../../src/dom\":18,\"../../../src/event-helper\":21,\"../../../src/log\":26,\"../../../src/services\":32,\"../../../src/types\":37,\"./form-events\":5,\"./validation-bubble\":10}],9:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getFormVerifier = getFormVerifier;\nexports.AsyncVerifier = exports.DefaultVerifier = exports.FormVerifier = exports.FORM_VERIFY_OPTOUT = exports.FORM_VERIFY_PARAM = void 0;\n\nvar _promise = require(\"../../../src/utils/promise\");\n\nvar _form = require(\"../../../src/form\");\n\nvar _dom = require(\"../../../src/dom\");\n\nvar _log = require(\"../../../src/log\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar FORM_VERIFY_PARAM = '__amp_form_verify';\nexports.FORM_VERIFY_PARAM = FORM_VERIFY_PARAM;\nvar FORM_VERIFY_OPTOUT = 'no-verify';\n/**\n * @typedef {{\n *    name:string,\n *    message:string\n *  }}\n */\n\nexports.FORM_VERIFY_OPTOUT = FORM_VERIFY_OPTOUT;\nvar VerificationErrorDef;\n/**\n * @typedef {{\n *   updatedElements:!Array<!Element>,\n *   errors:!Array<!VerificationErrorDef>\n * }}\n */\n\nvar UpdatedErrorsDef;\n/**\n * Construct the correct form verifier based on whether\n * a config block is present.\n * @param {!HTMLFormElement} form\n * @param {function():Promise<!Response>} xhr\n * @return {!FormVerifier}\n */\n\nfunction getFormVerifier(form, xhr) {\n  if (form.hasAttribute('verify-xhr')) {\n    return new AsyncVerifier(form, xhr);\n  } else {\n    return new DefaultVerifier(form);\n  }\n}\n/**\n * An interface for a form verifier. Implementations could check for duplicate\n * usernames on a remote server, check against an in-memory cache to verify\n * data in ways not possible with standard form validation, or check\n * values against sets of data too large to fit in browser memory\n * e.g. ensuring zip codes match with cities.\n * @visibleForTesting\n * @abstract\n */\n\n\nvar FormVerifier =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!HTMLFormElement} form\n   */\n  function FormVerifier(form) {\n    /** @protected @const */\n    this.form_ = form;\n  }\n  /**\n   * Called when the user has fully set a value to be verified,\n   * e.g. the input's 'change' event\n   * @return {!Promise<!UpdatedErrorsDef>}\n   */\n\n\n  var _proto = FormVerifier.prototype;\n\n  _proto.onCommit = function onCommit() {\n    this.clearVerificationErrors_();\n\n    if (this.isDirty_()) {\n      return this.verify_();\n    } else {\n      return Promise.resolve(\n      /** @type {UpdatedErrorsDef} */\n      {\n        updatedElements: [],\n        errors: []\n      });\n    }\n  }\n  /**\n   * Sends the verify request if any group is ready to verify.\n   * @return {!Promise<!UpdatedErrorsDef>} The list of elements whose state\n   *    must change\n   * @protected\n   */\n  ;\n\n  _proto.verify_ = function verify_() {\n    return Promise.resolve(\n    /** @type {UpdatedErrorsDef} */\n    {\n      updatedElements: [],\n      errors: []\n    });\n  }\n  /**\n   * Checks if the form has been changed from its initial state.\n   * @return {boolean}\n   * @private\n   */\n  ;\n\n  _proto.isDirty_ = function isDirty_() {\n    var elements = this.form_.elements;\n\n    for (var i = 0; i < elements.length; i++) {\n      var field = elements[i];\n\n      if (field.disabled) {\n        continue;\n      }\n\n      if (!(0, _form.isFieldDefault)(field)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Removes all custom verification errors from the elements.\n   * @private\n   */\n  ;\n\n  _proto.clearVerificationErrors_ = function clearVerificationErrors_() {\n    var elements = this.form_.elements;\n\n    if (elements) {\n      (0, _dom.iterateCursor)(elements, function (e) {\n        e.setCustomValidity('');\n      });\n    }\n  };\n\n  return FormVerifier;\n}();\n/**\n * A no-op verifier.\n * @visibleForTesting\n */\n\n\nexports.FormVerifier = FormVerifier;\n\nvar DefaultVerifier =\n/*#__PURE__*/\nfunction (_FormVerifier) {\n  _inheritsLoose(DefaultVerifier, _FormVerifier);\n\n  function DefaultVerifier() {\n    return _FormVerifier.apply(this, arguments) || this;\n  }\n\n  return DefaultVerifier;\n}(FormVerifier);\n/**\n * A verifier that verifies values via an XHR\n * @visibleForTesting\n */\n\n\nexports.DefaultVerifier = DefaultVerifier;\n\nvar AsyncVerifier =\n/*#__PURE__*/\nfunction (_FormVerifier2) {\n  _inheritsLoose(AsyncVerifier, _FormVerifier2);\n\n  /**\n   * @param {!HTMLFormElement} form\n   * @param {function():Promise<!Response>} xhr\n   */\n  function AsyncVerifier(form, xhr) {\n    var _this;\n\n    _this = _FormVerifier2.call(this, form) || this;\n    /** @protected @const*/\n\n    _this.doXhr_ = xhr;\n    /** @protected {?LastAddedResolver} */\n\n    _this.xhrResolver_ = null;\n    /** @private {!Array<!VerificationErrorDef>} */\n\n    _this.previousErrors_ = [];\n    return _this;\n  }\n  /** @override */\n\n\n  var _proto2 = AsyncVerifier.prototype;\n\n  _proto2.verify_ = function verify_() {\n    var _this2 = this;\n\n    var xhrConsumeErrors = this.doXhr_().then(function () {\n      return [];\n    }, function (error) {\n      return getResponseErrorData_(\n      /** @type {!Error} */\n      error);\n    });\n    return this.addToResolver_(xhrConsumeErrors).then(function (errors) {\n      return _this2.applyErrors_(errors);\n    });\n  }\n  /**\n   * Prevent race conditions from XHRs that arrive out of order by resolving\n   * only the most recently initiated XHR.\n   * TODO(cvializ): Replace this when the Fetch API adds cancelable fetches.\n   * @param {!Promise} promise\n   * @return {!Promise} The resolver result promise\n   */\n  ;\n\n  _proto2.addToResolver_ = function addToResolver_(promise) {\n    var _this3 = this;\n\n    if (!this.xhrResolver_) {\n      this.xhrResolver_ = new _promise.LastAddedResolver();\n\n      var cleanup = function cleanup() {\n        return _this3.xhrResolver_ = null;\n      };\n\n      this.xhrResolver_.then(cleanup, cleanup);\n    }\n\n    return this.xhrResolver_.add(promise);\n  }\n  /**\n   * Set errors on elements that failed verification, and clear any\n   * verification state for elements that passed verification.\n   * @param {!Array<!VerificationErrorDef>} errors\n   * @return {!UpdatedErrorsDef} Updated elements e.g. elements with new errors,\n   *    and elements that previously had errors but were fixed. The form will\n   *    update their user-valid/user-invalid state.\n   * @private\n   */\n  ;\n\n  _proto2.applyErrors_ = function applyErrors_(errors) {\n    var _this4 = this;\n\n    var errorElements = [];\n    var previousErrors = this.previousErrors_;\n    this.previousErrors_ = errors; // Set the error message on each element that caused an error.\n\n    for (var i = 0; i < errors.length; i++) {\n      var error = errors[i];\n      var name = (0, _log.user)().assertString(error.name, 'Verification errors must have a name property');\n      var message = (0, _log.user)().assertString(error.message, 'Verification errors must have a message property'); // If multiple elements share the same name, the first should be selected.\n      // This matches the behavior of HTML5 validation, e.g. with radio buttons.\n\n      var element = (0, _log.user)().assertElement(this.form_.\n      /*OK*/\n      querySelector(\"[name=\\\"\" + name + \"\\\"]\"), 'Verification error name property must match a field name'); // Only put verification errors on elements that are client-side valid.\n      // This prevents errors from appearing on elements that have not been\n      // filled out yet.\n\n      if (element.checkValidity()) {\n        element.setCustomValidity(message);\n        errorElements.push(element);\n      }\n    } // Create a list of form elements that had an error, but are now fixed.\n\n\n    var isFixed = function isFixed(previousError) {\n      return errors.every(function (error) {\n        return previousError.name !== error.name;\n      });\n    };\n\n    var fixedElements = previousErrors.filter(isFixed).map(function (e) {\n      return _this4.form_.\n      /*OK*/\n      querySelector(\"[name=\\\"\" + e.name + \"\\\"]\");\n    });\n    return (\n      /** @type {!UpdatedErrorsDef} */\n      {\n        updatedElements: errorElements.concat(fixedElements),\n        errors: errors\n      }\n    );\n  };\n\n  return AsyncVerifier;\n}(FormVerifier);\n/**\n * @param {!Error} error\n * @return {!Promise<!Array<VerificationErrorDef>>}\n * @private\n */\n\n\nexports.AsyncVerifier = AsyncVerifier;\n\nfunction getResponseErrorData_(error) {\n  var response = error.response;\n\n  if (!response) {\n    return Promise.resolve([]);\n  }\n\n  return response.json().then(function (json) {\n    return json.verifyErrors || [];\n  }, function () {\n    return [];\n  });\n}\n\n},{\"../../../src/dom\":18,\"../../../src/form\":24,\"../../../src/log\":26,\"../../../src/utils/promise\":45}],10:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.ValidationBubble = void 0;\n\nvar _services = require(\"../../../src/services\");\n\nvar _dom = require(\"../../../src/dom\");\n\nvar _style = require(\"../../../src/style\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @type {string} */\nvar OBJ_PROP = '__BUBBLE_OBJ';\n\nvar ValidationBubble =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a bubble component to display messages in.\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {string} id\n   */\n  function ValidationBubble(ampdoc, id) {\n    /** @private @const {string} */\n    this.id_ = id;\n    /** @private @const {!../../../src/service/viewport/viewport-interface.ViewportInterface} */\n\n    this.viewport_ = _services.Services.viewportForDoc(ampdoc);\n    /** @private @const {!../../../src/service/vsync-impl.Vsync} */\n\n    this.vsync_ = _services.Services.vsyncFor(ampdoc.win);\n    /** @private {?Element} */\n\n    this.currentTargetElement_ = null;\n    /** @private {string} */\n\n    this.currentMessage_ = '';\n    /** @private {boolean} */\n\n    this.isVisible_ = false;\n    /** @private @const {!Element} */\n\n    this.bubbleElement_ = ampdoc.win.document.createElement('div');\n    (0, _style.toggle)(this.bubbleElement_, false);\n    this.bubbleElement_.classList.add('i-amphtml-validation-bubble');\n    this.bubbleElement_[OBJ_PROP] = this;\n    ampdoc.getBody().appendChild(this.bubbleElement_);\n  }\n  /**\n   * @param {!Element} element\n   * @return {boolean}\n   */\n\n\n  var _proto = ValidationBubble.prototype;\n\n  _proto.isActiveOn = function isActiveOn(element) {\n    return this.isVisible_ && element == this.currentTargetElement_;\n  }\n  /**\n   * Hides the bubble off screen.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    if (!this.isVisible_) {\n      return;\n    }\n\n    this.isVisible_ = false;\n    this.currentTargetElement_ = null;\n    this.currentMessage_ = '';\n    this.vsync_.run({\n      measure: undefined,\n      mutate: hideBubble\n    }, {\n      bubbleElement: this.bubbleElement_\n    });\n  }\n  /**\n   * Shows the bubble targeted to an element with the passed message.\n   * @param {!Element} targetElement\n   * @param {string} message\n   */\n  ;\n\n  _proto.show = function show(targetElement, message) {\n    if (this.isActiveOn(targetElement) && message == this.currentMessage_) {\n      return;\n    }\n\n    this.isVisible_ = true;\n    this.currentTargetElement_ = targetElement;\n    this.currentMessage_ = message;\n    var state = {\n      message: message,\n      targetElement: targetElement,\n      bubbleElement: this.bubbleElement_,\n      viewport: this.viewport_,\n      id: this.id_\n    };\n    this.vsync_.run({\n      measure: measureTargetElement,\n      mutate: showBubbleElement\n    }, state);\n  };\n\n  return ValidationBubble;\n}();\n/**\n * Hides the bubble element passed through state object.\n * @param {!Object} state\n * @private\n */\n\n\nexports.ValidationBubble = ValidationBubble;\n\nfunction hideBubble(state) {\n  state.bubbleElement.removeAttribute('aria-alert');\n  state.bubbleElement.removeAttribute('role');\n  (0, _dom.removeChildren)(state.bubbleElement);\n  (0, _style.toggle)(state.bubbleElement, false);\n}\n/**\n * Measures the layout for the target element passed through state object.\n * @param {!Object} state\n * @private\n */\n\n\nfunction measureTargetElement(state) {\n  state.targetRect = state.viewport.getLayoutRect(state.targetElement);\n}\n/**\n * Updates text content, positions and displays the bubble.\n * @param {!Object} state\n * @private\n */\n\n\nfunction showBubbleElement(state) {\n  (0, _dom.removeChildren)(state.bubbleElement);\n  var messageDiv = state.bubbleElement.ownerDocument.createElement('div');\n  messageDiv.id = \"bubble-message-\" + state.id;\n  messageDiv.textContent = state.message;\n  state.bubbleElement.setAttribute('aria-labeledby', messageDiv.id);\n  state.bubbleElement.setAttribute('role', 'alert');\n  state.bubbleElement.setAttribute('aria-live', 'assertive');\n  state.bubbleElement.appendChild(messageDiv);\n  (0, _style.toggle)(state.bubbleElement, true);\n  (0, _style.setStyles)(state.bubbleElement, {\n    top: state.targetRect.top - 10 + \"px\",\n    left: state.targetRect.left + state.targetRect.width / 2 + \"px\"\n  });\n}\n\n},{\"../../../src/dom\":18,\"../../../src/services\":32,\"../../../src/style\":36}],11:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.ActionTrust = exports.DEFAULT_ACTION = exports.RAW_OBJECT_ARGS_KEY = void 0;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Key string in an action arguments map for an unparsed object literal string.\n *\n * E.g. for the action in <p on=\"tap:AMP.setState({foo: 'bar'})\",\n * then `args[RAW_OBJECT_ARGS_KEY]` is the string \"{foo: 'bar'}\".\n *\n * The action service delegates parsing of object literals to the corresponding\n * extension (in the example above, amp-bind).\n *\n * @see ./service/action-impl.ActionInfoDef\n * @const {string}\n */\nvar RAW_OBJECT_ARGS_KEY = '__AMP_OBJECT_STRING__';\n/** @const {string} Identifier for an element's default action. */\n\nexports.RAW_OBJECT_ARGS_KEY = RAW_OBJECT_ARGS_KEY;\nvar DEFAULT_ACTION = 'activate';\n/**\n * Trust level of an action.\n *\n * Corresponds to degree of user intent, i.e. events triggered with strong\n * user intent have high trust.\n *\n * @enum {number}\n */\n\nexports.DEFAULT_ACTION = DEFAULT_ACTION;\nvar ActionTrust = {\n  LOW: 1,\n  HIGH: 100\n};\nexports.ActionTrust = ActionTrust;\n\n},{}],12:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.AmpEvents = void 0;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common AMP events.\n * @enum {string}\n */\nvar AmpEvents = {\n  DOM_UPDATE: 'amp:dom-update',\n  FORM_DIRTINESS_CHANGE: 'amp:form-dirtiness-change',\n  FORM_VALUE_CHANGE: 'amp:form-value-change',\n  VISIBILITY_CHANGE: 'amp:visibilitychange',\n  // https://github.com/ampproject/amphtml/blob/master/ads/README.md#page-visibility\n  // The following codes are only used for testing.\n  // TODO(choumx): Move these to a separate enum so they can be DCE'd.\n  ATTACHED: 'amp:attached',\n  STUBBED: 'amp:stubbed',\n  LOAD_START: 'amp:load:start',\n  LOAD_END: 'amp:load:end',\n  ERROR: 'amp:error',\n  SIZE_CHANGED: 'amp:size-changed'\n};\nexports.AmpEvents = AmpEvents;\n\n},{}],13:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.triggerAnalyticsEvent = triggerAnalyticsEvent;\n\nvar _services = require(\"./services\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Helper method to trigger analytics event if amp-analytics is available.\n * TODO: Do not expose this function\n * @param {!Element} target\n * @param {string} eventType\n * @param {!JsonObject=} opt_vars A map of vars and their values.\n */\nfunction triggerAnalyticsEvent(target, eventType, opt_vars) {\n  _services.Services.analyticsForDocOrNull(target).then(function (analytics) {\n    if (!analytics) {\n      return;\n    }\n\n    analytics.triggerEventForTarget(target, eventType, opt_vars);\n  });\n}\n\n},{\"./services\":32}],14:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.AsyncInputClasses = exports.AsyncInputAttributes = exports.AsyncInput = void 0;\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Interface for all AMP Async Input Elements.\n * enforces the overridable function, getValue().\n * Async Input should be implemented\n * by components like AMP form, to async request\n * a value from a component, and then be used for\n * some other action. For examples, this can be used\n * by reCAPTCHA to request tokens for the form.\n *\n * NOTE: Elements that implemented AsyncInput must\n * Also add and follow the other exported constants.\n * See amp-recaptcha-input as an example.\n *\n * @interface\n */\nvar AsyncInput =\n/*#__PURE__*/\nfunction () {\n  function AsyncInput() {}\n\n  var _proto = AsyncInput.prototype;\n\n  /**\n   * Called to get the asynchronous value of an\n   * AsyncInput field.\n   * @return {!Promise<string>}\n   */\n  _proto.getValue = function getValue() {};\n\n  return AsyncInput;\n}();\n/**\n * Attributes\n *\n * Components implementing the AsyncInput,\n * are expected to assert these attributes\n * at the appropriate time.\n *\n * @enum {string}\n */\n\n\nexports.AsyncInput = AsyncInput;\nvar AsyncInputAttributes = {\n  /**\n   * data-name\n   *\n   * Required attribute that must be asserted by every async-input\n   * Element. This is used by AMP form to add the key\n   * for the form submission request\n   */\n  NAME: 'name'\n};\n/**\n * Classes\n *\n * Components implementing the AsyncInput,\n * are expected to add the following classes\n * at the appropriate time.\n *\n * @enum {string}\n */\n\nexports.AsyncInputAttributes = AsyncInputAttributes;\nvar AsyncInputClasses = {\n  /**\n   * i-amphtml-async-input\n   *\n   * Required base class that must be added to the async-input\n   * element on buildCallback or layoutCallback.\n   * This will be used by other amp components to find\n   * and use async-input elements.\n   */\n  'ASYNC_INPUT': 'i-amphtml-async-input',\n\n  /**\n   * i-async-require-action\n   *\n   * Class that is added when the async call should be treated\n   * as a required action for the form. These calls will be\n   * executed before the presubmit calls of all async inputs.\n   */\n  'ASYNC_REQUIRED_ACTION': 'i-async-require-action'\n};\nexports.AsyncInputClasses = AsyncInputClasses;\n\n},{}],15:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.CommonSignals = void 0;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Commonly used signals across different elements and documents.\n * @enum {string}\n */\nvar CommonSignals = {\n  /**\n   * The element has been upgraded from ElementStub to its real implementation.\n   */\n  UPGRADED: 'upgraded',\n\n  /**\n   * The element has been built.\n   */\n  BUILT: 'built',\n\n  /**\n   * The element has started loading.\n   * LOAD_START triggers at the start of the layoutCallback.\n   */\n  LOAD_START: 'load-start',\n\n  /**\n   * Rendering has been confirmed to have been started.\n   * It is a signal to indicate meaningful display (e.g. text could be displayed\n   * CSS is correctly installed/applied).\n   *\n   * Elements can optionally implement RENDER_START signal. (e.g. ad, shadowdoc)\n   * if it want to define its own meaningful display time and toggle visibility.\n   *\n   * Simpler elements's RENDER_START can be equal to the start of the\n   * buildCallback\n   */\n  RENDER_START: 'render-start',\n\n  /**\n   * The element has been loaded.\n   * LOAD_END triggers at the end of the layoutCallback.\n   *\n   */\n  LOAD_END: 'load-end',\n\n  /**\n   * The initial contents of an element/document/embed have been loaded.\n   * INI_LOAD is an optional signal, implemented by ads, story, and elements\n   * that consist of other resources.\n   * It instructs that all critical resources has been loaded, and can be used\n   * for more accurate visibility measurement.\n   * When an element doesn't consist multiple child resources, LOAD_END signal\n   * can be used to indicate resource load completion.\n   * Note: Based on the implementation, INI_LOAD can trigger before or after\n   * LOAD_END.\n   */\n  INI_LOAD: 'ini-load',\n\n  /**\n   * The element has been unlaid out.\n   */\n  UNLOAD: 'unload'\n};\nexports.CommonSignals = CommonSignals;\n\n},{}],16:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.config = exports.urls = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nvar env = self.AMP_CONFIG || {};\nvar thirdPartyFrameRegex = typeof env['thirdPartyFrameRegex'] == 'string' ? new RegExp(env['thirdPartyFrameRegex']) : env['thirdPartyFrameRegex'];\nvar cdnProxyRegex = typeof env['cdnProxyRegex'] == 'string' ? new RegExp(env['cdnProxyRegex']) : env['cdnProxyRegex'];\n/** @type {!Object<string, string|boolean|RegExp|Array<RegExp>>} */\n\nvar urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex: thirdPartyFrameRegex || /^d-\\d+\\.ampproject\\.net$/,\n  cdn: env['cdnUrl'] || 'https://cdn.ampproject.org',\n\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex: cdnProxyRegex || /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting: env['errorReportingUrl'] || 'https://amp-error-reporting.appspot.com/r',\n  localDev: env['localDev'] || false,\n\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/master/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [/(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/, /(^|\\.)gmail\\.dev$/]\n};\nexports.urls = urls;\nvar config = {\n  urls: urls\n};\nexports.config = config;\n\n},{}],17:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.assertIsName = assertIsName;\nexports.setScopeSelectorSupportedForTesting = setScopeSelectorSupportedForTesting;\nexports.isScopeSelectorSupported = isScopeSelectorSupported;\nexports.prependSelectorsWith = prependSelectorsWith;\nexports.escapeCssSelectorIdent = escapeCssSelectorIdent;\nexports.escapeCssSelectorNth = escapeCssSelectorNth;\n\nvar _cssEscape = require(\"../third_party/css-escape/css-escape\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nfunction assertIsName(name) {\n  (0, _log.devAssert)(/^[\\w-]+$/.test(name));\n}\n/**\n * @type {boolean|undefined}\n */\n\n\nvar scopeSelectorSupported;\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\n\nfunction setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\n\n\nfunction isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return scopeSelectorSupported = testScopeSelector(el);\n}\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\n\n\nfunction testScopeSelector(el) {\n  try {\n    var doc = el.ownerDocument;\n    var testElement = doc.createElement('div');\n    var testChild = doc.createElement('div');\n    testElement.appendChild(testChild); // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n\n    return testElement.\n    /*OK*/\n    querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\n\n\nfunction prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, \"$&\" + distribute + \" \");\n}\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n */\n\n\nfunction escapeCssSelectorIdent(ident) {\n  return (0, _cssEscape.cssEscape)(ident);\n}\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\n\n\nfunction escapeCssSelectorNth(ident) {\n  var escaped = String(ident); // Ensure it doesn't close the nth-child psuedo class.\n\n  (0, _log.devAssert)(escaped.indexOf(')') === -1);\n  return escaped;\n}\n\n},{\"../third_party/css-escape/css-escape\":48,\"./log\":26}],18:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.waitForChild = waitForChild;\nexports.waitForChildPromise = waitForChildPromise;\nexports.waitForBodyOpen = waitForBodyOpen;\nexports.waitForBodyOpenPromise = waitForBodyOpenPromise;\nexports.removeElement = removeElement;\nexports.removeChildren = removeChildren;\nexports.copyChildren = copyChildren;\nexports.insertAfterOrAtStart = insertAfterOrAtStart;\nexports.addAttributesToElement = addAttributesToElement;\nexports.createElementWithAttributes = createElementWithAttributes;\nexports.isConnectedNode = isConnectedNode;\nexports.rootNodeFor = rootNodeFor;\nexports.isShadowRoot = isShadowRoot;\nexports.closest = closest;\nexports.closestNode = closestNode;\nexports.closestAncestorElementBySelector = closestAncestorElementBySelector;\nexports.ancestorElements = ancestorElements;\nexports.ancestorElementsByTag = ancestorElementsByTag;\nexports.childElement = childElement;\nexports.childElements = childElements;\nexports.lastChildElement = lastChildElement;\nexports.childNodes = childNodes;\nexports.childElementByAttr = childElementByAttr;\nexports.lastChildElementByAttr = lastChildElementByAttr;\nexports.childElementsByAttr = childElementsByAttr;\nexports.childElementByTag = childElementByTag;\nexports.childElementsByTag = childElementsByTag;\nexports.matches = matches;\nexports.elementByTag = elementByTag;\nexports.scopedQuerySelector = scopedQuerySelector;\nexports.scopedQuerySelectorAll = scopedQuerySelectorAll;\nexports.getDataParamsFromAttributes = getDataParamsFromAttributes;\nexports.hasNextNodeInDocumentOrder = hasNextNodeInDocumentOrder;\nexports.templateContentClone = templateContentClone;\nexports.iterateCursor = iterateCursor;\nexports.openWindowDialog = openWindowDialog;\nexports.isJsonScriptTag = isJsonScriptTag;\nexports.isJsonLdScriptTag = isJsonLdScriptTag;\nexports.isRTL = isRTL;\nexports.escapeHtml = escapeHtml;\nexports.tryFocus = tryFocus;\nexports.isIframed = isIframed;\nexports.isAmpElement = isAmpElement;\nexports.whenUpgradedToCustomElement = whenUpgradedToCustomElement;\nexports.fullscreenEnter = fullscreenEnter;\nexports.fullscreenExit = fullscreenExit;\nexports.isFullscreenElement = isFullscreenElement;\nexports.isEnabled = isEnabled;\nexports.domOrderComparator = domOrderComparator;\nexports.toggleAttribute = toggleAttribute;\nexports.getVerticalScrollbarWidth = getVerticalScrollbarWidth;\nexports.UPGRADE_TO_CUSTOMELEMENT_RESOLVER = exports.UPGRADE_TO_CUSTOMELEMENT_PROMISE = void 0;\n\nvar _promise = require(\"./utils/promise\");\n\nvar _css = require(\"./css\");\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object\");\n\nvar _string = require(\"./string\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;'\n};\nvar HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n/** @const {string} */\n\nvar UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n/** @const {string} */\n\nexports.UPGRADE_TO_CUSTOMELEMENT_PROMISE = UPGRADE_TO_CUSTOMELEMENT_PROMISE;\nvar UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\n\nexports.UPGRADE_TO_CUSTOMELEMENT_RESOLVER = UPGRADE_TO_CUSTOMELEMENT_RESOLVER;\n\nfunction waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n\n\n  var win = (0, _types.toWin)(parent.ownerDocument.defaultView);\n\n  if (win.MutationObserver) {\n    /** @const {MutationObserver} */\n    var observer = new win.MutationObserver(function () {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {\n      childList: true\n    });\n  } else {\n    /** @const {number} */\n    var interval = win.setInterval(function () {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    },\n    /* milliseconds */\n    5);\n  }\n}\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\n\n\nfunction waitForChildPromise(parent, checkFunc) {\n  return new Promise(function (resolve) {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\n\n\nfunction waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, function () {\n    return !!doc.body;\n  }, callback);\n}\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\n\n\nfunction waitForBodyOpenPromise(doc) {\n  return new Promise(function (resolve) {\n    return waitForBodyOpen(doc, resolve);\n  });\n}\n/**\n * Removes the element.\n * @param {!Element} element\n */\n\n\nfunction removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element} parent\n */\n\n\nfunction removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\n\n\nfunction copyChildren(from, to) {\n  var frag = to.ownerDocument.createDocumentFragment();\n\n  for (var n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n\n  to.appendChild(frag);\n}\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node} after\n */\n\n\nfunction insertAfterOrAtStart(root, element, after) {\n  var before = after ? after.nextSibling : root.firstChild;\n  root.insertBefore(element, before);\n}\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\n\n\nfunction addAttributesToElement(element, attributes) {\n  for (var attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n\n  return element;\n}\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\n\n\nfunction createElementWithAttributes(doc, tagName, attributes) {\n  var element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\n\n\nfunction isConnectedNode(node) {\n  var connected = node.isConnected;\n\n  if (connected !== undefined) {\n    return connected;\n  } // \"An element is connected if its shadow-including root is a document.\"\n\n\n  var n = node;\n\n  do {\n    n = rootNodeFor(n);\n\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\n\n\nfunction rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n\n  var n; // Check isShadowRoot() is only needed for the polyfill case.\n\n  for (n = node; !!n.parentNode && !isShadowRoot(n); n = n.parentNode) {}\n\n  return n;\n}\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isShadowRoot(value) {\n  // TODO(#22733): remove in preference to dom's `rootNodeFor`.\n  if (!value) {\n    return false;\n  } // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n\n\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n\n  return value.nodeType ==\n  /* DOCUMENT_FRAGMENT */\n  11 && Object.prototype.toString.call(value) === '[object ShadowRoot]';\n}\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\n\n\nfunction closest(element, callback, opt_stopAt) {\n  for (var el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\n\n\nfunction closestNode(node, callback) {\n  for (var n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\n\n\nfunction closestAncestorElementBySelector(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  return closest(element, function (el) {\n    return matches(el, selector);\n  });\n}\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\n\n\nfunction ancestorElements(child, predicate) {\n  var ancestors = [];\n\n  for (var ancestor = child.parentElement; ancestor; ancestor = ancestor.parentElement) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n\n  return ancestors;\n}\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\n\n\nfunction ancestorElementsByTag(child, tagName) {\n  (0, _css.assertIsName)(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, function (el) {\n    return el.tagName == tagName;\n  });\n}\n/**\n * Finds the first child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\n\n\nfunction childElement(parent, callback) {\n  for (var child = parent.firstElementChild; child; child = child.nextElementSibling) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\n\n\nfunction childElements(parent, callback) {\n  var children = [];\n\n  for (var child = parent.firstElementChild; child; child = child.nextElementSibling) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n\n  return children;\n}\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\n\n\nfunction lastChildElement(parent, callback) {\n  for (var child = parent.lastElementChild; child; child = child.previousElementSibling) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\n\n\nfunction childNodes(parent, callback) {\n  var nodes = [];\n\n  for (var child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n\n  return nodes;\n}\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\n\n\nfunction childElementByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return (\n    /*OK*/\n    scopedQuerySelector(parent, \"> [\" + attr + \"]\")\n  );\n}\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\n\n\nfunction lastChildElementByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return lastChildElement(parent, function (el) {\n    return el.hasAttribute(attr);\n  });\n}\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\n\n\nfunction childElementsByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return (\n    /*OK*/\n    scopedQuerySelectorAll(parent, \"> [\" + attr + \"]\")\n  );\n}\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {?Element}\n */\n\n\nfunction childElementByTag(parent, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return (\n    /*OK*/\n    scopedQuerySelector(parent, \"> \" + tagName)\n  );\n}\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\n\n\nfunction childElementsByTag(parent, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return (\n    /*OK*/\n    scopedQuerySelectorAll(parent, \"> \" + tagName)\n  );\n}\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\n\n\nfunction matches(el, selector) {\n  var matcher = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector || el.oMatchesSelector;\n\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n\n  return false; // IE8 always returns false.\n}\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\n\n\nfunction elementByTag(element, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return element.\n  /*OK*/\n  querySelector(tagName);\n}\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\n\n\nfunction scopedQuerySelectionFallback(root, selector) {\n  var unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  var scopedSelector = (0, _css.prependSelectorsWith)(selector, \".\" + unique);\n  var elements = root.\n  /*OK*/\n  querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {?Element}\n */\n\n\nfunction scopedQuerySelector(root, selector) {\n  if ((0, _css.isScopeSelectorSupported)(root)) {\n    return root.\n    /*OK*/\n    querySelector((0, _css.prependSelectorsWith)(selector, ':scope'));\n  } // Only IE.\n\n\n  var fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\n\n\nfunction scopedQuerySelectorAll(root, selector) {\n  if ((0, _css.isScopeSelectorSupported)(root)) {\n    return root.\n    /*OK*/\n    querySelectorAll((0, _css.prependSelectorsWith)(selector, ':scope'));\n  } // Only IE.\n\n\n  return scopedQuerySelectionFallback(root, selector);\n}\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!Element} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\n\n\nfunction getDataParamsFromAttributes(element, opt_computeParamNameFunc, opt_paramPattern) {\n  var computeParamNameFunc = opt_computeParamNameFunc || function (key) {\n    return key;\n  };\n\n  var dataset = element.dataset;\n  var params = (0, _object.dict)();\n  var paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n\n  for (var key in dataset) {\n    var _matches = key.match(paramPattern);\n\n    if (_matches) {\n      var param = _matches[1][0].toLowerCase() + _matches[1].substr(1);\n\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n\n  return params;\n}\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\n\n\nfunction hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  var currentElement = element;\n\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while ((currentElement = currentElement.parentNode) && currentElement != opt_stopNode);\n\n  return false;\n}\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\n\n\nfunction templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    var content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\n\n\nfunction iterateCursor(iterable, cb) {\n  var length = iterable.length;\n\n  for (var i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\n\n\nfunction openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  var res;\n\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    (0, _log.dev)().error('DOM', 'Failed to open url on target: ', target, e);\n  } // Then try with `_top` target.\n\n\n  if (!res && target != '_top' && !(0, _string.includes)(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n\n  return res;\n}\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isJsonScriptTag(element) {\n  return element.tagName == 'SCRIPT' && element.hasAttribute('type') && element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON';\n}\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isJsonLdScriptTag(element) {\n  return element.tagName == 'SCRIPT' && element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON';\n}\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\n\n\nfunction isRTL(doc) {\n  var dir = doc.body.getAttribute('dir') || doc.documentElement.getAttribute('dir') || 'ltr';\n  return dir == 'rtl';\n}\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\n\n\nfunction escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n/**\n * @param {string} c\n * @return {string}\n */\n\n\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\n\n\nfunction tryFocus(element) {\n  try {\n    element.\n    /*OK*/\n    focus();\n  } catch (e) {// IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nfunction isIframed(win) {\n  return win.parent && win.parent != win;\n}\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isAmpElement(element) {\n  var tag = element.tagName; // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n\n  return (0, _string.startsWith)(tag, 'AMP-') && // Some \"amp-*\" elements are not really AMP elements. :smh:\n  !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY');\n}\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!Element} element\n * @return {!Promise<!Element>}\n */\n\n\nfunction whenUpgradedToCustomElement(element) {\n  (0, _log.devAssert)(isAmpElement(element), 'element is not AmpElement');\n\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(element);\n  } // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n\n\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    var deferred = new _promise.Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n/**\n * Replacement for `Element.requestFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n * @param {!Element} element\n */\n\n\nfunction fullscreenEnter(element) {\n  var requestFs = element.requestFullscreen || element.requestFullScreen || element.webkitRequestFullscreen || element.webkitEnterFullscreen || element.msRequestFullscreen || element.mozRequestFullScreen;\n\n  if (requestFs) {\n    requestFs.call(element);\n  }\n}\n/**\n * Replacement for `Document.exitFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/exitFullscreen\n * @param {!Element} element\n */\n\n\nfunction fullscreenExit(element) {\n  var elementBoundExit = element.cancelFullScreen || element.exitFullscreen || element.webkitExitFullscreen || element.webkitCancelFullScreen || element.mozCancelFullScreen || element.msExitFullscreen;\n\n  if (elementBoundExit) {\n    elementBoundExit.call(element);\n    return;\n  }\n\n  var ownerDocument = element.ownerDocument;\n\n  if (!ownerDocument) {\n    return;\n  }\n\n  var docBoundExit = ownerDocument.cancelFullScreen || ownerDocument.exitFullscreencancelFullScreen || ownerDocument.webkitExitFullscreencancelFullScreen || ownerDocument.webkitCancelFullScreencancelFullScreen || ownerDocument.mozCancelFullScreencancelFullScreen || ownerDocument.msExitFullscreen;\n\n  if (docBoundExit) {\n    docBoundExit.call(ownerDocument);\n  }\n}\n/**\n * Replacement for `Document.fullscreenElement`.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenElement\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isFullscreenElement(element) {\n  var webkitDisplayingFullscreen = element.webkitDisplayingFullscreen;\n\n  if (webkitDisplayingFullscreen !== undefined) {\n    return webkitDisplayingFullscreen;\n  }\n\n  var ownerDocument = element.ownerDocument;\n\n  if (!ownerDocument) {\n    return false;\n  }\n\n  var fullscreenElement = ownerDocument.fullscreenElement || ownerDocument.webkitFullscreenElement || ownerDocument.mozFullScreenElement || ownerDocument.webkitCurrentFullScreenElement;\n  return fullscreenElement == element;\n}\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!Element} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\n\n\nfunction isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\n\n\nfunction domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  var pos = element1.compareDocumentPosition(element2);\n  var precedingOrContains = Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS; // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n\n  if (pos & precedingOrContains) {\n    return 1;\n  } // if fe2 is following or contained by fe1, then fe1 is before fe2\n\n\n  return -1;\n}\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\n\n\nfunction toggleAttribute(element, name, forced) {\n  var hasAttribute = element.hasAttribute(name);\n  var enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\n\n\nfunction getVerticalScrollbarWidth(win) {\n  var documentElement = win.document.documentElement;\n  var windowWidth = win.\n  /*OK*/\n  innerWidth;\n  var documentWidth = documentElement.\n  /*OK*/\n  clientWidth;\n  return windowWidth - documentWidth;\n}\n\n},{\"./css\":17,\"./log\":26,\"./string\":34,\"./types\":37,\"./utils/object\":44,\"./utils/promise\":45}],19:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getElementService = getElementService;\nexports.getElementServiceIfAvailable = getElementServiceIfAvailable;\nexports.getElementServiceForDoc = getElementServiceForDoc;\nexports.getElementServiceIfAvailableForDoc = getElementServiceIfAvailableForDoc;\nexports.getElementServiceIfAvailableForDocInEmbedScope = getElementServiceIfAvailableForDocInEmbedScope;\nexports.extensionScriptsInNode = extensionScriptsInNode;\nexports.isExtensionScriptInNode = isExtensionScriptInNode;\n\nvar dom = _interopRequireWildcard(require(\"./dom\"));\n\nvar _service = require(\"./service\");\n\nvar _types = require(\"./types\");\n\nvar _log = require(\"./log\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nfunction getElementService(win, id, extension, opt_element) {\n  return getElementServiceIfAvailable(win, id, extension, opt_element).then(function (service) {\n    return assertService(service, id, extension);\n  });\n}\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailable(win, id, extension, opt_element) {\n  var s = (0, _service.getServicePromiseOrNull)(win, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      s\n    );\n  }\n\n  return getElementServicePromiseOrNull(win, id, extension, opt_element);\n}\n/**\n * @param {!Window} win\n * @param {string} elementName Name of an extended custom element.\n * @return {boolean} Whether this element is scheduled to be loaded.\n */\n\n\nfunction isElementScheduled(win, elementName) {\n  // Set in custom-element.js\n  if (!win.__AMP_EXTENDED_ELEMENTS) {\n    return false;\n  }\n\n  return !!win.__AMP_EXTENDED_ELEMENTS[elementName];\n}\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\n\n\nfunction getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(element, id, extension, opt_element).then(function (service) {\n    return assertService(service, id, extension);\n  });\n}\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailableForDoc(element, id, extension, opt_element) {\n  var s = (0, _service.getServicePromiseOrNullForDoc)(element, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      s\n    );\n  }\n\n  var ampdoc = (0, _service.getAmpdoc)(element);\n  return ampdoc.waitForBodyOpen().then(function () {\n    return waitForExtensionIfPresent(ampdoc.win, extension, ampdoc.win.document.head);\n  }).then(function () {\n    // If this service is provided by an element, then we can't depend on\n    // the service (they may not use the element).\n    if (opt_element) {\n      return (0, _service.getServicePromiseOrNullForDoc)(element, id);\n    } else if (isElementScheduled(ampdoc.win, extension)) {\n      return (0, _service.getServicePromiseForDoc)(element, id);\n    }\n\n    return null;\n  });\n}\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailableForDocInEmbedScope(element, id, extension) {\n  var s = (0, _service.getExistingServiceForDocInEmbedScope)(element, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      Promise.resolve(s)\n    );\n  }\n\n  var win = (0, _types.toWin)(element.ownerDocument.defaultView);\n  var topWin = (0, _service.getTopWindow)(win); // In embeds, doc services are stored on the embed window.\n\n  if (win !== topWin) {\n    return getElementServicePromiseOrNull(win, id, extension);\n  } else {\n    // Only fallback to element's ampdoc (top-level) if not embedded.\n    return getElementServiceIfAvailableForDoc(element, id, extension);\n  }\n}\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction assertService(service, id, extension) {\n  return (\n    /** @type {!Object} */\n    (0, _log.userAssert)(service, 'Service %s was requested to be provided through %s, ' + 'but %s is not loaded in the current page. To fix this ' + 'problem load the JavaScript file for %s in this page.', id, extension, extension, extension)\n  );\n}\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Array<string>}\n */\n\n\nfunction extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n\n  var scripts = {}; // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n\n  var list = head.querySelectorAll('script[custom-element],script[custom-template]');\n\n  for (var i = 0; i < list.length; i++) {\n    var script = list[i];\n    var name = script.getAttribute('custom-element') || script.getAttribute('custom-template');\n    scripts[name] = true;\n  }\n\n  return Object.keys(scripts);\n}\n/**\n * Waits for body to be present then verifies that an extension script is\n * present in head for installation.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} extensionId\n * @return {!Promise<boolean>}\n */\n\n\nfunction isExtensionScriptInNode(ampdoc, extensionId) {\n  return ampdoc.waitForBodyOpen().then(function () {\n    return extensionScriptInNode(ampdoc.getHeadNode(), extensionId);\n  });\n}\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @param {string} extensionId\n * @return {boolean}\n * @private\n */\n\n\nfunction extensionScriptInNode(head, extensionId) {\n  return extensionScriptsInNode(head).includes(extensionId);\n}\n/**\n * Waits for an extension if its script is present\n * @param {!Window} win\n * @param {string} extension\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Promise}\n * @private\n */\n\n\nfunction waitForExtensionIfPresent(win, extension, head) {\n  /**\n   * If there is an extension script wait for it to load before trying\n   * to get the service. Prevents a race condition when everything but\n   * the extensions is in cache. If there is no script then it's either\n   * not present, or the service was defined by a test. In those cases\n   * we don't wait around for an extension that does not exist.\n   */\n  // TODO(jpettitt) investigate registerExtension to short circuit\n  // the dom call in extensionScriptsInNode()\n  if (!extensionScriptInNode(head, extension)) {\n    return Promise.resolve();\n  }\n\n  var extensions = (0, _service.getService)(win, 'extensions');\n  return (\n    /** @type {!Promise<?Object>} */\n    extensions.waitForExtension(win, extension)\n  );\n}\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\n\n\nfunction getElementServicePromiseOrNull(win, id, extension, opt_element) {\n  return dom.waitForBodyOpenPromise(win.document).then(function () {\n    return waitForExtensionIfPresent(win, extension, win.document.head);\n  }).then(function () {\n    // If this service is provided by an element, then we can't depend on\n    // the service (they may not use the element).\n    if (opt_element) {\n      return (0, _service.getServicePromiseOrNull)(win, id);\n    } else if (isElementScheduled(win, extension)) {\n      return (0, _service.getServicePromise)(win, id);\n    }\n\n    return null;\n  });\n}\n\n},{\"./dom\":18,\"./log\":26,\"./service\":31,\"./types\":37}],20:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.internalListenImplementation = internalListenImplementation;\nexports.detectEvtListenerOptsSupport = detectEvtListenerOptsSupport;\nexports.resetEvtListenerOptsSupportForTesting = resetEvtListenerOptsSupportForTesting;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nvar optsSupported;\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\nfunction internalListenImplementation(element, eventType, listener, opt_evtListenerOpts) {\n  var localElement = element;\n  var localListener = listener;\n  /**\n   * @type {?Function}\n   */\n\n  var wrapped;\n\n  wrapped = function wrapped(event) {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n\n      throw e;\n    }\n  };\n\n  var optsSupported = detectEvtListenerOptsSupport();\n  var capture = false;\n\n  if (opt_evtListenerOpts) {\n    capture = opt_evtListenerOpts.capture;\n  }\n\n  localElement.addEventListener(eventType, wrapped, optsSupported ? opt_evtListenerOpts : capture);\n  return function () {\n    if (localElement) {\n      localElement.removeEventListener(eventType, wrapped, optsSupported ? opt_evtListenerOpts : capture);\n    } // Ensure these are GC'd\n\n\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\n\n\nfunction detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    var options = {\n      get capture() {\n        optsSupported = true;\n      }\n\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {// EventListenerOptions are not supported\n  }\n\n  return optsSupported;\n}\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\n\n\nfunction resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n\n},{}],21:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.createCustomEvent = createCustomEvent;\nexports.listen = listen;\nexports.getData = getData;\nexports.getDetail = getDetail;\nexports.listenOnce = listenOnce;\nexports.listenOncePromise = listenOncePromise;\nexports.isLoaded = isLoaded;\nexports.loadPromise = loadPromise;\nexports.isLoadErrorMessage = isLoadErrorMessage;\nexports.MEDIA_LOAD_FAILURE_SRC_PROPERTY = void 0;\n\nvar _eventHelperListen = require(\"./event-helper-listen\");\n\nvar _dom = require(\"./dom\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string}  */\nvar LOAD_FAILURE_PREFIX = 'Failed to load:';\n/** @const {string} */\n\nvar MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\n\nexports.MEDIA_LOAD_FAILURE_SRC_PROPERTY = MEDIA_LOAD_FAILURE_SRC_PROPERTY;\n\nfunction createCustomEvent(win, type, detail, opt_eventInit) {\n  var eventInit =\n  /** @type {!CustomEventInit} */\n  {\n    detail: detail\n  };\n  Object.assign(eventInit, opt_eventInit); // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n\n  if (typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    var e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(type, !!eventInit.bubbles, !!eventInit.cancelable, detail);\n    return e;\n  }\n}\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\n\nfunction listen(element, eventType, listener, opt_evtListenerOpts) {\n  return (0, _eventHelperListen.internalListenImplementation)(element, eventType, listener, opt_evtListenerOpts);\n}\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\n\n\nfunction getData(event) {\n  return (\n    /** @type {?JsonObject|string|undefined} */\n    event.data\n  );\n}\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\n\n\nfunction getDetail(event) {\n  return (\n    /** @type {?JsonObject|string|undefined} */\n    event.detail\n  );\n}\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\n\nfunction listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  var localListener = listener;\n  var unlisten = (0, _eventHelperListen.internalListenImplementation)(element, eventType, function (event) {\n    try {\n      localListener(event);\n    } finally {\n      // Ensure listener is GC'd\n      localListener = null;\n      unlisten();\n    }\n  }, opt_evtListenerOpts);\n  return unlisten;\n}\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\n\n\nfunction listenOncePromise(element, eventType, opt_evtListenerOpts, opt_cancel) {\n  var unlisten;\n  var eventPromise = new Promise(function (resolve) {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n\n  return eventPromise;\n}\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\n\n\nfunction isLoaded(eleOrWindow) {\n  return !!(eleOrWindow.complete || eleOrWindow.readyState == 'complete' || isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0 || // If the passed in thing is a Window, infer loaded state from\n  //\n  eleOrWindow.document && eleOrWindow.document.readyState == 'complete');\n}\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\n\n\nfunction loadPromise(eleOrWindow) {\n  var unlistenLoad;\n  var unlistenError;\n\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n\n  var isMediaElement = isHTMLMediaElement(eleOrWindow);\n\n  if (isMediaElement && eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc) {\n    return Promise.reject(eleOrWindow);\n  }\n\n  var loadingPromise = new Promise(function (resolve, reject) {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    } // Don't unlisten on error for Windows.\n\n\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n\n    var errorTarget = eleOrWindow; // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = (0, _dom.lastChildElement)(eleOrWindow, function (child) {\n        return child.tagName === 'SOURCE';\n      });\n\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n  return loadingPromise.then(function () {\n    if (unlistenError) {\n      unlistenError();\n    }\n\n    return eleOrWindow;\n  }, function () {\n    if (unlistenLoad) {\n      unlistenLoad();\n    }\n\n    failedToLoad(eleOrWindow);\n  });\n}\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\n\n\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] = eleOrWindow.currentSrc || true;\n  } // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n\n\n  var target = eleOrWindow;\n\n  if (target && target.src) {\n    target = target.src;\n  }\n\n  throw (0, _log.user)().createError(LOAD_FAILURE_PREFIX, target);\n}\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\n\n\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\n\n\nfunction isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n\n},{\"./dom\":18,\"./event-helper-listen\":20,\"./log\":26}],22:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isCanary = isCanary;\nexports.getBinaryType = getBinaryType;\nexports.isExperimentOn = isExperimentOn;\nexports.toggleExperiment = toggleExperiment;\nexports.experimentToggles = experimentToggles;\nexports.experimentTogglesOrNull = experimentTogglesOrNull;\nexports.getExperimentTogglesForTesting = getExperimentTogglesForTesting;\nexports.resetExperimentTogglesForTesting = resetExperimentTogglesForTesting;\nexports.randomlySelectUnsetExperiments = randomlySelectUnsetExperiments;\nexports.getExperimentBranch = getExperimentBranch;\nexports.forceExperimentBranch = forceExperimentBranch;\nexports.RANDOM_NUMBER_GENERATORS = exports.ExperimentInfo = void 0;\n\nvar _log = require(\"./log\");\n\nvar _mode = require(\"./mode\");\n\nvar _object = require(\"./utils/object\");\n\nvar _url = require(\"./url\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\n/** @const {string} */\nvar TAG = 'EXPERIMENTS';\n/** @const {string} */\n\nvar LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n/** @const {string} */\n\nvar TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n/**\n * @typedef {{\n *   isTrafficEligible: function(!Window):boolean,\n *   branches: !Array<string>\n * }}\n */\n\nvar ExperimentInfo;\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\n\nexports.ExperimentInfo = ExperimentInfo;\n\nfunction isCanary(win) {\n  return !!(win.AMP_CONFIG && win.AMP_CONFIG.canary);\n}\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\n\n\nfunction getBinaryType(win) {\n  return win.AMP_CONFIG && win.AMP_CONFIG.type ? win.AMP_CONFIG.type : 'unknown';\n}\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\n\n\nfunction isExperimentOn(win, experimentId) {\n  var toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\n\n\nfunction toggleExperiment(win, experimentId, opt_on, opt_transientExperiment) {\n  var currentlyOn = isExperimentOn(win,\n  /*OK*/\n  experimentId);\n  var on = !!(opt_on !== undefined ? opt_on : !currentlyOn);\n\n  if (on != currentlyOn) {\n    var toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      var storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles); // Avoid affecting tests that spy/stub warn().\n\n      if (!(0, _mode.getMode)().test) {\n        (0, _log.user)().warn(TAG, '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental', experimentId, on ? 'enabled' : 'disabled', win.location.hostname);\n      }\n    }\n  }\n\n  return on;\n}\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\n\n\nfunction experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n\n  win[TOGGLES_WINDOW_PROPERTY] = Object.create(null);\n  var toggles = win[TOGGLES_WINDOW_PROPERTY]; // Read the default config of this build.\n\n  if (win.AMP_CONFIG) {\n    for (var experimentId in win.AMP_CONFIG) {\n      var frequency = win.AMP_CONFIG[experimentId];\n\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  } // Read document level override from meta tag.\n\n\n  if (win.AMP_CONFIG && Array.isArray(win.AMP_CONFIG['allow-doc-opt-in']) && win.AMP_CONFIG['allow-doc-opt-in'].length > 0) {\n    var allowed = win.AMP_CONFIG['allow-doc-opt-in'];\n    var meta = win.document.head.querySelector('meta[name=\"amp-experiments-opt-in\"]');\n\n    if (meta) {\n      var optedInExperiments = meta.getAttribute('content').split(',');\n\n      for (var i = 0; i < optedInExperiments.length; i++) {\n        if (allowed.indexOf(optedInExperiments[i]) != -1) {\n          toggles[optedInExperiments[i]] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  if (win.AMP_CONFIG && Array.isArray(win.AMP_CONFIG['allow-url-opt-in']) && win.AMP_CONFIG['allow-url-opt-in'].length > 0) {\n    var _allowed = win.AMP_CONFIG['allow-url-opt-in'];\n    var hash = win.location.originalHash || win.location.hash;\n    var params = (0, _url.parseQueryString)(hash);\n\n    for (var _i = 0; _i < _allowed.length; _i++) {\n      var param = params[\"e-\" + _allowed[_i]];\n\n      if (param == '1') {\n        toggles[_allowed[_i]] = true;\n      }\n\n      if (param == '0') {\n        toggles[_allowed[_i]] = false;\n      }\n    }\n  }\n\n  return toggles;\n}\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {Object<string, boolean>}\n */\n\n\nfunction experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\n\n\nfunction getExperimentToggles(win) {\n  var experimentsString = '';\n\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch (e) {\n    (0, _log.dev)().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n\n  var tokens = experimentsString ? experimentsString.split(/\\s*,\\s*/g) : [];\n  var toggles = Object.create(null);\n\n  for (var i = 0; i < tokens.length; i++) {\n    if (tokens[i].length == 0) {\n      continue;\n    }\n\n    if (tokens[i][0] == '-') {\n      toggles[tokens[i].substr(1)] = false;\n    } else {\n      toggles[tokens[i]] = true;\n    }\n  }\n\n  return toggles;\n}\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\n\n\nfunction saveExperimentToggles(win, toggles) {\n  var experimentIds = [];\n\n  for (var experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n\n  try {\n    if ('localStorage' in win) {\n      win.localStorage.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n    }\n  } catch (e) {\n    (0, _log.user)().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\n\n\nfunction getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\n\n\nfunction resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\n\n\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\n\n\nvar RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng\n};\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\n\nexports.RANDOM_NUMBER_GENERATORS = RANDOM_NUMBER_GENERATORS;\n\nfunction selectRandomItem(arr) {\n  var rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return arr[Math.floor(rn * arr.length)] || null;\n}\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Object<string, !ExperimentInfo>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\n\n\nfunction randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  var selectedExperiments = {};\n\n  for (var experimentName in experiments) {\n    // Skip experimentName if it is not a key of experiments object or if it\n    // has already been populated by some other property.\n    if (!(0, _object.hasOwn)(experiments, experimentName)) {\n      continue;\n    }\n\n    if ((0, _object.hasOwn)(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] = win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (!experiments[experimentName].isTrafficEligible || !experiments[experimentName].isTrafficEligible(win)) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    } // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n\n\n    if (!win.__AMP_EXPERIMENT_BRANCHES[experimentName] && isExperimentOn(win,\n    /*OK*/\n    experimentName)) {\n      var branches = experiments[experimentName].branches;\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(branches);\n      selectedExperiments[experimentName] = win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n\n  return selectedExperiments;\n}\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\n\n\nfunction getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES ? win.__AMP_EXPERIMENT_BRANCHES[experimentName] : null;\n}\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\n\n\nfunction forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n\n},{\"./log\":26,\"./mode\":28,\"./url\":40,\"./utils/object\":44}],23:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.createFormDataWrapper = createFormDataWrapper;\nexports.isFormDataWrapper = isFormDataWrapper;\nexports.PolyfillFormDataWrapper = void 0;\n\nvar _services = require(\"./services\");\n\nvar _form = require(\"./form\");\n\nvar _dom = require(\"./dom\");\n\nvar _object = require(\"./utils/object\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * Create a form data wrapper. The wrapper is necessary to provide a common\n * API for FormData objects on all browsers. For example, not all browsers\n * support the FormData#entries or FormData#delete functions.\n *\n * @param {!Window} win\n * @param {!HTMLFormElement=} opt_form\n * @return {!FormDataWrapperInterface}\n */\nfunction createFormDataWrapper(win, opt_form) {\n  var platform = _services.Services.platformFor(win);\n\n  if (platform.isIos() && platform.getMajorVersion() == 11) {\n    return new Ios11NativeFormDataWrapper(opt_form);\n  } else if (FormData.prototype.entries && FormData.prototype.delete) {\n    return new NativeFormDataWrapper(opt_form);\n  } else {\n    return new PolyfillFormDataWrapper(opt_form);\n  }\n}\n/**\n * Check if the given object is a FormDataWrapper instance\n * @param {*} o\n * @return {boolean} True if the object is a FormDataWrapper instance.\n */\n\n\nfunction isFormDataWrapper(o) {\n  // instanceof doesn't work as expected, so we detect with duck-typing.\n  return !!o && typeof o.getFormData == 'function';\n}\n/**\n * A polyfill wrapper for a `FormData` object.\n *\n * If there's no native `FormData#entries`, chances are there are no native\n * methods to read the content of the `FormData` after construction, so the\n * only way to implement `entries` in this class is to capture the fields in\n * the form passed to the constructor (and the arguments passed to the\n * `append` method).\n *\n * For more details on this, see http://mdn.io/FormData.\n *\n * @implements {FormDataWrapperInterface}\n * @visibleForTesting\n */\n\n\nvar PolyfillFormDataWrapper =\n/*#__PURE__*/\nfunction () {\n  /** @override */\n  function PolyfillFormDataWrapper(opt_form) {\n    if (opt_form === void 0) {\n      opt_form = undefined;\n    }\n\n    /** @private @const {!Object<string, !Array<string>>} */\n    this.fieldValues_ = opt_form ? (0, _form.getFormAsObject)(opt_form) : (0, _object.map)();\n  }\n  /**\n   * @param {string} name\n   * @param {string|!File} value\n   * @param {string=} opt_filename\n   * @override\n   */\n\n\n  var _proto = PolyfillFormDataWrapper.prototype;\n\n  _proto.append = function append(name, value, opt_filename) {\n    // Coercion to string is required to match\n    // the native FormData.append behavior\n    var nameString = String(name);\n    this.fieldValues_[nameString] = this.fieldValues_[nameString] || [];\n    this.fieldValues_[nameString].push(String(value));\n  }\n  /** @override */\n  ;\n\n  _proto.delete = function _delete(name) {\n    delete this.fieldValues_[name];\n  }\n  /** @override */\n  ;\n\n  _proto.entries = function entries() {\n    var _this = this;\n\n    var fieldEntries = [];\n    Object.keys(this.fieldValues_).forEach(function (name) {\n      var values = _this.fieldValues_[name];\n      values.forEach(function (value) {\n        return fieldEntries.push([name, value]);\n      });\n    }); // Generator functions are not supported by the current Babel configuration,\n    // so we must manually implement the iterator interface.\n\n    var nextIndex = 0;\n    return (\n      /** @type {!Iterator<!Array<string>>} */\n      {\n        next: function next() {\n          return nextIndex < fieldEntries.length ? {\n            value: fieldEntries[nextIndex++],\n            done: false\n          } : {\n            value: undefined,\n            done: true\n          };\n        }\n      }\n    );\n  }\n  /** @override */\n  ;\n\n  _proto.getFormData = function getFormData() {\n    var _this2 = this;\n\n    var formData = new FormData();\n    Object.keys(this.fieldValues_).forEach(function (name) {\n      var values = _this2.fieldValues_[name];\n      values.forEach(function (value) {\n        return formData.append(name, value);\n      });\n    });\n    return formData;\n  };\n\n  return PolyfillFormDataWrapper;\n}();\n/**\n * Wrap the native `FormData` implementation.\n *\n * NOTE: This differs from the standard `FormData` constructor. This constructor\n * includes a submit button if it was used to submit the `opt_form`, where\n * the native `FormData` constructor does not include the submit button used to\n * submit the form.\n * {@link https://xhr.spec.whatwg.org/#dom-formdata}\n * @implements {FormDataWrapperInterface}\n */\n\n\nexports.PolyfillFormDataWrapper = PolyfillFormDataWrapper;\n\nvar NativeFormDataWrapper =\n/*#__PURE__*/\nfunction () {\n  /** @override */\n  function NativeFormDataWrapper(opt_form) {\n    /** @private @const {!FormData} */\n    this.formData_ = new FormData(opt_form);\n    this.maybeIncludeSubmitButton_(opt_form);\n  }\n  /**\n   * If a submit button is focused (because it was used to submit the form),\n   * or was the first submit button present, add its name and value to the\n   * `FormData`, since publishers expect the submit button to be present.\n   * @param {!HTMLFormElement=} opt_form\n   * @private\n   */\n\n\n  var _proto2 = NativeFormDataWrapper.prototype;\n\n  _proto2.maybeIncludeSubmitButton_ = function maybeIncludeSubmitButton_(opt_form) {\n    // If a form is not passed to the constructor,\n    // we are not in a submitting code path.\n    if (!opt_form) {\n      return;\n    }\n\n    var button = (0, _form.getSubmitButtonUsed)(opt_form);\n\n    if (button && button.name) {\n      this.append(button.name, button.value);\n    }\n  }\n  /**\n   * @param {string} name\n   * @param {string|!File} value\n   * @param {string=} opt_filename\n   * @override\n   */\n  ;\n\n  _proto2.append = function append(name, value, opt_filename) {\n    this.formData_.append(name, value);\n  }\n  /** @override */\n  ;\n\n  _proto2.delete = function _delete(name) {\n    this.formData_.delete(name);\n  }\n  /** @override */\n  ;\n\n  _proto2.entries = function entries() {\n    return this.formData_.entries();\n  }\n  /** @override */\n  ;\n\n  _proto2.getFormData = function getFormData() {\n    return this.formData_;\n  };\n\n  return NativeFormDataWrapper;\n}();\n/**\n * iOS 11 has a bug when submitting empty file inputs.\n * This works around the bug by replacing the empty files with Blob objects.\n */\n\n\nvar Ios11NativeFormDataWrapper =\n/*#__PURE__*/\nfunction (_NativeFormDataWrappe) {\n  _inheritsLoose(Ios11NativeFormDataWrapper, _NativeFormDataWrappe);\n\n  /** @override */\n  function Ios11NativeFormDataWrapper(opt_form) {\n    var _this3;\n\n    _this3 = _NativeFormDataWrappe.call(this, opt_form) || this;\n\n    if (opt_form) {\n      (0, _dom.iterateCursor)(opt_form.elements, function (input) {\n        if (input.type == 'file' && input.files.length == 0) {\n          _this3.formData_.delete(input.name);\n\n          _this3.formData_.append(input.name, new Blob([]), '');\n        }\n      });\n    }\n\n    return _this3;\n  }\n  /**\n   * @param {string} name\n   * @param {string|!File} value\n   * @param {string=} opt_filename\n   * @override\n   */\n\n\n  var _proto3 = Ios11NativeFormDataWrapper.prototype;\n\n  _proto3.append = function append(name, value, opt_filename) {\n    // Safari 11 breaks on submitting empty File values.\n    if (value && typeof value == 'object' && isEmptyFile(value)) {\n      this.formData_.append(name, new Blob([]), opt_filename || '');\n    } else {\n      this.formData_.append(name, value);\n    }\n  };\n\n  return Ios11NativeFormDataWrapper;\n}(NativeFormDataWrapper);\n/**\n * A wrapper for a native `FormData` object that allows the retrieval of entries\n * in the form data after construction even on browsers that don't natively\n * support `FormData.prototype.entries`.\n *\n * @interface\n * Subclassing `FormData` doesn't work in this case as the transpiler\n *     generates code that calls the super constructor directly using\n *     `Function.prototype.call`. WebKit (Safari) doesn't allow this and\n *     enforces that constructors be called with the `new` operator.\n */\n\n\nvar FormDataWrapperInterface =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new wrapper for a `FormData` object.\n   *\n   * If there's no native `FormData#entries`, chances are there are no native\n   * methods to read the content of the `FormData` after construction, so the\n   * only way to implement `entries` in this class is to capture the fields in\n   * the form passed to the constructor (and the arguments passed to the\n   * `append` method).\n   *\n   * This constructor should also add the submitter element as defined in the\n   * HTML spec for Form Submission Algorithm, but is not defined by the standard\n   * when using the `FormData` constructor directly.\n   *\n   * For more details on this, see http://mdn.io/FormData.\n   *\n   * @param {!HTMLFormElement=} opt_form An HTML `<form>` element — when\n   *     specified, the `FormData` object will be populated with the form's\n   *     current keys/values using the name property of each element for the\n   *     keys and their submitted value for the values. It will also encode file\n   *     input content.\n   */\n  function FormDataWrapperInterface(opt_form) {}\n  /**\n   * Appends a new value onto an existing key inside a `FormData` object, or\n   * adds the key if it does not already exist.\n   *\n   * Appending a `File` object is not yet supported and the `filename`\n   * parameter is ignored for this wrapper.\n   *\n   * For more details on this, see http://mdn.io/FormData/append.\n   *\n   * TODO(cvializ): Update file support\n   *\n   * @param {string} unusedName The name of the field whose data is contained in\n   *     `value`.\n   * @param {string|!File} unusedValue The field's value.\n   * @param {string=} opt_filename The filename to use if the value is a file.\n   */\n\n\n  var _proto4 = FormDataWrapperInterface.prototype;\n\n  _proto4.append = function append(unusedName, unusedValue, opt_filename) {}\n  /**\n   * Remove the given value from the FormData.\n   *\n   * For more details on this, see http://mdn.io/FormData/delete.\n   *\n   * @param {string} unusedName The name of the field to remove from the FormData.\n   */\n  ;\n\n  _proto4.delete = function _delete(unusedName) {}\n  /**\n   * Returns an iterator of all key/value pairs contained in this object.\n   *\n   * For more details on this, see http://mdn.io/FormData/entries.\n   *\n   * @return {!Iterator<!Array<string|!File>>}\n   */\n  ;\n\n  _proto4.entries = function entries() {}\n  /**\n   * Returns the wrapped native `FormData` object.\n   *\n   * @return {!FormData}\n   */\n  ;\n\n  _proto4.getFormData = function getFormData() {};\n\n  return FormDataWrapperInterface;\n}();\n/**\n * Check if the given file is an empty file, which is the result of submitting\n * an empty `<input type=\"file\">`. These cause errors when submitting forms\n * in Safari 11.\n *\n * @param {!File} file\n * @return {boolean}\n */\n\n\nfunction isEmptyFile(file) {\n  return file.name == '' && file.size == 0;\n}\n\n},{\"./dom\":18,\"./form\":24,\"./services\":32,\"./utils/object\":44}],24:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.formOrNullForElement = formOrNullForElement;\nexports.setFormForElement = setFormForElement;\nexports.getFormAsObject = getFormAsObject;\nexports.getSubmitButtonUsed = getSubmitButtonUsed;\nexports.isDisabled = isDisabled;\nexports.isFieldDefault = isFieldDefault;\nexports.isFieldEmpty = isFieldEmpty;\n\nvar _dom = require(\"./dom\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nvar FORM_PROP_ = '__AMP_FORM';\n/**\n * @param {!Element} element\n * @return {../extensions/amp-form/0.1/amp-form.AmpForm}\n */\n\nfunction formOrNullForElement(element) {\n  return element[FORM_PROP_] || null;\n}\n/**\n * @param {!Element} element\n * @param {!../extensions/amp-form/0.1/amp-form.AmpForm} form\n */\n\n\nfunction setFormForElement(element, form) {\n  element[FORM_PROP_] = form;\n}\n/**\n * Returns form data in the passed-in form as an object.\n * Includes focused submit buttons.\n * @param {!HTMLFormElement} form\n * @return {!JsonObject}\n */\n\n\nfunction getFormAsObject(form) {\n  var elements = form.elements;\n  var data =\n  /** @type {!JsonObject} */\n  {}; // <button> is handled separately\n\n  var submittableTagsRegex = /^(?:input|select|textarea)$/i; // type=submit is handled separately\n\n  var unsubmittableTypesRegex = /^(?:submit|button|image|file|reset)$/i;\n  var checkableType = /^(?:checkbox|radio)$/i;\n\n  var _loop = function _loop(i) {\n    var input = elements[i];\n    var checked = input.checked,\n        name = input.name,\n        multiple = input.multiple,\n        options = input.options,\n        tagName = input.tagName,\n        type = input.type,\n        value = input.value;\n\n    if (!name || isDisabled(input) || !submittableTagsRegex.test(tagName) || unsubmittableTypesRegex.test(type) || checkableType.test(type) && !checked) {\n      return \"continue\";\n    }\n\n    if (data[name] === undefined) {\n      data[name] = [];\n    }\n\n    if (multiple) {\n      (0, _dom.iterateCursor)(options, function (option) {\n        if (option.selected) {\n          data[name].push(option.value);\n        }\n      });\n      return \"continue\";\n    }\n\n    data[name].push(value);\n  };\n\n  for (var i = 0; i < elements.length; i++) {\n    var _ret = _loop(i);\n\n    if (_ret === \"continue\") continue;\n  }\n\n  var submitButton = getSubmitButtonUsed(form);\n\n  if (submitButton && submitButton.name) {\n    var name = submitButton.name;\n\n    if (data[name] === undefined) {\n      data[name] = [];\n    }\n\n    data[submitButton.name].push(submitButton.value);\n  } // Wait until the end to remove the empty values, since\n  // we don't know when evaluating any one input whether\n  // there will be or have already been inputs with the same names.\n  // e.g. We want to remove empty <select multiple name=x> but\n  // there could also be an <input name=x>. At the end we know if an empty name\n  // can be deleted.\n\n\n  Object.keys(data).forEach(function (key) {\n    if (data[key].length == 0) {\n      delete data[key];\n    }\n  });\n  return data;\n}\n/**\n * Gets the submit button used to submit the form.\n * This searches through the form elements to find:\n * 1. The first submit button element OR\n * 2. a focused submit button, indicating it was specifically used to submit.\n * 3. null, if neither of the above is found.\n * @param {!HTMLFormElement} form\n * @return {?Element}\n */\n\n\nfunction getSubmitButtonUsed(form) {\n  var elements = form.elements;\n  var length = elements.length;\n  var activeElement = form.ownerDocument.activeElement;\n  var firstSubmitButton = null;\n\n  for (var i = 0; i < length; i++) {\n    var element = elements[i];\n\n    if (!isSubmitButton(element)) {\n      continue;\n    }\n\n    if (!firstSubmitButton) {\n      firstSubmitButton = element;\n    }\n\n    if (activeElement == element) {\n      return activeElement;\n    }\n  }\n\n  return firstSubmitButton;\n}\n/**\n * True if the given button can submit a form.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isSubmitButton(element) {\n  var tagName = element.tagName,\n      type = element.type;\n  return tagName == 'BUTTON' || type == 'submit';\n}\n/**\n * Checks if a field is disabled.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isDisabled(element) {\n  if (element.disabled) {\n    return true;\n  }\n\n  var ancestors = (0, _dom.ancestorElementsByTag)(element, 'fieldset');\n\n  for (var i = 0; i < ancestors.length; i++) {\n    if (ancestors[i].disabled) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Checks if a form field is in its default state.\n * @param {!Element} field\n * @return {boolean}\n */\n\n\nfunction isFieldDefault(field) {\n  switch (field.type) {\n    case 'select-multiple':\n    case 'select-one':\n      var options = field.options;\n\n      for (var j = 0; j < options.length; j++) {\n        if (options[j].selected !== options[j].defaultSelected) {\n          return false;\n        }\n      }\n\n      break;\n\n    case 'checkbox':\n    case 'radio':\n      return field.checked === field.defaultChecked;\n\n    default:\n      return field.value === field.defaultValue;\n  }\n\n  return true;\n}\n/**\n * Checks if a form field is empty. It expects a form field element,\n * i.e. `<input>`, `<textarea>`, or `<select>`.\n * @param {!Element} field\n * @throws {Error}\n * @return {boolean}\n */\n\n\nfunction isFieldEmpty(field) {\n  switch (field.tagName) {\n    case 'INPUT':\n      if (field.type == 'checkbox' || field.type == 'radio') {\n        return !field.checked;\n      } else {\n        return !field.value;\n      }\n\n    case 'TEXTAREA':\n      return !field.value;\n\n    case 'SELECT':\n      // dropdown menu has at least one option always selected\n      return false;\n\n    default:\n      throw new Error(\"isFieldEmpty: \" + field.tagName + \" is not a supported field element.\");\n  }\n}\n\n},{\"./dom\":18}],25:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.internalRuntimeVersion = internalRuntimeVersion;\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nfunction internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n\n},{}],26:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isUserErrorMessage = isUserErrorMessage;\nexports.isUserErrorEmbed = isUserErrorEmbed;\nexports.setReportError = setReportError;\nexports.overrideLogLevel = overrideLogLevel;\nexports.duplicateErrorIfNecessary = duplicateErrorIfNecessary;\nexports.createErrorVargs = createErrorVargs;\nexports.rethrowAsync = rethrowAsync;\nexports.initLogConstructor = initLogConstructor;\nexports.resetLogConstructorForTesting = resetLogConstructorForTesting;\nexports.user = user;\nexports.dev = dev;\nexports.isFromEmbed = isFromEmbed;\nexports.devAssert = devAssert;\nexports.userAssert = userAssert;\nexports.Log = exports.LogLevel = exports.USER_ERROR_EMBED_SENTINEL = exports.USER_ERROR_SENTINEL = void 0;\n\nvar _mode = require(\"./mode\");\n\nvar _modeObject = require(\"./mode-object\");\n\nvar _internalVersion = require(\"./internal-version\");\n\nvar _types = require(\"./types\");\n\nvar _function = require(\"./utils/function\");\n\nvar _config = require(\"./config\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar noop = function noop() {};\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\n\n\nvar USER_ERROR_SENTINEL = \"\\u200B\\u200B\\u200B\";\n/**\n * Four zero width space.\n *\n * @const {string}\n */\n\nexports.USER_ERROR_SENTINEL = USER_ERROR_SENTINEL;\nvar USER_ERROR_EMBED_SENTINEL = \"\\u200B\\u200B\\u200B\\u200B\";\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\n\nexports.USER_ERROR_EMBED_SENTINEL = USER_ERROR_EMBED_SENTINEL;\n\nfunction isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\n\n\nfunction isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n/**\n * @enum {number}\n * @private Visible for testing only.\n */\n\n\nvar LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4\n};\n/**\n * Sets reportError function. Called from error.js to break cyclic\n * dependency.\n * @param {function(*, !Element=)|undefined} fn\n */\n\nexports.LogLevel = LogLevel;\n\nfunction setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\n\n\nvar levelOverride_ = undefined;\n/**\n * @param {!LogLevel} level\n */\n\nfunction overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\n\n\nvar messageUrlRtv = function messageUrlRtv() {\n  return \"01\" + (0, _internalVersion.internalRuntimeVersion)();\n};\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\n\n\nvar externalMessageUrl = function externalMessageUrl(id, interpolatedParts) {\n  return interpolatedParts.reduce(function (prefix, arg) {\n    return prefix + \"&s[]=\" + messageArgToEncodedComponent(arg);\n  }, \"https://log.amp.dev/?v=\" + messageUrlRtv() + \"&id=\" + encodeURIComponent(id));\n};\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\n\n\nvar externalMessagesSimpleTableUrl = function externalMessagesSimpleTableUrl() {\n  return _config.urls.cdn + \"/rtv/\" + messageUrlRtv() + \"/log-messages.simple.json\";\n};\n/**\n * @param {*} arg\n * @return {string}\n */\n\n\nvar messageArgToEncodedComponent = function messageArgToEncodedComponent(arg) {\n  return encodeURIComponent(String(elementStringOrPassthru(arg)));\n};\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don’t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\n\n\nvar Log =\n/*#__PURE__*/\nfunction () {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(!./mode.ModeDef):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  function Log(win, levelFunc, opt_suffix) {\n    var _this = this;\n\n    if (opt_suffix === void 0) {\n      opt_suffix = '';\n    }\n\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = (0, _mode.getMode)().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n    /** @private @const {function(!./mode.ModeDef):!LogLevel} */\n\n    this.levelFunc_ = levelFunc;\n    /** @private @const {!LogLevel} */\n\n    this.level_ = this.defaultLevel_();\n    /** @private @const {string} */\n\n    this.suffix_ = opt_suffix;\n    /** @private {?JsonObject} */\n\n    this.messages_ = null;\n    this.fetchExternalMessagesOnce_ = (0, _function.once)(function () {\n      win.fetch(externalMessagesSimpleTableUrl()).then(function (response) {\n        return response.json();\n      }, noop).then(function (opt_messages) {\n        if (opt_messages) {\n          _this.messages_ =\n          /** @type {!JsonObject} */\n          opt_messages;\n        }\n      });\n    });\n  }\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n\n\n  var _proto = Log.prototype;\n\n  _proto.getLevel_ = function getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  ;\n\n  _proto.defaultLevel_ = function defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    } // Logging has been explicitly disabled.\n\n\n    if ((0, _mode.getMode)().log == '0') {\n      return LogLevel.OFF;\n    } // Logging is enabled for tests directly.\n\n\n    if ((0, _mode.getMode)().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    } // LocalDev by default allows INFO level, unless overriden by `#log`.\n\n\n    if ((0, _mode.getMode)().localDev && !(0, _mode.getMode)().log) {\n      return LogLevel.INFO;\n    } // Delegate to the specific resolver.\n\n\n    return this.levelFunc_((0, _modeObject.getModeObject)());\n  }\n  /**\n   * @param {string} tag\n   * @param {string} level\n   * @param {!Array} messages\n   */\n  ;\n\n  _proto.msg_ = function msg_(tag, level, messages) {\n    if (this.getLevel_() != LogLevel.OFF) {\n      var fn = this.win.console.log;\n\n      if (level == 'ERROR') {\n        fn = this.win.console.error || fn;\n      } else if (level == 'INFO') {\n        fn = this.win.console.info || fn;\n      } else if (level == 'WARN') {\n        fn = this.win.console.warn || fn;\n      }\n\n      var args = this.maybeExpandMessageArgs_(messages); // Prefix console message with \"[tag]\".\n\n      var prefix = \"[\" + tag + \"]\";\n\n      if (typeof args[0] === 'string') {\n        // Prepend string to avoid breaking string substitutions e.g. %s.\n        args[0] = prefix + ' ' + args[0];\n      } else {\n        args.unshift(prefix);\n      }\n\n      fn.apply(this.win.console, args);\n    }\n  }\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isEnabled = function isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.fine = function fine(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.FINE) {\n      this.msg_(tag, 'FINE', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.info = function info(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.INFO) {\n      this.msg_(tag, 'INFO', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.warn = function warn(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.WARN) {\n      this.msg_(tag, 'WARN', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} var_args\n   * @return {!Error|undefined}\n   * @private\n   */\n  ;\n\n  _proto.error_ = function error_(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.ERROR) {\n      this.msg_(tag, 'ERROR', Array.prototype.slice.call(arguments, 1));\n    } else {\n      var error = createErrorVargs.apply(null, Array.prototype.slice.call(arguments, 1));\n      this.prepareError_(error);\n      return error;\n    }\n  }\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.error = function error(tag, var_args) {\n    var error = this.error_.apply(this, arguments);\n\n    if (error) {\n      error.name = tag || error.name; // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.expectedError = function expectedError(unusedTag, var_args) {\n    var error = this.error_.apply(this, arguments);\n\n    if (error) {\n      error.expected = true; // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  ;\n\n  _proto.createError = function createError(var_args) {\n    var error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  ;\n\n  _proto.createExpectedError = function createExpectedError(var_args) {\n    var error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * NOTE: for an explanation of the tempate R implementation see\n   * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {R} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is `null` or `undefined`.\n   * @template T\n   * @template R :=\n   *     mapunion(T, (V) =>\n   *         cond(eq(V, 'null'),\n   *             none(),\n   *             cond(eq(V, 'undefined'),\n   *                 none(),\n   *                 V)))\n   *  =:\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assert = function assert(shouldBeTrueish, opt_message, var_args) {\n    var firstElement;\n\n    if ((0, _types.isArray)(opt_message)) {\n      return this.assert.apply(this, [shouldBeTrueish].concat(this.expandMessageArgs_(\n      /** @type {!Array} */\n      opt_message)));\n    }\n\n    if (!shouldBeTrueish) {\n      var message = opt_message || 'Assertion failed';\n      var splitMessage = message.split('%s');\n      var first = splitMessage.shift();\n      var formatted = first;\n      var messageArray = [];\n      var i = 2;\n      pushIfNonEmpty(messageArray, first);\n\n      while (splitMessage.length > 0) {\n        var nextConstant = splitMessage.shift();\n        var val = arguments[i++];\n\n        if (val && val.tagName) {\n          firstElement = val;\n        }\n\n        messageArray.push(val);\n        pushIfNonEmpty(messageArray, nextConstant.trim());\n        formatted += stringOrElementString(val) + nextConstant;\n      }\n\n      var e = new Error(formatted);\n      e.fromAssert = true;\n      e.associatedElement = firstElement;\n      e.messageArray = messageArray;\n      this.prepareError_(e); // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(e);\n\n      throw e;\n    }\n\n    return shouldBeTrueish;\n  }\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertElement = function assertElement(shouldBeElement, opt_message) {\n    var shouldBeTrueish = shouldBeElement && shouldBeElement.nodeType == 1;\n    this.assertType_(shouldBeElement, shouldBeTrueish, 'Element expected', opt_message);\n    return (\n      /** @type {!Element} */\n      shouldBeElement\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertString = function assertString(shouldBeString, opt_message) {\n    this.assertType_(shouldBeString, typeof shouldBeString == 'string', 'String expected', opt_message);\n    return (\n      /** @type {string} */\n      shouldBeString\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertNumber = function assertNumber(shouldBeNumber, opt_message) {\n    this.assertType_(shouldBeNumber, typeof shouldBeNumber == 'number', 'Number expected', opt_message);\n    return (\n      /** @type {number} */\n      shouldBeNumber\n    );\n  }\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertArray = function assertArray(shouldBeArray, opt_message) {\n    this.assertType_(shouldBeArray, (0, _types.isArray)(shouldBeArray), 'Array expected', opt_message);\n    return (\n      /** @type {!Array} */\n      shouldBeArray\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertBoolean = function assertBoolean(shouldBeBoolean, opt_message) {\n    this.assertType_(shouldBeBoolean, !!shouldBeBoolean === shouldBeBoolean, 'Boolean expected', opt_message);\n    return (\n      /** @type {boolean} */\n      shouldBeBoolean\n    );\n  }\n  /**\n   * Asserts and returns the enum value. If the enum doesn't contain such a\n   * value, the error is thrown.\n   *\n   * @param {!Object<T>} enumObj\n   * @param {string} s\n   * @param {string=} opt_enumName\n   * @return {T}\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertEnumValue = function assertEnumValue(enumObj, s, opt_enumName) {\n    if ((0, _types.isEnumValue)(enumObj, s)) {\n      return s;\n    }\n\n    this.assert(false, 'Unknown %s value: \"%s\"', opt_enumName || 'enum', s);\n  }\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  ;\n\n  _proto.prepareError_ = function prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  ;\n\n  _proto.maybeExpandMessageArgs_ = function maybeExpandMessageArgs_(args) {\n    if ((0, _types.isArray)(args[0])) {\n      return this.expandMessageArgs_(\n      /** @type {!Array} */\n      args[0]);\n    }\n\n    return args;\n  }\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  ;\n\n  _proto.expandMessageArgs_ = function expandMessageArgs_(parts) {\n    // First value should exist.\n    var id = parts.shift(); // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n\n    if ((0, _mode.getMode)(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n\n    return [\"More info at \" + externalMessageUrl(id, parts)];\n  }\n  /**\n   * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n   *\n   * It understands array-based \"id\"-contracted messages.\n   *\n   * Otherwise creates a sprintf syntax string containing the optional message or the\n   * default. An interpolation token is added at the end to include the `subject`.\n   * @param {*} subject\n   * @param {*} assertion\n   * @param {string} defaultMessage\n   * @param {!Array|string=} opt_message\n   * @private\n   */\n  ;\n\n  _proto.assertType_ = function assertType_(subject, assertion, defaultMessage, opt_message) {\n    if ((0, _types.isArray)(opt_message)) {\n      this.assert(assertion, opt_message.concat(subject));\n    } else {\n      this.assert(assertion, (opt_message || defaultMessage) + \": %s\", subject);\n    }\n  };\n\n  return Log;\n}();\n/**\n * @param {string|!Element} val\n * @return {string}\n */\n\n\nexports.Log = Log;\n\nvar stringOrElementString = function stringOrElementString(val) {\n  return (\n    /** @type {string} */\n    elementStringOrPassthru(val)\n  );\n};\n/**\n * @param {*} val\n * @return {*}\n */\n\n\nfunction elementStringOrPassthru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (val && val.nodeType == 1) {\n    return val.tagName.toLowerCase() + (val.id ? '#' + val.id : '');\n  }\n\n  return val;\n}\n/**\n * @param {!Array} array\n * @param {*} val\n */\n\n\nfunction pushIfNonEmpty(array, val) {\n  if (val != '') {\n    array.push(val);\n  }\n}\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\n\n\nfunction duplicateErrorIfNecessary(error) {\n  var messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n\n  if (messageProperty && messageProperty.writable) {\n    return error;\n  }\n\n  var message = error.message,\n      stack = error.stack;\n  var e = new Error(message); // Copy all the extraneous things we attach.\n\n  for (var prop in error) {\n    e[prop] = error[prop];\n  } // Ensure these are copied.\n\n\n  e.stack = stack;\n  return e;\n}\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\n\n\nfunction createErrorVargs(var_args) {\n  var error = null;\n  var message = '';\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n\n  return error;\n}\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\n\n\nfunction rethrowAsync(var_args) {\n  var error = createErrorVargs.apply(null, arguments);\n  setTimeout(function () {\n    // reportError is installed globally per window in the entry point.\n    self.__AMP_REPORT_ERROR(error);\n\n    throw error;\n  });\n}\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\n\n\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null\n};\nvar logs = self.__AMP_LOG;\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?Function}\n */\n\nvar logConstructor = null;\n/**\n * Initializes log contructor.\n */\n\nfunction initLogConstructor() {\n  logConstructor = Log; // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n\n  dev();\n  user();\n}\n/**\n * Resets log contructor for testing.\n */\n\n\nfunction resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\n\n\nfunction user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n\n    return logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL);\n  }\n}\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\n\n\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n\n  return new logConstructor(self, function (mode) {\n    var logNum = parseInt(mode.log, 10);\n\n    if (mode.development || logNum >= 1) {\n      return LogLevel.FINE;\n    }\n\n    return LogLevel.WARN;\n  }, suffix);\n}\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\n\n\nfunction dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n\n  return logs.dev = new logConstructor(self, function (mode) {\n    var logNum = parseInt(mode.log, 10);\n\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n\n    return LogLevel.OFF;\n  });\n}\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\n\n\nfunction isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n\n  return opt_element.ownerDocument.defaultView != win;\n}\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction devAssert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9) {\n  if ((0, _mode.getMode)().minified) {\n    return shouldBeTrueish;\n  }\n\n  return dev().\n  /*Orig call*/\n  assert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9);\n}\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction userAssert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9) {\n  return user().\n  /*Orig call*/\n  assert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9);\n}\n\n},{\"./config\":16,\"./internal-version\":25,\"./mode\":28,\"./mode-object\":27,\"./types\":37,\"./utils/function\":42}],27:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getModeObject = getModeObject;\n\nvar _mode = require(\"./mode\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides info about the current app. This return value may be cached and\n * passed around as it will always be DCE'd.\n * @param {?Window=} opt_win\n * @return {!./mode.ModeDef}\n */\nfunction getModeObject(opt_win) {\n  return {\n    localDev: (0, _mode.getMode)(opt_win).localDev,\n    development: (0, _mode.getMode)(opt_win).development,\n    filter: (0, _mode.getMode)(opt_win).filter,\n    minified: (0, _mode.getMode)(opt_win).minified,\n    lite: (0, _mode.getMode)(opt_win).lite,\n    test: (0, _mode.getMode)(opt_win).test,\n    log: (0, _mode.getMode)(opt_win).log,\n    version: (0, _mode.getMode)(opt_win).version,\n    rtvVersion: (0, _mode.getMode)(opt_win).rtvVersion,\n    singlePassType: (0, _mode.getMode)(opt_win).singlePassType\n  };\n}\n\n},{\"./mode\":28}],28:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getMode = getMode;\nexports.getRtvVersionForTesting = getRtvVersionForTesting;\nexports.resetRtvVersionForTesting = resetRtvVersionForTesting;\nexports.ModeDef = void 0;\n\nvar _internalVersion = require(\"./internal-version\");\n\nvar _urlParseQueryString = require(\"./url-parse-query-string\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   filter: (string|undefined),\n *   minified: boolean,\n *   lite: boolean,\n *   test: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   singlePassType: (string|undefined)\n * }}\n */\nvar ModeDef;\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\n\nexports.ModeDef = ModeDef;\nvar rtvVersion = '';\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\n\nfunction getMode(opt_win) {\n  var win = opt_win || self;\n\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n\n  return win.__AMP_MODE = getMode_(win);\n}\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\n\n\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  var AMP_CONFIG = self.AMP_CONFIG || {}; // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_DEV is only replaced when `gulp dist` is called without the\n  // --fortesting flag.\n\n  var IS_DEV = true;\n  var IS_MINIFIED = false;\n  var localDevEnabled = !!AMP_CONFIG.localDev;\n  var runningTests = !!AMP_CONFIG.test || IS_DEV && !!(win.__AMP_TEST || win.__karma__);\n  var runningTestsOnIe = win.__karma__ && win.__karma__.config.amp.testOnIe;\n  var isLocalDev = IS_DEV && (localDevEnabled || runningTests);\n  var hashQuery = (0, _urlParseQueryString.parseQueryString_)( // location.originalHash is set by the viewer when it removes the fragment\n  // from the URL.\n  win.location.originalHash || win.location.hash);\n  var singlePassType = AMP_CONFIG.spt;\n  var searchQuery = (0, _urlParseQueryString.parseQueryString_)(win.location.search);\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win, isLocalDev);\n  } // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `gulp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n\n\n  return {\n    localDev: isLocalDev,\n    // Triggers validation or enable pub level logging. Validation can be\n    // bypassed via #validate=0.\n    // Note that AMP_DEV_MODE flag is used for testing purposes.\n    // Use Array.indexOf instead of Array.includes because of #24219\n    development: !!(['1', 'actions', 'amp', 'amp4ads', 'amp4email'].indexOf(hashQuery['development']) >= 0 || win.AMP_DEV_MODE),\n    examiner: hashQuery['development'] == '2',\n    // Allows filtering validation errors by error category. For the\n    // available categories, see ErrorCategory in validator/validator.proto.\n    filter: hashQuery['filter'],\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    // amp-user-location override\n    userLocationOverride: hashQuery['amp-user-location'],\n    minified: IS_MINIFIED,\n    // Whether document is in an amp-lite viewer. It signal that the user\n    // would prefer to use less bandwidth.\n    lite: searchQuery['amp_lite'] != undefined,\n    test: runningTests,\n    testIe: runningTestsOnIe,\n    log: hashQuery['log'],\n    version: (0, _internalVersion.internalRuntimeVersion)(),\n    rtvVersion: rtvVersion,\n    singlePassType: singlePassType\n  };\n}\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n */\n\n\nfunction getRtvVersion(win, isLocalDev) {\n  // If it's local dev then we won't actually have a full version so\n  // just use the version.\n  if (isLocalDev) {\n    return (0, _internalVersion.internalRuntimeVersion)();\n  }\n\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  } // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n\n\n  return \"01\" + (0, _internalVersion.internalRuntimeVersion)();\n}\n/**\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n * @visibleForTesting\n */\n\n\nfunction getRtvVersionForTesting(win, isLocalDev) {\n  return getRtvVersion(win, isLocalDev);\n}\n/** @visibleForTesting */\n\n\nfunction resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n\n},{\"./internal-version\":25,\"./url-parse-query-string\":38}],29:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.Observable = void 0;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This class helps to manage observers. Observers can be added, removed or\n * fired through and instance of this class.\n * @template TYPE\n */\nvar Observable =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of Observable.\n   */\n  function Observable() {\n    /** @type {?Array<function(TYPE)>} */\n    this.handlers_ = null;\n  }\n  /**\n   * Adds the observer to this instance.\n   * @param {function(TYPE)} handler Observer's handler.\n   * @return {!UnlistenDef}\n   */\n\n\n  var _proto = Observable.prototype;\n\n  _proto.add = function add(handler) {\n    var _this = this;\n\n    if (!this.handlers_) {\n      this.handlers_ = [];\n    }\n\n    this.handlers_.push(handler);\n    return function () {\n      _this.remove(handler);\n    };\n  }\n  /**\n   * Removes the observer from this instance.\n   * @param {function(TYPE)} handler Observer's instance.\n   */\n  ;\n\n  _proto.remove = function remove(handler) {\n    if (!this.handlers_) {\n      return;\n    }\n\n    var index = this.handlers_.indexOf(handler);\n\n    if (index > -1) {\n      this.handlers_.splice(index, 1);\n    }\n  }\n  /**\n   * Removes all observers.\n   */\n  ;\n\n  _proto.removeAll = function removeAll() {\n    if (!this.handlers_) {\n      return;\n    }\n\n    this.handlers_.length = 0;\n  }\n  /**\n   * Fires an event. All observers are called.\n   * @param {TYPE=} opt_event\n   */\n  ;\n\n  _proto.fire = function fire(opt_event) {\n    if (!this.handlers_) {\n      return;\n    }\n\n    var handlers = this.handlers_;\n\n    for (var i = 0; i < handlers.length; i++) {\n      var handler = handlers[i];\n      handler(opt_event);\n    }\n  }\n  /**\n   * Returns number of handlers. Mostly needed for tests.\n   * @return {number}\n   */\n  ;\n\n  _proto.getHandlerCount = function getHandlerCount() {\n    if (!this.handlers_) {\n      return 0;\n    }\n\n    return this.handlers_.length;\n  };\n\n  return Observable;\n}();\n\nexports.Observable = Observable;\n\n},{}],30:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.waitForServices = waitForServices;\nexports.hasRenderDelayingServices = hasRenderDelayingServices;\nexports.isRenderDelayingService = isRenderDelayingService;\nexports.includedServices = includedServices;\nexports.RenderDelayingService = void 0;\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\nvar _service = require(\"./service\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A map of services that delay rendering. The key is the name of the service\n * and the value is a DOM query which is used to check if the service is needed\n * in the current document.\n * Do not add a service unless absolutely necessary.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this list is used for server-side rendering (SSR) and any\n * changes made to it must be made in coordination with caches that implement\n * SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @const {!Object<string, string>}\n */\nvar SERVICES = {\n  'amp-dynamic-css-classes': '[custom-element=amp-dynamic-css-classes]',\n  'variant': 'amp-experiment',\n  'amp-story-render': 'amp-story[standalone]'\n};\n/**\n * Base class for render delaying services.\n * This should be extended to ensure the service\n * is properly handled\n *\n * @interface\n */\n\nvar RenderDelayingService =\n/*#__PURE__*/\nfunction () {\n  function RenderDelayingService() {}\n\n  var _proto = RenderDelayingService.prototype;\n\n  /**\n   * Function to return a promise for when\n   * it is finished delaying render, and is ready.\n   * NOTE: This should simply return Promise.resolve,\n   * if your service does not need to perform any logic\n   * after being registered.\n   * @return {!Promise}\n   */\n  _proto.whenReady = function whenReady() {};\n\n  return RenderDelayingService;\n}();\n/**\n * Maximum milliseconds to wait for all extensions to load before erroring.\n * @const\n */\n\n\nexports.RenderDelayingService = RenderDelayingService;\nvar LOAD_TIMEOUT = 3000;\n/**\n * Detects any render delaying services that are required on the page, and\n * returns a promise with a timeout.\n * @param {!Window} win\n * @return {!Promise<!Array<*>>} resolves to an Array that has the same length\n *     as the detected render delaying services\n */\n\nfunction waitForServices(win) {\n  var promises = includedServices(win).map(function (serviceId) {\n    var serviceReadyPromise = (0, _service.getServicePromise)(win, serviceId).then(function (service) {\n      if (service && isRenderDelayingService(service)) {\n        return service.whenReady().then(function () {\n          return service;\n        });\n      }\n\n      return service;\n    });\n    return _services.Services.timerFor(win).timeoutPromise(LOAD_TIMEOUT, serviceReadyPromise, \"Render timeout waiting for service \" + serviceId + \" to be ready.\");\n  });\n  return Promise.all(promises);\n}\n/**\n * Returns true if the page has a render delaying service.\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nfunction hasRenderDelayingServices(win) {\n  return includedServices(win).length > 0;\n}\n/**\n * Function to determine if the passed\n * Object is a Render Delaying Service\n * @param {!Object} service\n * @return {boolean}\n */\n\n\nfunction isRenderDelayingService(service) {\n  var maybeRenderDelayingService =\n  /** @type {!RenderDelayingService}*/\n  service;\n  return typeof maybeRenderDelayingService.whenReady == 'function';\n}\n/**\n * Detects which, if any, render-delaying extensions are included on the page.\n * @param {!Window} win\n * @return {!Array<string>}\n */\n\n\nfunction includedServices(win) {\n  /** @const {!Document} */\n  var doc = win.document;\n  (0, _log.devAssert)(doc.body);\n  return Object.keys(SERVICES).filter(function (service) {\n    return doc.querySelector(SERVICES[service]);\n  });\n}\n\n},{\"./log\":26,\"./service\":31,\"./services\":32}],31:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getExistingServiceForDocInEmbedScope = getExistingServiceForDocInEmbedScope;\nexports.installServiceInEmbedScope = installServiceInEmbedScope;\nexports.registerServiceBuilder = registerServiceBuilder;\nexports.registerServiceBuilderForDoc = registerServiceBuilderForDoc;\nexports.rejectServicePromiseForDoc = rejectServicePromiseForDoc;\nexports.getService = getService;\nexports.getServicePromise = getServicePromise;\nexports.getExistingServiceOrNull = getExistingServiceOrNull;\nexports.getServicePromiseOrNull = getServicePromiseOrNull;\nexports.getServiceForDoc = getServiceForDoc;\nexports.getServicePromiseForDoc = getServicePromiseForDoc;\nexports.getServicePromiseOrNullForDoc = getServicePromiseOrNullForDoc;\nexports.setParentWindow = setParentWindow;\nexports.getParentWindow = getParentWindow;\nexports.getTopWindow = getTopWindow;\nexports.getParentWindowFrameElement = getParentWindowFrameElement;\nexports.getAmpdoc = getAmpdoc;\nexports.isDisposable = isDisposable;\nexports.assertDisposable = assertDisposable;\nexports.disposeServicesForDoc = disposeServicesForDoc;\nexports.disposeServicesForEmbed = disposeServicesForEmbed;\nexports.installServiceInEmbedIfEmbeddable = installServiceInEmbedIfEmbeddable;\nexports.adoptServiceForEmbedDoc = adoptServiceForEmbedDoc;\nexports.resetServiceForTesting = resetServiceForTesting;\nexports.EmbeddableService = exports.Disposable = void 0;\n\nvar _promise = require(\"./utils/promise\");\n\nvar _log = require(\"./log\");\n\nvar _experiments = require(\"./experiments\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (?function(new:Object, !Window)|\n *          ?function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nvar ServiceHolderDef;\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\n\nvar Disposable =\n/*#__PURE__*/\nfunction () {\n  function Disposable() {}\n\n  var _proto = Disposable.prototype;\n\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  _proto.dispose = function dispose() {};\n\n  return Disposable;\n}();\n/**\n * Services must implement this interface to be embeddable in FIEs.\n * @interface\n */\n\n\nexports.Disposable = Disposable;\n\nvar EmbeddableService =\n/*#__PURE__*/\nfunction () {\n  function EmbeddableService() {}\n\n  /**\n   * Installs a new instance of the service in the given FIE window.\n   * @param {!Window} unusedEmbedWin\n   * @param {!./service/ampdoc-impl.AmpDoc} unusedAmpDoc\n   */\n  EmbeddableService.installInEmbedWindow = function installInEmbedWindow(unusedEmbedWin, unusedAmpDoc) {};\n\n  return EmbeddableService;\n}();\n/**\n * Returns a service with the given id. Assumes that it has been constructed\n * already.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\n\n\nexports.EmbeddableService = EmbeddableService;\n\nfunction getExistingServiceForDocInEmbedScope(element, id) {\n  // TODO(#22733): completely remove this method once ampdoc-fie launches.\n  var document = element.ownerDocument;\n  var win = (0, _types.toWin)(document.defaultView);\n  var topWin = getTopWindow(win); // First, try to resolve via local embed window (if applicable).\n\n  var isEmbed = win != topWin;\n  var ampdocFieExperimentOn = (0, _experiments.isExperimentOn)(topWin, 'ampdoc-fie');\n\n  if (isEmbed && !ampdocFieExperimentOn) {\n    if (isServiceRegistered(win, id)) {\n      return getServiceInternal(win, id);\n    } // Fallback from FIE to parent is intentionally unsupported for safety.\n\n\n    return null;\n  } else {\n    // Resolve via the element's ampdoc.\n    return getServiceForDocOrNullInternal(element, id);\n  }\n}\n/**\n * Installs a service override on amp-doc level.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {!Object} service The service.\n */\n\n\nfunction installServiceInEmbedScope(embedWin, id, service) {\n  var topWin = getTopWindow(embedWin);\n  (0, _log.devAssert)(embedWin != topWin, 'Service override can only be installed in embed window: %s', id);\n  (0, _log.devAssert)(!isServiceRegistered(embedWin, id), 'Service override has already been installed: %s', id);\n  var ampdocFieExperimentOn = (0, _experiments.isExperimentOn)(topWin, 'ampdoc-fie');\n\n  if (ampdocFieExperimentOn) {\n    var ampdoc = getAmpdoc(embedWin.document);\n    registerServiceInternal(getAmpdocServiceHolder(ampdoc), ampdoc, id, function () {\n      return service;\n    },\n    /* override */\n    true);\n  } else {\n    registerServiceInternal(embedWin, embedWin, id, function () {\n      return service;\n    });\n    getServiceInternal(embedWin, id); // Force service to build.\n  }\n}\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\n\n\nfunction registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\n\n\nfunction registerServiceBuilderForDoc(nodeOrDoc, id, constructor, opt_instantiate) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\n\n\nfunction rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\n\n\nfunction getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\n\n\nfunction getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\n\n\nfunction getServiceForDoc(elementOrAmpDoc, id) {\n  var ampdoc = getAmpdoc(elementOrAmpDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\n\n\nfunction getServiceForDocOrNullInternal(element, id) {\n  var ampdoc = getAmpdoc(element);\n  var holder = getAmpdocServiceHolder(ampdoc);\n\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\n\n\nfunction setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\n\n\nfunction getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\n\n\nfunction getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\n\n\nfunction getParentWindowFrameElement(node, opt_topWin) {\n  var childWin = (node.ownerDocument || node).defaultView;\n  var topWin = opt_topWin || getTopWindow(childWin);\n\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return (\n        /** @type {?HTMLIFrameElement} */\n        childWin.frameElement\n      );\n    } catch (e) {// Ignore the error.\n    }\n  }\n\n  return null;\n}\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\n\n\nfunction getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    var win = (0, _types.toWin)(\n    /** @type {!Document} */\n    (nodeOrDoc.ownerDocument || nodeOrDoc).defaultView);\n    return getAmpdocService(win).getAmpDoc(\n    /** @type {!Node} */\n    nodeOrDoc);\n  }\n\n  return (\n    /** @type {!./service/ampdoc-impl.AmpDoc} */\n    nodeOrDoc\n  );\n}\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\n\n\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\n\n\nfunction getAmpdocService(win) {\n  return (\n    /** @type {!./service/ampdoc-impl.AmpDocService} */\n    getService(win, 'ampdoc')\n  );\n}\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n * @template T\n */\n\n\nfunction getServiceInternal(holder, id) {\n  (0, _log.devAssert)(isServiceRegistered(holder, id), \"Expected service \" + id + \" to be registered\");\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (!s.obj) {\n    (0, _log.devAssert)(s.ctor, \"Service \" + id + \" registered without ctor nor impl.\");\n    (0, _log.devAssert)(s.context, \"Service \" + id + \" registered without context.\");\n    s.obj = new s.ctor(s.context);\n    (0, _log.devAssert)(s.obj, \"Service \" + id + \" constructed to null.\");\n    s.ctor = null;\n    s.context = null; // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n\n  return s.obj;\n}\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n */\n\n\nfunction registerServiceInternal(holder, context, id, ctor, opt_override) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null\n    };\n  }\n\n  if (!opt_override && (s.ctor || s.obj)) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context; // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromiseInternal(holder, id) {\n  var cached = getServicePromiseOrNullInternal(holder, id);\n\n  if (cached) {\n    return cached;\n  } // Service is not registered.\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n\n\n  var services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return (\n    /** @type {!Promise<!Object>} */\n    services[id].promise\n  );\n}\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\n\n\nfunction rejectServicePromiseInternal(holder, id, error) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNullInternal(holder, id) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return s.promise = Promise.resolve(\n      /** @type {!Object} */\n      s.obj);\n    }\n  }\n\n  return null;\n}\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\n\n\nfunction getServices(holder) {\n  var services = holder.__AMP_SERVICES;\n\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n\n  return services;\n}\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\n\n\nfunction isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\n\n\nfunction assertDisposable(service) {\n  (0, _log.devAssert)(isDisposable(service), 'required to implement Disposable');\n  return (\n    /** @type {!Disposable} */\n    service\n  );\n}\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\n\n\nfunction disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\n\n\nfunction disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n/**\n * @param {!Object} holder Object holding the service instances.\n */\n\n\nfunction disposeServicesInternal(holder) {\n  // TODO(dvoytenko): Consider marking holder as destroyed for later-arriving\n  // service to be canceled automatically.\n  var services = getServices(holder);\n\n  var _loop = function _loop(id) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      return \"continue\";\n    }\n\n    var serviceHolder = services[id];\n\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then(function (instance) {\n        return disposeServiceInternal(id, instance);\n      });\n    }\n  };\n\n  for (var id in services) {\n    var _ret = _loop(id);\n\n    if (_ret === \"continue\") continue;\n  }\n}\n/**\n * @param {string} id\n * @param {!Object} service\n */\n\n\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    (0, _log.dev)().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n/**\n * Adopts an embeddable (implements `EmbeddableService` interface) service\n * in embed scope.\n * @param {!Window} embedWin\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} serviceClass\n * @suppress {missingProperties}\n * @return {boolean}\n */\n\n\nfunction installServiceInEmbedIfEmbeddable(embedWin, serviceClass) {\n  var isEmbeddableService = typeof serviceClass.installInEmbedWindow === 'function';\n\n  if (!isEmbeddableService) {\n    return false;\n  }\n\n  var frameElement = (0, _log.dev)().assertElement(embedWin.frameElement, 'frameElement not found for embed');\n  var ampdoc = getAmpdoc(frameElement);\n  serviceClass.installInEmbedWindow(embedWin, ampdoc);\n  return true;\n}\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\n\n\nfunction adoptServiceForEmbedDoc(ampdoc, id) {\n  var service = getServiceInternal(getAmpdocServiceHolder((0, _log.devAssert)(ampdoc.getParent())), id);\n  registerServiceInternal(getAmpdocServiceHolder(ampdoc), ampdoc, id, function () {\n    return service;\n  });\n}\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\n\n\nfunction resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\n\n\nfunction isServiceRegistered(holder, id) {\n  var service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id]; // All registered services must have an implementation or a constructor.\n\n  return !!(service && (service.ctor || service.obj));\n}\n/** @return {!ServiceHolderDef} */\n\n\nfunction emptyServiceHolderWithPromise() {\n  var deferred = new _promise.Deferred();\n  var promise = deferred.promise,\n      resolve = deferred.resolve,\n      reject = deferred.reject;\n  promise.catch(function () {}); // avoid uncaught exception when service gets rejected\n\n  return {\n    obj: null,\n    promise: promise,\n    resolve: resolve,\n    reject: reject,\n    context: null,\n    ctor: null\n  };\n}\n\n},{\"./experiments\":22,\"./log\":26,\"./types\":37,\"./utils/promise\":45}],32:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.Services = exports.SubscriptionService = void 0;\n\nvar _service = require(\"./service\");\n\nvar _elementService = require(\"./element-service\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nvar SubscriptionService;\nexports.SubscriptionService = SubscriptionService;\n\nvar Services =\n/*#__PURE__*/\nfunction () {\n  function Services() {}\n\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  Services.accessServiceForDoc = function accessServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'access', 'amp-access')\n    );\n  }\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  ;\n\n  Services.accessServiceForDocOrNull = function accessServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'access', 'amp-access')\n    );\n  }\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  ;\n\n  Services.subscriptionsServiceForDoc = function subscriptionsServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!SubscriptionService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  ;\n\n  Services.subscriptionsServiceForDocOrNull = function subscriptionsServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?SubscriptionService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  ;\n\n  Services.actionServiceForDoc = function actionServiceForDoc(element) {\n    return (\n      /** @type {!./service/action-impl.ActionService} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'action')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  ;\n\n  Services.standardActionsForDoc = function standardActionsForDoc(element) {\n    return (\n      /** @type {!./service/standard-actions-impl.StandardActions} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'standard-actions')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  ;\n\n  Services.activityForDoc = function activityForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'activity', 'amp-analytics')\n    );\n  }\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  ;\n\n  Services.ampdocServiceFor = function ampdocServiceFor(window) {\n    return (\n      /** @type {!./service/ampdoc-impl.AmpDocService} */\n      (0, _service.getService)(window, 'ampdoc')\n    );\n  }\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  ;\n\n  Services.ampdoc = function ampdoc(nodeOrAmpDoc) {\n    return (0, _service.getAmpdoc)(nodeOrAmpDoc);\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  ;\n\n  Services.analyticsForDoc = function analyticsForDoc(element, loadAnalytics) {\n    if (loadAnalytics === void 0) {\n      loadAnalytics = false;\n    }\n\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      var ampdoc = (0, _service.getAmpdoc)(element);\n      Services.extensionsFor(ampdoc.win).\n      /*OK*/\n      installExtensionForDoc(ampdoc, 'amp-analytics');\n    }\n\n    return (\n      /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'amp-analytics-instrumentation', 'amp-analytics')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  ;\n\n  Services.analyticsForDocOrNull = function analyticsForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'amp-analytics-instrumentation', 'amp-analytics')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  ;\n\n  Services.batchedXhrFor = function batchedXhrFor(window) {\n    return (\n      /** @type {!./service/batched-xhr-impl.BatchedXhr} */\n      (0, _service.getService)(window, 'batched-xhr')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  ;\n\n  Services.bindForDocOrNull = function bindForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */\n      (0, _elementService.getElementServiceIfAvailableForDocInEmbedScope)(element, 'bind', 'amp-bind')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  ;\n\n  Services.cidForDoc = function cidForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/cid-impl.CidDef>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'cid')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  ;\n\n  Services.navigationForDoc = function navigationForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/navigation.Navigation} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'navigation')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  ;\n\n  Services.loaderServiceForDoc = function loaderServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'loader', 'amp-loader')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  ;\n\n  Services.standaloneServiceForDoc = function standaloneServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'standalone', 'amp-standalone')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  ;\n\n  Services.cryptoFor = function cryptoFor(window) {\n    return (\n      /** @type {!./service/crypto-impl.Crypto} */\n      (0, _service.getService)(window, 'crypto')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  ;\n\n  Services.documentInfoForDoc = function documentInfoForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/document-info-impl.DocInfo} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'documentInfo').get()\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  ;\n\n  Services.extensionsFor = function extensionsFor(window) {\n    return (\n      /** @type {!./service/extensions-impl.Extensions} */\n      (0, _service.getService)(window, 'extensions')\n    );\n  }\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  ;\n\n  Services.formSubmitForDoc = function formSubmitForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  ;\n\n  Services.hiddenObserverForDoc = function hiddenObserverForDoc(element) {\n    return (\n      /** @type {!./service/hidden-observer-impl.HiddenObserver} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'hidden-observer')\n    );\n  }\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  ;\n\n  Services.historyForDoc = function historyForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/history-impl.History} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'history')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  ;\n\n  Services.inputFor = function inputFor(win) {\n    return (0, _service.getService)(win, 'input');\n  }\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  ;\n\n  Services.inputmaskServiceForDocOrNull = function inputmaskServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  ;\n\n  Services.ownersForDoc = function ownersForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/owners-interface.OwnersInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'owners')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  ;\n\n  Services.performanceFor = function performanceFor(window) {\n    return (\n      /** @type {!./service/performance-impl.Performance}*/\n      (0, _service.getService)(window, 'performance')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  ;\n\n  Services.performanceForOrNull = function performanceForOrNull(window) {\n    return (\n      /** @type {!./service/performance-impl.Performance}*/\n      (0, _service.getExistingServiceOrNull)(window, 'performance')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  ;\n\n  Services.platformFor = function platformFor(window) {\n    return (\n      /** @type {!./service/platform-impl.Platform} */\n      (0, _service.getService)(window, 'platform')\n    );\n  }\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  ;\n\n  Services.positionObserverForDoc = function positionObserverForDoc(element) {\n    return (\n      /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */\n      (0, _service.getServiceForDoc)(element, 'position-observer')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  ;\n\n  Services.resourcesForDoc = function resourcesForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/resources-interface.ResourcesInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'resources')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  ;\n\n  Services.resourcesPromiseForDoc = function resourcesPromiseForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'resources')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?{incomingFragment: string, outgoingFragment: string}>}\n   */\n  ;\n\n  Services.shareTrackingForOrNull = function shareTrackingForOrNull(win) {\n    return (\n      /** @type {!Promise<?{incomingFragment: string, outgoingFragment: string}>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'share-tracking', 'amp-share-tracking', true)\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>}\n   */\n  ;\n\n  Services.storyVariableServiceForOrNull = function storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-variable', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  ;\n\n  Services.storyVariableService = function storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-variable')\n    );\n  }\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>}\n   */\n  ;\n\n  Services.storyStoreServiceForOrNull = function storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-store', 'amp-story')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  ;\n\n  Services.storyStoreService = function storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-store')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  ;\n\n  Services.storyMediaQueryService = function storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-media-query')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  ;\n\n  Services.storyRequestService = function storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-request')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  ;\n\n  Services.mediaPerformanceMetricsService = function mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (0, _service.getExistingServiceOrNull)(win, 'media-performance-metrics')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  ;\n\n  Services.localizationServiceForOrNull = function localizationServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'localization', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  ;\n\n  Services.localizationService = function localizationService(win) {\n    return (0, _service.getService)(win, 'localization');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  ;\n\n  Services.storyAnalyticsServiceForOrNull = function storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-analytics', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  ;\n\n  Services.storyAnalyticsService = function storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-analytics')\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService}\n   */\n  ;\n\n  Services.storyStoreServiceV01 = function storyStoreServiceV01(win) {\n    return (0, _service.getService)(win, 'story-store');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-request-service.AmpStoryRequestService}\n   */\n  ;\n\n  Services.storyRequestServiceV01 = function storyRequestServiceV01(win) {\n    return (0, _service.getService)(win, 'story-request-v01');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  ;\n\n  Services.localizationServiceForOrNullV01 = function localizationServiceForOrNullV01(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'localization-v01', 'amp-story', true)\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  ;\n\n  Services.localizationServiceV01 = function localizationServiceV01(win) {\n    return (0, _service.getService)(win, 'localization-v01');\n  }\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>}\n   */\n  ;\n\n  Services.viewerIntegrationVariableServiceForOrNull = function viewerIntegrationVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'viewer-integration-variable', 'amp-viewer-integration', true)\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  ;\n\n  Services.webAnimationServiceFor = function webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'web-animation', 'amp-animation')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  ;\n\n  Services.storageForDoc = function storageForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/storage-impl.Storage>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'storage')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/template-impl.Templates}\n   */\n  ;\n\n  Services.templatesFor = function templatesFor(window) {\n    return (\n      /** @type {!./service/template-impl.Templates} */\n      (0, _service.getService)(window, 'templates')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  ;\n\n  Services.timerFor = function timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return (\n      /** @type {!./service/timer-impl.Timer} */\n      (0, _service.getService)(window, 'timer')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  ;\n\n  Services.urlReplacementsForDoc = function urlReplacementsForDoc(element) {\n    return (\n      /** @type {!./service/url-replacements-impl.UrlReplacements} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'url-replace')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  ;\n\n  Services.userNotificationManagerForDoc = function userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'userNotificationManager', 'amp-user-notification')\n    );\n  }\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  ;\n\n  Services.consentPolicyServiceForDocOrNull = function consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'consentPolicyManager', 'amp-consent')\n    );\n  }\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  ;\n\n  Services.geoForDocOrNull = function geoForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'geo', 'amp-geo', true)\n    );\n  }\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>}\n   */\n  ;\n\n  Services.userLocationForDocOrNull = function userLocationForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'user-location', 'amp-user-location', true)\n    );\n  }\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  ;\n\n  Services.urlForDoc = function urlForDoc(element) {\n    return (\n      /** @type {!./service/url-impl.Url} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'url')\n    );\n  }\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  ;\n\n  Services.variantsForDocOrNull = function variantsForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'variant', 'amp-experiment', true)\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  ;\n\n  Services.videoManagerForDoc = function videoManagerForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/video-manager-impl.VideoManager} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'video-manager')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>}\n   */\n  ;\n\n  Services.viewerAssistanceForDocOrNull = function viewerAssistanceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'amp-viewer-assistance', 'amp-viewer-assistance')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  ;\n\n  Services.viewerForDoc = function viewerForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/viewer-interface.ViewerInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'viewer')\n    );\n  }\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  ;\n\n  Services.viewerPromiseForDoc = function viewerPromiseForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'viewer')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  ;\n\n  Services.vsyncFor = function vsyncFor(window) {\n    return (\n      /** @type {!./service/vsync-impl.Vsync} */\n      (0, _service.getService)(window, 'vsync')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  ;\n\n  Services.viewportForDoc = function viewportForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/viewport/viewport-interface.ViewportInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'viewport')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  ;\n\n  Services.xhrFor = function xhrFor(window) {\n    return (\n      /** @type {!./service/xhr-impl.Xhr} */\n      (0, _service.getService)(window, 'xhr')\n    );\n  };\n\n  return Services;\n}();\n\nexports.Services = Services;\n\n},{\"./element-service\":19,\"./service\":31}],33:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.SsrTemplateHelper = exports.SsrTemplateDef = void 0;\n\nvar _object = require(\"./utils/object\");\n\nvar _types = require(\"./types\");\n\nvar _xhrUtils = require(\"./utils/xhr-utils\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   successTemplate: ?(Element|JsonObject|undefined),\n *   errorTemplate: ?(Element|JsonObject|undefined)\n * }}\n */\nvar SsrTemplateDef;\n/**\n * Helper, that manages the proxying of template rendering to the viewer.\n */\n\nexports.SsrTemplateDef = SsrTemplateDef;\n\nvar SsrTemplateHelper =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {string} sourceComponent\n   * @param {!./service/viewer-interface.ViewerInterface} viewer\n   * @param {!./service/template-impl.Templates} templates\n   */\n  function SsrTemplateHelper(sourceComponent, viewer, templates) {\n    /** @private @const */\n    this.viewer_ = viewer;\n    /** @private @const */\n\n    this.templates_ = templates;\n    /** @private @const */\n\n    this.sourceComponent_ = sourceComponent;\n  }\n  /**\n   * Whether the viewer can render templates. A doc-level opt in as\n   * trusted viewers must set this capability explicitly, as a security\n   * measure for potential abuse of feature.\n   * @return {boolean}\n   */\n\n\n  var _proto = SsrTemplateHelper.prototype;\n\n  _proto.isSupported = function isSupported() {\n    var ampdoc = this.viewer_.getAmpDoc();\n\n    if (ampdoc.isSingleDoc()) {\n      var htmlElement = ampdoc.getRootNode().documentElement;\n\n      if (htmlElement.hasAttribute('allow-viewer-render-template')) {\n        return this.viewer_.hasCapability('viewerRenderTemplate');\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Proxies xhr and template rendering to the viewer and renders the response.\n   * @param {!Element} element\n   * @param {!FetchRequestDef} request The fetch/XHR related data.\n   * @param {?SsrTemplateDef=} opt_templates Response templates to pass into\n   *     the payload. If provided, finding the template in the passed in\n   *     element is not attempted.\n   * @param {!Object=} opt_attributes Additional JSON to send to viewer.\n   * @return {!Promise<?JsonObject|string|undefined>}\n   */\n  ;\n\n  _proto.fetchAndRenderTemplate = function fetchAndRenderTemplate(element, request, opt_templates, opt_attributes) {\n    if (opt_templates === void 0) {\n      opt_templates = null;\n    }\n\n    if (opt_attributes === void 0) {\n      opt_attributes = {};\n    }\n\n    var mustacheTemplate;\n\n    if (!opt_templates) {\n      mustacheTemplate = this.templates_.maybeFindTemplate(element);\n    }\n\n    return this.viewer_.sendMessageAwaitResponse('viewerRenderTemplate', this.buildPayload_(request, mustacheTemplate, opt_templates, opt_attributes));\n  }\n  /**\n   * @param {!Element} element\n   * @param {(?JsonObject|string|undefined|!Array)} data\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.renderTemplate = function renderTemplate(element, data) {\n    var renderTemplatePromise;\n\n    if (this.isSupported()) {\n      (0, _log.userAssert)(typeof data['html'] === 'string', 'Server side html response must be defined');\n      renderTemplatePromise = this.templates_.findAndSetHtmlForTemplate(element,\n      /** @type {string} */\n      data['html']);\n    } else if ((0, _types.isArray)(data)) {\n      renderTemplatePromise = this.templates_.findAndRenderTemplateArray(element,\n      /** @type {!Array} */\n      data);\n    } else {\n      renderTemplatePromise = this.templates_.findAndRenderTemplate(element,\n      /** @type {!JsonObject} */\n      data);\n    }\n\n    return renderTemplatePromise;\n  }\n  /**\n   * @param {!FetchRequestDef} request\n   * @param {?Element|undefined} mustacheTemplate\n   * @param {?SsrTemplateDef=} opt_templates\n   * @param {!Object=} opt_attributes\n   * @return {!JsonObject}\n   * @private\n   */\n  ;\n\n  _proto.buildPayload_ = function buildPayload_(request, mustacheTemplate, opt_templates, opt_attributes) {\n    if (opt_attributes === void 0) {\n      opt_attributes = {};\n    }\n\n    var ampComponent = (0, _object.dict)({\n      'type': this.sourceComponent_\n    });\n    var successTemplateKey = 'successTemplate';\n    var successTemplate = opt_templates && opt_templates[successTemplateKey] ? opt_templates[successTemplateKey] : mustacheTemplate;\n\n    if (successTemplate) {\n      ampComponent[successTemplateKey] = {\n        'type': 'amp-mustache',\n        'payload': successTemplate.\n        /*REVIEW*/\n        innerHTML\n      };\n    }\n\n    var errorTemplateKey = 'errorTemplate';\n    var errorTemplate = opt_templates && opt_templates[errorTemplateKey] ? opt_templates[errorTemplateKey] : null;\n\n    if (errorTemplate) {\n      ampComponent[errorTemplateKey] = {\n        'type': 'amp-mustache',\n        'payload': errorTemplate.\n        /*REVIEW*/\n        innerHTML\n      };\n    }\n\n    if (opt_attributes) {\n      Object.assign(ampComponent, opt_attributes);\n    }\n\n    var data = (0, _object.dict)({\n      'originalRequest': (0, _xhrUtils.toStructuredCloneable)(request.xhrUrl, request.fetchOpt),\n      'ampComponent': ampComponent\n    });\n    return data;\n  };\n\n  return SsrTemplateHelper;\n}();\n\nexports.SsrTemplateHelper = SsrTemplateHelper;\n\n},{\"./log\":26,\"./types\":37,\"./utils/object\":44,\"./utils/xhr-utils\":47}],34:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.dashToCamelCase = dashToCamelCase;\nexports.camelCaseToDash = camelCaseToDash;\nexports.dashToUnderline = dashToUnderline;\nexports.endsWith = endsWith;\nexports.startsWith = startsWith;\nexports.includes = includes;\nexports.expandTemplate = expandTemplate;\nexports.stringHash32 = stringHash32;\nexports.trimEnd = trimEnd;\nexports.trimStart = trimStart;\nexports.padStart = padStart;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n/**\n * @param {string} match\n * @return {string}\n */\n\n\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\n\n\nfunction dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\n\n\nfunction camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\n\n\nfunction dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\n\n\nfunction endsWith(string, suffix) {\n  var index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n/**\n * Polyfill for String.prototype.startsWith.\n * @param {string} string\n * @param {string} prefix\n * @return {boolean}\n */\n\n\nfunction startsWith(string, prefix) {\n  if (prefix.length > string.length) {\n    return false;\n  }\n\n  return string.lastIndexOf(prefix, 0) == 0;\n}\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\n\n\nfunction includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + substring.length > string.length) {\n    return false;\n  }\n\n  return string.indexOf(substring, start) !== -1;\n}\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\n\n\nfunction expandTemplate(template, getter, opt_maxIterations) {\n  var maxIterations = opt_maxIterations || 1;\n\n  var _loop = function _loop(i) {\n    var matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, function (_a, b) {\n      matches++;\n      return getter(b);\n    });\n\n    if (!matches) {\n      return \"break\";\n    }\n  };\n\n  for (var i = 0; i < maxIterations; i++) {\n    var _ret = _loop(i);\n\n    if (_ret === \"break\") break;\n  }\n\n  return template;\n}\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\n\n\nfunction stringHash32(str) {\n  var length = str.length;\n  var hash = 5381;\n\n  for (var i = 0; i < length; i++) {\n    hash = hash * 33 ^ str.charCodeAt(i);\n  } // Convert from 32-bit signed to unsigned.\n\n\n  return String(hash >>> 0);\n}\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\n\n\nfunction trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\n\n\nfunction trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {*} TODO(#23582): Specify return type\n */\n\n\nfunction padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n\n  targetLength = targetLength - s.length;\n  var padding = padString;\n\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n\n  return padding.slice(0, targetLength) + s;\n}\n\n},{}],35:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.installStylesForDoc = installStylesForDoc;\nexports.installStylesLegacy = installStylesLegacy;\nexports.installCssTransformer = installCssTransformer;\nexports.setBodyMadeVisibleForTesting = setBodyMadeVisibleForTesting;\nexports.makeBodyVisible = makeBodyVisible;\nexports.makeBodyVisibleRecovery = makeBodyVisibleRecovery;\nexports.bodyAlwaysVisible = bodyAlwaysVisible;\n\nvar _commonSignals = require(\"./common-signals\");\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\nvar _service = require(\"./service\");\n\nvar _dom = require(\"./dom\");\n\nvar _object = require(\"./utils/object\");\n\nvar _style = require(\"./style\");\n\nvar _renderDelayingServices = require(\"./render-delaying-services\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TRANSFORMER_PROP = '__AMP_CSS_TR';\nvar STYLE_MAP_PROP = '__AMP_CSS_SM';\n/**\n * Adds the given css text to the given ampdoc.\n *\n * The style tags will be at the beginning of the head before all author\n * styles. One element can be the main runtime CSS. This is guaranteed\n * to always be the first stylesheet in the doc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc The ampdoc that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are available.\n *     Not using a promise, because this is synchronous when possible.\n *     for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\n\nfunction installStylesForDoc(ampdoc, cssText, cb, opt_isRuntimeCss, opt_ext) {\n  var cssRoot = ampdoc.getHeadNode();\n  var style = insertStyleElement(cssRoot, maybeTransform(cssRoot, cssText), opt_isRuntimeCss || false, opt_ext || null);\n\n  if (cb) {\n    var rootNode = ampdoc.getRootNode(); // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n\n    if (styleLoaded(rootNode, style)) {\n      cb(style);\n      return style;\n    } // Poll until styles are available.\n\n\n    var interval = setInterval(function () {\n      if (styleLoaded(rootNode, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n\n  return style;\n}\n/**\n * Adds the given css text to the given document.\n * TODO(dvoytenko, #22733): Remove this method once FIE/ampdoc migration is\n * done.\n *\n * @param {!Document} doc The document that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are\n *     available. Not using a promise, because this is synchronous when\n *     possible. for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\n\n\nfunction installStylesLegacy(doc, cssText, cb, opt_isRuntimeCss, opt_ext) {\n  var style = insertStyleElement((0, _log.dev)().assertElement(doc.head), cssText, opt_isRuntimeCss || false, opt_ext || null);\n\n  if (cb) {\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(doc, style)) {\n      cb(style);\n      return style;\n    } // Poll until styles are available.\n\n\n    var interval = setInterval(function () {\n      if (styleLoaded(doc, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n\n  return style;\n}\n/**\n * Creates the properly configured style element.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @param {boolean} isRuntimeCss\n * @param {?string} ext\n * @return {!Element}\n */\n\n\nfunction insertStyleElement(cssRoot, cssText, isRuntimeCss, ext) {\n  var styleMap = cssRoot[STYLE_MAP_PROP];\n\n  if (!styleMap) {\n    styleMap = cssRoot[STYLE_MAP_PROP] = (0, _object.map)();\n  }\n\n  var isExtCss = !isRuntimeCss && ext && ext != 'amp-custom' && ext != 'amp-keyframes';\n  var key = isRuntimeCss ? 'amp-runtime' : isExtCss ? \"amp-extension=\" + ext : null; // Check if it has already been created or discovered.\n\n  if (key) {\n    var existing = getExistingStyleElement(cssRoot, styleMap, key);\n\n    if (existing) {\n      if (existing.textContent !== cssText) {\n        existing.textContent = cssText;\n      }\n\n      return existing;\n    }\n  } // Create the new style element and append to cssRoot.\n\n\n  var doc = cssRoot.ownerDocument || cssRoot;\n  var style = doc.createElement('style');\n  style.\n  /*OK*/\n  textContent = cssText;\n  var afterElement = null; // Make sure that we place style tags after the main runtime CSS. Otherwise\n  // the order is random.\n\n  if (isRuntimeCss) {\n    style.setAttribute('amp-runtime', '');\n  } else if (isExtCss) {\n    style.setAttribute('amp-extension', ext || '');\n    afterElement = (0, _log.dev)().assertElement(getExistingStyleElement(cssRoot, styleMap, 'amp-runtime'));\n  } else {\n    if (ext) {\n      style.setAttribute(ext, '');\n    }\n\n    afterElement = cssRoot.lastChild;\n  }\n\n  (0, _dom.insertAfterOrAtStart)(cssRoot, style, afterElement);\n\n  if (key) {\n    styleMap[key] = style;\n  }\n\n  return style;\n}\n/**\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {!Object<string, !Element>} styleMap\n * @param {string} key\n * @return {?Element}\n */\n\n\nfunction getExistingStyleElement(cssRoot, styleMap, key) {\n  // Already cached.\n  if (styleMap[key]) {\n    return styleMap[key];\n  } // Check if the style has already been added by the server layout.\n\n\n  var existing = cssRoot.\n  /*OK*/\n  querySelector(\"style[\" + key + \"]\");\n\n  if (existing) {\n    styleMap[key] = existing;\n    return existing;\n  } // Nothing found.\n\n\n  return null;\n}\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {function(string):string} transformer\n */\n\n\nfunction installCssTransformer(cssRoot, transformer) {\n  cssRoot[TRANSFORMER_PROP] = transformer;\n}\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @return {string}\n */\n\n\nfunction maybeTransform(cssRoot, cssText) {\n  var transformer = cssRoot[TRANSFORMER_PROP];\n  return transformer ? transformer(cssText) : cssText;\n}\n/** @private {boolean} */\n\n\nvar bodyMadeVisible = false;\n/**\n * @param {boolean} value\n * @visibleForTesting\n */\n\nfunction setBodyMadeVisibleForTesting(value) {\n  bodyMadeVisible = value;\n}\n/**\n * Sets the document's body opacity to 1.\n * If the body is not yet available (because our script was loaded\n * synchronously), polls until it is.\n * @param {!Document} doc The document who's body we should make visible.\n */\n\n\nfunction makeBodyVisible(doc) {\n  (0, _log.devAssert)(doc.defaultView, 'Passed in document must have a defaultView');\n  var win =\n  /** @type {!Window} */\n  doc.defaultView;\n  (0, _dom.waitForBodyOpenPromise)(doc).then(function () {\n    return (0, _renderDelayingServices.waitForServices)(win);\n  }).catch(function (reason) {\n    (0, _log.rethrowAsync)(reason);\n    return [];\n  }).then(function (services) {\n    bodyMadeVisible = true;\n    setBodyVisibleStyles(doc);\n    var ampdoc = (0, _service.getAmpdoc)(doc);\n    ampdoc.signals().signal(_commonSignals.CommonSignals.RENDER_START);\n\n    if (services.length > 0) {\n      var resources = _services.Services.resourcesForDoc(doc.documentElement);\n\n      resources.\n      /*OK*/\n      schedulePass(1,\n      /* relayoutAll */\n      true);\n    }\n\n    try {\n      var perf = _services.Services.performanceFor(win);\n\n      perf.tick('mbv');\n      perf.flush();\n    } catch (e) {}\n  });\n}\n/**\n * Set the document's body opacity to 1. Called in error cases.\n * @param {!Document} doc The document who's body we should make visible.\n */\n\n\nfunction makeBodyVisibleRecovery(doc) {\n  (0, _log.devAssert)(doc.defaultView, 'Passed in document must have a defaultView');\n\n  if (bodyMadeVisible) {\n    return;\n  }\n\n  bodyMadeVisible = true;\n  setBodyVisibleStyles(doc);\n}\n/**\n * Make sure that body exists, and make it visible.\n * @param {!Document} doc\n */\n\n\nfunction setBodyVisibleStyles(doc) {\n  (0, _style.setStyles)((0, _log.dev)().assertElement(doc.body), {\n    opacity: 1,\n    visibility: 'visible',\n    'animation': 'none'\n  });\n}\n/**\n * Indicates that the body is always visible. For instance, in case of PWA.\n * This check is on a module level variable, and could be problematic if you are\n * relying on this function across different binaries.\n * @param {!Window} unusedWin\n */\n\n\nfunction bodyAlwaysVisible(unusedWin) {\n  bodyMadeVisible = true;\n}\n/**\n * Checks whether a style element was registered in the DOM.\n * @param {!Document|!ShadowRoot} doc\n * @param {!Element} style\n * @return {boolean}\n */\n\n\nfunction styleLoaded(doc, style) {\n  var sheets = doc.styleSheets;\n\n  for (var i = 0; i < sheets.length; i++) {\n    var sheet = sheets[i];\n\n    if (sheet.ownerNode == style) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n},{\"./common-signals\":15,\"./dom\":18,\"./log\":26,\"./render-delaying-services\":30,\"./service\":31,\"./services\":32,\"./style\":36,\"./utils/object\":44}],36:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.camelCaseToTitleCase = camelCaseToTitleCase;\nexports.getVendorJsPropertyName = getVendorJsPropertyName;\nexports.setImportantStyles = setImportantStyles;\nexports.setStyle = setStyle;\nexports.getStyle = getStyle;\nexports.setStyles = setStyles;\nexports.assertNotDisplay = assertNotDisplay;\nexports.assertDoesNotContainDisplay = assertDoesNotContainDisplay;\nexports.setInitialDisplay = setInitialDisplay;\nexports.toggle = toggle;\nexports.px = px;\nexports.deg = deg;\nexports.translateX = translateX;\nexports.translate = translate;\nexports.scale = scale;\nexports.rotate = rotate;\nexports.removeAlphaFromColor = removeAlphaFromColor;\nexports.computedStyle = computedStyle;\nexports.resetStyles = resetStyles;\nexports.propagateObjectFitStyles = propagateObjectFitStyles;\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object.js\");\n\nvar _string = require(\"./string\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\n\n/** @type {Object<string, string>} */\nvar propertyNameCache;\n/** @const {!Array<string>} */\n\nvar vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n/**\n * @export\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\n\nfunction camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\n\n\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (var i = 0; i < vendorPrefixes.length; i++) {\n    var propertyName = vendorPrefixes[i] + titleCase;\n\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n\n  return '';\n}\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @export\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\n\n\nfunction getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if ((0, _string.startsWith)(camelCase, '--')) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n\n  if (!propertyNameCache) {\n    propertyNameCache = (0, _object.map)();\n  }\n\n  var propertyName = propertyNameCache[camelCase];\n\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n\n    if (style[camelCase] === undefined) {\n      var titleCase = camelCaseToTitleCase(camelCase);\n      var prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n\n  return propertyName;\n}\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\n\n\nfunction setImportantStyles(element, styles) {\n  var style = element.style;\n\n  for (var k in styles) {\n    style.setProperty(getVendorJsPropertyName(style, k), styles[k].toString(), 'important');\n  }\n}\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\n\n\nfunction setStyle(element, property, value, opt_units, opt_bypassCache) {\n  var propertyName = getVendorJsPropertyName(element.style, property, opt_bypassCache);\n\n  if (propertyName) {\n    element.style[propertyName] =\n    /** @type {string} */\n    opt_units ? value + opt_units : value;\n  }\n}\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\n\n\nfunction getStyle(element, property, opt_bypassCache) {\n  var propertyName = getVendorJsPropertyName(element.style, property, opt_bypassCache);\n\n  if (!propertyName) {\n    return undefined;\n  }\n\n  return element.style[propertyName];\n}\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\n\n\nfunction setStyles(element, styles) {\n  for (var k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\n\n\nfunction assertNotDisplay(style) {\n  if (style === 'display') {\n    (0, _log.dev)().error('STYLE', '`display` style detected. You must use toggle instead.');\n  }\n\n  return style;\n}\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\n\n\nfunction assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    (0, _log.dev)().error('STYLE', '`display` style detected in styles. You must use toggle instead.');\n  }\n\n  return styles;\n}\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\n\n\nfunction setInitialDisplay(el, value) {\n  var style = el.style;\n  (0, _log.devAssert)(value !== '' && value !== 'none', 'Initial display value must not be \"none\". Use toggle instead.');\n  (0, _log.devAssert)(!style['display'], 'setInitialDisplay MUST NOT be used for ' + 'resetting the display style. If you are looking for display:none ' + 'toggling, use toggle instead.');\n  style['display'] = value;\n}\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\n\n\nfunction toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\n\n\nfunction px(value) {\n  return value + \"px\";\n}\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\n\n\nfunction deg(value) {\n  return value + \"deg\";\n}\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction translateX(value) {\n  if (typeof value == 'string') {\n    return \"translateX(\" + value + \")\";\n  }\n\n  return \"translateX(\" + px(value) + \")\";\n}\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\n\n\nfunction translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n\n  if (opt_y === undefined) {\n    return \"translate(\" + x + \")\";\n  }\n\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n\n  return \"translate(\" + x + \", \" + opt_y + \")\";\n}\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction scale(value) {\n  return \"scale(\" + value + \")\";\n}\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n\n  return \"rotate(\" + value + \")\";\n}\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\n\n\nfunction removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(/\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g, '($1,$2,$3, 1)');\n}\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!Object<string, string>}\n */\n\n\nfunction computedStyle(win, el) {\n  var style =\n  /** @type {?CSSStyleDeclaration} */\n  win.getComputedStyle(el);\n  return (\n    /** @type {!Object<string, string>} */\n    style || (0, _object.map)()\n  );\n}\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\n\n\nfunction resetStyles(element, properties) {\n  for (var i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\n\n\nfunction propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n},{\"./log\":26,\"./string\":34,\"./utils/object.js\":44}],37:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isArray = isArray;\nexports.toArray = toArray;\nexports.isObject = isObject;\nexports.isFiniteNumber = isFiniteNumber;\nexports.isEnumValue = isEnumValue;\nexports.toWin = toWin;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nvar toString_ = Object.prototype.toString;\n/**\n * Returns the ECMA [[Class]] of a value\n * @param {*} value\n * @return {string}\n */\n\nfunction toString(value) {\n  return toString_.call(value);\n}\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\n\n\nfunction toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  return toString(value) === '[object Object]';\n}\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n/**\n * Checks whether `s` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} s\n * @return {boolean}\n * @template T\n */\n\n\nfunction isEnumValue(enumObj, s) {\n  for (var k in enumObj) {\n    if (enumObj[k] === s) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {!Window|null} winOrNull\n * @return {!Window}\n */\n\n\nfunction toWin(winOrNull) {\n  return (\n    /** @type {!Window} */\n    winOrNull\n  );\n}\n\n},{}],38:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.parseQueryString_ = parseQueryString_;\n\nvar _urlTryDecodeUriComponent = require(\"./url-try-decode-uri-component\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar regex = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * DO NOT import the function from this file. Instead, import parseQueryString\n * from `src/url.js`.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\n\nfunction parseQueryString_(queryString) {\n  var params =\n  /** @type {!JsonObject} */\n  Object.create(null);\n\n  if (!queryString) {\n    return params;\n  }\n\n  var match;\n\n  while (match = regex.exec(queryString)) {\n    var name = (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(match[1], match[1]);\n    var value = match[2] ? (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(match[2], match[2]) : '';\n    params[name] = value;\n  }\n\n  return params;\n}\n\n},{\"./url-try-decode-uri-component\":39}],39:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.tryDecodeUriComponent_ = tryDecodeUriComponent_;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * DO NOT import the function from this file. Instead, import\n * tryDecodeUriComponent from `src/url.js`.\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nfunction tryDecodeUriComponent_(component, fallback) {\n  if (fallback === void 0) {\n    fallback = '';\n  }\n\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n},{}],40:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getWinOrigin = getWinOrigin;\nexports.parseUrlDeprecated = parseUrlDeprecated;\nexports.parseUrlWithA = parseUrlWithA;\nexports.appendEncodedParamStringToUrl = appendEncodedParamStringToUrl;\nexports.addParamToUrl = addParamToUrl;\nexports.addParamsToUrl = addParamsToUrl;\nexports.addMissingParamsToUrl = addMissingParamsToUrl;\nexports.serializeQueryString = serializeQueryString;\nexports.isSecureUrlDeprecated = isSecureUrlDeprecated;\nexports.assertHttpsUrl = assertHttpsUrl;\nexports.assertAbsoluteHttpOrHttpsUrl = assertAbsoluteHttpOrHttpsUrl;\nexports.parseQueryString = parseQueryString;\nexports.removeFragment = removeFragment;\nexports.getFragment = getFragment;\nexports.isProxyOrigin = isProxyOrigin;\nexports.getProxyServingType = getProxyServingType;\nexports.isLocalhostOrigin = isLocalhostOrigin;\nexports.isProtocolValid = isProtocolValid;\nexports.removeAmpJsParamsFromUrl = removeAmpJsParamsFromUrl;\nexports.removeSearch = removeSearch;\nexports.removeParamsFromSearch = removeParamsFromSearch;\nexports.getSourceUrl = getSourceUrl;\nexports.getSourceOrigin = getSourceOrigin;\nexports.resolveRelativeUrl = resolveRelativeUrl;\nexports.resolveRelativeUrlFallback_ = resolveRelativeUrlFallback_;\nexports.getCorsUrl = getCorsUrl;\nexports.checkCorsUrl = checkCorsUrl;\nexports.tryDecodeUriComponent = tryDecodeUriComponent;\nexports.SOURCE_ORIGIN_PARAM = void 0;\n\nvar _lruCache = require(\"./utils/lru-cache\");\n\nvar _object = require(\"./utils/object\");\n\nvar _string = require(\"./string\");\n\nvar _mode = require(\"./mode\");\n\nvar _types = require(\"./types\");\n\nvar _urlParseQueryString = require(\"./url-parse-query-string\");\n\nvar _urlTryDecodeUriComponent = require(\"./url-try-decode-uri-component\");\n\nvar _config = require(\"./config\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @type {!JsonObject}\n */\nvar SERVING_TYPE_PREFIX = (0, _object.dict)({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n  // Actions viewer\n  'action': true\n});\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\n\nvar a;\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\n\nvar cache;\n/** @private @const Matches amp_js_* parameters in query string. */\n\nvar AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n/** @private @const Matches amp_gsa parameters in query string. */\n\nvar AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n/** @private @const Matches amp_r parameters in query string. */\n\nvar AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n/** @private @const Matches amp_kit parameters in query string. */\n\nvar AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n/** @private @const Matches usqp parameters from goog experiment in query string. */\n\nvar GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\nvar INVALID_PROTOCOLS = [\n/*eslint no-script-url: 0*/\n'javascript:',\n/*eslint no-script-url: 0*/\n'data:',\n/*eslint no-script-url: 0*/\n'vbscript:'];\n/** @const {string} */\n\nvar SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\n\nexports.SOURCE_ORIGIN_PARAM = SOURCE_ORIGIN_PARAM;\n\nfunction getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n * @return {!Location}\n */\n\n\nfunction parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a =\n    /** @type {!HTMLAnchorElement} */\n    self.document.createElement('a');\n    cache = self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new _lruCache.LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, opt_nocache ? null : cache);\n}\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n * @return {!Location}\n * @restricted\n */\n\n\nfunction parseUrlWithA(a, url, opt_cache) {\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url; // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  var info =\n  /** @type {!Location} */\n  {\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null // Set below.\n\n  }; // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  } // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n\n\n  if (info.protocol == 'http:' && info.port == 80 || info.protocol == 'https:' && info.port == 443) {\n    info.port = '';\n    info.host = info.hostname;\n  } // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n\n\n  var origin;\n\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n\n  info.origin = origin; // Freeze during testing to avoid accidental mutation.\n\n  var frozen = (0, _mode.getMode)().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\n\n\nfunction appendEncodedParamStringToUrl(url, paramString, opt_addToFront) {\n  if (!paramString) {\n    return url;\n  }\n\n  var mainAndFragment = url.split('#', 2);\n  var mainAndQuery = mainAndFragment[0].split('?', 2);\n  var newUrl = mainAndQuery[0] + (mainAndQuery[1] ? opt_addToFront ? \"?\" + paramString + \"&\" + mainAndQuery[1] : \"?\" + mainAndQuery[1] + \"&\" + paramString : \"?\" + paramString);\n  newUrl += mainAndFragment[1] ? \"#\" + mainAndFragment[1] : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\n\n\nfunction addParamToUrl(url, key, value, opt_addToFront) {\n  var field = encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction addMissingParamsToUrl(url, params) {\n  var location = parseUrlDeprecated(url);\n  var existingParams = parseQueryString(location.search);\n  var paramsToAdd = (0, _object.dict)({});\n  var keys = Object.keys(params);\n\n  for (var i = 0; i < keys.length; i++) {\n    if (!(0, _object.hasOwn)(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n\n  return addParamsToUrl(url, paramsToAdd);\n}\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction serializeQueryString(params) {\n  var s = [];\n\n  for (var k in params) {\n    var v = params[k];\n\n    if (v == null) {\n      continue;\n    } else if ((0, _types.isArray)(v)) {\n      for (var i = 0; i < v.length; i++) {\n        var sv =\n        /** @type {string} */\n        v[i];\n        s.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(sv));\n      }\n    } else {\n      var _sv =\n      /** @type {string} */\n      v;\n      s.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(_sv));\n    }\n  }\n\n  return s.join('&');\n}\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\n\n\nfunction isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return url.protocol == 'https:' || url.hostname == 'localhost' || url.hostname == '127.0.0.1' || (0, _string.endsWith)(url.hostname, '.localhost');\n}\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\n\n\nfunction assertHttpsUrl(urlString, elementContext, sourceName) {\n  if (sourceName === void 0) {\n    sourceName = 'source';\n  }\n\n  (0, _log.userAssert)(urlString != null, '%s %s must be available', elementContext, sourceName); // (erwinm, #4560): type cast necessary until #4560 is fixed.\n\n  var theUrlString =\n  /** @type {string} */\n  urlString;\n  (0, _log.userAssert)(isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString), '%s %s must start with ' + '\"https://\" or \"//\" or be relative and served from ' + 'either https or from localhost. Invalid value: %s', elementContext, sourceName, theUrlString);\n  return theUrlString;\n}\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\n\n\nfunction assertAbsoluteHttpOrHttpsUrl(urlString) {\n  (0, _log.userAssert)(/^https?\\:/i.test(urlString), 'URL must start with \"http://\" or \"https://\". Invalid value: %s', urlString);\n  return parseUrlDeprecated(urlString).href;\n}\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * This function is implemented in a separate file to avoid a circular\n * dependency.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\n\n\nfunction parseQueryString(queryString) {\n  return (0, _urlParseQueryString.parseQueryString_)(queryString);\n}\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeFragment(url) {\n  var index = url.indexOf('#');\n\n  if (index == -1) {\n    return url;\n  }\n\n  return url.substring(0, index);\n}\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction getFragment(url) {\n  var index = url.indexOf('#');\n\n  if (index == -1) {\n    return '';\n  }\n\n  return url.substring(index);\n}\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\n\n\nfunction isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return _config.urls.cdnProxyRegex.test(url.origin);\n}\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\n\n\nfunction getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n\n  var path = url.pathname.split('/', 2);\n  return path[1];\n}\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\n\n\nfunction isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return _config.urls.localhostRegex.test(url.origin);\n}\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\n\n\nfunction isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeAmpJsParamsFromUrl(url) {\n  var parsed = parseUrlDeprecated(url);\n  var search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeSearch(url) {\n  var index = url.indexOf('?');\n\n  if (index == -1) {\n    return url;\n  }\n\n  var fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\n\n\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n\n  var search = urlSearch.replace(AMP_JS_PARAMS_REGEX, '').replace(AMP_GSA_PARAMS_REGEX, '').replace(AMP_R_PARAMS_REGEX, '').replace(AMP_KIT_PARAMS_REGEX, '').replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '').replace(/^[?&]/, ''); // Removes first ? or &.\n\n  return search ? '?' + search : '';\n}\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\n\n\nfunction removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n\n  var paramRegex = new RegExp(\"[?&]\" + paramName + \"=[^&]*\", 'g');\n  var search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\n\n\nfunction getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  } // Not a proxy URL - return the URL itself.\n\n\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  } // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n\n\n  var path = url.pathname.split('/');\n  var prefix = path[1];\n  (0, _log.userAssert)(SERVING_TYPE_PREFIX[prefix], 'Unknown path prefix in url %s', url.href);\n  var domainOrHttpsSignal = path[2];\n  var origin = domainOrHttpsSignal == 's' ? 'https://' + decodeURIComponent(path[3]) : 'http://' + decodeURIComponent(domainOrHttpsSignal); // Sanity test that what we found looks like a domain.\n\n  (0, _log.userAssert)(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return origin + path.join('/') + removeAmpJsParamsFromSearch(url.search) + (url.hash || '');\n}\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\n\n\nfunction getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\n\n\nfunction resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n\n  if (typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private Visible for testing.\n */\n\n\nfunction resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  var relativeUrl = parseUrlDeprecated(relativeUrlString); // Absolute URL.\n\n  if ((0, _string.startsWith)(relativeUrlString.toLowerCase(), relativeUrl.protocol)) {\n    return relativeUrl.href;\n  } // Protocol-relative URL.\n\n\n  if ((0, _string.startsWith)(relativeUrlString, '//')) {\n    return baseUrl.protocol + relativeUrlString;\n  } // Absolute path.\n\n\n  if ((0, _string.startsWith)(relativeUrlString, '/')) {\n    return baseUrl.origin + relativeUrlString;\n  } // Relative path.\n\n\n  return baseUrl.origin + baseUrl.pathname.replace(/\\/[^/]*$/, '/') + relativeUrlString;\n}\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\n\n\nfunction getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  var sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\n\n\nfunction checkCorsUrl(url) {\n  var parsedUrl = parseUrlDeprecated(url);\n  var query = parseQueryString(parsedUrl.search);\n  (0, _log.userAssert)(!(SOURCE_ORIGIN_PARAM in query), 'Source origin is not allowed in %s', url);\n}\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} opt_fallback\n * @return {string}\n */\n\n\nfunction tryDecodeUriComponent(component, opt_fallback) {\n  return (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(component, opt_fallback);\n}\n\n},{\"./config\":16,\"./log\":26,\"./mode\":28,\"./string\":34,\"./types\":37,\"./url-parse-query-string\":38,\"./url-try-decode-uri-component\":39,\"./utils/lru-cache\":43,\"./utils/object\":44}],41:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.areEqualOrdered = areEqualOrdered;\nexports.remove = remove;\nexports.findIndex = findIndex;\nexports.fromIterator = fromIterator;\nexports.pushIfNotExist = pushIfNotExist;\nexports.lastItem = lastItem;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nfunction areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (var i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\n\n\nfunction remove(array, shouldRemove) {\n  var removed = [];\n  var index = 0;\n\n  for (var i = 0; i < array.length; i++) {\n    var item = array[i];\n\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n\n      index++;\n    }\n  }\n\n  if (index < array.length) {\n    array.length = index;\n  }\n\n  return removed;\n}\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\n\n\nfunction findIndex(array, predicate) {\n  for (var i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\n\n\nfunction fromIterator(iterator) {\n  var array = [];\n\n  for (var e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n\n  return array;\n}\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @template T\n */\n\n\nfunction pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n  }\n}\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\n\n\nfunction lastItem(array) {\n  return array[array.length - 1];\n}\n\n},{}],42:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.once = once;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// TODO(rsimha, #15334): Enable this rule.\n\n/* eslint jsdoc/check-types: 0 */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nfunction once(fn) {\n  var evaluated = false;\n  var retValue = null;\n  var callback = fn;\n  return function () {\n    if (!evaluated) {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n\n    return retValue;\n  };\n}\n\n},{}],43:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.LruCache = void 0;\n\nvar _log = require(\"../log\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nvar TAG = 'lru-cache';\n/**\n * @template T\n */\n\nvar LruCache =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {number} capacity\n   */\n  function LruCache(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n    /** @private {number} */\n\n    this.size_ = 0;\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n\n    this.access_ = 0;\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n\n    this.cache_ = Object.create(null);\n  }\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n\n\n  var _proto = LruCache.prototype;\n\n  _proto.has = function has(key) {\n    return !!this.cache_[key];\n  }\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  ;\n\n  _proto.get = function get(key) {\n    var cacheable = this.cache_[key];\n\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n\n    return undefined;\n  }\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  ;\n\n  _proto.put = function put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n\n    this.cache_[key] = {\n      payload: payload,\n      access: this.access_\n    };\n    this.evict_();\n  }\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  ;\n\n  _proto.evict_ = function evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    (0, _log.dev)().warn(TAG, 'Trimming LRU cache');\n    var cache = this.cache_;\n    var oldest = this.access_ + 1;\n    var oldestKey;\n\n    for (var key in cache) {\n      var access = cache[key].access;\n\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  };\n\n  return LruCache;\n}();\n\nexports.LruCache = LruCache;\n\n},{\"../log\":26}],44:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.map = map;\nexports.dict = dict;\nexports.hasOwn = hasOwn;\nexports.ownProperty = ownProperty;\nexports.deepMerge = deepMerge;\nexports.omit = omit;\n\nvar _types = require(\"../types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nvar hasOwn_ = Object.prototype.hasOwnProperty;\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\n\nfunction map(opt_initial) {\n  var obj = Object.create(null);\n\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n\n  return obj;\n}\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\n\n\nfunction dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return (\n    /** @type {!JsonObject} */\n    opt_initial || {}\n  );\n}\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\n\n\nfunction hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\n\n\nfunction ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\n\n\nfunction deepMerge(target, source, depth) {\n  if (depth === void 0) {\n    depth = 10;\n  }\n\n  // Keep track of seen objects to detect recursive references.\n  var seen = [];\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n\n  var queue = [];\n  queue.push({\n    t: target,\n    s: source,\n    d: 0\n  }); // BFS to ensure objects don't have recursive references at shallower depths.\n\n  var _loop = function _loop() {\n    var _queue$shift = queue.shift(),\n        t = _queue$shift.t,\n        s = _queue$shift.s,\n        d = _queue$shift.d;\n\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n\n    seen.push(s);\n\n    if (t === s) {\n      return \"continue\";\n    }\n\n    if (d > depth) {\n      Object.assign(t, s);\n      return \"continue\";\n    }\n\n    Object.keys(s).forEach(function (key) {\n      var newValue = s[key]; // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n\n      if (hasOwn(t, key)) {\n        var oldValue = t[key];\n\n        if ((0, _types.isObject)(newValue) && (0, _types.isObject)(oldValue)) {\n          queue.push({\n            t: oldValue,\n            s: newValue,\n            d: d + 1\n          });\n          return;\n        }\n      }\n\n      t[key] = newValue;\n    });\n  };\n\n  while (queue.length > 0) {\n    var _ret = _loop();\n\n    if (_ret === \"continue\") continue;\n  }\n\n  return target;\n}\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\n\n\nfunction omit(o, props) {\n  return Object.keys(o).reduce(function (acc, key) {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n\n    return acc;\n  }, {});\n}\n\n},{\"../types\":37}],45:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.tryResolve = tryResolve;\nexports.some = some;\nexports.LastAddedResolver = exports.Deferred = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nvar Deferred =\n/**\n * Creates an instance of Deferred.\n */\nfunction Deferred() {\n  var resolve, reject;\n  /**\n   * @const {!Promise<T>}\n   */\n\n  this.promise = new\n  /*OK*/\n  Promise(function (res, rej) {\n    resolve = res;\n    reject = rej;\n  });\n  /**\n   * @const {function(T=)}\n   */\n\n  this.resolve = resolve;\n  /**\n   * @const {function(*=)}\n   */\n\n  this.reject = reject;\n};\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\n\n\nexports.Deferred = Deferred;\n\nfunction tryResolve(fn) {\n  return new Promise(function (resolve) {\n    resolve(fn());\n  });\n}\n/**\n * Returns a promise which resolves if a threshold amount of the given promises\n * resolve, and rejects otherwise.\n * @param {!Array<!Promise>} promises The array of promises to test.\n * @param {number} count The number of promises that must resolve for the\n *     returned promise to resolve.\n * @return {!Promise} A promise that resolves if any of the given promises\n *     resolve, and which rejects otherwise.\n */\n\n\nfunction some(promises, count) {\n  if (count === void 0) {\n    count = 1;\n  }\n\n  return new Promise(function (resolve, reject) {\n    count = Math.max(count, 0);\n    var extra = promises.length - count;\n\n    if (extra < 0) {\n      reject(new Error('not enough promises to resolve'));\n    }\n\n    if (promises.length == 0) {\n      resolve([]);\n    }\n\n    var values = [];\n    var reasons = [];\n\n    var onFulfilled = function onFulfilled(value) {\n      if (values.length < count) {\n        values.push(value);\n      }\n\n      if (values.length == count) {\n        resolve(values);\n      }\n    };\n\n    var onRejected = function onRejected(reason) {\n      if (reasons.length <= extra) {\n        reasons.push(reason);\n      }\n\n      if (reasons.length > extra) {\n        reject(reasons);\n      }\n    };\n\n    for (var i = 0; i < promises.length; i++) {\n      Promise.resolve(promises[i]).then(onFulfilled, onRejected);\n    }\n  });\n}\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\n\n\nvar LastAddedResolver =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Array<!Promise>=} opt_promises\n   */\n  function LastAddedResolver(opt_promises) {\n    var resolve_, reject_;\n    /** @private @const {!Promise} */\n\n    this.promise_ = new Promise(function (resolve, reject) {\n      resolve_ = resolve;\n      reject_ = reject;\n    });\n    /** @private */\n\n    this.resolve_ = resolve_;\n    /** @private */\n\n    this.reject_ = reject_;\n    /** @private */\n\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (var i = 0; i < opt_promises.length; i++) {\n        this.add(opt_promises[i]);\n      }\n    }\n  }\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!Promise} promise\n   * @return {!Promise}\n   */\n\n\n  var _proto = LastAddedResolver.prototype;\n\n  _proto.add = function add(promise) {\n    var _this = this;\n\n    var countAtAdd = ++this.count_;\n    Promise.resolve(promise).then(function (result) {\n      if (_this.count_ === countAtAdd) {\n        _this.resolve_(result);\n      }\n    }, function (error) {\n      // Don't follow behavior of Promise.all and Promise.race error so that\n      // this will only reject when most recently added promise fails.\n      if (_this.count_ === countAtAdd) {\n        _this.reject_(error);\n      }\n    });\n    return this.promise_;\n  }\n  /** @override */\n  ;\n\n  _proto.then = function then(opt_resolve, opt_reject) {\n    return this.promise_.then(opt_resolve, opt_reject);\n  };\n\n  return LastAddedResolver;\n}();\n\nexports.LastAddedResolver = LastAddedResolver;\n\n},{}],46:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.throttle = throttle;\nexports.debounce = debounce;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Wraps a given callback and applies a rate limit.\n * It throttles the calls so that no consequent calls have time interval\n * smaller than the given minimal interval.\n *\n * @param {!Window} win\n * @param {function(...*)} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...*)}\n */\nfunction throttle(win, callback, minInterval) {\n  var locker = 0;\n  var nextCallArgs = null;\n  /**\n   * @param {!Object} args\n   */\n\n  function fire(args) {\n    nextCallArgs = null; // Lock the fire for minInterval milliseconds\n\n    locker = win.setTimeout(waiter, minInterval);\n    callback.apply(null, args);\n  }\n  /**\n   * Waiter function\n   */\n\n\n  function waiter() {\n    locker = 0; // If during the period there're invocations queued up, fire once.\n\n    if (nextCallArgs) {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (locker) {\n      nextCallArgs = args;\n    } else {\n      fire(args);\n    }\n  };\n}\n/**\n * Wraps a given callback and applies a wait timer, so that minInterval\n * milliseconds must pass since the last call before the callback is actually\n * invoked.\n *\n * @param {!Window} win\n * @param {function(...*)} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...*)}\n */\n\n\nfunction debounce(win, callback, minInterval) {\n  var locker = 0;\n  var timestamp = 0;\n  var nextCallArgs = null;\n  /**\n   * @param {?Array} args\n   */\n\n  function fire(args) {\n    nextCallArgs = null;\n    callback.apply(null, args);\n  }\n  /**\n   * Wait function for debounce\n   */\n\n\n  function waiter() {\n    locker = 0;\n    var remaining = minInterval - (win.Date.now() - timestamp);\n\n    if (remaining > 0) {\n      locker = win.setTimeout(waiter, remaining);\n    } else {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function () {\n    timestamp = win.Date.now();\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    nextCallArgs = args;\n\n    if (!locker) {\n      locker = win.setTimeout(waiter, minInterval);\n    }\n  };\n}\n\n},{}],47:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.toStructuredCloneable = toStructuredCloneable;\nexports.fromStructuredCloneable = fromStructuredCloneable;\nexports.getViewerInterceptResponse = getViewerInterceptResponse;\nexports.setupInput = setupInput;\nexports.setupInit = setupInit;\nexports.setupAMPCors = setupAMPCors;\nexports.setupJsonFetchInit = setupJsonFetchInit;\nexports.assertSuccess = assertSuccess;\nexports.getViewerAuthTokenIfAvailable = getViewerAuthTokenIfAvailable;\n\nvar _services = require(\"../services\");\n\nvar _log = require(\"../log\");\n\nvar _object = require(\"./object\");\n\nvar _array = require(\"./array\");\n\nvar _url = require(\"../url\");\n\nvar _mode = require(\"../mode\");\n\nvar _types = require(\"../types\");\n\nvar _experiments = require(\"../experiments\");\n\nvar _formDataWrapper = require(\"../form-data-wrapper\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @private @const {!Array<string>} */\nvar allowedMethods_ = ['GET', 'POST'];\n/** @private @const {!Array<function(*):boolean>} */\n\nvar allowedJsonBodyTypes_ = [_types.isArray, _types.isObject];\n/**\n * Serializes a fetch request so that it can be passed to `postMessage()`,\n * i.e., can be cloned using the\n * [structured clone algorithm](http://mdn.io/Structured_clone_algorithm).\n *\n * The request is serialized in the following way:\n *\n * 1. If the `init.body` is a `FormData`, set content-type header to\n * `multipart/form-data` and transform `init.body` into an\n * `!Array<!Array<string>>` holding the list of form entries, where each\n * element in the array is a form entry (key-value pair) represented as a\n * 2-element array.\n *\n * 2. Return a new object having properties `input` and the transformed\n * `init`.\n *\n * The serialized request is assumed to be de-serialized in the following way:\n *\n * 1.If content-type header starts with `multipart/form-data`\n * (case-insensitive), transform the entry array in `init.body` into a\n * `FormData` object.\n *\n * 2. Pass `input` and transformed `init` to `fetch` (or the constructor of\n * `Request`).\n *\n * Currently only `FormData` used in `init.body` is handled as it's the only\n * type being used in AMP runtime that needs serialization. The `Headers` type\n * also needs serialization, but callers should not be passing `Headers`\n * object in `init`, as that fails `fetchPolyfill` on browsers that don't\n * support fetch. Some serialization-needing types for `init.body` such as\n * `ArrayBuffer` and `Blob` are already supported by the structured clone\n * algorithm. Other serialization-needing types such as `URLSearchParams`\n * (which is not supported in IE and Safari) and `FederatedCredentials` are\n * not used in AMP runtime.\n *\n * @param {string} input The URL of the XHR to convert to structured\n *     cloneable.\n * @param {!FetchInitDef} init The options of the XHR to convert to structured\n *     cloneable.\n * @return {{input: string, init: !FetchInitDef}} The serialized structurally-\n *     cloneable request.\n * @private\n */\n\nfunction toStructuredCloneable(input, init) {\n  var newInit = Object.assign({}, init);\n\n  if ((0, _formDataWrapper.isFormDataWrapper)(init.body)) {\n    var wrapper =\n    /** @type {!FormDataWrapperInterface} */\n    init.body;\n    newInit.headers['Content-Type'] = 'multipart/form-data;charset=utf-8';\n    newInit.body = (0, _array.fromIterator)(wrapper.entries());\n  }\n\n  return {\n    input: input,\n    init: newInit\n  };\n}\n/**\n * De-serializes a fetch response that was made possible to be passed to\n * `postMessage()`, i.e., can be cloned using the\n * [structured clone algorithm](http://mdn.io/Structured_clone_algorithm).\n *\n * The response is assumed to be serialized in the following way:\n *\n * 1. Transform the entries in the headers of the response into an\n * `!Array<!Array<string>>` holding the list of header entries, where each\n * element in the array is a header entry (key-value pair) represented as a\n * 2-element array. The header key is case-insensitive.\n *\n * 2. Include the header entry list and `status` and `statusText` properties\n * of the response in as `headers`, `status` and `statusText` properties of\n * `init`.\n *\n * 3. Include the body of the response serialized as string in `body`.\n *\n * 4. Return a new object having properties `body` and `init`.\n *\n * The response is de-serialized in the following way:\n *\n * 1. If the `Response` type is supported and `responseType` is not\n * document, pass `body` and `init` directly to the constructor of `Response`.\n *\n * 2. Otherwise, populate a fake XHR object to pass to `FetchResponse` as if\n * the response is returned by the fetch polyfill.\n *\n * 3. If `responseType` is `document`, also parse the body and populate\n * `responseXML` as a `Document` type.\n *\n * @param {JsonObject|string|undefined} response The structurally-cloneable\n *     response to convert back to a regular Response.\n * @param {string|undefined} responseType The original response type used to\n *     initiate the XHR.\n * @return {!Response} The deserialized regular response.\n * @private\n */\n\n\nfunction fromStructuredCloneable(response, responseType) {\n  (0, _log.userAssert)((0, _types.isObject)(response), 'Object expected: %s', response);\n  var isDocumentType = responseType == 'document';\n\n  if (!isDocumentType) {\n    // Use native `Response` type if available for performance. If response\n    // type is `document`, we must fall back to `FetchResponse` polyfill\n    // because callers would then rely on the `responseXML` property being\n    // present, which is not supported by the Response type.\n    return new Response(response['body'], response['init']);\n  }\n\n  var lowercasedHeaders = (0, _object.map)();\n  var data = {\n    status: 200,\n    statusText: 'OK',\n\n    /**\n     * @param {string} name\n     * @return {string}\n     */\n    getResponseHeader: function getResponseHeader(name) {\n      return lowercasedHeaders[String(name).toLowerCase()] || null;\n    }\n  };\n\n  if (response['init']) {\n    var init = response['init'];\n\n    if ((0, _types.isArray)(init.headers)) {\n      init.headers.forEach(function (entry) {\n        var headerName = entry[0];\n        var headerValue = entry[1];\n        lowercasedHeaders[String(headerName).toLowerCase()] = String(headerValue);\n      });\n    }\n\n    if (init.status) {\n      data.status = parseInt(init.status, 10);\n    }\n\n    if (init.statusText) {\n      data.statusText = String(init.statusText);\n    }\n  }\n\n  return new Response(response['body'] ? String(response['body']) : '', data);\n}\n/**\n * Intercepts the XHR and proxies it through the viewer if necessary.\n *\n * XHRs are intercepted if all of the following are true:\n * - The AMP doc is in single doc mode\n * - The requested resource is not a 1p request.\n * - The viewer has the `xhrInterceptor` capability\n * - The Viewer is a trusted viewer or AMP is currently in developement mode\n * - The AMP doc is opted-in for XHR interception (`<html>` tag has\n *   `allow-xhr-interception` attribute)\n *\n * @param {!Window} win\n * @param {?../service/ampdoc-impl.AmpDoc} ampdocSingle\n * @param {string} input The URL of the XHR which may get intercepted.\n * @param {!FetchInitDef} init The options of the XHR which may get\n *     intercepted.\n * @return {!Promise<!Response|undefined>}\n *     A response returned by the interceptor if XHR is intercepted or\n *     `Promise<undefined>` otherwise.\n * @private\n */\n\n\nfunction getViewerInterceptResponse(win, ampdocSingle, input, init) {\n  if (!ampdocSingle) {\n    return Promise.resolve();\n  }\n\n  var whenUnblocked = init.prerenderSafe ? Promise.resolve() : ampdocSingle.whenFirstVisible();\n\n  var viewer = _services.Services.viewerForDoc(ampdocSingle);\n\n  var urlIsProxy = (0, _url.isProxyOrigin)(input);\n  var viewerCanIntercept = viewer.hasCapability('xhrInterceptor');\n  var interceptorDisabledForLocalDev = init.bypassInterceptorForDev && (0, _mode.getMode)(win).localDev;\n\n  if (urlIsProxy || !viewerCanIntercept || interceptorDisabledForLocalDev) {\n    return whenUnblocked;\n  }\n\n  var htmlElement = ampdocSingle.getRootNode().documentElement;\n  var docOptedIn = htmlElement.hasAttribute('allow-xhr-interception');\n\n  if (!docOptedIn) {\n    return whenUnblocked;\n  }\n\n  return whenUnblocked.then(function () {\n    return viewer.isTrustedViewer();\n  }).then(function (viewerTrusted) {\n    if (!(viewerTrusted || (0, _mode.getMode)(win).localDev || (0, _experiments.isExperimentOn)(win, 'untrusted-xhr-interception'))) {\n      return;\n    }\n\n    var messagePayload = (0, _object.dict)({\n      'originalRequest': toStructuredCloneable(input, init)\n    });\n    return viewer.sendMessageAwaitResponse('xhr', messagePayload).then(function (response) {\n      return fromStructuredCloneable(response, init.responseType);\n    });\n  });\n}\n/**\n * Sets up URL based on ampCors\n * @param {!Window} win\n * @param {string} input\n * @param {!FetchInitDef} init The options of the XHR which may get\n * intercepted.\n * @return {string}\n */\n\n\nfunction setupInput(win, input, init) {\n  (0, _log.devAssert)(typeof input == 'string', 'Only URL supported: %s', input);\n\n  if (init.ampCors !== false) {\n    input = (0, _url.getCorsUrl)(win, input);\n  }\n\n  return input;\n}\n/**\n * Sets up and normalizes the FetchInitDef\n *\n * @param {?FetchInitDef=} opt_init Fetch options object.\n * @param {string=} opt_accept The HTTP Accept header value.\n * @return {!FetchInitDef}\n */\n\n\nfunction setupInit(opt_init, opt_accept) {\n  var init = opt_init || {}; // In particular, Firefox does not tolerate `null` values for\n  // `credentials`.\n\n  var creds = init.credentials;\n  (0, _log.devAssert)(creds === undefined || creds == 'include' || creds == 'omit', 'Only credentials=include|omit support: %s', creds);\n  init.method = normalizeMethod_(init.method);\n  init.headers = init.headers || (0, _object.dict)({});\n\n  if (opt_accept) {\n    init.headers['Accept'] = opt_accept;\n  } // In edge a `TypeMismatchError` is thrown when body is set to null.\n\n\n  (0, _log.devAssert)(init.body !== null, 'fetch `body` can not be `null`');\n  return init;\n}\n/**\n *\n * Sets up AMPSpecific CORS headers.\n * @param {!Window} win\n * @param {string} input\n * @param {?FetchInitDef=} init\n * @return {!FetchInitDef}\n */\n\n\nfunction setupAMPCors(win, input, init) {\n  init = init || {}; // For some same origin requests, add AMP-Same-Origin: true header to allow\n  // publishers to validate that this request came from their own origin.\n\n  var currentOrigin = (0, _url.getWinOrigin)(win);\n  var targetOrigin = (0, _url.parseUrlDeprecated)(input).origin;\n\n  if (currentOrigin == targetOrigin) {\n    init['headers'] = init['headers'] || {};\n    init['headers']['AMP-Same-Origin'] = 'true';\n  }\n\n  return init;\n}\n/**\n * @param {?FetchInitDef=} init\n * @return {!FetchInitDef}\n */\n\n\nfunction setupJsonFetchInit(init) {\n  var fetchInit = setupInit(init, 'application/json');\n\n  if (fetchInit.method == 'POST' && !(0, _formDataWrapper.isFormDataWrapper)(fetchInit.body)) {\n    // Assume JSON strict mode where only objects or arrays are allowed\n    // as body.\n    (0, _log.devAssert)(allowedJsonBodyTypes_.some(function (test) {\n      return test(fetchInit.body);\n    }), 'body must be of type object or array. %s', fetchInit.body); // Content should be 'text/plain' to avoid CORS preflight.\n\n    fetchInit.headers['Content-Type'] = fetchInit.headers['Content-Type'] || 'text/plain;charset=utf-8';\n    var headerContentType = fetchInit.headers['Content-Type']; // Cast is valid, because we checked that it is not form data above.\n\n    if (headerContentType === 'application/x-www-form-urlencoded') {\n      fetchInit.body = (0, _url.serializeQueryString)(\n      /** @type {!JsonObject} */\n      fetchInit.body);\n    } else {\n      fetchInit.body = JSON.stringify(\n      /** @type {!JsonObject} */\n      fetchInit.body);\n    }\n  }\n\n  return fetchInit;\n}\n/**\n * Normalized method name by uppercasing.\n * @param {string|undefined} method\n * @return {string}\n * @private\n */\n\n\nfunction normalizeMethod_(method) {\n  if (method === undefined) {\n    return 'GET';\n  }\n\n  method = method.toUpperCase();\n  (0, _log.devAssert)(allowedMethods_.includes(method), 'Only one of %s is currently allowed. Got %s', allowedMethods_.join(', '), method);\n  return method;\n}\n/**\n * If 415 or in the 5xx range.\n * @param {number} status\n * @return {boolean}\n */\n\n\nfunction isRetriable(status) {\n  return status == 415 || status >= 500 && status < 600;\n}\n/**\n * Returns the response if successful or otherwise throws an error.\n * @param {!Response} response\n * @return {!Promise<!Response>}\n * @private Visible for testing\n */\n\n\nfunction assertSuccess(response) {\n  return new Promise(function (resolve) {\n    if (response.ok) {\n      return resolve(response);\n    }\n\n    var status = response.status;\n    var err = (0, _log.user)().createError(\"HTTP error \" + status);\n    err.retriable = isRetriable(status); // TODO(@jridgewell, #9448): Callers who need the response should\n    // skip processing.\n\n    err.response = response;\n    throw err;\n  });\n}\n/**\n * Returns a promise resolving to a string identity token if the element\n * contains the 'crossorigin' attribute and the amp-viewer-assistance extension\n * is present. Resolves to undefined otherwise.\n * @param {!Element} element\n * @return {!Promise<undefined>}\n */\n\n\nfunction getViewerAuthTokenIfAvailable(element) {\n  var crossOriginAttr = element.getAttribute('crossorigin');\n\n  if (crossOriginAttr && crossOriginAttr.trim() === 'amp-viewer-auth-token-via-post') {\n    return _services.Services.viewerAssistanceForDocOrNull(element).then(function (va) {\n      (0, _log.userAssert)(va, 'crossorigin=\"amp-viewer-auth-token-post\" ' + 'requires amp-viewer-assistance extension.');\n      return va.getIdTokenPromise();\n    }) // If crossorigin attr is present, resolve with token or empty string.\n    .then(function (token) {\n      return token || '';\n    }).catch(function () {\n      return '';\n    });\n  } // If crossorigin attribute is missing, always resolve with undefined.\n\n\n  return Promise.resolve(undefined);\n}\n\n},{\"../experiments\":22,\"../form-data-wrapper\":23,\"../log\":26,\"../mode\":28,\"../services\":32,\"../types\":37,\"../url\":40,\"./array\":41,\"./object\":44}],48:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.cssEscape = cssEscape;\n\n/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  } // Nil is the null terminator (group 1) capture\n\n\n  if (nil) {\n    return \"\\uFFFD\";\n  } // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n\n\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' ';\n  } // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n\n\n  return '\\\\' + match;\n}\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\n\n\nfunction cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n\n},{}]},{},[3])\n\n","export const CSS = \"form.amp-form-submit-error [submit-error],form.amp-form-submit-success [submit-success],form.amp-form-submitting [submitting]{display:block}textarea[autoexpand]:not(.i-amphtml-textarea-max){overflow:hidden!important}.i-amphtml-textarea-clone{visibility:hidden;position:absolute;top:-9999px;left:-9999px;height:0!important}.i-amphtml-validation-bubble{transform:translate(-50%,-100%);background-color:#fff;box-shadow:0 5px 15px 0 rgba(0,0,0,0.5);max-width:200px;position:absolute;display:block;box-sizing:border-box;padding:10px;border-radius:5px}.i-amphtml-validation-bubble:after{content:\\\" \\\";position:absolute;bottom:-8px;left:30px;width:0;height:0;border-left:8px solid transparent;border-right:8px solid transparent;border-top:8px solid #fff}[visible-when-invalid]{color:red}\\n/*# sourceURL=/extensions/amp-form/0.1/amp-form.css*/\";\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AmpEvents} from '../../../src/amp-events';\nimport {Services} from '../../../src/services';\nimport {computedStyle, px, setStyle} from '../../../src/style';\nimport {dev, devAssert, user} from '../../../src/log';\nimport {iterateCursor, removeElement} from '../../../src/dom';\nimport {listen, listenOncePromise} from '../../../src/event-helper';\nimport {throttle} from '../../../src/utils/rate-limit';\nimport {toArray} from '../../../src/types';\n\nconst AMP_FORM_TEXTAREA_EXPAND_ATTR = 'autoexpand';\n\nconst MIN_EVENT_INTERVAL_MS = 100;\n\nconst AMP_FORM_TEXTAREA_CLONE_CSS = 'i-amphtml-textarea-clone';\n\nconst AMP_FORM_TEXTAREA_MAX_CSS = 'i-amphtml-textarea-max';\n\nconst AMP_FORM_TEXTAREA_HAS_EXPANDED_DATA = 'iAmphtmlHasExpanded';\n\n/**\n * Install expandable textarea behavior for the given form.\n *\n * This class should be able to be removed when browsers implement\n * `height: max-content` for the textarea element.\n * https://github.com/w3c/csswg-drafts/issues/2141\n */\nexport class AmpFormTextarea {\n  /**\n   * Install, monitor and cleanup the document as `textarea[autoexpand]`\n   * elements are added and removed.\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  static install(ampdoc) {\n    const root = ampdoc.getRootNode();\n\n    let ampFormTextarea = null;\n    const maybeInstall = () => {\n      const autoexpandTextarea = root.querySelector('textarea[autoexpand]');\n      if (autoexpandTextarea && !ampFormTextarea) {\n        ampFormTextarea = new AmpFormTextarea(ampdoc);\n        return;\n      }\n\n      if (!autoexpandTextarea && ampFormTextarea) {\n        ampFormTextarea.dispose();\n        ampFormTextarea = null;\n        return;\n      }\n    };\n\n    listen(root, AmpEvents.DOM_UPDATE, maybeInstall);\n    maybeInstall();\n  }\n\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    const root = ampdoc.getRootNode();\n\n    /** @private @const */\n    this.doc_ = root.ownerDocument || root;\n\n    /** @private @const */\n    this.win_ = /** @type {!Window} */ (devAssert(this.doc_.defaultView));\n\n    /** @private @const */\n    this.viewport_ = Services.viewportForDoc(ampdoc);\n\n    /** @private */\n    this.unlisteners_ = [];\n\n    this.unlisteners_.push(\n      listen(root, 'input', e => {\n        const element = dev().assertElement(e.target);\n        if (\n          element.tagName != 'TEXTAREA' ||\n          !element.hasAttribute(AMP_FORM_TEXTAREA_EXPAND_ATTR)\n        ) {\n          return;\n        }\n\n        maybeResizeTextarea(element);\n      })\n    );\n\n    this.unlisteners_.push(\n      listen(root, 'mousedown', e => {\n        if (e.which != 1) {\n          return;\n        }\n\n        const element = dev().assertElement(e.target);\n        // Handle all text area drag as we want to measure mutate and notify\n        // the viewer of possible doc height changes.\n        if (element.tagName != 'TEXTAREA') {\n          return;\n        }\n\n        handleTextareaDrag(element);\n      })\n    );\n\n    let cachedTextareaElements = root.querySelectorAll('textarea');\n    this.unlisteners_.push(\n      listen(root, AmpEvents.DOM_UPDATE, () => {\n        cachedTextareaElements = root.querySelectorAll('textarea');\n      })\n    );\n    const throttledResize = throttle(\n      this.win_,\n      e => {\n        if (e.relayoutAll) {\n          resizeTextareaElements(cachedTextareaElements);\n        }\n      },\n      MIN_EVENT_INTERVAL_MS\n    );\n    this.unlisteners_.push(this.viewport_.onResize(throttledResize));\n\n    handleInitialOverflowElements(cachedTextareaElements);\n  }\n\n  /**\n   * Cleanup any consumed resources\n   */\n  dispose() {\n    this.unlisteners_.forEach(unlistener => unlistener());\n  }\n}\n\n/**\n * For now, warn if textareas with initial overflow are present, and\n * prevent them from becoming autoexpand textareas.\n * @param {!IArrayLike<!Element>} textareas\n * @return {!Promise}\n */\nexport function handleInitialOverflowElements(textareas) {\n  return Promise.all(\n    toArray(textareas).map(element => {\n      return getHasOverflow(element).then(hasOverflow => {\n        if (hasOverflow) {\n          user().warn(\n            'AMP-FORM',\n            '\"textarea[autoexpand]\" with initially scrolling content ' +\n              'will not autoexpand.\\n' +\n              'See https://github.com/ampproject/amphtml/issues/20839'\n          );\n          element.removeAttribute(AMP_FORM_TEXTAREA_EXPAND_ATTR);\n        }\n      });\n    })\n  );\n}\n\n/**\n * Measure if any overflow is present on the element.\n * @param {!Element} element\n * @return {!Promise<boolean>}\n * @visibleForTesting\n */\nexport function getHasOverflow(element) {\n  const resources = Services.resourcesForDoc(element);\n  return resources.measureElement(() => {\n    return element./*OK*/ scrollHeight > element./*OK*/ clientHeight;\n  });\n}\n\n/**\n * Attempt to resize all textarea elements\n * @param {!IArrayLike<!Element>} elements\n */\nfunction resizeTextareaElements(elements) {\n  iterateCursor(elements, element => {\n    if (\n      element.tagName != 'TEXTAREA' ||\n      !element.hasAttribute(AMP_FORM_TEXTAREA_EXPAND_ATTR)\n    ) {\n      return;\n    }\n\n    maybeResizeTextarea(element);\n  });\n}\n\n/**\n * This makes no assumptions about the location of the resize handle, and it\n * assumes that if the user drags the mouse at any position and the height of\n * the textarea changes, then the user intentionally resized the textarea.\n * @param {!Element} element\n */\nfunction handleTextareaDrag(element) {\n  const resources = Services.resourcesForDoc(element);\n\n  Promise.all([\n    resources.measureElement(() => element./*OK*/ scrollHeight),\n    listenOncePromise(element, 'mouseup'),\n  ]).then(results => {\n    const heightMouseDown = results[0];\n    let heightMouseUp = 0;\n\n    return resources.measureMutateElement(\n      element,\n      () => {\n        heightMouseUp = element./*OK*/ scrollHeight;\n      },\n      () => {\n        maybeRemoveResizeBehavior(element, heightMouseDown, heightMouseUp);\n      }\n    );\n  });\n}\n\n/**\n * Remove the resize behavior if a user drags the resize handle and changes\n * the height of the textarea.\n * @param {!Element} element\n * @param {number} startHeight\n * @param {number} endHeight\n */\nfunction maybeRemoveResizeBehavior(element, startHeight, endHeight) {\n  if (startHeight != endHeight) {\n    element.removeAttribute(AMP_FORM_TEXTAREA_EXPAND_ATTR);\n  }\n}\n\n/**\n * Resize the textarea to fit its current text, by expanding or shrinking if\n * needed.\n * @param {!Element} element\n * @return {!Promise}\n * @visibleForTesting\n */\nexport function maybeResizeTextarea(element) {\n  const resources = Services.resourcesForDoc(element);\n  const win = /** @type {!Window} */ (devAssert(\n    element.ownerDocument.defaultView\n  ));\n\n  let offset = 0;\n  let scrollHeight = 0;\n  let maxHeight = 0;\n\n  // The minScrollHeight is the minimimum height required to contain the\n  // text content without showing a scrollbar.\n  // This is different than scrollHeight, which is the larger of: 1. the\n  // element's content, or 2. the element itself.\n  const minScrollHeightPromise = getShrinkHeight(element);\n\n  return resources.measureMutateElement(\n    element,\n    () => {\n      const computed = computedStyle(win, element);\n      scrollHeight = element./*OK*/ scrollHeight;\n\n      const maybeMaxHeight = parseInt(\n        computed.getPropertyValue('max-height'),\n        10\n      );\n      maxHeight = isNaN(maybeMaxHeight) ? Infinity : maybeMaxHeight;\n\n      if (computed.getPropertyValue('box-sizing') == 'content-box') {\n        offset =\n          -parseInt(computed.getPropertyValue('padding-top'), 10) +\n          -parseInt(computed.getPropertyValue('padding-bottom'), 10);\n      } else {\n        offset =\n          parseInt(computed.getPropertyValue('border-top-width'), 10) +\n          parseInt(computed.getPropertyValue('border-bottom-width'), 10);\n      }\n    },\n    () => {\n      return minScrollHeightPromise.then(minScrollHeight => {\n        const height = minScrollHeight + offset;\n        // Prevent the scrollbar from appearing\n        // unless the text is beyond the max-height\n        element.classList.toggle(AMP_FORM_TEXTAREA_MAX_CSS, height > maxHeight);\n\n        // Prevent the textarea from shrinking if it has not yet expanded.\n        const hasExpanded =\n          AMP_FORM_TEXTAREA_HAS_EXPANDED_DATA in element.dataset;\n        const shouldResize = hasExpanded || scrollHeight <= minScrollHeight;\n\n        if (shouldResize) {\n          element.dataset[AMP_FORM_TEXTAREA_HAS_EXPANDED_DATA] = '';\n          // Set the textarea height to the height of the text\n          setStyle(element, 'height', px(minScrollHeight + offset));\n        }\n      });\n    }\n  );\n}\n\n/**\n * If shrink behavior is enabled, get the amount to shrink or expand. This\n * uses a more expensive method to calculate the new height creating a temporary\n * clone of the node and setting its height to 0 to get the minimum scrollHeight\n * of the element's contents.\n * @param {!Element} textarea\n * @return {!Promise<number>}\n */\nfunction getShrinkHeight(textarea) {\n  const doc = /** @type {!Document} */ (devAssert(textarea.ownerDocument));\n  const win = /** @type {!Window} */ (devAssert(doc.defaultView));\n  const body = /** @type {!HTMLBodyElement} */ (devAssert(doc.body));\n  const resources = Services.resourcesForDoc(textarea);\n\n  const clone = textarea.cloneNode(/*deep*/ false);\n  clone.classList.add(AMP_FORM_TEXTAREA_CLONE_CSS);\n\n  let cloneWidth = 0;\n  let resultingHeight = 0;\n  let shouldKeepTop = false;\n\n  return resources\n    .measureMutateElement(\n      body,\n      () => {\n        const computed = computedStyle(win, textarea);\n        const maxHeight = parseInt(computed.getPropertyValue('max-height'), 10); // TODO(cvializ): what if it's a percent?\n        cloneWidth = parseInt(computed.getPropertyValue('width'), 10);\n        // maxHeight is NaN if the max-height property is 'none'.\n        shouldKeepTop =\n          isNaN(maxHeight) || textarea./*OK*/ scrollHeight < maxHeight;\n      },\n      () => {\n        // Prevent a jump from the textarea element scrolling\n        if (shouldKeepTop) {\n          textarea./*OK*/ scrollTop = 0;\n        }\n\n        // Keep the clone's width consistent if the textarea was sized relative\n        // to its parent element.\n        setStyle(clone, 'width', px(cloneWidth));\n\n        // Append the clone to the DOM so its scrollHeight can be read\n        doc.body.appendChild(clone);\n      }\n    )\n    .then(() => {\n      return resources.measureMutateElement(\n        body,\n        () => {\n          resultingHeight = clone./*OK*/ scrollHeight;\n        },\n        () => {\n          removeElement(clone);\n        }\n      );\n    })\n    .then(() => resultingHeight);\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ActionTrust} from '../../../src/action-constants';\nimport {AmpEvents} from '../../../src/amp-events';\nimport {AmpFormTextarea} from './amp-form-textarea';\nimport {\n  AsyncInputAttributes,\n  AsyncInputClasses,\n} from '../../../src/async-input';\nimport {CSS} from '../../../build/amp-form-0.1.css';\nimport {Deferred, tryResolve} from '../../../src/utils/promise';\nimport {\n  FORM_VERIFY_OPTOUT,\n  FORM_VERIFY_PARAM,\n  getFormVerifier,\n} from './form-verifiers';\nimport {FormDirtiness} from './form-dirtiness';\nimport {FormEvents} from './form-events';\nimport {FormSubmitService} from './form-submit-service';\nimport {SOURCE_ORIGIN_PARAM, addParamsToUrl} from '../../../src/url';\nimport {Services} from '../../../src/services';\nimport {SsrTemplateHelper} from '../../../src/ssr-template-helper';\nimport {\n  ancestorElementsByTag,\n  childElementByAttr,\n  createElementWithAttributes,\n  iterateCursor,\n  removeElement,\n  tryFocus,\n} from '../../../src/dom';\nimport {createCustomEvent} from '../../../src/event-helper';\nimport {createFormDataWrapper} from '../../../src/form-data-wrapper';\nimport {deepMerge, dict} from '../../../src/utils/object';\nimport {dev, devAssert, user, userAssert} from '../../../src/log';\nimport {escapeCssSelectorIdent} from '../../../src/css';\nimport {\n  formOrNullForElement,\n  getFormAsObject,\n  setFormForElement,\n} from '../../../src/form';\nimport {getFormValidator, isCheckValiditySupported} from './form-validators';\nimport {getMode} from '../../../src/mode';\nimport {\n  getViewerAuthTokenIfAvailable,\n  setupAMPCors,\n  setupInit,\n  setupInput,\n} from '../../../src/utils/xhr-utils';\nimport {installFormProxy} from './form-proxy';\nimport {installStylesForDoc} from '../../../src/style-installer';\nimport {isArray, toArray, toWin} from '../../../src/types';\nimport {triggerAnalyticsEvent} from '../../../src/analytics';\n\n/** @const {string} */\nconst TAG = 'amp-form';\n\n/**\n * A list of external dependencies that can be included in forms.\n * @const {!Array<string>}\n */\nconst EXTERNAL_DEPS = ['amp-selector'];\n\n/** @const @enum {string} */\nconst FormState = {\n  INITIAL: 'initial',\n  VERIFYING: 'verifying',\n  VERIFY_ERROR: 'verify-error',\n  SUBMITTING: 'submitting',\n  SUBMIT_ERROR: 'submit-error',\n  SUBMIT_SUCCESS: 'submit-success',\n};\n\n/** @const @enum {string} */\nconst UserValidityState = {\n  NONE: 'none',\n  USER_VALID: 'valid',\n  USER_INVALID: 'invalid',\n};\n\n/** @private @const {string} */\nconst REDIRECT_TO_HEADER = 'AMP-Redirect-To';\n\n/**\n * Time to wait for services / async input before throwing an error.\n * @private @const {number}\n */\nconst SUBMIT_TIMEOUT = 10000;\n\nexport class AmpForm {\n  /**\n   * Adds functionality to the passed form element and listens to submit event.\n   * @param {!HTMLFormElement} element\n   * @param {string} id\n   */\n  constructor(element, id) {\n    //TODO(dvoytenko, #7063): Remove the try catch.\n    try {\n      installFormProxy(element);\n    } catch (e) {\n      dev().error(TAG, 'form proxy failed to install', e);\n    }\n\n    setFormForElement(element, this);\n\n    /** @private @const {string} */\n    this.id_ = id;\n\n    /** @const @private {!Window} */\n    this.win_ = toWin(element.ownerDocument.defaultView);\n\n    /** @const @private {!../../../src/service/timer-impl.Timer} */\n    this.timer_ = Services.timerFor(this.win_);\n\n    /** @const @private {!../../../src/service/url-replacements-impl.UrlReplacements} */\n    this.urlReplacement_ = Services.urlReplacementsForDoc(element);\n\n    /** @private {?Promise} */\n    this.dependenciesPromise_ = null;\n\n    /** @const @private {!HTMLFormElement} */\n    this.form_ = element;\n\n    /** @const @private {!../../../src/service/ampdoc-impl.AmpDoc}  */\n    this.ampdoc_ = Services.ampdoc(this.form_);\n\n    /** @const @private {!../../../src/service/template-impl.Templates} */\n    this.templates_ = Services.templatesFor(this.win_);\n\n    /** @const @private {!../../../src/service/xhr-impl.Xhr} */\n    this.xhr_ = Services.xhrFor(this.win_);\n\n    /** @const @private {!../../../src/service/action-impl.ActionService} */\n    this.actions_ = Services.actionServiceForDoc(this.form_);\n\n    /** @const @private {!../../../src/service/resources-interface.ResourcesInterface} */\n    this.resources_ = Services.resourcesForDoc(this.form_);\n\n    /** @const @private {!../../../src/service/viewer-interface.ViewerInterface}  */\n    this.viewer_ = Services.viewerForDoc(this.form_);\n\n    /**\n     * @const {!../../../src/ssr-template-helper.SsrTemplateHelper}\n     * @private\n     */\n    this.ssrTemplateHelper_ = new SsrTemplateHelper(\n      TAG,\n      this.viewer_,\n      this.templates_\n    );\n\n    /** @const @private {string} */\n    this.method_ = (this.form_.getAttribute('method') || 'GET').toUpperCase();\n\n    /** @const @private {string} */\n    this.target_ = this.form_.getAttribute('target');\n\n    /** @private {?string} */\n    this.xhrAction_ = this.getXhrUrl_('action-xhr');\n\n    /** @const @private {?string} */\n    this.xhrVerify_ = this.getXhrUrl_('verify-xhr');\n\n    /** @const @private {boolean} */\n    this.shouldValidate_ = !this.form_.hasAttribute('novalidate');\n    // Need to disable browser validation in order to allow us to take full\n    // control of this. This allows us to trigger validation APIs and reporting\n    // when we need to.\n    this.form_.setAttribute('novalidate', '');\n    if (!this.shouldValidate_) {\n      this.form_.setAttribute('amp-novalidate', '');\n    }\n    this.form_.classList.add('i-amphtml-form');\n\n    /** @private {!FormState} */\n    this.state_ = FormState.INITIAL;\n\n    const inputs = this.form_.elements;\n    for (let i = 0; i < inputs.length; i++) {\n      const {name} = inputs[i];\n      userAssert(\n        name != SOURCE_ORIGIN_PARAM && name != FORM_VERIFY_PARAM,\n        'Illegal input name, %s found: %s',\n        name,\n        inputs[i]\n      );\n    }\n\n    /** @const @private {!./form-dirtiness.FormDirtiness} */\n    this.dirtinessHandler_ = new FormDirtiness(this.form_, this.win_);\n\n    /** @const @private {!./form-validators.FormValidator} */\n    this.validator_ = getFormValidator(this.form_);\n\n    /** @const @private {!./form-verifiers.FormVerifier} */\n    this.verifier_ = getFormVerifier(this.form_, () => this.handleXhrVerify_());\n\n    this.actions_.installActionHandler(\n      this.form_,\n      this.actionHandler_.bind(this)\n    );\n    this.installEventHandlers_();\n    this.installInputMasking_();\n\n    /** @private {?Promise} */\n    this.xhrSubmitPromise_ = null;\n\n    /** @private {?Promise} */\n    this.renderTemplatePromise_ = null;\n\n    /** @private {?./form-submit-service.FormSubmitService} */\n    this.formSubmitService_ = null;\n    Services.formSubmitForDoc(element).then(service => {\n      this.formSubmitService_ = service;\n    });\n  }\n\n  /**\n   * Gets and validates an attribute for form request URLs.\n   * @param {string} attribute\n   * @return {?string}\n   * @private\n   */\n  getXhrUrl_(attribute) {\n    const url = this.form_.getAttribute(attribute);\n    if (url) {\n      const urlService = Services.urlForDoc(this.form_);\n      urlService.assertHttpsUrl(url, this.form_, attribute);\n      userAssert(\n        !urlService.isProxyOrigin(url),\n        'form %s should not be on AMP CDN: %s',\n        attribute,\n        this.form_\n      );\n    }\n    return url;\n  }\n\n  /**\n   * Builds fetch request data for amp-form elements.\n   * @param {string} url\n   * @param {string} method\n   * @param {!Object<string, string>=} opt_extraFields\n   * @param {!Array<string>=} opt_fieldBlacklist\n   * @return {!Promise<!FetchRequestDef>}\n   */\n  requestForFormFetch(url, method, opt_extraFields, opt_fieldBlacklist) {\n    let xhrUrl, body;\n    const isHeadOrGet = method == 'GET' || method == 'HEAD';\n    if (isHeadOrGet) {\n      this.assertNoSensitiveFields_();\n      const values = this.getFormAsObject_();\n      if (opt_fieldBlacklist) {\n        opt_fieldBlacklist.forEach(name => {\n          delete values[name];\n        });\n      }\n\n      if (opt_extraFields) {\n        deepMerge(values, opt_extraFields);\n      }\n      xhrUrl = addParamsToUrl(url, values);\n    } else {\n      xhrUrl = url;\n      body = createFormDataWrapper(this.win_, this.form_);\n      if (opt_fieldBlacklist) {\n        opt_fieldBlacklist.forEach(name => {\n          body.delete(name);\n        });\n      }\n\n      for (const key in opt_extraFields) {\n        body.append(key, opt_extraFields[key]);\n      }\n    }\n\n    /** @type {!FetchRequestDef}*/\n    const request = {\n      xhrUrl,\n      fetchOpt: dict({\n        'body': body,\n        'method': method,\n        'credentials': 'include',\n        'headers': dict({'Accept': 'application/json'}),\n      }),\n    };\n\n    return getViewerAuthTokenIfAvailable(this.form_).then(token => {\n      if (token) {\n        userAssert(\n          request.fetchOpt['method'] == 'POST',\n          'Cannot attach auth token with GET request.'\n        );\n        body.append('ampViewerAuthToken', token);\n      }\n      return request;\n    });\n  }\n\n  /**\n   * Setter to change cached action-xhr.\n   * @param {string} url\n   */\n  setXhrAction(url) {\n    this.xhrAction_ = url;\n  }\n\n  /**\n   * Handle actions that require at least high trust.\n   * @param {!../../../src/service/action-impl.ActionInvocation} invocation\n   * @return {?Promise}\n   * @private\n   */\n  actionHandler_(invocation) {\n    if (!invocation.satisfiesTrust(ActionTrust.HIGH)) {\n      return null;\n    }\n    if (invocation.method == 'submit') {\n      return this.whenDependenciesReady_().then(() => {\n        return this.handleSubmitAction_(invocation);\n      });\n    } else if (invocation.method === 'clear') {\n      this.handleClearAction_();\n    }\n    return null;\n  }\n\n  /**\n   * Returns a promise that will be resolved when all dependencies used inside\n   * the form tag are loaded and built (e.g. amp-selector) or 2 seconds timeout\n   * - whichever is first.\n   * @return {!Promise}\n   * @private\n   */\n  whenDependenciesReady_() {\n    if (this.dependenciesPromise_) {\n      return this.dependenciesPromise_;\n    }\n    const depElements = this.form_./*OK*/ querySelectorAll(\n      EXTERNAL_DEPS.join(',')\n    );\n    // Wait for an element to be built to make sure it is ready.\n    const promises = toArray(depElements).map(el => el.whenBuilt());\n    return (this.dependenciesPromise_ = this.waitOnPromisesOrTimeout_(\n      promises,\n      2000\n    ));\n  }\n\n  /** @private */\n  installEventHandlers_() {\n    this.ampdoc_.whenNextVisible().then(() => {\n      const autofocus = this.form_.querySelector('[autofocus]');\n      if (autofocus) {\n        tryFocus(autofocus);\n      }\n    });\n\n    this.form_.addEventListener(\n      'submit',\n      this.handleSubmitEvent_.bind(this),\n      true\n    );\n\n    this.form_.addEventListener(\n      'blur',\n      e => {\n        checkUserValidityAfterInteraction_(dev().assertElement(e.target));\n        this.validator_.onBlur(e);\n      },\n      true\n    );\n\n    //  Form verification is not supported when SSRing templates is enabled.\n    if (!this.ssrTemplateHelper_.isSupported()) {\n      this.form_.addEventListener('change', e => {\n        this.verifier_.onCommit().then(({updatedElements, errors}) => {\n          updatedElements.forEach(checkUserValidityAfterInteraction_);\n          // Tell the validation to reveal any input.validationMessage added\n          // by the form verifier.\n          this.validator_.onBlur(e);\n\n          // Only make the verify XHR if the user hasn't pressed submit.\n          if (this.state_ === FormState.VERIFYING) {\n            if (errors.length) {\n              this.setState_(FormState.VERIFY_ERROR);\n              this.renderTemplate_(dict({'verifyErrors': errors})).then(() => {\n                this.triggerAction_(FormEvents.VERIFY_ERROR, errors);\n              });\n            } else {\n              this.setState_(FormState.INITIAL);\n            }\n          }\n        });\n      });\n    }\n\n    this.form_.addEventListener('input', e => {\n      checkUserValidityAfterInteraction_(dev().assertElement(e.target));\n      this.validator_.onInput(e);\n    });\n  }\n\n  /** @private */\n  installInputMasking_() {\n    Services.inputmaskServiceForDocOrNull(this.form_).then(inputmaskService => {\n      if (inputmaskService) {\n        inputmaskService.install();\n      }\n    });\n  }\n\n  /**\n   * Triggers 'amp-form-submit' event in 'amp-analytics' and\n   * generates variables for form fields to be accessible in analytics\n   *\n   * @param {string} eventType\n   * @private\n   */\n  triggerFormSubmitInAnalytics_(eventType) {\n    this.assertSsrTemplate_(false, 'Form analytics not supported');\n    const formDataForAnalytics = dict({});\n    const formObject = this.getFormAsObject_();\n\n    for (const k in formObject) {\n      if (Object.prototype.hasOwnProperty.call(formObject, k)) {\n        formDataForAnalytics['formFields[' + k + ']'] = formObject[k].join(',');\n      }\n    }\n    formDataForAnalytics['formId'] = this.form_.id;\n\n    this.analyticsEvent_(eventType, formDataForAnalytics);\n  }\n\n  /**\n   * Handles submissions through action service invocations.\n   *   e.g. <img on=tap:form.submit>\n   * @param {!../../../src/service/action-impl.ActionInvocation} invocation\n   * @return {!Promise}\n   * @private\n   */\n  handleSubmitAction_(invocation) {\n    if (this.state_ == FormState.SUBMITTING || !this.checkValidity_()) {\n      return Promise.resolve(null);\n    }\n    // `submit` has the same trust level as the AMP Action that caused it.\n    return this.submit_(invocation.trust, null);\n  }\n\n  /**\n   * Handles clearing the form through action service invocations.\n   * @private\n   */\n  handleClearAction_() {\n    this.form_.reset();\n    this.setState_(FormState.INITIAL);\n    this.form_.classList.remove('user-valid');\n    this.form_.classList.remove('user-invalid');\n\n    const validityElements = this.form_.querySelectorAll(\n      '.user-valid, .user-invalid'\n    );\n    iterateCursor(validityElements, element => {\n      element.classList.remove('user-valid');\n      element.classList.remove('user-invalid');\n    });\n\n    const messageElements = this.form_.querySelectorAll(\n      '.visible[validation-for]'\n    );\n    iterateCursor(messageElements, element => {\n      element.classList.remove('visible');\n    });\n\n    removeValidityStateClasses(this.form_);\n  }\n\n  /**\n   * Note on stopImmediatePropagation usage here, it is important to emulate\n   * native browser submit event blocking. Otherwise any other submit listeners\n   * would get the event.\n   *\n   * For example, action service shouldn't trigger 'submit' event if form is\n   * actually invalid. stopImmediatePropagation allows us to make sure we don't\n   * trigger it.\n   *\n   * This prevents the default submission event in any of following cases:\n   *   - The form is still finishing a previous submission.\n   *   - The form is invalid.\n   *   - Handling an XHR submission.\n   *   - It's a non-XHR POST submission (unsupported).\n   *\n   * @param {!Event} event\n   * @return {!Promise}\n   * @private\n   */\n  handleSubmitEvent_(event) {\n    if (this.state_ == FormState.SUBMITTING || !this.checkValidity_()) {\n      event.stopImmediatePropagation();\n      event.preventDefault();\n      return Promise.resolve(null);\n    }\n\n    if (this.xhrAction_ || this.method_ == 'POST') {\n      event.preventDefault();\n    }\n\n    // Submits caused by user input have high trust.\n    return this.submit_(ActionTrust.HIGH, event);\n  }\n\n  /**\n   * Helper method that actual handles the different cases (post, get, xhr...).\n   * @param {ActionTrust} trust\n   * @param {?Event} event\n   * @return {!Promise}\n   * @private\n   */\n  submit_(trust, event) {\n    try {\n      const event = {\n        form: this.form_,\n        actionXhrMutator: this.setXhrAction.bind(this),\n      };\n      devAssert(this.formSubmitService_).fire(event);\n    } catch (e) {\n      dev().error(TAG, 'Form submit service failed: %s', e);\n    }\n\n    // Get our special fields\n    const varSubsFields = this.getVarSubsFields_();\n    const asyncInputs = this.form_.getElementsByClassName(\n      AsyncInputClasses.ASYNC_INPUT\n    );\n\n    this.dirtinessHandler_.onSubmitting();\n\n    // Do any assertions we may need to do\n    // For NonXhrGET\n    // That way we can determine if\n    // we can submit synchronously\n    if (!this.xhrAction_ && this.method_ == 'GET') {\n      this.assertSsrTemplate_(false, 'Non-XHR GETs not supported.');\n      this.assertNoSensitiveFields_();\n\n      // If we have no async inputs, we can just submit synchronously\n      if (asyncInputs.length === 0) {\n        for (let i = 0; i < varSubsFields.length; i++) {\n          this.urlReplacement_.expandInputValueSync(varSubsFields[i]);\n        }\n\n        /**\n         * If the submit was called with an event, then we shouldn't\n         * manually submit the form\n         */\n        const shouldSubmitFormElement = !event;\n\n        this.handleNonXhrGet_(shouldSubmitFormElement);\n        this.dirtinessHandler_.onSubmitSuccess();\n        return Promise.resolve();\n      }\n\n      if (event) {\n        event.preventDefault();\n      }\n    }\n\n    // Set ourselves to the SUBMITTING State\n    this.setState_(FormState.SUBMITTING);\n\n    // Promises to run before submit without timeout.\n    const requiredActionPromises = [];\n    // Promises to run before submitting the form\n    const presubmitPromises = [];\n    presubmitPromises.push(this.doVarSubs_(varSubsFields));\n    iterateCursor(asyncInputs, asyncInput => {\n      const asyncCall = this.getValueForAsyncInput_(asyncInput);\n      if (\n        asyncInput.classList.contains(AsyncInputClasses.ASYNC_REQUIRED_ACTION)\n      ) {\n        requiredActionPromises.push(asyncCall);\n      } else {\n        presubmitPromises.push(asyncCall);\n      }\n    });\n\n    return Promise.all(requiredActionPromises).then(\n      () => {\n        return this.waitOnPromisesOrTimeout_(\n          presubmitPromises,\n          SUBMIT_TIMEOUT\n        ).then(\n          () => this.handlePresubmitSuccess_(trust),\n          error => this.handlePresubmitError_(error)\n        );\n      },\n      error => this.handlePresubmitError_(error)\n    );\n  }\n\n  /**\n   * @private\n   * Handle form error for presubmit async calls\n   * @param {*} error\n   * @return {Promise}\n   */\n  handlePresubmitError_(error) {\n    const detail = dict();\n    if (error && error.message) {\n      detail['error'] = error.message;\n    }\n    return this.handleSubmitFailure_(error, detail);\n  }\n\n  /**\n   * Get form fields that require variable substitutions\n   * @return {!IArrayLike<!HTMLInputElement>}\n   * @private\n   */\n  getVarSubsFields_() {\n    // Fields that support var substitutions.\n    return this.form_.querySelectorAll('[type=\"hidden\"][data-amp-replace]');\n  }\n\n  /**\n   * Handle successful presubmit tasks\n   * @param {!ActionTrust} trust\n   * @return {!Promise}\n   */\n  handlePresubmitSuccess_(trust) {\n    if (this.xhrAction_) {\n      return this.handleXhrSubmit_(trust);\n    } else if (this.method_ == 'POST') {\n      this.handleNonXhrPost_();\n    } else if (this.method_ == 'GET') {\n      this.handleNonXhrGet_(/* shouldSubmitFormElement */ true);\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Send the verify request and control the VERIFYING state.\n   * @return {!Promise}\n   * @private\n   */\n  handleXhrVerify_() {\n    if (this.state_ === FormState.SUBMITTING) {\n      return Promise.resolve();\n    }\n    this.setState_(FormState.VERIFYING);\n    this.triggerAction_(FormEvents.VERIFY, null);\n\n    return this.doVarSubs_(this.getVarSubsFields_()).then(() =>\n      this.doVerifyXhr_()\n    );\n  }\n\n  /**\n   * @private\n   * @param {ActionTrust} trust\n   * @return {!Promise}\n   */\n  handleXhrSubmit_(trust) {\n    let p;\n    if (this.ssrTemplateHelper_.isSupported()) {\n      p = this.handleSsrTemplate_(trust);\n    } else {\n      this.submittingWithTrust_(trust);\n      p = this.doActionXhr_().then(\n        response => this.handleXhrSubmitSuccess_(response),\n        error => this.handleXhrSubmitFailure_(error)\n      );\n    }\n    if (getMode().test) {\n      this.xhrSubmitPromise_ = p;\n    }\n    return p;\n  }\n\n  /**\n   * Handles the server side proxying and then rendering of the template.\n   * @param {ActionTrust} trust\n   * @return {!Promise}\n   * @private\n   */\n  handleSsrTemplate_(trust) {\n    let request;\n    // Render template for the form submitting state.\n    const values = this.getFormAsObject_();\n    return this.renderTemplate_(values)\n      .then(() =>\n        this.actions_.trigger(\n          this.form_,\n          FormEvents.SUBMIT,\n          /* event */ null,\n          trust\n        )\n      )\n      .then(() =>\n        this.requestForFormFetch(\n          dev().assertString(this.xhrAction_),\n          this.method_\n        )\n      )\n      .then(formRequest => {\n        request = formRequest;\n        request.fetchOpt = setupInit(request.fetchOpt);\n        request.fetchOpt = setupAMPCors(\n          this.win_,\n          request.xhrUrl,\n          request.fetchOpt\n        );\n        request.xhrUrl = setupInput(\n          this.win_,\n          request.xhrUrl,\n          request.fetchOpt\n        );\n        return this.ssrTemplateHelper_.fetchAndRenderTemplate(\n          this.form_,\n          request,\n          this.templatesForSsr_()\n        );\n      })\n      .then(\n        response => this.handleSsrTemplateSuccess_(response),\n        error => {\n          const detail = dict();\n          if (error && error.message) {\n            detail['error'] = error.message;\n          }\n          return this.handleSubmitFailure_(error, detail);\n        }\n      );\n  }\n\n  /**\n   * If present, finds and returns the success and error response templates.\n   * Note that we do not render the submitting state template and only\n   * deal with submit-success or submit-error.\n   * @return {!../../../src/ssr-template-helper.SsrTemplateDef}\n   * @private\n   */\n  templatesForSsr_() {\n    let successTemplate;\n    const successContainer = this.form_.querySelector('[submit-success]');\n    if (successContainer) {\n      successTemplate = this.templates_.maybeFindTemplate(successContainer);\n    }\n\n    let errorTemplate;\n    const errorContainer = this.form_.querySelector('[submit-error]');\n    if (errorContainer) {\n      errorTemplate = this.templates_.maybeFindTemplate(errorContainer);\n    }\n    return {successTemplate, errorTemplate};\n  }\n\n  /**\n   * Transition the form to the submit success state.\n   * @param {!JsonObject} response\n   * @return {!Promise}\n   * @private\n   */\n  handleSsrTemplateSuccess_(response) {\n    return this.handleSubmitSuccess_(tryResolve(() => response));\n  }\n\n  /**\n   * Triggers the analytics and renders any template for submitting state.\n   * @param {ActionTrust} trust\n   */\n  submittingWithTrust_(trust) {\n    this.triggerFormSubmitInAnalytics_('amp-form-submit');\n    // After variable substitution\n    const values = this.getFormAsObject_();\n    // At the form submitting state, we want to display any template\n    // messages with the submitting attribute.\n    this.renderTemplate_(values).then(() => {\n      this.actions_.trigger(\n        this.form_,\n        FormEvents.SUBMIT,\n        /* event */ null,\n        trust\n      );\n    });\n  }\n\n  /**\n   * Perform asynchronous variable substitution on the fields that require it.\n   * @param {!IArrayLike<!HTMLInputElement>} varSubsFields\n   * @return {!Promise}\n   * @private\n   */\n  doVarSubs_(varSubsFields) {\n    const varSubPromises = [];\n    for (let i = 0; i < varSubsFields.length; i++) {\n      varSubPromises.push(\n        this.urlReplacement_.expandInputValueAsync(varSubsFields[i])\n      );\n    }\n    return this.waitOnPromisesOrTimeout_(varSubPromises, 100);\n  }\n\n  /**\n   * Call getValue() on Async Input elements, and\n   * Create hidden inputs containing their returned values\n   * @param {!Element} asyncInput\n   * @return {!Promise}\n   * @private\n   */\n  getValueForAsyncInput_(asyncInput) {\n    return asyncInput\n      .getImpl()\n      .then(implementation => implementation.getValue())\n      .then(value => {\n        const name = asyncInput.getAttribute(AsyncInputAttributes.NAME);\n        let input = this.form_.querySelector(\n          `input[name=${escapeCssSelectorIdent(name)}]`\n        );\n        if (!input) {\n          input = createElementWithAttributes(\n            this.win_.document,\n            'input',\n            dict({\n              'name': asyncInput.getAttribute(AsyncInputAttributes.NAME),\n              'hidden': 'true',\n            })\n          );\n        }\n        input.setAttribute('value', value);\n        this.form_.appendChild(input);\n      });\n  }\n\n  /**\n   * Send a request to the form's action endpoint.\n   * @return {!Promise<!Response>}\n   * @private\n   */\n  doActionXhr_() {\n    return this.doXhr_(dev().assertString(this.xhrAction_), this.method_);\n  }\n\n  /**\n   * Send a request to the form's verify endpoint.\n   * @return {!Promise<!Response>}\n   * @private\n   */\n  doVerifyXhr_() {\n    const noVerifyFields = toArray(\n      this.form_.querySelectorAll(\n        `[${escapeCssSelectorIdent(FORM_VERIFY_OPTOUT)}]`\n      )\n    );\n    const blacklist = noVerifyFields.map(field => field.name || field.id);\n\n    return this.doXhr_(\n      dev().assertString(this.xhrVerify_),\n      this.method_,\n      /**opt_extraFields*/ {[FORM_VERIFY_PARAM]: true},\n      /**opt_fieldBlacklist*/ blacklist\n    );\n  }\n\n  /**\n   * Send a request to a form endpoint.\n   * @param {string} url\n   * @param {string} method\n   * @param {!Object<string, string>=} opt_extraFields\n   * @param {!Array<string>=} opt_fieldBlacklist\n   * @return {!Promise<!Response>}\n   * @private\n   */\n  doXhr_(url, method, opt_extraFields, opt_fieldBlacklist) {\n    this.assertSsrTemplate_(false, 'XHRs should be proxied.');\n    return this.requestForFormFetch(\n      url,\n      method,\n      opt_extraFields,\n      opt_fieldBlacklist\n    ).then(request => this.xhr_.fetch(request.xhrUrl, request.fetchOpt));\n  }\n\n  /**\n   * @param {!Response} response\n   * @return {!Promise}\n   * @private\n   */\n  handleXhrSubmitSuccess_(response) {\n    const json = /** @type {!Promise<!JsonObject>} */ (response.json());\n    return this.handleSubmitSuccess_(json).then(() => {\n      this.triggerFormSubmitInAnalytics_('amp-form-submit-success');\n      this.maybeHandleRedirect_(response);\n    });\n  }\n\n  /**\n   * Transition the form to the submit success state.\n   * @param {!Promise<!JsonObject>} jsonPromise\n   * @return {!Promise}\n   * @private visible for testing\n   */\n  handleSubmitSuccess_(jsonPromise) {\n    return jsonPromise.then(\n      json => {\n        this.setState_(FormState.SUBMIT_SUCCESS);\n        this.renderTemplate_(json || {}).then(() => {\n          this.triggerAction_(FormEvents.SUBMIT_SUCCESS, json);\n          this.dirtinessHandler_.onSubmitSuccess();\n        });\n      },\n      error => {\n        user().error(TAG, 'Failed to parse response JSON: %s', error);\n      }\n    );\n  }\n\n  /**\n   * @param {*} e\n   * @return {!Promise}\n   * @private\n   */\n  handleXhrSubmitFailure_(e) {\n    let promise;\n    if (e && e.response) {\n      const error = /** @type {!Error} */ (e);\n      promise = error.response.json().catch(() => null);\n    } else {\n      promise = Promise.resolve(null);\n    }\n    return promise.then(responseJson => {\n      this.triggerFormSubmitInAnalytics_('amp-form-submit-error');\n      this.handleSubmitFailure_(e, responseJson);\n      this.maybeHandleRedirect_(e.response);\n    });\n  }\n\n  /**\n   * Transition the form the the submit error state.\n   * @param {*} error\n   * @param {!JsonObject} json\n   * @return {!Promise}\n   * @private\n   */\n  handleSubmitFailure_(error, json) {\n    this.setState_(FormState.SUBMIT_ERROR);\n    user().error(TAG, 'Form submission failed: %s', error);\n    return tryResolve(() => {\n      this.renderTemplate_(json).then(() => {\n        this.triggerAction_(FormEvents.SUBMIT_ERROR, json);\n        this.dirtinessHandler_.onSubmitError();\n      });\n    });\n  }\n\n  /** @private */\n  handleNonXhrPost_() {\n    // non-XHR POST requests are not supported.\n    userAssert(\n      false,\n      'Only XHR based (via action-xhr attribute) submissions are supported ' +\n        'for POST requests. %s',\n      this.form_\n    );\n  }\n\n  /**\n   * Triggers Submit Analytics,\n   * and Form Element submit if passed by param.\n   * shouldSubmitFormElement should ONLY be true\n   * If the submit event.preventDefault was called\n   * @param {boolean} shouldSubmitFormElement\n   */\n  handleNonXhrGet_(shouldSubmitFormElement) {\n    this.triggerFormSubmitInAnalytics_('amp-form-submit');\n    if (shouldSubmitFormElement) {\n      this.form_.submit();\n    }\n    this.setState_(FormState.INITIAL);\n  }\n\n  /**\n   * Asserts that SSR support is the same as value.\n   * @param {boolean} value\n   * @param {string} msg\n   * @private\n   */\n  assertSsrTemplate_(value, msg) {\n    const supported = this.ssrTemplateHelper_.isSupported();\n    userAssert(\n      supported === value,\n      '[amp-form]: viewerRenderTemplate | %s',\n      msg\n    );\n  }\n\n  /**\n   * Fail if there are password or file fields present when the function\n   * is called.\n   * @private\n   */\n  assertNoSensitiveFields_() {\n    const fields = this.form_.querySelectorAll(\n      'input[type=password],input[type=file]'\n    );\n    userAssert(\n      fields.length == 0,\n      'input[type=password] or input[type=file] ' +\n        'may only appear in form[method=post]'\n    );\n  }\n\n  /**\n   * @return {boolean} False if the form is invalid.\n   * @private\n   */\n  checkValidity_() {\n    if (isCheckValiditySupported(this.win_.document)) {\n      // Validity checking should always occur, novalidate only circumvent\n      // reporting and blocking submission on non-valid forms.\n      const isValid = checkUserValidityOnSubmission(this.form_);\n      if (this.shouldValidate_) {\n        this.validator_.report();\n        return isValid;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Handles response redirect throught the AMP-Redirect-To response header.\n   * Not applicable if viewer can render templates.\n   * @param {?Response} response\n   * @private\n   */\n  maybeHandleRedirect_(response) {\n    this.assertSsrTemplate_(false, 'Redirects not supported.');\n    if (!response || !response.headers) {\n      return;\n    }\n    const redirectTo = response.headers.get(REDIRECT_TO_HEADER);\n    if (redirectTo) {\n      userAssert(\n        this.target_ != '_blank',\n        'Redirecting to target=_blank using AMP-Redirect-To is currently ' +\n          'not supported, use target=_top instead. %s',\n        this.form_\n      );\n      try {\n        const urlService = Services.urlForDoc(this.form_);\n        urlService.assertAbsoluteHttpOrHttpsUrl(redirectTo);\n        urlService.assertHttpsUrl(redirectTo, 'AMP-Redirect-To', 'Url');\n      } catch (e) {\n        userAssert(\n          false,\n          'The `AMP-Redirect-To` header value must be an ' +\n            'absolute URL starting with https://. Found %s',\n          redirectTo\n        );\n      }\n      const navigator = Services.navigationForDoc(this.form_);\n      navigator.navigateTo(this.win_, redirectTo, REDIRECT_TO_HEADER);\n    }\n  }\n\n  /**\n   * Triggers either a submit-success or submit-error action with response data.\n   * @param {!FormEvents} name\n   * @param {?JsonObject|!Array<{message: string, name: string}>} detail\n   * @private\n   */\n  triggerAction_(name, detail) {\n    const event = createCustomEvent(\n      this.win_,\n      `${TAG}.${name}`,\n      dict({'response': detail})\n    );\n    this.actions_.trigger(this.form_, name, event, ActionTrust.HIGH);\n  }\n\n  /**\n   * Returns a race promise between resolving all promises or timing out.\n   * @param {!Array<!Promise>} promises\n   * @param {number} timeout\n   * @return {!Promise}\n   * @private\n   */\n  waitOnPromisesOrTimeout_(promises, timeout) {\n    return Promise.race([Promise.all(promises), this.timer_.promise(timeout)]);\n  }\n\n  /**\n   * @param {string} eventType\n   * @param {!JsonObject=} opt_vars A map of vars and their values.\n   * @private\n   */\n  analyticsEvent_(eventType, opt_vars) {\n    triggerAnalyticsEvent(this.form_, eventType, opt_vars);\n  }\n\n  /**\n   * Returns form data as an object.\n   * @return {!JsonObject}\n   * @private\n   */\n  getFormAsObject_() {\n    return getFormAsObject(this.form_);\n  }\n\n  /**\n   * Adds proper classes for the state passed.\n   * @param {!FormState} newState\n   * @private\n   */\n  setState_(newState) {\n    const previousState = this.state_;\n    this.form_.classList.remove(`amp-form-${previousState}`);\n    this.form_.classList.add(`amp-form-${newState}`);\n    this.cleanupRenderedTemplate_(previousState);\n    this.state_ = newState;\n  }\n\n  /**\n   * Renders a template based on the form state and its presence in the form.\n   * @param {!JsonObject} data\n   * @return {!Promise}\n   * @private\n   */\n  renderTemplate_(data) {\n    if (isArray(data)) {\n      data = dict();\n      user().warn(\n        TAG,\n        `Unexpected data type: ${data}. Expected non JSON array.`\n      );\n    }\n    const container = this.form_./*OK*/ querySelector(`[${this.state_}]`);\n    let p = Promise.resolve();\n    if (container) {\n      const messageId = `rendered-message-${this.id_}`;\n      container.setAttribute('role', 'alert');\n      container.setAttribute('aria-labeledby', messageId);\n      container.setAttribute('aria-live', 'assertive');\n      if (this.templates_.hasTemplate(container)) {\n        p = this.ssrTemplateHelper_\n          .renderTemplate(devAssert(container), data)\n          .then(rendered => {\n            rendered.id = messageId;\n            rendered.setAttribute('i-amphtml-rendered', '');\n            return this.resources_.mutateElement(\n              dev().assertElement(container),\n              () => {\n                container.appendChild(rendered);\n                const renderedEvent = createCustomEvent(\n                  this.win_,\n                  AmpEvents.DOM_UPDATE,\n                  /* detail */ null,\n                  {bubbles: true}\n                );\n                container.dispatchEvent(renderedEvent);\n              }\n            );\n          });\n      } else {\n        // TODO(vializ): This is to let AMP know that the AMP elements inside\n        // this container are now visible so they get scheduled for layout.\n        // This will be unnecessary when the AMP Layers implementation is\n        // complete.\n        this.resources_.mutateElement(container, () => {});\n      }\n    }\n\n    if (getMode().test) {\n      this.renderTemplatePromise_ = p;\n    }\n\n    return p;\n  }\n\n  /**\n   * Removes the template for the passed state.\n   * @param {!FormState} state\n   * @private\n   */\n  cleanupRenderedTemplate_(state) {\n    const container = this.form_./*OK*/ querySelector(`[${state}]`);\n    if (!container) {\n      return;\n    }\n    const previousRender = childElementByAttr(container, 'i-amphtml-rendered');\n    if (previousRender) {\n      removeElement(previousRender);\n    }\n  }\n\n  /**\n   * Returns a promise that resolves when tempalte render finishes. The promise\n   * will be null if the template render has not started.\n   * @visibleForTesting\n   * @return {*} TODO(#23582): Specify return type\n   */\n  renderTemplatePromiseForTesting() {\n    return this.renderTemplatePromise_;\n  }\n\n  /**\n   * Returns a promise that resolves when xhr submit finishes. The promise\n   * will be null if xhr submit has not started.\n   * @visibleForTesting\n   * @return {*} TODO(#23582): Specify return type\n   */\n  xhrSubmitPromiseForTesting() {\n    return this.xhrSubmitPromise_;\n  }\n}\n\n/**\n * Checks user validity for all inputs, fieldsets and the form.\n * @param {!HTMLFormElement} form\n * @return {boolean} Whether the form is currently valid or not.\n */\nfunction checkUserValidityOnSubmission(form) {\n  const elements = form.querySelectorAll('input,select,textarea,fieldset');\n  iterateCursor(elements, element => checkUserValidity(element));\n  return checkUserValidity(form);\n}\n\n/**\n * Returns the user validity state of the element.\n * @param {!Element} element\n * @return {string}\n */\nfunction getUserValidityStateFor(element) {\n  if (element.classList.contains('user-valid')) {\n    return UserValidityState.USER_VALID;\n  } else if (element.classList.contains('user-invalid')) {\n    return UserValidityState.USER_INVALID;\n  }\n\n  return UserValidityState.NONE;\n}\n\n/**\n * Updates class names on the element to reflect the active invalid types on it.\n *\n * @param {!Element} element\n */\nfunction updateInvalidTypesClasses(element) {\n  if (!element.validity) {\n    return;\n  }\n  for (const validationType in element.validity) {\n    element.classList.toggle(validationType, element.validity[validationType]);\n  }\n}\n\n/**\n * Removes all validity classes from elements in the given form.\n * @param {!Element} form\n */\nfunction removeValidityStateClasses(form) {\n  const dummyInput = document.createElement('input');\n  for (const validityState in dummyInput.validity) {\n    const elements = form.querySelectorAll(\n      `.${escapeCssSelectorIdent(validityState)}`\n    );\n    iterateCursor(elements, element => {\n      dev()\n        .assertElement(element)\n        .classList.remove(validityState);\n    });\n  }\n}\n\n/**\n * Checks user validity which applies .user-valid and .user-invalid AFTER the\n * user interacts with the input by moving away from the input (blur) or by\n * changing its value (input).\n *\n * See :user-invalid spec for more details:\n *   https://drafts.csswg.org/selectors-4/#user-pseudos\n *\n * The specs are still not fully specified. The current solution tries to follow\n * a common sense approach for when to apply these classes. As the specs gets\n * clearer, we should strive to match it as much as possible.\n *\n * @param {!Element} element\n * @param {boolean=} propagate Whether to propagate the user validity to\n * ancestors.\n * @return {boolean} Whether the element is valid or not.\n */\nfunction checkUserValidity(element, propagate = false) {\n  // TODO(mkhatib, #6930): Implement basic validation for custom inputs like\n  // amp-selector.\n  // If this is not a field type with checkValidity don't do anything.\n  if (!element.checkValidity) {\n    return true;\n  }\n  let shouldPropagate = false;\n  const previousValidityState = getUserValidityStateFor(element);\n  const isCurrentlyValid = element.checkValidity();\n  if (\n    previousValidityState != UserValidityState.USER_VALID &&\n    isCurrentlyValid\n  ) {\n    element.classList.add('user-valid');\n    element.classList.remove('user-invalid');\n    // Don't propagate user-valid unless it was marked invalid before.\n    shouldPropagate = previousValidityState == UserValidityState.USER_INVALID;\n  } else if (\n    previousValidityState != UserValidityState.USER_INVALID &&\n    !isCurrentlyValid\n  ) {\n    element.classList.add('user-invalid');\n    element.classList.remove('user-valid');\n    // Always propagate an invalid state change. One invalid input field is\n    // guaranteed to make the fieldset and form invalid as well.\n    shouldPropagate = true;\n  }\n  updateInvalidTypesClasses(element);\n\n  if (propagate && shouldPropagate) {\n    // Propagate user validity to ancestor fieldsets.\n    const ancestors = ancestorElementsByTag(element, 'fieldset');\n    for (let i = 0; i < ancestors.length; i++) {\n      checkUserValidity(ancestors[i]);\n    }\n    // Also update the form user validity.\n    if (element.form) {\n      checkUserValidity(element.form);\n    }\n  }\n\n  return isCurrentlyValid;\n}\n\n/**\n * Responds to user interaction with an input by checking user validity of the\n * input and possibly its input-related ancestors (e.g. feildset, form).\n * @param {!Element} input\n * @private visible for testing.\n */\nexport function checkUserValidityAfterInteraction_(input) {\n  checkUserValidity(input, /* propagate */ true);\n}\n\n/**\n * Bootstraps the amp-form elements\n */\nexport class AmpFormService {\n  /**\n   * @param  {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @const @private {!Promise} */\n    this.whenInitialized_ = this.installStyles_(ampdoc).then(() =>\n      this.installHandlers_(ampdoc)\n    );\n\n    // Dispatch a test-only event for integration tests.\n    if (getMode().test) {\n      this.whenInitialized_.then(() => {\n        const {win} = ampdoc;\n        const event = createCustomEvent(win, FormEvents.SERVICE_INIT, null, {\n          bubbles: true,\n        });\n        win.dispatchEvent(event);\n      });\n    }\n  }\n\n  /**\n   * Returns a promise that resolves when all form implementations (if any)\n   * have been upgraded.\n   * @return {!Promise}\n   */\n  whenInitialized() {\n    return this.whenInitialized_;\n  }\n\n  /**\n   * Install the amp-form CSS\n   * @param  {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @return {!Promise}\n   * @private\n   */\n  installStyles_(ampdoc) {\n    const deferred = new Deferred();\n    installStylesForDoc(ampdoc, CSS, deferred.resolve, false, TAG);\n    return deferred.promise;\n  }\n\n  /**\n   * Install the event handlers\n   * @param  {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @return {!Promise}\n   * @private\n   */\n  installHandlers_(ampdoc) {\n    return ampdoc.whenReady().then(() => {\n      const root = ampdoc.getRootNode();\n\n      this.installSubmissionHandlers_(root.querySelectorAll('form'));\n      AmpFormTextarea.install(ampdoc);\n      this.installGlobalEventListener_(root);\n    });\n  }\n\n  /**\n   * Install submission handler on all forms in the document.\n   * @param {?IArrayLike<T>} forms\n   * @template T\n   * @private\n   */\n  installSubmissionHandlers_(forms) {\n    if (!forms) {\n      return;\n    }\n\n    iterateCursor(forms, (form, index) => {\n      const existingAmpForm = formOrNullForElement(form);\n      if (!existingAmpForm) {\n        new AmpForm(form, `amp-form-${index}`);\n      }\n    });\n  }\n\n  /**\n   * Listen for DOM updated messages sent to the document.\n   * @param {!Document|!ShadowRoot} doc\n   * @private\n   */\n  installGlobalEventListener_(doc) {\n    doc.addEventListener(AmpEvents.DOM_UPDATE, () => {\n      this.installSubmissionHandlers_(doc.querySelectorAll('form'));\n    });\n  }\n}\n\nAMP.extension(TAG, '0.1', AMP => {\n  AMP.registerServiceForDoc('form-submit-service', FormSubmitService);\n  AMP.registerServiceForDoc(TAG, AmpFormService);\n});\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AmpEvents} from '../../../src/amp-events';\nimport {createCustomEvent} from '../../../src/event-helper';\nimport {createFormDataWrapper} from '../../../src/form-data-wrapper';\nimport {dev} from '../../../src/log';\nimport {dict, map} from '../../../src/utils/object';\nimport {isDisabled, isFieldDefault, isFieldEmpty} from '../../../src/form';\n\nexport const DIRTINESS_INDICATOR_CLASS = 'amp-form-dirty';\n\n/** @private {!Object<string, boolean>} */\nconst SUPPORTED_TAG_NAMES = {\n  'INPUT': true,\n  'SELECT': true,\n  'TEXTAREA': true,\n};\n\nexport class FormDirtiness {\n  /**\n   * @param {!HTMLFormElement} form\n   * @param {!Window} win\n   */\n  constructor(form, win) {\n    /** @private @const {!HTMLFormElement} */\n    this.form_ = form;\n\n    /** @private @const {!Window} */\n    this.win_ = win;\n\n    /** @private {number} */\n    this.dirtyFieldCount_ = 0;\n\n    /** @private {!Object<string, boolean>} */\n    this.isFieldNameDirty_ = map();\n\n    /** @private {?FormData} */\n    this.submittedFormData_ = null;\n\n    /** @private {boolean} */\n    this.isSubmitting_ = false;\n\n    /** @private {boolean} */\n    this.wasDirty_ = false;\n\n    this.installEventHandlers_();\n\n    // New forms are usually clean. However, if `amp-bind` mutates a form field\n    // before the `amp-form` is initialized, the `amp-form` will miss the\n    // `FORM_VALUE_CHANGE` event dispatched.\n    this.determineInitialDirtiness_();\n  }\n\n  /**\n   * Processes dirtiness state when a form is being submitted. This puts the\n   * form in a \"submitting\" state, and temporarily clears the dirtiness state.\n   */\n  onSubmitting() {\n    this.isSubmitting_ = true;\n    this.updateClassAndDispatchEventIfDirtyStateChanged_();\n  }\n\n  /**\n   * Processes dirtiness state when the form submission fails. This clears the\n   * \"submitting\" state and reverts the form's dirtiness state.\n   */\n  onSubmitError() {\n    this.isSubmitting_ = false;\n    this.updateClassAndDispatchEventIfDirtyStateChanged_();\n  }\n\n  /**\n   * Processes dirtiness state when the form submission succeeds. This clears\n   * the \"submitting\" state and the form's overall dirtiness.\n   */\n  onSubmitSuccess() {\n    this.isSubmitting_ = false;\n    this.submittedFormData_ = this.takeFormDataSnapshot_();\n    this.clearDirtyFields_();\n    this.updateClassAndDispatchEventIfDirtyStateChanged_();\n  }\n\n  /**\n   * @return {!FormData}\n   * @private\n   */\n  takeFormDataSnapshot_() {\n    return createFormDataWrapper(this.win_, this.form_).getFormData();\n  }\n\n  /**\n   * Adds or removes the `amp-form-dirty` class and dispatches a\n   * `FORM_DIRTINESS_CHANGE` event that reflects the current dirtiness state,\n   * when the form dirtiness state changes. Does nothing otherwise.\n   * @private\n   */\n  updateClassAndDispatchEventIfDirtyStateChanged_() {\n    const isDirty = this.dirtyFieldCount_ > 0 && !this.isSubmitting_;\n\n    if (isDirty !== this.wasDirty_) {\n      this.form_.classList.toggle(DIRTINESS_INDICATOR_CLASS, isDirty);\n\n      const formDirtinessChangeEvent = createCustomEvent(\n        this.win_,\n        AmpEvents.FORM_DIRTINESS_CHANGE,\n        dict({'isDirty': isDirty}),\n        {bubbles: true}\n      );\n      this.form_.dispatchEvent(formDirtinessChangeEvent);\n    }\n\n    this.wasDirty_ = isDirty;\n  }\n\n  /**\n   * @private\n   */\n  installEventHandlers_() {\n    this.form_.addEventListener('input', this.onInput_.bind(this));\n    this.form_.addEventListener('reset', this.onReset_.bind(this));\n\n    // `amp-bind` dispatches the custom event `FORM_VALUE_CHANGE` when it\n    // mutates the value of a form field (e.g. textarea, input, etc)\n    this.form_.addEventListener(\n      AmpEvents.FORM_VALUE_CHANGE,\n      this.onInput_.bind(this)\n    );\n  }\n\n  /** @private */\n  determineInitialDirtiness_() {\n    for (let i = 0; i < this.form_.elements.length; ++i) {\n      this.checkDirtinessAfterUserInteraction_(this.form_.elements[i]);\n    }\n    this.updateClassAndDispatchEventIfDirtyStateChanged_();\n  }\n\n  /**\n   * Listens to form field value changes, determines the field's dirtiness, and\n   * updates the form's overall dirtiness.\n   * @param {!Event} event\n   * @private\n   */\n  onInput_(event) {\n    const field = dev().assertElement(event.target);\n    this.checkDirtinessAfterUserInteraction_(field);\n    this.updateClassAndDispatchEventIfDirtyStateChanged_();\n  }\n\n  /**\n   * Listens to the form reset event, and clears the overall dirtiness.\n   * @param {!Event} unusedEvent\n   * @private\n   */\n  onReset_(unusedEvent) {\n    this.clearDirtyFields_();\n    this.updateClassAndDispatchEventIfDirtyStateChanged_();\n  }\n\n  /**\n   * Determine the given field's dirtiness.\n   * @param {!Element} field\n   * @private\n   */\n  checkDirtinessAfterUserInteraction_(field) {\n    if (shouldSkipDirtinessCheck(field)) {\n      return;\n    }\n\n    if (\n      isFieldEmpty(field) ||\n      isFieldDefault(field) ||\n      this.isFieldSameAsLastSubmission_(field)\n    ) {\n      this.removeDirtyField_(field.name);\n    } else {\n      this.addDirtyField_(field.name);\n    }\n  }\n\n  /**\n   * Returns true if the form field's current value matches its most recent\n   * submitted value.\n   * @param {!Element} field\n   * @return {boolean}\n   * @private\n   */\n  isFieldSameAsLastSubmission_(field) {\n    if (!this.submittedFormData_) {\n      return false;\n    }\n    const {name, value} = field;\n    return this.submittedFormData_.get(name) === value;\n  }\n\n  /**\n   * Mark the field as dirty and increase the overall dirty field count, if the\n   * field is previously clean.\n   * @param {string} fieldName\n   * @private\n   */\n  addDirtyField_(fieldName) {\n    if (!this.isFieldNameDirty_[fieldName]) {\n      this.isFieldNameDirty_[fieldName] = true;\n      ++this.dirtyFieldCount_;\n    }\n  }\n\n  /**\n   * Mark the field as clean and decrease the overall dirty field count, if the\n   * field is previously dirty.\n   * @param {string} fieldName\n   * @private\n   */\n  removeDirtyField_(fieldName) {\n    if (this.isFieldNameDirty_[fieldName]) {\n      this.isFieldNameDirty_[fieldName] = false;\n      --this.dirtyFieldCount_;\n    }\n  }\n\n  /**\n   * Clears the dirty field name map and counter.\n   * @private\n   */\n  clearDirtyFields_() {\n    this.isFieldNameDirty_ = map();\n    this.dirtyFieldCount_ = 0;\n  }\n}\n\n/**\n * Returns true if the form should be subject to dirtiness check. Unsupported\n * elements, disabled elements, hidden elements, or elements without the `name`\n * attribute are skipped.\n * @param {!Element} field\n * @return {boolean}\n */\nfunction shouldSkipDirtinessCheck(field) {\n  const {tagName, name, hidden} = field;\n\n  if (!SUPPORTED_TAG_NAMES[tagName]) {\n    return true;\n  }\n\n  return !name || hidden || isDisabled(field);\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nexport const FormEvents = {\n  INVALID: 'invalid',\n  SERVICE_INIT: 'amp:form-service:initialize', // Dispatched by the window when AmpFormService initializes.\n  SUBMIT_ERROR: 'submit-error',\n  SUBMIT_SUCCESS: 'submit-success',\n  SUBMIT: 'submit',\n  VALID: 'valid',\n  VERIFY_ERROR: 'verify-error',\n  VERIFY: 'verify',\n};\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../../../src/services';\nimport {dev, devAssert} from '../../../src/log';\nimport {startsWith} from '../../../src/string';\nimport {toWin} from '../../../src/types';\n\n/**\n * Blacklisted properties. Used mainly fot testing.\n * @type {?Array<string>}\n */\nlet blacklistedProperties = null;\n\n/**\n * @param {?Array<string>} properties\n * @visibleForTesting\n */\nexport function setBlacklistedPropertiesForTesting(properties) {\n  blacklistedProperties = properties;\n}\n\n/**\n * Creates a proxy object `form.$p` that proxies all of the methods and\n * properties to the original DOM APIs. This is to work around the problematic\n * forms feature where inputs mask DOM APIs.\n *\n * E.g. a `<input id=\"id\">` will override `form.id` from the original DOM API.\n * Form proxy will give access to the original `id` value via `form.$p.id`.\n *\n * See https://medium.com/@dvoytenko/solving-conflicts-between-form-inputs-and-dom-api-535c45333ae4\n *\n * @param {!HTMLFormElement} form\n * @return {!Object}\n */\nexport function installFormProxy(form) {\n  const constr = getFormProxyConstr(toWin(form.ownerDocument.defaultView));\n  const proxy = new constr(form);\n  if (!('action' in proxy)) {\n    setupLegacyProxy(form, proxy);\n  }\n  form['$p'] = proxy;\n  return proxy;\n}\n\n/**\n * @param {!Window} win\n * @return {function(new:Object, !HTMLFormElement)}\n */\nfunction getFormProxyConstr(win) {\n  if (!win.FormProxy) {\n    win.FormProxy = createFormProxyConstr(win);\n  }\n  return win.FormProxy;\n}\n\n/**\n * @param {!Window} win\n * @return {function(new:Object, !HTMLFormElement)}\n */\nfunction createFormProxyConstr(win) {\n  /**\n   * @param {!HTMLFormElement} form\n   * @constructor\n   */\n  function FormProxy(form) {\n    /** @private @const {!HTMLFormElement} */\n    this.form_ = form;\n  }\n\n  const FormProxyProto = FormProxy.prototype;\n  const {Object} = win;\n  const ObjectProto = Object.prototype;\n\n  // Hierarchy:\n  //   Node  <==  Element <== HTMLElement <== HTMLFormElement\n  //   EventTarget  <==  HTMLFormElement\n  const baseClasses = [win.HTMLFormElement, win.EventTarget];\n  const inheritance = baseClasses.reduce((all, klass) => {\n    let proto = klass && klass.prototype;\n    while (proto && proto !== ObjectProto) {\n      if (all.indexOf(proto) >= 0) {\n        break;\n      }\n      all.push(proto);\n      proto = Object.getPrototypeOf(proto);\n    }\n\n    return all;\n  }, []);\n\n  inheritance.forEach(proto => {\n    for (const name in proto) {\n      const property = win.Object.getOwnPropertyDescriptor(proto, name);\n      if (\n        !property ||\n        // Exclude constants.\n        name.toUpperCase() == name ||\n        // Exclude on-events.\n        startsWith(name, 'on') ||\n        // Exclude properties that already been created.\n        ObjectProto.hasOwnProperty.call(FormProxyProto, name) ||\n        // Exclude some properties. Currently only used for testing.\n        (blacklistedProperties && blacklistedProperties.includes(name))\n      ) {\n        continue;\n      }\n      if (typeof property.value == 'function') {\n        // A method call. Call the original prototype method via `call`.\n        const method = property.value;\n        FormProxyProto[name] = function() {\n          return method.apply(\n            /** @type {!FormProxy} */ (this).form_,\n            arguments\n          );\n        };\n      } else {\n        // A read/write property. Call the original prototype getter/setter.\n        const spec = {};\n        if (property.get) {\n          spec.get = function() {\n            return property.get.call(/** @type {!FormProxy} */ (this).form_);\n          };\n        }\n        if (property.set) {\n          spec.set = function(v) {\n            return property.set.call(/** @type {!FormProxy} */ (this).form_, v);\n          };\n        }\n        win.Object.defineProperty(FormProxyProto, name, spec);\n      }\n    }\n  });\n\n  return FormProxy;\n}\n\n/**\n * This is a very heavy-handed way to support browsers that do not have\n * properties defined in the prototype chain. Specifically, this is necessary\n * for Chrome 45 and under.\n *\n * See https://developers.google.com/web/updates/2015/04/DOM-attributes-now-on-the-prototype-chain\n * for more info.\n *\n * @param {!HTMLFormElement} form\n * @param {!Object} proxy\n */\nfunction setupLegacyProxy(form, proxy) {\n  const win = form.ownerDocument.defaultView;\n  const proto = win.HTMLFormElement.prototype.cloneNode.call(\n    form,\n    /* deep */ false\n  );\n  for (const name in proto) {\n    if (\n      name in proxy ||\n      // Exclude constants.\n      name.toUpperCase() == name ||\n      // Exclude on-events.\n      startsWith(name, 'on')\n    ) {\n      continue;\n    }\n    const desc = LEGACY_PROPS[name];\n    const current = form[name];\n    if (desc) {\n      if (desc.access == LegacyPropAccessType.READ_ONCE) {\n        // A property such as `style`. The only way is to read this value\n        // once and use it for all subsequent calls.\n        let actual;\n        if (current && current.nodeType) {\n          // The overriding input, if present, has to be removed and re-added\n          // (renaming does NOT work). Completely insane, I know.\n          const element = dev().assertElement(current);\n          const {nextSibling, parentNode: parent} = element;\n          parent.removeChild(element);\n          try {\n            actual = form[name];\n          } finally {\n            parent.insertBefore(element, nextSibling);\n          }\n        } else {\n          actual = current;\n        }\n        Object.defineProperty(proxy, name, {\n          get() {\n            return actual;\n          },\n        });\n      } else if (desc.access == LegacyPropAccessType.ATTR) {\n        // An attribute-based property. We can use DOM API to read and write\n        // with a minimal type conversion.\n        const attr = desc.attr || name;\n        Object.defineProperty(proxy, name, {\n          get() {\n            const value = proxy.getAttribute(attr);\n            if (value == null && desc.def !== undefined) {\n              return desc.def;\n            }\n            if (desc.type == LegacyPropDataType.BOOL) {\n              return value === 'true';\n            }\n            if (desc.type == LegacyPropDataType.TOGGLE) {\n              return value != null;\n            }\n            if (desc.type == LegacyPropDataType.URL) {\n              // URLs, e.g. in `action` attribute are resolved against the\n              // document's base.\n              const str = /** @type {string} */ (value || '');\n              return Services.urlForDoc(form).parse(str).href;\n            }\n            return value;\n          },\n          set(value) {\n            if (desc.type == LegacyPropDataType.TOGGLE) {\n              if (value) {\n                value = '';\n              } else {\n                value = null;\n              }\n            }\n            if (value != null) {\n              proxy.setAttribute(attr, value);\n            } else {\n              proxy.removeAttribute(attr);\n            }\n          },\n        });\n      } else {\n        devAssert(false, 'unknown property access type: %s', desc.access);\n      }\n    } else {\n      // Not a known property - proxy directly.\n      Object.defineProperty(proxy, name, {\n        get() {\n          return form[name];\n        },\n        set(value) {\n          form[name] = value;\n        },\n      });\n    }\n  }\n}\n\n/**\n * @enum {number}\n */\nconst LegacyPropAccessType = {\n  ATTR: 1,\n  READ_ONCE: 2,\n};\n\n/**\n * @enum {number}\n */\nconst LegacyPropDataType = {\n  URL: 1,\n  BOOL: 2,\n  TOGGLE: 3,\n};\n\n/**\n * @const {!Object<string, {\n *   access: !LegacyPropAccessType,\n *   attr: (string|undefined),\n *   type: (LegacyPropDataType|undefined),\n *   def: *,\n * }>}\n */\nconst LEGACY_PROPS = {\n  'acceptCharset': {\n    access: LegacyPropAccessType.ATTR,\n    attr: 'accept-charset',\n  },\n  'accessKey': {\n    access: LegacyPropAccessType.ATTR,\n    attr: 'accesskey',\n  },\n  'action': {\n    access: LegacyPropAccessType.ATTR,\n    type: LegacyPropDataType.URL,\n  },\n  'attributes': {\n    access: LegacyPropAccessType.READ_ONCE,\n  },\n  'autocomplete': {\n    access: LegacyPropAccessType.ATTR,\n    def: 'on',\n  },\n  'children': {\n    access: LegacyPropAccessType.READ_ONCE,\n  },\n  'dataset': {\n    access: LegacyPropAccessType.READ_ONCE,\n  },\n  'dir': {\n    access: LegacyPropAccessType.ATTR,\n  },\n  'draggable': {\n    access: LegacyPropAccessType.ATTR,\n    type: LegacyPropDataType.BOOL,\n    def: false,\n  },\n  'elements': {\n    access: LegacyPropAccessType.READ_ONCE,\n  },\n  'encoding': {\n    access: LegacyPropAccessType.READ_ONCE,\n  },\n  'enctype': {\n    access: LegacyPropAccessType.ATTR,\n  },\n  'hidden': {\n    access: LegacyPropAccessType.ATTR,\n    type: LegacyPropDataType.TOGGLE,\n    def: false,\n  },\n  'id': {\n    access: LegacyPropAccessType.ATTR,\n    def: '',\n  },\n  'lang': {\n    access: LegacyPropAccessType.ATTR,\n  },\n  'localName': {\n    access: LegacyPropAccessType.READ_ONCE,\n  },\n  'method': {\n    access: LegacyPropAccessType.ATTR,\n    def: 'get',\n  },\n  'name': {\n    access: LegacyPropAccessType.ATTR,\n  },\n  'noValidate': {\n    access: LegacyPropAccessType.ATTR,\n    attr: 'novalidate',\n    type: LegacyPropDataType.TOGGLE,\n    def: false,\n  },\n  'prefix': {\n    access: LegacyPropAccessType.READ_ONCE,\n  },\n  'spellcheck': {\n    access: LegacyPropAccessType.ATTR,\n  },\n  'style': {\n    access: LegacyPropAccessType.READ_ONCE,\n  },\n  'target': {\n    access: LegacyPropAccessType.ATTR,\n    def: '',\n  },\n  'title': {\n    access: LegacyPropAccessType.ATTR,\n  },\n  'translate': {\n    access: LegacyPropAccessType.ATTR,\n  },\n};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Observable} from '../../../src/observable';\n\n/**\n * @typedef {{\n *   form: !HTMLFormElement,\n *   actionXhrMutator: function(string)\n * }}\n */\nexport let FormSubmitEventDef;\n\nexport class FormSubmitService {\n  /**\n   * Global service used to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   */\n  constructor() {\n    this.observable_ = new Observable();\n  }\n\n  /**\n   * Used to register callbacks.\n   * @param {function(!FormSubmitEventDef)} cb\n   * @return {!UnlistenDef}\n   */\n  beforeSubmit(cb) {\n    return this.observable_.add(cb);\n  }\n\n  /**\n   * Fired when form is submitted.\n   * @param {!FormSubmitEventDef} event\n   */\n  fire(event) {\n    this.observable_.fire(event);\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {FormEvents} from './form-events';\nimport {Services} from '../../../src/services';\nimport {ValidationBubble} from './validation-bubble';\nimport {createCustomEvent} from '../../../src/event-helper';\nimport {dev} from '../../../src/log';\nimport {iterateCursor} from '../../../src/dom';\nimport {toWin} from '../../../src/types';\n\n/** @const @private {string} */\nconst VALIDATION_CACHE_PREFIX = '__AMP_VALIDATION_';\n\n/** @const @private {string} */\nconst VISIBLE_VALIDATION_CACHE = '__AMP_VISIBLE_VALIDATION';\n\n/** @const @private {string} */\nconst ARIA_DESC_ID_PREFIX = 'i-amphtml-aria-desc-';\n\n/**\n * Validation user message for non-standard pattern mismatch errors.\n * Note this isn't localized but custom validation can be used instead.\n * @const @private {string}\n */\nconst CUSTOM_PATTERN_ERROR = 'Please match the requested format.';\n\n/** @type {boolean|undefined} */\nlet reportValiditySupported;\n\n/** @type {boolean|undefined} */\nlet checkValiditySupported;\n\n/** @type {number} */\nlet validationBubbleCount = 0;\n\n/**\n * @param {boolean} isSupported\n * @private visible for testing.\n */\nexport function setReportValiditySupportedForTesting(isSupported) {\n  reportValiditySupported = isSupported;\n}\n\n/**\n * @param {boolean} isSupported\n * @private visible for testing.\n */\nexport function setCheckValiditySupportedForTesting(isSupported) {\n  checkValiditySupported = isSupported;\n}\n\n/** @const @enum {string} */\nconst CustomValidationTypes = {\n  AsYouGo: 'as-you-go',\n  ShowAllOnSubmit: 'show-all-on-submit',\n  InteractAndSubmit: 'interact-and-submit',\n  ShowFirstOnSubmit: 'show-first-on-submit',\n};\n\n/**\n * Form validator interface.\n * @abstract\n */\nexport class FormValidator {\n  /**\n   * @param {!HTMLFormElement} form\n   */\n  constructor(form) {\n    /** @protected @const {!HTMLFormElement} */\n    this.form = form;\n\n    /** @protected @const {!../../../src/service/ampdoc-impl.AmpDoc} */\n    this.ampdoc = Services.ampdoc(form);\n\n    /** @const @protected {!../../../src/service/resources-interface.ResourcesInterface} */\n    this.resources = Services.resourcesForDoc(form);\n\n    /** @protected @const {!Document|!ShadowRoot} */\n    this.root = this.ampdoc.getRootNode();\n\n    /**\n     * Tribool indicating last known validity of form.\n     * @private {boolean|null}\n     */\n    this.formValidity_ = null;\n  }\n\n  /**\n   * Called to report validation errors.\n   */\n  report() {}\n\n  /**\n   * @param {!Event} unusedEvent\n   */\n  onBlur(unusedEvent) {}\n\n  /**\n   * @param {!Event} unusedEvent\n   */\n  onInput(unusedEvent) {}\n\n  /** @return {!NodeList} */\n  inputs() {\n    return this.form.querySelectorAll('input,select,textarea');\n  }\n\n  /**\n   * Wraps `checkValidity` on input elements to support `pattern` attribute on\n   * <textarea> which is not supported in HTML5.\n   * @param {!Element} input\n   * @return {boolean}\n   * @protected\n   */\n  checkInputValidity(input) {\n    if (input.tagName === 'TEXTAREA' && input.hasAttribute('pattern')) {\n      // FormVerifier also uses setCustomValidity() to signal verification\n      // errors. Make sure we only override pattern errors here.\n      if (\n        input.checkValidity() ||\n        input.validationMessage === CUSTOM_PATTERN_ERROR\n      ) {\n        const pattern = input.getAttribute('pattern');\n        const re = new RegExp(`^${pattern}$`, 'm');\n        const valid = re.test(input.value);\n        input.setCustomValidity(valid ? '' : CUSTOM_PATTERN_ERROR);\n      }\n    }\n    return input.checkValidity();\n  }\n\n  /**\n   * Wraps `checkValidity` on form elements to support `pattern` attribute on\n   * <textarea> which is not supported in HTML5.\n   * @param {!HTMLFormElement} form\n   * @return {boolean}\n   * @protected\n   */\n  checkFormValidity(form) {\n    this.checkTextAreaValidityInForm_(form);\n    return form.checkValidity();\n  }\n\n  /**\n   * Wraps `reportValidity` on form elements to support `pattern` attribute on\n   * <textarea> which is not supported in HTML5.\n   * @param {!HTMLFormElement} form\n   * @return {boolean}\n   * @protected\n   */\n  reportFormValidity(form) {\n    this.checkTextAreaValidityInForm_(form);\n    return form.reportValidity();\n  }\n\n  /**\n   * @param {!HTMLFormElement} form\n   * @private\n   */\n  checkTextAreaValidityInForm_(form) {\n    iterateCursor(form.elements, element => {\n      if (element.tagName == 'TEXTAREA') {\n        this.checkInputValidity(element);\n      }\n    });\n  }\n\n  /**\n   * Fires a valid/invalid event from the form if its validity state\n   * has changed since the last invocation of this function.\n   * @visibleForTesting\n   */\n  fireValidityEventIfNecessary() {\n    const previousValidity = this.formValidity_;\n    this.formValidity_ = this.checkFormValidity(this.form);\n    if (previousValidity !== this.formValidity_) {\n      const win = toWin(this.form.ownerDocument.defaultView);\n      const type = this.formValidity_ ? FormEvents.VALID : FormEvents.INVALID;\n      const event = createCustomEvent(win, type, null, {bubbles: true});\n      this.form.dispatchEvent(event);\n    }\n  }\n}\n\n/** @private visible for testing */\nexport class DefaultValidator extends FormValidator {\n  /** @override */\n  report() {\n    this.reportFormValidity(this.form);\n    this.fireValidityEventIfNecessary();\n  }\n}\n\n/** @private visible for testing */\nexport class PolyfillDefaultValidator extends FormValidator {\n  /**\n   * Creates an instance of PolyfillDefaultValidator.\n   * @param {!HTMLFormElement} form\n   */\n  constructor(form) {\n    super(form);\n    const bubbleId = `i-amphtml-validation-bubble-${validationBubbleCount++}`;\n    /** @private @const {!./validation-bubble.ValidationBubble} */\n    this.validationBubble_ = new ValidationBubble(this.ampdoc, bubbleId);\n  }\n\n  /** @override */\n  report() {\n    const inputs = this.inputs();\n    for (let i = 0; i < inputs.length; i++) {\n      if (!this.checkInputValidity(inputs[i])) {\n        inputs[i]./*REVIEW*/ focus();\n        this.validationBubble_.show(inputs[i], inputs[i].validationMessage);\n        break;\n      }\n    }\n\n    this.fireValidityEventIfNecessary();\n  }\n\n  /** @override */\n  onBlur(e) {\n    // NOTE: IE11 focuses the submit button after submitting a form.\n    // Then amp-form focuses the first field with an error, which causes the\n    // submit button to blur. So we need to disregard the submit button blur.\n    if (e.target.type == 'submit') {\n      return;\n    }\n    this.validationBubble_.hide();\n  }\n\n  /** @override */\n  onInput(event) {\n    const input = dev().assertElement(event.target);\n    if (!this.validationBubble_.isActiveOn(input)) {\n      return;\n    }\n\n    if (this.checkInputValidity(input)) {\n      input.removeAttribute('aria-invalid');\n      this.validationBubble_.hide();\n    } else {\n      input.setAttribute('aria-invalid', 'true');\n      this.validationBubble_.show(input, input.validationMessage);\n    }\n  }\n}\n\n/**\n * @abstract\n * @private visible for testing\n */\nexport class AbstractCustomValidator extends FormValidator {\n  /**\n   * Creates an instance of AbstractCustomValidator.\n   * @param {!HTMLFormElement} form\n   */\n  constructor(form) {\n    super(form);\n\n    /** @private {string} */\n    this.uniqueFormId_ = this.form.id\n      ? this.form.id\n      : String(Date.now() + Math.floor(Math.random() * 100));\n\n    /**\n     * Counter used to create a unique id for every validation message\n     * to be used with `aria-describedby`.\n     * @private {number}\n     */\n    this.ariaDescCounter_ = 0;\n  }\n\n  /**\n   * @param {!Element} input\n   */\n  reportInput(input) {\n    const invalidType = getInvalidType(input);\n    if (invalidType) {\n      this.showValidationFor(input, invalidType);\n    }\n  }\n\n  /**\n   * @return {string} A unique ID.\n   * @private\n   */\n  createUniqueAriaDescId_() {\n    return `${ARIA_DESC_ID_PREFIX}${this.uniqueFormId_}-${this\n      .ariaDescCounter_++}`;\n  }\n\n  /**\n   * Hides all validation messages.\n   */\n  hideAllValidations() {\n    const inputs = this.inputs();\n    for (let i = 0; i < inputs.length; i++) {\n      this.hideValidationFor(dev().assertElement(inputs[i]));\n    }\n  }\n\n  /**\n   * @param {!Element} input\n   * @param {string=} inputInvalidType\n   * @return {?Element}\n   */\n  getValidationFor(input, inputInvalidType = undefined) {\n    if (!input.id) {\n      return null;\n    }\n    const invalidType = this.getInvalidType_(input, inputInvalidType);\n    const property = VALIDATION_CACHE_PREFIX + invalidType;\n    if (!(property in input)) {\n      const selector =\n        `[visible-when-invalid=${invalidType}]` +\n        `[validation-for=${input.id}]`;\n      input[property] = this.root.querySelector(selector);\n    }\n    return input[property];\n  }\n\n  /**\n   * Wraps the validity type for inputs to support pattern on <textarea>\n   * @param {!Element} input\n   * @param {string=} inputInvalidType\n   * @return {*} TODO(#23582): Specify return type\n   */\n  getInvalidType_(input, inputInvalidType = undefined) {\n    const {tagName, validationMessage} = input;\n\n    // <textarea> only supports `pattern` and `valueMissing`.\n    // `pattern` is implemented via setCustomValidity(),\n    // which results in the 'customError' validity state.\n    if (\n      tagName === 'TEXTAREA' &&\n      inputInvalidType === 'customError' &&\n      validationMessage === CUSTOM_PATTERN_ERROR\n    ) {\n      return 'patternMismatch';\n    }\n\n    return inputInvalidType;\n  }\n\n  /**\n   * @param {!Element} input\n   * @param {string} invalidType\n   */\n  showValidationFor(input, invalidType) {\n    const validation = this.getValidationFor(input, invalidType);\n    if (!validation) {\n      return;\n    }\n    if (!validation.textContent.trim()) {\n      validation.textContent = input.validationMessage;\n    }\n    input[VISIBLE_VALIDATION_CACHE] = validation;\n\n    let validationId = validation.getAttribute('id');\n    if (!validationId) {\n      validationId = this.createUniqueAriaDescId_();\n      validation.setAttribute('id', validationId);\n    }\n\n    input.setAttribute('aria-invalid', 'true');\n    input.setAttribute('aria-describedby', validationId);\n\n    this.resources.mutateElement(validation, () =>\n      validation.classList.add('visible')\n    );\n  }\n\n  /**\n   * @param {!Element} input\n   */\n  hideValidationFor(input) {\n    const visibleValidation = this.getVisibleValidationFor(input);\n    if (!visibleValidation) {\n      return;\n    }\n    delete input[VISIBLE_VALIDATION_CACHE];\n\n    input.removeAttribute('aria-invalid');\n    input.removeAttribute('aria-describedby');\n\n    this.resources.mutateElement(visibleValidation, () =>\n      visibleValidation.classList.remove('visible')\n    );\n  }\n\n  /**\n   * @param {!Element} input\n   * @return {?Element}\n   */\n  getVisibleValidationFor(input) {\n    return input[VISIBLE_VALIDATION_CACHE];\n  }\n\n  /**\n   * Whether an input should validate after an interaction.\n   * @param {!Element} unusedInput\n   * @return {boolean}\n   */\n  shouldValidateOnInteraction(unusedInput) {\n    throw Error('Not Implemented');\n  }\n\n  /**\n   * @param {!Event} event\n   */\n  onInteraction(event) {\n    const input = dev().assertElement(event.target);\n    const shouldValidate =\n      !!input.checkValidity && this.shouldValidateOnInteraction(input);\n\n    this.hideValidationFor(input);\n    if (shouldValidate && !this.checkInputValidity(input)) {\n      this.reportInput(input);\n    }\n  }\n\n  /** @override */\n  onBlur(event) {\n    this.onInteraction(event);\n  }\n\n  /** @override */\n  onInput(event) {\n    this.onInteraction(event);\n  }\n}\n\n/** @private visible for testing */\nexport class ShowFirstOnSubmitValidator extends AbstractCustomValidator {\n  /** @override */\n  report() {\n    this.hideAllValidations();\n    const inputs = this.inputs();\n    for (let i = 0; i < inputs.length; i++) {\n      if (!this.checkInputValidity(inputs[i])) {\n        this.reportInput(inputs[i]);\n        inputs[i]./*REVIEW*/ focus();\n        break;\n      }\n    }\n\n    this.fireValidityEventIfNecessary();\n  }\n\n  /** @override */\n  shouldValidateOnInteraction(input) {\n    return !!this.getVisibleValidationFor(input);\n  }\n}\n\n/** @private visible for testing */\nexport class ShowAllOnSubmitValidator extends AbstractCustomValidator {\n  /** @override */\n  report() {\n    this.hideAllValidations();\n    let firstInvalidInput = null;\n    const inputs = this.inputs();\n    for (let i = 0; i < inputs.length; i++) {\n      if (!this.checkInputValidity(inputs[i])) {\n        firstInvalidInput = firstInvalidInput || inputs[i];\n        this.reportInput(inputs[i]);\n      }\n    }\n\n    if (firstInvalidInput) {\n      firstInvalidInput./*REVIEW*/ focus();\n    }\n\n    this.fireValidityEventIfNecessary();\n  }\n\n  /** @override */\n  shouldValidateOnInteraction(input) {\n    return !!this.getVisibleValidationFor(input);\n  }\n}\n\n/** @private visible for testing */\nexport class AsYouGoValidator extends AbstractCustomValidator {\n  /** @override */\n  shouldValidateOnInteraction(unusedInput) {\n    return true;\n  }\n\n  /** @override */\n  onInteraction(event) {\n    super.onInteraction(event);\n    this.fireValidityEventIfNecessary();\n  }\n}\n\n/** @private visible for testing */\nexport class InteractAndSubmitValidator extends ShowAllOnSubmitValidator {\n  /** @override */\n  shouldValidateOnInteraction(unusedInput) {\n    return true;\n  }\n\n  /** @override */\n  onInteraction(event) {\n    super.onInteraction(event);\n    this.fireValidityEventIfNecessary();\n  }\n}\n\n/**\n * Returns the form validator instance.\n *\n * @param {!HTMLFormElement} form\n * @return {!FormValidator}\n */\nexport function getFormValidator(form) {\n  const customValidation = form.getAttribute('custom-validation-reporting');\n  switch (customValidation) {\n    case CustomValidationTypes.AsYouGo:\n      return new AsYouGoValidator(form);\n    case CustomValidationTypes.ShowAllOnSubmit:\n      return new ShowAllOnSubmitValidator(form);\n    case CustomValidationTypes.InteractAndSubmit:\n      return new InteractAndSubmitValidator(form);\n    case CustomValidationTypes.ShowFirstOnSubmit:\n      return new ShowFirstOnSubmitValidator(form);\n  }\n\n  if (isReportValiditySupported(form.ownerDocument)) {\n    return new DefaultValidator(form);\n  }\n\n  return new PolyfillDefaultValidator(form);\n}\n\n/**\n * Returns whether reportValidity API is supported.\n * @param {?Document} doc\n * @return {boolean}\n */\nfunction isReportValiditySupported(doc) {\n  if (doc && reportValiditySupported === undefined) {\n    reportValiditySupported = !!document.createElement('form').reportValidity;\n  }\n  return !!reportValiditySupported;\n}\n\n/**\n * Returns whether reportValidity API is supported.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isCheckValiditySupported(doc) {\n  if (checkValiditySupported === undefined) {\n    checkValiditySupported = !!doc.createElement('input').checkValidity;\n  }\n  return checkValiditySupported;\n}\n\n/**\n * Returns invalid error type on the input.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/ValidityState\n * @param {!Element} input\n * @return {?string}\n */\nfunction getInvalidType(input) {\n  // 'badInput' takes precedence over others.\n  const validityTypes = ['badInput'];\n  for (const invalidType in input.validity) {\n    // add other types after\n    if (!validityTypes.includes(invalidType)) {\n      validityTypes.push(invalidType);\n    }\n  }\n  // Finding error type with value true\n  const response = validityTypes.filter(type => input.validity[type] === true);\n  return response.length ? response[0] : null;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LastAddedResolver} from '../../../src/utils/promise';\nimport {isFieldDefault} from '../../../src/form';\nimport {iterateCursor} from '../../../src/dom';\nimport {user} from '../../../src/log';\n\nexport const FORM_VERIFY_PARAM = '__amp_form_verify';\n\nexport const FORM_VERIFY_OPTOUT = 'no-verify';\n\n/**\n * @typedef {{\n *    name:string,\n *    message:string\n *  }}\n */\nlet VerificationErrorDef;\n\n/**\n * @typedef {{\n *   updatedElements:!Array<!Element>,\n *   errors:!Array<!VerificationErrorDef>\n * }}\n */\nlet UpdatedErrorsDef;\n\n/**\n * Construct the correct form verifier based on whether\n * a config block is present.\n * @param {!HTMLFormElement} form\n * @param {function():Promise<!Response>} xhr\n * @return {!FormVerifier}\n */\nexport function getFormVerifier(form, xhr) {\n  if (form.hasAttribute('verify-xhr')) {\n    return new AsyncVerifier(form, xhr);\n  } else {\n    return new DefaultVerifier(form);\n  }\n}\n\n/**\n * An interface for a form verifier. Implementations could check for duplicate\n * usernames on a remote server, check against an in-memory cache to verify\n * data in ways not possible with standard form validation, or check\n * values against sets of data too large to fit in browser memory\n * e.g. ensuring zip codes match with cities.\n * @visibleForTesting\n * @abstract\n */\nexport class FormVerifier {\n  /**\n   * @param {!HTMLFormElement} form\n   */\n  constructor(form) {\n    /** @protected @const */\n    this.form_ = form;\n  }\n\n  /**\n   * Called when the user has fully set a value to be verified,\n   * e.g. the input's 'change' event\n   * @return {!Promise<!UpdatedErrorsDef>}\n   */\n  onCommit() {\n    this.clearVerificationErrors_();\n    if (this.isDirty_()) {\n      return this.verify_();\n    } else {\n      return Promise.resolve(\n        /** @type {UpdatedErrorsDef} */ ({\n          updatedElements: [],\n          errors: [],\n        })\n      );\n    }\n  }\n\n  /**\n   * Sends the verify request if any group is ready to verify.\n   * @return {!Promise<!UpdatedErrorsDef>} The list of elements whose state\n   *    must change\n   * @protected\n   */\n  verify_() {\n    return Promise.resolve(\n      /** @type {UpdatedErrorsDef} */ ({\n        updatedElements: [],\n        errors: [],\n      })\n    );\n  }\n\n  /**\n   * Checks if the form has been changed from its initial state.\n   * @return {boolean}\n   * @private\n   */\n  isDirty_() {\n    const {elements} = this.form_;\n    for (let i = 0; i < elements.length; i++) {\n      const field = elements[i];\n      if (field.disabled) {\n        continue;\n      }\n\n      if (!isFieldDefault(field)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Removes all custom verification errors from the elements.\n   * @private\n   */\n  clearVerificationErrors_() {\n    const {elements} = this.form_;\n    if (elements) {\n      iterateCursor(elements, e => {\n        e.setCustomValidity('');\n      });\n    }\n  }\n}\n\n/**\n * A no-op verifier.\n * @visibleForTesting\n */\nexport class DefaultVerifier extends FormVerifier {}\n\n/**\n * A verifier that verifies values via an XHR\n * @visibleForTesting\n */\nexport class AsyncVerifier extends FormVerifier {\n  /**\n   * @param {!HTMLFormElement} form\n   * @param {function():Promise<!Response>} xhr\n   */\n  constructor(form, xhr) {\n    super(form);\n\n    /** @protected @const*/\n    this.doXhr_ = xhr;\n\n    /** @protected {?LastAddedResolver} */\n    this.xhrResolver_ = null;\n\n    /** @private {!Array<!VerificationErrorDef>} */\n    this.previousErrors_ = [];\n  }\n\n  /** @override */\n  verify_() {\n    const xhrConsumeErrors = this.doXhr_().then(\n      () => {\n        return [];\n      },\n      error => {\n        return getResponseErrorData_(/** @type {!Error} */ (error));\n      }\n    );\n\n    return this.addToResolver_(xhrConsumeErrors).then(errors =>\n      this.applyErrors_(errors)\n    );\n  }\n\n  /**\n   * Prevent race conditions from XHRs that arrive out of order by resolving\n   * only the most recently initiated XHR.\n   * TODO(cvializ): Replace this when the Fetch API adds cancelable fetches.\n   * @param {!Promise} promise\n   * @return {!Promise} The resolver result promise\n   */\n  addToResolver_(promise) {\n    if (!this.xhrResolver_) {\n      this.xhrResolver_ = new LastAddedResolver();\n      const cleanup = () => (this.xhrResolver_ = null);\n      this.xhrResolver_.then(cleanup, cleanup);\n    }\n    return this.xhrResolver_.add(promise);\n  }\n\n  /**\n   * Set errors on elements that failed verification, and clear any\n   * verification state for elements that passed verification.\n   * @param {!Array<!VerificationErrorDef>} errors\n   * @return {!UpdatedErrorsDef} Updated elements e.g. elements with new errors,\n   *    and elements that previously had errors but were fixed. The form will\n   *    update their user-valid/user-invalid state.\n   * @private\n   */\n  applyErrors_(errors) {\n    const errorElements = [];\n\n    const previousErrors = this.previousErrors_;\n    this.previousErrors_ = errors;\n\n    // Set the error message on each element that caused an error.\n    for (let i = 0; i < errors.length; i++) {\n      const error = errors[i];\n      const name = user().assertString(\n        error.name,\n        'Verification errors must have a name property'\n      );\n      const message = user().assertString(\n        error.message,\n        'Verification errors must have a message property'\n      );\n      // If multiple elements share the same name, the first should be selected.\n      // This matches the behavior of HTML5 validation, e.g. with radio buttons.\n      const element = user().assertElement(\n        this.form_./*OK*/ querySelector(`[name=\"${name}\"]`),\n        'Verification error name property must match a field name'\n      );\n\n      // Only put verification errors on elements that are client-side valid.\n      // This prevents errors from appearing on elements that have not been\n      // filled out yet.\n      if (element.checkValidity()) {\n        element.setCustomValidity(message);\n        errorElements.push(element);\n      }\n    }\n\n    // Create a list of form elements that had an error, but are now fixed.\n    const isFixed = previousError =>\n      errors.every(error => previousError.name !== error.name);\n    const fixedElements = previousErrors\n      .filter(isFixed)\n      .map(e => this.form_./*OK*/ querySelector(`[name=\"${e.name}\"]`));\n\n    return /** @type {!UpdatedErrorsDef} */ ({\n      updatedElements: errorElements.concat(fixedElements),\n      errors,\n    });\n  }\n}\n\n/**\n * @param {!Error} error\n * @return {!Promise<!Array<VerificationErrorDef>>}\n * @private\n */\nfunction getResponseErrorData_(error) {\n  const {response} = error;\n  if (!response) {\n    return Promise.resolve([]);\n  }\n\n  return response.json().then(json => json.verifyErrors || [], () => []);\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../../../src/services';\nimport {removeChildren} from '../../../src/dom';\nimport {setStyles, toggle} from '../../../src/style';\n\n/** @type {string} */\nconst OBJ_PROP = '__BUBBLE_OBJ';\n\nexport class ValidationBubble {\n  /**\n   * Creates a bubble component to display messages in.\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {string} id\n   */\n  constructor(ampdoc, id) {\n    /** @private @const {string} */\n    this.id_ = id;\n\n    /** @private @const {!../../../src/service/viewport/viewport-interface.ViewportInterface} */\n    this.viewport_ = Services.viewportForDoc(ampdoc);\n\n    /** @private @const {!../../../src/service/vsync-impl.Vsync} */\n    this.vsync_ = Services.vsyncFor(ampdoc.win);\n\n    /** @private {?Element} */\n    this.currentTargetElement_ = null;\n\n    /** @private {string} */\n    this.currentMessage_ = '';\n\n    /** @private {boolean} */\n    this.isVisible_ = false;\n\n    /** @private @const {!Element} */\n    this.bubbleElement_ = ampdoc.win.document.createElement('div');\n    toggle(this.bubbleElement_, false);\n\n    this.bubbleElement_.classList.add('i-amphtml-validation-bubble');\n    this.bubbleElement_[OBJ_PROP] = this;\n    ampdoc.getBody().appendChild(this.bubbleElement_);\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  isActiveOn(element) {\n    return this.isVisible_ && element == this.currentTargetElement_;\n  }\n\n  /**\n   * Hides the bubble off screen.\n   */\n  hide() {\n    if (!this.isVisible_) {\n      return;\n    }\n\n    this.isVisible_ = false;\n    this.currentTargetElement_ = null;\n    this.currentMessage_ = '';\n\n    this.vsync_.run(\n      {\n        measure: undefined,\n        mutate: hideBubble,\n      },\n      {\n        bubbleElement: this.bubbleElement_,\n      }\n    );\n  }\n\n  /**\n   * Shows the bubble targeted to an element with the passed message.\n   * @param {!Element} targetElement\n   * @param {string} message\n   */\n  show(targetElement, message) {\n    if (this.isActiveOn(targetElement) && message == this.currentMessage_) {\n      return;\n    }\n\n    this.isVisible_ = true;\n    this.currentTargetElement_ = targetElement;\n    this.currentMessage_ = message;\n    const state = {\n      message,\n      targetElement,\n      bubbleElement: this.bubbleElement_,\n      viewport: this.viewport_,\n      id: this.id_,\n    };\n    this.vsync_.run(\n      {\n        measure: measureTargetElement,\n        mutate: showBubbleElement,\n      },\n      state\n    );\n  }\n}\n\n/**\n * Hides the bubble element passed through state object.\n * @param {!Object} state\n * @private\n */\nfunction hideBubble(state) {\n  state.bubbleElement.removeAttribute('aria-alert');\n  state.bubbleElement.removeAttribute('role');\n  removeChildren(state.bubbleElement);\n  toggle(state.bubbleElement, false);\n}\n\n/**\n * Measures the layout for the target element passed through state object.\n * @param {!Object} state\n * @private\n */\nfunction measureTargetElement(state) {\n  state.targetRect = state.viewport.getLayoutRect(state.targetElement);\n}\n\n/**\n * Updates text content, positions and displays the bubble.\n * @param {!Object} state\n * @private\n */\nfunction showBubbleElement(state) {\n  removeChildren(state.bubbleElement);\n  const messageDiv = state.bubbleElement.ownerDocument.createElement('div');\n  messageDiv.id = `bubble-message-${state.id}`;\n  messageDiv.textContent = state.message;\n  state.bubbleElement.setAttribute('aria-labeledby', messageDiv.id);\n  state.bubbleElement.setAttribute('role', 'alert');\n  state.bubbleElement.setAttribute('aria-live', 'assertive');\n  state.bubbleElement.appendChild(messageDiv);\n  toggle(state.bubbleElement, true);\n  setStyles(state.bubbleElement, {\n    top: `${state.targetRect.top - 10}px`,\n    left: `${state.targetRect.left + state.targetRect.width / 2}px`,\n  });\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Key string in an action arguments map for an unparsed object literal string.\n *\n * E.g. for the action in <p on=\"tap:AMP.setState({foo: 'bar'})\",\n * then `args[RAW_OBJECT_ARGS_KEY]` is the string \"{foo: 'bar'}\".\n *\n * The action service delegates parsing of object literals to the corresponding\n * extension (in the example above, amp-bind).\n *\n * @see ./service/action-impl.ActionInfoDef\n * @const {string}\n */\nexport const RAW_OBJECT_ARGS_KEY = '__AMP_OBJECT_STRING__';\n\n/** @const {string} Identifier for an element's default action. */\nexport const DEFAULT_ACTION = 'activate';\n\n/**\n * Trust level of an action.\n *\n * Corresponds to degree of user intent, i.e. events triggered with strong\n * user intent have high trust.\n *\n * @enum {number}\n */\nexport const ActionTrust = {\n  LOW: 1,\n  HIGH: 100,\n};\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common AMP events.\n * @enum {string}\n */\nexport const AmpEvents = {\n  DOM_UPDATE: 'amp:dom-update',\n  FORM_DIRTINESS_CHANGE: 'amp:form-dirtiness-change',\n  FORM_VALUE_CHANGE: 'amp:form-value-change',\n  VISIBILITY_CHANGE: 'amp:visibilitychange', // https://github.com/ampproject/amphtml/blob/master/ads/README.md#page-visibility\n  // The following codes are only used for testing.\n  // TODO(choumx): Move these to a separate enum so they can be DCE'd.\n  ATTACHED: 'amp:attached',\n  STUBBED: 'amp:stubbed',\n  LOAD_START: 'amp:load:start',\n  LOAD_END: 'amp:load:end',\n  ERROR: 'amp:error',\n  SIZE_CHANGED: 'amp:size-changed',\n};\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\n\n/**\n * Helper method to trigger analytics event if amp-analytics is available.\n * TODO: Do not expose this function\n * @param {!Element} target\n * @param {string} eventType\n * @param {!JsonObject=} opt_vars A map of vars and their values.\n */\nexport function triggerAnalyticsEvent(target, eventType, opt_vars) {\n  Services.analyticsForDocOrNull(target).then(analytics => {\n    if (!analytics) {\n      return;\n    }\n    analytics.triggerEventForTarget(target, eventType, opt_vars);\n  });\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Interface for all AMP Async Input Elements.\n * enforces the overridable function, getValue().\n * Async Input should be implemented\n * by components like AMP form, to async request\n * a value from a component, and then be used for\n * some other action. For examples, this can be used\n * by reCAPTCHA to request tokens for the form.\n *\n * NOTE: Elements that implemented AsyncInput must\n * Also add and follow the other exported constants.\n * See amp-recaptcha-input as an example.\n *\n * @interface\n */\nexport class AsyncInput {\n  /**\n   * Called to get the asynchronous value of an\n   * AsyncInput field.\n   * @return {!Promise<string>}\n   */\n  getValue() {}\n}\n\n/**\n * Attributes\n *\n * Components implementing the AsyncInput,\n * are expected to assert these attributes\n * at the appropriate time.\n *\n * @enum {string}\n */\nexport const AsyncInputAttributes = {\n  /**\n   * data-name\n   *\n   * Required attribute that must be asserted by every async-input\n   * Element. This is used by AMP form to add the key\n   * for the form submission request\n   */\n  NAME: 'name',\n};\n\n/**\n * Classes\n *\n * Components implementing the AsyncInput,\n * are expected to add the following classes\n * at the appropriate time.\n *\n * @enum {string}\n */\nexport const AsyncInputClasses = {\n  /**\n   * i-amphtml-async-input\n   *\n   * Required base class that must be added to the async-input\n   * element on buildCallback or layoutCallback.\n   * This will be used by other amp components to find\n   * and use async-input elements.\n   */\n  'ASYNC_INPUT': 'i-amphtml-async-input',\n  /**\n   * i-async-require-action\n   *\n   * Class that is added when the async call should be treated\n   * as a required action for the form. These calls will be\n   * executed before the presubmit calls of all async inputs.\n   */\n  'ASYNC_REQUIRED_ACTION': 'i-async-require-action',\n};\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Commonly used signals across different elements and documents.\n * @enum {string}\n */\nexport const CommonSignals = {\n  /**\n   * The element has been upgraded from ElementStub to its real implementation.\n   */\n  UPGRADED: 'upgraded',\n\n  /**\n   * The element has been built.\n   */\n  BUILT: 'built',\n\n  /**\n   * The element has started loading.\n   * LOAD_START triggers at the start of the layoutCallback.\n   */\n  LOAD_START: 'load-start',\n\n  /**\n   * Rendering has been confirmed to have been started.\n   * It is a signal to indicate meaningful display (e.g. text could be displayed\n   * CSS is correctly installed/applied).\n   *\n   * Elements can optionally implement RENDER_START signal. (e.g. ad, shadowdoc)\n   * if it want to define its own meaningful display time and toggle visibility.\n   *\n   * Simpler elements's RENDER_START can be equal to the start of the\n   * buildCallback\n   */\n  RENDER_START: 'render-start',\n\n  /**\n   * The element has been loaded.\n   * LOAD_END triggers at the end of the layoutCallback.\n   *\n   */\n  LOAD_END: 'load-end',\n\n  /**\n   * The initial contents of an element/document/embed have been loaded.\n   * INI_LOAD is an optional signal, implemented by ads, story, and elements\n   * that consist of other resources.\n   * It instructs that all critical resources has been loaded, and can be used\n   * for more accurate visibility measurement.\n   * When an element doesn't consist multiple child resources, LOAD_END signal\n   * can be used to indicate resource load completion.\n   * Note: Based on the implementation, INI_LOAD can trigger before or after\n   * LOAD_END.\n   */\n  INI_LOAD: 'ini-load',\n\n  /**\n   * The element has been unlaid out.\n   */\n  UNLOAD: 'unload',\n};\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex'];\n\nconst cdnProxyRegex =\n  typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex'];\n\n/** @type {!Object<string, string|boolean|RegExp|Array<RegExp>>} */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex: thirdPartyFrameRegex || /^d-\\d+\\.ampproject\\.net$/,\n  cdn: env['cdnUrl'] || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex:\n    cdnProxyRegex || /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] || 'https://amp-error-reporting.appspot.com/r',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/master/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.dev$/,\n  ],\n};\n\nexport const config = {\n  urls,\n};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssEscape} from '../third_party/css-escape/css-escape';\nimport {devAssert} from './log';\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nexport function assertIsName(name) {\n  devAssert(/^[\\w-]+$/.test(name));\n}\n\n/**\n * @type {boolean|undefined}\n */\nlet scopeSelectorSupported;\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\nexport function isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return (scopeSelectorSupported = testScopeSelector(el));\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\nfunction testScopeSelector(el) {\n  try {\n    const doc = el.ownerDocument;\n    const testElement = doc.createElement('div');\n    const testChild = doc.createElement('div');\n    testElement.appendChild(testChild);\n    // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n    return testElement./*OK*/ querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\nexport function prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, `$&${distribute} `);\n}\n\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n */\nexport function escapeCssSelectorIdent(ident) {\n  return cssEscape(ident);\n}\n\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\nexport function escapeCssSelectorNth(ident) {\n  const escaped = String(ident);\n  // Ensure it doesn't close the nth-child psuedo class.\n  devAssert(escaped.indexOf(')') === -1);\n  return escaped;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './utils/promise';\nimport {\n  assertIsName,\n  isScopeSelectorSupported,\n  prependSelectorsWith,\n} from './css';\nimport {dev, devAssert} from './log';\nimport {dict} from './utils/object';\nimport {includes, startsWith} from './string';\nimport {toWin} from './types';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise(resolve => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise(resolve => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node} after\n */\nexport function insertAfterOrAtStart(root, element, after) {\n  const before = after ? after.nextSibling : root.firstChild;\n  root.insertBefore(element, before);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (n = node; !!n.parentNode && !isShadowRoot(n); n = n.parentNode) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {*} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  // TODO(#22733): remove in preference to dom's `rootNodeFor`.\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\nexport function closest(element, callback, opt_stopAt) {\n  for (let el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\nexport function closestNode(node, callback) {\n  for (let n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\nexport function closestAncestorElementBySelector(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  return closest(element, el => {\n    return matches(el, selector);\n  });\n}\n\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\nexport function ancestorElements(child, predicate) {\n  const ancestors = [];\n  for (\n    let ancestor = child.parentElement;\n    ancestor;\n    ancestor = ancestor.parentElement\n  ) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n  return ancestors;\n}\n\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\nexport function ancestorElementsByTag(child, tagName) {\n  assertIsName(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, el => {\n    return el.tagName == tagName;\n  });\n}\n\n/**\n * Finds the first child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function childElement(parent, callback) {\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\nexport function childElements(parent, callback) {\n  const children = [];\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function lastChildElement(parent, callback) {\n  for (\n    let child = parent.lastElementChild;\n    child;\n    child = child.previousElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\nexport function childNodes(parent, callback) {\n  const nodes = [];\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function childElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelector(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function lastChildElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return lastChildElement(parent, el => {\n    return el.hasAttribute(attr);\n  });\n}\n\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {?Element}\n */\nexport function childElementByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelector(parent, `> ${tagName}`);\n}\n\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> ${tagName}`);\n}\n\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\nexport function matches(el, selector) {\n  const matcher =\n    el.matches ||\n    el.webkitMatchesSelector ||\n    el.mozMatchesSelector ||\n    el.msMatchesSelector ||\n    el.oMatchesSelector;\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n  return false; // IE8 always returns false.\n}\n\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\nexport function elementByTag(element, tagName) {\n  assertIsName(tagName);\n  return element./*OK*/ querySelector(tagName);\n}\n\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nfunction scopedQuerySelectionFallback(root, selector) {\n  const unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  const scopedSelector = prependSelectorsWith(selector, `.${unique}`);\n  const elements = root./*OK*/ querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {?Element}\n */\nexport function scopedQuerySelector(root, selector) {\n  if (isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelector(prependSelectorsWith(selector, ':scope'));\n  }\n\n  // Only IE.\n  const fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nexport function scopedQuerySelectorAll(root, selector) {\n  if (isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelectorAll(\n      prependSelectorsWith(selector, ':scope')\n    );\n  }\n\n  // Only IE.\n  return scopedQuerySelectionFallback(root, selector);\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!Element} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || (key => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    startsWith(tag, 'AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!Element} element\n * @return {!Promise<!Element>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(element);\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Replacement for `Element.requestFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n * @param {!Element} element\n */\nexport function fullscreenEnter(element) {\n  const requestFs =\n    element.requestFullscreen ||\n    element.requestFullScreen ||\n    element.webkitRequestFullscreen ||\n    element.webkitEnterFullscreen ||\n    element.msRequestFullscreen ||\n    element.mozRequestFullScreen;\n  if (requestFs) {\n    requestFs.call(element);\n  }\n}\n\n/**\n * Replacement for `Document.exitFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/exitFullscreen\n * @param {!Element} element\n */\nexport function fullscreenExit(element) {\n  const elementBoundExit =\n    element.cancelFullScreen ||\n    element.exitFullscreen ||\n    element.webkitExitFullscreen ||\n    element.webkitCancelFullScreen ||\n    element.mozCancelFullScreen ||\n    element.msExitFullscreen;\n  if (elementBoundExit) {\n    elementBoundExit.call(element);\n    return;\n  }\n  const {ownerDocument} = element;\n  if (!ownerDocument) {\n    return;\n  }\n  const docBoundExit =\n    ownerDocument.cancelFullScreen ||\n    ownerDocument.exitFullscreencancelFullScreen ||\n    ownerDocument.webkitExitFullscreencancelFullScreen ||\n    ownerDocument.webkitCancelFullScreencancelFullScreen ||\n    ownerDocument.mozCancelFullScreencancelFullScreen ||\n    ownerDocument.msExitFullscreen;\n  if (docBoundExit) {\n    docBoundExit.call(ownerDocument);\n  }\n}\n\n/**\n * Replacement for `Document.fullscreenElement`.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenElement\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isFullscreenElement(element) {\n  const {webkitDisplayingFullscreen} = element;\n  if (webkitDisplayingFullscreen !== undefined) {\n    return webkitDisplayingFullscreen;\n  }\n  const {ownerDocument} = element;\n  if (!ownerDocument) {\n    return false;\n  }\n  const fullscreenElement =\n    ownerDocument.fullscreenElement ||\n    ownerDocument.webkitFullscreenElement ||\n    ownerDocument.mozFullScreenElement ||\n    ownerDocument.webkitCurrentFullScreenElement;\n  return fullscreenElement == element;\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!Element} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport {\n  getAmpdoc,\n  getExistingServiceForDocInEmbedScope,\n  getService,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n  getTopWindow,\n} from './service';\nimport {toWin} from './types';\nimport {userAssert} from './log';\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementService(win, id, extension, opt_element) {\n  return getElementServiceIfAvailable(win, id, extension, opt_element).then(\n    service => assertService(service, id, extension)\n  );\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(win, id, extension, opt_element) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(win, id, extension, opt_element);\n}\n\n/**\n * @param {!Window} win\n * @param {string} elementName Name of an extended custom element.\n * @return {boolean} Whether this element is scheduled to be loaded.\n */\nfunction isElementScheduled(win, elementName) {\n  // Set in custom-element.js\n  if (!win.__AMP_EXTENDED_ELEMENTS) {\n    return false;\n  }\n  return !!win.__AMP_EXTENDED_ELEMENTS[elementName];\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then(service => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .waitForBodyOpen()\n    .then(() =>\n      waitForExtensionIfPresent(ampdoc.win, extension, ampdoc.win.document.head)\n    )\n    .then(() => {\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      } else if (isElementScheduled(ampdoc.win, extension)) {\n        return getServicePromiseForDoc(element, id);\n      }\n      return null;\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getExistingServiceForDocInEmbedScope(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  const win = toWin(element.ownerDocument.defaultView);\n  const topWin = getTopWindow(win);\n  // In embeds, doc services are stored on the embed window.\n  if (win !== topWin) {\n    return getElementServicePromiseOrNull(win, id, extension);\n  } else {\n    // Only fallback to element's ampdoc (top-level) if not embedded.\n    return getElementServiceIfAvailableForDoc(element, id, extension);\n  }\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (userAssert(\n    service,\n    'Service %s was requested to be provided through %s, ' +\n      'but %s is not loaded in the current page. To fix this ' +\n      'problem load the JavaScript file for %s in this page.',\n    id,\n    extension,\n    extension,\n    extension\n  ));\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Array<string>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  const scripts = {};\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const name =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    scripts[name] = true;\n  }\n  return Object.keys(scripts);\n}\n\n/**\n * Waits for body to be present then verifies that an extension script is\n * present in head for installation.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} extensionId\n * @return {!Promise<boolean>}\n */\nexport function isExtensionScriptInNode(ampdoc, extensionId) {\n  return ampdoc.waitForBodyOpen().then(() => {\n    return extensionScriptInNode(ampdoc.getHeadNode(), extensionId);\n  });\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @param {string} extensionId\n * @return {boolean}\n * @private\n */\nfunction extensionScriptInNode(head, extensionId) {\n  return extensionScriptsInNode(head).includes(extensionId);\n}\n\n/**\n * Waits for an extension if its script is present\n * @param {!Window} win\n * @param {string} extension\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Promise}\n * @private\n */\nfunction waitForExtensionIfPresent(win, extension, head) {\n  /**\n   * If there is an extension script wait for it to load before trying\n   * to get the service. Prevents a race condition when everything but\n   * the extensions is in cache. If there is no script then it's either\n   * not present, or the service was defined by a test. In those cases\n   * we don't wait around for an extension that does not exist.\n   */\n\n  // TODO(jpettitt) investigate registerExtension to short circuit\n  // the dom call in extensionScriptsInNode()\n  if (!extensionScriptInNode(head, extension)) {\n    return Promise.resolve();\n  }\n\n  const extensions = getService(win, 'extensions');\n  return /** @type {!Promise<?Object>} */ (extensions.waitForExtension(\n    win,\n    extension\n  ));\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(win, id, extension, opt_element) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => waitForExtensionIfPresent(win, extension, win.document.head))\n    .then(() => {\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      } else if (isElementScheduled(win, extension)) {\n        return getServicePromise(win, id);\n      }\n      return null;\n    });\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet optsSupported;\n\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function internalListenImplementation(\n  element,\n  eventType,\n  listener,\n  opt_evtListenerOpts\n) {\n  let localElement = element;\n  let localListener = listener;\n  /**\n   * @type {?Function}\n   */\n  let wrapped;\n\n  wrapped = event => {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n      throw e;\n    }\n  };\n  const optsSupported = detectEvtListenerOptsSupport();\n  let capture = false;\n  if (opt_evtListenerOpts) {\n    capture = opt_evtListenerOpts.capture;\n  }\n  localElement.addEventListener(\n    eventType,\n    wrapped,\n    optsSupported ? opt_evtListenerOpts : capture\n  );\n  return () => {\n    if (localElement) {\n      localElement.removeEventListener(\n        eventType,\n        wrapped,\n        optsSupported ? opt_evtListenerOpts : capture\n      );\n    }\n    // Ensure these are GC'd\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\nexport function detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    const options = {\n      get capture() {\n        optsSupported = true;\n      },\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return optsSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\nexport function resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalListenImplementation} from './event-helper-listen';\nimport {lastChildElement} from './dom';\nimport {user} from './log';\n\n/** @const {string}  */\nconst LOAD_FAILURE_PREFIX = 'Failed to load:';\n\n/** @const {string} */\nexport const MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\nexport function createCustomEvent(win, type, detail, opt_eventInit) {\n  const eventInit = /** @type {!CustomEventInit} */ ({detail});\n  Object.assign(eventInit, opt_eventInit);\n  // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n  if (typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    const e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(\n      type,\n      !!eventInit.bubbles,\n      !!eventInit.cancelable,\n      detail\n    );\n    return e;\n  }\n}\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getData(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.data);\n}\n\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getDetail(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.detail);\n}\n\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  let localListener = listener;\n  const unlisten = internalListenImplementation(\n    element,\n    eventType,\n    event => {\n      try {\n        localListener(event);\n      } finally {\n        // Ensure listener is GC'd\n        localListener = null;\n        unlisten();\n      }\n    },\n    opt_evtListenerOpts\n  );\n  return unlisten;\n}\n\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\nexport function listenOncePromise(\n  element,\n  eventType,\n  opt_evtListenerOpts,\n  opt_cancel\n) {\n  let unlisten;\n  const eventPromise = new Promise(resolve => {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n  return eventPromise;\n}\n\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nexport function isLoaded(eleOrWindow) {\n  return !!(\n    eleOrWindow.complete ||\n    eleOrWindow.readyState == 'complete' ||\n    (isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0) ||\n    // If the passed in thing is a Window, infer loaded state from\n    //\n    (eleOrWindow.document && eleOrWindow.document.readyState == 'complete')\n  );\n}\n\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\nexport function loadPromise(eleOrWindow) {\n  let unlistenLoad;\n  let unlistenError;\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n  const isMediaElement = isHTMLMediaElement(eleOrWindow);\n  if (\n    isMediaElement &&\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc\n  ) {\n    return Promise.reject(eleOrWindow);\n  }\n  const loadingPromise = new Promise((resolve, reject) => {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true,\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    }\n    // Don't unlisten on error for Windows.\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n    let errorTarget = eleOrWindow;\n    // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = lastChildElement(\n        eleOrWindow,\n        child => child.tagName === 'SOURCE'\n      );\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n\n  return loadingPromise.then(\n    () => {\n      if (unlistenError) {\n        unlistenError();\n      }\n      return eleOrWindow;\n    },\n    () => {\n      if (unlistenLoad) {\n        unlistenLoad();\n      }\n      failedToLoad(eleOrWindow);\n    }\n  );\n}\n\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] =\n      eleOrWindow.currentSrc || true;\n  }\n\n  // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n  let target = eleOrWindow;\n  if (target && target.src) {\n    target = target.src;\n  }\n  throw user().createError(LOAD_FAILURE_PREFIX, target);\n}\n\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\nexport function isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\nimport {dev, user} from './log';\nimport {getMode} from './mode';\nimport {hasOwn} from './utils/object';\nimport {parseQueryString} from './url';\n\n/** @const {string} */\nconst TAG = 'EXPERIMENTS';\n\n/** @const {string} */\nconst LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n\n/** @const {string} */\nconst TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n\n/**\n * @typedef {{\n *   isTrafficEligible: function(!Window):boolean,\n *   branches: !Array<string>\n * }}\n */\nexport let ExperimentInfo;\n\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCanary(win) {\n  return !!(win.AMP_CONFIG && win.AMP_CONFIG.canary);\n}\n\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\nexport function getBinaryType(win) {\n  return win.AMP_CONFIG && win.AMP_CONFIG.type\n    ? win.AMP_CONFIG.type\n    : 'unknown';\n}\n\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\nexport function isExperimentOn(win, experimentId) {\n  const toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\nexport function toggleExperiment(\n  win,\n  experimentId,\n  opt_on,\n  opt_transientExperiment\n) {\n  const currentlyOn = isExperimentOn(win, /*OK*/ experimentId);\n  const on = !!(opt_on !== undefined ? opt_on : !currentlyOn);\n  if (on != currentlyOn) {\n    const toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      const storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles);\n      // Avoid affecting tests that spy/stub warn().\n      if (!getMode().test) {\n        user().warn(\n          TAG,\n          '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental',\n          experimentId,\n          on ? 'enabled' : 'disabled',\n          win.location.hostname\n        );\n      }\n    }\n  }\n  return on;\n}\n\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nexport function experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n  win[TOGGLES_WINDOW_PROPERTY] = Object.create(null);\n  const toggles = win[TOGGLES_WINDOW_PROPERTY];\n\n  // Read the default config of this build.\n  if (win.AMP_CONFIG) {\n    for (const experimentId in win.AMP_CONFIG) {\n      const frequency = win.AMP_CONFIG[experimentId];\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  }\n  // Read document level override from meta tag.\n  if (\n    win.AMP_CONFIG &&\n    Array.isArray(win.AMP_CONFIG['allow-doc-opt-in']) &&\n    win.AMP_CONFIG['allow-doc-opt-in'].length > 0\n  ) {\n    const allowed = win.AMP_CONFIG['allow-doc-opt-in'];\n    const meta = win.document.head.querySelector(\n      'meta[name=\"amp-experiments-opt-in\"]'\n    );\n    if (meta) {\n      const optedInExperiments = meta.getAttribute('content').split(',');\n      for (let i = 0; i < optedInExperiments.length; i++) {\n        if (allowed.indexOf(optedInExperiments[i]) != -1) {\n          toggles[optedInExperiments[i]] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  if (\n    win.AMP_CONFIG &&\n    Array.isArray(win.AMP_CONFIG['allow-url-opt-in']) &&\n    win.AMP_CONFIG['allow-url-opt-in'].length > 0\n  ) {\n    const allowed = win.AMP_CONFIG['allow-url-opt-in'];\n    const hash = win.location.originalHash || win.location.hash;\n    const params = parseQueryString(hash);\n    for (let i = 0; i < allowed.length; i++) {\n      const param = params[`e-${allowed[i]}`];\n      if (param == '1') {\n        toggles[allowed[i]] = true;\n      }\n      if (param == '0') {\n        toggles[allowed[i]] = false;\n      }\n    }\n  }\n  return toggles;\n}\n\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {Object<string, boolean>}\n */\nexport function experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nfunction getExperimentToggles(win) {\n  let experimentsString = '';\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch (e) {\n    dev().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n  const tokens = experimentsString ? experimentsString.split(/\\s*,\\s*/g) : [];\n\n  const toggles = Object.create(null);\n  for (let i = 0; i < tokens.length; i++) {\n    if (tokens[i].length == 0) {\n      continue;\n    }\n    if (tokens[i][0] == '-') {\n      toggles[tokens[i].substr(1)] = false;\n    } else {\n      toggles[tokens[i]] = true;\n    }\n  }\n  return toggles;\n}\n\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\nfunction saveExperimentToggles(win, toggles) {\n  const experimentIds = [];\n  for (const experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n  try {\n    if ('localStorage' in win) {\n      win.localStorage.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n    }\n  } catch (e) {\n    user().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\nexport function getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\nexport const RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng,\n};\n\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\nfunction selectRandomItem(arr) {\n  const rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return arr[Math.floor(rn * arr.length)] || null;\n}\n\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Object<string, !ExperimentInfo>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\nexport function randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  const selectedExperiments = {};\n  for (const experimentName in experiments) {\n    // Skip experimentName if it is not a key of experiments object or if it\n    // has already been populated by some other property.\n    if (!hasOwn(experiments, experimentName)) {\n      continue;\n    }\n    if (hasOwn(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (\n      !experiments[experimentName].isTrafficEligible ||\n      !experiments[experimentName].isTrafficEligible(win)\n    ) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    }\n\n    // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n    if (\n      !win.__AMP_EXPERIMENT_BRANCHES[experimentName] &&\n      isExperimentOn(win, /*OK*/ experimentName)\n    ) {\n      const {branches} = experiments[experimentName];\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(\n        branches\n      );\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n  return selectedExperiments;\n}\n\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\nexport function getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES\n    ? win.__AMP_EXPERIMENT_BRANCHES[experimentName]\n    : null;\n}\n\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\nexport function forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\nimport {getFormAsObject, getSubmitButtonUsed} from './form';\nimport {iterateCursor} from './dom';\nimport {map} from './utils/object';\n\n/**\n * Create a form data wrapper. The wrapper is necessary to provide a common\n * API for FormData objects on all browsers. For example, not all browsers\n * support the FormData#entries or FormData#delete functions.\n *\n * @param {!Window} win\n * @param {!HTMLFormElement=} opt_form\n * @return {!FormDataWrapperInterface}\n */\nexport function createFormDataWrapper(win, opt_form) {\n  const platform = Services.platformFor(win);\n\n  if (platform.isIos() && platform.getMajorVersion() == 11) {\n    return new Ios11NativeFormDataWrapper(opt_form);\n  } else if (FormData.prototype.entries && FormData.prototype.delete) {\n    return new NativeFormDataWrapper(opt_form);\n  } else {\n    return new PolyfillFormDataWrapper(opt_form);\n  }\n}\n\n/**\n * Check if the given object is a FormDataWrapper instance\n * @param {*} o\n * @return {boolean} True if the object is a FormDataWrapper instance.\n */\nexport function isFormDataWrapper(o) {\n  // instanceof doesn't work as expected, so we detect with duck-typing.\n  return !!o && typeof o.getFormData == 'function';\n}\n\n/**\n * A polyfill wrapper for a `FormData` object.\n *\n * If there's no native `FormData#entries`, chances are there are no native\n * methods to read the content of the `FormData` after construction, so the\n * only way to implement `entries` in this class is to capture the fields in\n * the form passed to the constructor (and the arguments passed to the\n * `append` method).\n *\n * For more details on this, see http://mdn.io/FormData.\n *\n * @implements {FormDataWrapperInterface}\n * @visibleForTesting\n */\nexport class PolyfillFormDataWrapper {\n  /** @override */\n  constructor(opt_form = undefined) {\n    /** @private @const {!Object<string, !Array<string>>} */\n    this.fieldValues_ = opt_form ? getFormAsObject(opt_form) : map();\n  }\n\n  /**\n   * @param {string} name\n   * @param {string|!File} value\n   * @param {string=} opt_filename\n   * @override\n   */\n  append(name, value, opt_filename) {\n    // Coercion to string is required to match\n    // the native FormData.append behavior\n    const nameString = String(name);\n    this.fieldValues_[nameString] = this.fieldValues_[nameString] || [];\n    this.fieldValues_[nameString].push(String(value));\n  }\n\n  /** @override */\n  delete(name) {\n    delete this.fieldValues_[name];\n  }\n\n  /** @override */\n  entries() {\n    const fieldEntries = [];\n    Object.keys(this.fieldValues_).forEach(name => {\n      const values = this.fieldValues_[name];\n      values.forEach(value => fieldEntries.push([name, value]));\n    });\n\n    // Generator functions are not supported by the current Babel configuration,\n    // so we must manually implement the iterator interface.\n    let nextIndex = 0;\n    return /** @type {!Iterator<!Array<string>>} */ ({\n      next() {\n        return nextIndex < fieldEntries.length\n          ? {value: fieldEntries[nextIndex++], done: false}\n          : {value: undefined, done: true};\n      },\n    });\n  }\n\n  /** @override */\n  getFormData() {\n    const formData = new FormData();\n\n    Object.keys(this.fieldValues_).forEach(name => {\n      const values = this.fieldValues_[name];\n      values.forEach(value => formData.append(name, value));\n    });\n\n    return formData;\n  }\n}\n\n/**\n * Wrap the native `FormData` implementation.\n *\n * NOTE: This differs from the standard `FormData` constructor. This constructor\n * includes a submit button if it was used to submit the `opt_form`, where\n * the native `FormData` constructor does not include the submit button used to\n * submit the form.\n * {@link https://xhr.spec.whatwg.org/#dom-formdata}\n * @implements {FormDataWrapperInterface}\n */\nclass NativeFormDataWrapper {\n  /** @override */\n  constructor(opt_form) {\n    /** @private @const {!FormData} */\n    this.formData_ = new FormData(opt_form);\n\n    this.maybeIncludeSubmitButton_(opt_form);\n  }\n\n  /**\n   * If a submit button is focused (because it was used to submit the form),\n   * or was the first submit button present, add its name and value to the\n   * `FormData`, since publishers expect the submit button to be present.\n   * @param {!HTMLFormElement=} opt_form\n   * @private\n   */\n  maybeIncludeSubmitButton_(opt_form) {\n    // If a form is not passed to the constructor,\n    // we are not in a submitting code path.\n    if (!opt_form) {\n      return;\n    }\n\n    const button = getSubmitButtonUsed(opt_form);\n    if (button && button.name) {\n      this.append(button.name, button.value);\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {string|!File} value\n   * @param {string=} opt_filename\n   * @override\n   */\n  append(name, value, opt_filename) {\n    this.formData_.append(name, value);\n  }\n\n  /** @override */\n  delete(name) {\n    this.formData_.delete(name);\n  }\n\n  /** @override */\n  entries() {\n    return this.formData_.entries();\n  }\n\n  /** @override */\n  getFormData() {\n    return this.formData_;\n  }\n}\n\n/**\n * iOS 11 has a bug when submitting empty file inputs.\n * This works around the bug by replacing the empty files with Blob objects.\n */\nclass Ios11NativeFormDataWrapper extends NativeFormDataWrapper {\n  /** @override */\n  constructor(opt_form) {\n    super(opt_form);\n\n    if (opt_form) {\n      iterateCursor(opt_form.elements, input => {\n        if (input.type == 'file' && input.files.length == 0) {\n          this.formData_.delete(input.name);\n          this.formData_.append(input.name, new Blob([]), '');\n        }\n      });\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {string|!File} value\n   * @param {string=} opt_filename\n   * @override\n   */\n  append(name, value, opt_filename) {\n    // Safari 11 breaks on submitting empty File values.\n    if (value && typeof value == 'object' && isEmptyFile(value)) {\n      this.formData_.append(name, new Blob([]), opt_filename || '');\n    } else {\n      this.formData_.append(name, value);\n    }\n  }\n}\n\n/**\n * A wrapper for a native `FormData` object that allows the retrieval of entries\n * in the form data after construction even on browsers that don't natively\n * support `FormData.prototype.entries`.\n *\n * @interface\n * Subclassing `FormData` doesn't work in this case as the transpiler\n *     generates code that calls the super constructor directly using\n *     `Function.prototype.call`. WebKit (Safari) doesn't allow this and\n *     enforces that constructors be called with the `new` operator.\n */\nclass FormDataWrapperInterface {\n  /**\n   * Creates a new wrapper for a `FormData` object.\n   *\n   * If there's no native `FormData#entries`, chances are there are no native\n   * methods to read the content of the `FormData` after construction, so the\n   * only way to implement `entries` in this class is to capture the fields in\n   * the form passed to the constructor (and the arguments passed to the\n   * `append` method).\n   *\n   * This constructor should also add the submitter element as defined in the\n   * HTML spec for Form Submission Algorithm, but is not defined by the standard\n   * when using the `FormData` constructor directly.\n   *\n   * For more details on this, see http://mdn.io/FormData.\n   *\n   * @param {!HTMLFormElement=} opt_form An HTML `<form>` element — when\n   *     specified, the `FormData` object will be populated with the form's\n   *     current keys/values using the name property of each element for the\n   *     keys and their submitted value for the values. It will also encode file\n   *     input content.\n   */\n  constructor(opt_form) {}\n\n  /**\n   * Appends a new value onto an existing key inside a `FormData` object, or\n   * adds the key if it does not already exist.\n   *\n   * Appending a `File` object is not yet supported and the `filename`\n   * parameter is ignored for this wrapper.\n   *\n   * For more details on this, see http://mdn.io/FormData/append.\n   *\n   * TODO(cvializ): Update file support\n   *\n   * @param {string} unusedName The name of the field whose data is contained in\n   *     `value`.\n   * @param {string|!File} unusedValue The field's value.\n   * @param {string=} opt_filename The filename to use if the value is a file.\n   */\n  append(unusedName, unusedValue, opt_filename) {}\n\n  /**\n   * Remove the given value from the FormData.\n   *\n   * For more details on this, see http://mdn.io/FormData/delete.\n   *\n   * @param {string} unusedName The name of the field to remove from the FormData.\n   */\n  delete(unusedName) {}\n\n  /**\n   * Returns an iterator of all key/value pairs contained in this object.\n   *\n   * For more details on this, see http://mdn.io/FormData/entries.\n   *\n   * @return {!Iterator<!Array<string|!File>>}\n   */\n  entries() {}\n\n  /**\n   * Returns the wrapped native `FormData` object.\n   *\n   * @return {!FormData}\n   */\n  getFormData() {}\n}\n\n/**\n * Check if the given file is an empty file, which is the result of submitting\n * an empty `<input type=\"file\">`. These cause errors when submitting forms\n * in Safari 11.\n *\n * @param {!File} file\n * @return {boolean}\n */\nfunction isEmptyFile(file) {\n  return file.name == '' && file.size == 0;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ancestorElementsByTag, iterateCursor} from './dom';\n\n/** @const {string} */\nconst FORM_PROP_ = '__AMP_FORM';\n\n/**\n * @param {!Element} element\n * @return {../extensions/amp-form/0.1/amp-form.AmpForm}\n */\nexport function formOrNullForElement(element) {\n  return element[FORM_PROP_] || null;\n}\n\n/**\n * @param {!Element} element\n * @param {!../extensions/amp-form/0.1/amp-form.AmpForm} form\n */\nexport function setFormForElement(element, form) {\n  element[FORM_PROP_] = form;\n}\n\n/**\n * Returns form data in the passed-in form as an object.\n * Includes focused submit buttons.\n * @param {!HTMLFormElement} form\n * @return {!JsonObject}\n */\nexport function getFormAsObject(form) {\n  const {elements} = form;\n  const data = /** @type {!JsonObject} */ ({});\n  // <button> is handled separately\n  const submittableTagsRegex = /^(?:input|select|textarea)$/i;\n  // type=submit is handled separately\n  const unsubmittableTypesRegex = /^(?:submit|button|image|file|reset)$/i;\n  const checkableType = /^(?:checkbox|radio)$/i;\n\n  for (let i = 0; i < elements.length; i++) {\n    const input = elements[i];\n    const {checked, name, multiple, options, tagName, type, value} = input;\n    if (\n      !name ||\n      isDisabled(input) ||\n      !submittableTagsRegex.test(tagName) ||\n      unsubmittableTypesRegex.test(type) ||\n      (checkableType.test(type) && !checked)\n    ) {\n      continue;\n    }\n\n    if (data[name] === undefined) {\n      data[name] = [];\n    }\n\n    if (multiple) {\n      iterateCursor(options, option => {\n        if (option.selected) {\n          data[name].push(option.value);\n        }\n      });\n      continue;\n    }\n    data[name].push(value);\n  }\n\n  const submitButton = getSubmitButtonUsed(form);\n  if (submitButton && submitButton.name) {\n    const {name} = submitButton;\n    if (data[name] === undefined) {\n      data[name] = [];\n    }\n    data[submitButton.name].push(submitButton.value);\n  }\n\n  // Wait until the end to remove the empty values, since\n  // we don't know when evaluating any one input whether\n  // there will be or have already been inputs with the same names.\n  // e.g. We want to remove empty <select multiple name=x> but\n  // there could also be an <input name=x>. At the end we know if an empty name\n  // can be deleted.\n  Object.keys(data).forEach(key => {\n    if (data[key].length == 0) {\n      delete data[key];\n    }\n  });\n\n  return data;\n}\n\n/**\n * Gets the submit button used to submit the form.\n * This searches through the form elements to find:\n * 1. The first submit button element OR\n * 2. a focused submit button, indicating it was specifically used to submit.\n * 3. null, if neither of the above is found.\n * @param {!HTMLFormElement} form\n * @return {?Element}\n */\nexport function getSubmitButtonUsed(form) {\n  const {elements} = form;\n  const {length} = elements;\n  const {activeElement} = form.ownerDocument;\n  let firstSubmitButton = null;\n\n  for (let i = 0; i < length; i++) {\n    const element = elements[i];\n\n    if (!isSubmitButton(element)) {\n      continue;\n    }\n\n    if (!firstSubmitButton) {\n      firstSubmitButton = element;\n    }\n\n    if (activeElement == element) {\n      return activeElement;\n    }\n  }\n  return firstSubmitButton;\n}\n\n/**\n * True if the given button can submit a form.\n * @param {!Element} element\n * @return {boolean}\n */\nfunction isSubmitButton(element) {\n  const {tagName, type} = element;\n  return tagName == 'BUTTON' || type == 'submit';\n}\n\n/**\n * Checks if a field is disabled.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isDisabled(element) {\n  if (element.disabled) {\n    return true;\n  }\n\n  const ancestors = ancestorElementsByTag(element, 'fieldset');\n  for (let i = 0; i < ancestors.length; i++) {\n    if (ancestors[i].disabled) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Checks if a form field is in its default state.\n * @param {!Element} field\n * @return {boolean}\n */\nexport function isFieldDefault(field) {\n  switch (field.type) {\n    case 'select-multiple':\n    case 'select-one':\n      const {options} = field;\n      for (let j = 0; j < options.length; j++) {\n        if (options[j].selected !== options[j].defaultSelected) {\n          return false;\n        }\n      }\n      break;\n    case 'checkbox':\n    case 'radio':\n      return field.checked === field.defaultChecked;\n    default:\n      return field.value === field.defaultValue;\n  }\n  return true;\n}\n\n/**\n * Checks if a form field is empty. It expects a form field element,\n * i.e. `<input>`, `<textarea>`, or `<select>`.\n * @param {!Element} field\n * @throws {Error}\n * @return {boolean}\n */\nexport function isFieldEmpty(field) {\n  switch (field.tagName) {\n    case 'INPUT':\n      if (field.type == 'checkbox' || field.type == 'radio') {\n        return !field.checked;\n      } else {\n        return !field.value;\n      }\n    case 'TEXTAREA':\n      return !field.value;\n    case 'SELECT':\n      // dropdown menu has at least one option always selected\n      return false;\n    default:\n      throw new Error(\n        `isFieldEmpty: ${field.tagName} is not a supported field element.`\n      );\n  }\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\nimport {getModeObject} from './mode-object';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray, isEnumValue} from './types';\nimport {once} from './utils/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n * @private Visible for testing only.\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error.js to break cyclic\n * dependency.\n * @param {function(*, !Element=)|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = arg =>\n  encodeURIComponent(String(elementStringOrPassthru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don’t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(!./mode.ModeDef):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(!./mode.ModeDef):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then(response => response.json(), noop)\n        .then(opt_messages => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    // Delegate to the specific resolver.\n    return this.levelFunc_(getModeObject());\n  }\n\n  /**\n   * @param {string} tag\n   * @param {string} level\n   * @param {!Array} messages\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() != LogLevel.OFF) {\n      let fn = this.win.console.log;\n      if (level == 'ERROR') {\n        fn = this.win.console.error || fn;\n      } else if (level == 'INFO') {\n        fn = this.win.console.info || fn;\n      } else if (level == 'WARN') {\n        fn = this.win.console.warn || fn;\n      }\n      const args = this.maybeExpandMessageArgs_(messages);\n      // Prefix console message with \"[tag]\".\n      const prefix = `[${tag}]`;\n      if (typeof args[0] === 'string') {\n        // Prepend string to avoid breaking string substitutions e.g. %s.\n        args[0] = prefix + ' ' + args[0];\n      } else {\n        args.unshift(prefix);\n      }\n      fn.apply(this.win.console, args);\n    }\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  fine(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.FINE) {\n      this.msg_(tag, 'FINE', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  info(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.INFO) {\n      this.msg_(tag, 'INFO', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  warn(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.WARN) {\n      this.msg_(tag, 'WARN', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} var_args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.ERROR) {\n      this.msg_(tag, 'ERROR', Array.prototype.slice.call(arguments, 1));\n    } else {\n      const error = createErrorVargs.apply(\n        null,\n        Array.prototype.slice.call(arguments, 1)\n      );\n      this.prepareError_(error);\n      return error;\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * NOTE: for an explanation of the tempate R implementation see\n   * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {R} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is `null` or `undefined`.\n   * @template T\n   * @template R :=\n   *     mapunion(T, (V) =>\n   *         cond(eq(V, 'null'),\n   *             none(),\n   *             cond(eq(V, 'undefined'),\n   *                 none(),\n   *                 V)))\n   *  =:\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    let firstElement;\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n    if (!shouldBeTrueish) {\n      const message = opt_message || 'Assertion failed';\n      const splitMessage = message.split('%s');\n      const first = splitMessage.shift();\n      let formatted = first;\n      const messageArray = [];\n      let i = 2;\n      pushIfNonEmpty(messageArray, first);\n      while (splitMessage.length > 0) {\n        const nextConstant = splitMessage.shift();\n        const val = arguments[i++];\n        if (val && val.tagName) {\n          firstElement = val;\n        }\n        messageArray.push(val);\n        pushIfNonEmpty(messageArray, nextConstant.trim());\n        formatted += stringOrElementString(val) + nextConstant;\n      }\n      const e = new Error(formatted);\n      e.fromAssert = true;\n      e.associatedElement = firstElement;\n      e.messageArray = messageArray;\n      this.prepareError_(e);\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n      throw e;\n    }\n    return shouldBeTrueish;\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    const shouldBeTrueish = shouldBeElement && shouldBeElement.nodeType == 1;\n    this.assertType_(\n      shouldBeElement,\n      shouldBeTrueish,\n      'Element expected',\n      opt_message\n    );\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    this.assertType_(\n      shouldBeString,\n      typeof shouldBeString == 'string',\n      'String expected',\n      opt_message\n    );\n    return /** @type {string} */ (shouldBeString);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    this.assertType_(\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    );\n    return /** @type {number} */ (shouldBeNumber);\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    this.assertType_(\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    );\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    this.assertType_(\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    );\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n\n  /**\n   * Asserts and returns the enum value. If the enum doesn't contain such a\n   * value, the error is thrown.\n   *\n   * @param {!Object<T>} enumObj\n   * @param {string} s\n   * @param {string=} opt_enumName\n   * @return {T}\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertEnumValue(enumObj, s, opt_enumName) {\n    if (isEnumValue(enumObj, s)) {\n      return s;\n    }\n    this.assert(false, 'Unknown %s value: \"%s\"', opt_enumName || 'enum', s);\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n\n  /**\n   * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n   *\n   * It understands array-based \"id\"-contracted messages.\n   *\n   * Otherwise creates a sprintf syntax string containing the optional message or the\n   * default. An interpolation token is added at the end to include the `subject`.\n   * @param {*} subject\n   * @param {*} assertion\n   * @param {string} defaultMessage\n   * @param {!Array|string=} opt_message\n   * @private\n   */\n  assertType_(subject, assertion, defaultMessage, opt_message) {\n    if (isArray(opt_message)) {\n      this.assert(assertion, opt_message.concat(subject));\n    } else {\n      this.assert(assertion, `${opt_message || defaultMessage}: %s`, subject);\n    }\n  }\n}\n\n/**\n * @param {string|!Element} val\n * @return {string}\n */\nconst stringOrElementString = val =>\n  /** @type {string} */ (elementStringOrPassthru(val));\n\n/**\n * @param {*} val\n * @return {*}\n */\nfunction elementStringOrPassthru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (val && val.nodeType == 1) {\n    return val.tagName.toLowerCase() + (val.id ? '#' + val.id : '');\n  }\n  return val;\n}\n\n/**\n * @param {!Array} array\n * @param {*} val\n */\nfunction pushIfNonEmpty(array, val) {\n  if (val != '') {\n    array.push(val);\n  }\n}\n\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\nexport function duplicateErrorIfNecessary(error) {\n  const messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n  if (messageProperty && messageProperty.writable) {\n    return error;\n  }\n\n  const {message, stack} = error;\n  const e = new Error(message);\n  // Copy all the extraneous things we attach.\n  for (const prop in error) {\n    e[prop] = error[prop];\n  }\n  // Ensure these are copied.\n  e.stack = stack;\n  return e;\n}\n\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\nexport function createErrorVargs(var_args) {\n  let error = null;\n  let message = '';\n  for (let i = 0; i < arguments.length; i++) {\n    const arg = arguments[i];\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n  return error;\n}\n\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\nexport function rethrowAsync(var_args) {\n  const error = createErrorVargs.apply(null, arguments);\n  setTimeout(() => {\n    // reportError is installed globally per window in the entry point.\n    self.__AMP_REPORT_ERROR(error);\n    throw error;\n  });\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?Function}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log contructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log contructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    mode => {\n      const logNum = parseInt(mode.log, 10);\n      if (mode.development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, mode => {\n    const logNum = parseInt(mode.log, 10);\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\n\n/**\n * Provides info about the current app. This return value may be cached and\n * passed around as it will always be DCE'd.\n * @param {?Window=} opt_win\n * @return {!./mode.ModeDef}\n */\nexport function getModeObject(opt_win) {\n  return {\n    localDev: getMode(opt_win).localDev,\n    development: getMode(opt_win).development,\n    filter: getMode(opt_win).filter,\n    minified: getMode(opt_win).minified,\n    lite: getMode(opt_win).lite,\n    test: getMode(opt_win).test,\n    log: getMode(opt_win).log,\n    version: getMode(opt_win).version,\n    rtvVersion: getMode(opt_win).rtvVersion,\n    singlePassType: getMode(opt_win).singlePassType,\n  };\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString_} from './url-parse-query-string';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   filter: (string|undefined),\n *   minified: boolean,\n *   lite: boolean,\n *   test: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   singlePassType: (string|undefined)\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_DEV is only replaced when `gulp dist` is called without the\n  // --fortesting flag.\n  const IS_DEV = true;\n  const IS_MINIFIED = false;\n\n  const localDevEnabled = !!AMP_CONFIG.localDev;\n  const runningTests =\n    !!AMP_CONFIG.test || (IS_DEV && !!(win.__AMP_TEST || win.__karma__));\n  const runningTestsOnIe = win.__karma__ && win.__karma__.config.amp.testOnIe;\n  const isLocalDev = IS_DEV && (localDevEnabled || runningTests);\n  const hashQuery = parseQueryString_(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location.originalHash || win.location.hash\n  );\n  const singlePassType = AMP_CONFIG.spt;\n\n  const searchQuery = parseQueryString_(win.location.search);\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win, isLocalDev);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `gulp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    // Triggers validation or enable pub level logging. Validation can be\n    // bypassed via #validate=0.\n    // Note that AMP_DEV_MODE flag is used for testing purposes.\n    // Use Array.indexOf instead of Array.includes because of #24219\n    development: !!(\n      ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].indexOf(\n        hashQuery['development']\n      ) >= 0 || win.AMP_DEV_MODE\n    ),\n    examiner: hashQuery['development'] == '2',\n    // Allows filtering validation errors by error category. For the\n    // available categories, see ErrorCategory in validator/validator.proto.\n    filter: hashQuery['filter'],\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    // amp-user-location override\n    userLocationOverride: hashQuery['amp-user-location'],\n    minified: IS_MINIFIED,\n    // Whether document is in an amp-lite viewer. It signal that the user\n    // would prefer to use less bandwidth.\n    lite: searchQuery['amp_lite'] != undefined,\n    test: runningTests,\n    testIe: runningTestsOnIe,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n    singlePassType,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n */\nfunction getRtvVersion(win, isLocalDev) {\n  // If it's local dev then we won't actually have a full version so\n  // just use the version.\n  if (isLocalDev) {\n    return internalRuntimeVersion();\n  }\n\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win, isLocalDev) {\n  return getRtvVersion(win, isLocalDev);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This class helps to manage observers. Observers can be added, removed or\n * fired through and instance of this class.\n * @template TYPE\n */\nexport class Observable {\n  /**\n   * Creates an instance of Observable.\n   */\n  constructor() {\n    /** @type {?Array<function(TYPE)>} */\n    this.handlers_ = null;\n  }\n\n  /**\n   * Adds the observer to this instance.\n   * @param {function(TYPE)} handler Observer's handler.\n   * @return {!UnlistenDef}\n   */\n  add(handler) {\n    if (!this.handlers_) {\n      this.handlers_ = [];\n    }\n    this.handlers_.push(handler);\n    return () => {\n      this.remove(handler);\n    };\n  }\n\n  /**\n   * Removes the observer from this instance.\n   * @param {function(TYPE)} handler Observer's instance.\n   */\n  remove(handler) {\n    if (!this.handlers_) {\n      return;\n    }\n    const index = this.handlers_.indexOf(handler);\n    if (index > -1) {\n      this.handlers_.splice(index, 1);\n    }\n  }\n\n  /**\n   * Removes all observers.\n   */\n  removeAll() {\n    if (!this.handlers_) {\n      return;\n    }\n    this.handlers_.length = 0;\n  }\n\n  /**\n   * Fires an event. All observers are called.\n   * @param {TYPE=} opt_event\n   */\n  fire(opt_event) {\n    if (!this.handlers_) {\n      return;\n    }\n    const handlers = this.handlers_;\n    for (let i = 0; i < handlers.length; i++) {\n      const handler = handlers[i];\n      handler(opt_event);\n    }\n  }\n\n  /**\n   * Returns number of handlers. Mostly needed for tests.\n   * @return {number}\n   */\n  getHandlerCount() {\n    if (!this.handlers_) {\n      return 0;\n    }\n    return this.handlers_.length;\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\nimport {devAssert} from './log';\nimport {getServicePromise} from './service';\n\n/**\n * A map of services that delay rendering. The key is the name of the service\n * and the value is a DOM query which is used to check if the service is needed\n * in the current document.\n * Do not add a service unless absolutely necessary.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this list is used for server-side rendering (SSR) and any\n * changes made to it must be made in coordination with caches that implement\n * SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @const {!Object<string, string>}\n */\nconst SERVICES = {\n  'amp-dynamic-css-classes': '[custom-element=amp-dynamic-css-classes]',\n  'variant': 'amp-experiment',\n  'amp-story-render': 'amp-story[standalone]',\n};\n\n/**\n * Base class for render delaying services.\n * This should be extended to ensure the service\n * is properly handled\n *\n * @interface\n */\nexport class RenderDelayingService {\n  /**\n   * Function to return a promise for when\n   * it is finished delaying render, and is ready.\n   * NOTE: This should simply return Promise.resolve,\n   * if your service does not need to perform any logic\n   * after being registered.\n   * @return {!Promise}\n   */\n  whenReady() {}\n}\n\n/**\n * Maximum milliseconds to wait for all extensions to load before erroring.\n * @const\n */\nconst LOAD_TIMEOUT = 3000;\n\n/**\n * Detects any render delaying services that are required on the page, and\n * returns a promise with a timeout.\n * @param {!Window} win\n * @return {!Promise<!Array<*>>} resolves to an Array that has the same length\n *     as the detected render delaying services\n */\nexport function waitForServices(win) {\n  const promises = includedServices(win).map(serviceId => {\n    const serviceReadyPromise = getServicePromise(win, serviceId).then(\n      service => {\n        if (service && isRenderDelayingService(service)) {\n          return service.whenReady().then(() => {\n            return service;\n          });\n        }\n        return service;\n      }\n    );\n\n    return Services.timerFor(win).timeoutPromise(\n      LOAD_TIMEOUT,\n      serviceReadyPromise,\n      `Render timeout waiting for service ${serviceId} to be ready.`\n    );\n  });\n  return Promise.all(promises);\n}\n\n/**\n * Returns true if the page has a render delaying service.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function hasRenderDelayingServices(win) {\n  return includedServices(win).length > 0;\n}\n\n/**\n * Function to determine if the passed\n * Object is a Render Delaying Service\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isRenderDelayingService(service) {\n  const maybeRenderDelayingService = /** @type {!RenderDelayingService}*/ (service);\n  return typeof maybeRenderDelayingService.whenReady == 'function';\n}\n\n/**\n * Detects which, if any, render-delaying extensions are included on the page.\n * @param {!Window} win\n * @return {!Array<string>}\n */\nexport function includedServices(win) {\n  /** @const {!Document} */\n  const doc = win.document;\n  devAssert(doc.body);\n\n  return Object.keys(SERVICES).filter(service => {\n    return doc.querySelector(SERVICES[service]);\n  });\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from './utils/promise';\nimport {dev, devAssert} from './log';\nimport {isExperimentOn} from './experiments';\nimport {toWin} from './types';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (?function(new:Object, !Window)|\n *          ?function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Services must implement this interface to be embeddable in FIEs.\n * @interface\n */\nexport class EmbeddableService {\n  /**\n   * Installs a new instance of the service in the given FIE window.\n   * @param {!Window} unusedEmbedWin\n   * @param {!./service/ampdoc-impl.AmpDoc} unusedAmpDoc\n   */\n  static installInEmbedWindow(unusedEmbedWin, unusedAmpDoc) {}\n}\n\n/**\n * Returns a service with the given id. Assumes that it has been constructed\n * already.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\nexport function getExistingServiceForDocInEmbedScope(element, id) {\n  // TODO(#22733): completely remove this method once ampdoc-fie launches.\n  const document = element.ownerDocument;\n  const win = toWin(document.defaultView);\n  const topWin = getTopWindow(win);\n  // First, try to resolve via local embed window (if applicable).\n  const isEmbed = win != topWin;\n  const ampdocFieExperimentOn = isExperimentOn(topWin, 'ampdoc-fie');\n  if (isEmbed && !ampdocFieExperimentOn) {\n    if (isServiceRegistered(win, id)) {\n      return getServiceInternal(win, id);\n    }\n    // Fallback from FIE to parent is intentionally unsupported for safety.\n    return null;\n  } else {\n    // Resolve via the element's ampdoc.\n    return getServiceForDocOrNullInternal(element, id);\n  }\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedScope(embedWin, id, service) {\n  const topWin = getTopWindow(embedWin);\n  devAssert(\n    embedWin != topWin,\n    'Service override can only be installed in embed window: %s',\n    id\n  );\n  devAssert(\n    !isServiceRegistered(embedWin, id),\n    'Service override has already been installed: %s',\n    id\n  );\n  const ampdocFieExperimentOn = isExperimentOn(topWin, 'ampdoc-fie');\n  if (ampdocFieExperimentOn) {\n    const ampdoc = getAmpdoc(embedWin.document);\n    registerServiceInternal(\n      getAmpdocServiceHolder(ampdoc),\n      ampdoc,\n      id,\n      () => service,\n      /* override */ true\n    );\n  } else {\n    registerServiceInternal(embedWin, embedWin, id, () => service);\n    getServiceInternal(embedWin, id); // Force service to build.\n  }\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\nfunction getServiceForDocOrNullInternal(element, id) {\n  const ampdoc = getAmpdoc(element);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = toWin(\n      /** @type {!Document} */ (nodeOrDoc.ownerDocument || nodeOrDoc)\n        .defaultView\n    );\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (getService(\n    win,\n    'ampdoc'\n  ));\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n * @template T\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.ctor = null;\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n */\nfunction registerServiceInternal(holder, context, id, ctor, opt_override) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n    };\n  }\n\n  if (!opt_override && (s.ctor || s.obj)) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  // TODO(dvoytenko): Consider marking holder as destroyed for later-arriving\n  // service to be canceled automatically.\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then(instance =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * Adopts an embeddable (implements `EmbeddableService` interface) service\n * in embed scope.\n * @param {!Window} embedWin\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} serviceClass\n * @suppress {missingProperties}\n * @return {boolean}\n */\nexport function installServiceInEmbedIfEmbeddable(embedWin, serviceClass) {\n  const isEmbeddableService =\n    typeof serviceClass.installInEmbedWindow === 'function';\n  if (!isEmbeddableService) {\n    return false;\n  }\n  const frameElement = dev().assertElement(\n    embedWin.frameElement,\n    'frameElement not found for embed'\n  );\n  const ampdoc = getAmpdoc(frameElement);\n  serviceClass.installInEmbedWindow(embedWin, ampdoc);\n  return true;\n}\n\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    () => service\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have an implementation or a constructor.\n  return !!(service && (service.ctor || service.obj));\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, resolve, reject} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getAmpdoc,\n  getExistingServiceForDocInEmbedScope,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServicePromiseForDoc,\n} from './service';\nimport {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from './element-service';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (getElementServiceForDoc(\n      element,\n      'access',\n      'amp-access'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'access',\n      'amp-access'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (getElementServiceForDoc(\n      element,\n      'subscriptions',\n      'amp-subscriptions'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'subscriptions',\n      'amp-subscriptions'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'action'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'standard-actions'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (getElementServiceForDoc(\n      element,\n      'activity',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (getService(\n      window,\n      'ampdoc'\n    ));\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (getElementServiceForDoc(\n      element,\n      'amp-analytics-instrumentation',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'amp-analytics-instrumentation',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (getService(\n      window,\n      'batched-xhr'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (getElementServiceIfAvailableForDocInEmbedScope(\n      element,\n      'bind',\n      'amp-bind'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'cid'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'navigation'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (getElementServiceForDoc(\n      element,\n      'loader',\n      'amp-loader'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (getElementServiceForDoc(\n      element,\n      'standalone',\n      'amp-standalone'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (getService(\n      window,\n      'crypto'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'documentInfo'\n    )).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (getService(\n      window,\n      'extensions'\n    ));\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'form-submit-service'\n    ));\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'hidden-observer'\n    ));\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'history'\n    ));\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'inputmask',\n      'amp-inputmask'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'owners'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (getService(\n      window,\n      'performance'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (getExistingServiceOrNull(\n      window,\n      'performance'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (getService(\n      window,\n      'platform'\n    ));\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (getServiceForDoc(\n      element,\n      'position-observer'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'resources'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'resources'\n    ));\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?{incomingFragment: string, outgoingFragment: string}>}\n   */\n  static shareTrackingForOrNull(win) {\n    return /** @type {!Promise<?{incomingFragment: string, outgoingFragment: string}>} */ (getElementServiceIfAvailable(\n      win,\n      'share-tracking',\n      'amp-share-tracking',\n      true\n    ));\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (getElementServiceIfAvailable(win, 'localization', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  static localizationService(win) {\n    return getService(win, 'localization');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (getElementServiceIfAvailable(win, 'story-analytics', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreServiceV01(win) {\n    return getService(win, 'story-store');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestServiceV01(win) {\n    return getService(win, 'story-request-v01');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNullV01(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (getElementServiceIfAvailable(win, 'localization-v01', 'amp-story', true))\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  static localizationServiceV01(win) {\n    return getService(win, 'localization-v01');\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>}\n   */\n  static viewerIntegrationVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>} */\n      (getElementServiceIfAvailable(\n        win,\n        'viewer-integration-variable',\n        'amp-viewer-integration',\n        true\n      ))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'storage'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesFor(window) {\n    return /** @type {!./service/template-impl.Templates} */ (getService(\n      window,\n      'templates'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (getService(\n      window,\n      'timer'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'url-replace'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (getElementServiceForDoc(\n        element,\n        'userNotificationManager',\n        'amp-user-notification'\n      ))\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (getElementServiceIfAvailableForDoc(\n        element,\n        'consentPolicyManager',\n        'amp-consent'\n      ))\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'geo',\n      'amp-geo',\n      true\n    ));\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>}\n   */\n  static userLocationForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'user-location',\n      'amp-user-location',\n      true\n    ));\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'url'\n    ));\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'variant',\n      'amp-experiment',\n      true\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'video-manager'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>}\n   */\n  static viewerAssistanceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>} */\n      (getElementServiceIfAvailableForDoc(\n        element,\n        'amp-viewer-assistance',\n        'amp-viewer-assistance'\n      ))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'viewer'\n    ));\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'viewer'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (getService(\n      window,\n      'vsync'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'viewport'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dict} from './utils/object';\nimport {isArray} from './types';\nimport {toStructuredCloneable} from './utils/xhr-utils';\nimport {userAssert} from './log';\n\n/**\n * @typedef {{\n *   successTemplate: ?(Element|JsonObject|undefined),\n *   errorTemplate: ?(Element|JsonObject|undefined)\n * }}\n */\nexport let SsrTemplateDef;\n\n/**\n * Helper, that manages the proxying of template rendering to the viewer.\n */\nexport class SsrTemplateHelper {\n  /**\n   * @param {string} sourceComponent\n   * @param {!./service/viewer-interface.ViewerInterface} viewer\n   * @param {!./service/template-impl.Templates} templates\n   */\n  constructor(sourceComponent, viewer, templates) {\n    /** @private @const */\n    this.viewer_ = viewer;\n\n    /** @private @const */\n    this.templates_ = templates;\n\n    /** @private @const */\n    this.sourceComponent_ = sourceComponent;\n  }\n\n  /**\n   * Whether the viewer can render templates. A doc-level opt in as\n   * trusted viewers must set this capability explicitly, as a security\n   * measure for potential abuse of feature.\n   * @return {boolean}\n   */\n  isSupported() {\n    const ampdoc = this.viewer_.getAmpDoc();\n    if (ampdoc.isSingleDoc()) {\n      const htmlElement = ampdoc.getRootNode().documentElement;\n      if (htmlElement.hasAttribute('allow-viewer-render-template')) {\n        return this.viewer_.hasCapability('viewerRenderTemplate');\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Proxies xhr and template rendering to the viewer and renders the response.\n   * @param {!Element} element\n   * @param {!FetchRequestDef} request The fetch/XHR related data.\n   * @param {?SsrTemplateDef=} opt_templates Response templates to pass into\n   *     the payload. If provided, finding the template in the passed in\n   *     element is not attempted.\n   * @param {!Object=} opt_attributes Additional JSON to send to viewer.\n   * @return {!Promise<?JsonObject|string|undefined>}\n   */\n  fetchAndRenderTemplate(\n    element,\n    request,\n    opt_templates = null,\n    opt_attributes = {}\n  ) {\n    let mustacheTemplate;\n    if (!opt_templates) {\n      mustacheTemplate = this.templates_.maybeFindTemplate(element);\n    }\n    return this.viewer_.sendMessageAwaitResponse(\n      'viewerRenderTemplate',\n      this.buildPayload_(\n        request,\n        mustacheTemplate,\n        opt_templates,\n        opt_attributes\n      )\n    );\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {(?JsonObject|string|undefined|!Array)} data\n   * @return {!Promise}\n   */\n  renderTemplate(element, data) {\n    let renderTemplatePromise;\n    if (this.isSupported()) {\n      userAssert(\n        typeof data['html'] === 'string',\n        'Server side html response must be defined'\n      );\n      renderTemplatePromise = this.templates_.findAndSetHtmlForTemplate(\n        element,\n        /** @type {string} */ (data['html'])\n      );\n    } else if (isArray(data)) {\n      renderTemplatePromise = this.templates_.findAndRenderTemplateArray(\n        element,\n        /** @type {!Array} */ (data)\n      );\n    } else {\n      renderTemplatePromise = this.templates_.findAndRenderTemplate(\n        element,\n        /** @type {!JsonObject} */ (data)\n      );\n    }\n\n    return renderTemplatePromise;\n  }\n\n  /**\n   * @param {!FetchRequestDef} request\n   * @param {?Element|undefined} mustacheTemplate\n   * @param {?SsrTemplateDef=} opt_templates\n   * @param {!Object=} opt_attributes\n   * @return {!JsonObject}\n   * @private\n   */\n  buildPayload_(request, mustacheTemplate, opt_templates, opt_attributes = {}) {\n    const ampComponent = dict({'type': this.sourceComponent_});\n\n    const successTemplateKey = 'successTemplate';\n    const successTemplate =\n      opt_templates && opt_templates[successTemplateKey]\n        ? opt_templates[successTemplateKey]\n        : mustacheTemplate;\n    if (successTemplate) {\n      ampComponent[successTemplateKey] = {\n        'type': 'amp-mustache',\n        'payload': successTemplate./*REVIEW*/ innerHTML,\n      };\n    }\n\n    const errorTemplateKey = 'errorTemplate';\n    const errorTemplate =\n      opt_templates && opt_templates[errorTemplateKey]\n        ? opt_templates[errorTemplateKey]\n        : null;\n    if (errorTemplate) {\n      ampComponent[errorTemplateKey] = {\n        'type': 'amp-mustache',\n        'payload': errorTemplate./*REVIEW*/ innerHTML,\n      };\n    }\n\n    if (opt_attributes) {\n      Object.assign(ampComponent, opt_attributes);\n    }\n\n    const data = dict({\n      'originalRequest': toStructuredCloneable(\n        request.xhrUrl,\n        request.fetchOpt\n      ),\n      'ampComponent': ampComponent,\n    });\n\n    return data;\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.startsWith.\n * @param {string} string\n * @param {string} prefix\n * @return {boolean}\n */\nexport function startsWith(string, prefix) {\n  if (prefix.length > string.length) {\n    return false;\n  }\n  return string.lastIndexOf(prefix, 0) == 0;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {*} TODO(#23582): Specify return type\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CommonSignals} from './common-signals';\nimport {Services} from './services';\nimport {dev, devAssert, rethrowAsync} from './log';\nimport {getAmpdoc} from './service';\nimport {insertAfterOrAtStart, waitForBodyOpenPromise} from './dom';\nimport {map} from './utils/object';\nimport {setStyles} from './style';\nimport {waitForServices} from './render-delaying-services';\n\nconst TRANSFORMER_PROP = '__AMP_CSS_TR';\nconst STYLE_MAP_PROP = '__AMP_CSS_SM';\n\n/**\n * Adds the given css text to the given ampdoc.\n *\n * The style tags will be at the beginning of the head before all author\n * styles. One element can be the main runtime CSS. This is guaranteed\n * to always be the first stylesheet in the doc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc The ampdoc that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are available.\n *     Not using a promise, because this is synchronous when possible.\n *     for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\nexport function installStylesForDoc(\n  ampdoc,\n  cssText,\n  cb,\n  opt_isRuntimeCss,\n  opt_ext\n) {\n  const cssRoot = ampdoc.getHeadNode();\n  const style = insertStyleElement(\n    cssRoot,\n    maybeTransform(cssRoot, cssText),\n    opt_isRuntimeCss || false,\n    opt_ext || null\n  );\n\n  if (cb) {\n    const rootNode = ampdoc.getRootNode();\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(rootNode, style)) {\n      cb(style);\n      return style;\n    }\n    // Poll until styles are available.\n    const interval = setInterval(() => {\n      if (styleLoaded(rootNode, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n  return style;\n}\n\n/**\n * Adds the given css text to the given document.\n * TODO(dvoytenko, #22733): Remove this method once FIE/ampdoc migration is\n * done.\n *\n * @param {!Document} doc The document that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are\n *     available. Not using a promise, because this is synchronous when\n *     possible. for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\nexport function installStylesLegacy(\n  doc,\n  cssText,\n  cb,\n  opt_isRuntimeCss,\n  opt_ext\n) {\n  const style = insertStyleElement(\n    dev().assertElement(doc.head),\n    cssText,\n    opt_isRuntimeCss || false,\n    opt_ext || null\n  );\n\n  if (cb) {\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(doc, style)) {\n      cb(style);\n      return style;\n    }\n    // Poll until styles are available.\n    const interval = setInterval(() => {\n      if (styleLoaded(doc, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n  return style;\n}\n\n/**\n * Creates the properly configured style element.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @param {boolean} isRuntimeCss\n * @param {?string} ext\n * @return {!Element}\n */\nfunction insertStyleElement(cssRoot, cssText, isRuntimeCss, ext) {\n  let styleMap = cssRoot[STYLE_MAP_PROP];\n  if (!styleMap) {\n    styleMap = cssRoot[STYLE_MAP_PROP] = map();\n  }\n\n  const isExtCss =\n    !isRuntimeCss && (ext && ext != 'amp-custom' && ext != 'amp-keyframes');\n  const key = isRuntimeCss\n    ? 'amp-runtime'\n    : isExtCss\n    ? `amp-extension=${ext}`\n    : null;\n\n  // Check if it has already been created or discovered.\n  if (key) {\n    const existing = getExistingStyleElement(cssRoot, styleMap, key);\n    if (existing) {\n      if (existing.textContent !== cssText) {\n        existing.textContent = cssText;\n      }\n      return existing;\n    }\n  }\n\n  // Create the new style element and append to cssRoot.\n  const doc = cssRoot.ownerDocument || cssRoot;\n  const style = doc.createElement('style');\n  style./*OK*/ textContent = cssText;\n  let afterElement = null;\n  // Make sure that we place style tags after the main runtime CSS. Otherwise\n  // the order is random.\n  if (isRuntimeCss) {\n    style.setAttribute('amp-runtime', '');\n  } else if (isExtCss) {\n    style.setAttribute('amp-extension', ext || '');\n    afterElement = dev().assertElement(\n      getExistingStyleElement(cssRoot, styleMap, 'amp-runtime')\n    );\n  } else {\n    if (ext) {\n      style.setAttribute(ext, '');\n    }\n    afterElement = cssRoot.lastChild;\n  }\n  insertAfterOrAtStart(cssRoot, style, afterElement);\n  if (key) {\n    styleMap[key] = style;\n  }\n  return style;\n}\n\n/**\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {!Object<string, !Element>} styleMap\n * @param {string} key\n * @return {?Element}\n */\nfunction getExistingStyleElement(cssRoot, styleMap, key) {\n  // Already cached.\n  if (styleMap[key]) {\n    return styleMap[key];\n  }\n  // Check if the style has already been added by the server layout.\n  const existing = cssRoot./*OK*/ querySelector(`style[${key}]`);\n  if (existing) {\n    styleMap[key] = existing;\n    return existing;\n  }\n  // Nothing found.\n  return null;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {function(string):string} transformer\n */\nexport function installCssTransformer(cssRoot, transformer) {\n  cssRoot[TRANSFORMER_PROP] = transformer;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @return {string}\n */\nfunction maybeTransform(cssRoot, cssText) {\n  const transformer = cssRoot[TRANSFORMER_PROP];\n  return transformer ? transformer(cssText) : cssText;\n}\n\n/** @private {boolean} */\nlet bodyMadeVisible = false;\n\n/**\n * @param {boolean} value\n * @visibleForTesting\n */\nexport function setBodyMadeVisibleForTesting(value) {\n  bodyMadeVisible = value;\n}\n\n/**\n * Sets the document's body opacity to 1.\n * If the body is not yet available (because our script was loaded\n * synchronously), polls until it is.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisible(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  const win = /** @type {!Window} */ (doc.defaultView);\n  waitForBodyOpenPromise(doc)\n    .then(() => {\n      return waitForServices(win);\n    })\n    .catch(reason => {\n      rethrowAsync(reason);\n      return [];\n    })\n    .then(services => {\n      bodyMadeVisible = true;\n      setBodyVisibleStyles(doc);\n      const ampdoc = getAmpdoc(doc);\n      ampdoc.signals().signal(CommonSignals.RENDER_START);\n      if (services.length > 0) {\n        const resources = Services.resourcesForDoc(doc.documentElement);\n        resources./*OK*/ schedulePass(1, /* relayoutAll */ true);\n      }\n      try {\n        const perf = Services.performanceFor(win);\n        perf.tick('mbv');\n        perf.flush();\n      } catch (e) {}\n    });\n}\n\n/**\n * Set the document's body opacity to 1. Called in error cases.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisibleRecovery(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  if (bodyMadeVisible) {\n    return;\n  }\n  bodyMadeVisible = true;\n  setBodyVisibleStyles(doc);\n}\n\n/**\n * Make sure that body exists, and make it visible.\n * @param {!Document} doc\n */\nfunction setBodyVisibleStyles(doc) {\n  setStyles(dev().assertElement(doc.body), {\n    opacity: 1,\n    visibility: 'visible',\n    'animation': 'none',\n  });\n}\n\n/**\n * Indicates that the body is always visible. For instance, in case of PWA.\n * This check is on a module level variable, and could be problematic if you are\n * relying on this function across different binaries.\n * @param {!Window} unusedWin\n */\nexport function bodyAlwaysVisible(unusedWin) {\n  bodyMadeVisible = true;\n}\n\n/**\n * Checks whether a style element was registered in the DOM.\n * @param {!Document|!ShadowRoot} doc\n * @param {!Element} style\n * @return {boolean}\n */\nfunction styleLoaded(doc, style) {\n  const sheets = doc.styleSheets;\n  for (let i = 0; i < sheets.length; i++) {\n    const sheet = sheets[i];\n    if (sheet.ownerNode == style) {\n      return true;\n    }\n  }\n  return false;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {dev, devAssert} from './log';\nimport {map} from './utils/object.js';\nimport {startsWith} from './string';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\n/**\n * @export\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @export\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (startsWith(camelCase, '--')) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      styles[k].toString(),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (propertyName) {\n    element.style[propertyName] = /** @type {string} */ (opt_units\n      ? value + opt_units\n      : value);\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  if (style === 'display') {\n    dev().error(\n      'STYLE',\n      '`display` style detected. You must use toggle instead.'\n    );\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    dev().error(\n      'STYLE',\n      '`display` style detected in styles. You must use toggle instead.'\n    );\n  }\n  return styles;\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x}, ${opt_y})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n  return `rotate(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!Object<string, string>}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return /** @type {!Object<string, string>} */ (style) || map();\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst toString_ = Object.prototype.toString;\n\n/**\n * Returns the ECMA [[Class]] of a value\n * @param {*} value\n * @return {string}\n */\nfunction toString(value) {\n  return toString_.call(value);\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport function isArray(value) {\n  return Array.isArray(value);\n}\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString(value) === '[object Object]';\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Checks whether `s` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} s\n * @return {boolean}\n * @template T\n */\nexport function isEnumValue(enumObj, s) {\n  for (const k in enumObj) {\n    if (enumObj[k] === s) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {!Window|null} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {tryDecodeUriComponent_} from './url-try-decode-uri-component';\n\nconst regex = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * DO NOT import the function from this file. Instead, import parseQueryString\n * from `src/url.js`.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString_(queryString) {\n  const params = /** @type {!JsonObject} */ (Object.create(null));\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = regex.exec(queryString))) {\n    const name = tryDecodeUriComponent_(match[1], match[1]);\n    const value = match[2] ? tryDecodeUriComponent_(match[2], match[2]) : '';\n    params[name] = value;\n  }\n  return params;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * DO NOT import the function from this file. Instead, import\n * tryDecodeUriComponent from `src/url.js`.\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent_(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LruCache} from './utils/lru-cache';\nimport {dict, hasOwn} from './utils/object';\nimport {endsWith, startsWith} from './string';\nimport {getMode} from './mode';\nimport {isArray} from './types';\nimport {parseQueryString_} from './url-parse-query-string';\nimport {tryDecodeUriComponent_} from './url-try-decode-uri-component';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\n/**\n * @type {!JsonObject}\n */\nconst SERVING_TYPE_PREFIX = dict({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n  // Actions viewer\n  'action': true,\n});\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet a;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet cache;\n\n/** @private @const Matches amp_js_* parameters in query string. */\nconst AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n\n/** @private @const Matches amp_gsa parameters in query string. */\nconst AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n\n/** @private @const Matches amp_r parameters in query string. */\nconst AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n\n/** @private @const Matches amp_kit parameters in query string. */\nconst AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n\n/** @private @const Matches usqp parameters from goog experiment in query string. */\nconst GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\n\nconst INVALID_PROTOCOLS = [\n  /*eslint no-script-url: 0*/ 'javascript:',\n  /*eslint no-script-url: 0*/ 'data:',\n  /*eslint no-script-url: 0*/ 'vbscript:',\n];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a = /** @type {!HTMLAnchorElement} */ (self.document.createElement('a'));\n    cache = self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, opt_nocache ? null : cache);\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(a, url, opt_cache) {\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = getMode().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  const field = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    const v = params[k];\n    if (v == null) {\n      continue;\n    } else if (isArray(v)) {\n      for (let i = 0; i < v.length; i++) {\n        const sv = /** @type {string} */ (v[i]);\n        s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n      }\n    } else {\n      const sv = /** @type {string} */ (v);\n      s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  // (erwinm, #4560): type cast necessary until #4560 is fixed.\n  const theUrlString = /** @type {string} */ (urlString);\n  userAssert(\n    isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    theUrlString\n  );\n  return theUrlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * This function is implemented in a separate file to avoid a circular\n * dependency.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  return parseQueryString_(queryString);\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.cdnProxyRegex.test(url.origin);\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.localhostRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const parsed = parseUrlDeprecated(url);\n  const search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const search = urlSearch\n    .replace(AMP_JS_PARAMS_REGEX, '')\n    .replace(AMP_GSA_PARAMS_REGEX, '')\n    .replace(AMP_R_PARAMS_REGEX, '')\n    .replace(AMP_KIT_PARAMS_REGEX, '')\n    .replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '')\n    .replace(/^[?&]/, ''); // Removes first ? or &.\n  return search ? '?' + search : '';\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}=[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX[prefix],\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  if (typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private Visible for testing.\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (startsWith(relativeUrlString.toLowerCase(), relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (startsWith(relativeUrlString, '//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (startsWith(relativeUrlString, '/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} opt_fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, opt_fallback) {\n  return tryDecodeUriComponent_(component, opt_fallback);\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n  }\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// TODO(rsimha, #15334): Enable this rule.\n/* eslint jsdoc/check-types: 0 */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nexport function once(fn) {\n  let evaluated = false;\n  let retValue = null;\n  let callback = fn;\n  return (...args) => {\n    if (!evaluated) {\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n    return retValue;\n  };\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dev} from '../log';\n\n/** @const {string} */\nconst TAG = 'lru-cache';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = Object.create(null);\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    dev().warn(TAG, 'Trimming LRU cache');\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isObject} from '../types';\n\n/* @const */\nconst hasOwn_ = Object.prototype.hasOwnProperty;\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {t, s, d} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    Object.keys(s).forEach(key => {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          return;\n        }\n      }\n      t[key] = newValue;\n    });\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /**\n   * Creates an instance of Deferred.\n   */\n  constructor() {\n    let resolve, reject;\n\n    /**\n     * @const {!Promise<T>}\n     */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n\n    /**\n     * @const {function(T=)}\n     */\n    this.resolve = resolve;\n\n    /**\n     * @const {function(*=)}\n     */\n    this.reject = reject;\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise(resolve => {\n    resolve(fn());\n  });\n}\n\n/**\n * Returns a promise which resolves if a threshold amount of the given promises\n * resolve, and rejects otherwise.\n * @param {!Array<!Promise>} promises The array of promises to test.\n * @param {number} count The number of promises that must resolve for the\n *     returned promise to resolve.\n * @return {!Promise} A promise that resolves if any of the given promises\n *     resolve, and which rejects otherwise.\n */\nexport function some(promises, count = 1) {\n  return new Promise((resolve, reject) => {\n    count = Math.max(count, 0);\n    const extra = promises.length - count;\n    if (extra < 0) {\n      reject(new Error('not enough promises to resolve'));\n    }\n    if (promises.length == 0) {\n      resolve([]);\n    }\n    const values = [];\n    const reasons = [];\n\n    const onFulfilled = value => {\n      if (values.length < count) {\n        values.push(value);\n      }\n      if (values.length == count) {\n        resolve(values);\n      }\n    };\n    const onRejected = reason => {\n      if (reasons.length <= extra) {\n        reasons.push(reason);\n      }\n      if (reasons.length > extra) {\n        reject(reasons);\n      }\n    };\n    for (let i = 0; i < promises.length; i++) {\n      Promise.resolve(promises[i]).then(onFulfilled, onRejected);\n    }\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!Promise>=} opt_promises\n   */\n  constructor(opt_promises) {\n    let resolve_, reject_;\n    /** @private @const {!Promise} */\n    this.promise_ = new Promise((resolve, reject) => {\n      resolve_ = resolve;\n      reject_ = reject;\n    });\n\n    /** @private */\n    this.resolve_ = resolve_;\n\n    /** @private */\n    this.reject_ = reject_;\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (let i = 0; i < opt_promises.length; i++) {\n        this.add(opt_promises[i]);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!Promise} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    Promise.resolve(promise).then(\n      result => {\n        if (this.count_ === countAtAdd) {\n          this.resolve_(result);\n        }\n      },\n      error => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.reject_(error);\n        }\n      }\n    );\n    return this.promise_;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.promise_.then(opt_resolve, opt_reject);\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Wraps a given callback and applies a rate limit.\n * It throttles the calls so that no consequent calls have time interval\n * smaller than the given minimal interval.\n *\n * @param {!Window} win\n * @param {function(...*)} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...*)}\n */\nexport function throttle(win, callback, minInterval) {\n  let locker = 0;\n  let nextCallArgs = null;\n\n  /**\n   * @param {!Object} args\n   */\n  function fire(args) {\n    nextCallArgs = null;\n    // Lock the fire for minInterval milliseconds\n    locker = win.setTimeout(waiter, minInterval);\n\n    callback.apply(null, args);\n  }\n\n  /**\n   * Waiter function\n   */\n  function waiter() {\n    locker = 0;\n    // If during the period there're invocations queued up, fire once.\n    if (nextCallArgs) {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function(...args) {\n    if (locker) {\n      nextCallArgs = args;\n    } else {\n      fire(args);\n    }\n  };\n}\n\n/**\n * Wraps a given callback and applies a wait timer, so that minInterval\n * milliseconds must pass since the last call before the callback is actually\n * invoked.\n *\n * @param {!Window} win\n * @param {function(...*)} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...*)}\n */\nexport function debounce(win, callback, minInterval) {\n  let locker = 0;\n  let timestamp = 0;\n  let nextCallArgs = null;\n\n  /**\n   * @param {?Array} args\n   */\n  function fire(args) {\n    nextCallArgs = null;\n    callback.apply(null, args);\n  }\n\n  /**\n   * Wait function for debounce\n   */\n  function waiter() {\n    locker = 0;\n    const remaining = minInterval - (win.Date.now() - timestamp);\n    if (remaining > 0) {\n      locker = win.setTimeout(waiter, remaining);\n    } else {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function(...args) {\n    timestamp = win.Date.now();\n    nextCallArgs = args;\n    if (!locker) {\n      locker = win.setTimeout(waiter, minInterval);\n    }\n  };\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../services';\nimport {devAssert, user, userAssert} from '../log';\nimport {dict, map} from './object';\nimport {fromIterator} from './array';\nimport {\n  getCorsUrl,\n  getWinOrigin,\n  isProxyOrigin,\n  parseUrlDeprecated,\n  serializeQueryString,\n} from '../url';\nimport {getMode} from '../mode';\nimport {isArray, isObject} from '../types';\nimport {isExperimentOn} from '../experiments';\nimport {isFormDataWrapper} from '../form-data-wrapper';\n\n/** @private @const {!Array<string>} */\nconst allowedMethods_ = ['GET', 'POST'];\n\n/** @private @const {!Array<function(*):boolean>} */\nconst allowedJsonBodyTypes_ = [isArray, isObject];\n\n/**\n * Serializes a fetch request so that it can be passed to `postMessage()`,\n * i.e., can be cloned using the\n * [structured clone algorithm](http://mdn.io/Structured_clone_algorithm).\n *\n * The request is serialized in the following way:\n *\n * 1. If the `init.body` is a `FormData`, set content-type header to\n * `multipart/form-data` and transform `init.body` into an\n * `!Array<!Array<string>>` holding the list of form entries, where each\n * element in the array is a form entry (key-value pair) represented as a\n * 2-element array.\n *\n * 2. Return a new object having properties `input` and the transformed\n * `init`.\n *\n * The serialized request is assumed to be de-serialized in the following way:\n *\n * 1.If content-type header starts with `multipart/form-data`\n * (case-insensitive), transform the entry array in `init.body` into a\n * `FormData` object.\n *\n * 2. Pass `input` and transformed `init` to `fetch` (or the constructor of\n * `Request`).\n *\n * Currently only `FormData` used in `init.body` is handled as it's the only\n * type being used in AMP runtime that needs serialization. The `Headers` type\n * also needs serialization, but callers should not be passing `Headers`\n * object in `init`, as that fails `fetchPolyfill` on browsers that don't\n * support fetch. Some serialization-needing types for `init.body` such as\n * `ArrayBuffer` and `Blob` are already supported by the structured clone\n * algorithm. Other serialization-needing types such as `URLSearchParams`\n * (which is not supported in IE and Safari) and `FederatedCredentials` are\n * not used in AMP runtime.\n *\n * @param {string} input The URL of the XHR to convert to structured\n *     cloneable.\n * @param {!FetchInitDef} init The options of the XHR to convert to structured\n *     cloneable.\n * @return {{input: string, init: !FetchInitDef}} The serialized structurally-\n *     cloneable request.\n * @private\n */\nexport function toStructuredCloneable(input, init) {\n  const newInit = Object.assign({}, init);\n  if (isFormDataWrapper(init.body)) {\n    const wrapper = /** @type {!FormDataWrapperInterface} */ (init.body);\n    newInit.headers['Content-Type'] = 'multipart/form-data;charset=utf-8';\n    newInit.body = fromIterator(wrapper.entries());\n  }\n  return {input, init: newInit};\n}\n\n/**\n * De-serializes a fetch response that was made possible to be passed to\n * `postMessage()`, i.e., can be cloned using the\n * [structured clone algorithm](http://mdn.io/Structured_clone_algorithm).\n *\n * The response is assumed to be serialized in the following way:\n *\n * 1. Transform the entries in the headers of the response into an\n * `!Array<!Array<string>>` holding the list of header entries, where each\n * element in the array is a header entry (key-value pair) represented as a\n * 2-element array. The header key is case-insensitive.\n *\n * 2. Include the header entry list and `status` and `statusText` properties\n * of the response in as `headers`, `status` and `statusText` properties of\n * `init`.\n *\n * 3. Include the body of the response serialized as string in `body`.\n *\n * 4. Return a new object having properties `body` and `init`.\n *\n * The response is de-serialized in the following way:\n *\n * 1. If the `Response` type is supported and `responseType` is not\n * document, pass `body` and `init` directly to the constructor of `Response`.\n *\n * 2. Otherwise, populate a fake XHR object to pass to `FetchResponse` as if\n * the response is returned by the fetch polyfill.\n *\n * 3. If `responseType` is `document`, also parse the body and populate\n * `responseXML` as a `Document` type.\n *\n * @param {JsonObject|string|undefined} response The structurally-cloneable\n *     response to convert back to a regular Response.\n * @param {string|undefined} responseType The original response type used to\n *     initiate the XHR.\n * @return {!Response} The deserialized regular response.\n * @private\n */\nexport function fromStructuredCloneable(response, responseType) {\n  userAssert(isObject(response), 'Object expected: %s', response);\n\n  const isDocumentType = responseType == 'document';\n  if (!isDocumentType) {\n    // Use native `Response` type if available for performance. If response\n    // type is `document`, we must fall back to `FetchResponse` polyfill\n    // because callers would then rely on the `responseXML` property being\n    // present, which is not supported by the Response type.\n    return new Response(response['body'], response['init']);\n  }\n\n  const lowercasedHeaders = map();\n  const data = {\n    status: 200,\n    statusText: 'OK',\n    /**\n     * @param {string} name\n     * @return {string}\n     */\n    getResponseHeader(name) {\n      return lowercasedHeaders[String(name).toLowerCase()] || null;\n    },\n  };\n\n  if (response['init']) {\n    const init = response['init'];\n    if (isArray(init.headers)) {\n      init.headers.forEach(entry => {\n        const headerName = entry[0];\n        const headerValue = entry[1];\n        lowercasedHeaders[String(headerName).toLowerCase()] = String(\n          headerValue\n        );\n      });\n    }\n    if (init.status) {\n      data.status = parseInt(init.status, 10);\n    }\n    if (init.statusText) {\n      data.statusText = String(init.statusText);\n    }\n  }\n\n  return new Response(response['body'] ? String(response['body']) : '', data);\n}\n\n/**\n * Intercepts the XHR and proxies it through the viewer if necessary.\n *\n * XHRs are intercepted if all of the following are true:\n * - The AMP doc is in single doc mode\n * - The requested resource is not a 1p request.\n * - The viewer has the `xhrInterceptor` capability\n * - The Viewer is a trusted viewer or AMP is currently in developement mode\n * - The AMP doc is opted-in for XHR interception (`<html>` tag has\n *   `allow-xhr-interception` attribute)\n *\n * @param {!Window} win\n * @param {?../service/ampdoc-impl.AmpDoc} ampdocSingle\n * @param {string} input The URL of the XHR which may get intercepted.\n * @param {!FetchInitDef} init The options of the XHR which may get\n *     intercepted.\n * @return {!Promise<!Response|undefined>}\n *     A response returned by the interceptor if XHR is intercepted or\n *     `Promise<undefined>` otherwise.\n * @private\n */\nexport function getViewerInterceptResponse(win, ampdocSingle, input, init) {\n  if (!ampdocSingle) {\n    return Promise.resolve();\n  }\n\n  const whenUnblocked = init.prerenderSafe\n    ? Promise.resolve()\n    : ampdocSingle.whenFirstVisible();\n  const viewer = Services.viewerForDoc(ampdocSingle);\n  const urlIsProxy = isProxyOrigin(input);\n  const viewerCanIntercept = viewer.hasCapability('xhrInterceptor');\n  const interceptorDisabledForLocalDev =\n    init.bypassInterceptorForDev && getMode(win).localDev;\n  if (urlIsProxy || !viewerCanIntercept || interceptorDisabledForLocalDev) {\n    return whenUnblocked;\n  }\n\n  const htmlElement = ampdocSingle.getRootNode().documentElement;\n  const docOptedIn = htmlElement.hasAttribute('allow-xhr-interception');\n  if (!docOptedIn) {\n    return whenUnblocked;\n  }\n\n  return whenUnblocked\n    .then(() => viewer.isTrustedViewer())\n    .then(viewerTrusted => {\n      if (\n        !(\n          viewerTrusted ||\n          getMode(win).localDev ||\n          isExperimentOn(win, 'untrusted-xhr-interception')\n        )\n      ) {\n        return;\n      }\n      const messagePayload = dict({\n        'originalRequest': toStructuredCloneable(input, init),\n      });\n      return viewer\n        .sendMessageAwaitResponse('xhr', messagePayload)\n        .then(response => fromStructuredCloneable(response, init.responseType));\n    });\n}\n\n/**\n * Sets up URL based on ampCors\n * @param {!Window} win\n * @param {string} input\n * @param {!FetchInitDef} init The options of the XHR which may get\n * intercepted.\n * @return {string}\n */\nexport function setupInput(win, input, init) {\n  devAssert(typeof input == 'string', 'Only URL supported: %s', input);\n  if (init.ampCors !== false) {\n    input = getCorsUrl(win, input);\n  }\n  return input;\n}\n\n/**\n * Sets up and normalizes the FetchInitDef\n *\n * @param {?FetchInitDef=} opt_init Fetch options object.\n * @param {string=} opt_accept The HTTP Accept header value.\n * @return {!FetchInitDef}\n */\nexport function setupInit(opt_init, opt_accept) {\n  const init = opt_init || {};\n\n  // In particular, Firefox does not tolerate `null` values for\n  // `credentials`.\n  const creds = init.credentials;\n  devAssert(\n    creds === undefined || creds == 'include' || creds == 'omit',\n    'Only credentials=include|omit support: %s',\n    creds\n  );\n\n  init.method = normalizeMethod_(init.method);\n  init.headers = init.headers || dict({});\n  if (opt_accept) {\n    init.headers['Accept'] = opt_accept;\n  }\n\n  // In edge a `TypeMismatchError` is thrown when body is set to null.\n  devAssert(init.body !== null, 'fetch `body` can not be `null`');\n\n  return init;\n}\n\n/**\n *\n * Sets up AMPSpecific CORS headers.\n * @param {!Window} win\n * @param {string} input\n * @param {?FetchInitDef=} init\n * @return {!FetchInitDef}\n */\nexport function setupAMPCors(win, input, init) {\n  init = init || {};\n  // For some same origin requests, add AMP-Same-Origin: true header to allow\n  // publishers to validate that this request came from their own origin.\n  const currentOrigin = getWinOrigin(win);\n  const targetOrigin = parseUrlDeprecated(input).origin;\n  if (currentOrigin == targetOrigin) {\n    init['headers'] = init['headers'] || {};\n    init['headers']['AMP-Same-Origin'] = 'true';\n  }\n  return init;\n}\n\n/**\n * @param {?FetchInitDef=} init\n * @return {!FetchInitDef}\n */\nexport function setupJsonFetchInit(init) {\n  const fetchInit = setupInit(init, 'application/json');\n  if (fetchInit.method == 'POST' && !isFormDataWrapper(fetchInit.body)) {\n    // Assume JSON strict mode where only objects or arrays are allowed\n    // as body.\n    devAssert(\n      allowedJsonBodyTypes_.some(test => test(fetchInit.body)),\n      'body must be of type object or array. %s',\n      fetchInit.body\n    );\n\n    // Content should be 'text/plain' to avoid CORS preflight.\n    fetchInit.headers['Content-Type'] =\n      fetchInit.headers['Content-Type'] || 'text/plain;charset=utf-8';\n    const headerContentType = fetchInit.headers['Content-Type'];\n    // Cast is valid, because we checked that it is not form data above.\n    if (headerContentType === 'application/x-www-form-urlencoded') {\n      fetchInit.body = serializeQueryString(\n        /** @type {!JsonObject} */ (fetchInit.body)\n      );\n    } else {\n      fetchInit.body = JSON.stringify(\n        /** @type {!JsonObject} */ (fetchInit.body)\n      );\n    }\n  }\n  return fetchInit;\n}\n\n/**\n * Normalized method name by uppercasing.\n * @param {string|undefined} method\n * @return {string}\n * @private\n */\nfunction normalizeMethod_(method) {\n  if (method === undefined) {\n    return 'GET';\n  }\n  method = method.toUpperCase();\n  devAssert(\n    allowedMethods_.includes(method),\n    'Only one of %s is currently allowed. Got %s',\n    allowedMethods_.join(', '),\n    method\n  );\n  return method;\n}\n\n/**\n * If 415 or in the 5xx range.\n * @param {number} status\n * @return {boolean}\n */\nfunction isRetriable(status) {\n  return status == 415 || (status >= 500 && status < 600);\n}\n\n/**\n * Returns the response if successful or otherwise throws an error.\n * @param {!Response} response\n * @return {!Promise<!Response>}\n * @private Visible for testing\n */\nexport function assertSuccess(response) {\n  return new Promise(resolve => {\n    if (response.ok) {\n      return resolve(response);\n    }\n\n    const {status} = response;\n    const err = user().createError(`HTTP error ${status}`);\n    err.retriable = isRetriable(status);\n    // TODO(@jridgewell, #9448): Callers who need the response should\n    // skip processing.\n    err.response = response;\n    throw err;\n  });\n}\n\n/**\n * Returns a promise resolving to a string identity token if the element\n * contains the 'crossorigin' attribute and the amp-viewer-assistance extension\n * is present. Resolves to undefined otherwise.\n * @param {!Element} element\n * @return {!Promise<undefined>}\n */\nexport function getViewerAuthTokenIfAvailable(element) {\n  const crossOriginAttr = element.getAttribute('crossorigin');\n  if (\n    crossOriginAttr &&\n    crossOriginAttr.trim() === 'amp-viewer-auth-token-via-post'\n  ) {\n    return (\n      Services.viewerAssistanceForDocOrNull(element)\n        .then(va => {\n          userAssert(\n            va,\n            'crossorigin=\"amp-viewer-auth-token-post\" ' +\n              'requires amp-viewer-assistance extension.'\n          );\n          return va.getIdTokenPromise();\n        })\n        // If crossorigin attr is present, resolve with token or empty string.\n        .then(token => token || '')\n        .catch(() => '')\n    );\n  }\n  // If crossorigin attribute is missing, always resolve with undefined.\n  return Promise.resolve(undefined);\n}\n","/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n"]}