{"version":3,"sources":["regexp/wrapper","node_modules/browser-pack/_prelude.js","amp-ad.js","ads/_a4a-config.js","ads/_config.js","ads/google/a4a/shared/content-recommendation.js","ads/google/a4a/shared/url-builder.js","ads/google/a4a/utils.js","ads/google/utils.js","build/amp-ad-0.1.css.js","extensions/amp-ad-network-cloudflare-impl/0.1/cloudflare-a4a-config.js","extensions/amp-ad-network-gmossp-impl/0.1/gmossp-a4a-config.js","extensions/amp-ad-network-triplelift-impl/0.1/triplelift-a4a-config.js","extensions/amp-ad/0.1/amp-ad-3p-impl.js","extensions/amp-ad/0.1/amp-ad-custom.js","extensions/amp-ad/0.1/amp-ad-ui.js","extensions/amp-ad/0.1/amp-ad-xorigin-iframe-handler.js","extensions/amp-ad/0.1/amp-ad.js","extensions/amp-ad/0.1/concurrent-load.js","src/3p-frame-messaging.js","src/3p-frame.js","src/ad-cid.js","src/ad-helper.js","src/amp-events.js","src/analytics.js","src/common-signals.js","src/config.js","src/consent-state.js","src/consent.js","src/css.js","src/document-ready.js","src/dom.js","src/element-service.js","src/error.js","src/event-helper-listen.js","src/event-helper.js","src/experiments.js","src/exponential-backoff.js","src/get-html.js","src/iframe-attributes.js","src/iframe-helper.js","src/ini-load.js","src/internal-version.js","src/intersection-observer.js","src/json.js","src/layout-rect.js","src/layout.js","src/log.js","src/mode-object.js","src/mode.js","src/render-delaying-services.js","src/service.js","src/service/mutator-interface.js","src/service/resources-interface.js","src/service/variable-source.js","src/services.js","src/static-template.js","src/string.js","src/style-installer.js","src/style.js","src/types.js","src/url-parse-query-string.js","src/url-try-decode-uri-component.js","src/url.js","src/utils/array.js","src/utils/dom-fingerprint.js","src/utils/function.js","src/utils/lru-cache.js","src/utils/math.js","src/utils/object.js","src/utils/promise.js","src/utils/rate-limit.js","third_party/css-escape/css-escape.js"],"names":[],"mappings":"AAAA;ACAA;ACCA;AACA;AACA;AACA;AACA;AACA;ACUA;ADRA;ACSA;ADPA;ACQA;ADNA;ACOA;ADLA;ACdA;ADgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;ADWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AAEA;ADUA;AACA;AACA;AACA;ACTO;AACL;AACE;AACE;AAAW;AAAA;AACX;AAAU;AAAA;AACV;AAAe;AAAA;AACf;AACA;AACA;AACA;AAAQ;AAAA;AAER;AACA;AACA;AACA;ADkBN;AC9BsB;AAcnB;ADmBH;ACjBE;AACD;AAED;ADkBA;AACA;AACA;AACA;AACA;AClBO;AACL;AACA;AACA;AACA;AAJ+B;ADyBjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEjFA;AFmFA;AEnGA;AFqGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEjGA;AFmGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEjGA;AAEA;AFkGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEjGA;AFmGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGjLA;AHmLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGjLA;AHmLA;AACA;AACA;AACA;AACA;AACA;AGjLA;AHmLA;AACA;AACA;AGjLO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVwB;AAa1B;AHkLA;AACA;AACA;AACA;AACA;AACA;AGlLO;AACL;AACA;AACA;AAHiC;AAMnC;AHmLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGnLO;AAEP;AHoLA;AACA;AACA;AACA;AACA;AGpLA;AAEA;AHqLA;AACA;AACA;AACA;AGpLA;AAEA;AHqLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGpLA;AAYA;AH2KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG1KA;AAYA;AHiKA;AACA;AACA;AACA;AACA;AGhKA;AASA;AAEA;AAMA;AHoJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGnJE;AACA;AACE;AACA;AAEA;AHoJJ;AGnJI;AAEA;AHoJJ;AACA;AACA;AACA;AACA;AGnJI;AAEA;AHoJJ;AACA;AACA;AACA;AACA;AGnJI;AAEA;AHoJJ;AACA;AACA;AACA;AACA;AGnJI;AAEA;AHoJJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGnJI;AACD;AAGH;AHmJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGrJO;AACL;AACE;AACE;AACA;AACA;AACA;AAMA;AACE;AACA;AACA;AACA;AACA;AALK;AAOR;AACC;AHkJN;AGjJM;AACE;AACA;AACA;AACA;AACA;AALK;AAOR;AACF;AACC;AHmJJ;AGlJI;AACE;AACA;AACA;AACA;AACA;AALK;AAOR;AACF;AAED;AHmJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGnJO;AHqJP;AGnJA;AHqJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGtJO;AACL;AHwJF;AGvJE;AACE;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARK;AAUR;AHyJH;AGvJE;AHyJF;AGxJE;AAIE;AACA;AACA;AACD;AACC;AACA;AACA;AACD;AHuJH;AGrJE;AACA;AAKA;AAEA;AHkJF;AG5IE;AACE;AACE;AACA;AACA;AACA;AACA;AACA;AANK;AAQR;AH8IH;AG7IE;AACE;AACA;AACA;AACA;AACA;AALK;AAOR;AAED;AH8IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG9IA;AACE;AACA;AHgJF;AG/IE;AACE;AACD;AHiJH;AGhJE;AACE;AACD;AHkJH;AGjJE;AACE;AACD;AHmJH;AGlJE;AACE;AACE;AADK;AAGR;AHoJH;AGlJE;AAAM;AAA2B;AACjC;AAAM;AAAsB;AAC5B;AAAM;AAAsB;AH0J9B;AGrJE;AAIE;AACE;AADK;AAGR;AHoJH;AGlJE;AACE;AACE;AADK;AAMR;AHiJH;AG/IE;AAAM;AAAsB;AAC5B;AAAM;AAAsB;AHqJ9B;AGpJE;AACE;AHsJJ;AGrJI;AACE;AACE;AADK;AAGR;AHuJL;AGtJI;AACA;AHwJJ;AGvJI;AACE;AACE;AADK;AAGR;AHyJL;AGxJI;AACD;AH0JH;AGzJE;AACE;AACA;AACA;AAHK;AAKR;AAED;AH0JA;AACA;AACA;AACA;AACA;AG1JA;AACE;AACE;AAAQ;AAAa;AAAd;AACR;AACC;AAAQ;AAAuB;AAAxB;AACR;AACC;AAAQ;AAAuB;AAAxB;AACR;AACC;AAAQ;AAAuB;AAAxB;AACR;AACC;AAAQ;AAAuB;AAAxB;AACR;AACF;AAED;AH0KA;AACA;AACA;AACA;AACA;AACA;AACA;AG1KA;AACE;AAGD;AAED;AHyKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGzKA;AACE;AACD;AAED;AH0KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG1KA;AACE;AACD;AAED;AH2KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG3KA;AACE;AACA;AACA;AH6KF;AG3KE;AACE;AACE;AACA;AACA;AAHK;AAKR;AH6KH;AG5KE;AACE;AACE;AACA;AACA;AAHK;AAKR;AH8KH;AG5KE;AAAQ;AAAkB;AAAnB;AACR;AAED;AHgLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGhLA;AAME;AAEA;AH4KF;AG3KE;AACA;AACA;AAEA;AAAQ;AAAuB;AAAxB;AACR;AAED;AH8KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG9KA;AACE;AAEI;AAA4B;AACjC;AAED;AH+KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AG/KA;AACE;AACA;AHiLF;AGhLE;AAIE;AACD;AH+KH;AG9KE;AACD;AHgLD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIhtBA;AJktBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIhtBA;AACO;AAEP;AJitBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIltBO;AAML;AACA;AAUA;AJssBF;AIrsBE;AACE;AACD;AJusBH;AItsBE;AJwsBF;AIvsBE;AACE;AACA;AJysBJ;AIxsBI;AACE;AACD;AJ0sBL;AIzsBI;AACA;AACA;AJ2sBJ;AI1sBI;AACE;AAAuB;AJ6sB7B;AIzsBM;AACE;AACD;AJ2sBP;AI1sBM;AACE;AACD;AJ4sBP;AI3sBM;AACD;AJ6sBL;AI5sBI;AACA;AACD;AJ8sBH;AI7sBE;AACE;AACD;AJ+sBH;AI9sBE;AACD;AJgtBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK/yBA;ALizBA;AKhzBA;ALkzBA;AKjzBA;ALmzBA;AKlzBA;ALozBA;AKnzBA;ALqzBA;AKpzBA;ALszBA;AKrzBA;ALuzBA;AKlzBA;ALozBA;AKnzBA;ALqzBA;AKpzBA;ALszBA;AKrzBA;ALuzBA;AKtzBA;ALwzBA;AKvzBA;ALyzBA;AKxzBA;AL0zBA;AKzzBA;AL2zBA;AK71BA;AL+1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKz0BA;AACA;AAEA;AL00BA;AKz0BA;AAEA;AL00BA;AKz0BA;AACE;AACA;AACA;AAH0B;AAM5B;AL00BA;AKz0BO;AACL;AACA;AACA;AACA;AAJmC;AAOrC;AL00BA;AACA;AACA;AACA;AACA;AK10BA;AACE;AACA;AACA;AACA;AAJ2B;AAO7B;AL20BA;AK10BO;AAEP;AL20BA;AACA;AK30BO;AAEP;AL40BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK50BO;AAEP;AL60BA;AACA;AACA;AK70BO;AAEP;AL80BA;AACA;AACA;AACA;AK90BO;AAEP;AL+0BA;AACA;AACA;AACA;AACA;AK/0BO;AAA0B;AAAe;AAAhB;AAEhC;ALm1BA;AACA;AKn1BA;AAEA;ALo1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKn1BA;AACE;AAMD;AAED;AL+0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK/0BO;AACL;AAID;AAED;AL60BA;AACA;AACA;AACA;AACA;AACA;AK70BO;AACL;AACD;AAED;AL80BA;AACA;AACA;AACA;AACA;AACA;AK90BO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAV6C;AAa7C;AL+0BF;AK90BE;AACE;AACD;ALg1BH;AK/0BE;AAID;AAED;AL60BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK70BO;AAAuD;AAAA;AAE5D;AACA;AACA;AACA;ALg1BF;AK/0BE;AACE;AACD;ALi1BH;AKh1BE;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AAPK;AASR;AAED;ALi1BA;AACA;AACA;AACA;AACA;AACA;AACA;AKj1BO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AAAuB;AACX;AAAO;AADI;ALu1BzB;AK91BsD;ALg2BtD;AKt1BE;ALw1BF;AKv1BE;AAEI;ALw1BN;AKt1BM;AACE;AACD;ALw1BP;AKv1BM;AAGA;AACD;AAEC;AAZF;AAaiB;AAGT;AACE;AACD;AAED;ALo1BZ;AACA;AKp1BY;AAGD;AAXU;AAbjB;AA4BgB;AAEV;AACA;AACA;AACD;AALW;AAQnB;AAED;ALg1BA;AACA;AACA;AACA;AACA;AACA;AKh1BO;AAA8C;AAEnD;AAEA;ALi1BF;AKh1BE;AAGI;AACA;AACD;ALg1BL;AK/0BE;AACA;AAIE;AACA;AL80BJ;AKh1B4B;AAAA;AAAA;ALo1B5B;AACA;AKh1BI;AAAgC;AAAe;AAAhB;AALP;AL21B5B;AKp1BI;ALs1BJ;AKr1BI;AACA;AACA;AACA;AACE;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAhCK;AAkCR;AACF;AAED;ALm1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKn1BO;AAOL;AACA;AACA;AACE;AACA;AACD;AACF;AAED;AL80BA;AACA;AACA;AACA;AACA;AACA;AACA;AK90BO;AACL;AAKD;AAED;AL20BA;AACA;AACA;AACA;AACA;AK30BA;AACE;AACA;AL60BF;AK50BE;AACE;AACA;AACD;AL80BH;AK70BE;AACA;AACD;AAED;AL80BA;AACA;AACA;AACA;AACA;AK90BA;AACE;AACA;AACE;AACD;AACC;AACD;AACF;AAED;AL+0BA;AACA;AACA;AACA;AACA;AACA;AK/0BO;AACL;AACD;AAED;ALg1BA;AACA;AACA;AACA;AACA;AKh1BA;AAAmC;ALm1BnC;AKj1BE;AAAqB;AAEnB;ALm1BJ;AKl1BI;AACE;AACD;ALo1BL;AKn1BI;ALq1BJ;AKp1BI;AAIE;AAAiC;AAAO;AACzC;ALq1BL;AKp1BI;AACD;AACC;AACE;AACD;ALs1BL;AKr1BI;ALu1BJ;AKt1BI;AACE;AAAiC;AAAO;AACzC;AL01BL;AKz1BI;AACD;AACF;AAED;AL01BA;AACA;AACA;AACA;AACA;AK11BA;AACE;AACA;AL41BF;AK31BE;AACE;AACA;AACD;AL61BH;AK51BE;AACA;AACD;AAED;AL61BA;AACA;AACA;AACA;AACA;AACA;AK71BA;AACE;AL+1BF;AK91BE;AACE;AACD;AACC;AACD;ALg2BH;AK/1BE;AACD;AAED;ALg2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKh2BO;AACL;AACE;AAMD;AL61BH;AK51BE;AACD;AAED;AL61BA;AACA;AACA;AACA;AACA;AACA;AK71BA;AACE;AL+1BF;AK91BE;AACE;AACD;AACC;AACA;AACA;AACA;AACA;AACD;AACF;AAED;AL+1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK/1BO;AACL;AACA;ALi2BF;AKh2BE;AACE;AACA;AACD;ALk2BH;AKj2BE;AACE;AACA;AACD;ALm2BH;AKl2BE;AACE;AACA;AACD;ALo2BH;AKn2BE;AAYD;AAED;ALy1BA;AACA;AACA;AACA;AACA;AACA;AACA;AKz1BA;AACE;AACE;AACA;AACA;AACE;AACA;AACA;AACA;AACA;AL21BN;AKh2BkB;AAOd;AACA;AACA;AAZU;AAcb;AAED;AL21BA;AACA;AACA;AACA;AACA;AK31BO;AACL;AACE;AACE;AADU;AAGZ;AAAc;AAAD;AACb;AACE;AACE;AACA;AAF+C;AAIjD;AACE;AACA;AAF6C;AAI/C;AACE;AACA;AACA;AAEA;AAL6C;AAO/C;AACE;AACA;AAF+C;AAhBvC;AAqBZ;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARgB;AA1BR;AAqCb;AAED;AL61BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK71BO;AAAkE;AAEvE;AACA;AACA;AAAa;AAA4B;AACvC;AACA;AACA;AAHuC;ALq2B3C;AKh2BE;AACE;AACD;ALk2BH;AKj2BE;AACE;AACD;ALm2BH;AKl2BE;AACD;AAED;ALm2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKn2BO;AACL;AACE;AACD;ALq2BH;AKp2BE;AACE;AAGA;AACA;ALo2BJ;AKn2BI;AACE;AACD;ALq2BL;AKn2BI;AAAe;AAA0B;AACvC;AAAc;AAAiB;AAAlB;AACb;AACE;AACE;AACA;AACE;AACA;AACA;AACA;AAJgB;AAFC;AADX;AAF2B;ALu3B7C;AKv2BI;ALy2BJ;AKx2BI;AACE;AACA;AACD;AL02BL;AACA;AKz2BI;AACA;AACA;AACD;AACC;AAMD;ALs2BH;AKr2BE;AACD;AAED;ALs2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKt2BO;AACL;AAAuC;AAAA;AACvC;AACA;AAGD;AAED;ALu2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKv2BO;AAOL;AACA;AACA;AACA;AACA;AACA;AAGA;AAKA;AAMA;AACA;AACE;AACA;AACA;AACA;AAJ+C;AAMjD;AACE;AACA;AACA;AACA;AAJmD;AAMrD;AAEA;ALu1BF;AKn1BE;AAEA;AACA;AACD;AAED;ALm1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKn1BO;AACL;ALq1BF;AKp1BE;AAKE;ALk1BJ;AKj1BI;AACE;AACD;AACF;ALm1BH;AKl1BE;AACD;AAED;ALm1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKn1BO;AACL;AAEA;AACA;AACA;ALo1BF;AKn1BE;AAME;AACD;ALg1BH;AK/0BE;AACA;AACA;AACD;AAED;ALg1BA;AACA;AACA;AACA;AACA;AACA;AKh1BO;AACL;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATF;AAYH;AAED;AL+0BA;AACA;AK/0BA;AAEA;ALg1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK/0BO;AAEP;ALg1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKj1BO;AACL;AACA;AACA;AAKqB;AAGb;AAA+B;AAHlB;AAMrB;AAAO;AAAyC;AAAhD;AACD;AAED;AL+0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK/0BA;AAME;AAHA;AAGA;AL80BF;AK90BE;AAFA;AAEA;ALk1BF;AKl1BE;AADA;AACA;ALs1BF;AKr1BE;AACA;AAEI;AACA;AACA;AACA;AAJc;AAMP;AAAA;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;ALs1BN;AKr1BM;AACE;AACE;AACA;AAAQ;AAAD;AACR;ALy1BT;AKx1BQ;AAOD;AAKC;AACE;AACA;AACA;AACA;AACA;AACA;AANK;AAQR;ALg1BP;AACA;AK/0BM;AAAQ;AAAD;AACR;AAEC;AACA;AACD;AACJ;AAED;ALi1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKj1BO;AAAqE;AAApB;AAAoB;ALs1B5E;AKr1BE;AACE;AAGA;AACD;ALq1BH;AKp1BE;AACA;AAGA;AACD;AAED;ALm1BA;AACA;AACA;AACA;AACA;AACA;AKn1BO;AACL;AACD;AAED;ALo1BA;AACA;AACA;AACA;AACA;AACA;AKp1BO;AACL;ALs1BF;AKr1BE;AACE;AACE;AACE;AACD;AACF;AACF;AACF;AAED;ALs1BA;AACA;AACA;AACA;AACA;AACA;AKt1BA;AACE;AACA;AACA;AAHiB;AAMnB;ALu1BA;AACA;AACA;AACA;AACA;AKt1BA;AACE;AACA;ALw1BF;AKv1BE;AACE;AACD;ALy1BH;AKx1BE;AL01BF;AKz1BE;AACE;AACE;AAED;AL01BL;AKz1BI;AACE;AAED;AACF;AL01BH;AKz1BE;AACD;AAED;AL01BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK11BO;AACL;AACA;AACD;AL41BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMp2DA;ANs2DA;AMh2DA;ANk2DA;AMx3DA;AN03DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMh3DA;ANk3DA;AACA;AACA;AMh3DO;AAEP;ANi3DA;AACA;AACA;AACA;AACA;AACA;AACA;AMj3DO;ANm3DP;AMl3DO;AAEP;ANm3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMp3DO;AAML;AADA;AACA;ANm3DF;AMl3DE;AACA;ANo3DF;AMl3DE;AACE;ANo3DJ;AMn3DI;AACE;AACA;AACA;AACD;ANq3DL;AMp3DI;ANs3DJ;AMn3DI;AACE;AACA;AACD;ANq3DL;AMn3DI;AACA;ANq3DJ;AMl3DI;AAIK;AAAA;AACA;AAAA;AACQ;AAGK;AAAA;AAHL;AAUX;AACD;AN62DL;AACA;AM32DI;AAKK;AAAA;AACA;AAAA;AACQ;AAGK;AAAA;AAHL;AAUX;AACD;AAGD;ANm2DJ;AACA;AMn2DI;AAAyB;AACvB;AACA;AACA;AACA;AACA;ANs2DN;AMr2DM;AAIK;AAAA;AACA;AAAA;AACQ;AAGK;AAAA;AAHL;AAUX;AACD;AAvBsB;ANw3D7B;AMx3D6B;AAwBxB;ANm2DL;AACA;AMj2DI;AACD;ANm2DH;AMj2DE;AACD;AAED;ANk2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMl2DA;AAOE;AN81DF;AM71DE;AACE;AAAgB;AAAc;AAAf;AAChB;ANk2DH;AMj2DE;AACE;AAAgB;AAAe;AAAhB;AAChB;ANs2DH;AMr2DE;AACE;AACD;ANu2DH;AMt2DE;AACD;AAED;ANu2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMv2DO;AAIL;AACE;AACA;AACA;AAHuB;AAKzB;ANs2DF;AMr2DE;AAKE;AACA;AACA;AACD;AACC;AACA;AAID;ANg2DH;AM/1DE;AACE;AAEA;ANg2DJ;AM/1DI;AACD;ANi2DH;AMh2DE;AACA;AACA;AAEA;AACD;ANi2DD;AACA;AACA;AACA;AACA;AACA;AOzlEO;AP2lEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQlmEA;ARomEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQlmEA;ARomEA;AACA;AACA;AACA;AACA;AACA;AQlmEO;AACL;AACA;AACA;AACD;ARomED;AACA;AACA;AACA;AACA;AACA;AACA;ASrnEA;ATunEA;ASvoEA;ATyoEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASroEA;AACA;AAEA;ATsoEA;ASroEA;AAEA;ATsoEA;AACA;AACA;AACA;AACA;AACA;ASroEO;AACL;AACA;AAOD;ATioED;AACA;AACA;AACA;AACA;AACA;AACA;AU9qEA;AVgrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AU9qEA;AACA;AACA;AVgrEA;AACA;AACA;AACA;AACA;AACA;AU/qEO;AACL;AACA;AAMD;AV4qED;AACA;AACA;AACA;AACA;AACA;AACA;AWlsEA;AXosEA;AWhsEA;AXksEA;AWjsEA;AXmsEA;AWlsEA;AXosEA;AWjsEA;AXmsEA;AW9rEA;AXgsEA;AW/rEA;AXisEA;AWhsEA;AXksEA;AWjsEA;AXmsEA;AWlsEA;AXosEA;AWnsEA;AXqsEA;AWpsEA;AXssEA;AWrsEA;AXusEA;AWlsEA;AXosEA;AW/rEA;AXisEA;AWhsEA;AXksEA;AWjsEA;AXmsEA;AWlsEA;AXosEA;AACA;AACA;AWpsEA;AACO;AAEP;AXqsEA;AACA;AWrsEA;AAEA;AXssEA;AWrsEA;AXusEA;AACA;AACA;AACA;AACA;AACA;AWzsEE;AX2sEF;AACA;AWzsEE;AAAqB;AX4sEvB;AW3sEI;AAEA;AX4sEJ;AACA;AACA;AACA;AW3sEI;AAEA;AX4sEJ;AW3sEI;AAEA;AX4sEJ;AW3sEI;AAEA;AX4sEJ;AW3sEI;AAEA;AX4sEJ;AACA;AACA;AACA;AW3sEI;AAEA;AX4sEJ;AACA;AACA;AACA;AW3sEI;AAEA;AX4sEJ;AW3sEI;AAEA;AX4sEJ;AACA;AACA;AACA;AW3sEI;AAEA;AX4sEJ;AACA;AACA;AACA;AACA;AW3sEI;AAEA;AX4sEJ;AACA;AACA;AACA;AW3sEI;AAEA;AX4sEJ;AW3sEI;AAEA;AX4sEJ;AW3sEI;AAEA;AX4sEJ;AW3sEI;AAEA;AX4sEJ;AACA;AACA;AACA;AACA;AW3sEI;AAEA;AX4sEJ;AACA;AACA;AACA;AW3sEI;AAxEmB;AAyEpB;AAED;AX6sEF;AACA;AACA;AACA;AACA;AW/sEI;AACA;AXitEJ;AW/sEI;AACD;AAED;AXgtEF;AACA;AACA;AWhtEI;AACE;AACD;AXktEL;AACA;AWjtEI;AACA;AACD;AAED;AXktEF;AACA;AACA;AACA;AACA;AACA;AWltEI;AACD;AAED;AXmtEF;AACA;AACA;AACA;AACA;AACA;AWntEI;AACD;AAED;AXotEF;AACA;AACA;AWptEI;AACA;AXstEJ;AWrtEI;AACE;AACD;AXutEL;AWttEI;AACD;AAED;AXutEF;AACA;AACA;AWvtEI;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AXqtEJ;AWntEI;AACE;AACD;AACF;AAED;AXotEF;AACA;AACA;AACA;AACA;AACA;AWptEI;AXstEJ;AWrtEI;AACE;AACD;AXutEL;AWttEI;AAIA;AAIA;AAIA;AACD;AAED;AX8sEF;AACA;AACA;AACA;AACA;AACA;AACA;AW/sEmC;AXitEnC;AWhtEI;AACA;AXktEJ;AWjtEI;AACE;AACD;AACC;AACE;AACD;AACF;AXmtEL;AWltEI;AACE;AACD;AACC;AACE;AACD;AACF;AXotEL;AACA;AWntEI;AXqtEJ;AWptEI;AACE;AACA;AACA;AACD;AACF;AAED;AXqtEF;AACA;AACA;AACA;AACA;AWttEoB;AXwtEpB;AWvtEI;AACA;AXytEJ;AWxtEI;AACE;AACD;AAED;AXytEJ;AACA;AWztEI;AX2tEJ;AW1tEI;AACE;AACD;AX4tEL;AW1tEI;AACE;AACA;AX4tEN;AWztEM;AAEI;AACE;AAGD;AACD;AACE;AACE;AACD;AACC;AACD;AACF;AAZH;AAcC;AAAD;AAEH;AACF;AAED;AXutEF;AACA;AACA;AACA;AACA;AACA;AWvtEI;AACE;AAGA;AAEA;AACA;AXstEN;AWrtEM;AACD;AACF;AAED;AXstEF;AACA;AACA;AACA;AACA;AWttEI;AACE;AACD;AXwtEL;AWvtEI;AXytEJ;AWxtEI;AACE;AACD;AX0tEL;AWxtEI;AAAe;AAAwD;AAGvE;AACD;AAED;AXytEF;AACA;AACA;AW1tEmB;AX4tEnB;AW3tEI;AACE;AACD;AX6tEL;AW5tEI;AAOA;AXwtEJ;AWvtEI;AXytEJ;AWxtEI;AACA;AAIA;AAIA;AAME;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AACA;AAJuB;AXmtE/B;AW7sEM;AACE;AACD;AAGD;AACA;AACA;AX6sEN;AACA;AW7sEM;AAKG;AAAD;AAEF;AACA;AACD;AACD;AACA;AACD;AAED;AX0sEF;AACA;AACA;AACA;AACA;AACA;AW1sEI;AACE;AACD;AACF;AAED;AX2sEF;AACA;AACA;AW3sEI;AAGD;AAED;AX0sEF;AACA;AACA;AW1sEI;AACE;AACD;AACF;AAED;AX2sEF;AACA;AACA;AW3sEI;AACE;AACD;AACF;AAED;AX4sEF;AACA;AACA;AW5sEI;AACA;AX8sEJ;AW7sEI;AACE;AACA;AACD;AX+sEL;AW9sEI;AACD;AAED;AX+sEF;AACA;AACA;AACA;AACA;AW/sEI;AXitEJ;AWhtEI;AAGD;AAED;AX+sEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AW/sEI;AACA;AAF4B;AAI5B;AAEA;AACA;AXgtEJ;AW9sEI;AAEI;AACD;AAEC;AACD;AAEJ;AAED;AX4sEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AW5sEI;AACA;AACA;AACE;AAID;AX2sEL;AW1sEI;AAKD;AXwsEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYtrFA;AZwrFA;AYvrFA;AZyrFA;AYxrFA;AZ0rFA;AYzrFA;AZ2rFA;AY1rFA;AZ4rFA;AY3rFA;AZ6rFA;AYxrFA;AZ0rFA;AYzrFA;AZ2rFA;AACA;AACA;AY3rFA;AACO;AAEP;AZ4rFA;AACA;AACA;AACA;AACA;AY5rFA;AAEA;AZ6rFA;AACA;AY5rFA;AZ8rFA;AACA;AACA;AACA;AACA;AACA;AYhsFE;AACA;AAAqB;AZmsFvB;AYlsFI;AACA;AZosFJ;AYnsFI;AAEA;AZosFJ;AACA;AYnsFI;AAEA;AZosFJ;AYnsFI;AAVmB;AAWpB;AAED;AZqsFF;AACA;AACA;AACA;AACA;AYvsFI;AACA;AACD;AAED;AZwsFF;AACA;AACA;AYxsFI;AACA;AACA;AACD;AAED;AZysFF;AACA;AACA;AACA;AACA;AYzsFI;AACA;AZ2sFJ;AYzsFI;AZ2sFJ;AYtsFI;AZwsFJ;AYvsFI;AAKA;AACD;AAED;AZosFF;AACA;AACA;AYrsFmB;AZusFnB;AYtsFI;AACA;AZwsFJ;AYtsFI;AAIa;AAAA;AZssFjB;AYrsFI;AACE;AACA;AACA;AACD;AZusFL;AYtsFI;AACE;AACA;AZwsFN;AYvsFM;AACE;AACD;AZysFP;AYvsFM;AACE;AZysFR;AYxsFQ;AACD;AZ0sFP;AYxsFM;AZ0sFN;AYxsFM;AZ0sFN;AYxsFM;AACE;AAGI;AACA;AACA;AACA;AACA;AZwsFZ;AYvsFY;AZysFZ;AYxsFY;AACD;AACJ;AACC;AACD;AACF;AACF;AAED;AZysFF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYzsFI;AACE;AACA;AACD;AZ2sFL;AACA;AYzsFI;AAEA;AAKA;AZssFJ;AYpsFI;AACE;AACA;AACA;AZssFN;AYrsFM;AACE;AZusFR;AYtsFQ;AACE;AACD;AACC;AACD;AACF;AACF;AZwsFL;AYtsFI;AACD;AAED;AZusFF;AACA;AACA;AYvsFI;AACA;AACD;AAED;AZwsFF;AACA;AACA;AACA;AACA;AACA;AACA;AYxsFI;AACA;AACE;AACD;AZ0sFL;AYzsFI;AACE;AACA;AACA;AAGA;AZysFN;AYxsFM;AACA;AZ0sFN;AYzsFM;AACE;AACA;AACA;AZ2sFR;AY1sFQ;AACE;AACE;AACD;AZ4sFX;AY3sFU;AACD;AACF;AZ6sFP;AY5sFM;AACE;AAKD;AACF;AZ0sFL;AYzsFI;AACD;AZ2sFH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aat7FA;Abw7FA;Aav7FA;Aby7FA;Aa18FA;Ab48FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aax8FE;Ab08FF;AACA;Aax8FE;AACE;AACA;AAEA;Aby8FJ;Aax8FI;AAEA;Aby8FJ;Aax8FI;AAEA;Aby8FJ;Aav8FI;AACE;AACA;Aby8FN;Aax8FM;AAKE;AACA;AACA;AACD;AACF;Abs8FL;Aap8FI;AACE;Abs8FN;Aar8FM;AACE;AACD;AACF;AACF;AAED;Abs8FF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aaz8FqB;Ab28FrB;Aa18FI;AACE;AACA;AAAmB;AAAO;AAC1B;AACD;Ab88FL;Aa58FI;AACE;Ab88FN;AACA;AACA;AACA;AACA;AACA;AACA;Aa38FM;AAIA;AAEA;AACE;Aby8FR;Aav8FQ;AACE;AAAmB;AAAO;AAC3B;AACF;AACD;AACD;Ab28FL;Aaz8FI;Ab28FJ;Aa18FI;AACE;AACA;AAGA;AACD;AACC;AACD;Ab08FL;AACA;Aax8FI;AACE;AACE;Ab08FR;Aaz8FQ;AACD;AACF;AACF;AAED;Ab08FF;AACA;AACA;AACA;AACA;AACA;Aa38FoB;Ab68FpB;Aa58FI;AACE;AACD;AACF;AAED;Ab68FF;AACA;AACA;AACA;AACA;AACA;AACA;Aa78FI;AACE;AACA;AACD;Ab+8FL;Aa98FI;AACA;AAEA;AACA;Ab+8FJ;Aa58FI;AACA;AAEA;AACD;AAED;Ab48FF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa58FI;AACA;AACA;AACA;Ab88FJ;Aa78FI;AACE;AACgB;AAAO;AAGxB;Ab88FL;Aa78FI;Ab+8FJ;Aa98FI;AACE;AACgB;AAAO;AAGxB;AAED;Ab88FJ;AACA;Aa98FI;AACE;AACA;AACA;AAHiB;Abo9FvB;Aa98FI;AACE;AACD;Abg9FL;Aa98FI;AACE;AACA;AACA;AACD;Abg9FL;Aa/8FI;AAGI;AAAA;AAEE;AACA;AACD;AAEN;Ab88FH;AACA;AACA;Aa58FA;Ab88FA;AACA;AACA;Aa/8FA;Abi9FA;AACA;AACA;AACA;AACA;AACA;AACA;AcnpGA;AdqpGA;AcppGA;AdspGA;AcrpGA;AdupGA;ActpGA;AdwpGA;AcvpGA;AdypGA;AcxpGA;Ad0pGA;AcjpGA;AdmpGA;AclpGA;AdopGA;AcnpGA;AdqpGA;AcppGA;AdspGA;AcrpGA;AdupGA;ActpGA;AdwpGA;AcvpGA;AdypGA;AcxpGA;Ad0pGA;AczpGA;Ad2pGA;Ac1pGA;Ad4pGA;AcnsGA;AdqsGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AczqGA;AAEA;Ad0qGA;AACA;AACA;AACA;Ac1qGE;Ad4qGF;AACA;Ac1qGE;AACE;AACA;AAEA;Ad2qGJ;Ac1qGI;AAEA;Ad2qGJ;Ac1qGI;AAEA;Ad2qGJ;Ac1qGI;AAEA;Ad2qGJ;Ac1qGI;AAEA;Ad2qGJ;Ac1qGI;AAEA;Ad2qGJ;Ac1qGI;AAEA;Ad2qGJ;Ac1qGI;AAEA;Ad2qGJ;Ac1qGI;AAEA;Ad2qGJ;Ac1qGI;AAEA;Ad2qGJ;Ac1qGI;AAEA;Ad2qGJ;Ac1qGI;AACD;AAED;Ad2qGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac9qG6D;AdgrG7D;Ac/qGI;AACA;AACA;AACA;AdirGJ;AchrGI;AdkrGJ;AACA;AchrGI;AAMA;AAIE;AAAA;AAIF;AACA;AdwqGJ;AcvqGI;AAKE;AACA;AAKI;AACA;AACA;AdiqGV;AchqGU;AACD;AAEJ;AAED;AdgqGJ;AACA;AchqGI;AACE;AACD;AAED;AACE;AACA;AACA;AdiqGN;AchqGM;AACE;AACD;AdkqGP;AcjqGM;AACD;AAED;AACE;AACE;AAAQ;AAAD;AACR;AACF;AdoqGL;AcjqGI;AAKM;AACE;AACD;Ad+pGX;Ac9pGU;AAOD;AAML;AAEI;AACD;AAGH;AAKM;AACD;AAEI;AAPP;AdqpGN;AczoGI;AAGI;AACA;AACE;AACA;AACD;AdyoGT;AcxoGQ;AACD;Ad0oGP;Ac5vG6D;AAAA;AAAA;AdgwG7D;AchwG6D;AAAA;AAAA;AdowG7D;ActoGI;AAIE;AACA;AACA;AAIe;AdkoGrB;AchoGQ;AACE;AdkoGV;AcjoGU;AACD;AACC;AdmoGV;AcloGU;AACD;AACF;AACF;AACC;AACA;AACA;AACA;AACE;AACD;AAED;AACA;AdmoGN;AcloGM;AACE;AdooGR;AcnoGQ;AACD;AACF;AAGD;AACA;AdmoGJ;AACA;AcnoGI;AACE;AACA;AACA;AACD;AAGD;AdmoGJ;AcloGI;AACE;AACD;AdooGL;AcloGI;AdooGJ;AcnoGI;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACC;AACA;AACA;AACD;AdqoGL;AcnoGI;AAKE;AACA;AACA;AACA;AACA;AACA;AdioGN;AchoGM;AACE;AACD;AACF;AdkoGL;Ac/nGI;AACD;AAED;AdgoGF;AACA;AACA;AACA;AACA;AACA;AACA;AcjoG6C;AdmoG7C;AcloGI;AAKM;AACE;AACD;AdgoGX;Ac9nGU;AACA;AAEA;AACE;AACA;AACA;AACA;AAEI;AAAa;AAAd;AAKJ;AACF;AACI;AAxBP;AAyBQ;AAzBR;AA4BH;AAED;Ad2nGF;AACA;AACA;AACA;AACA;AACA;AACA;Ac3nGI;AACA;AAOD;AAED;AdsnGF;AACA;AACA;AACA;AACA;AACA;AACA;ActnGI;AAEA;AdunGJ;ActnGI;AACE;AACD;AdwnGL;AcvnGI;AACE;AACA;AACD;AACF;AAED;AdwnGF;AACA;AACA;AACA;AACA;AACA;AcxnGI;AACE;AACA;AACD;Ad0nGL;AcznGI;AACA;AACD;AAED;Ad0nGF;AACA;AACA;AACA;AACA;AACA;Ac1nGI;AAAoC;AAAA;AACpC;Ad8nGJ;Ac7nGI;AACE;AACA;AACD;Ad+nGL;Ac9nGI;AACE;AACA;AACD;AdgoGL;Ac/nGI;AACE;AACA;AACD;AACF;AAED;AdgoGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcjoGsD;AdmoGtD;AcloGI;AACE;AACE;AACA;AACD;AdooGP;AcnoGM;AAAiC;AAAO;AACxC;AAAgC;AAAO;AdyoG7C;AcxoGM;AAIM;AAOD;AAGN;AACF;AAED;Ad8nGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcxnGI;AACA;AACE;AACD;Ad0nGL;AcznGI;AAEI;AAAa;AAAd;AAGC;AACA;AAFG;AAMR;AAED;AdunGF;AACA;AACA;AACA;AACA;AACA;AcvnGI;AACE;AACD;AdynGL;AcxnGI;AAGI;AACA;AAFG;AAKR;AAED;AdsnGF;AACA;AACA;AACA;AACA;AACA;AACA;AcvnG8B;AdynG9B;AcxnGI;AAGI;AdwnGR;AcpnGQ;AdsnGR;AcrnGQ;AACE;AACA;AAFU;AAIb;AACJ;AAED;AdsnGF;AACA;AACA;AcvnGkB;AdynGlB;AcxnGI;AACE;AACA;AACD;Ad0nGL;AcxnGI;AACA;AACE;Ad0nGN;AcznGM;AACD;AACF;AAED;Ad0nGF;AACA;AACA;Ac3nGsB;Ad6nGtB;Ac5nGI;AACE;AACA;AACD;Ad8nGL;Ac5nGI;Ad8nGJ;Ac5nGI;AAKQ;AACE;AACD;AACF;AAKP;AAEI;AACE;AACD;AACF;AAEJ;AAED;AdmnGF;AACA;AACA;AACA;AACA;AACA;AcnnGI;AACE;AACD;AdqnGL;AcpnGI;AACD;AAED;AdqnGF;AACA;AACA;AACA;AACA;AcrnGI;AACA;AACA;AACE;AACD;AACF;AAED;AdsnGF;AACA;AACA;AACA;AACA;AACA;ActnGI;AACE;AACA;AACA;AACD;AACF;AAED;AdunGF;AACA;AACA;AACA;AACA;AcvnGI;AAKD;AAED;AdonGF;AACA;AACA;AACA;AACA;AACA;AcpnGI;AACE;AACD;AACF;AdsnGH;AACA;AACA;AcpnGA;AdsnGA;AACA;AACA;AcvnGA;AdynGA;AACA;AACA;AACA;AACA;AACA;AACA;Ae7tHA;Af+tHA;Ae9tHA;AfguHA;Ae/tHA;AfiuHA;AehuHA;AfkuHA;AejuHA;AfmuHA;AeluHA;AfouHA;AenuHA;AfquHA;AepuHA;AfsuHA;AACA;AACA;AetuHA;AfwuHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AetuHA;AACE;AACD;AfwuHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AehvHE;AfkvHF;AehvHI;AACA;AACA;AACD;AAED;AfivHF;AACA;AACA;AelvHoB;AfovHpB;AenvHI;AfqvHJ;AenvHI;AfqvHJ;AepvHI;AACA;AACqE;AAAA;AAIrE;AACA;AACE;AACA;AfovHN;Ae9uHM;AACE;AACD;AfgvHP;Ae9uHM;AACA;AAEA;AACE;AACE;Af+uHV;Ae7uHU;AAIA;Af4uHV;AACA;Ae5uHU;AAGE;AAEA;AACA;AACA;AACA;AACA;AACD;Af2uHX;AezuHU;Af2uHV;Ae1uHU;Af4uHV;Ae3uHU;AAGc;AAAA;AAER;AACA;Af2uHhB;AezuHgB;Af2uHhB;AepuHgB;AACD;AAEN;AACF;AACF;AACF;AfquHH;AACA;AACA;AACA;AACA;AetuHA;AACE;AACA;AACD;AfwuHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB51HA;AhB81HA;AgB71HA;AhB+1HA;AgB91HA;AhBg2HA;AgBj3HA;AhBm3HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB72HA;AhB+2HA;AACA;AACA;AACA;AgB72HA;AAEA;AhB82HA;AgB72HA;AACA;AhB+2HA;AgB92HA;AAEA;AhB+2HA;AACA;AACA;AACA;AgB92HO;AACL;AACD;AAED;AhB+2HA;AACA;AgB/2HO;AACL;AACD;AAED;AhBg3HA;AACA;AACA;AACA;AACA;AACA;AgBh3HO;AACL;AhBk3HF;AgBj3HE;AACE;AACD;AAED;AhBk3HF;AACA;AgBl3HE;AACE;AACD;AhBo3HH;AgBn3HE;AAIA;AAIA;AACA;AACD;AAED;AhB82HA;AACA;AACA;AACA;AACA;AACA;AgB92HO;AACL;AACE;AACD;AhBg3HH;AgB/2HE;AhBi3HF;AgB/2HE;AACE;AACA;AACA;AACD;AhBi3HH;AgB/2HE;AAII;AACE;AACA;AACA;AACD;AACF;AACJ;AhB82HD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiB18HA;AjB48HA;AiB38HA;AjB68HA;AiB58HA;AjB88HA;AiB78HA;AjB+8HA;AiBl+HA;AjBo+HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiB79HA;AACA;AACO;AACL;AACA;AACA;AACA;AAJuB;AAOzB;AjB89HA;AACA;AiB99HO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AA/ByB;AAkC3B;AjB29HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiB59HO;AACL;AAMD;AAED;AjBw9HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBx9HO;AAKL;AAFA;AAEA;AjBw9HF;AiBx9HE;AADA;AACA;AjB49HF;AiB39HE;AACA;AACA;AACA;AACA;AACD;AAED;AjB49HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiB59HO;AACL;AACE;AACD;AjB89HH;AiB79HE;AACA;AjB+9HF;AiB99HE;AACE;AACD;AACC;AACA;AACD;AACF;AAED;AjB+9HA;AACA;AACA;AACA;AACA;AACA;AiB/9HO;AACL;AAKD;AAED;AjB49HA;AACA;AiB59HO;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AjB69HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBxnIA;AlB0nIA;AkBznIA;AlB2nIA;AkB1nIA;AlB4nIA;AkB3nIA;AlB6nIA;AkB5nIA;AlB8nIA;AkB7nIA;AlB+nIA;AkB9nIA;AlBgoIA;AkB/nIA;AlBioIA;AkBhoIA;AlBkoIA;AkBjoIA;AlBmoIA;AkB5pIA;AlB8pIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBjpIA;AACA;AAEA;AlBkpIA;AkBjpIA;AAEA;AlBkpIA;AkBjpIA;AAEA;AlBkpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBjpIA;AACE;AACA;AACA;AACA;AlBmpIF;AkBjpIE;AACA;AACA;AACA;AACA;AACD;AAED;AlBkpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBlpIO;AAML;AAAA;AAAA;AlBipIF;AkBhpIE;AACA;AACA;AAKA;AAMA;AAAe;AAAmC;AlB2oIpD;AkBvoIE;AACE;AACD;AlByoIH;AkBxoIE;AAEA;AACA;AAEA;AACA;AACA;AlBwoIF;AkBvoIE;AAEI;AACA;AACA;AACA;AACA;AALG;AASP;AACA;AACA;AlBsoIF;AkBpoIE;AACE;AACD;AlBsoIH;AkBroIE;AACE;AACD;AlBuoIH;AkBtoIE;AACE;AACD;AlBwoIH;AkBvoIE;AACE;AACD;AlByoIH;AkBxoIE;AACA;AACA;AlB0oIF;AkBzoIE;AACE;AACA;AACD;AAED;AACA;AlB0oIF;AACA;AkB1oIE;AACA;AlB4oIF;AkB3oIE;AACE;AACD;AlB6oIH;AkB5oIE;AAIA;AACD;AAED;AlB0oIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB1oIO;AAAwD;AlB6oI/D;AkB3oIE;AACE;AACA;AACA;AACE;AACD;AACF;AlB6oIH;AkB5oIE;AlB8oIF;AkB7oIE;AACE;AlB+oIJ;AkB9oII;AACE;AAID;AlB6oIL;AkB5oII;AACE;AACD;AACF;AACF;AAED;AlB6oIA;AACA;AACA;AACA;AACA;AACA;AACA;AkB7oIO;AACL;AACA;AAGA;AlB6oIF;AkB5oIE;AAGA;AACD;AAED;AlB2oIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB3oIO;AAKL;AAGA;AACD;AAED;AlBsoIA;AACA;AACA;AACA;AkBtoIO;AACL;AACD;AAED;AlBuoIA;AACA;AACA;AACA;AkBvoIO;AACL;AACD;AAED;AlBwoIA;AACA;AACA;AACA;AACA;AACA;AACA;AkBxoIO;AACL;AlB0oIF;AkBzoIE;AACE;AACD;AlB2oIH;AACA;AkB1oIE;AAGA;AAMD;AAED;AlBooIA;AACA;AACA;AACA;AACA;AACA;AACA;AkBpoIO;AACL;AASD;AAED;AlB6nIA;AACA;AACA;AACA;AACA;AkB7nIA;AACE;AlB+nIF;AkB9nIE;AACE;AACD;AlBgoIH;AkB/nIE;AACD;AAED;AlBgoIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBhoIO;AACL;AACD;AAED;AlBioIA;AACA;AACA;AACA;AACA;AACA;AkBjoIO;AACL;AlBmoIF;AkBloIE;AACE;AACA;AACA;AACA;AACD;AACC;AACA;AACD;AlBooIH;AkBnoIE;AACD;AAED;AlBooIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBpoIA;AACE;AlBsoIF;AkBnoIE;AACE;AACD;AlBqoIH;AkBpoIE;AACA;AAOA;AACA;AlBgoIF;AkB/nIE;AACA;AAUA;AACD;AAED;AlBunIA;AACA;AACA;AACA;AACA;AACA;AkBvnIO;AACL;AACE;AACD;AAED;AlBwnIF;AACA;AkBxnIE;AAEE;AACA;AAEA;AACA;AAGF;AlBsnIF;AkBrnIE;AAGE;AACA;AAEA;AAEA;AACA;AAEA;AAIF;AACA;AACA;AACA;AlB+mIF;AkB9mIE;AACE;AlBgnIJ;AkB/mII;AACE;AACA;AACD;AACF;AlBinIH;AkBhnIE;AACD;AAED;AlBinIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBjnIO;AACL;AlBmnIF;AkBlnIE;AACE;AACD;AlBonIH;AkBnnIE;AACD;AAED;AlBonIA;AACA;AACA;AACA;AACA;AkBpnIO;AACL;AACD;AlBsnID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBhiJA;AnBkiJA;AmBjiJA;AnBmiJA;AmBliJA;AnBoiJA;AmBtjJA;AnBwjJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBljJA;AnBojJA;AACA;AACA;AACA;AACA;AmBljJO;AACL;AnBojJF;AmBnjJE;AACE;AACD;AnBqjJH;AmBpjJE;AAKD;AAED;AnBijJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBjjJO;AAML;AnB8iJF;AmB5iJE;AACE;AACE;AACD;AnB8iJL;AmB7iJI;AAGM;AACA;AACA;AAHF;AAQA;AACA;AACA;AACD;AACJ;AAED;AnByiJF;AACA;AmBziJE;AAGI;AACA;AACA;AACD;AACJ;AnByiJD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBlnJA;ApBonJA;AoBnnJA;ApBqnJA;AoBpnJA;ApBsnJA;AoBxoJA;ApB0oJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBnoJA;AAEA;ApBooJA;AACA;AACA;AACA;AoBnoJA;AACE;AACA;AACA;AACA;AAJiB;AAOnB;ApBooJA;AACA;AACA;AACA;AACA;AACA;AACA;AoBnoJA;AAAkC;AAAA;ApBuoJlC;AACA;AoBroJE;AACD;AAED;ApBsoJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBtoJO;AACL;AACA;AACA;ApBwoJF;AoBvoJE;AACE;AACE;AACA;AACA;AACA;AACD;AACC;AACA;AACA;AACA;AACD;ApByoJL;AoBxoJI;AACD;ApB0oJH;AoBzoJE;AACD;AAED;ApB0oJA;AACA;AACA;AACA;AACA;AACA;AACA;AoB1oJO;AACL;AACE;ApB4oJJ;AoB3oJI;AACE;AACE;AACD;ApB6oJP;AoB5oJM;AACD;ApB8oJL;AoB7oJI;AACD;ApB+oJH;AoB9oJE;AACD;AAED;ApB+oJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoB/oJO;AACL;AACE;ApBipJJ;AoBhpJI;AACE;AACD;AACF;AAED;AACA;AACA;ApBipJF;AACA;AoBjpJE;AACD;ApBmpJD;AACA;AACA;AACA;AACA;AACA;AACA;AqB7wJA;ArB+wJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB7wJA;ArB+wJA;AACA;AACA;AqB7wJO;AACL;AACA;AACA;AACA;AAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZuB;ArB6xJzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBxyJA;AtB0yJA;AsB1zJA;AtB4zJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBxzJA;AtB0zJA;AACA;AACA;AACA;AACA;AACA;AsBxzJO;AACL;AACE;AACE;AACD;AtB0zJL;AsBzzJI;AACD;AACF;AtB2zJD;AACA;AACA;AACA;AACA;AACA;AACA;AuBj2JA;AvBm2JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBj2JA;AvBm2JA;AACA;AACA;AuBj2JO;AACL;AvBm2JF;AACA;AuBj2JE;AvBm2JF;AuBj2JE;AvBm2JF;AACA;AuBj2JE;AvBm2JF;AuBj2JE;AvBm2JF;AACA;AACA;AuBj2JE;AvBm2JF;AuBj2JE;AvBm2JF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBj2JE;AvBm2JF;AuBj2JE;AvBm2JF;AACA;AACA;AACA;AuBj2JE;AvBm2JF;AuBj2JE;AvBm2JF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBj2JE;AvBm2JF;AuBj2JE;AvBm2JF;AACA;AuBj2JE;AArD2B;AvBy5J7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBp7JA;AxBs7JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBp7JA;AxBs7JA;AACA;AACA;AACA;AACA;AACA;AwBp7JA;AAEA;AAKA;AAKA;AxB66JA;AwB56JO;AACL;AACA;AACA;AACA;AxB86JF;AwB76JE;AxB+6JF;AACA;AwB76JE;AAEA;AACA;AAEA;AxB66JF;AwB56JE;AxB86JF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwB56JE;AAvBkB;AxBs8JpB;AwBz6JO;AACL;AADoB;AxB66JtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBr/JA;AzBu/JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBp/JA;AzBs/JA;AyBp/JA;AzBs/JA;AACA;AACA;AyBp/JO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AAPkC;AzB8/JpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B9gKA;A1BghKA;A0B7gKA;A1B+gKA;A0B9gKA;A1BghKA;A0BpiKA;A1BsiKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B9hKA;A1BgiKA;AACA;AACA;AACA;AACA;AACA;A0B9hKO;AAA8D;AAAtB;AAAsB;A1BmiKrE;A0BliKE;AAEI;AACE;AACD;A1BmiKP;A0BliKM;AAAwC;AAAuB;AAChE;AAEJ;AAED;A1BoiKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BpiKO;AACL;AAEI;AACE;AACD;A1BqiKP;A0BpiKM;AACE;AAAuB;AAE1B;AAEJ;AAED;A1BoiKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BpiKO;AACL;AACA;AAEI;AACE;AACD;A1BqiKP;A0BpiKM;AACE;AAAuB;AAE1B;AAEJ;AAED;A1BoiKA;AACA;AACA;AACA;AACA;AACA;A0BpiKO;AACL;A1BsiKF;A0BriKE;A1BuiKF;A0BniKE;AACE;AACD;AAGD;A1BmiKF;AACA;A0BniKE;AACE;AAIA;AACD;A1BkiKH;AACA;A0BhiKE;A1BkiKF;A0B7hKE;AACE;AACD;A1B+hKH;A0B9hKE;AACD;A1BgiKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2B/oKA;A3BipKA;A2BhpKA;A3BkpKA;A2BnqKA;A3BqqKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2BhqKA;A3BkqKA;AACA;AACA;AACA;AACA;A2BhqKO;AACL;AACD;AAED;A3BiqKA;AACA;AACA;AACA;A2BjqKA;AAEA;A3BkqKA;AACA;AACA;AACA;A2BjqKO;AACL;AACD;AAED;A3BkqKA;AACA;AACA;AACA;AACA;AACA;A2BlqKO;AACL;AACE;AACD;A3BoqKH;A2BlqKE;AACD;AAED;A3BmqKA;AACA;AACA;AACA;AACA;AACA;A2BnqKA;AACE;AACE;AACA;AACA;AACA;AAEA;A3BoqKJ;A2BnqKI;AAAmB;AAAO;AAC3B;AACC;AACD;AACF;AAED;A3BsqKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2BtqKO;AACL;AACD;AAED;A3BuqKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2BvqKO;AACL;AACD;AAED;A3BwqKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2BxqKO;AACL;A3B0qKF;A2BxqKE;AACA;AACD;A3B0qKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4B5yKA;A5B8yKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4B5yKA;A5B8yKA;AACA;AACA;AACA;A4B5yKO;AACL;AACD;AAED;A5B6yKA;AACA;AACA;AACA;AACA;AACA;A4B7yKA;AACE;AACD;AAED;A5B8yKA;AACA;AACA;AACA;AACA;AACA;A4B9yKO;AACL;AACD;AAED;A5B+yKA;AACA;AACA;AACA;AACA;AACA;AACA;A4B/yKA;AACE;A5BizKF;A4BhzKE;AACE;AACD;AACC;AACE;AACE;AACE;AACA;AACD;A5BkzKT;A4BjzKQ;AACD;AACF;A5BmzKL;A4BlzKI;AACD;AACF;AAED;A5BmzKA;AACA;AACA;AACA;AACA;AACA;A4BnzKO;AACL;AACE;AACD;AACF;AAED;A5BozKA;AACA;AACA;AACA;AACA;AACA;A4BpzKO;AACL;AACE;AACD;AACF;A5BszKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bt7KA;A7Bw7KA;A6Bv7KA;A7By7KA;A6Bp7KA;A7Bs7KA;A6Br7KA;A7Bu7KA;A6Bt7KA;A7Bw7KA;A6Bv7KA;A7By7KA;A6Bl9KA;A7Bo9KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bt8KA;AACE;AACA;AACA;AACA;AACA;AACA;AANwB;AAQ1B;AAEA;A7Bu8KA;A6Bt8KO;AAEP;A7Bu8KA;AACA;A6Bv8KO;AAEP;A7Bw8KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bz8KO;AACL;AACE;AACA;AACD;AACD;A7B28KF;AACA;A6B38KE;A7B68KF;A6B58KE;AACE;AACA;AACE;AACE;AACA;AACD;AACF;AACD;AAA0B;AAAD;AAC1B;AACC;AACA;AACE;AACE;AACA;AACD;AACF;AAAE;AAAmB;AACvB;AACF;AAED;A7Bi9KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bj9KO;AACL;AACE;AACD;AACF;AAED;A7Bk9KA;AACA;AACA;AACA;AACA;AACA;A6Bl9KO;AACL;AAAkC;AAAA;AACnC;AAED;A7Bq9KA;AACA;AACA;AACA;AACA;AACA;A6Br9KO;AACL;AAA0B;AAAA;AAC3B;AAED;A7Bw9KA;AACA;AACA;AACA;AACA;A6Bx9KO;AACL;AACE;AACD;AACF;AAED;A7By9KA;AACA;AACA;AACA;AACA;A6Bz9KO;AACL;AACE;AACD;AACF;AAED;A7B09KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B19KO;AACL;A7B49KF;A6B39KE;AACE;AACD;A7B69KH;A6B59KE;AACD;AAED;A7B69KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B79KO;AACL;AACA;AACD;AAED;A7B89KA;AACA;AACA;AACA;AACA;AACA;AACA;A6B99KO;AACL;AACE;AACD;A7Bg+KH;A6B/9KE;AACD;AAED;A7Bg+KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bh+KO;AACL;AACA;AACD;AAED;A7Bi+KA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bj+KO;AACL;A7Bm+KF;A6Bl+KE;AACE;AACD;A7Bo+KH;AACA;A6Bl+KE;A7Bo+KF;A6Bn+KE;AACE;A7Bq+KJ;A6Bp+KI;AACE;AACD;AACC;AACD;AACF;A7Bs+KH;A6Br+KE;AACD;AAED;A7Bs+KA;AACA;AACA;AACA;AACA;AACA;A6Bt+KO;AACL;AACE;AACA;AACD;A7Bw+KH;A6Bv+KE;A7By+KF;A6Bv+KE;A7By+KF;A6Bx+KE;AACD;AAED;A7By+KA;AACA;AACA;AACA;AACA;AACA;A6Bz+KO;AACL;AACA;AACE;AACD;AAED;A7B0+KF;AACA;A6B1+KE;AACE;AACD;A7B4+KH;A6B3+KE;AACoB;AAAwB;AAG7C;AAED;A7B2+KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B3+KO;AACL;AACE;AACE;AACD;AACF;A7B6+KH;A6B5+KE;AACD;AAED;A7B6+KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B7+KO;AACL;AACE;AACE;AACD;AACF;A7B++KH;A6B9+KE;AACD;AAED;A7B++KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B/+KO;AACL;AACE;AACD;A7Bi/KH;A6B/+KE;AACE;AACD;AACF;AAED;A7Bg/KA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bh/KO;AACL;A7Bk/KF;A6Bj/KE;AAKE;AACE;AACD;AACF;A7B++KH;A6B9+KE;AACD;AAED;A7B++KA;AACA;AACA;AACA;AACA;AACA;AACA;A6B/+KO;AACL;AACA;AACA;AACE;AACD;AACF;AAED;A7Bg/KA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bh/KO;AACL;AAKE;AACE;AACD;AACF;A7B8+KH;A6B7+KE;AACD;AAED;A7B8+KA;AACA;AACA;AACA;AACA;AACA;AACA;A6B9+KO;AACL;A7Bg/KF;A6B/+KE;AAKE;AACE;AACD;AACF;A7B6+KH;A6B5+KE;AACD;AAED;A7B6+KA;AACA;AACA;AACA;AACA;AACA;AACA;A6B7+KO;AACL;AAKE;AACE;AACD;AACF;A7B2+KH;A6B1+KE;AACD;AAED;A7B2+KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B3+KO;AACL;A7B6+KF;A6B5+KE;AACE;AACE;AACD;AACF;A7B8+KH;A6B7+KE;AACD;AAED;A7B8+KA;AACA;AACA;AACA;AACA;AACA;AACA;A6B9+KO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;A7Bk/KA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bl/KO;AACL;AACA;AACE;AACD;AACF;AAED;A7Bm/KA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bn/KO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;A7Bu/KA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bv/KO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;A7B2/KA;AACA;AACA;AACA;AACA;AACA;AACA;A6B3/KO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;A7B+/KA;AACA;AACA;AACA;AACA;AACA;AACA;A6B//KO;AACL;A7BigLF;A6B3/KE;AACE;AACD;A7B6/KH;A6B5/KE;AACD;AAED;A7B6/KA;AACA;AACA;AACA;AACA;AACA;AACA;A6B7/KO;AACL;AACA;AAAe;AAAO;AACvB;AAED;A7BggLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BhgLA;AACE;AACA;AACA;AACA;AAAsB;AAAO;AAC7B;AACA;AACD;AAED;A7BmgLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BngLO;AACL;AACE;AAAY;AAAO;AACpB;A7BugLH;AACA;A6BrgLE;AACA;AACD;AAED;A7BsgLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BtgLO;AACL;AACE;AAAY;AAAO;AAGpB;A7BwgLH;AACA;A6BtgLE;AACD;AAED;A7BugLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BvgLO;AAKL;AAA6D;AAAA;A7BugL/D;A6BxgLE;AAGA;AACA;A7BwgLF;A6BvgLE;AACE;A7BygLJ;A6BxgLI;AACE;A7B0gLN;A6BzgLM;AACD;AACF;A7B2gLH;A6B1gLE;AACD;AAED;A7B2gLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B3gLO;AACL;A7B6gLF;A6B5gLE;AACE;AACE;AACD;AACF;A7B8gLH;A6B1gLE;AACD;AAED;A7B2gLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B3gLO;AACL;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAED;A7B4gLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B5gLO;AAAqC;A7B+gL5C;A6B7gLE;AACE;AACD;AACF;AAED;A7B8gLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B9gLO;AACL;AACA;AACA;AACA;A7BghLF;A6B/gLE;AACE;AACD;AACC;AACD;A7BihLH;AACA;A6B/gLE;AACE;AACD;A7BihLH;A6BhhLE;AACD;AAED;A7BihLA;AACA;AACA;AACA;AACA;AACA;A6BjhLO;AACL;AAKD;AAED;A7B8gLA;AACA;AACA;AACA;AACA;AACA;A6B9gLO;AACL;AAID;AAED;A7B4gLA;AACA;AACA;AACA;AACA;AACA;A6B5gLO;AACL;AAIA;AACD;AAED;A7B0gLA;AACA;AACA;AACA;AACA;AACA;A6B1gLO;AACL;AACE;AACD;A7B4gLH;A6B3gLE;AACD;AAED;A7B4gLA;AACA;AACA;AACA;AACA;A6B5gLA;AACE;AACD;AAED;A7B6gLA;AACA;AACA;AACA;AACA;AACA;A6B7gLO;AACL;AACE;AAAQ;AAAO;AAChB;AAEA;AACF;AAED;A7B+gLA;AACA;AACA;AACA;AACA;AACA;A6B/gLO;AACL;AACD;AAED;A7BghLA;AACA;AACA;AACA;AACA;AACA;A6BhhLO;AACL;AAEA;A7BihLF;A6BhhLE;AAGE;AAEH;AAED;A7B8gLA;AACA;AACA;AACA;AACA;AACA;AACA;A6B9gLO;AACL;A7BghLF;A6B/gLE;AACE;AACA;AACD;AAED;A7BghLF;AACA;A6BhhLE;AACE;AACA;AACA;AACD;A7BkhLH;A6BhhLE;AACD;AAED;A7BihLA;AACA;AACA;AACA;AACA;AACA;A6BjhLO;AACL;A7BmhLF;A6B5gLE;AACE;AACD;AACF;AAED;A7B6gLA;AACA;AACA;AACA;AACA;AACA;A6B7gLO;AACL;A7B+gLF;A6BxgLE;AACE;AACA;AACD;A7B0gLH;A6BrhLwC;A7BuhLxC;A6B1gLE;AACE;AACD;A7B4gLH;A6B3gLE;A7B6gLF;A6BtgLE;AACE;AACD;AACF;AAED;A7BugLA;AACA;AACA;AACA;AACA;AACA;AACA;A6BvgLO;AAAsC;A7B0gL7C;A6BxgLE;AACE;AACD;A7B0gLH;A6B9gL6C;A7BghL7C;A6B1gLE;AACE;AACD;A7B4gLH;A6B3gLE;AAKA;AACD;AAED;A7BwgLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BxgLO;AACL;AACD;AAED;A7BygLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BzgLO;AACL;AACE;AACD;A7B2gLH;A6BzgLE;AACA;A7B2gLF;A6BvgLE;AACE;AACD;A7BygLH;AACA;A6BvgLE;AACD;AAED;A7BwgLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6BxgLO;AACL;AACA;A7B0gLF;A6BxgLE;AACE;AACE;AACD;AACC;AACD;AACF;A7B0gLH;A6BxgLE;AACD;AAED;A7BygLA;AACA;AACA;AACA;AACA;A6BzgLO;AAAwC;AAE7C;AAAwB;AAAO;AAC/B;AAAsC;AAAO;AAC7C;AACD;A7B+gLD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8Bv6MA;A9By6MA;A8Bx6MA;A9B06MA;A8Bh6MA;A9Bk6MA;A8Bj6MA;A9Bm6MA;AACA;AACA;AACA;AACA;A8Bn8MA;A9Bq8MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8Br7MA;A9Bu7MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8Br7MO;AACL;AACS;AAAA;AAEV;AAED;A9Bs7MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8Bt7MO;AACL;A9Bw7MF;A8Bv7ME;AACE;AAAO;AAAkC;AAAzC;AACD;A9B47MH;A8B37ME;AACD;AAED;A9B47MA;AACA;AACA;AACA;AACA;AACA;A8B57MA;AACE;AACA;AACE;AACD;A9B87MH;A8B77ME;AACD;AAED;A9B87MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8B97MO;AACL;AAKc;AAAA;AACf;AAED;A9B47MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8B57MO;AAML;A9By7MF;A8Bx7ME;AACE;AAAO;AAAkC;AAAzC;AACD;A9B67MH;A8B57ME;AACA;AAEQ;AAAA;AAIJ;AACA;AACA;AACE;AACD;AACC;AACD;A9B27MP;A8B17MM;AACD;AACJ;AAED;A9B27MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8B37MO;AAKL;A9By7MF;A8Bx7ME;AACE;AAAO;AAAkC;AAAzC;AACD;A9B67MH;A8B57ME;AACA;A9B87MF;A8B57ME;AACE;AACD;AACC;AACA;AACD;AACF;AAED;A9B67MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8B77MA;AACE;AAAO;AAAwB;AAA/B;AAUD;AAED;A9Bw7MA;AACA;AACA;AACA;AACA;AACA;A8Bx7MO;AACL;AACA;AACE;AACD;A9B07MH;A8Bz7ME;AAEA;A9B07MF;A8Bz7ME;A9B27MF;A8Bx7ME;AACE;AACA;AAGA;AACD;A9Bw7MH;A8Bv7ME;AACD;AAED;A9Bw7MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8Bx7MO;AACL;AACE;AACD;AACF;AAED;A9By7MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8Bz7MA;AACE;AACD;AAED;A9B07MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8B17MA;AACE;A9B47MF;AACA;AACA;AACA;AACA;AACA;A8Bz7ME;AACA;AACA;AACE;AACD;A9B27MH;A8Bz7ME;AACA;AAAO;AAAkC;AAAzC;AAID;AAED;A9B07MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8B17MA;AACE;AAEQ;AAAA;AAEJ;AACA;AACA;AACE;AACD;AACC;AACD;A9B27MP;A8B17MM;AACD;AACJ;A9B47MD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B9uNA;A/BgvNA;A+B/uNA;A/BivNA;A+BhvNA;A/BkvNA;A+B3uNA;A/B6uNA;A+B5uNA;A/B8uNA;A+B7uNA;A/B+uNA;A+B9uNA;A/BgvNA;A+B/uNA;A/BivNA;A+BhvNA;A/BkvNA;A+BjvNA;A/BmvNA;A+BlvNA;A/BovNA;A+BnvNA;A/BqvNA;A+BpvNA;A/BsvNA;A+BxxNA;A/B0xNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BpwNA;A/BswNA;AACA;A+BpwNA;AAEA;A/BqwNA;AACA;AACA;A+BpwNA;AAEA;A/BqwNA;AACA;AACA;A+BpwNA;AAEA;A/BqwNA;AACA;AACA;AACA;AACA;A+BpwNA;AAEA;A/BqwNA;AACA;AACA;AACA;AACA;A+BpwNA;AAEA;A/BqwNA;AACA;AACA;AACA;A+BpwNA;A/BswNA;A+BpwNA;AAEA;A/BqwNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BpwNA;AACE;AACE;AACD;A/BswNH;A+BrwNE;AACD;AAED;A/BswNA;AACA;AACA;AACA;AACA;AACA;AACA;A+BtwNA;AACE;AACA;AACA;AACD;AAED;A/BuwNA;AACA;AACA;AACA;AACA;AACA;A+BvwNA;AACE;AACE;AACA;AAAsB;AAA4B;AACnD;AACC;AACD;AACF;AAED;A/B0wNA;AACA;AACA;AACA;AACA;AACA;A+B1wNA;AAEA;A/B2wNA;AACA;AACA;AACA;AACA;A+B1wNO;AACL;A/B4wNF;A+B3wNE;AAME;AAAuB;AAAuB;AAC/C;AACF;AAED;A/BywNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BzwNO;AACL;AACE;AACA;A/B2wNJ;A+B1wNI;AACE;AACE;AAAkC;AAAuB;AACzD;AACD;AACC;AACA;AACA;AACD;AACF;AACC;AACD;A/B8wNL;AACA;A+B7wNI;AACE;AACE;AAGA;AACD;AACF;A/B6wNL;A+B3wNI;AACE;AAAO;AAAuB;AAA9B;AACD;A/BgxNL;A+B/wNI;A/BixNJ;A+B9wNI;A/BgxNJ;A+B/wNI;AACE;A/BixNN;A+BhxNM;AACE;AACA;AACD;AACF;A/BkxNL;AACA;A+BhxNI;AACE;A/BkxNN;A+BjxNM;AACE;AACD;AACC;AACE;AACD;AACC;AACD;AACC;AACD;AACF;AACF;A/BmxNL;A+BlxNI;AACE;AACD;AAGD;A/BkxNJ;AACA;A+BlxNI;AAQD;AACC;AACE;AACD;AACF;A/B6wNH;A+B5wNE;AAAO;AAAuB;AAA9B;AACD;AAED;A/BgxNA;AACA;AACA;AACA;AACA;A+BhxNO;AACL;AACD;AAED;A/BixNA;AACA;AACA;AACA;AACA;A+BjxNO;AACL;AACE;AACD;A/BmxNH;A+BlxNE;AACE;AACD;A/BoxNH;A+BnxNE;AACE;AACD;A/BqxNH;A+BpxNE;AACD;AAED;A/BqxNA;AACA;AACA;AACA;AACA;A+BrxNO;AACL;AACD;AAED;A/BsxNA;AACA;AACA;AACA;AACA;A+BtxNO;AACL;AACE;AACD;A/BwxNH;A+BvxNE;AACE;AACD;A/ByxNH;A+BxxNE;AACE;AACD;A/B0xNH;A+BzxNE;AACD;AAED;A/B0xNA;AACA;AACA;AACA;AACA;A+B1xNO;AACL;AAAc;AAA0B;AACxC;AACE;AAME;AACA;AACD;A/ByxNL;A+BxxNI;AACD;AACF;AAED;A/ByxNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BzxNA;AAAsD;A/B4xNtD;A+B3xNE;AACA;AACE;AACD;A/B6xNH;A+B5xNE;AACE;AACD;A/B8xNH;A+B7xNE;A/B+xNF;A+B9xNE;AACE;AACD;AAEA;A/B+xNH;A+B9xNE;AACE;AACA;AACA;AACA;AACD;A/BgyNH;A+B/xNE;A/BiyNF;A+BzxNE;AACE;AACE;AACE;AAEE;AAA4B;AAG7B;AACF;AAEA;AACF;AACF;AACF;AAED;A/BuxNA;AACA;AACA;AACA;AACA;AACA;AACA;A+BvxNO;AACL;AACA;AACA;AACA;AACE;AACE;AACA;AACA;AACD;AACF;AACF;AAED;A/BwxNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BxxNO;AACL;A/B0xNF;A+BzxNE;AACE;AACD;A/B2xNH;A+B1xNE;AACA;AACA;A/B4xNF;A+B3xNE;AACE;AACD;A/B6xNH;A+B5xNE;A/B8xNF;A+B7xNE;AACE;AACD;A/B+xNH;A+B9xNE;AACE;AACE;AACD;A/BgyNL;A+B/xNI;AACA;AACD;AACF;AAED;A/BgyNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BhyNO;AACL;AACE;AAA2B;AAC3B;AAA2B;AAC3B;AAA2B;AAC3B;AAA6B;AAC7B;AAA6B;AAC7B;AAA2B;AAC3B;A/BwyNJ;A+B/yNc;AASb;AAED;A/BwyNA;AACA;AACA;AACA;AACA;AACA;A+BxyNA;AACE;AACE;AACE;AACD;AACC;AACA;AACD;AACF;A/B0yNH;A+BzyNE;AACE;AACD;A/B2yNH;A+BzyNE;AACD;AAED;A/B0yNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B1yNO;AAQL;AAEA;AACA;AACA;AACA;AACA;A/BoyNF;A+BnyNE;A/BqyNF;A+BpyNE;AACE;AACD;A/BsyNH;A+BryNE;AACE;AACD;A/BuyNH;A+BryNE;AACA;AAGA;A/BqyNF;A+BpyNE;AAGE;AACA;AAEA;AACA;AAEA;A/BkyNJ;A+BhyNI;AACE;AACD;AACF;A/BkyNH;A+BhyNE;A/BkyNF;A+B/xNE;AACE;AACD;AAGD;AACA;AACA;A/B+xNF;AACA;A+B/xNE;AAAa;AAA4B;AACzC;AACA;AACA;AACA;AAGA;A/BiyNF;A+BhyNE;AACA;AAEA;A/BiyNF;A+BhyNE;AACE;AACA;AACD;AACC;AACD;A/BkyNH;A+BhyNE;AACE;AACD;A/BkyNH;A+BhyNE;A/BkyNF;A+B/xNE;AACE;AACD;AAGD;A/B+xNF;AACA;A+B/xNE;A/BiyNF;A+B9xNE;A/BgyNF;A+B9xNE;AACE;AACD;A/BgyNH;A+B/xNE;AACE;AACD;A/BiyNH;AACA;A+BhyNE;AACE;AACD;A/BkyNH;A+BhyNE;AACE;AACA;A/BkyNJ;A+BjyNI;AACE;AACD;A/BmyNL;A+BlyNI;AACE;AACD;AACF;A/BoyNH;A+BlyNE;AACE;AACD;A/BoyNH;A+BnyNE;AAEA;AACA;A/BoyNF;A+BnyNE;AACE;AACA;AACD;A/BqyNH;A+BpyNE;A/BsyNF;A+BpyNE;AACE;A/BsyNJ;A+BnyNI;A/BqyNJ;A+BnyNI;AACE;AACD;A/BqyNL;A+BnyNI;AACE;AACD;A/BqyNL;AACA;A+BnyNI;AACE;AACD;AACF;AACC;AACA;AACA;AACD;A/BqyNH;A+BpyNE;AACA;AACA;AAEA;AAEA;AACD;AAED;A/BmyNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BnyNO;AACL;AACE;AACD;A/BqyNH;A+BpyNE;A/BsyNF;A+BryNE;AACE;AACE;AACD;AACF;A/BuyNH;A+BtyNE;AACD;AAED;A/BuyNA;AACA;AACA;AACA;A+BvyNO;AACL;AACD;AAED;A/BwyNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BxyNO;AACL;AACA;A/B0yNF;A+BzyNE;AACE;AACD;A/B2yNH;A+B1yNE;A/B4yNF;A+B3yNE;AACE;AACD;AAAW;A/B8yNd;A+B1yNI;AACE;AACD;A/B4yNL;AACA;A+B1yNI;AACE;AACD;AAGD;AACA;AACA;AACA;AACA;A/B0yNJ;AACA;A+B1yNI;A/B4yNJ;A+B3yNI;AACE;AACD;A/B6yNL;AACA;A+B3yNI;AACE;AACD;AACF;A/B6yNH;A+B3yNE;AACD;AAED;A/B4yNA;AACA;AACA;AACA;AACA;A+B5yNO;AACL;AACA;AACA;AACE;AACE;AACA;AAFgB;AAIlB;AACD;AACF;AAED;A/B6yNA;AACA;AACA;AACA;AACA;AACA;A+B7yNA;AACE;A/B+yNF;A+B5yNE;AACD;A/B8yND;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCtgPA;AhCwgPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCtgPA;AhCwgPA;AACA;AACA;AACA;AgCtgPA;AAEA;AhCugPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCtgPO;AAML;AACA;AACA;AhCmgPF;AACA;AACA;AgClgPE;AhCogPF;AgClgPE;AACE;AACE;AACD;AACC;AACA;AhCogPN;AgCngPM;AACD;AACF;AhCqgPH;AgCpgPE;AACA;AhCsgPF;AgCrgPE;AACE;AACD;AhCugPH;AgCtgPE;AAKA;AACE;AACE;AAKD;AhCggPL;AACA;AgC//OI;AACA;AACA;AACD;AACF;AAED;AhCggPA;AACA;AACA;AACA;AACA;AACA;AACA;AgChgPO;AACL;AACA;AACE;AACD;AhCkgPH;AgChgPE;AhCkgPF;AgCjgPE;AACE;AACA;AACE;AACE;AACD;AhCmgPP;AgCtgPoB;AAKhB;AACA;AACD;AAEA;AhCmgPH;AgClgPE;AACD;AAED;AhCmgPA;AACA;AACA;AACA;AgCngPO;AACL;AACD;AhCqgPD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCxnPA;AjC0nPA;AiCznPA;AjC2nPA;AiC1nPA;AjC4nPA;AiC9oPA;AjCgpPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiC1oPA;AACA;AAEA;AjC2oPA;AiC1oPO;AAEP;AjC2oPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiC5oPO;AACL;AAAkB;AAAiC;AAAC;AAAD;AACnD;AAEA;AjCipPF;AiChpPE;AACE;AACD;AACC;AACA;AACA;AAMA;AACD;AACF;AAED;AjC4oPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiC5oPO;AACL;AAMD;AAED;AjCwoPA;AACA;AACA;AACA;AACA;AACA;AiCxoPO;AACL;AAAO;AAA6C;AAApD;AACD;AAED;AjC4oPA;AACA;AACA;AACA;AACA;AACA;AiC5oPO;AACL;AAAO;AAA6C;AAApD;AACD;AAED;AjCgpPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiChpPO;AACL;AACA;AAII;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAGH;AACD;AAED;AjC4oPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiC5oPO;AAML;AACA;AACE;AACD;AACD;AjCyoPF;AiCxoPE;AACE;AACD;AjC0oPH;AiCzoPE;AACD;AAED;AjC0oPA;AACA;AACA;AACA;AACA;AACA;AiC1oPO;AACL;AAKE;AACC;AAEJ;AAED;AjCsoPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCtoPO;AACL;AACA;AjCwoPF;AiCvoPE;AACE;AACD;AjCyoPH;AiCxoPE;AjC0oPF;AiCzoPE;AAIE;AACD;AjCwoPH;AiCvoPE;AACE;AACA;AACA;AACE;AACA;AACA;AACE;AADgE;AAGnE;AACC;AACD;AjCyoPL;AACA;AiCxoPI;AACE;AACD;AjC0oPL;AiCzoPI;AAEA;AACA;AjC0oPJ;AiCzoPI;AACE;AAEO;AAAA;AjC2oPb;AiCzoPM;AACE;AACD;AACF;AjC2oPL;AiC1oPI;AACD;AAED;AAEI;AACE;AACD;AjC0oPP;AiCzoPM;AACD;AAEC;AACE;AACD;AjC0oPP;AiCzoPM;AACD;AAEJ;AAED;AjCyoPA;AACA;AACA;AACA;AACA;AACA;AiCzoPA;AACE;AACA;AACA;AACA;AACE;AAED;AAGD;AjCwoPF;AACA;AiCxoPE;AjC0oPF;AiCzoPE;AACE;AACD;AjC2oPH;AiC1oPE;AACD;AAED;AjC2oPA;AACA;AACA;AACA;AACA;AACA;AiC3oPA;AACE;AACD;AAED;AjC4oPA;AACA;AACA;AACA;AACA;AACA;AiC5oPO;AACL;AACD;AjC8oPD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCr5PA;AlCu5PA;AkCt5PA;AlCw5PA;AkCv5PA;AlCy5PA;AkCx5PA;AlC05PA;AkCp7PA;AlCs7PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCp7PA;AlCs7PA;AACA;AACA;AACA;AACA;AACA;AkC/6PA;AACA;AAEA;AlCg7PA;AkC/6PA;AAEA;AlCg7PA;AkC/6PA;AAEA;AlCg7PA;AACA;AACA;AACA;AACA;AACA;AkC/6PO;AAEP;AlCg7PA;AACA;AACA;AACA;AACA;AACA;AACA;AkCj7PO;AACL;AACD;AAED;AlCk7PA;AACA;AACA;AACA;AACA;AACA;AkCl7PO;AACL;AAGD;AAED;AlCi7PA;AACA;AACA;AACA;AACA;AACA;AACA;AkCj7PO;AACL;AACA;AACD;AAED;AlCk7PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCl7PO;AAML;AAAwC;AAAO;AAC/C;AlCi7PF;AkCh7PE;AACE;AACA;AlCk7PJ;AkCh7PI;AACE;AACA;AACA;AlCk7PN;AkCh7PM;AACE;AAOD;AACF;AACF;AlC46PH;AkC36PE;AACD;AAED;AlC46PA;AACA;AACA;AACA;AACA;AACA;AACA;AkC56PO;AACL;AACE;AACD;AlC86PH;AkC76PE;AACA;AlC+6PF;AkC56PE;AACE;AACE;AlC86PN;AkC76PM;AACE;AACD;AACF;AACF;AlC+6PH;AACA;AkC96PE;AAKE;AACA;AlC46PJ;AkCz6PI;AACE;AlC26PN;AkC16PM;AACE;AACE;AACD;AACF;AACF;AACF;AlC46PH;AkC16PE;AlC46PF;AkC16PE;AAKE;AACA;AACA;AlCw6PJ;AkCv6PI;AACE;AlCy6PN;AkCx6PM;AACE;AACD;AlC06PP;AkCz6PM;AACE;AACD;AACF;AACF;AlC26PH;AkC16PE;AACD;AAED;AlC26PA;AACA;AACA;AACA;AACA;AACA;AACA;AkC36PO;AACL;AACD;AAED;AlC46PA;AACA;AACA;AACA;AACA;AACA;AkC56PA;AACE;AlC86PF;AkC76PE;AACE;AACE;AACD;AACF;AACC;AACD;AlC+6PH;AkC96PE;AAEA;AlC+6PF;AkC96PE;AACE;AACE;AACD;AlCg7PL;AkC/6PI;AACE;AACD;AACC;AACD;AACF;AlCi7PH;AkCh7PE;AACD;AAED;AlCi7PA;AACA;AACA;AACA;AACA;AACA;AkCj7PA;AACE;AlCm7PF;AkCl7PE;AACE;AACD;AlCo7PH;AkCn7PE;AACE;AACE;AACD;AACF;AACC;AACD;AACF;AAED;AlCo7PA;AACA;AACA;AACA;AACA;AACA;AACA;AkCp7PO;AACL;AACD;AAED;AlCq7PA;AACA;AACA;AACA;AACA;AACA;AkCr7PO;AACL;AACA;AACD;AAED;AlCs7PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCt7PA;AACE;AACA;AACD;AAED;AlCu7PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCv7PO;AACL;AADsC;AAIxC;AlCw7PA;AACA;AACA;AACA;AACA;AACA;AACA;AkCz7PA;AACE;AACA;AACD;AAED;AlC07PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkC17PO;AACL;AACA;AlC47PF;AkC37PE;AACE;AACA;AACA;AACE;AACD;AlC67PL;AkC57PI;AACE;AAEA;AACD;AlC67PL;AkC37PI;AAIE;AACA;AACD;AAGD;AACA;AlCw7PJ;AACA;AkCx7PI;AAEsB;AAAO;AAC3B;AAEA;AAGA;AAED;AACF;AlCs7PH;AkCr7PE;AACD;AAED;AlCs7PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCt7PO;AACL;AAGD;AAED;AlCq7PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCr7PO;AACL;AACA;AACA;AACD;AlCu7PD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCj0QA;AnCm0QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCj0QA;AnCm0QA;AACA;AACA;AACA;AACA;AACA;AmCj0QO;AACL;AACA;AACE;AACD;AACF;AAED;AnCk0QA;AACA;AACA;AACA;AACA;AACA;AmCl0QO;AACL;AACA;AACA;AACE;AACA;AACA;AACD;AACF;AAED;AnCm0QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCn0QO;AACL;AACA;AnCq0QF;AmCp0QE;AACE;AACD;AnCs0QH;AmCr0QE;AACD;AnCu0QD;AACA;AACA;AACA;AACA;AACA;AACA;AoC13QA;ApC43QA;AoC54QA;ApC84QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoC14QA;AACA;AAEA;ApC24QA;AoC14QA;AAUA;ApCm4QA;AoCl4QA;AAmBA;ApCk3QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCj3QO;AACL;AACA;ApCm3QF;AoCj3QE;AACE;AACD;ApCm3QH;AoCj3QE;AACD;AAED;ApCk3QA;AACA;AACA;AACA;AACA;AACA;AoCl3QA;AACE;AACA;AACE;AACD;ApCo3QH;AoCl3QE;AACE;ApCo3QJ;AoCl3QI;AACE;AACD;AACC;AACD;AACC;AACA;ApCo3QN;AoCl3QM;AACE;AACD;AACF;AACF;AACF;AAED;ApCm3QA;AACA;AACA;AACA;AACA;AACA;AoCn3QA;AACE;ApCq3QF;AoCn3QE;AACE;AACD;AACC;AACD;AACF;AAED;ApCo3QA;AACA;AACA;AACA;AACA;AACA;AACA;AoCp3QA;AACE;AAEA;AACE;AACE;AACD;AACF;AAED;AACD;ApCo3QD;AACA;AACA;AACA;AACA;AACA;AACA;AqC9+QA;ArCg/QA;AqC/+QA;ArCi/QA;AqCh/QA;ArCk/QA;AqCj/QA;ArCm/QA;AqCl/QA;ArCo/QA;AqCn/QA;ArCq/QA;AqCp/QA;ArCs/QA;AqCr/QA;ArCu/QA;AqC7gRA;ArC+gRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqCrgRA;ArCugRA;AACA;AACA;AACA;AACA;AACA;AACA;AqCrgRO;AAML;AACA;AACA;AACA;AACA;AACA;ArCkgRF;AqCjgRE;AACE;AACD;ArCmgRH;AqClgRE;AAEA;AACA;ArCmgRF;AqClgRE;AACE;AACD;ArCogRH;AqClgRE;ArCogRF;AqCngRE;ArCqgRF;AqCpgRE;ArCsgRF;AqCrgRE;AAGA;ArCqgRF;AqCpgRE;AAGA;AACA;AAEA;AACA;AACA;AACA;ArCmgRF;AqClgRE;AACE;AACA;AAGA;AACA;AACA;AACA;AACA;AACE;AADU;AAGZ;AACA;AACA;AACA;AACA;AACA;AAEM;AACA;AACA;AACA;AAJF;AAOJ;AACA;AACA;AACA;AA5B4B;AA8B9B;ArCggRF;AqC//QE;AACE;AACD;ArCigRH;AqChgRE;AACD;ArCkgRD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCjnRA;AtCmnRA;AsClnRA;AtConRA;AsCnnRA;AtCqnRA;AsCpnRA;AtCsnRA;AsCrnRA;AtCunRA;AsCtnRA;AtCwnRA;AsCvnRA;AtCynRA;AsCxnRA;AtC0nRA;AsCznRA;AtC2nRA;AsCnpRA;AtCqpRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCzoRA;AtC2oRA;AACA;AACA;AsCzoRA;AAEA;AtC0oRA;AACA;AACA;AACA;AACA;AsCzoRA;AAEA;AtC0oRA;AACA;AACA;AACA;AACA;AACA;AsCzoRA;AAEA;AtC0oRA;AACA;AACA;AACA;AACA;AACA;AACA;AsCzoRA;AAA8C;AtC4oR9C;AsCzoRE;AACE;AACD;AtC2oRH;AsC1oRE;AACD;AAED;AtC2oRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsC3oRA;AACE;AtC6oRF;AsC5oRE;AACE;AACD;AtC8oRH;AsC5oRE;AtC8oRF;AsC7oRE;AACE;AACD;AtC+oRH;AsC9oRE;AACD;AAED;AtC+oRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsC/oRA;AACE;AACA;AAEA;AtCgpRF;AsC/oRE;AACE;AtCipRJ;AsChpRI;AACE;AACA;AACD;AACF;AtCkpRH;AsChpRE;AACE;AACE;AACA;AAFa;AAIf;AACD;AtCkpRH;AsChpRE;AACD;AAED;AtCipRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCjpRA;AACE;AtCmpRF;AsCjpRE;AACE;AACD;AAGD;AACA;AtCipRF;AACA;AsCjpRE;AtCmpRF;AsClpRE;AACE;AAD8C;AtCspRlD;AsCnpRI;AACE;AACD;AAIC;AACA;AACA;AACD;AACF;AtCkpRH;AsChpRE;AACD;AAED;AtCipRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCjpRA;AACE;AACE;AACE;AACD;AACF;AtCmpRH;AsClpRE;AACD;AAED;AtCmpRA;AACA;AACA;AACA;AACA;AACA;AsCnpRA;AACE;AAAuB;AAAD;AtCupRxB;AsCrpRE;AACE;AtCupRJ;AsCrpRI;AACE;AADqC;AtCypR3C;AsCrpRM;AACE;AACA;AACE;AACD;AACF;AACF;AACF;AACF;AAED;AtCspRA;AACA;AACA;AACA;AACA;AsCtpRA;AACE;AACE;AACD;AtCwpRH;AsCvpRE;AACE;AACE;AACD;AtCypRL;AsCxpRI;AtC0pRJ;AsCxpRI;AACE;AACD;AtC0pRL;AsCxpRI;AtC0pRJ;AsCppRI;AACE;AACD;AtCspRL;AsCppRI;AtCspRJ;AsCrpRI;AACE;AACD;AAGD;AACA;AtCqpRJ;AACA;AsCrpRI;AtCupRJ;AsCtpRI;AACE;AACA;AACD;AACF;AtCwpRH;AsCtpRE;AACD;AAED;AtCupRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCvpRO;AAQL;AACA;AAKA;AACA;AAEA;AAEA;AAMA;AACA;AAGA;AtCqoRF;AsCpoRE;AACE;AtCsoRJ;AsCnoRI;AACE;AACA;AACE;AACD;AtCqoRP;AACA;AsCnoRM;AtCqoRN;AsCpoRM;AACE;AACD;AACF;AAGD;AACA;AtCooRJ;AACA;AsCpoRI;AACE;AACD;AtCsoRL;AsCpoRI;AACE;AACA;AACD;AtCsoRL;AsCroRI;AACD;AtCuoRH;AsCroRE;AAEA;AACE;AACE;AtCsoRN;AsCroRM;AACE;AACD;AAED;AtCsoRN;AACA;AsCtoRM;AACA;AACA;AACD;AACF;AACF;AAED;AtCuoRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCvoRO;AACL;AtCyoRF;AsCxoRE;AACE;AACD;AtC0oRH;AsCzoRE;AACE;AACE;AACA;AAII;AACE;AACD;AtCwoRX;AsCvoRU;AAAS;AAAM;AAAQ;AAAQ;AAAvB;AACT;AAGH;AACD;AACF;AACF;AAED;AtC2oRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsC3oRO;AACL;AAEI;AAA2B;AAA5B;AAKJ;AAED;AtCyoRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCzoRO;AACL;AACE;AACD;AtC2oRH;AsC1oRE;AACA;AACA;AtC4oRF;AsC3oRE;AACE;AACA;AACD;AtC6oRH;AsC5oRE;AACE;AACA;AAAW;AAAO;AACnB;AACF;AAED;AtC+oRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsC/oRA;AACE;AACD;AAED;AtCgpRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsChpRO;AACL;AACE;AACE;AAEI;AAMD;AACJ;AACC;AACD;AACC;AACD;AACF;AtC4oRH;AsC3oRE;AAAO;AAA4B;AAAnC;AACD;AAED;AtC+oRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCjpRE;AtCmpRF;AACA;AACA;AACA;AACA;AACA;AsCjpRE;AAAiD;AtCopRnD;AsCnpRI;AACA;AACA;AtCqpRJ;AsCppRI;AACA;AtCspRJ;AsCrpRI;AAEA;AtCspRJ;AsCrpRI;AAII;AACA;AACA;AAAmC;AAAA;AACjC;AAA0B;AAAa;AAAd;AAC1B;AtCypRT;AsCxpRQ;AACD;AAGD;AAAW;AAba;AAe3B;AAED;AtCwpRF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsC1pRI;AACA;AAAkC;AAAA;AAClC;AAOD;AAED;AtCupRF;AACA;AACA;AACA;AACA;AsCvpRI;AACA;AACD;AtCypRH;AACA;AACA;AsCxpRA;AtC0pRA;AACA;AACA;AACA;AACA;AACA;AACA;AsC5pRO;AACL;AtC8pRF;AsC5pRE;AACE;AACD;AtC8pRH;AACA;AsC7pRE;AACD;AAGD;AtC6pRA;AACA;AsC7pRA;AAEA;AtC8pRA;AACA;AACA;AACA;AACA;AACA;AsC7pRO;AACL;AADgC;AAAA;AtCkqRlC;AsC/pRE;AACE;AACA;AtCiqRJ;AsChqRI;AACE;AACD;AtCkqRL;AsCjqRI;AACE;AACD;AtCmqRL;AACA;AsClqRI;AACE;AACD;AACF;AtCoqRH;AsCnqRE;AACD;AAED;AtCoqRA;AACA;AACA;AACA;AACA;AACA;AsCpqRO;AACL;AAAqC;AAAD;AAGpC;AtCsqRF;AsCrqRE;AAEA;AACD;AAED;AtCqqRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCrqRO;AACL;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AACD;AACC;AACA;AACD;AACF;AAED;AtCsqRA;AACA;AsCtqRO;AAEP;AtCuqRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCxqRO;AACL;AAAO;AAA6D;AAApE;AAGD;AAED;AtC0qRA;AACA;AACA;AACA;AACA;AsC1qRO;AACL;AAID;AAED;AtCwqRA;AACA;AACA;AACA;AsCxqRO;AACL;AACA;AAID;AAED;AtCsqRA;AACA;AACA;AACA;AACA;AsCtqRO;AACL;AAMD;AAED;AtCkqRA;AACA;AACA;AACA;AACA;AsClqRO;AACL;AACD;AtCoqRD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuC1ySA;AvC4ySA;AuC3ySA;AvC6ySA;AuC9zSA;AvCg0SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuC3zSA;AACA;AAOA;AvCuzSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuCtzSO;AAML;AvCmzSF;AuClzSE;AACE;AACA;AACA;AAKE;AACD;AvCgzSL;AuC/ySI;AACD;AACC;AACA;AACE;AACE;AACD;AACF;AACD;AACD;AACF;AAED;AvCgzSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuChzSO;AACL;AACA;AACA;AACA;AACA;AACA;AAII;AACA;AvC+ySN;AuC9ySM;AvCgzSN;AuC/ySM;AACE;AACE;AACD;AACF;AACD;AACD;AAEC;AvCgzSN;AuC/ySM;AACE;AAMD;AACF;AACJ;AvC4ySD;AACA;AACA;AACA;AACA;AACA;AACA;AwC35SA;AxC65SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwC35SA;AxC65SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwC35SO;AACL;AACD;AxC65SD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyC/6SA;AzCi7SA;AyCh7SA;AzCk7SA;AyCj7SA;AzCm7SA;AyCl7SA;AzCo7SA;AyCn7SA;AzCq7SA;AyCz8SA;AzC28SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyCn8SA;AzCq8SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyCn8SO;AAEP;AzCo8SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyCr8SA;AACE;AACD;AAED;AzCs8SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyCt8SO;AACL;AzCw8SF;AyCl8SE;AzCo8SF;AyCn8SE;AACE;AAGE;AACH;AzCm8SH;AyCl8SE;AAGE;AAGF;AzCg8SF;AyC/7SE;AAKA;AzC67SF;AyCv7SE;AAEA;AAAO;AAA2C;AAChD;AACA;AACA;AACA;AACA;AALgD;AAAlD;AAOD;AAED;AzC07SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyC57SE;AzC87SF;AACA;AACA;AACA;AACA;AyC57SE;AAA2C;AzC+7S7C;AyC97SI;AACA;AACA;AzCg8SJ;AyC/7SI;AACA;AzCi8SJ;AyCh8SI;AACA;AzCk8SJ;AyCj8SI;AAEA;AzCk8SJ;AyCj8SI;AAEA;AzCk8SJ;AyCj8SI;AAEA;AzCk8SJ;AyCj8SI;AAEA;AzCk8SJ;AACA;AACA;AACA;AACA;AACA;AACA;AyCj8SI;AAKE;AACA;AAAA;AAAA;AAGF;AzC+7SJ;AyC97SI;AACD;AAED;AzC+7SF;AACA;AACA;AACA;AACA;AACA;AACA;AyCj8SI;AACD;AAED;AzCk8SF;AACA;AACA;AACA;AACA;AACA;AACA;AyCl8SI;AACE;AACA;AACD;AACF;AACD;AzCo8SF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyCr8SqC;AzCu8SrC;AyCt8SI;AACA;AACE;AACE;AACD;AzCw8SP;AyCv8SM;AACD;AACF;AAED;AzCw8SF;AACA;AACA;AACA;AACA;AACA;AACA;AyCx8SI;AACE;AACD;AzC08SL;AyCz8SI;AzC28SJ;AyCz8SI;AAEA;AzC08SJ;AyCz8SI;AACE;AzC28SN;AyCz8SM;AzC28SN;AyCz8SM;AzC28SN;AyC18SM;AACE;AACA;AACD;AACF;AACC;AACD;AACF;AAED;AzC28SF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyC38SI;AACE;AACD;AzC68SL;AyC58SI;AzC88SJ;AyC78SI;AAIE;AACD;AzC48SL;AyC38SI;AzC68SJ;AyC58SI;AACE;AACA;AzC88SN;AyC58SM;AACD;AACF;AAED;AzC68SF;AACA;AACA;AACA;AACA;AyC78SI;AACA;AzC+8SJ;AyC98SI;AACE;AACD;AzCg9SL;AACA;AyC/8SI;AAGI;AADG;AAIP;AACD;AAED;AzC68SF;AACA;AACA;AACA;AACA;AyC78SI;AACA;AACA;AACD;AzC+8SH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0C3uTA;A1C6uTA;A0C5uTA;A1C8uTA;A0CpwTA;A1CswTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0CpwTA;A1CswTA;AACA;AACA;A0ChwTA;AACA;A1CkwTA;A0ChwTA;A1CkwTA;AACA;AACA;A0ChwTA;AAEA;A1CiwTA;AACA;AACA;AACA;A0ChwTA;AAEA;A1CiwTA;AACA;AACA;AACA;A0ChwTA;AAEA;A1CiwTA;AACA;AACA;AACA;A0ChwTA;AAEA;A1CiwTA;AACA;AACA;AACA;AACA;A0ChwTO;AACL;A1CkwTF;A0CjwTE;AACE;AACE;AACD;A1CmwTL;A0ClwTI;AACA;AACD;A1CowTH;A0CnwTE;AAAO;AAA4B;AAAnC;AACD;AAED;A1CuwTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0CvwTO;AACL;AACA;AACE;AACD;A1CywTH;AACA;A0CxwTE;AACA;A1C0wTF;A0CzwTE;AACE;A1C2wTJ;A0C1wTI;AAME;AACA;AACD;A1CuwTL;A0CtwTI;AACA;AACD;A1CwwTH;A0CvwTE;AACD;AAED;A1CwwTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0CxwTO;AACL;AAAO;AAA4B;AAAW;AAAuB;AAArE;AACD;AAED;A1C8wTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0C9wTO;AACL;AACE;AACD;AACC;AACE;AACD;A1CgxTL;A0C/wTI;AACD;AACF;AAED;A1CgxTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0ChxTO;AACL;AACA;A1CkxTF;A0CjxTE;AACE;AACD;A1CmxTH;A0ClxTE;A1CoxTF;A0CnxTE;AACE;AACD;A1CqxTH;A0CpxTE;AACE;AACD;AACC;AACD;AACF;AAED;A1CqxTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0CrxTO;AAAqC;AAAX;AAAW;A1C0xT5C;A0CzxTE;AACE;AACD;A1C2xTH;A0C1xTE;AACE;AACD;AACD;A1C4xTF;AACA;A0C5xTE;AAAgB;AAAG;AAAG;AAAP;A1CkyTjB;A0CjyTE;AAAyB;AAAA;AAAA;AAAA;A1CuyT3B;AACA;A0CryTI;AACE;AACE;AACD;AACC;AACE;AACD;A1CuyTT;A0CtyTQ;AACE;AAAY;AAAS;AAAS;AAAnB;AACZ;A1C4yTT;A0C3yTQ;AACD;AACC;AAA0B;AAAwB;AAClD;AAA0B;AAAwB;A1CizT1D;A0ChzTQ;AACE;AACD;A1CkzTT;A0CjzTQ;AACE;AACA;AAAY;AAAS;AAAS;AAAnB;AACZ;A1CuzTT;A0CtzTQ;AACD;AACF;A1CwzTL;AACA;A0CvzTI;AACE;AACD;AACF;A1CyzTH;A0CxzTE;AACD;AAED;A1CyzTA;AACA;AACA;AACA;AACA;AACA;A0CzzTA;AACE;AACE;AACD;A1C2zTH;A0C1zTE;AACE;AAAwB;AAG3B;AAED;A1C0zTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0C1zTO;AACL;AAAO;AAA4B;AAAnC;AACD;AAED;A1C8zTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0C9zTO;AACL;AAAO;AAA4C;AAAnD;AACD;AAED;A1Ck0TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Cl0TO;AACL;AACD;A1Co0TD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2C3lUA;A3C6lUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2C3lUA;A3C6lUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2C3lUO;AAEP;A3C4lUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2C5lUO;AAEP;A3C6lUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2C7lUO;AAEP;A3C8lUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2C9lUO;AACL;AACA;AACA;AAH+B;AAMjC;A3C+lUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2ChmUO;AACL;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARK;AAUR;AAED;A3CimUA;AACA;AACA;AACA;AACA;AACA;AACA;A2CjmUO;AACL;AAMD;AAED;A3C6lUA;AACA;AACA;AACA;AACA;AACA;AACA;A2C7lUO;AACL;AAMD;AAED;A3CylUA;AACA;AACA;AACA;AACA;AACA;A2CzlUO;AACL;AACA;AACA;AACA;A3C2lUF;A2C1lUE;AACE;A3C4lUJ;A2C3lUI;AACE;AACD;A3C6lUL;A2C5lUI;AACA;AACA;AACA;A3C8lUJ;A2C7lUI;AACE;AACD;AACF;A3C+lUH;A2C9lUE;AACE;AACD;A3CgmUH;A2C/lUE;AACD;AAED;A3CgmUA;AACA;AACA;AACA;AACA;AACA;AACA;A2ChmUO;AACL;AACE;AACD;AACC;AACD;AACC;AACD;AACF;AAED;A3CimUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2CjmUO;AAKL;AACE;AAA4B;AAC1B;AACA;AACA;AACA;AAJ0B;A3CqmUhC;A2C9lUE;AACE;AACD;AACC;AACD;AACF;AAED;A3C+lUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2C/lUO;AACL;AAMD;AAED;A3C2lUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2C3lUO;AACL;AACE;AACD;A3C6lUH;A2C5lUE;AACD;AAED;A3C6lUA;AACA;AACA;AACA;AACA;AACA;A2C7lUO;AACL;AAMD;AAED;A3CylUA;AACA;AACA;AACA;AACA;AACA;A2CzlUO;AACL;AACD;AAED;A3C0lUA;AACA;AACA;AACA;AACA;AACA;A2C1lUO;AACL;AACE;AACD;A3C4lUH;A2C3lUE;AAMD;AAED;A3CulUA;AACA;AACA;AACA;AACA;A2CvlUO;AACL;AACE;AACD;A3CylUH;A2CxlUE;AACE;AACA;AACA;AACA;AAJK;AAMR;A3C0lUD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Cn3UA;A5Cq3UA;A4Cp3UA;A5Cs3UA;A4Cr3UA;A5Cu3UA;A4Ct3UA;A5Cw3UA;A4Cv3UA;A5Cy3UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Cn4UA;A5Cq4UA;AACA;A4Cn4UO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAToB;AAYtB;A5Co4UA;AACA;AACA;AACA;AACA;AACA;A4Cp4UO;AACL;AACA;AACA;AACA;AAJ4B;AAO9B;A5Cq4UA;AACA;AACA;AACA;AACA;A4Cr4UO;AAEP;A5Cs4UA;AACA;AACA;AACA;AACA;AACA;AACA;A4Ct4UA;AAEA;A5Cu4UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Ct4UO;AACL;AAAc;AAAc;AAAf;AACb;AAAkB;AAAc;AAAf;AACjB;AACA;AACA;AAAqB;AAAe;AAAhB;AALY;AAQlC;A5Cg5UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Ch5UO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAd+B;AAgBjC;A5Ck5UA;AACA;AACA;AACA;AACA;AACA;AACA;A4Cl5UA;AAEA;A5Cm5UA;AACA;AACA;AACA;AACA;A4Cl5UO;AACL;AACE;AACE;AACD;AACF;A5Co5UH;A4Cn5UE;AACD;AAED;A5Co5UA;AACA;AACA;AACA;AACA;A4Cp5UO;AACL;AACD;AAED;A5Cq5UA;AACA;AACA;AACA;AACA;AACA;A4Cr5UO;AACL;AASD;AAED;A5C84UA;AACA;AACA;AACA;AACA;AACA;A4C94UO;AACL;AACD;AAED;A5C+4UA;AACA;AACA;AACA;AACA;AACA;A4C/4UO;AACL;AACA;AACD;AAED;A5Cg5UA;AACA;AACA;AACA;AACA;AACA;AACA;A4Ch5UO;AACL;AACE;AACD;A5Ck5UH;A4Cj5UE;AACE;AACD;A5Cm5UH;A4Cl5UE;AACE;AACD;A5Co5UH;A4Cn5UE;AACE;AACD;A5Cq5UH;A4Cp5UE;AACD;AAED;A5Cq5UA;AACA;AACA;AACA;AACA;AACA;AACA;A4Cr5UO;AACL;AAKA;AAAO;AAA2B;AAAlC;AACD;AAED;A5Cq5UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Cr5UO;AACL;AAKA;AACD;AAED;A5Ck5UA;AACA;AACA;AACA;AACA;AACA;A4Cl5UO;AACL;AACA;AACA;AAKA;AACD;AAED;A5C+4UA;AACA;AACA;AACA;AACA;AACA;A4C/4UO;AACL;AACA;AACD;AAED;A5Cg5UA;AACA;AACA;AACA;AACA;AACA;AACA;A4Ch5UO;AACL;AACA;AACD;AAED;A5Ci5UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Cj5UO;AACL;AACA;A5Cm5UF;A4Cl5UE;AACE;AACA;AACA;A5Co5UJ;A4Cl5UI;AACA;AACE;AACA;AAFc;AAIhB;AACA;AACE;AAAa;AAAO;AACpB;AAAc;AAAO;AAFO;AAI9B;AACD;A5Cw5UH;A4Cv5UE;AAAO;AAA8B;AAArC;AACD;AAED;A5C25UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4C35UO;AACL;AACA;AACD;AAED;A5C45UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4C55UO;AACL;AACE;AACD;A5C85UH;A4C75UE;AACD;AAED;A5C85UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4C95UO;AACL;AACA;AACA;AACA;AACA;A5Cg6UF;A4C/5UE;AACE;AAAe;AAAwB;A5Cm6U3C;A4Ch6UI;AAIE;AACA;AAED;AACC;AAEA;A5C65UN;A4C55UM;AACD;A5C85UL;A4C75UI;AACD;AAGD;AACA;AAEA;A5C45UF;AACA;A4C55UE;AACA;AACA;AACA;AACA;A5C85UF;A4C35UE;AACA;AACA;A5C65UF;A4C55UE;AAEA;AACA;A5C65UF;A4C55UE;AAEA;A5C65UF;A4C15UE;AACA;AACA;A5C45UF;A4Cz5UE;AAOE;AACA;AACA;AACA;AAIA;AACD;AACC;AACA;AACD;A5Ck5UH;AACA;A4Ch5UE;AACE;AACD;AACC;AACD;AACC;AACD;AACC;AACD;AACC;AACD;AACC;AACD;A5Ck5UH;AACA;A4Ch5UE;AAME;AACD;A5C64UH;A4C54UE;AACE;AAMD;A5Cy4UH;A4Cx4UE;AAKE;AAKD;A5Ck4UH;A4Ch4UE;AACE;AAMD;AACC;AAID;A5C03UH;AACA;A4Cx3UE;A5C03UF;A4Cz3UE;AACE;AACD;A5C23UH;A4C13UE;AACE;AACA;AACA;AAEA;A5C23UJ;A4C13UI;AACD;AACC;AACE;AACA;AAFiB;AAIpB;AACC;AACD;AACC;AACA;AACE;AADe;AAIjB;AACA;AACD;AACC;AACA;AACA;AACA;A5C23UJ;A4Ct3UI;AACA;AAIA;AACA;AACD;AAEA;AAEC;AACA;AACD;AACC;AACA;AACA;AACE;AACD;A5Cm3UL;A4Cl3UI;AACE;AACD;AACF;AACC;A5Co3UJ;A4Cn3UI;AACE;AACD;A5Cq3UL;A4Cp3UI;AACD;AAED;A5Cq3UF;AACA;A4Cr3UE;AACA;AACD;A5Cu3UD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Cv5VA;A7Cy5VA;A6Cx5VA;A7C05VA;A6Cz5VA;A7C25VA;A6C15VA;A7C45VA;A6C35VA;A7C65VA;A6C55VA;A7C85VA;A6Cn7VA;A7Cq7VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6C36VA;AAEA;A7C46VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6C56VO;AAEP;A7C66VA;AACA;AACA;AACA;AACA;AACA;A6C76VO;AAEP;A7C86VA;AACA;AACA;AACA;AACA;AACA;A6C/6VO;AACL;AACD;AAED;A7Cg7VA;AACA;AACA;AACA;AACA;A6Ch7VO;AACL;AACD;AAED;A7Ci7VA;AACA;AACA;AACA;AACA;A6Cj7VO;AACL;AACA;AACA;AACA;AACA;AALsB;AAQxB;A7Ck7VA;AACA;AACA;AACA;AACA;AACA;AACA;A6Cn7VO;AACL;AACD;AAED;A7Co7VA;AACA;AACA;AACA;AACA;A6Cp7VA;AAEA;A7Cq7VA;AACA;AACA;A6Cp7VO;AACL;AACD;AAED;A7Cq7VA;AACA;AACA;AACA;AACA;AACA;AACA;A6Cr7VA;AAAsB;AAAA;AAEtB;A7Cw7VA;AACA;AACA;AACA;AACA;AACA;AACA;A6Cx7VA;AAA2B;AAEvB;AAAA;AAFuB;AAM3B;A7Cy7VA;AACA;AACA;AACA;AACA;AACA;A6Cz7VA;AAAuC;AAAA;AAGvC;A7C27VA;AACA;AACA;AACA;AACA;A6C37VA;AAAwC;AAAA;AAGxC;A7C67VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6C/7VE;A7Ci8VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6C/7VE;AAA6C;A7Ck8V/C;A6Cl8V+C;AAAjB;AAAiB;A7Cs8V/C;A6Cr8VI;A7Cu8VJ;AACA;AACA;AACA;A6Cr8VI;AAEA;A7Cs8VJ;A6Cr8VI;AAEA;A7Cs8VJ;A6Cr8VI;AAEA;A7Cs8VJ;A6Cr8VI;AAEA;A7Cs8VJ;A6Cr8VI;AAEA;AACE;AAEgB;AAAA;AAEZ;AACE;AAAiB;AAA4B;AAC9C;AACF;AACJ;AACF;AAED;A7Cs8VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Cx8VI;AACD;AAED;A7Cy8VF;AACA;AACA;AACA;AACA;AACA;A6Cz8VI;AACA;AACE;AACD;A7C28VL;AACA;A6Cz8VI;AACE;AACD;A7C28VL;AACA;A6Cz8VI;AACE;AACD;A7C28VL;AACA;A6Cz8VI;AACE;AACD;A7C28VL;AACA;A6Cz8VI;AACD;AAED;A7C08VF;AACA;AACA;AACA;AACA;AACA;AACA;A6C18VI;AACE;A7C48VN;A6C38VM;AACE;AACD;AACC;AACD;AACC;AACD;A7C68VP;A6C58VM;A7C88VN;A6C58VM;A7C88VN;A6C78VM;AACE;AACA;AACD;AACC;AACD;A7C+8VP;A6C98VM;AACD;AACF;AAED;A7C+8VF;AACA;AACA;AACA;AACA;AACA;A6C/8VI;AACD;AAED;A7Cg9VF;AACA;AACA;AACA;AACA;AACA;AACA;A6Ch9VI;AACE;AACD;AACF;AAED;A7Ci9VF;AACA;AACA;AACA;AACA;AACA;AACA;A6Cj9VI;AACE;AACD;AACF;AAED;A7Ck9VF;AACA;AACA;AACA;AACA;AACA;AACA;A6Cl9VI;AACE;AACD;AACF;AAED;A7Cm9VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Cn9VI;AACE;AACD;AACC;AAIA;AACA;AACD;AACF;AAED;A7Ci9VF;AACA;AACA;AACA;AACA;AACA;AACA;A6Cj9VI;A7Cm9VJ;A6Cl9VI;AACE;A7Co9VN;A6Cl9VM;AACD;AACF;AAED;A7Cm9VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Cn9VI;A7Cq9VJ;A6Cp9VI;AACE;A7Cs9VN;A6Cp9VM;AACD;AACF;AAED;A7Cq9VF;AACA;AACA;AACA;AACA;AACA;AACA;A6Cr9VI;AACA;AACA;AACD;AAED;A7Cs9VF;AACA;AACA;AACA;AACA;AACA;AACA;A6Ct9VI;AACA;AACA;AACA;AACD;AAED;A7Cu9VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Cv9VI;A7Cy9VJ;A6Cx9VI;AACE;AAG4B;AAAuB;AAGpD;A7Cu9VL;A6Ct9VI;AACE;AACA;AACA;AACA;AACA;AACA;AACA;A7Cw9VN;A6Cv9VM;AACE;AACA;A7Cy9VR;A6Cx9VQ;AACE;AACD;A7C09VT;A6Cz9VQ;AACA;AACA;AACD;A7C29VP;A6C19VM;AACA;AACA;AACA;AACA;A7C49VN;A6C19VM;A7C49VN;A6C39VM;AACD;A7C69VL;A6C59VI;AACD;AAED;A7C69VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6C79VI;AACA;AAMA;AAAO;AAAyB;AAAhC;AACD;AAED;A7C49VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6C59VI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;A7C29VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6C39VI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;A7C09VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6C19VI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;A7Cy9VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Cz9VI;AAMA;AAAO;AAAwB;AAA/B;AACD;AAED;A7Cw9VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Cx9VI;AACE;AACD;A7C09VL;A6Cz9VI;AACD;AAED;A7C09VF;AACA;AACA;AACA;AACA;AACA;A6C19VI;A7C49VJ;A6C39VI;AACE;AACE;AACD;AACC;AACD;AACF;AACC;AACD;AACF;AAED;A7C49VF;AACA;AACA;AACA;AACA;AACA;AACA;A6C59VI;AACE;AAA+B;AAAuB;AACvD;A7Cg+VL;A6C/9VI;AACD;AAED;A7Cg+VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Ch+VI;AACA;AAEA;AACA;AACA;A7Ci+VJ;A6Ch+VI;AACE;AACD;A7Ck+VL;A6Cj+VI;AACE;AACD;A7Cm+VL;A6Cl+VI;AACD;AAED;A7Cm+VF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Cn+VI;AACE;AACD;AACC;AACD;AACF;A7Cq+VH;AACA;AACA;A6Cp+VA;A7Cs+VA;AACA;AACA;AACA;AACA;AACA;AACA;A6Cx+VA;AAAiC;AAC/B;AAAuB;AADQ;AAAA;AAGjC;A7C6+VA;AACA;AACA;AACA;AACA;A6C7+VA;AACE;AACA;AACE;AACD;A7C++VH;A6C9+VE;AACD;AAED;A7C++VA;AACA;AACA;AACA;AACA;A6C/+VA;AACE;AACE;AACD;AACF;AAED;A7Cg/VA;AACA;AACA;AACA;AACA;AACA;A6Ch/VO;AACL;A7Ck/VF;A6Cj/VE;AACE;AACD;A7Cm/VH;A6Cv/ViD;AAAA;AAO/C;A7Co/VF;A6Cl/VE;AACE;AACD;A7Co/VH;AACA;A6Cn/VE;AACA;AACD;AAED;A7Co/VA;AACA;AACA;AACA;AACA;AACA;A6Cp/VO;AACL;AACA;A7Cs/VF;A6Cr/VE;AACE;A7Cu/VJ;A6Ct/VI;AACE;AACD;AACC;AACE;AACD;A7Cw/VP;A6Cv/VM;AACD;AACF;A7Cy/VH;A6Cv/VE;AACE;AACD;AACC;AACD;A7Cy/VH;A6Cx/VE;AACD;AAED;A7Cy/VA;AACA;AACA;AACA;AACA;AACA;A6Cz/VO;AACL;AACA;AACE;AACA;A7C2/VJ;A6C1/VI;AACD;AACF;AAED;A7C2/VA;AACA;AACA;AACA;AACA;AACA;A6C3/VA;AACE;AACA;AACA;AAHiC;AAMnC;AAEA;A7C2/VA;AACA;AACA;AACA;AACA;AACA;A6C1/VA;AAEA;A7C2/VA;AACA;AACA;A6C1/VO;AACL;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;A7C2/VF;A6C1/VE;AACA;AACD;AAED;A7C2/VA;AACA;AACA;AACA;A6C3/VO;AACL;AACD;AAED;A7C4/VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6C5/VO;AACL;AACE;AACD;A7C8/VH;A6C7/VE;AACE;AACD;AACC;AACE;AACD;A7C+/VL;A6C9/VI;AACD;AACF;AAED;A7C+/VA;AACA;AACA;AACA;AACA;AACA;A6C//VA;AACE;AACE;AACD;A7CigWH;A6ChgWE;AAGI;A7CggWN;A6C//VM;AACE;AACD;A7CigWP;A6ChgWM;AACD;AAGJ;AAED;A7C+/VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6C//VO;AACL;AACE;AACD;A7CigWH;A6ChgWE;AACE;AACD;A7CkgWH;A6CjgWE;AACE;A7CmgWJ;A6ClgWI;AACE;AACD;A7CogWL;A6CngWI;AACE;AACD;A7CqgWL;A6CpgWI;AACD;AACF;AAED;A7CqgWA;AACA;AACA;AACA;AACA;AACA;A6CrgWO;AACL;AACE;AACD;A7CugWH;A6CtgWE;AACD;AAED;A7CugWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6CvgWO;AAaL;AACE;AACD;A7C6/VH;A6C5/VE;AAAa;AAAc;AAa5B;AAED;A7Cm/VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Cn/VO;AAaL;AAAc;AAAc;AAa7B;A7C+9VD;AACA;AACA;AACA;AACA;AACA;AACA;A8C77XA;A9C+7XA;A8C/8XA;A9Ci9XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8C78XA;A9C+8XA;AACA;AACA;AACA;AACA;A8C78XO;AACL;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVK;AAYR;A9C+8XD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+C7+XA;A/C++XA;A+C9+XA;A/Cg/XA;A+CjgYA;A/CmgYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+C9/XA;A/CggYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+C9/XO;AAEP;A/C+/XA;AACA;AACA;AACA;AACA;AACA;A+C//XA;AAEA;A/CggYA;AACA;AACA;AACA;AACA;A+C//XO;AACL;A/CigYF;A+ChgYE;AACE;AACD;A/CkgYH;A+CjgYE;AACD;AAED;A/CkgYA;AACA;AACA;AACA;AACA;AACA;A+ClgYA;AACE;AACA;AAGA;AACA;AACA;A/CkgYF;A+CjgYE;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEE;AACA;AAEF;AAEA;A/C8/XF;A+C5/XE;AACE;AACD;AAGD;AACA;AACA;A/C4/XF;AACA;A+C5/XE;AACE;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BK;AA8BR;AAED;A/Cy/XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Cz/XA;AACE;AACA;AACA;AACE;AACD;A/C2/XH;A+Cz/XE;AACE;AACD;AAGD;AACA;AACA;AACA;A/Cy/XF;AACA;A+Cz/XE;AACD;AAED;A/C0/XA;AACA;AACA;AACA;AACA;AACA;AACA;A+C1/XO;AACL;AACD;AAED;A/C2/XA;AACA;A+C3/XO;AACL;AACD;A/C6/XD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgD9pYA;AhDgqYA;AgD/pYA;AhDiqYA;AgDhqYA;AhDkqYA;AgDprYA;AhDsrYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgDhrYA;AhDkrYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgDhrYA;AACE;AACA;AACA;AAHe;AAMjB;AhDirYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgDtrYE;AhDwrYF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgDvrYA;AhDyrYA;AACA;AACA;AACA;AACA;AACA;AgD1rYA;AAEA;AhD2rYA;AACA;AACA;AACA;AACA;AACA;AACA;AgD1rYO;AACL;AACE;AAEI;AACE;AACE;AACD;AACF;AhD2rYT;AgD1rYQ;AACD;AAGH;AAKD;AACD;AACD;AAED;AhDqrYA;AACA;AACA;AACA;AACA;AACA;AgDrrYO;AACL;AACD;AAED;AhDsrYA;AACA;AACA;AACA;AACA;AACA;AACA;AgDtrYO;AACL;AAAmC;AAAsC;AACzE;AACD;AAED;AhDyrYA;AACA;AACA;AACA;AACA;AACA;AgDzrYO;AACL;AACA;AACA;AAEA;AACE;AACD;AACF;AhD0rYD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiDr0YA;AjDu0YA;AiDt0YA;AjDw0YA;AiDv0YA;AjDy0YA;AiDx0YA;AjD00YA;AiDn2YA;AjDq2YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiDn2YA;AjDq2YA;AACA;AACA;AACA;AACA;AiD91YA;AjDg2YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiD91YA;AAEA;AjD+1YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiDp2YE;AjDs2YF;AACA;AACA;AACA;AACA;AACA;AACA;AiDr2YA;AjDu2YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiD72YE;AjD+2YF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiD92YA;AjDg3YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiDl3YO;AACL;AACA;AACA;AACA;AjDo3YF;AiDl3YE;AACA;AjDo3YF;AiDn3YE;AACE;AACE;AACD;AjDq3YL;AACA;AiDp3YI;AACD;AACC;AACA;AACD;AACF;AAED;AjDq3YA;AACA;AACA;AACA;AACA;AACA;AACA;AiDr3YO;AACL;AACA;AAKA;AAKA;AjD+2YF;AiD92YE;AACE;AACA;AAIE;AAAA;AACA;AAAe;AAElB;AACC;AAAgD;AAAA;AAChD;AACD;AACF;AAED;AjD+2YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiD/2YO;AACL;AACA;AjDi3YF;AiDh3YE;AACE;AACD;AACF;AAED;AjDi3YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiDj3YO;AAML;AACA;AACA;AjD82YF;AiD72YE;AACE;AACD;AACF;AAED;AjD82YA;AACA;AACA;AACA;AACA;AACA;AACA;AiD92YO;AACL;AACA;AACA;AACD;AAED;AjD+2YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiD/2YO;AACL;AACA;AACD;AAED;AjDg3YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiDh3YO;AACL;AACD;AAED;AjDi3YA;AACA;AACA;AACA;AACA;AACA;AACA;AiDj3YO;AACL;AjDm3YF;AiDl3YE;AACE;AACD;AACC;AACD;AACF;AAED;AjDm3YA;AACA;AACA;AACA;AACA;AACA;AACA;AiDn3YO;AACL;AACD;AAED;AjDo3YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiDp3YO;AACL;AACA;AACA;AACD;AAED;AjDq3YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiDr3YA;AACE;AACA;AjDu3YF;AiDt3YE;AACE;AACD;AACC;AACD;AACF;AAED;AjDu3YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiDv3YO;AACL;AACD;AAED;AjDw3YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiDx3YO;AACL;AAID;AAED;AjDs3YA;AACA;AACA;AACA;AACA;AACA;AiDt3YO;AACL;AACA;AACD;AAED;AjDu3YA;AACA;AACA;AACA;AACA;AACA;AiDv3YO;AACL;AACD;AAED;AjDw3YA;AACA;AACA;AACA;AACA;AACA;AACA;AiDx3YO;AACL;AACD;AAED;AjDy3YA;AACA;AACA;AACA;AACA;AACA;AACA;AiDz3YO;AACL;AACA;AjD23YF;AiD13YE;AACE;AACE;AAAO;AAAmC;AAA1C;AACD;AAEA;AACF;AjD83YH;AiD73YE;AACD;AAED;AjD83YA;AACA;AACA;AACA;AACA;AiD93YO;AACL;AACE;AACE;AAAyB;AAG3B;AAAuC;AAAsB;AAC9D;AjDi4YH;AiDh4YE;AAAO;AAA8C;AAArD;AACD;AAED;AjDo4YA;AACA;AACA;AACA;AACA;AiDp4YA;AACE;AACA;AACD;AAED;AjDq4YA;AACA;AACA;AACA;AACA;AACA;AACA;AiDr4YA;AACE;AAAO;AAAqD;AAA5D;AAID;AAED;AjDs4YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiDt4YA;AACE;AAIA;AACA;AjDq4YF;AiDp4YE;AACE;AACA;AACA;AACA;AACA;AACA;AAEA;AjDq4YJ;AiDp4YI;AACE;AACD;AACF;AjDs4YH;AiDr4YE;AACD;AAED;AjDs4YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiDt4YA;AACE;AACA;AjDw4YF;AiDt4YE;AACE;AACE;AACA;AACA;AACA;AACA;AACA;AANiB;AAQpB;AjDw4YH;AiDt4YE;AACE;AACA;AACD;AjDw4YH;AiDt4YE;AACA;AAGA;AjDs4YF;AiDr4YE;AACE;AACA;AACD;AACF;AAED;AjDs4YA;AACA;AACA;AACA;AACA;AACA;AiDt4YA;AACE;AjDw4YF;AiDv4YE;AACE;AACD;AAGD;AACA;AjDu4YF;AACA;AiDv4YE;AACA;AACA;AAAO;AAAkC;AAAzC;AACD;AAED;AjD24YA;AACA;AACA;AACA;AACA;AACA;AiD34YA;AACE;AACA;AjD64YF;AiD54YE;AACE;AACE;AACD;AjD84YL;AiD74YI;AACD;AjD+4YH;AiD74YE;AACA;AACD;AAED;AjD84YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiD94YA;AACE;AACA;AjDg5YF;AiD/4YE;AACE;AACE;AACD;AACC;AACA;AACA;AAAoC;AAAwB;AAC7D;AACF;AjDm5YH;AiDl5YE;AACD;AAED;AjDm5YA;AACA;AACA;AACA;AACA;AACA;AiDn5YA;AACE;AjDq5YF;AiDp5YE;AACE;AACD;AjDs5YH;AiDr5YE;AACD;AAED;AjDs5YA;AACA;AACA;AACA;AACA;AACA;AiDt5YO;AACL;AACD;AAED;AjDu5YA;AACA;AACA;AACA;AACA;AACA;AACA;AiDv5YO;AACL;AACA;AAAO;AAA4B;AAAnC;AACD;AAED;AjD25YA;AACA;AACA;AACA;AACA;AACA;AiD35YO;AACL;AACD;AAED;AjD45YA;AACA;AACA;AACA;AACA;AACA;AiD55YO;AACL;AACD;AAED;AjD65YA;AACA;AACA;AACA;AiD75YA;AACE;AACA;AACA;AjD+5YF;AiDl6YyC;AAKrC;AACE;AACD;AjDg6YL;AiD/5YI;AjDi6YJ;AiDh6YI;AACE;AACD;AACC;AAAmC;AAAA;AAGpC;AAfoC;AjDk7YzC;AiD96YE;AAA2B;AjDi7Y7B;AiDj7Y6B;AAY1B;AACF;AAED;AjDu6YA;AACA;AACA;AACA;AACA;AiDv6YA;AACE;AACE;AACD;AjDy6YH;AiDx6YE;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAED;AjDy6YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiDz6YO;AACL;AjD26YF;AiDz6YE;AACE;AACD;AjD26YH;AiD16YE;AAIA;AACA;AACA;AACD;AAED;AjDw6YA;AACA;AACA;AACA;AACA;AiDx6YO;AACL;AAIA;AAIE;AAAA;AAEH;AAED;AjDm6YA;AACA;AACA;AACA;AACA;AACA;AiDn6YO;AACL;AACE;AACD;AACF;AAED;AjDo6YA;AACA;AACA;AACA;AACA;AACA;AiDp6YA;AACE;AjDs6YF;AiDp6YE;AACD;AAED;AjDq6YA;AACA;AiDr6YA;AACE;AADuC;AAAA;AAAA;AAGvC;AjDy6YF;AiDx6YE;AACE;AACA;AACA;AACA;AACA;AACA;AANK;AAQR;AjD06YD;AACA;AACA;AACA;AACA;AACA;AACA;AkDjlaA;AlDmlaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkDjlaA;AlDmlaA;AkDllaA;AlDolaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkDxlaE;AlD0laF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkDvlaE;AlDylaF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkDxlaE;AlD0laF;AACA;AACA;AACA;AACA;AACA;AkDzlaE;AlD2laF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkD1laE;AlD4laF;AACA;AACA;AACA;AACA;AACA;AACA;AkD3laE;AlD6laF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkD5laE;AlD8laF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkD7laE;AlD+laF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkDjmaA;AlDmmaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmDltaA;AnDotaA;AACA;AACA;AmDptaA;AACO;AAEP;AnDqtaA;AmDptaA;AnDstaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmDjuaE;AnDmuaF;AACA;AACA;AACA;AACA;AmDhuaE;AnDkuaF;AACA;AACA;AACA;AACA;AmDjuaE;AnDmuaF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmDluaE;AnDouaF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmDnuaE;AnDquaF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmDpuaE;AnDsuaF;AACA;AACA;AACA;AACA;AACA;AACA;AmDruaE;AnDuuaF;AACA;AACA;AACA;AACA;AACA;AACA;AmDtuaE;AnDwuaF;AACA;AACA;AACA;AACA;AACA;AACA;AmDvuaE;AnDyuaF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmDnuaE;AnDquaF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmDpuaE;AnDsuaF;AACA;AACA;AACA;AACA;AACA;AmDruaE;AnDuuaF;AACA;AACA;AACA;AACA;AmDtuaE;AnDwuaF;AACA;AACA;AACA;AACA;AACA;AmDvuaE;AnDyuaF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmD3uaA;AnD6uaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoD/2aA;ApDi3aA;AoDh3aA;ApDk3aA;AoDj3aA;ApDm3aA;AoDl3aA;ApDo3aA;AoDn3aA;ApDq3aA;AoDx4aA;ApD04aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoDn4aA;AACO;AAEP;ApDo4aA;AACA;AoDp4aO;AAEP;ApDq4aA;AACA;AoDr4aO;AAEP;ApDs4aA;AACA;AoDt4aA;AAEA;ApDu4aA;AACA;AACA;AACA;AACA;AoDt4aA;AACE;AACA;AACA;AACA;AAJqB;AAOvB;ApDu4aA;AACA;AACA;AACA;AoDt4aA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBgC;AAyBlC;ApDu4aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoDt4aO;AACL;AACA;AAEA;AAIA;ApDo4aF;AoDj4aE;ApDm4aF;AoDl4aE;AACE;AACD;AACC;AACD;AACC;AACD;AACC;AACA;AACA;AACA;AACA;ApDo4aJ;AoDn4aI;AAAqC;AAAA;AACtC;ApDu4aH;AoDr4aE;AAEA;AACE;AACD;AACF;AAED;ApDq4aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoDr4aO;AACL;ApDu4aF;AoDt4aE;AACE;AACA;AACD;ApDw4aH;AoDt4aE;ApDw4aF;AoDn4aE;AACE;AACA;AACD;AACC;AACD;AACF;AAED;ApDo4aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoDp4aO;AACL;ApDs4aF;AoDr4aE;AACE;AACA;AACA;AACD;ApDu4aH;AoDt4aE;AACD;AAED;ApDu4aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoDz4aE;ApD24aF;AACA;AoDz4aE;AACE;AACA;AAEA;ApD04aJ;AoDz4aI;AAEA;ApD04aJ;AoDz4aI;AAEA;AACD;AAED;ApDy4aF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoD34aI;AACA;AACD;AAED;ApD44aF;AACA;AACA;AACA;AACA;AACA;AoD14aE;ApD44aF;AACA;AACA;AACA;AACA;AACA;AACA;AoD54aI;AACE;AACD;ApD84aL;AoD54aI;AACD;AAED;ApD64aF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoD74aI;AACA;AACE;AACA;AAF2D;AAI7D;AACA;AACD;AAED;ApD84aF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoD94aI;AACA;AACE;AACA;AAF2D;AAI7D;AACA;AACD;AAED;ApD+4aF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoD/4aI;AACD;AAED;ApDg5aF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoDh5aI;AACE;AACD;ApDk5aL;AoDj5aI;AACA;AACD;AAED;ApDk5aF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoDn5akC;ApDq5alC;AoDp5aI;AACA;AACA;AACA;AACE;AAAsB;AAAA;AACvB;AAED;ApDu5aJ;AACA;AoDv5aI;AACE;AAAsB;AAAA;AACvB;ApD25aL;AoD15aI;AACE;ApD45aN;AoD35aM;AACD;AAED;ApD45aJ;AACA;AoD55aI;AAAU;AAAA;AAEV;ApD+5aJ;AoD95aI;AACE;AACE;AACD;ApDg6aP;AoD/5aM;AACD;AAED;AAEA;AACA;AACA;AACA;AACA;AACA;ApD+5aJ;AoD95aI;AACA;AACD;AAED;ApD+5aF;AACA;AACA;AACA;AACA;AACA;AACA;AoD/5aI;AACE;AACD;ApDi6aL;AoDp6a0B;AAAA;ApDu6a1B;AoDj6aI;AACE;AACD;AAGD;ApDi6aJ;AACA;AoDj6aI;ApDm6aJ;AoDl6aI;AACE;AACD;AAED;ApDm6aJ;AACA;AACA;AACA;AACA;AoDn6aI;AAGe;AAAA;AACf;AACD;ApDo6aH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqD1wbA;ArD4wbA;AqDpwbA;ArDswbA;AqD9xbA;ArDgybA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqD/wbA;AACO;ArDixbP;AACA;AACA;AACA;AACA;AACA;AACA;AqDpxbE;ArDsxbF;AACA;AACA;AACA;AqDpxbE;ArDsxbF;AACA;AACA;AACA;AACA;AqDpxbI;AAAO;AAAiF;AAAxF;AAKD;AAED;ArDoxbF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqDpxbI;AAAO;AAAiF;AAAxF;AAKD;AAED;ArDoxbF;AACA;AACA;AACA;AACA;AACA;AACA;AqDpxbI;AAAO;AAA+C;AAAtD;AAKD;AAED;ArDoxbF;AACA;AACA;AACA;AACA;AACA;AACA;AqDpxbI;AAAO;AAA+C;AAAtD;AAKD;AAED;ArDoxbF;AACA;AACA;AACA;AACA;AACA;AqDpxbI;AAAO;AAAqD;AAA5D;AAID;AAED;ArDqxbF;AACA;AACA;AACA;AACA;AACA;AqDrxbI;AAAO;AAAiE;AAAxE;AAID;AAED;ArDsxbF;AACA;AACA;AACA;AACA;AACA;AqDtxbI;AAAO;AAAkF;AAAzF;AAKD;AAED;ArDsxbF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqDtxbI;AAAO;AAAqD;AAA5D;AAID;AAED;ArDuxbF;AACA;AACA;AACA;AACA;AACA;AACA;AqDvxbI;AACD;AAED;ArDwxbF;AACA;AACA;AACA;AACA;AACA;AACA;AqDzxbyD;AAAvB;AAAuB;ArD6xbzD;AqD5xbI;AACE;AACA;AACA;AAAmC;AAAO;AAI3C;ArD6xbL;AqD5xbI;AAAO;AAAkG;AAAzG;AAKD;AAED;ArD4xbF;AACA;AACA;AACA;AACA;AACA;AqD5xbI;AAAO;AAAkG;AAAzG;AAKD;AAED;ArD4xbF;AACA;AACA;AACA;AACA;AACA;AqD5xbI;AAAO;AAAuD;AAA9D;AAID;AAED;ArD6xbF;AACA;AACA;AACA;AACA;AACA;AqD7xbI;AAAO;AAAqE;AAA5E;AAKD;AAED;ArD6xbF;AACA;AACA;AACA;AACA;AACA;AqD7xbI;AAAO;AAAqD;AAA5D;AAID;AAED;ArD8xbF;AACA;AACA;AACA;AACA;AACA;AqD9xbI;AAAO;AAAiD;AAAxD;AAID;AAED;ArD+xbF;AACA;AACA;AACA;AACA;AACA;AqD/xbI;AAAO;AAAiF;AAAxF;AAKD;AAED;ArD+xbF;AACA;AACA;AACA;AACA;AACA;AqD/xbI;AAAO;AAA6F;AAApG;AAKD;AAED;ArD+xbF;AACA;AACA;AACA;AACA;AACA;AqD/xbI;AAAO;AAA8C;AAArD;AAID;AAED;ArDgybF;AACA;AACA;AACA;AACA;AACA;AqDhybI;AAAO;AAAsD;AAA7D;AAID;AAED;ArDiybF;AACA;AACA;AACA;AACA;AACA;AqDjybI;AAAO;AAAsD;AAA7D;AAID;AAED;ArDkybF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqDlybI;AAAO;AAA2F;AAAlG;AAID;AAED;ArDmybF;AACA;AACA;AACA;AACA;AACA;AACA;AqDnybI;AAAO;AAA+D;AAAtE;AAID;AAED;ArDoybF;AACA;AACA;AACA;AACA;AACA;AACA;AqDpybI;AAAO;AAAgD;AAAvD;AAID;AAED;ArDqybF;AACA;AACA;AACA;AACA;AACA;AqDrybI;AACD;AAED;ArDsybF;AACA;AACA;AACA;AACA;AACA;AACA;AqDtybI;AAAO;AAA6F;AAApG;AAKD;AAED;ArDsybF;AACA;AACA;AACA;AACA;AACA;AqDtybI;AAAO;AAA4D;AAAnE;AAID;AAED;ArDuybF;AACA;AACA;AACA;AACA;AACA;AqDvybI;AAAO;AAAuD;AAA9D;AAID;AAED;ArDwybF;AACA;AACA;AACA;AACA;AACA;AqDxybI;AAAO;AAAuD;AAA9D;AAID;AAED;ArDyybF;AACA;AACA;AACA;AACA;AACA;AqDzybI;AAAO;AAAkD;AAAzD;AAID;AAED;ArD0ybF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqD1ybI;AAAO;AAAqF;AAA5F;AAID;AAED;ArD2ybF;AACA;AACA;AACA;AACA;AACA;AqD3ybI;AAAO;AAAkE;AAAzE;AAID;AAED;ArD4ybF;AACA;AACA;AACA;AACA;AACA;AqD5ybI;AAAO;AAA4E;AAAnF;AAID;AAED;ArD6ybF;AACA;AACA;AACA;AACA;AACA;AqD7ybI;AAAO;AAAgF;AAAvF;AAMD;AAED;ArD4ybF;AACA;AACA;AACA;AACA;AACA;AACA;AqD5ybI;AACE;AACC;AAFH;AAID;AAED;ArD6ybF;AACA;AACA;AACA;AACA;AACA;AqD7ybI;AACE;AACC;AAFH;AAID;AAED;ArD8ybF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqD9ybI;AACE;AACC;AAFH;AAID;AAED;ArD+ybF;AACA;AACA;AACA;AACA;AACA;AqD/ybI;AACE;AACC;AAFH;AAID;AAED;ArDgzbF;AACA;AACA;AACA;AACA;AACA;AqDhzbI;AACE;AACC;AAFH;AAID;AAED;ArDizbF;AACA;AACA;AACA;AACA;AACA;AqDjzbI;AACE;AACC;AAFH;AAID;AAED;ArDkzbF;AACA;AACA;AACA;AACA;AACA;AqDlzbI;AACE;AACC;AAFH;AAID;AAED;ArDmzbF;AACA;AACA;AACA;AACA;AACA;AqDnzbI;AACE;AACC;AAFH;AAID;AAED;ArDozbF;AACA;AACA;AACA;AACA;AACA;AqDpzbI;AACD;AAED;ArDqzbF;AACA;AACA;AACA;AACA;AACA;AACA;AqDrzbI;AACE;AACC;AAFH;AAID;AAED;ArDszbF;AACA;AACA;AACA;AACA;AACA;AqDtzbI;AACE;AACC;AAFH;AAID;AAED;ArDuzbF;AACA;AACA;AACA;AACA;AACA;AACA;AqDvzbI;AACD;AAED;ArDwzbF;AACA;AACA;AACA;AACA;AACA;AACA;AqDxzbI;AACD;AAED;ArDyzbF;AACA;AACA;AACA;AACA;AACA;AACA;AqDzzbI;AACE;AACC;AAFH;AAID;AAED;ArD0zbF;AACA;AACA;AACA;AACA;AACA;AACA;AqD1zbI;AACD;AAED;ArD2zbF;AACA;AACA;AACA;AACA;AACA;AqD3zbI;AACE;AACC;AAFH;AASD;AAED;ArDuzbF;AACA;AACA;AACA;AACA;AACA;AqDvzbI;AACE;AACC;AAFH;AAID;AAED;ArDwzbF;AACA;AACA;AACA;AACA;AACA;AqDxzbI;AAAO;AAA0D;AAAjE;AAID;AAED;ArDyzbF;AACA;AACA;AACA;AACA;AACA;AqDzzbI;AAAO;AAAmD;AAA1D;AAID;AAED;ArD0zbF;AACA;AACA;AACA;AACA;AACA;AqD1zbI;AACA;AAAO;AAA4C;AAAnD;AAID;AAED;ArD2zbF;AACA;AACA;AACA;AACA;AACA;AqD3zbI;AAAO;AAAiE;AAAxE;AAID;AAED;ArD4zbF;AACA;AACA;AACA;AACA;AACA;AqD5zbI;AACE;AACC;AAFH;AAQD;AAED;ArDyzbF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqDzzbI;AACE;AACC;AAFH;AAQD;AAED;ArDszbF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqDtzbI;AAAO;AAAoE;AAA3E;AAMD;AAED;ArDqzbF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqDrzbI;AAAO;AAAyG;AAAhH;AAMD;AAED;ArDozbF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqDpzbI;AAAO;AAAwC;AAA/C;AAID;AAED;ArDqzbF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqDrzbI;AAAO;AAA6E;AAApF;AAMD;AAED;ArDozbF;AACA;AACA;AACA;AACA;AACA;AqDpzbI;AAAO;AAA2D;AAAlE;AAID;AAED;ArDqzbF;AACA;AACA;AACA;AACA;AACA;AqDrzbI;AACE;AACC;AAFH;AAQD;AAED;ArDkzbF;AACA;AACA;AACA;AACA;AACA;AqDlzbI;AAAO;AAA4D;AAAnE;AAID;AAED;ArDmzbF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqDnzbI;AAAO;AAAsE;AAA7E;AAID;AAED;ArDozbF;AACA;AACA;AACA;AACA;AACA;AqDpzbI;AAAO;AAA4C;AAAnD;AAID;AAED;ArDqzbF;AACA;AACA;AACA;AACA;AACA;AqDrzbI;AAAO;AAAyE;AAAhF;AAID;AAED;ArDszbF;AACA;AACA;AACA;AACA;AACA;AqDtzbI;AAAO;AAAwC;AAA/C;AACD;ArD2zbH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsD7ndA;AtD+ndA;AsD9ndA;AtDgodA;AsDjpdA;AtDmpdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsD7odA;AACA;AAEA;AtD8odA;AACA;AACA;AACA;AACA;AACA;AsD7odO;AACL;AtD+odF;AsD9odE;AACE;AACD;AtDgpdH;AsD9odE;AACD;AAED;AtD+odA;AACA;AACA;AACA;AACA;AACA;AACA;AsD/odO;AACL;AtDipdF;AsDhpdE;AACE;AACD;AtDkpdH;AsDhpdE;AACD;AAED;AtDipdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsDjpdA;AACE;AACD;AAED;AtDkpdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsDlpdA;AACE;AACD;AAED;AtDmpdA;AACA;AACA;AACA;AACA;AACA;AACA;AsDnpdA;AACE;AACA;AAAU;AAAO;AAEjB;AACA;AACA;AtDspdF;AsDnpdE;AAEA;AACD;AAED;AtDmpdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsDnpdO;AACL;AACA;AtDqpdF;AsDnpdE;AACE;AACA;AACA;AACA;AACA;AACD;AtDqpdH;AsDnpdE;AACD;AtDqpdD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuDtydA;AvDwydA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuDtydA;AvDwydA;AACA;AACA;AACA;AuDtydA;AACE;AACD;AAED;AvDuydA;AACA;AACA;AACA;AACA;AuDvydA;AACE;AACD;AAED;AvDwydA;AACA;AACA;AACA;AACA;AACA;AuDxydO;AACL;AACD;AAED;AvDyydA;AACA;AACA;AACA;AACA;AACA;AACA;AuDzydO;AACL;AACD;AAED;AvD0ydA;AACA;AACA;AACA;AACA;AuD1ydO;AACL;AACD;AAED;AvD2ydA;AACA;AACA;AACA;AACA;AACA;AACA;AuD3ydO;AACL;AACA;AACD;AAED;AvD4ydA;AACA;AACA;AACA;AACA;AACA;AACA;AuD5ydO;AACL;AACE;AACD;AvD8ydH;AuD7ydE;AACD;AAED;AvD8ydA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuD9ydO;AACL;AACE;AACD;AvDgzdH;AuD/ydE;AACE;AACD;AvDizdH;AuDhzdE;AACD;AAED;AvDizdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuDjzdO;AACL;AvDmzdF;AuDpzdoE;AAGhE;AACA;AACE;AACA;AACD;AvDozdL;AuDnzdI;AACE;AACD;AAV+D;AvDg0dpE;AuD9zdE;AAAwC;AvDi0d1C;AuDj0d0C;AASvC;AvD2zdH;AuD1zdE;AACD;AAED;AvD2zdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuD3zdO;AAA2B;AAEhC;AvD6zdF;AuD5zdE;AACE;AACD;AvD8zdH;AACA;AuD7zdE;AACD;AAED;AvD8zdA;AACA;AACA;AACA;AACA;AACA;AuD9zdO;AACL;AACA;AACE;AACD;AvDg0dH;AuD9zdE;AACD;AAED;AvD+zdA;AACA;AACA;AACA;AACA;AACA;AuD/zdO;AACL;AACE;AACD;AvDi0dH;AuD/zdE;AACD;AAED;AvDg0dA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuDh0dO;AACL;AACE;AACD;AvDk0dH;AuDj0dE;AACA;AvDm0dF;AuDl0dE;AACE;AACD;AvDo0dH;AuDn0dE;AACD;AvDq0dD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwDjgeA;AxDmgeA;AwDlgeA;AxDogeA;AwDngeA;AxDqgeA;AwDpgeA;AxDsgeA;AwDrgeA;AxDugeA;AwDtgeA;AxDwgeA;AwDvgeA;AxDygeA;AwDxgeA;AxD0geA;AwDjieA;AxDmieA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwDvheA;AACA;AAEA;AxDwheA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwDvheO;AAOL;AACA;AxDmheF;AwD5geE;AACE;AAEA;AACA;AACA;AACA;AxD6geJ;AwD5geI;AACE;AACA;AACD;AxD8geL;AACA;AwD7geI;AACE;AACE;AACA;AACD;AACF;AACF;AxD+geH;AwD9geE;AACD;AAED;AxD+geA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwD/geO;AAOL;AxD2geF;AwDpgeE;AACE;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACD;AxDsgeL;AACA;AwDrgeI;AACE;AACE;AACA;AACD;AACF;AACF;AxDugeH;AwDtgeE;AACD;AAED;AxDugeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwDvgeA;AACE;AxDygeF;AwDxgeE;AACE;AACD;AxD0geH;AwDxgeE;AAEA;AxDygeF;AwDlgeE;AACE;AxDogeJ;AwDngeI;AACE;AACE;AACD;AxDqgeP;AwDpgeM;AACD;AACF;AxDsgeH;AACA;AwDpgeE;AACA;AACA;AAAM;AAAO;AACb;AAEA;AxDugeF;AwDtgeE;AACE;AACD;AACC;AACA;AAGD;AACC;AACE;AACD;AxDsgeL;AwDrgeI;AACD;AxDugeH;AwDtgeE;AxDwgeF;AwDvgeE;AACE;AACD;AxDygeH;AwDxgeE;AACD;AAED;AxDygeA;AACA;AACA;AACA;AACA;AACA;AACA;AwDzgeA;AACE;AACA;AACE;AACD;AxD2geH;AACA;AwD1geE;AAAyB;AAAO;AxD8gelC;AwD7geE;AACE;AACA;AACD;AxD+geH;AACA;AwD9geE;AACD;AAED;AxD+geA;AACA;AACA;AACA;AACA;AACA;AwD/geO;AACL;AACD;AAED;AxDgheA;AACA;AACA;AACA;AACA;AACA;AACA;AwDhheA;AACE;AACA;AACD;AAED;AxDiheA;AACA;AwDjheA;AAEA;AxDkheA;AACA;AACA;AACA;AwDjheO;AACL;AACD;AAED;AxDkheA;AACA;AACA;AACA;AACA;AACA;AACA;AwDlheO;AACL;AACA;AAAY;AAAwB;AACpC;AAEI;AACD;AAEC;AACA;AACD;AAEC;AACA;AACA;AACA;AxDmheN;AwDlheM;AACE;AxDoheR;AwDnheQ;AAAU;AAAO;AAAgB;AAAkB;AACpD;AxDyheP;AwDxheM;AACE;AxD0heR;AwDzheQ;AACA;AACD;AACF;AACJ;AAED;AxD0heA;AACA;AACA;AACA;AACA;AwD1heO;AACL;AxD4heF;AwD3heE;AACE;AACD;AxD6heH;AwD5heE;AACA;AACD;AAED;AxD6heA;AACA;AACA;AACA;AACA;AwD7heA;AACE;AACE;AACA;AACA;AAHuC;AAK1C;AAED;AxD8heA;AACA;AACA;AACA;AACA;AACA;AACA;AwD9heO;AACL;AACD;AAED;AxD+heA;AACA;AACA;AACA;AACA;AACA;AACA;AwD/heA;AACE;AxDiieF;AwDhieE;AACE;AxDkieJ;AwDjieI;AACE;AACD;AACF;AxDmieH;AwDlieE;AACD;AxDoieD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyDt3eA;AzDw3eA;AyDv3eA;AzDy3eA;AyDx3eA;AzD03eA;AyD74eA;AzD+4eA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyD54eA;AzD84eA;AyDz4eA;AACA;AAEA;AzD04eA;AyDz4eA;AAEA;AzD04eA;AACA;AACA;AACA;AACA;AyDz4eO;AACL;AACD;AAED;AzD04eA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyD14eA;AACE;AACE;AzD44eJ;AyD34eI;AACE;AACD;AACF;AzD64eH;AyD54eE;AACD;AAED;AzD64eA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyD74eO;AACL;AACE;AACA;AACD;AzD+4eH;AyD94eE;AACE;AACD;AzDg5eH;AyD/4eE;AzDi5eF;AyDh5eE;AACE;AzDk5eJ;AyDj5eI;AACE;AACA;AzDm5eN;AyDj5eM;AACE;AACD;AACF;AzDm5eL;AyDl5eI;AACE;AACD;AACF;AzDo5eH;AyDn5eE;AACD;AAED;AzDo5eA;AACA;AACA;AACA;AACA;AACA;AACA;AyDp5eO;AAA6C;AzDu5epD;AyDr5eE;AACE;AAKD;AACF;AAED;AzDk5eA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyDl5eO;AACL;AzDo5eF;AyD/4eE;AACE;AAA8B;AAAuB;AAGtD;AACF;AAED;AzDg5eA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyDh5eO;AACL;AzDk5eF;AyD74eE;AACE;AACD;AzD+4eH;AyD94eE;AACD;AAED;AzD+4eA;AACA;AACA;AACA;AACA;AACA;AACA;AyD/4eO;AACL;AACE;AACD;AACF;AAED;AzDg5eA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyDh5eO;AACL;AACE;AAID;AzD+4eH;AyD94eE;AACD;AAED;AzD+4eA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyD/4eO;AACL;AACE;AAID;AzD84eH;AyD74eE;AACD;AAED;AzD84eA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyD94eO;AAAsC;AAE3C;AAIA;AAMA;AACD;AAED;AzDu4eA;AACA;AACA;AACA;AACA;AACA;AyDv4eO;AACL;AACE;AACD;AzDy4eH;AyDx4eE;AACE;AACD;AACC;AACD;AACF;AAED;AzDy4eA;AACA;AACA;AACA;AACA;AACA;AyDz4eO;AACL;AACD;AAED;AzD04eA;AACA;AACA;AACA;AACA;AACA;AyD14eO;AACL;AACD;AAED;AzD24eA;AACA;AACA;AACA;AACA;AACA;AyD34eO;AACL;AACE;AACD;AzD64eH;AyD54eE;AACD;AAED;AzD64eA;AACA;AACA;AACA;AACA;AACA;AACA;AyD74eO;AACL;AACE;AACD;AzD+4eH;AyD94eE;AACE;AACD;AzDg5eH;AyD/4eE;AACE;AACD;AzDi5eH;AyDh5eE;AACD;AAED;AzDi5eA;AACA;AACA;AACA;AACA;AACA;AyDj5eO;AACL;AACD;AAED;AzDk5eA;AACA;AACA;AACA;AACA;AACA;AyDl5eO;AACL;AACE;AACD;AzDo5eH;AyDn5eE;AACD;AAED;AzDo5eA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyDp5eO;AACL;AAID;AAED;AzDk5eA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyDl5eO;AACL;AAAc;AAAqC;AACnD;AAAO;AAAwC;AAA/C;AACD;AAED;AzDw5eA;AACA;AACA;AACA;AACA;AACA;AyDx5eO;AACL;AACE;AACD;AACF;AAED;AzDy5eA;AACA;AACA;AACA;AACA;AACA;AyDz5eO;AACL;AACE;AACD;AzD25eH;AyDz5eE;AACE;AACD;AACF;AzD25eD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0D/wfA;A1DixfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0D/wfA;AACA;AAEA;A1DgxfA;AACA;AACA;AACA;AACA;A0D/wfA;AACE;AACD;AAED;A1DgxfA;AACA;AACA;AACA;AACA;AACA;A0DhxfO;AACL;AACD;AAED;A1DixfA;AACA;AACA;AACA;AACA;AACA;AACA;A0DjxfO;AACL;AACD;AAED;A1DkxfA;AACA;AACA;AACA;AACA;AACA;A0DlxfO;AACL;AACD;AAED;A1DmxfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0DnxfO;AACL;AACD;AAED;A1DoxfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0DpxfO;AACL;AACE;AACE;AACD;AACF;A1DsxfH;A0DrxfE;AACD;AAED;A1DsxfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0DtxfO;AACL;AAAO;AAAwB;AAA/B;AACD;A1D2xfD;AACA;AACA;AACA;AACA;AACA;AACA;A2Dj3fA;A3Dm3fA;A2Dn4fA;A3Dq4fA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Dh4fA;AAEA;A3Di4fA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Dh4fO;AACL;AAAe;AAA4B;A3Do4f7C;A2Dn4fE;AACE;AACD;A3Dq4fH;A2Dn4fE;A3Dq4fF;A2Dp4fE;AACE;AACA;AAGA;AACD;A3Do4fH;A2Dn4fE;AACD;A3Dq4fD;AACA;AACA;AACA;AACA;AACA;AACA;A4Dx7fA;A5D07fA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Dx7fA;A5D07fA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Dx7fO;AAA0D;AAAf;AAAe;A5D67fjE;A4D57fE;AACE;AACD;AACC;AACD;AACF;A5D87fD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Dj/fA;A7Dm/fA;A6Dl/fA;A7Do/fA;A6Dn/fA;A7Dq/fA;A6Dp/fA;A7Ds/fA;A6Dr/fA;A7Du/fA;A6Dt/fA;A7Dw/fA;A6Dv/fA;A7Dy/fA;A6Dx/fA;A7D0/fA;A6Dz/fA;A7D2/fA;A6DnhgBA;A7DqhgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6DzggBA;A7D2ggBA;AACA;A6DzggBA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAV+B;AAajC;A7D0ggBA;AACA;AACA;AACA;A6DzggBA;AAEA;A7D0ggBA;AACA;AACA;AACA;AACA;AACA;A6DzggBA;AAEA;A7D0ggBA;A6DzggBA;AAEA;A7D0ggBA;A6DzggBA;AAEA;A7D0ggBA;A6DzggBA;AAEA;A7D0ggBA;A6DzggBA;AAEA;A7D0ggBA;A6DzggBA;AAEA;AACE;AAA4B;AAC5B;AAA4B;AAC5B;AAA4B;AAG9B;A7D2ggBA;A6D1ggBO;AAEP;A7D2ggBA;AACA;AACA;AACA;AACA;AACA;AACA;A6D5ggBO;AACL;AACD;AAED;A7D6ggBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6D7ggBO;AACL;AACE;AAAI;AAAmC;AACvC;AACD;A7DihgBH;A6D/ggBE;AACD;AAED;A7DghgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6DhhgBO;AACL;AACE;AACD;A7DkhgBH;A6DhhgBE;AAGA;A7DghgBF;A6D/ggBE;AACE;AACD;A7DihgBH;A6D/ggBE;AAAa;AAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A7DmhgBJ;A6D5hgByC;AAavC;A7DkhgBF;A6DjhgBE;AACE;AACD;AAGD;A7DihgBF;AACA;A6DjhgBE;AAIE;AACA;AACD;AAGD;A7D8ggBF;AACA;A6D9ggBE;A7DghgBF;A6D/ggBE;AACE;AACD;AACC;AACD;AACC;AACD;A7DihgBH;A6DhhgBE;A7DkhgBF;A6D/ggBE;A7DihgBF;A6D/ggBE;AACE;AACD;A7DihgBH;A6D/ggBE;AACD;AAED;A7DghgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6DhhgBO;AAKL;AACE;AACD;A7D8ggBH;A6D7ggBE;AACA;AAEA;AAOA;AACA;AACD;AACD;A7DwggBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6DxggBO;AACL;AACA;AACD;AAED;A7DyggBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6DzggBO;AACL;AACD;AAED;A7D0ggBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6D1ggBO;AACL;AACA;AACA;AACA;A7D4ggBF;A6D3ggBE;AACE;AACE;AACD;AACF;A7D6ggBH;A6D5ggBE;AACD;AAED;A7D6ggBA;AACA;AACA;AACA;AACA;AACA;AACA;A6D7ggBO;AACL;A7D+ggBF;A6D9ggBE;AACE;A7DghgBJ;A6D/ggBI;AACE;AACD;AACC;AACE;AAAW;AAAuB;AAClC;AACD;AACF;AACC;AAAW;AAAuB;AAClC;AACD;AACF;A7DqhgBH;A6DphgBE;AACD;AAED;A7DqhgBA;AACA;AACA;AACA;AACA;AACA;A6DrhgBO;AACL;AACE;AACD;A7DuhgBH;A6DthgBE;AAMD;AAED;A7DkhgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6DlhgBO;AAIL;AADA;AACA;A7DmhgBF;A6DlhgBE;A7DohgBF;A6D7ggBE;AAAqB;AAAuB;AAC5C;AASA;AACD;AAED;A7DwggBA;AACA;AACA;AACA;AACA;AACA;A6DxggBO;AACL;AAKA;AACD;AAED;A7DqggBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6DrggBO;AACL;AACD;AAED;A7DsggBA;AACA;AACA;AACA;AACA;AACA;AACA;A6DtggBO;AACL;A7DwggBF;A6DvggBE;AACE;AACD;A7DyggBH;A6DxggBE;AACD;AAED;A7DyggBA;AACA;AACA;AACA;AACA;AACA;AACA;A6DzggBO;AACL;A7D2ggBF;A6D1ggBE;AACE;AACD;A7D4ggBH;A6D3ggBE;AACD;AAED;A7D4ggBA;AACA;AACA;AACA;AACA;AACA;A6D5ggBO;AACL;AACE;AACD;A7D8ggBH;A6D7ggBE;AACD;AAED;A7D8ggBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6D9ggBO;AACL;AACE;AACD;A7DghgBH;A6D/ggBE;AACE;AACD;A7DihgBH;A6DhhgBE;AACA;AACD;AAED;A7DihgBA;AACA;AACA;AACA;AACA;AACA;A6DjhgBO;AACL;AACE;AACD;A7DmhgBH;A6DlhgBE;AACD;AAED;A7DmhgBA;AACA;AACA;AACA;AACA;AACA;AACA;A6DnhgBO;AACL;AACE;AACD;A7DqhgBH;A6DphgBE;AACE;AACD;A7DshgBH;A6DrhgBE;AACD;AAED;A7DshgBA;AACA;AACA;AACA;AACA;AACA;A6DthgBO;AACL;AACA;AACA;AACD;AAED;A7DuhgBA;AACA;AACA;AACA;AACA;AACA;A6DvhgBO;AACL;A7DyhgBF;A6DxhgBE;AACE;AACD;A7D0hgBH;A6DzhgBE;AACA;AACD;AAED;A7D0hgBA;AACA;AACA;AACA;AACA;AACA;AACA;A6D1hgBA;AACE;AACE;AACD;A7D4hgBH;A6D3hgBE;A7D6hgBF;A6DthgBE;AACD;AAED;A7DuhgBA;AACA;AACA;AACA;AACA;AACA;AACA;A6DvhgBO;AACL;AACA;AACA;AACE;AACD;A7DyhgBH;A6DxhgBE;AACA;AACA;AACD;AAED;A7DyhgBA;AACA;AACA;AACA;AACA;AACA;AACA;A6DzhgBO;AACL;AACE;AACD;A7D2hgBH;AACA;A6DzhgBE;AACE;AACD;AAGD;AACA;AACA;A7DyhgBF;AACA;A6DzhgBE;AACA;AACA;AAKA;AACA;A7DuhgBF;A6DlhgBE;AACA;AACA;AAMD;AAED;A7D8ggBA;AACA;AACA;AACA;AACA;AACA;AACA;A6D9ggBO;AACL;AACD;AAED;A7D+ggBA;AACA;AACA;AACA;AACA;AACA;AACA;A6D/ggBO;AACL;AACE;AACD;A7DihgBH;A6DhhgBE;AACE;AACD;A7DkhgBH;A6DjhgBE;AACD;AAED;A7DkhgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6DlhgBO;AACL;AACE;AACD;A7DohgBH;A6DnhgBE;AACA;A7DqhgBF;A6DlhgBE;AACE;AACD;A7DohgBH;AACA;A6DlhgBE;AACE;AACD;A7DohgBH;AACA;A6DlhgBE;AACE;AACD;A7DohgBH;AACA;A6DlhgBE;AAKD;AAED;A7D+ggBA;AACA;AACA;AACA;AACA;AACA;AACA;A6D/ggBO;AACL;AACA;AACA;AACD;AAED;A7DghgBA;AACA;AACA;AACA;AACA;A6DhhgBO;AACL;AACA;AACA;AAKD;AAED;A7D6ggBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6D7ggBO;AACL;AACD;A7D+ggBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8DrqhBA;A9DuqhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8DrqhBA;A9DuqhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8DrqhBO;AACL;AACE;AACD;A9DuqhBH;A8DtqhBE;AACE;AACE;AACD;AACF;A9DwqhBH;A8DvqhBE;AACD;AAED;A9DwqhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8DxqhBO;AACL;AACA;A9D0qhBF;A8DzqhBE;AACE;A9D2qhBJ;A8D1qhBI;AACE;AACD;AACC;AACE;AACD;A9D4qhBP;A8D3qhBM;AACD;AACF;A9D6qhBH;A8D5qhBE;AACE;AACD;A9D8qhBH;A8D7qhBE;AACD;AAED;A9D8qhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8D9qhBO;AACL;AACE;AACE;AACD;AACF;A9DgrhBH;A8D/qhBE;AACD;AAED;A9DgrhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8DhrhBO;AACL;A9DkrhBF;A8DjrhBE;AACE;AACD;A9DmrhBH;A8DlrhBE;AACD;AAED;A9DmrhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8DnrhBO;AACL;AACE;AACD;AACF;AAED;A9DorhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8DprhBO;AACL;AACD;A9DsrhBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+DryhBA;A/DuyhBA;A+DvzhBA;A/DyzhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+DrzhBA;A/DuzhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+DrzhBO;AACL;AACA;A/DuzhBF;A+DtzhBE;AAAsC;AAAc;AAClD;A/D0zhBJ;A+DzzhBI;AACE;AACD;A/D2zhBL;A+D1zhBI;AACA;AACA;AACA;AACD;A/D4zhBH;A+D3zhBE;AACD;A/D6zhBD;AACA;AACA;AACA;AACA;AACA;A+D/zhBE;A/Di0hBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+D/zhBI;AACD;A/Di0hBH;AACA;AACA;A+Dh0hBA;A/Dk0hBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Dp0hBA;AAAoC;A/Du0hBpC;A+Dp0hBE;AACA;AACA;AAEA;AACA;AACA;A/Dq0hBF;A+Dp0hBE;AACE;AACE;AACD;A/Ds0hBL;A+Dr0hBI;AACA;AACD;A/Du0hBH;AACA;A+Dt0hBE;AACD;A/Dw0hBD;AACA;AACA;AACA;AACA;AACA;AACA;AgEx7hBA;AhE07hBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgEv7hBA;AhEy7hBA;AgEx7hBA;AhE07hBA;AgEx7hBA;AhE07hBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgEx7hBO;AACL;AACA;AACA;AACA;AACE;AAAgB;AADP;AACO;AhE67hBpB;AgE57hBM;AACA;AACA;AACD;AhE87hBL;AgE77hBI;AACD;AACF;AhE+7hBD;AACA;AACA;AACA;AACA;AACA;AACA;AiEh+hBA;AjEk+hBA;AiEl/hBA;AjEo/hBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiEh/hBA;AACA;AAEA;AjEi/hBA;AACA;AACA;AACA;AACA;AACA;AiEl/hBE;AjEo/hBF;AACA;AiEl/hBE;AACE;AACA;AAEA;AjEm/hBJ;AiEl/hBI;AAEA;AjEm/hBJ;AACA;AACA;AACA;AiEl/hBI;AAEA;AjEm/hBJ;AiEl/hBI;AACD;AAED;AjEm/hBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiEr/hBI;AACD;AAED;AjEs/hBF;AACA;AACA;AACA;AACA;AACA;AiEt/hBI;AjEw/hBJ;AiEv/hBI;AACE;AACA;AACD;AjEy/hBL;AiEx/hBI;AACD;AAED;AjEy/hBF;AACA;AACA;AACA;AACA;AACA;AiEz/hBI;AACE;AACD;AjE2/hBL;AiE1/hBI;AAAoB;AAAS;AAAV;AACnB;AACD;AAED;AjE8/hBF;AACA;AACA;AACA;AACA;AiE9/hBI;AACE;AACD;AjEggiBL;AiE9/hBI;AACA;AACA;AACA;AjEggiBJ;AiE//hBI;AAAyB;AjEkgiB7B;AiEhgiBM;AACE;AACA;AACD;AACF;AjEkgiBL;AiEhgiBI;AACE;AACA;AACD;AACF;AjEkgiBH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkE5miBA;AlE8miBA;AkE9niBA;AlEgoiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkE5niBA;AlE8niBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkE5niBO;AACL;AACA;AlE8niBF;AkE7niBE;AACE;AACA;AACD;AlE+niBH;AkE7niBE;AACE;AACD;AACC;AACD;AlE+niBH;AkE7niBE;AACD;AAED;AlE8niBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkE9niBO;AACL;AACD;AAED;AlE+niBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkE/niBO;AACL;AACA;AACD;AAED;AlEgoiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkEhoiBO;AACL;AACA;AACD;AAED;AlEioiBA;AACA;AACA;AACA;AACA;AACA;AACA;AkEjoiBO;AACL;AACD;AAED;AlEkoiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkEloiBO;AACL;AACD;AAED;AlEmoiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkEnoiBO;AACL;AAEA;AACE;AACA;AAFK;AAIR;AAED;AlEmoiBA;AACA;AACA;AACA;AACA;AACA;AkEnoiBO;AACL;AACE;AACD;AACF;AlEqoiBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmEryiBA;AnEuyiBA;AmEvziBA;AnEyziBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmErziBA;AACA;AAEA;AnEsziBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmErziBO;AACL;AnEuziBF;AmEtziBE;AACE;AACD;AnEwziBH;AmEvziBE;AACD;AAED;AnEwziBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmExziBO;AACL;AACA;AACA;AAAO;AAA4B;AAAnC;AACD;AAED;AnE4ziBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmE5ziBO;AACL;AACD;AAED;AnE6ziBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmE7ziBO;AACL;AACE;AACD;AACC;AACD;AACF;AAED;AnE8ziBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmE9ziBO;AAA+C;AAAZ;AAAY;AnEm0iBtD;AmEl0iBE;AACA;AAEA;AnEm0iBF;AmEl0iBE;AACA;AAAY;AAAW;AAAW;AAAvB;AnEw0iBb;AmE90iBsD;AAAA;AAAA;AAAA;AAAA;AnEo1iBtD;AmEz0iBI;AACE;AACD;AnE20iBL;AmE10iBI;AnE40iBJ;AmE30iBI;AACE;AACD;AnE60iBL;AmE50iBI;AACE;AACA;AACD;AnE80iBL;AmE70iBI;AACE;AAEA;AnE80iBN;AmE70iBM;AACE;AnE+0iBR;AmE90iBQ;AACE;AAAY;AAAa;AAAa;AAA3B;AACX;AACD;AACF;AnEo1iBP;AmEn1iBM;AACD;AAlCiD;AnEw3iBtD;AmE/2iBE;AAAyB;AnEk3iB3B;AmEl3iB2B;AA0BxB;AnE21iBH;AmE11iBE;AACD;AAED;AnE21iBA;AACA;AACA;AACA;AACA;AACA;AmE31iBO;AACL;AACE;AACE;AACD;AnE61iBL;AmE51iBI;AACD;AACF;AnE81iBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoEt/iBA;ApEw/iBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoEt/iBA;ApEw/iBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoEt/iBE;ApEw/iBF;AACA;AoEt/iBE;AACE;AAEA;ApEu/iBJ;AACA;AACA;AoEt/iBI;AAAmB;AAAO;AACxB;AACA;AACD;AAED;ApEy/iBJ;AACA;AACA;AoEx/iBI;AAEA;ApEy/iBJ;AACA;AACA;AoEx/iBI;AACD;AAGH;ApEw/iBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoE1/iBO;AACL;AACE;AACD;AACF;AAED;ApE2/iBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoE3/iBO;AAAmC;AAAX;AAAW;ApEggjB1C;AoE//iBE;AACE;AACA;ApEigjBJ;AoEhgjBI;AACE;AACD;ApEkgjBL;AoEjgjBI;AACE;AACD;ApEmgjBL;AoElgjBI;AACA;ApEogjBJ;AoElgjBI;AACE;AACE;AACD;ApEogjBP;AoEngjBM;AACE;AACD;AACF;ApEqgjBL;AoEpgjBI;AACE;AACE;AACD;ApEsgjBP;AoErgjBM;AACE;AACD;AACF;ApEugjBL;AoEtgjBI;AACE;AACD;AACF;AACF;AAED;ApEugjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoEzgjBE;ApE2gjBF;AACA;AoEzgjBE;AACE;AACA;ApE2gjBJ;AoE1gjBI;AACE;AACA;AACD;AAED;ApE2gjBJ;AoE1gjBI;AAEA;ApE2gjBJ;AoE1gjBI;AAEA;ApE2gjBJ;AoE1gjBI;ApE4gjBJ;AoE1gjBI;AACE;AACE;AACD;AACF;AACF;AAED;ApE2gjBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoE9gjBe;ApEghjBf;AoE/gjBI;AACA;AAEI;AACE;AACD;AACF;AAEC;AACA;AACA;AACE;AACD;AACF;AAEH;AACD;AAED;ApE6gjBF;AACA;AACA;AoE7gjBI;AACD;ApE+gjBH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqEhtjBA;ArEktjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqEhtjBA;ArEktjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqEhtjBO;AACL;AACA;AAEA;ArEitjBF;AACA;AACA;AqEhtjBE;AACE;ArEktjBJ;AqEhtjBI;AAEA;AACD;AAED;ArEgtjBF;AACA;AACA;AACA;AqEhtjBE;AACE;ArEktjBJ;AqEhtjBI;AACE;AACD;AACF;ArEktjBH;AqEhtjBE;AAAyB;AAAN;AAAM;ArEqtjB3B;AqEptjBI;AACE;AACD;AACC;AACD;AACF;AACF;AAED;ArEqtjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqErtjBO;AACL;AACA;AACA;AAEA;ArEstjBF;AACA;AACA;AqErtjBE;AACE;AACA;AACD;AAED;ArEstjBF;AACA;AACA;AACA;AqEttjBE;AACE;AACA;ArEwtjBJ;AqEvtjBI;AACE;AACD;AACC;AACD;AACF;ArEytjBH;AqEvtjBE;AACE;ArEytjBJ;AqE1tjB2B;AAAN;AAAM;ArE8tjB3B;AqE5tjBI;ArE8tjBJ;AqE7tjBI;AACE;AACD;AACF;AACF;ArE+tjBD;AACA;AACA;AACA;AACA;AACA;AACA;AsE70jBA;AtE+0jBA;AsE50jBA;AtE80jBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsE50jBA;AtE80jBA;AsE50jBA;AACE;AACA;AACE;AACD;AtE80jBH;AACA;AsE70jBE;AACE;AACD;AAED;AACA;AtE80jBF;AACA;AsE90jBE;AACE;AACD;AAED;AtE+0jBF;AACA;AsE/0jBE;AACD;AAED;AtEg1jBA;AACA;AACA;AACA;AACA;AACA;AsEh1jBO;AACL;AACD;AtEk1jBD;AACA;AACA;AFp4jBA;AACA","file":"amp-ad-0.1.max.js","sourcesContent":["(self.AMP=self.AMP||[]).push({n:\"amp-ad\",v:\"1910151804560\",f:(function(AMP,_){\n$1\n})});","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getA4ARegistry = getA4ARegistry;\nexports.signingServerURLs = void 0;\n\nvar _cloudflareA4aConfig = require(\"../extensions/amp-ad-network-cloudflare-impl/0.1/cloudflare-a4a-config\");\n\nvar _gmosspA4aConfig = require(\"../extensions/amp-ad-network-gmossp-impl/0.1/gmossp-a4a-config\");\n\nvar _object = require(\"../src/utils/object\");\n\nvar _tripleliftA4aConfig = require(\"../extensions/amp-ad-network-triplelift-impl/0.1/triplelift-a4a-config\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Registry for A4A (AMP Ads for AMPHTML pages) \"is supported\" predicates.\n * If an ad network, {@code ${NETWORK}}, is registered in this object, then the\n * {@code <amp-ad type=\"${NETWORK}\">} implementation will look up its predicate\n * here. If there is a predicate and it and returns {@code true}, then\n * {@code amp-ad} will attempt to render the ad via the A4A pathway (fetch\n * ad creative via early XHR CORS request; verify that it is validated AMP;\n * and then render directly in the host page by splicing into the host DOM).\n * Otherwise, it will attempt to render the ad via the existing \"3p iframe\"\n * pathway (delay load into a cross-domain iframe).\n *\n * @type {!Object<string, function(!Window, !Element): boolean>}\n */\nvar a4aRegistry;\n/**\n * Returns the a4a registry map\n * @return {Object}\n */\n\nfunction getA4ARegistry() {\n  if (!a4aRegistry) {\n    a4aRegistry = (0, _object.map)({\n      'adsense': function adsense() {\n        return true;\n      },\n      'adzerk': function adzerk() {\n        return true;\n      },\n      'doubleclick': function doubleclick() {\n        return true;\n      },\n      'triplelift': _tripleliftA4aConfig.tripleliftIsA4AEnabled,\n      'cloudflare': _cloudflareA4aConfig.cloudflareIsA4AEnabled,\n      'gmossp': _gmosspA4aConfig.gmosspIsA4AEnabled,\n      'fake': function fake() {\n        return true;\n      } // TODO: Add new ad network implementation \"is enabled\" functions here.\n      // Note: if you add a function here that requires a new \"import\", above,\n      // you'll probably also need to add a whitelist exception to\n      // build-system/test-configs/dep-check-config.js in the\n      // \"filesMatching: 'ads/**/*.js'\" rule.\n\n    });\n  }\n\n  return a4aRegistry;\n}\n/**\n * An object mapping signing server names to their corresponding URLs.\n * @type {!Object<string, string>}\n */\n\n\nvar signingServerURLs = {\n  'google': 'https://cdn.ampproject.org/amp-ad-verifying-keyset.json',\n  'google-dev': 'https://cdn.ampproject.org/amp-ad-verifying-keyset-dev.json',\n  'cloudflare': 'https://amp.cloudflare.com/amp-ad-verifying-keyset.json',\n  'cloudflare-dev': 'https://amp.cloudflare.com/amp-ad-verifying-keyset-dev.json'\n};\nexports.signingServerURLs = signingServerURLs;\n\n},{\"../extensions/amp-ad-network-cloudflare-impl/0.1/cloudflare-a4a-config\":8,\"../extensions/amp-ad-network-gmossp-impl/0.1/gmossp-a4a-config\":9,\"../extensions/amp-ad-network-triplelift-impl/0.1/triplelift-a4a-config\":10,\"../src/utils/object\":67}],2:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.adConfig = void 0;\n\nvar _json = require(\"../src/json\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   prefetch: (string|undefined),\n *   preconnect: (string|undefined),\n *   renderStartImplemented: (boolean|undefined),\n *   clientIdScope: (string|undefined),\n *   clientIdCookieName: (string|undefined),\n *   consentHandlingOverride: (boolean|undefined),\n *   remoteHTMLDisabled: (boolean|undefined),\n *   fullWidthHeightRatio: (number|undefined),\n * }}\n */\nvar AdNetworkConfigDef;\n/**\n * The config of each ad network.\n * Please keep the list alphabetic order.\n *\n * yourNetworkName: {  // This is the \"type\" attribute of <amp-ad>\n *\n *   // List of URLs for prefetch\n *   prefetch: string|array\n *\n *   // List of hosts for preconnect\n *   preconnect: string|array\n *\n *   // The scope used to provide CIDs to ads\n *   clientIdScope: string\n *\n *   // The cookie name to store the CID. In absence, `clientIdScope` is used.\n *   clientIdCookieName: string\n *\n *   // If the ad network is willing to override the consent handling, which\n *   // by default is blocking ad load until the consent is accepted.\n *   consentHandlingOverride: boolean\n *\n *   // Whether render-start API has been implemented\n *   // We highly recommend all networks to implement the API,\n *   // see details in the README.md\n *   renderStartImplemented: boolean\n *\n *   // The width / height ratio for full width ad units.\n *   // If absent, it means the network does not support full width ad units.\n *   // Example value: 1.2\n *   fullWidthHeightRatio: number\n * }\n *\n * @const {!Object<string, !JsonObject>}\n */\n\nvar adConfig = JSON.parse(\"{\\\"_ping_\\\":{\\\"renderStartImplemented\\\":true,\\\"clientIdScope\\\":\\\"_PING_\\\",\\\"consentHandlingOverride\\\":true},\\\"1wo\\\":{},\\\"24smi\\\":{\\\"prefetch\\\":\\\"https://jsn.24smi.net/smi.js\\\",\\\"preconnect\\\":\\\"https://data.24smi.net\\\"},\\\"a8\\\":{\\\"prefetch\\\":\\\"https://statics.a8.net/amp/ad.js\\\",\\\"renderStartImplemented\\\":true},\\\"a9\\\":{\\\"prefetch\\\":\\\"https://z-na.amazon-adsystem.com/widgets/onejs?MarketPlace=US\\\"},\\\"accesstrade\\\":{\\\"prefetch\\\":\\\"https://h.accesstrade.net/js/amp/amp.js\\\"},\\\"adagio\\\":{\\\"prefetch\\\":\\\"https://js-ssl.neodatagroup.com/adagio_amp.js\\\",\\\"preconnect\\\":[\\\"https://ad-aws-it.neodatagroup.com\\\",\\\"https://tracker.neodatagroup.com\\\"],\\\"renderStartImplemented\\\":true},\\\"adblade\\\":{\\\"prefetch\\\":\\\"https://web.adblade.com/js/ads/async/show.js\\\",\\\"preconnect\\\":[\\\"https://staticd.cdn.adblade.com\\\",\\\"https://static.adblade.com\\\"],\\\"renderStartImplemented\\\":true},\\\"adbutler\\\":{\\\"prefetch\\\":\\\"https://servedbyadbutler.com/app.js\\\"},\\\"adform\\\":{},\\\"adfox\\\":{\\\"prefetch\\\":\\\"https://yastatic.net/pcode/adfox/loader.js\\\",\\\"renderStartImplemented\\\":true},\\\"adgeneration\\\":{\\\"prefetch\\\":\\\"https://i.socdm.com/sdk/js/adg-script-loader.js\\\"},\\\"adglare\\\":{\\\"renderStartImplemented\\\":true},\\\"adhese\\\":{\\\"renderStartImplemented\\\":true},\\\"adincube\\\":{\\\"renderStartImplemented\\\":true},\\\"adition\\\":{},\\\"adman\\\":{},\\\"admanmedia\\\":{\\\"renderStartImplemented\\\":true},\\\"admixer\\\":{\\\"renderStartImplemented\\\":true,\\\"preconnect\\\":[\\\"https://inv-nets.admixer.net\\\",\\\"https://cdn.admixer.net\\\"]},\\\"adocean\\\":{\\\"consentHandlingOverride\\\":true},\\\"adop\\\":{},\\\"adpicker\\\":{\\\"renderStartImplemented\\\":true},\\\"adplugg\\\":{\\\"prefetch\\\":\\\"https://www.adplugg.com/serve/js/ad.js\\\",\\\"renderStartImplemented\\\":true},\\\"adpon\\\":{\\\"prefetch\\\":\\\"https://ad.adpon.jp/amp.js\\\",\\\"clientIdScope\\\":\\\"AMP_ECID_ADPON\\\"},\\\"adreactor\\\":{},\\\"adsensor\\\":{\\\"prefetch\\\":\\\"https://wfpscripts.webspectator.com/amp/adsensor-amp.js\\\",\\\"clientIdScope\\\":\\\"amp_ecid_adensor\\\",\\\"renderStartImplemented\\\":true},\\\"adsloom\\\":{\\\"clientIdScope\\\":\\\"AMP_ECID_ADSLOOM\\\"},\\\"adsnative\\\":{\\\"prefetch\\\":\\\"https://static.adsnative.com/static/js/render.v1.js\\\",\\\"preconnect\\\":\\\"https://api.adsnative.com\\\"},\\\"adspeed\\\":{\\\"preconnect\\\":\\\"https://g.adspeed.net\\\",\\\"renderStartImplemented\\\":true},\\\"adspirit\\\":{},\\\"adstir\\\":{\\\"prefetch\\\":\\\"https://js.ad-stir.com/js/adstir_async.js\\\",\\\"preconnect\\\":\\\"https://ad.ad-stir.com\\\"},\\\"adstyle\\\":{\\\"prefetch\\\":\\\"https://widgets.ad.style/amp.js\\\",\\\"preconnect\\\":[\\\"https://w.ad.style\\\"]},\\\"adtech\\\":{\\\"prefetch\\\":\\\"https://s.aolcdn.com/os/ads/adsWrapper3.js\\\",\\\"preconnect\\\":[\\\"https://mads.at.atwola.com\\\",\\\"https://aka-cdn.adtechus.com\\\"]},\\\"adthrive\\\":{\\\"prefetch\\\":[\\\"https://www.googletagservices.com/tag/js/gpt.js\\\"],\\\"preconnect\\\":[\\\"https://partner.googleadservices.com\\\",\\\"https://securepubads.g.doubleclick.net\\\",\\\"https://tpc.googlesyndication.com\\\"],\\\"renderStartImplemented\\\":true},\\\"adunity\\\":{\\\"preconnect\\\":[\\\"https://content.adunity.com\\\"],\\\"renderStartImplemented\\\":true},\\\"aduptech\\\":{\\\"prefetch\\\":\\\"https://s.d.adup-tech.com/jsapi\\\",\\\"preconnect\\\":[\\\"https://d.adup-tech.com\\\",\\\"https://m.adup-tech.com\\\"],\\\"renderStartImplemented\\\":true},\\\"adventive\\\":{\\\"preconnect\\\":[\\\"https://ads.adventive.com\\\",\\\"https://amp.adventivedev.com\\\"],\\\"renderStartImplemented\\\":true},\\\"adverline\\\":{\\\"prefetch\\\":\\\"https://ads.adverline.com/richmedias/amp.js\\\",\\\"preconnect\\\":[\\\"https://adnext.fr\\\"],\\\"renderStartImplemented\\\":true},\\\"adverticum\\\":{},\\\"advertserve\\\":{\\\"renderStartImplemented\\\":true},\\\"adyoulike\\\":{\\\"consentHandlingOverride\\\":true,\\\"prefetch\\\":\\\"https://fo-static.omnitagjs.com/amp.js\\\",\\\"renderStartImplemented\\\":true},\\\"adzerk\\\":{},\\\"affiliateb\\\":{\\\"prefetch\\\":\\\"https://track.affiliate-b.com/amp/a.js\\\",\\\"renderStartImplemented\\\":true},\\\"aja\\\":{\\\"prefetch\\\":[\\\"https://cdn.as.amanad.adtdp.com/sdk/asot-amp.js\\\",\\\"https://cdn.as.amanad.adtdp.com/sdk/asot-v2.js\\\"],\\\"preconnect\\\":[\\\"https://ad.as.amanad.adtdp.com\\\"]},\\\"appvador\\\":{\\\"prefetch\\\":[\\\"https://cdn.apvdr.com/js/VastAdUnit.min.js\\\",\\\"https://cdn.apvdr.com/js/VideoAd.min.js\\\",\\\"https://cdn.apvdr.com/js/VideoAd3PAS.min.js\\\",\\\"https://cdn.apvdr.com/js/VideoAdAutoPlay.min.js\\\",\\\"https://cdn.apvdr.com/js/VideoAdNative.min.js\\\"],\\\"renderStartImplemented\\\":true},\\\"amoad\\\":{\\\"prefetch\\\":[\\\"https://j.amoad.com/js/a.js\\\",\\\"https://j.amoad.com/js/n.js\\\"],\\\"preconnect\\\":[\\\"https://d.amoad.com\\\",\\\"https://i.amoad.com\\\",\\\"https://m.amoad.com\\\",\\\"https://v.amoad.com\\\"]},\\\"aniview\\\":{\\\"renderStartImplemented\\\":true},\\\"appnexus\\\":{\\\"prefetch\\\":\\\"https://acdn.adnxs.com/ast/ast.js\\\",\\\"preconnect\\\":\\\"https://ib.adnxs.com\\\",\\\"renderStartImplemented\\\":true},\\\"atomx\\\":{\\\"prefetch\\\":\\\"https://s.ato.mx/p.js\\\"},\\\"beaverads\\\":{\\\"renderStartImplemented\\\":true},\\\"beopinion\\\":{\\\"prefetch\\\":\\\"https://widget.beopinion.com/sdk.js\\\",\\\"preconnect\\\":[\\\"https://t.beopinion.com\\\",\\\"https://s.beopinion.com\\\",\\\"https://data.beopinion.com\\\"],\\\"renderStartImplemented\\\":true},\\\"bidtellect\\\":{},\\\"blade\\\":{\\\"prefetch\\\":\\\"https://sdk.streamrail.com/blade/sr.blade.js\\\",\\\"renderStartImplemented\\\":true},\\\"brainy\\\":{},\\\"bringhub\\\":{\\\"renderStartImplemented\\\":true,\\\"preconnect\\\":[\\\"https://static.bh-cdn.com\\\",\\\"https://core-api.bringhub.io\\\"]},\\\"broadstreetads\\\":{\\\"prefetch\\\":\\\"https://cdn.broadstreetads.com/init-2.min.js\\\"},\\\"caajainfeed\\\":{\\\"prefetch\\\":[\\\"https://cdn.amanad.adtdp.com/sdk/ajaamp.js\\\"],\\\"preconnect\\\":[\\\"https://ad.amanad.adtdp.com\\\"]},\\\"capirs\\\":{\\\"renderStartImplemented\\\":true},\\\"caprofitx\\\":{\\\"prefetch\\\":[\\\"https://cdn.caprofitx.com/pfx.min.js\\\",\\\"https://cdn.caprofitx.com/tags/amp/profitx_amp.js\\\"],\\\"preconnect\\\":\\\"https://ad.caprofitx.adtdp.com\\\"},\\\"cedato\\\":{\\\"renderStartImplemented\\\":true},\\\"chargeads\\\":{},\\\"colombia\\\":{\\\"prefetch\\\":\\\"https://static.clmbtech.com/ad/commons/js/colombia-amp.js\\\"},\\\"connatix\\\":{\\\"renderStartImplemented\\\":true},\\\"contentad\\\":{},\\\"criteo\\\":{\\\"prefetch\\\":\\\"https://static.criteo.net/js/ld/publishertag.js\\\",\\\"preconnect\\\":\\\"https://cas.criteo.com\\\"},\\\"csa\\\":{\\\"prefetch\\\":\\\"https://www.google.com/adsense/search/ads.js\\\"},\\\"dable\\\":{\\\"preconnect\\\":[\\\"https://static.dable.io\\\",\\\"https://api.dable.io\\\",\\\"https://images.dable.io\\\"],\\\"renderStartImplemented\\\":true},\\\"directadvert\\\":{\\\"renderStartImplemented\\\":true},\\\"distroscale\\\":{\\\"preconnect\\\":[\\\"https://c.jsrdn.com\\\",\\\"https://s.jsrdn.com\\\",\\\"https://i.jsrdn.com\\\"],\\\"renderStartImplemented\\\":true},\\\"dotandads\\\":{\\\"prefetch\\\":\\\"https://amp.ad.dotandad.com/dotandadsAmp.js\\\",\\\"preconnect\\\":\\\"https://bal.ad.dotandad.com\\\"},\\\"dynad\\\":{\\\"preconnect\\\":[\\\"https://t.dynad.net\\\",\\\"https://tm.jsuol.com.br\\\"]},\\\"eadv\\\":{\\\"renderStartImplemented\\\":true,\\\"clientIdScope\\\":\\\"AMP_ECID_EADV\\\",\\\"prefetch\\\":[\\\"https://www.eadv.it/track/esr.min.js\\\",\\\"https://www.eadv.it/track/ead.min.js\\\"]},\\\"eas\\\":{\\\"prefetch\\\":\\\"https://amp.emediate.eu/amp.v0.js\\\",\\\"renderStartImplemented\\\":true},\\\"engageya\\\":{},\\\"epeex\\\":{},\\\"eplanning\\\":{\\\"prefetch\\\":\\\"https://us.img.e-planning.net/layers/epl-amp.js\\\"},\\\"ezoic\\\":{\\\"prefetch\\\":[\\\"https://www.googletagservices.com/tag/js/gpt.js\\\",\\\"https://g.ezoic.net/ezoic/ampad.js\\\"],\\\"clientIdScope\\\":\\\"AMP_ECID_EZOIC\\\",\\\"consentHandlingOverride\\\":true},\\\"f1e\\\":{\\\"prefetch\\\":\\\"https://img.ak.impact-ad.jp/util/f1e_amp.min.js\\\"},\\\"f1h\\\":{\\\"preconnect\\\":\\\"https://img.ak.impact-ad.jp\\\",\\\"renderStartImplemented\\\":true},\\\"fake\\\":{},\\\"felmat\\\":{\\\"prefetch\\\":\\\"https://t.felmat.net/js/fmamp.js\\\",\\\"renderStartImplemented\\\":true},\\\"flite\\\":{},\\\"fluct\\\":{\\\"preconnect\\\":[\\\"https://cdn-fluct.sh.adingo.jp\\\",\\\"https://s.sh.adingo.jp\\\",\\\"https://i.adingo.jp\\\"]},\\\"forkmedia\\\":{\\\"prefetch\\\":\\\"https://delivery.forkcdn.com/rappio/inread/v1.1/amp/inread.js\\\",\\\"renderStartImplemented\\\":true},\\\"freewheel\\\":{\\\"prefetch\\\":\\\"https://cdn.stickyadstv.com/prime-time/fw-amp.min.js\\\",\\\"renderStartImplemented\\\":true},\\\"fusion\\\":{\\\"prefetch\\\":\\\"https://assets.adtomafusion.net/fusion/latest/fusion-amp.min.js\\\"},\\\"genieessp\\\":{\\\"prefetch\\\":\\\"https://js.gsspcln.jp/l/amp.js\\\"},\\\"giraff\\\":{\\\"renderStartImplemented\\\":true},\\\"gmossp\\\":{\\\"prefetch\\\":\\\"https://cdn.gmossp-sp.jp/ads/amp.js\\\"},\\\"gumgum\\\":{\\\"prefetch\\\":\\\"https://js.gumgum.com/slot.js\\\",\\\"renderStartImplemented\\\":true},\\\"holder\\\":{\\\"prefetch\\\":\\\"https://i.holder.com.ua/js2/holder/ajax/ampv1.js\\\",\\\"preconnect\\\":\\\"https://h.holder.com.ua\\\",\\\"renderStartImplemented\\\":true},\\\"ibillboard\\\":{},\\\"idealmedia\\\":{\\\"renderStartImplemented\\\":true,\\\"preconnect\\\":[\\\"https://jsc.idealmedia.io\\\",\\\"https://servicer.idealmedia.io\\\",\\\"https://s-img.idealmedia.io/\\\"]},\\\"imedia\\\":{\\\"prefetch\\\":\\\"https://i.imedia.cz/js/im3.js\\\",\\\"renderStartImplemented\\\":true},\\\"imobile\\\":{\\\"prefetch\\\":\\\"https://spamp.i-mobile.co.jp/script/amp.js\\\",\\\"preconnect\\\":\\\"https://spad.i-mobile.co.jp\\\"},\\\"imonomy\\\":{\\\"renderStartImplemented\\\":true},\\\"improvedigital\\\":{},\\\"industrybrains\\\":{\\\"prefetch\\\":\\\"https://web.industrybrains.com/js/ads/async/show.js\\\",\\\"preconnect\\\":[\\\"https://staticd.cdn.industrybrains.com\\\",\\\"https://static.industrybrains.com\\\"],\\\"renderStartImplemented\\\":true},\\\"inmobi\\\":{\\\"prefetch\\\":\\\"https://cf.cdn.inmobi.com/ad/inmobi.secure.js\\\",\\\"renderStartImplemented\\\":true},\\\"innity\\\":{\\\"prefetch\\\":\\\"https://cdn.innity.net/admanager.js\\\",\\\"preconnect\\\":\\\"https://as.innity.com\\\",\\\"renderStartImplemented\\\":true},\\\"insticator\\\":{\\\"preconnect\\\":\\\"https://d3lcz8vpax4lo2.cloudfront.net\\\",\\\"renderStartImplemented\\\":true},\\\"invibes\\\":{\\\"prefetch\\\":\\\"https://k.r66net.com/GetAmpLink\\\",\\\"renderStartImplemented\\\":true,\\\"consentHandlingOverride\\\":true},\\\"ix\\\":{\\\"prefetch\\\":[\\\"https://js-sec.indexww.com/apl/amp.js\\\"],\\\"preconnect\\\":\\\"https://as-sec.casalemedia.com\\\",\\\"renderStartImplemented\\\":true},\\\"jubna\\\":{},\\\"kargo\\\":{},\\\"kiosked\\\":{\\\"renderStartImplemented\\\":true},\\\"kixer\\\":{\\\"prefetch\\\":\\\"https://cdn.kixer.com/ad/load.js\\\",\\\"renderStartImplemented\\\":true},\\\"kuadio\\\":{},\\\"lentainform\\\":{\\\"renderStartImplemented\\\":true,\\\"preconnect\\\":[\\\"https://jsc.lentainform.com\\\",\\\"https://servicer.lentainform.com\\\",\\\"https://s-img.lentainform.com\\\"]},\\\"ligatus\\\":{\\\"prefetch\\\":\\\"https://ssl.ligatus.com/render/ligrend.js\\\",\\\"renderStartImplemented\\\":true},\\\"lockerdome\\\":{\\\"prefetch\\\":\\\"https://cdn2.lockerdomecdn.com/_js/amp.js\\\",\\\"renderStartImplemented\\\":true},\\\"logly\\\":{\\\"preconnect\\\":[\\\"https://l.logly.co.jp\\\",\\\"https://cdn.logly.co.jp\\\"],\\\"renderStartImplemented\\\":true},\\\"loka\\\":{\\\"prefetch\\\":\\\"https://loka-cdn.akamaized.net/scene/amp.js\\\",\\\"preconnect\\\":[\\\"https://scene-front.lokaplatform.com\\\",\\\"https://loka-materials.akamaized.net\\\"],\\\"renderStartImplemented\\\":true},\\\"mads\\\":{\\\"prefetch\\\":\\\"https://eu2.madsone.com/js/tags.js\\\"},\\\"mantis-display\\\":{\\\"prefetch\\\":\\\"https://assets.mantisadnetwork.com/mantodea.min.js\\\",\\\"preconnect\\\":[\\\"https://mantodea.mantisadnetwork.com\\\",\\\"https://res.cloudinary.com\\\",\\\"https://resize.mantisadnetwork.com\\\"]},\\\"mantis-recommend\\\":{\\\"prefetch\\\":\\\"https://assets.mantisadnetwork.com/recommend.min.js\\\",\\\"preconnect\\\":[\\\"https://mantodea.mantisadnetwork.com\\\",\\\"https://resize.mantisadnetwork.com\\\"]},\\\"mediaimpact\\\":{\\\"prefetch\\\":\\\"https://ec-ns.sascdn.com/diff/251/pages/amp_default.js\\\",\\\"preconnect\\\":[\\\"https://ww251.smartadserver.com\\\",\\\"https://static.sascdn.com/\\\"],\\\"renderStartImplemented\\\":true},\\\"medianet\\\":{\\\"preconnect\\\":\\\"https://contextual.media.net\\\",\\\"renderStartImplemented\\\":true},\\\"mediavine\\\":{\\\"prefetch\\\":\\\"https://amp.mediavine.com/wrapper.min.js\\\",\\\"preconnect\\\":[\\\"https://partner.googleadservices.com\\\",\\\"https://securepubads.g.doubleclick.net\\\",\\\"https://tpc.googlesyndication.com\\\"],\\\"renderStartImplemented\\\":true,\\\"consentHandlingOverride\\\":true},\\\"medyanet\\\":{\\\"renderStartImplemented\\\":true},\\\"meg\\\":{\\\"renderStartImplemented\\\":true},\\\"mgid\\\":{\\\"renderStartImplemented\\\":true,\\\"preconnect\\\":[\\\"https://jsc.mgid.com\\\",\\\"https://servicer.mgid.com\\\",\\\"https://s-img.mgid.com\\\"]},\\\"microad\\\":{\\\"prefetch\\\":\\\"https://j.microad.net/js/camp.js\\\",\\\"preconnect\\\":[\\\"https://s-rtb.send.microad.jp\\\",\\\"https://s-rtb.send.microadinc.com\\\",\\\"https://cache.send.microad.jp\\\",\\\"https://cache.send.microadinc.com\\\",\\\"https://deb.send.microad.jp\\\"]},\\\"miximedia\\\":{\\\"renderStartImplemented\\\":true},\\\"mixpo\\\":{\\\"prefetch\\\":\\\"https://cdn.mixpo.com/js/loader.js\\\",\\\"preconnect\\\":[\\\"https://player1.mixpo.com\\\",\\\"https://player2.mixpo.com\\\"]},\\\"monetizer101\\\":{\\\"renderStartImplemented\\\":true},\\\"mox\\\":{\\\"prefetch\\\":[\\\"https://ad.mox.tv/js/amp.min.js\\\",\\\"https://ad.mox.tv/mox/mwayss_invocation.min.js\\\"],\\\"renderStartImplemented\\\":true},\\\"mytarget\\\":{\\\"prefetch\\\":\\\"https://ad.mail.ru/static/ads-async.js\\\",\\\"renderStartImplemented\\\":true},\\\"mywidget\\\":{\\\"preconnect\\\":\\\"https://likemore-fe.go.mail.ru\\\",\\\"prefetch\\\":\\\"https://likemore-go.imgsmail.ru/widget_amp.js\\\",\\\"renderStartImplemented\\\":true},\\\"nativeroll\\\":{\\\"prefetch\\\":\\\"https://cdn01.nativeroll.tv/js/seedr-player.min.js\\\"},\\\"nativo\\\":{\\\"prefetch\\\":\\\"https://s.ntv.io/serve/load.js\\\"},\\\"navegg\\\":{\\\"renderStartImplemented\\\":true},\\\"nend\\\":{\\\"prefetch\\\":\\\"https://js1.nend.net/js/amp.js\\\",\\\"preconnect\\\":[\\\"https://output.nend.net\\\",\\\"https://img1.nend.net\\\"]},\\\"netletix\\\":{\\\"preconnect\\\":[\\\"https://call.netzathleten-media.de\\\"],\\\"renderStartImplemented\\\":true},\\\"noddus\\\":{\\\"prefetch\\\":\\\"https://noddus.com/amp_loader.js\\\",\\\"renderStartImplemented\\\":true},\\\"nokta\\\":{\\\"prefetch\\\":\\\"https://static.virgul.com/theme/mockups/noktaamp/ampjs.js\\\",\\\"renderStartImplemented\\\":true},\\\"nws\\\":{},\\\"onead\\\":{\\\"prefetch\\\":\\\"https://ad-specs.guoshipartners.com/static/js/onead-amp.min.js\\\",\\\"renderStartImplemented\\\":true},\\\"onnetwork\\\":{\\\"renderStartImplemented\\\":true},\\\"openadstream\\\":{},\\\"openx\\\":{\\\"prefetch\\\":\\\"https://www.googletagservices.com/tag/js/gpt.js\\\",\\\"preconnect\\\":[\\\"https://partner.googleadservices.com\\\",\\\"https://securepubads.g.doubleclick.net\\\",\\\"https://tpc.googlesyndication.com\\\"],\\\"renderStartImplemented\\\":true},\\\"opinary\\\":{},\\\"outbrain\\\":{\\\"renderStartImplemented\\\":true,\\\"prefetch\\\":\\\"https://widgets.outbrain.com/widgetAMP/outbrainAMP.min.js\\\",\\\"preconnect\\\":[\\\"https://odb.outbrain.com\\\"],\\\"consentHandlingOverride\\\":true},\\\"pixels\\\":{\\\"prefetch\\\":\\\"https://cdn.adsfactor.net/amp/pixels-amp.min.js\\\",\\\"clientIdCookieName\\\":\\\"__AF\\\",\\\"renderStartImplemented\\\":true},\\\"plista\\\":{},\\\"polymorphicads\\\":{\\\"prefetch\\\":\\\"https://www.polymorphicads.jp/js/amp.js\\\",\\\"preconnect\\\":[\\\"https://img.polymorphicads.jp\\\",\\\"https://ad.polymorphicads.jp\\\"],\\\"renderStartImplemented\\\":true},\\\"popin\\\":{\\\"renderStartImplemented\\\":true},\\\"postquare\\\":{},\\\"pressboard\\\":{\\\"renderStartImplemented\\\":true},\\\"promoteiq\\\":{},\\\"pubexchange\\\":{},\\\"pubguru\\\":{\\\"renderStartImplemented\\\":true},\\\"pubmatic\\\":{\\\"prefetch\\\":\\\"https://ads.pubmatic.com/AdServer/js/amp.js\\\"},\\\"pubmine\\\":{\\\"prefetch\\\":[\\\"https://s.pubmine.com/head.js\\\"],\\\"preconnect\\\":\\\"https://delivery.g.switchadhub.com\\\",\\\"renderStartImplemented\\\":true},\\\"puffnetwork\\\":{\\\"prefetch\\\":\\\"https://static.puffnetwork.com/amp_ad.js\\\",\\\"renderStartImplemented\\\":true},\\\"pulsepoint\\\":{\\\"prefetch\\\":\\\"https://ads.contextweb.com/TagPublish/getjs.static.js\\\",\\\"preconnect\\\":\\\"https://tag.contextweb.com\\\"},\\\"purch\\\":{\\\"prefetch\\\":\\\"https://ramp.purch.com/serve/creative_amp.js\\\",\\\"renderStartImplemented\\\":true},\\\"quoraad\\\":{\\\"prefetch\\\":\\\"https://a.quora.com/amp_ad.js\\\",\\\"preconnect\\\":\\\"https://ampad.quora.com\\\",\\\"renderStartImplemented\\\":true},\\\"rbinfox\\\":{\\\"renderStartImplemented\\\":true},\\\"readmo\\\":{\\\"renderStartImplemented\\\":true},\\\"realclick\\\":{\\\"renderStartImplemented\\\":true},\\\"recomad\\\":{\\\"renderStartImplemented\\\":true},\\\"relap\\\":{\\\"renderStartImplemented\\\":true},\\\"revcontent\\\":{\\\"prefetch\\\":\\\"https://labs-cdn.revcontent.com/build/amphtml/revcontent.amp.min.js\\\",\\\"preconnect\\\":[\\\"https://trends.revcontent.com\\\",\\\"https://cdn.revcontent.com\\\",\\\"https://img.revcontent.com\\\"],\\\"renderStartImplemented\\\":true},\\\"revjet\\\":{\\\"prefetch\\\":\\\"https://cdn.revjet.com/~cdn/JS/03/amp.js\\\",\\\"renderStartImplemented\\\":true},\\\"rfp\\\":{\\\"prefetch\\\":\\\"https://js.rfp.fout.jp/rfp-amp.js\\\",\\\"preconnect\\\":\\\"https://ad.rfp.fout.jp\\\",\\\"renderStartImplemented\\\":true},\\\"rnetplus\\\":{},\\\"rubicon\\\":{},\\\"runative\\\":{\\\"prefetch\\\":\\\"https://cdn.run-syndicate.com/sdk/v1/n.js\\\",\\\"renderStartImplemented\\\":true},\\\"sas\\\":{\\\"renderStartImplemented\\\":true},\\\"seedingalliance\\\":{},\\\"sekindo\\\":{\\\"renderStartImplemented\\\":true},\\\"sharethrough\\\":{\\\"renderStartImplemented\\\":true},\\\"shemedia\\\":{\\\"prefetch\\\":[\\\"https://securepubads.g.doubleclick.net/tag/js/gpt.js\\\",\\\"https://ads.shemedia.com/static/amp.js\\\"],\\\"preconnect\\\":[\\\"https://partner.googleadservices.com\\\",\\\"https://tpc.googlesyndication.com\\\",\\\"https://ads.blogherads.com\\\"],\\\"renderStartImplemented\\\":true},\\\"sklik\\\":{\\\"prefetch\\\":\\\"https://c.imedia.cz/js/amp.js\\\"},\\\"slimcutmedia\\\":{\\\"preconnect\\\":[\\\"https://sb.freeskreen.com\\\",\\\"https://static.freeskreen.com\\\",\\\"https://video.freeskreen.com\\\"],\\\"renderStartImplemented\\\":true},\\\"smartadserver\\\":{\\\"prefetch\\\":\\\"https://ec-ns.sascdn.com/diff/js/amp.v0.js\\\",\\\"preconnect\\\":\\\"https://static.sascdn.com\\\",\\\"renderStartImplemented\\\":true},\\\"smartclip\\\":{\\\"prefetch\\\":\\\"https://cdn.smartclip.net/amp/amp.v0.js\\\",\\\"preconnect\\\":\\\"https://des.smartclip.net\\\",\\\"renderStartImplemented\\\":true},\\\"smi2\\\":{\\\"renderStartImplemented\\\":true},\\\"smilewanted\\\":{\\\"prefetch\\\":\\\"https://prebid.smilewanted.com/amp/amp.js\\\",\\\"preconnect\\\":\\\"https://static.smilewanted.com\\\",\\\"renderStartImplemented\\\":true},\\\"sogouad\\\":{\\\"prefetch\\\":\\\"https://theta.sogoucdn.com/wap/js/aw.js\\\",\\\"renderStartImplemented\\\":true},\\\"sortable\\\":{\\\"prefetch\\\":\\\"https://www.googletagservices.com/tag/js/gpt.js\\\",\\\"preconnect\\\":[\\\"https://tags-cdn.deployads.com\\\",\\\"https://partner.googleadservices.com\\\",\\\"https://securepubads.g.doubleclick.net\\\",\\\"https://tpc.googlesyndication.com\\\"],\\\"renderStartImplemented\\\":true},\\\"sovrn\\\":{\\\"prefetch\\\":\\\"https://ap.lijit.com/www/sovrn_amp/sovrn_ads.js\\\"},\\\"speakol\\\":{\\\"renderStartImplemented\\\":true},\\\"spotx\\\":{\\\"preconnect\\\":\\\"https://js.spotx.tv\\\",\\\"renderStartImplemented\\\":true},\\\"strossle\\\":{\\\"preconnect\\\":[\\\"https://amp.spklw.com\\\",\\\"https://widgets.sprinklecontent.com\\\",\\\"https://images.sprinklecontent.com\\\"]},\\\"sunmedia\\\":{\\\"prefetch\\\":\\\"https://vod.addevweb.com/sunmedia/amp/ads/sunmedia.js\\\",\\\"preconnect\\\":\\\"https://static.addevweb.com\\\",\\\"renderStartImplemented\\\":true},\\\"svknative\\\":{\\\"renderStartImplemented\\\":true,\\\"prefetch\\\":\\\"https://widget.svk-native.ru/js/embed.js\\\"},\\\"swoop\\\":{\\\"prefetch\\\":\\\"https://www.swoop-amp.com/amp.js\\\",\\\"preconnect\\\":[\\\"https://www.swpsvc.com\\\",\\\"https://client.swpcld.com\\\"],\\\"renderStartImplemented\\\":true},\\\"taboola\\\":{},\\\"tcsemotion\\\":{\\\"prefetch\\\":\\\"https://ads.tcsemotion.com/www/delivery/amphb.js\\\",\\\"renderStartImplemented\\\":true},\\\"teads\\\":{\\\"prefetch\\\":\\\"https://a.teads.tv/media/format/v3/teads-format.min.js\\\",\\\"preconnect\\\":[\\\"https://cdn2.teads.tv\\\",\\\"https://t.teads.tv\\\",\\\"https://r.teads.tv\\\"],\\\"consentHandlingOverride\\\":true},\\\"torimochi\\\":{\\\"renderStartImplemented\\\":true},\\\"tracdelight\\\":{\\\"prefetch\\\":\\\"https://scripts.tracdelight.io/amp.js\\\",\\\"renderStartImplemented\\\":true},\\\"triplelift\\\":{},\\\"trugaze\\\":{\\\"clientIdScope\\\":\\\"__tg_amp\\\",\\\"renderStartImplemented\\\":true},\\\"uas\\\":{\\\"prefetch\\\":\\\"https://ads.pubmatic.com/AdServer/js/phoenix.js\\\"},\\\"ucfunnel\\\":{\\\"renderStartImplemented\\\":true},\\\"uzou\\\":{\\\"preconnect\\\":[\\\"https://speee-ad.akamaized.net\\\"],\\\"renderStartImplemented\\\":true},\\\"unruly\\\":{\\\"prefetch\\\":\\\"https://video.unrulymedia.com/native/native-loader.js\\\",\\\"renderStartImplemented\\\":true},\\\"valuecommerce\\\":{\\\"prefetch\\\":\\\"https://amp.valuecommerce.com/amp_bridge.js\\\",\\\"preconnect\\\":[\\\"https://ad.jp.ap.valuecommerce.com\\\"],\\\"renderStartImplemented\\\":true},\\\"videointelligence\\\":{\\\"preconnect\\\":\\\"https://s.vi-serve.com\\\",\\\"renderStartImplemented\\\":true},\\\"videonow\\\":{\\\"renderStartImplemented\\\":true},\\\"viralize\\\":{\\\"renderStartImplemented\\\":true},\\\"vmfive\\\":{\\\"prefetch\\\":\\\"https://man.vm5apis.com/dist/adn-web-sdk.js\\\",\\\"preconnect\\\":[\\\"https://vawpro.vm5apis.com\\\",\\\"https://vahfront.vm5apis.com\\\"],\\\"renderStartImplemented\\\":true},\\\"webediads\\\":{\\\"prefetch\\\":\\\"https://eu1.wbdds.com/amp.min.js\\\",\\\"preconnect\\\":[\\\"https://goutee.top\\\",\\\"https://mediaathay.org.uk\\\"],\\\"renderStartImplemented\\\":true},\\\"weborama-display\\\":{\\\"prefetch\\\":[\\\"https://cstatic.weborama.fr/js/advertiserv2/adperf_launch_1.0.0_scrambled.js\\\",\\\"https://cstatic.weborama.fr/js/advertiserv2/adperf_core_1.0.0_scrambled.js\\\"]},\\\"widespace\\\":{},\\\"wisteria\\\":{\\\"renderStartImplemented\\\":true},\\\"wpmedia\\\":{\\\"prefetch\\\":\\\"https://std.wpcdn.pl/wpjslib/wpjslib-amp.js\\\",\\\"preconnect\\\":[\\\"https://www.wp.pl\\\",\\\"https://v.wpimg.pl\\\"],\\\"renderStartImplemented\\\":true},\\\"xlift\\\":{\\\"prefetch\\\":\\\"https://cdn.x-lift.jp/resources/common/xlift_amp.js\\\",\\\"renderStartImplemented\\\":true},\\\"yahoo\\\":{\\\"prefetch\\\":\\\"https://s.yimg.com/os/ampad/display.js\\\",\\\"preconnect\\\":\\\"https://us.adserver.yahoo.com\\\"},\\\"yahoojp\\\":{\\\"prefetch\\\":[\\\"https://s.yimg.jp/images/listing/tool/yads/ydn/amp/amp.js\\\",\\\"https://yads.c.yimg.jp/js/yads.js\\\"],\\\"preconnect\\\":\\\"https://yads.yahoo.co.jp\\\"},\\\"yahoonativeads\\\":{\\\"renderStartImplemented\\\":true},\\\"yandex\\\":{\\\"prefetch\\\":\\\"https://yastatic.net/partner-code/loaders/context_amp.js\\\",\\\"renderStartImplemented\\\":true},\\\"yengo\\\":{\\\"renderStartImplemented\\\":true},\\\"yieldbot\\\":{\\\"prefetch\\\":[\\\"https://cdn.yldbt.com/js/yieldbot.intent.amp.js\\\",\\\"https://msg.yldbt.com/js/ybmsg.html\\\"],\\\"preconnect\\\":\\\"https://i.yldbt.com\\\"},\\\"yieldmo\\\":{\\\"prefetch\\\":\\\"https://static.yieldmo.com/ym.1.js\\\",\\\"preconnect\\\":[\\\"https://s.yieldmo.com\\\",\\\"https://ads.yieldmo.com\\\"],\\\"renderStartImplemented\\\":true},\\\"yieldone\\\":{\\\"prefetch\\\":\\\"https://img.ak.impact-ad.jp/ic/pone/commonjs/yone-amp.js\\\"},\\\"yieldpro\\\":{\\\"preconnect\\\":\\\"https://creatives.yieldpro.eu\\\",\\\"renderStartImplemented\\\":true},\\\"zedo\\\":{\\\"prefetch\\\":\\\"https://ss3.zedo.com/gecko/tag/Gecko.amp.min.js\\\",\\\"renderStartImplemented\\\":true},\\\"zen\\\":{\\\"prefetch\\\":\\\"https://zen.yandex.ru/widget-loader\\\",\\\"preconnect\\\":[\\\"https://yastatic.net/\\\"],\\\"renderStartImplemented\\\":true},\\\"zergnet\\\":{},\\\"zucks\\\":{\\\"preconnect\\\":[\\\"https://j.zucks.net.zimg.jp\\\",\\\"https://sh.zucks.net\\\",\\\"https://k.zucks.net\\\",\\\"https://static.zucks.net.zimg.jp\\\"]},\\\"baidu\\\":{\\\"prefetch\\\":\\\"https://dup.baidustatic.com/js/dm.js\\\",\\\"renderStartImplemented\\\":true}}\");\nexports.adConfig = adConfig;\n\n},{\"../src/json\":42}],3:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getAutoConfig = getAutoConfig;\nexports.getPubControlConfig = getPubControlConfig;\nexports.RawPublisherControlParams = exports.CoReConfig = exports.MIN_PUB_CONTROL_WIDTH_OF_DESKTOP = exports.ExternalCorePubVars = exports.LayoutType = void 0;\n\nvar _LAYOUT_ASPECT_RATIO_, _LAYOUT_TEXT_HEIGHT_M, _LAYOUT_AD_WIDTH_MAP;\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview CoRe responsive functions that are shared with Google tag code.\n * This file must not depend on any AMP-specific libraries, e.g. log. If\n * there is a need to pass any things for logging/reporting - the values\n * must be returned from exported functions.\n */\n\n/**\n * Layout types for Content Recommendation responsive.\n * @enum {string}\n */\nvar LayoutType = {\n  IMAGE_STACKED: 'image_stacked',\n  IMAGE_SIDEBYSIDE: 'image_sidebyside',\n  MOBILE_BANNER_IMAGE_SIDEBYSIDE: 'mobile_banner_image_sidebyside',\n  PUB_CONTROL_IMAGE_STACKED: 'pub_control_image_stacked',\n  PUB_CONTROL_IMAGE_SIDEBYSIDE: 'pub_control_image_sidebyside',\n  PUB_CONTROL_IMAGE_CARD_STACKED: 'pub_control_image_card_stacked',\n  PUB_CONTROL_IMAGE_CARD_SIDEBYSIDE: 'pub_control_image_card_sidebyside',\n  PUB_CONTROL_TEXT: 'pub_control_text',\n  PUB_CONTROL_TEXT_CARD: 'pub_control_text_card',\n  PEDESTAL: 'pedestal'\n};\n/**\n * The external name of Core Pub Control UI pub vars, which are used by\n * publishers directly.\n * @enum {string}\n */\n\nexports.LayoutType = LayoutType;\nvar ExternalCorePubVars = {\n  UI_TYPE: 'data-matched-content-ui-type',\n  COLUMNS_NUM: 'data-matched-content-columns-num',\n  ROWS_NUM: 'data-matched-content-rows-num'\n};\n/**\n * Minimum width of desktop responsive slot in CoRe responsive. We have\n * different logic for desktop and mobile slots. Any slot width equal or larger\n * than this will be adapted to the desktop logic while any slot width smaller\n * than this will be adapted to the mobile logic.\n * @const {number}\n */\n\nexports.ExternalCorePubVars = ExternalCorePubVars;\nvar MIN_PUB_CONTROL_WIDTH_OF_DESKTOP = 468;\n/**\n * The px padding.\n * @const {number}\n */\n\nexports.MIN_PUB_CONTROL_WIDTH_OF_DESKTOP = MIN_PUB_CONTROL_WIDTH_OF_DESKTOP;\nvar PADDING = 8;\n/**\n * The maximum dimension for CoRe Pub Control UI layout.\n * @const {number}\n */\n\nvar MAX_PUB_CONTROL_DIMENSION = 1500;\n/**\n * The layout - aspect ratio map to calculate the size of each content\n * recommendation.\n * image_stacked: https://screenshot.googleplex.com/74S09gFO82b\n * image_sidebyside: https://screenshot.googleplex.com/FUgDSDvwcVo\n * image_card_stacked: https://screenshot.googleplex.com/vedjTonVaDT\n * image_card_sidebyside: https://screenshot.googleplex.com/v3qOZY61tFm\n * text: https://screenshot.googleplex.com/taeRQn7DUhq\n * text_card: https://screenshot.googleplex.com/ur45m96Tv0D\n * @const {!Object<!LayoutType, number>}\n */\n\nvar LAYOUT_ASPECT_RATIO_MAP = (_LAYOUT_ASPECT_RATIO_ = {}, _LAYOUT_ASPECT_RATIO_[LayoutType.IMAGE_STACKED] = 1 / 1.91, _LAYOUT_ASPECT_RATIO_[LayoutType.IMAGE_SIDEBYSIDE] = 1 / 3.82, _LAYOUT_ASPECT_RATIO_[LayoutType.MOBILE_BANNER_IMAGE_SIDEBYSIDE] = 1 / 3.82, _LAYOUT_ASPECT_RATIO_[LayoutType.PUB_CONTROL_IMAGE_STACKED] = 1 / 1.91, _LAYOUT_ASPECT_RATIO_[LayoutType.PUB_CONTROL_IMAGE_SIDEBYSIDE] = 1 / 3.82, _LAYOUT_ASPECT_RATIO_[LayoutType.PUB_CONTROL_IMAGE_CARD_STACKED] = 1 / 1.91, _LAYOUT_ASPECT_RATIO_[LayoutType.PUB_CONTROL_IMAGE_CARD_SIDEBYSIDE] = 1 / 3.74, _LAYOUT_ASPECT_RATIO_[LayoutType.PUB_CONTROL_TEXT] = 0, _LAYOUT_ASPECT_RATIO_[LayoutType.PUB_CONTROL_TEXT_CARD] = 0, _LAYOUT_ASPECT_RATIO_);\n/**\n * The layout - height map to evaluate the height of title + url. Notice, this\n * mainly works only for stacked mode. In sidebyside mode, this height is\n * decided by the height of image. It equals to:\n * FontSize * LineHeight * NumTitle + Padding * 2 + UrlBoxHeight.\n * image_stacked: https://screenshot.googleplex.com/74S09gFO82b\n * image_card_stacked: https://screenshot.googleplex.com/vedjTonVaDT\n * @const {!Object<!LayoutType, number>}\n */\n\nvar LAYOUT_TEXT_HEIGHT_MAP = (_LAYOUT_TEXT_HEIGHT_M = {}, _LAYOUT_TEXT_HEIGHT_M[LayoutType.IMAGE_STACKED] = 80, _LAYOUT_TEXT_HEIGHT_M[LayoutType.IMAGE_SIDEBYSIDE] = 0, _LAYOUT_TEXT_HEIGHT_M[LayoutType.MOBILE_BANNER_IMAGE_SIDEBYSIDE] = 0, _LAYOUT_TEXT_HEIGHT_M[LayoutType.PUB_CONTROL_IMAGE_STACKED] = 80, _LAYOUT_TEXT_HEIGHT_M[LayoutType.PUB_CONTROL_IMAGE_SIDEBYSIDE] = 0, _LAYOUT_TEXT_HEIGHT_M[LayoutType.PUB_CONTROL_IMAGE_CARD_STACKED] = 85, _LAYOUT_TEXT_HEIGHT_M[LayoutType.PUB_CONTROL_IMAGE_CARD_SIDEBYSIDE] = 0, _LAYOUT_TEXT_HEIGHT_M[LayoutType.PUB_CONTROL_TEXT] = 80, _LAYOUT_TEXT_HEIGHT_M[LayoutType.PUB_CONTROL_TEXT_CARD] = 80, _LAYOUT_TEXT_HEIGHT_M);\n/**\n * The layout - minimal width map for pub control UIs. We will adjust column\n * numbers according to minimal width.\n * @const {!Object<!LayoutType, number>}\n */\n\nvar LAYOUT_AD_WIDTH_MAP = (_LAYOUT_AD_WIDTH_MAP = {}, _LAYOUT_AD_WIDTH_MAP[LayoutType.PUB_CONTROL_IMAGE_STACKED] = 100, _LAYOUT_AD_WIDTH_MAP[LayoutType.PUB_CONTROL_IMAGE_SIDEBYSIDE] = 200, _LAYOUT_AD_WIDTH_MAP[LayoutType.PUB_CONTROL_IMAGE_CARD_STACKED] = 150, _LAYOUT_AD_WIDTH_MAP[LayoutType.PUB_CONTROL_IMAGE_CARD_SIDEBYSIDE] = 250, _LAYOUT_AD_WIDTH_MAP[LayoutType.PUB_CONTROL_TEXT] = 100, _LAYOUT_AD_WIDTH_MAP[LayoutType.PUB_CONTROL_TEXT_CARD] = 150, _LAYOUT_AD_WIDTH_MAP);\nvar PUB_CONTROL_LAYOUT_PREFIX = 'pub_control_';\nvar PUB_CONTROL_EXAMPLE = '\\n ' + 'data-matched-content-rows-num=\"4,2\"\\n' + 'data-matched-content-columns-num=\"1,6\"\\n' + 'data-matched-content-ui-type=\"image_stacked,image_card_sidebyside\"';\n/**\n * Configuration of content recommendation unit for current slot. This is the\n * result of running CoRe responsive logic and values from this config\n * will be used in ad request.\n * @record\n */\n\nvar CoReConfig = // eslint-disable-line no-unused-vars\n\n/** see comment on class */\nfunction CoReConfig() {\n  /** @const {number} */\n  this.slotWidth;\n  /** @const {number} */\n\n  this.slotHeight;\n  /**\n   * Number of rows to return in matched content unit. Corresponds to\n   * \"cr_col\" url param.\n   * @const {number}\n   */\n\n  this.numberOfRows;\n  /**\n   * Number of columns to return in matched content unit. Corresponds to\n   * \"cr_row\" url param.\n   * @const {number}\n   */\n\n  this.numberOfColumns;\n  /**\n   * Layout type to use for currect matched content slot. Corresponds to\n   * \"crui\" url param.\n   * @const {!LayoutType}\n   */\n\n  this.layoutType;\n  /**\n   * If not null then it contains an error that some of the provided\n   * parameters are incorrect. The error is intended to be displayed to\n   * developers who setup ad tag. For example it can displayed in console\n   * or thrown as js error. If validation is set other params should be\n   * ignored.\n   * @const {string|undefined}\n   */\n\n  this.validationError;\n};\n/**\n * @param {number} availableWidth\n * @param {boolean} isMobile\n * @return {!CoReConfig}\n */\n\n\nexports.CoReConfig = CoReConfig;\n\nfunction getAutoConfig(availableWidth, isMobile) {\n  if (availableWidth < MIN_PUB_CONTROL_WIDTH_OF_DESKTOP) {\n    if (isMobile) {\n      var layoutType = LayoutType.MOBILE_BANNER_IMAGE_SIDEBYSIDE;\n      var numColumns = 1;\n      var numRows = 12;\n      var slotSize = getLargerAdOneColumnSidebysideSize(availableWidth, layoutType, numColumns, numRows);\n      return {\n        slotWidth: slotSize.width,\n        slotHeight: slotSize.height,\n        numberOfColumns: numColumns,\n        numberOfRows: numRows,\n        layoutType: layoutType\n      };\n    } else {\n      var _slotSize = getAutoSlotSize(availableWidth);\n\n      return {\n        slotWidth: _slotSize.width,\n        slotHeight: _slotSize.height,\n        numberOfColumns: 1,\n        numberOfRows: 13,\n        layoutType: LayoutType.IMAGE_SIDEBYSIDE\n      };\n    }\n  } else {\n    var _slotSize2 = getAutoSlotSize(availableWidth);\n\n    return {\n      slotWidth: _slotSize2.width,\n      slotHeight: _slotSize2.height,\n      numberOfColumns: 4,\n      numberOfRows: 2,\n      layoutType: LayoutType.IMAGE_STACKED\n    };\n  }\n}\n/**\n * Parameters for matched content unit provided pub publisher. These\n * parameters are read from ad tag. These are unparsed parameters so they\n * might be invalid.\n *\n * @typedef {{\n *   numberOfRows: (string|undefined),\n *   numberOfColumns: (string|undefined),\n *   layoutType: (string|undefined),\n * }}\n */\n\n\nvar RawPublisherControlParams; // eslint-disable-line no-unused-vars\n\n/**\n * Get CoRe Pub Control UI Sizes.\n * @param {number} availableWidth\n * @param {!RawPublisherControlParams} rawPubControlParams\n * @return {!CoReConfig}\n */\n\nexports.RawPublisherControlParams = RawPublisherControlParams;\n\nfunction getPubControlConfig(availableWidth, rawPubControlParams) {\n  var pubParams = validateAndParsePubControlParams(rawPubControlParams);\n\n  if (pubParams.validationError) {\n    return {\n      slotWidth: 0,\n      slotHeight: 0,\n      numberOfColumns: 0,\n      numberOfRows: 0,\n      // set any layout, doesn't matter because it's error and it won't be used\n      // anyway\n      layoutType: LayoutType.IMAGE_STACKED,\n      validationError: pubParams.validationError\n    };\n  }\n\n  var index;\n\n  if (pubParams.layoutTypes.length === 2 && availableWidth >= MIN_PUB_CONTROL_WIDTH_OF_DESKTOP) {\n    // Publisher provided settings for both mobile and desktop and screen is\n    // wide - use desktop.\n    index = 1;\n  } else {\n    // Either publisher provided only one setting or screen is small so use\n    // first setting.\n    index = 0;\n  }\n\n  var layout = convertToPubControlLayoutType(pubParams.layoutTypes[index]);\n  var numColumns = getOptimizedNumColumns(availableWidth, pubParams.numberOfColumns[index], layout);\n  var numRows = pubParams.numberOfRows[index];\n  var slotSize = getPubControlSlotSize(availableWidth, numColumns, numRows, layout);\n\n  if (slotSize.sizeError) {\n    return {\n      slotWidth: 0,\n      slotHeight: 0,\n      numberOfColumns: 0,\n      numberOfRows: 0,\n      layoutType: layout,\n      validationError: slotSize.sizeError\n    };\n  }\n\n  return {\n    slotWidth: slotSize.width,\n    slotHeight: slotSize.height,\n    numberOfColumns: numColumns,\n    numberOfRows: numRows,\n    layoutType: layout\n  };\n}\n/**\n * Validates and parses parameters that publisher specified on the ad tag via\n * data-matched-content-foo attributes.\n * @param {!RawPublisherControlParams} params\n * @return {{\n *   numberOfRows: (!Array<number>|undefined),\n *   numberOfColumns: (!Array<number>|undefined),\n *   layoutTypes: (!Array<!LayoutType>|undefined),\n *   validationError: (string|undefined),\n * }} parsed params or null if they were invalid.\n */\n\n\nfunction validateAndParsePubControlParams(params) {\n  // Verify that either all three parameters passed or none.\n  var numberOfPubControlParams = 0;\n\n  if (params.layoutType) {\n    numberOfPubControlParams++;\n  }\n\n  if (params.numberOfColumns) {\n    numberOfPubControlParams++;\n  }\n\n  if (params.numberOfRows) {\n    numberOfPubControlParams++;\n  }\n\n  if (numberOfPubControlParams < 3) {\n    return {\n      validationError: \"Tags \" + ExternalCorePubVars.UI_TYPE + \", \" + ExternalCorePubVars.COLUMNS_NUM + \" and \" + ExternalCorePubVars.ROWS_NUM + \" should be set together.\"\n    };\n  }\n\n  var\n  /** !Array<!LayoutType> */\n  layoutTypes = params.layoutType.split(',');\n  var\n  /** !Array<string> */\n  numberOfRows = params.numberOfRows.split(',');\n  var\n  /** !Array<string> */\n  numberOfColumns = params.numberOfColumns.split(','); // Check all params have same length.\n\n  if (layoutTypes.length !== numberOfRows.length || layoutTypes.length !== numberOfColumns.length) {\n    return {\n      validationError: \"Lengths of parameters \" + ExternalCorePubVars.UI_TYPE + \", \" + ExternalCorePubVars.COLUMNS_NUM + \" and \" + ExternalCorePubVars.ROWS_NUM + \" must match. Example: \" + PUB_CONTROL_EXAMPLE\n    };\n  }\n\n  if (layoutTypes.length > 2) {\n    return {\n      validationError: \"The parameter length of attribute \" + ExternalCorePubVars.UI_TYPE + \", \" + ExternalCorePubVars.COLUMNS_NUM + \" and \" + ExternalCorePubVars.ROWS_NUM + \" is too long. At most 2 parameters for each \" + 'attribute are needed: one for mobile and one for desktop, while ' + (\"you are providing \" + layoutTypes.length + \" parameters. Example: \" + PUB_CONTROL_EXAMPLE + \".\")\n    };\n  }\n\n  var\n  /** !Array<number> */\n  numberOfRowsAsNumbers = [];\n  var\n  /** !Array<number> */\n  numberOfColumnsAsNumbers = [];\n\n  for (var i = 0; i < layoutTypes.length; i++) {\n    var row = Number(numberOfRows[i]);\n\n    if (isNaN(row) || row === 0) {\n      return {\n        validationError: \"Wrong value '\" + numberOfRows[i] + \"' for \" + ExternalCorePubVars.ROWS_NUM + \".\"\n      };\n    }\n\n    numberOfRowsAsNumbers.push(row);\n    var col = Number(numberOfColumns[i]);\n\n    if (isNaN(col) || col === 0) {\n      return {\n        validationError: \"Wrong value '\" + numberOfColumns[i] + \"' for \" + ExternalCorePubVars.COLUMNS_NUM + \".\"\n      };\n    }\n\n    numberOfColumnsAsNumbers.push(col);\n  }\n\n  return {\n    numberOfRows: numberOfRowsAsNumbers,\n    numberOfColumns: numberOfColumnsAsNumbers,\n    layoutTypes: layoutTypes\n  };\n}\n/**\n * @param {number} availableWidth\n * @return {{width: number, height: number}}\n */\n\n\nfunction getAutoSlotSize(availableWidth) {\n  if (availableWidth >= 1200) {\n    return {\n      width: 1200,\n      height: 600\n    };\n  } else if (availableWidth >= 850) {\n    return {\n      width: availableWidth,\n      height: Math.floor(availableWidth * 0.5)\n    };\n  } else if (availableWidth >= 550) {\n    return {\n      width: availableWidth,\n      height: Math.floor(availableWidth * 0.6)\n    };\n  } else if (availableWidth >= 468) {\n    return {\n      width: availableWidth,\n      height: Math.floor(availableWidth * 0.7)\n    };\n  } else {\n    return {\n      width: availableWidth,\n      height: Math.floor(availableWidth * 3.44)\n    };\n  }\n}\n/**\n * Calculate the ad height according to the layout and ad width.\n * @param {number} adWidth\n * @param {!LayoutType} layout\n * @return {number}\n */\n\n\nfunction getAdHeight(adWidth, layout) {\n  return adWidth * LAYOUT_ASPECT_RATIO_MAP[layout] + LAYOUT_TEXT_HEIGHT_MAP[layout];\n}\n/**\n * Calculate the core width according to the slot width and number\n * of columns.\n * @param {number} slotWidth\n * @param {number} numColumns\n * @return {number}\n */\n\n\nfunction getAdWidth(slotWidth, numColumns) {\n  return (slotWidth - PADDING * numColumns - PADDING) / numColumns;\n}\n/**\n * Calculate the core slot height according to the core height and\n * number of rows.\n * @param {number} adHeight\n * @param {number} numRows\n * @return {number}\n */\n\n\nfunction getSlotHeight(adHeight, numRows) {\n  return Math.floor(adHeight * numRows + PADDING * numRows + PADDING);\n}\n/**\n * Calculate the slot size for Pub Control UI.\n * @param {number} slotWidth\n * @param {number} numColumns\n * @param {number} numRows\n * @param {!LayoutType} layout\n * @return {{\n *   width: number,\n *   height: number,\n *   sizeError: (string|undefined),\n * }}\n */\n\n\nfunction getPubControlSlotSize(slotWidth, numColumns, numRows, layout) {\n  var adWidth = getAdWidth(slotWidth, numColumns);\n  var adHeight = getAdHeight(adWidth, layout);\n  var slotHeight = getSlotHeight(adHeight, numRows);\n\n  if (slotWidth > MAX_PUB_CONTROL_DIMENSION) {\n    return {\n      width: 0,\n      height: 0,\n      sizeError: 'Calculated slot width is too large: ' + slotWidth\n    };\n  }\n\n  if (slotHeight > MAX_PUB_CONTROL_DIMENSION) {\n    return {\n      width: 0,\n      height: 0,\n      sizeError: 'Calculated slot height is too large: ' + slotHeight\n    };\n  }\n\n  return {\n    width: slotWidth,\n    height: slotHeight\n  };\n}\n/**\n * @param {number} availableWidth\n * @param {!LayoutType} layoutType\n * @param {number} numColumns\n * @param {number} numRows\n * @return {{width: number, height: number}}\n */\n\n\nfunction getLargerAdOneColumnSidebysideSize(availableWidth, layoutType, numColumns, numRows) {\n  var adWidth = getAdWidth(availableWidth, numColumns); // The title height of first ad slot 70px, should be consistent with what we\n  // define in rendering js.\n\n  var firstAdHeight = Math.floor(adWidth / 1.91 + 70);\n  var restAdHeight = getAdHeight(adWidth, layoutType);\n  var slotHeight = firstAdHeight + getSlotHeight(restAdHeight, numRows - 1);\n  return {\n    width: availableWidth,\n    height: slotHeight\n  };\n}\n/**\n * Adds 'pub_control_' prefix to Pub Control UI layout name if the layout name\n * does not have 'pub_control_' prefix. This is to differentiate Pub Control UI\n * from responsive auto UI.\n * @param {!LayoutType} layout\n * @return {!LayoutType} the new layout name with 'pub_control_' prefix.\n */\n\n\nfunction convertToPubControlLayoutType(layout) {\n  return layout.indexOf(PUB_CONTROL_LAYOUT_PREFIX) === 0 ? layout :\n  /** @type {!LayoutType} */\n  PUB_CONTROL_LAYOUT_PREFIX + layout;\n}\n/**\n * Gets optimized number of columns. If the publisher specified value of\n * 'data-matched-content-columns-num' is too large, it may result in a very\n * small ad width and broken layout. We will adjust the column number to ensure\n * that ad width is larger than certain threshold and print out some warning\n * message to the console.\n * @param {number} availableWidth\n * @param {number} numColumns\n * @param {!LayoutType} layout\n * @return {number} optimized number of columns\n */\n\n\nfunction getOptimizedNumColumns(availableWidth, numColumns, layout) {\n  var minWidth = LAYOUT_AD_WIDTH_MAP[layout];\n  var optimizedNumColumns = numColumns;\n\n  while (availableWidth / optimizedNumColumns < minWidth && optimizedNumColumns > 1) {\n    optimizedNumColumns--;\n  }\n\n  return optimizedNumColumns;\n}\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.buildUrl = buildUrl;\nexports.QueryParameterDef = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {{name: string, value: (string|number|null)}} */\nvar QueryParameterDef;\n/**\n * Builds a URL from query parameters, truncating to a maximum length if\n * necessary.\n * @param {string} baseUrl scheme, domain, and path for the URL.\n * @param {!Object<string,string|number|null>} queryParams query parameters for\n *     the URL.\n * @param {number} maxLength length to truncate the URL to if necessary.\n * @param {?QueryParameterDef=} opt_truncationQueryParam query parameter to\n *     append to the URL iff any query parameters were truncated.\n * @return {string} the fully constructed URL.\n */\n\nexports.QueryParameterDef = QueryParameterDef;\n\nfunction buildUrl(baseUrl, queryParams, maxLength, opt_truncationQueryParam) {\n  var encodedParams = [];\n  var encodedTruncationParam = opt_truncationQueryParam && !(opt_truncationQueryParam.value == null || opt_truncationQueryParam.value === '') ? encodeURIComponent(opt_truncationQueryParam.name) + '=' + encodeURIComponent(String(opt_truncationQueryParam.value)) : null;\n  var capacity = maxLength - baseUrl.length;\n\n  if (encodedTruncationParam) {\n    capacity -= encodedTruncationParam.length + 1;\n  }\n\n  var keys = Object.keys(queryParams);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = queryParams[key];\n\n    if (value == null || value === '') {\n      continue;\n    }\n\n    var encodedNameAndSep = encodeURIComponent(key) + '=';\n    var encodedValue = encodeURIComponent(String(value));\n    var fullLength = encodedNameAndSep.length + encodedValue.length + 1;\n\n    if (fullLength > capacity) {\n      var truncatedValue = encodedValue.substr(0, capacity - encodedNameAndSep.length - 1) // Don't end with a partially truncated escape sequence\n      .replace(/%\\w?$/, '');\n\n      if (truncatedValue) {\n        encodedParams.push(encodedNameAndSep + truncatedValue);\n      }\n\n      if (encodedTruncationParam) {\n        encodedParams.push(encodedTruncationParam);\n      }\n\n      break;\n    }\n\n    encodedParams.push(encodedNameAndSep + encodedValue);\n    capacity -= fullLength;\n  }\n\n  if (!encodedParams.length) {\n    return baseUrl;\n  }\n\n  return baseUrl + '?' + encodedParams.join('&');\n}\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isGoogleAdsA4AValidEnvironment = isGoogleAdsA4AValidEnvironment;\nexports.supportsNativeCrypto = supportsNativeCrypto;\nexports.isReportingEnabled = isReportingEnabled;\nexports.googleBlockParameters = googleBlockParameters;\nexports.groupAmpAdsByType = groupAmpAdsByType;\nexports.googlePageParameters = googlePageParameters;\nexports.googleAdUrl = googleAdUrl;\nexports.truncAndTimeUrl = truncAndTimeUrl;\nexports.extractHost = extractHost;\nexports.getCorrelator = getCorrelator;\nexports.additionalDimensions = additionalDimensions;\nexports.getCsiAmpAnalyticsConfig = getCsiAmpAnalyticsConfig;\nexports.getCsiAmpAnalyticsVariables = getCsiAmpAnalyticsVariables;\nexports.extractAmpAnalyticsConfig = extractAmpAnalyticsConfig;\nexports.mergeExperimentIds = mergeExperimentIds;\nexports.addCsiSignalsToAmpAnalyticsConfig = addCsiSignalsToAmpAnalyticsConfig;\nexports.getEnclosingContainerTypes = getEnclosingContainerTypes;\nexports.maybeAppendErrorParameter = maybeAppendErrorParameter;\nexports.getBinaryTypeNumericalCode = getBinaryTypeNumericalCode;\nexports.getIdentityToken = getIdentityToken;\nexports.getIdentityTokenRequestUrl = getIdentityTokenRequestUrl;\nexports.isCdnProxy = isCdnProxy;\nexports.setNameframeExperimentConfigs = setNameframeExperimentConfigs;\nexports.getAmpRuntimeTypeParameter = getAmpRuntimeTypeParameter;\nexports.IdentityToken = exports.TRUNCATION_PARAM = exports.NameframeExperimentConfig = exports.AmpAnalyticsConfigDef = exports.EXPERIMENT_ATTRIBUTE = exports.SANDBOX_HEADER = exports.QQID_HEADER = exports.ValidAdContainerTypes = void 0;\n\nvar _consentState = require(\"../../../src/consent-state\");\n\nvar _domFingerprint = require(\"../../../src/utils/dom-fingerprint\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _urlBuilder = require(\"./shared/url-builder\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _experiments = require(\"../../../src/experiments\");\n\nvar _consent = require(\"../../../src/consent\");\n\nvar _iniLoad = require(\"../../../src/ini-load\");\n\nvar _mode = require(\"../../../src/mode\");\n\nvar _adCid = require(\"../../../src/ad-cid\");\n\nvar _variableSource = require(\"../../../src/service/variable-source\");\n\nvar _internalVersion = require(\"../../../src/internal-version\");\n\nvar _json = require(\"../../../src/json\");\n\nvar _dom = require(\"../../../src/dom\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @type {string}  */\nvar AMP_ANALYTICS_HEADER = 'X-AmpAnalytics';\n/** @const {number} */\n\nvar MAX_URL_LENGTH = 15360;\n/** @enum {string} */\n\nvar AmpAdImplementation = {\n  AMP_AD_XHR_TO_IFRAME: '2',\n  AMP_AD_XHR_TO_IFRAME_OR_AMP: '3',\n  AMP_AD_IFRAME_GET: '5'\n};\n/** @const {!Object} */\n\nvar ValidAdContainerTypes = {\n  'AMP-CAROUSEL': 'ac',\n  'AMP-FX-FLYING-CARPET': 'fc',\n  'AMP-LIGHTBOX': 'lb',\n  'AMP-STICKY-AD': 'sa'\n};\n/**\n * See `VisibilityState` enum.\n * @const {!Object<string, string>}\n */\n\nexports.ValidAdContainerTypes = ValidAdContainerTypes;\nvar visibilityStateCodes = {\n  'visible': '1',\n  'hidden': '2',\n  'prerender': '3',\n  'unloaded': '5'\n};\n/** @const {string} */\n\nvar QQID_HEADER = 'X-QQID';\n/** @type {string} */\n\nexports.QQID_HEADER = QQID_HEADER;\nvar SANDBOX_HEADER = 'amp-ff-sandbox';\n/**\n * Element attribute that stores experiment IDs.\n *\n * Note: This attribute should be used only for tracking experimental\n * implementations of AMP tags, e.g., by AMPHTML implementors.  It should not be\n * added by a publisher page.\n *\n * @const {string}\n * @visibleForTesting\n */\n\nexports.SANDBOX_HEADER = SANDBOX_HEADER;\nvar EXPERIMENT_ATTRIBUTE = 'data-experiment-id';\n/** @typedef {{urls: !Array<string>}}\n */\n\nexports.EXPERIMENT_ATTRIBUTE = EXPERIMENT_ATTRIBUTE;\nvar AmpAnalyticsConfigDef;\n/**\n * @typedef {{instantLoad: boolean, writeInBody: boolean}}\n */\n\nexports.AmpAnalyticsConfigDef = AmpAnalyticsConfigDef;\nvar NameframeExperimentConfig;\n/**\n * @const {!./shared/url-builder.QueryParameterDef}\n * @visibleForTesting\n */\n\nexports.NameframeExperimentConfig = NameframeExperimentConfig;\nvar TRUNCATION_PARAM = {\n  name: 'trunc',\n  value: '1'\n};\n/** @const {Object} */\n\nexports.TRUNCATION_PARAM = TRUNCATION_PARAM;\nvar CDN_PROXY_REGEXP = /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org((\\/.*)|($))+/;\n/**\n * Returns the value of some navigation timing parameter.\n * Feature detection is used for safety on browsers that do not support the\n * performance API.\n * @param {!Window} win\n * @param {string} timingEvent The name of the timing event, e.g.\n *     'navigationStart' or 'domContentLoadEventStart'.\n * @return {number}\n */\n\nfunction getNavigationTiming(win, timingEvent) {\n  return win['performance'] && win['performance']['timing'] && win['performance']['timing'][timingEvent] || 0;\n}\n/**\n * Check whether Google Ads supports the A4A rendering pathway is valid for the\n * environment by ensuring native crypto support and page originated in the\n * {@code cdn.ampproject.org} CDN <em>or</em> we must be running in local\n * dev mode.\n *\n * @param {!Window} win  Host window for the ad.\n * @return {boolean}  Whether Google Ads should attempt to render via the A4A\n *   pathway.\n */\n\n\nfunction isGoogleAdsA4AValidEnvironment(win) {\n  return supportsNativeCrypto(win) && (!!isCdnProxy(win) || (0, _mode.getMode)(win).localDev || (0, _mode.getMode)(win).test);\n}\n/**\n * Checks whether native crypto is supported for win.\n * @param {!Window} win  Host window for the ad.\n * @return {boolean} Whether native crypto is supported.\n */\n\n\nfunction supportsNativeCrypto(win) {\n  return win.crypto && (win.crypto.subtle || win.crypto.webkitSubtle);\n}\n/**\n * @param {!AMP.BaseElement} ampElement The element on whose lifecycle this\n *    reporter will be reporting.\n * @return {boolean} whether reporting is enabled for this element\n */\n\n\nfunction isReportingEnabled(ampElement) {\n  // Carve-outs: We only want to enable profiling pingbacks when:\n  //   - The ad is from one of the Google networks (AdSense or Doubleclick).\n  //   - The ad slot is in the A4A-vs-3p amp-ad control branch (either via\n  //     internal, client-side selection or via external, Google Search\n  //     selection).\n  //   - We haven't turned off profiling via the rate controls in\n  //     build-system/global-config/{canary,prod}-config.json\n  // If any of those fail, we use the `BaseLifecycleReporter`, which is a\n  // a no-op (sends no pings).\n  var type = ampElement.element.getAttribute('type');\n  var win = ampElement.win; // In local dev mode, neither the canary nor prod config files is available,\n  // so manually set the profiling rate, for testing/dev.\n\n  if ((0, _mode.getMode)(ampElement.win).localDev && !(0, _mode.getMode)(ampElement.win).test) {\n    (0, _experiments.toggleExperiment)(win, 'a4aProfilingRate', true, true);\n  }\n\n  return (type == 'doubleclick' || type == 'adsense') && (0, _experiments.isExperimentOn)(win, 'a4aProfilingRate');\n}\n/**\n * Has side-effect of incrementing ifi counter on window.\n * @param {!../../../extensions/amp-a4a/0.1/amp-a4a.AmpA4A} a4a\n * @param {!Array<string>=} opt_experimentIds Any experiments IDs (in addition\n *     to those specified on the ad element) that should be included in the\n *     request.\n * @return {!Object<string,null|number|string>} block level parameters\n */\n\n\nfunction googleBlockParameters(a4a, opt_experimentIds) {\n  var adElement = a4a.element,\n      win = a4a.win;\n  var slotRect = a4a.getPageLayoutBox();\n  var iframeDepth = iframeNestingDepth(win);\n  var enclosingContainers = getEnclosingContainerTypes(adElement);\n  var eids = adElement.getAttribute('data-experiment-id');\n\n  if (opt_experimentIds) {\n    eids = mergeExperimentIds(opt_experimentIds, eids);\n  }\n\n  return {\n    'adf': _domFingerprint.DomFingerprint.generate(adElement),\n    'nhd': iframeDepth,\n    'eid': eids,\n    'adx': slotRect.left,\n    'ady': slotRect.top,\n    'oid': '2',\n    'act': enclosingContainers.length ? enclosingContainers.join() : null\n  };\n}\n/**\n * @param {!Window} win\n * @param {string} type matching typing attribute.\n * @param {function(!Element):string} groupFn\n * @return {!Promise<!Object<string,!Array<!Promise<!../../../src/base-element.BaseElement>>>>}\n */\n\n\nfunction groupAmpAdsByType(win, type, groupFn) {\n  // Look for amp-ad elements of correct type or those contained within\n  // standard container type.  Note that display none containers will not be\n  // included as they will never be measured.\n  // TODO(keithwrightbos): what about slots that become measured due to removal\n  // of display none (e.g. user resizes viewport and media selector makes\n  // visible).\n  var ampAdSelector = function ampAdSelector(r) {\n    return r.element.\n    /*OK*/\n    querySelector(\"amp-ad[type=\" + type + \"]\");\n  };\n\n  var documentElement = win.document.documentElement;\n\n  var ampdoc = _services.Services.ampdoc(documentElement);\n\n  return (0, _iniLoad.getMeasuredResources)(ampdoc, win, function (r) {\n    var isAmpAdType = r.element.tagName == 'AMP-AD' && r.element.getAttribute('type') == type;\n\n    if (isAmpAdType) {\n      return true;\n    }\n\n    var isAmpAdContainerElement = Object.keys(ValidAdContainerTypes).includes(r.element.tagName) && !!ampAdSelector(r);\n    return isAmpAdContainerElement;\n  }) // Need to wait on any contained element resolution followed by build\n  // of child ad.\n  .then(function (resources) {\n    return Promise.all(resources.map(function (resource) {\n      if (resource.element.tagName == 'AMP-AD') {\n        return resource.element;\n      } // Must be container element so need to wait for child amp-ad to\n      // be upgraded.\n\n\n      return (0, _dom.whenUpgradedToCustomElement)((0, _log.dev)().assertElement(ampAdSelector(resource)));\n    }));\n  }) // Group by networkId.\n  .then(function (elements) {\n    return elements.reduce(function (result, element) {\n      var groupId = groupFn(element);\n      (result[groupId] || (result[groupId] = [])).push(element.getImpl());\n      return result;\n    }, {});\n  });\n}\n/**\n * @param {! ../../../extensions/amp-a4a/0.1/amp-a4a.AmpA4A} a4a\n * @param {number} startTime\n * @return {!Promise<!Object<string,null|number|string>>}\n */\n\n\nfunction googlePageParameters(a4a, startTime) {\n  var win = a4a.win;\n  var ampDoc = a4a.getAmpDoc(); // Do not wait longer than 1 second to retrieve referrer to ensure\n  // viewer integration issues do not cause ad requests to hang indefinitely.\n\n  var referrerPromise = _services.Services.timerFor(win).timeoutPromise(1000, _services.Services.viewerForDoc(ampDoc).getReferrerUrl()).catch(function () {\n    (0, _log.dev)().expectedError('AMP-A4A', 'Referrer timeout!');\n    return '';\n  });\n\n  var domLoading = getNavigationTiming(win, 'domLoading');\n  return Promise.all([(0, _adCid.getOrCreateAdCid)(ampDoc, 'AMP_ECID_GOOGLE', '_ga'), referrerPromise]).then(function (promiseResults) {\n    var clientId = promiseResults[0];\n    var referrer = promiseResults[1];\n\n    var _Services$documentInf = _services.Services.documentInfoForDoc(ampDoc),\n        pageViewId = _Services$documentInf.pageViewId,\n        canonicalUrl = _Services$documentInf.canonicalUrl; // Read by GPT for GA/GPT integration.\n\n\n    win.gaGlobal = win.gaGlobal || {\n      cid: clientId,\n      hid: pageViewId\n    };\n    var screen = win.screen;\n\n    var viewport = _services.Services.viewportForDoc(ampDoc);\n\n    var viewportRect = viewport.getRect();\n    var viewportSize = viewport.getSize();\n    var visibilityState = ampDoc.getVisibilityState();\n    return {\n      'is_amp': a4a.isXhrAllowed() ? AmpAdImplementation.AMP_AD_XHR_TO_IFRAME_OR_AMP : AmpAdImplementation.AMP_AD_IFRAME_GET,\n      'amp_v': (0, _internalVersion.internalRuntimeVersion)(),\n      'd_imp': '1',\n      'c': getCorrelator(win, ampDoc, clientId),\n      'ga_cid': win.gaGlobal.cid || null,\n      'ga_hid': win.gaGlobal.hid || null,\n      'dt': startTime,\n      'biw': viewportRect.width,\n      'bih': viewportRect.height,\n      'u_aw': screen ? screen.availWidth : null,\n      'u_ah': screen ? screen.availHeight : null,\n      'u_cd': screen ? screen.colorDepth : null,\n      'u_w': screen ? screen.width : null,\n      'u_h': screen ? screen.height : null,\n      'u_tz': -new Date().getTimezoneOffset(),\n      'u_his': getHistoryLength(win),\n      'isw': win != win.top ? viewportSize.width : null,\n      'ish': win != win.top ? viewportSize.height : null,\n      'art': getAmpRuntimeTypeParameter(win),\n      'vis': visibilityStateCodes[visibilityState] || '0',\n      'scr_x': viewport.getScrollLeft(),\n      'scr_y': viewport.getScrollTop(),\n      'bc': getBrowserCapabilitiesBitmap(win) || null,\n      'debug_experiment_id': (/(?:#|,)deid=([\\d,]+)/i.exec(win.location.hash) || [])[1] || null,\n      'url': canonicalUrl || null,\n      'top': win != win.top ? topWindowUrlOrDomain(win) : null,\n      'loc': win.location.href == canonicalUrl ? null : win.location.href,\n      'ref': referrer || null,\n      'bdt': domLoading ? startTime - domLoading : null\n    };\n  });\n}\n/**\n * @param {!../../../extensions/amp-a4a/0.1/amp-a4a.AmpA4A} a4a\n * @param {string} baseUrl\n * @param {number} startTime\n * @param {!Object<string,null|number|string>} parameters\n * @param {!Array<string>=} opt_experimentIds Any experiments IDs (in addition\n *     to those specified on the ad element) that should be included in the\n *     request.\n * @return {!Promise<string>}\n */\n\n\nfunction googleAdUrl(a4a, baseUrl, startTime, parameters, opt_experimentIds) {\n  // TODO: Maybe add checks in case these promises fail.\n  var blockLevelParameters = googleBlockParameters(a4a, opt_experimentIds);\n  return googlePageParameters(a4a, startTime).then(function (pageLevelParameters) {\n    Object.assign(parameters, blockLevelParameters, pageLevelParameters);\n    return truncAndTimeUrl(baseUrl, parameters, startTime);\n  });\n}\n/**\n * @param {string} baseUrl\n * @param {!Object<string,null|number|string>} parameters\n * @param {number} startTime\n * @return {string}\n */\n\n\nfunction truncAndTimeUrl(baseUrl, parameters, startTime) {\n  return (0, _urlBuilder.buildUrl)(baseUrl, parameters, MAX_URL_LENGTH - 10, TRUNCATION_PARAM) + '&dtd=' + elapsedTimeWithCeiling(Date.now(), startTime);\n}\n/**\n * @param {!Window} win\n * @return {number}\n */\n\n\nfunction iframeNestingDepth(win) {\n  var w = win;\n  var depth = 0;\n\n  while (w != w.parent && depth < 100) {\n    w = w.parent;\n    depth++;\n  }\n\n  (0, _log.devAssert)(w == win.top);\n  return depth;\n}\n/**\n * @param {!Window} win\n * @return {number}\n */\n\n\nfunction getHistoryLength(win) {\n  // We have seen cases where accessing history length causes errors.\n  try {\n    return win.history.length;\n  } catch (e) {\n    return 0;\n  }\n}\n/**\n * @param {string} url\n * @return {string} hostname portion of url\n * @visibleForTesting\n */\n\n\nfunction extractHost(url) {\n  return (/^(?:https?:\\/\\/)?([^\\/\\?:]+)/i.exec(url) || [])[1] || url;\n}\n/**\n * @param {!Window} win\n * @return {?string}\n */\n\n\nfunction topWindowUrlOrDomain(win) {\n  var ancestorOrigins = win.location.ancestorOrigins;\n\n  if (ancestorOrigins) {\n    var origin = win.location.origin;\n    var topOrigin = ancestorOrigins[ancestorOrigins.length - 1];\n\n    if (origin == topOrigin) {\n      return win.top.location.hostname;\n    }\n\n    var secondFromTop = secondWindowFromTop(win);\n\n    if (secondFromTop == win || origin == ancestorOrigins[ancestorOrigins.length - 2]) {\n      return extractHost(secondFromTop.\n      /*OK*/\n      document.referrer);\n    }\n\n    return extractHost(topOrigin);\n  } else {\n    try {\n      return win.top.location.hostname;\n    } catch (e) {}\n\n    var _secondFromTop = secondWindowFromTop(win);\n\n    try {\n      return extractHost(_secondFromTop.\n      /*OK*/\n      document.referrer);\n    } catch (e) {}\n\n    return null;\n  }\n}\n/**\n * @param {!Window} win\n * @return {!Window}\n */\n\n\nfunction secondWindowFromTop(win) {\n  var secondFromTop = win;\n  var depth = 0;\n\n  while (secondFromTop.parent != secondFromTop.parent.parent && depth < 100) {\n    secondFromTop = secondFromTop.parent;\n    depth++;\n  }\n\n  (0, _log.devAssert)(secondFromTop.parent == win.top);\n  return secondFromTop;\n}\n/**\n * @param {number} time\n * @param {number} start\n * @return {(number|string)}\n */\n\n\nfunction elapsedTimeWithCeiling(time, start) {\n  var duration = time - start;\n\n  if (duration >= 1e6) {\n    return 'M';\n  } else if (duration >= 0) {\n    return duration;\n  }\n\n  return '-M';\n}\n/**\n * `nodeOrDoc` must be passed for correct behavior in shadow AMP (PWA) case.\n * @param {!Window} win\n * @param {!Element|!../../../src/service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string=} opt_cid\n * @return {number} The correlator.\n */\n\n\nfunction getCorrelator(win, elementOrAmpDoc, opt_cid) {\n  if (!win.ampAdPageCorrelator) {\n    win.ampAdPageCorrelator = (0, _experiments.isExperimentOn)(win, 'exp-new-correlator') ? Math.floor(4503599627370496 * Math.random()) : makeCorrelator(_services.Services.documentInfoForDoc(elementOrAmpDoc).pageViewId, opt_cid);\n  }\n\n  return win.ampAdPageCorrelator;\n}\n/**\n * @param {string} pageViewId\n * @param {string=} opt_clientId\n * @return {number}\n */\n\n\nfunction makeCorrelator(pageViewId, opt_clientId) {\n  var pageViewIdNumeric = Number(pageViewId || 0);\n\n  if (opt_clientId) {\n    return pageViewIdNumeric + opt_clientId.replace(/\\D/g, '') % 1e6 * 1e6;\n  } else {\n    // In this case, pageViewIdNumeric is only 4 digits => too low entropy\n    // to be useful as a page correlator.  So synthesize one from scratch.\n    // 4503599627370496 == 2^52.  The guaranteed range of JS Number is at least\n    // 2^53 - 1.\n    return Math.floor(4503599627370496 * Math.random());\n  }\n}\n/**\n * Collect additional dimensions for the brdim parameter.\n * @param {!Window} win The window for which we read the browser dimensions.\n * @param {{width: number, height: number}|null} viewportSize\n * @return {string}\n * @visibleForTesting\n */\n\n\nfunction additionalDimensions(win, viewportSize) {\n  // Some browsers throw errors on some of these.\n  var screenX, screenY, outerWidth, outerHeight, innerWidth, innerHeight;\n\n  try {\n    screenX = win.screenX;\n    screenY = win.screenY;\n  } catch (e) {}\n\n  try {\n    outerWidth = win.outerWidth;\n    outerHeight = win.outerHeight;\n  } catch (e) {}\n\n  try {\n    innerWidth = viewportSize.width;\n    innerHeight = viewportSize.height;\n  } catch (e) {}\n\n  return [win.screenLeft, win.screenTop, screenX, screenY, win.screen ? win.screen.availWidth : undefined, win.screen ? win.screen.availTop : undefined, outerWidth, outerHeight, innerWidth, innerHeight].join();\n}\n/**\n * Returns amp-analytics config for a new CSI trigger.\n * @param {string} on The name of the analytics trigger.\n * @param {!Object<string, string>} params Params to be included on the ping.\n * @return {!JsonObject}\n */\n\n\nfunction csiTrigger(on, params) {\n  return (0, _object.dict)({\n    'on': on,\n    'request': 'csi',\n    'sampleSpec': {\n      // Pings are sampled on a per-pageview basis. A prefix is included in the\n      // sampleOn spec so that the hash is orthogonal to any other sampling in\n      // amp.\n      'sampleOn': 'a4a-csi-${pageViewId}',\n      'threshold': 1 // 1% sample\n\n    },\n    'selector': 'amp-ad',\n    'selectionMethod': 'closest',\n    'extraUrlParams': params\n  });\n}\n/**\n * Returns amp-analytics config for Google ads network impls.\n * @return {!JsonObject}\n */\n\n\nfunction getCsiAmpAnalyticsConfig() {\n  return (0, _object.dict)({\n    'requests': {\n      'csi': 'https://csi.gstatic.com/csi?'\n    },\n    'transport': {\n      'xhrpost': false\n    },\n    'triggers': {\n      'adRequestStart': csiTrigger('ad-request-start', {\n        // afs => ad fetch start\n        'met.a4a': 'afs_lvt.${viewerLastVisibleTime}~afs.${time}'\n      }),\n      'adResponseEnd': csiTrigger('ad-response-end', {\n        // afe => ad fetch end\n        'met.a4a': 'afe.${time}'\n      }),\n      'adRenderStart': csiTrigger('ad-render-start', {\n        // ast => ad schedule time\n        // ars => ad render start\n        'met.a4a': 'ast.${scheduleTime}~ars_lvt.${viewerLastVisibleTime}~ars.${time}',\n        'qqid': '${qqid}'\n      }),\n      'adIframeLoaded': csiTrigger('ad-iframe-loaded', {\n        // ail => ad iframe loaded\n        'met.a4a': 'ail.${time}'\n      })\n    },\n    'extraUrlParams': {\n      's': 'ampad',\n      'ctx': '2',\n      'c': '${correlator}',\n      'slotId': '${slotId}',\n      // Time that the beacon was actually sent. Note that there can be delays\n      // between the time at which the event is fired and when ${nowMs} is\n      // evaluated when the URL is built by amp-analytics.\n      'puid': '${requestCount}~${timestamp}'\n    }\n  });\n}\n/**\n * Returns variables to be included in the amp-analytics event for A4A.\n * @param {string} analyticsTrigger The name of the analytics trigger.\n * @param {!AMP.BaseElement} a4a The A4A element.\n * @param {?string} qqid The query ID or null if the query ID has not been set\n *     yet.\n * @return {!JsonObject}\n */\n\n\nfunction getCsiAmpAnalyticsVariables(analyticsTrigger, a4a, qqid) {\n  var win = a4a.win;\n  var ampdoc = a4a.getAmpDoc();\n  var navStart = getNavigationTiming(win, 'navigationStart');\n  var vars =\n  /** @type {!JsonObject} */\n  {\n    'correlator': getCorrelator(win, ampdoc),\n    'slotId': a4a.element.getAttribute('data-amp-slot-index'),\n    'viewerLastVisibleTime': ampdoc.getLastVisibleTime() - navStart\n  };\n\n  if (qqid) {\n    vars['qqid'] = qqid;\n  }\n\n  if (analyticsTrigger == 'ad-render-start') {\n    vars['scheduleTime'] = a4a.element.layoutScheduleTime - navStart;\n  }\n\n  return vars;\n}\n/**\n * Extracts configuration used to build amp-analytics element for active view.\n *\n * @param {!../../../extensions/amp-a4a/0.1/amp-a4a.AmpA4A} a4a\n * @param {!Headers} responseHeaders\n *   XHR service FetchResponseHeaders object containing the response\n *   headers.\n * @return {?JsonObject} config or null if invalid/missing.\n */\n\n\nfunction extractAmpAnalyticsConfig(a4a, responseHeaders) {\n  if (!responseHeaders.has(AMP_ANALYTICS_HEADER)) {\n    return null;\n  }\n\n  try {\n    var analyticsConfig = (0, _json.parseJson)(responseHeaders.get(AMP_ANALYTICS_HEADER));\n    (0, _log.devAssert)(Array.isArray(analyticsConfig['url']));\n    var urls = analyticsConfig['url'];\n\n    if (!urls.length) {\n      return null;\n    }\n\n    var config =\n    /** @type {JsonObject}*/\n    {\n      'transport': {\n        'beacon': false,\n        'xhrpost': false\n      },\n      'triggers': {\n        'continuousVisible': {\n          'on': 'visible',\n          'visibilitySpec': {\n            'selector': 'amp-ad',\n            'selectionMethod': 'closest',\n            'visiblePercentageMin': 50,\n            'continuousTimeMin': 1000\n          }\n        }\n      }\n    }; // Discover and build visibility endpoints.\n\n    var requests = (0, _object.dict)();\n\n    for (var idx = 1; idx <= urls.length; idx++) {\n      // TODO: Ensure url is valid and not freeform JS?\n      requests[\"visibility\" + idx] = \"\" + urls[idx - 1];\n    } // Security review needed here.\n\n\n    config['requests'] = requests;\n    config['triggers']['continuousVisible']['request'] = Object.keys(requests);\n    return config;\n  } catch (err) {\n    (0, _log.dev)().error('AMP-A4A', 'Invalid analytics', err, responseHeaders.get(AMP_ANALYTICS_HEADER));\n  }\n\n  return null;\n}\n/**\n * Add new experiment IDs to a (possibly empty) existing set of experiment IDs.\n * The {@code currentIdString} may be {@code null} or {@code ''}, but if it is\n * populated, it must contain a comma-separated list of integer experiment IDs\n * (per {@code parseExperimentIds()}).  Returns the new set of IDs, encoded\n * as a comma-separated list.  Does not de-duplicate ID entries.\n *\n * @param {!Array<string>} newIds IDs to merge in. Should contain stringified\n *     integer (base 10) experiment IDs.\n * @param {?string} currentIdString  If present, a string containing a\n *   comma-separated list of integer experiment IDs.\n * @return {string}  New experiment list string, including newId iff it is\n *   a valid (integer) experiment ID.\n * @see parseExperimentIds, validateExperimentIds\n */\n\n\nfunction mergeExperimentIds(newIds, currentIdString) {\n  var newIdString = newIds.filter(function (newId) {\n    return Number(newId);\n  }).join(',');\n  currentIdString = currentIdString || '';\n  return currentIdString + (currentIdString && newIdString ? ',' : '') + newIdString;\n}\n/**\n * Adds two CSI signals to the given amp-analytics configuration object, one\n * for render-start, and one for ini-load.\n *\n * @param {!Window} win\n * @param {!Element} element The ad slot.\n * @param {!JsonObject} config The original config object.\n * @param {?string} qqid\n * @param {boolean} isVerifiedAmpCreative\n * @return {?JsonObject} config or null if invalid/missing.\n */\n\n\nfunction addCsiSignalsToAmpAnalyticsConfig(win, element, config, qqid, isVerifiedAmpCreative) {\n  // Add CSI pingbacks.\n  var correlator = getCorrelator(win, element);\n  var slotId = Number(element.getAttribute('data-amp-slot-index'));\n  var eids = encodeURIComponent(element.getAttribute(EXPERIMENT_ATTRIBUTE));\n  var adType = element.getAttribute('type');\n  var initTime = Number((0, _variableSource.getTimingDataSync)(win, 'navigationStart') || Date.now());\n  var deltaTime = Math.round(win.performance && win.performance.now ? win.performance.now() : Date.now() - initTime);\n  var baseCsiUrl = 'https://csi.gstatic.com/csi?s=a4a' + (\"&c=\" + correlator + \"&slotId=\" + slotId + \"&qqid.\" + slotId + \"=\" + qqid) + (\"&dt=\" + initTime) + (eids != 'null' ? \"&e.\" + slotId + \"=\" + eids : '') + (\"&rls=\" + (0, _internalVersion.internalRuntimeVersion)() + \"&adt.\" + slotId + \"=\" + adType);\n  var isAmpSuffix = isVerifiedAmpCreative ? 'Friendly' : 'CrossDomain';\n  config['triggers']['continuousVisibleIniLoad'] = {\n    'on': 'ini-load',\n    'selector': 'amp-ad',\n    'selectionMethod': 'closest',\n    'request': 'iniLoadCsi'\n  };\n  config['triggers']['continuousVisibleRenderStart'] = {\n    'on': 'render-start',\n    'selector': 'amp-ad',\n    'selectionMethod': 'closest',\n    'request': 'renderStartCsi'\n  };\n  config['requests']['iniLoadCsi'] = baseCsiUrl + (\"&met.a4a.\" + slotId + \"=iniLoadCsi\" + isAmpSuffix + \".\" + deltaTime);\n  config['requests']['renderStartCsi'] = baseCsiUrl + (\"&met.a4a.\" + slotId + \"=renderStartCsi\" + isAmpSuffix + \".\" + deltaTime); // Add CSI ping for visibility.\n\n  config['requests']['visibilityCsi'] = baseCsiUrl + (\"&met.a4a.\" + slotId + \"=visibilityCsi.\" + deltaTime);\n  config['triggers']['continuousVisible']['request'].push('visibilityCsi');\n  return config;\n}\n/**\n * Returns an array of two-letter codes representing the amp-ad containers\n * enclosing the given ad element.\n *\n * @param {!Element} adElement\n * @return {!Array<string>}\n */\n\n\nfunction getEnclosingContainerTypes(adElement) {\n  var containerTypeSet = {};\n\n  for (var el = adElement.parentElement, counter = 0; el && counter < 20; el = el.parentElement, counter++) {\n    var tagName = el.tagName.toUpperCase();\n\n    if (ValidAdContainerTypes[tagName]) {\n      containerTypeSet[ValidAdContainerTypes[tagName]] = true;\n    }\n  }\n\n  return Object.keys(containerTypeSet);\n}\n/**\n * Appends parameter to ad request indicating error state so long as error\n * parameter is not already present or url has been truncated.\n * @param {string} adUrl used for network request\n * @param {string} parameterValue to be appended\n * @return {string|undefined} potentially modified url, undefined\n */\n\n\nfunction maybeAppendErrorParameter(adUrl, parameterValue) {\n  (0, _log.devAssert)(!!adUrl && !!parameterValue); // Add parameter indicating error so long as the url has not already been\n  // truncated and error parameter is not already present.  Note that we assume\n  // that added, error parameter length will be less than truncation parameter\n  // so adding will not cause length to exceed maximum.\n\n  if (new RegExp(\"[?|&](\" + encodeURIComponent(TRUNCATION_PARAM.name) + \"=\" + (encodeURIComponent(String(TRUNCATION_PARAM.value)) + \"|aet=[^&]*)$\")).test(adUrl)) {\n    return;\n  }\n\n  var modifiedAdUrl = adUrl + (\"&aet=\" + parameterValue);\n  (0, _log.devAssert)(modifiedAdUrl.length <= MAX_URL_LENGTH);\n  return modifiedAdUrl;\n}\n/**\n * Returns a numerical code representing the binary type.\n * @param {string} type\n * @return {?string}\n */\n\n\nfunction getBinaryTypeNumericalCode(type) {\n  return {\n    'production': '0',\n    'control': '1',\n    'canary': '2',\n    'rc': '3',\n    'experimentA': '10',\n    'experimentB': '11',\n    'experimentC': '12',\n    'nomod': '42',\n    'mod': '43'\n  }[type] || null;\n}\n/** @const {!RegExp} */\n\n\nvar IDENTITY_DOMAIN_REGEXP_ = /\\.google\\.(?:com?\\.)?[a-z]{2,3}$/;\n/** @typedef {{\n      token: (string|undefined),\n      jar: (string|undefined),\n      pucrd: (string|undefined),\n      freshLifetimeSecs: (number|undefined),\n      validLifetimeSecs: (number|undefined),\n      fetchTimeMs: (number|undefined)\n   }} */\n\nvar IdentityToken;\n/**\n * @param {!Window} win\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampDoc\n * @param {?string} consentPolicyId\n * @return {!Promise<!IdentityToken>}\n */\n\nexports.IdentityToken = IdentityToken;\n\nfunction getIdentityToken(win, ampDoc, consentPolicyId) {\n  // If configured to use amp-consent, delay request until consent state is\n  // resolved.\n  win['goog_identity_prom'] = win['goog_identity_prom'] || (consentPolicyId ? (0, _consent.getConsentPolicyState)(ampDoc.getHeadNode(), consentPolicyId) : Promise.resolve(_consentState.CONSENT_POLICY_STATE.UNKNOWN_NOT_REQUIRED)).then(function (consentState) {\n    return consentState == _consentState.CONSENT_POLICY_STATE.INSUFFICIENT || consentState == _consentState.CONSENT_POLICY_STATE.UNKNOWN ?\n    /** @type {!IdentityToken} */\n    {} : executeIdentityTokenFetch(win, ampDoc);\n  });\n  return (\n    /** @type {!Promise<!IdentityToken>} */\n    win['goog_identity_prom']\n  );\n}\n/**\n * @param {!Window} win\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampDoc\n * @param {number=} redirectsRemaining (default 1)\n * @param {string=} domain\n * @param {number=} startTime\n * @return {!Promise<!IdentityToken>}\n */\n\n\nfunction executeIdentityTokenFetch(win, ampDoc, redirectsRemaining, domain, startTime) {\n  if (redirectsRemaining === void 0) {\n    redirectsRemaining = 1;\n  }\n\n  if (domain === void 0) {\n    domain = undefined;\n  }\n\n  if (startTime === void 0) {\n    startTime = Date.now();\n  }\n\n  var url = getIdentityTokenRequestUrl(win, ampDoc, domain);\n  return _services.Services.xhrFor(win).fetchJson(url, {\n    mode: 'cors',\n    method: 'GET',\n    ampCors: false,\n    credentials: 'include'\n  }).then(function (res) {\n    return res.json();\n  }).then(function (obj) {\n    var token = obj['newToken'];\n    var jar = obj['1p_jar'] || '';\n    var pucrd = obj['pucrd'] || '';\n    var freshLifetimeSecs = parseInt(obj['freshLifetimeSecs'] || '', 10);\n    var validLifetimeSecs = parseInt(obj['validLifetimeSecs'] || '', 10);\n    var altDomain = obj['altDomain'];\n    var fetchTimeMs = Date.now() - startTime;\n\n    if (IDENTITY_DOMAIN_REGEXP_.test(altDomain)) {\n      if (!redirectsRemaining--) {\n        // Max redirects, log?\n        return {\n          fetchTimeMs: fetchTimeMs\n        };\n      }\n\n      return executeIdentityTokenFetch(win, ampDoc, redirectsRemaining, altDomain, startTime);\n    } else if (freshLifetimeSecs > 0 && validLifetimeSecs > 0 && typeof token == 'string') {\n      return {\n        token: token,\n        jar: jar,\n        pucrd: pucrd,\n        freshLifetimeSecs: freshLifetimeSecs,\n        validLifetimeSecs: validLifetimeSecs,\n        fetchTimeMs: fetchTimeMs\n      };\n    } // returning empty\n\n\n    return {\n      fetchTimeMs: fetchTimeMs\n    };\n  }).catch(function (unusedErr) {\n    // TODO log?\n    return {};\n  });\n}\n/**\n * @param {!Window} win\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampDoc\n * @param {string=} domain\n * @return {string} url\n * @visibleForTesting\n */\n\n\nfunction getIdentityTokenRequestUrl(win, ampDoc, domain) {\n  if (domain === void 0) {\n    domain = undefined;\n  }\n\n  if (!domain && win != win.top && win.location.ancestorOrigins) {\n    var matches = IDENTITY_DOMAIN_REGEXP_.exec(win.location.ancestorOrigins[win.location.ancestorOrigins.length - 1]);\n    domain = matches && matches[0] || undefined;\n  }\n\n  domain = domain || '.google.com';\n  var canonical = extractHost(_services.Services.documentInfoForDoc(ampDoc).canonicalUrl);\n  return \"https://adservice\" + domain + \"/adsid/integrator.json?domain=\" + canonical;\n}\n/**\n * Returns whether we are running on the AMP CDN.\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nfunction isCdnProxy(win) {\n  return CDN_PROXY_REGEXP.test(win.location.origin);\n}\n/**\n * Populates the fields of the given Nameframe experiment config object.\n * @param {!Headers} headers\n * @param {!NameframeExperimentConfig} nameframeConfig\n */\n\n\nfunction setNameframeExperimentConfigs(headers, nameframeConfig) {\n  var nameframeExperimentHeader = headers.get('amp-nameframe-exp');\n\n  if (nameframeExperimentHeader) {\n    nameframeExperimentHeader.split(';').forEach(function (config) {\n      if (config == 'instantLoad' || config == 'writeInBody') {\n        nameframeConfig[config] = true;\n      }\n    });\n  }\n}\n/**\n * Enum for browser capabilities. NOTE: Since JS is 32-bit, do not add anymore\n * than 32 capabilities to this enum.\n * @enum {number}\n */\n\n\nvar Capability = {\n  SVG_SUPPORTED: 1 << 0,\n  SANDBOXING_ALLOW_TOP_NAVIGATION_BY_USER_ACTIVATION_SUPPORTED: 1 << 1,\n  SANDBOXING_ALLOW_POPUPS_TO_ESCAPE_SANDBOX_SUPPORTED: 1 << 2\n};\n/**\n * Returns a bitmap representing what features are supported by this browser.\n * @param {!Window} win\n * @return {number}\n */\n\nfunction getBrowserCapabilitiesBitmap(win) {\n  var browserCapabilities = 0;\n  var doc = win.document;\n\n  if (win.SVGElement && doc.createElementNS) {\n    browserCapabilities |= Capability.SVG_SUPPORTED;\n  }\n\n  var iframeEl = doc.createElement('iframe');\n\n  if (iframeEl.sandbox && iframeEl.sandbox.supports) {\n    if (iframeEl.sandbox.supports('allow-top-navigation-by-user-activation')) {\n      browserCapabilities |= Capability.SANDBOXING_ALLOW_TOP_NAVIGATION_BY_USER_ACTIVATION_SUPPORTED;\n    }\n\n    if (iframeEl.sandbox.supports('allow-popups-to-escape-sandbox')) {\n      browserCapabilities |= Capability.SANDBOXING_ALLOW_POPUPS_TO_ESCAPE_SANDBOX_SUPPORTED;\n    }\n  }\n\n  return browserCapabilities;\n}\n/**\n * Returns an enum value representing the AMP binary type, or null if this is a\n * canonical page.\n * @param {!Window} win\n * @return {?string} The binary type enum.\n * @visibleForTesting\n */\n\n\nfunction getAmpRuntimeTypeParameter(win) {\n  var art = getBinaryTypeNumericalCode((0, _experiments.getBinaryType)(win));\n  return isCdnProxy(win) && art != '0' ? art : null;\n}\n\n},{\"../../../src/ad-cid\":19,\"../../../src/consent\":26,\"../../../src/consent-state\":25,\"../../../src/dom\":29,\"../../../src/experiments\":34,\"../../../src/ini-load\":39,\"../../../src/internal-version\":40,\"../../../src/json\":42,\"../../../src/log\":45,\"../../../src/mode\":47,\"../../../src/service/variable-source\":52,\"../../../src/services\":53,\"../../../src/utils/dom-fingerprint\":63,\"../../../src/utils/object\":67,\"./shared/url-builder\":4}],6:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getMultiSizeDimensions = getMultiSizeDimensions;\nexports.getMatchedContentResponsiveHeightAndUpdatePubParams = getMatchedContentResponsiveHeightAndUpdatePubParams;\nexports.ADSENSE_MCRSPV_TAG = exports.ADSENSE_RSPV_TAG = exports.ADSENSE_RSPV_WHITELISTED_HEIGHT = void 0;\n\nvar _contentRecommendation = require(\"./a4a/shared/content-recommendation.js\");\n\nvar _log = require(\"../../src/log\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Approved height for AdSense full-width responsive ads.\n * @const {number}\n */\nvar ADSENSE_RSPV_WHITELISTED_HEIGHT = 320;\n/**\n * The attribute value for AdSense data-auto-format tag.\n * For full-width responsive ad: data-auto-format='rspv'.\n * For full-width matched content responsive ad: data-auto-format='mcrspv'\n * @const {string}\n */\n\nexports.ADSENSE_RSPV_WHITELISTED_HEIGHT = ADSENSE_RSPV_WHITELISTED_HEIGHT;\nvar ADSENSE_RSPV_TAG = 'rspv';\nexports.ADSENSE_RSPV_TAG = ADSENSE_RSPV_TAG;\nvar ADSENSE_MCRSPV_TAG = 'mcrspv';\n/**\n * Given the amp-ad data attribute containing the multi-size dimensions, and a\n * set of primary dimensions, this function will return all valid multi-size\n * [width, height] pairs in an array.\n *\n * @param {string} multiSizeDataStr The amp-ad data attribute containing the\n *   multi-size dimensions.\n * @param {number} primaryWidth The primary width of the ad slot.\n * @param {number} primaryHeight The primary height of the ad slot.\n * @param {boolean} multiSizeValidation A flag that if set to true will enforce\n *   the rule that ensures multi-size dimensions are no less than 2/3rds of\n *   their primary dimension's counterpart.\n * @param {boolean=} isFluidPrimary Indicates whether the ad slot's primary\n *   size is fluid.\n * @return {?Array<!Array<number>>} An array of dimensions.\n */\n\nexports.ADSENSE_MCRSPV_TAG = ADSENSE_MCRSPV_TAG;\n\nfunction getMultiSizeDimensions(multiSizeDataStr, primaryWidth, primaryHeight, multiSizeValidation, isFluidPrimary) {\n  if (isFluidPrimary === void 0) {\n    isFluidPrimary = false;\n  }\n\n  var dimensions = [];\n  var arrayOfSizeStrs = multiSizeDataStr.split(',');\n\n  for (var i = 0; i < arrayOfSizeStrs.length; i++) {\n    var sizeStr = arrayOfSizeStrs[i];\n\n    if (sizeStr.toLowerCase() == 'fluid') {\n      // Fluid dummy sizes should be appended to the front of the request\n      // parameter, so they must be handled elsewhere.\n      continue;\n    }\n\n    var size = sizeStr.split('x'); // Make sure that each size is specified in the form WxH.\n\n    if (size.length != 2) {\n      (0, _log.user)().error('AMP-AD', \"Invalid multi-size data format '\" + sizeStr + \"'.\");\n      continue;\n    }\n\n    var width = Number(size[0]);\n    var height = Number(size[1]); // Make sure that both dimensions given are positive numbers.\n\n    if (!validateDimensions(width, height, function (w) {\n      return isNaN(w) || w <= 0;\n    }, function (h) {\n      return isNaN(h) || h <= 0;\n    }, function (badParams) {\n      return badParams.map(function (badParam) {\n        return \"Invalid \" + badParam.dim + \" of \" + badParam.val + \" \" + 'given for secondary size.';\n      }).join(' ');\n    })) {\n      continue;\n    } // Check that secondary size is not larger than primary size.\n\n\n    if (!isFluidPrimary && !validateDimensions(width, height, function (w) {\n      return w > primaryWidth;\n    }, function (h) {\n      return h > primaryHeight;\n    }, function (badParams) {\n      return badParams.map(function (badParam) {\n        return \"Secondary \" + badParam.dim + \" \" + badParam.val + \" \" + (\"can't be larger than the primary \" + badParam.dim + \".\");\n      }).join(' ');\n    })) {\n      continue;\n    } // Check that if multi-size-validation is on, that the secondary sizes\n    // are at least minRatio of the primary size.\n\n\n    if (multiSizeValidation) {\n      var _ret = function () {\n        // The minimum ratio of each secondary dimension to its corresponding\n        // primary dimension.\n        var minRatio = 2 / 3;\n        var minWidth = minRatio * primaryWidth;\n        var minHeight = minRatio * primaryHeight;\n\n        if (!validateDimensions(width, height, function (w) {\n          return w < minWidth;\n        }, function (h) {\n          return h < minHeight;\n        }, function (badParams) {\n          return badParams.map(function (badParam) {\n            return \"Secondary \" + badParam.dim + \" \" + badParam.val + \" is \" + (\"smaller than 2/3rds of the primary \" + badParam.dim + \".\");\n          }).join(' ');\n        })) {\n          return \"continue\";\n        }\n      }();\n\n      if (_ret === \"continue\") continue;\n    } // Passed all checks! Push additional size to dimensions.\n\n\n    dimensions.push([width, height]);\n  }\n\n  return dimensions;\n}\n/**\n * A helper function for determining whether a given width or height violates\n * some condition.\n *\n * Checks the width and height against their corresponding conditions. If\n * either of the conditions fail, the errorBuilder function will be called with\n * the appropriate arguments, its result will be logged to user().error, and\n * validateDimensions will return false. Otherwise, validateDimensions will\n * only return true.\n *\n * @param {(number|string)} width\n * @param {(number|string)} height\n * @param {function((number|string)): boolean} widthCond\n * @param {function((number|string)): boolean} heightCond\n * @param {function(!Array<{dim: string, val: (number|string)}>): string=} errorBuilder\n * A function that will produce an informative error message.\n * @return {boolean}\n */\n\n\nfunction validateDimensions(width, height, widthCond, heightCond, errorBuilder) {\n  var badParams = [];\n\n  if (widthCond(width)) {\n    badParams.push({\n      dim: 'width',\n      val: width\n    });\n  }\n\n  if (heightCond(height)) {\n    badParams.push({\n      dim: 'height',\n      val: height\n    });\n  }\n\n  if (badParams.length) {\n    (0, _log.user)().warn('AMP-AD', errorBuilder(badParams));\n  }\n\n  return !badParams.length;\n}\n/**\n * Calculates height of responsive matched content slot based on its width.\n * This logic should be kept as close to possible to the logic inside\n * adsbygoogle.js.\n *\n * @param {number} availableWidth\n * @param {!Element} element <amp-ad> tag which contains publisher settings\n *     if any.\n * @return {number} height to use for the matched content slot.\n */\n\n\nfunction getMatchedContentResponsiveHeightAndUpdatePubParams(availableWidth, element) {\n  var pubControlParams = {\n    numberOfRows: element.getAttribute(_contentRecommendation.ExternalCorePubVars.ROWS_NUM),\n    numberOfColumns: element.getAttribute(_contentRecommendation.ExternalCorePubVars.COLUMNS_NUM),\n    layoutType: element.getAttribute(_contentRecommendation.ExternalCorePubVars.UI_TYPE)\n  };\n  var config;\n\n  if (pubControlParams.numberOfRows || pubControlParams.numberOfColumns || pubControlParams.layoutType) {\n    // Publisher provided at least 1 param  which means we are in\n    // \"pub controlled matched content\" mode.\n    config = (0, _contentRecommendation.getPubControlConfig)(availableWidth, pubControlParams);\n  } else {\n    // Publisher didn't provide any matched content params so use auto mode.\n    config = (0, _contentRecommendation.getAutoConfig)(availableWidth, availableWidth <= _contentRecommendation.MIN_PUB_CONTROL_WIDTH_OF_DESKTOP);\n  }\n\n  if (config.validationError) {\n    (0, _log.user)().error('AMP-AD', config.validationError); // There was an error in pub params and we logged it in console.\n    // Return 0 as height to hide slot.\n\n    return 0;\n  }\n\n  element.setAttribute(_contentRecommendation.ExternalCorePubVars.ROWS_NUM, config.numberOfRows);\n  element.setAttribute(_contentRecommendation.ExternalCorePubVars.COLUMNS_NUM, config.numberOfColumns);\n  element.setAttribute(_contentRecommendation.ExternalCorePubVars.UI_TYPE, config.layoutType);\n  return config.slotHeight;\n}\n\n},{\"../../src/log\":45,\"./a4a/shared/content-recommendation.js\":3}],7:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.CSS = void 0;\nvar CSS = \"amp-ad iframe,amp-embed iframe{border:0!important;margin:0!important;padding:0!important}.i-amphtml-ad-default-holder{position:absolute;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;background-color:hsla(0,0%,78.4%,0.05)}.i-amphtml-ad-default-holder:after{content:\\\"Ad\\\";content:attr(data-ad-holder-text);background-color:transparent;border-radius:2px;color:#696969;font-size:10px;line-height:1;font-family:Arial,sans-serif;padding:3px 4px 1px;border:1px solid #696969}amp-ad[data-a4a-upgrade-type=amp-ad-network-doubleclick-impl]>iframe,amp-ad[type=adsense]>iframe{top:50%!important;left:50%!important;transform:translate(-50%,-50%)}amp-ad[type=adsense],amp-ad[type=doubleclick]{direction:ltr}amp-ad[data-a4a-upgrade-type=amp-ad-network-adsense-impl]>iframe,amp-ad[data-a4a-upgrade-type=amp-ad-network-doubleclick-impl]>iframe{min-height:0;min-width:0}amp-ad[data-a4a-upgrade-type=amp-ad-network-doubleclick-impl][height=fluid]>iframe{height:100%!important;width:100%!important;position:relative}amp-ad[data-a4a-upgrade-type=amp-ad-network-doubleclick-impl][height=fluid]{width:100%!important}\\n/*# sourceURL=/extensions/amp-ad/0.1/amp-ad.css*/\";\nexports.CSS = CSS;\n\n},{}],8:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.cloudflareIsA4AEnabled = cloudflareIsA4AEnabled;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Determines which tags desire A4A handling\n * @param {!Window} win\n * @param {!Element} element\n * @param {boolean} useRemoteHtml\n * @return {boolean}\n */\nfunction cloudflareIsA4AEnabled(win, element, useRemoteHtml) {\n  // We assume fast fetch for all content, but this will gracefully degrade,\n  // when non-a4a content is delivered\n  return !useRemoteHtml;\n}\n\n},{}],9:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.gmosspIsA4AEnabled = gmosspIsA4AEnabled;\n\nvar _string = require(\"../../../src/string\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const @private {string} */\nvar GMOSSP_SRC_PREFIX_ = 'https://sp.gmossp-sp.jp/';\n/** @const @private {string} */\n\nvar GMOSSP_SRC_A4A_PREFIX_ = 'https://amp.sp.gmossp-sp.jp/_a4a/';\n/**\n * @param {!Window} win\n * @param {!Element} element\n * @param {boolean} useRemoteHtml\n * @return {boolean}\n */\n\nfunction gmosspIsA4AEnabled(win, element, useRemoteHtml) {\n  var src;\n  return !useRemoteHtml && !!(src = element.getAttribute('src')) && !!element.getAttribute('data-use-a4a') && ((0, _string.startsWith)(src, GMOSSP_SRC_PREFIX_) || (0, _string.startsWith)(src, GMOSSP_SRC_A4A_PREFIX_));\n}\n\n},{\"../../../src/string\":55}],10:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.tripleliftIsA4AEnabled = tripleliftIsA4AEnabled;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const @private {string} */\nvar SRC_PREFIX_ = 'https://ib.3lift.com/';\n/**\n * @param {!Window} win\n * @param {!Element} element\n * @param {boolean} useRemoteHtml\n * @return {boolean}\n */\n\nfunction tripleliftIsA4AEnabled(win, element, useRemoteHtml) {\n  var src;\n  return !useRemoteHtml && !!element.getAttribute('data-use-a4a') && !!(src = element.getAttribute('src')) && src.indexOf(SRC_PREFIX_) == 0;\n}\n\n},{}],11:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.AmpAd3PImpl = exports.TAG_3P_IMPL = void 0;\n\nvar _utils = require(\"../../../ads/google/utils\");\n\nvar _ampAdUi = require(\"./amp-ad-ui\");\n\nvar _ampAdXoriginIframeHandler = require(\"./amp-ad-xorigin-iframe-handler\");\n\nvar _consentState = require(\"../../../src/consent-state\");\n\nvar _layout = require(\"../../../src/layout\");\n\nvar _config = require(\"../../../ads/_config\");\n\nvar _math = require(\"../../../src/utils/math\");\n\nvar _style = require(\"../../../src/style\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _adCid = require(\"../../../src/ad-cid\");\n\nvar _adHelper = require(\"../../../src/ad-helper\");\n\nvar _concurrentLoad = require(\"./concurrent-load\");\n\nvar _consent = require(\"../../../src/consent\");\n\nvar _pFrame = require(\"../../../src/3p-frame\");\n\nvar _experiments = require(\"../../../src/experiments\");\n\nvar _layoutRect = require(\"../../../src/layout-rect\");\n\nvar _types = require(\"../../../src/types\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/** @const {string} Tag name for 3P AD implementation. */\nvar TAG_3P_IMPL = 'amp-ad-3p-impl';\n/** @const {number} */\n\nexports.TAG_3P_IMPL = TAG_3P_IMPL;\nvar MIN_FULL_WIDTH_HEIGHT = 100;\n/** @const {number} */\n\nvar MAX_FULL_WIDTH_HEIGHT = 500;\n\nvar AmpAd3PImpl =\n/*#__PURE__*/\nfunction (_AMP$BaseElement) {\n  _inheritsLoose(AmpAd3PImpl, _AMP$BaseElement);\n\n  /**\n   * @param {!AmpElement} element\n   */\n  function AmpAd3PImpl(element) {\n    var _this;\n\n    _this = _AMP$BaseElement.call(this, element) || this;\n    /**\n     * @private {?Element}\n     * @visibleForTesting\n     */\n\n    _this.iframe_ = null;\n    /** @type {?Object} */\n\n    _this.config = null;\n    /** @type {?AmpAdUIHandler} */\n\n    _this.uiHandler = null;\n    /** @private {?AmpAdXOriginIframeHandler} */\n\n    _this.xOriginIframeHandler_ = null;\n    /**\n     * @private {?Element}\n     * @visibleForTesting\n     */\n\n    _this.placeholder_ = null;\n    /**\n     * @private {?Element}\n     * @visibleForTesting\n     */\n\n    _this.fallback_ = null;\n    /** @private {boolean} */\n\n    _this.isInFixedContainer_ = false;\n    /**\n     * The (relative) layout box of the ad iframe to the amp-ad tag.\n     * @private {?../../../src/layout-rect.LayoutRectDef}\n     */\n\n    _this.iframeLayoutBox_ = null;\n    /**\n     * Call to stop listening to viewport changes.\n     * @private {?function()}\n     * @visibleForTesting\n     */\n\n    _this.unlistenViewportChanges_ = null;\n    /**\n     * @private {IntersectionObserver}\n     * @visibleForTesting\n     */\n\n    _this.intersectionObserver_ = null;\n    /** @private {?string|undefined} */\n\n    _this.container_ = undefined;\n    /** @private {?Promise} */\n\n    _this.layoutPromise_ = null;\n    /** @private {string|undefined} */\n\n    _this.type_ = undefined;\n    /**\n     * For full-width responsive ads: whether the element has already been\n     * aligned to the edges of the viewport.\n     * @private {boolean}\n     */\n\n    _this.isFullWidthAligned_ = false;\n    /**\n     * Whether full-width responsive was requested for this ad.\n     * @private {boolean}\n     */\n\n    _this.isFullWidthRequested_ = false;\n    return _this;\n  }\n  /** @override */\n\n\n  var _proto = AmpAd3PImpl.prototype;\n\n  _proto.getLayoutPriority = function getLayoutPriority() {\n    // Loads ads after other content,\n    var isPWA = !this.element.getAmpDoc().isSingleDoc(); // give the ad higher priority if it is inside a PWA\n\n    return isPWA ? _layout.LayoutPriority.METADATA : _layout.LayoutPriority.ADS;\n  }\n  /** @override */\n  ;\n\n  _proto.renderOutsideViewport = function renderOutsideViewport() {\n    if ((0, _concurrentLoad.is3pThrottled)(this.win)) {\n      return false;\n    } // Otherwise the ad is good to go.\n\n\n    var elementCheck = (0, _concurrentLoad.getAmpAdRenderOutsideViewport)(this.element);\n    return elementCheck !== null ? elementCheck : _AMP$BaseElement.prototype.renderOutsideViewport.call(this);\n  }\n  /**\n   * @param {!Layout} layout\n   * @override\n   */\n  ;\n\n  _proto.isLayoutSupported = function isLayoutSupported(layout) {\n    return (0, _layout.isLayoutSizeDefined)(layout);\n  }\n  /**\n   * @return {!../../../src/service/resource.Resource}\n   * @visibleForTesting\n   */\n  ;\n\n  _proto.getResource = function getResource() {\n    return this.element.getResources().getResourceForElement(this.element);\n  }\n  /** @override */\n  ;\n\n  _proto.getConsentPolicy = function getConsentPolicy() {\n    var type = this.element.getAttribute('type');\n    var config = _config.adConfig[type];\n\n    if (config && config['consentHandlingOverride']) {\n      return null;\n    }\n\n    return _AMP$BaseElement.prototype.getConsentPolicy.call(this);\n  }\n  /** @override */\n  ;\n\n  _proto.buildCallback = function buildCallback() {\n    this.type_ = this.element.getAttribute('type');\n    var upgradeDelayMs = Math.round(this.getResource().getUpgradeDelayMs());\n    (0, _log.dev)().info(TAG_3P_IMPL, \"upgradeDelay \" + this.type_ + \": \" + upgradeDelayMs);\n    this.placeholder_ = this.getPlaceholder();\n    this.fallback_ = this.getFallback();\n    this.config = _config.adConfig[this.type_];\n    (0, _log.userAssert)(this.config, \"Type \\\"\" + this.type_ + \"\\\" is not supported in amp-ad\");\n    this.uiHandler = new _ampAdUi.AmpAdUIHandler(this);\n    this.isFullWidthRequested_ = this.shouldRequestFullWidth_();\n\n    if (this.isFullWidthRequested_) {\n      return this.attemptFullWidthSizeChange_();\n    }\n  }\n  /**\n   * @return {boolean}\n   * @private\n   */\n  ;\n\n  _proto.shouldRequestFullWidth_ = function shouldRequestFullWidth_() {\n    var hasFullWidth = this.element.hasAttribute('data-full-width');\n\n    if (!hasFullWidth) {\n      return false;\n    }\n\n    (0, _log.userAssert)(this.element.getAttribute('width') == '100vw', 'Ad units with data-full-width must have width=\"100vw\".');\n    (0, _log.userAssert)(!!this.config.fullWidthHeightRatio, 'Ad network does not support full width ads.');\n    (0, _log.dev)().info(TAG_3P_IMPL, '#${this.getResource().getId()} Full width requested');\n    return true;\n  }\n  /**\n   * Prefetches and preconnects URLs related to the ad.\n   * @param {boolean=} opt_onLayout\n   * @override\n   */\n  ;\n\n  _proto.preconnectCallback = function preconnectCallback(opt_onLayout) {\n    var _this2 = this;\n\n    // We always need the bootstrap.\n    (0, _pFrame.preloadBootstrap)(this.win, this.preconnect, this.config.remoteHTMLDisabled);\n\n    if (typeof this.config.prefetch == 'string') {\n      this.preconnect.preload(this.config.prefetch, 'script');\n    } else if (this.config.prefetch) {\n      this.config.prefetch.forEach(function (p) {\n        _this2.preconnect.preload(p, 'script');\n      });\n    }\n\n    if (typeof this.config.preconnect == 'string') {\n      this.preconnect.url(this.config.preconnect, opt_onLayout);\n    } else if (this.config.preconnect) {\n      this.config.preconnect.forEach(function (p) {\n        _this2.preconnect.url(p, opt_onLayout);\n      });\n    } // If fully qualified src for ad script is specified we preconnect to it.\n\n\n    var src = this.element.getAttribute('src');\n\n    if (src) {\n      // We only preconnect to the src because we cannot know whether the URL\n      // will have caching headers set.\n      this.preconnect.url(src);\n    }\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.onLayoutMeasure = function onLayoutMeasure() {\n    var _this3 = this;\n\n    this.isInFixedContainer_ = !(0, _adHelper.isAdPositionAllowed)(this.element, this.win);\n    /** detect ad containers, add the list to element as a new attribute */\n\n    if (this.container_ === undefined) {\n      this.container_ = (0, _adHelper.getAdContainer)(this.element);\n    } // We remeasured this tag, let's also remeasure the iframe. Should be\n    // free now and it might have changed.\n\n\n    this.measureIframeLayoutBox_();\n\n    if (this.xOriginIframeHandler_) {\n      this.xOriginIframeHandler_.onLayoutMeasure();\n    }\n\n    if (this.isFullWidthRequested_ && !this.isFullWidthAligned_) {\n      this.isFullWidthAligned_ = true;\n      var layoutBox = this.getLayoutBox(); // Nudge into the correct horizontal position by changing side margin.\n\n      this.getVsync().run({\n        measure: function measure(state) {\n          state.direction = (0, _style.computedStyle)(_this3.win, _this3.element)['direction'];\n        },\n        mutate: function mutate(state) {\n          if (state.direction == 'rtl') {\n            (0, _style.setStyle)(_this3.element, 'marginRight', layoutBox.left, 'px');\n          } else {\n            (0, _style.setStyle)(_this3.element, 'marginLeft', -layoutBox.left, 'px');\n          }\n        }\n      }, {\n        direction: ''\n      });\n    }\n  }\n  /**\n   * Measure the layout box of the iframe if we rendered it already.\n   * @private\n   */\n  ;\n\n  _proto.measureIframeLayoutBox_ = function measureIframeLayoutBox_() {\n    if (this.xOriginIframeHandler_ && this.xOriginIframeHandler_.iframe) {\n      var iframeBox = this.getViewport().getLayoutRect(this.xOriginIframeHandler_.iframe);\n      var box = this.getLayoutBox(); // Cache the iframe's relative position to the amp-ad. This is\n      // necessary for fixed-position containers which \"move\" with the\n      // viewport.\n\n      this.iframeLayoutBox_ = (0, _layoutRect.moveLayoutRect)(iframeBox, -box.left, -box.top);\n    }\n  }\n  /**\n   * @override\n   */\n  ;\n\n  _proto.getIntersectionElementLayoutBox = function getIntersectionElementLayoutBox() {\n    if (!this.xOriginIframeHandler_ || !this.xOriginIframeHandler_.iframe) {\n      return _AMP$BaseElement.prototype.getIntersectionElementLayoutBox.call(this);\n    }\n\n    var box = this.getLayoutBox();\n\n    if (!this.iframeLayoutBox_) {\n      this.measureIframeLayoutBox_();\n    }\n\n    var iframe =\n    /** @type {!../../../src/layout-rect.LayoutRectDef} */\n    (0, _log.devAssert)(this.iframeLayoutBox_);\n    return (0, _layoutRect.moveLayoutRect)(iframe, box.left, box.top);\n  }\n  /** @override */\n  ;\n\n  _proto.layoutCallback = function layoutCallback() {\n    var _this4 = this;\n\n    if (this.layoutPromise_) {\n      return this.layoutPromise_;\n    }\n\n    (0, _log.userAssert)(!this.isInFixedContainer_, '<amp-ad> is not allowed to be placed in elements with ' + 'position:fixed: %s', this.element);\n    var consentPromise = this.getConsentState();\n\n    var consentPolicyId = _AMP$BaseElement.prototype.getConsentPolicy.call(this);\n\n    var isConsentV2Experiment = (0, _experiments.isExperimentOn)(this.win, 'amp-consent-v2');\n    var consentStringPromise = consentPolicyId && isConsentV2Experiment ? (0, _consent.getConsentPolicyInfo)(this.element, consentPolicyId) : Promise.resolve(null);\n    var sharedDataPromise = consentPolicyId ? (0, _consent.getConsentPolicySharedData)(this.element, consentPolicyId) : Promise.resolve(null);\n    this.layoutPromise_ = Promise.all([(0, _adCid.getAdCid)(this), consentPromise, sharedDataPromise, consentStringPromise]).then(function (consents) {\n      // Use JsonObject to preserve field names so that ampContext can access\n      // values with name\n      // ampcontext.js and this file are compiled in different compilation unit\n      // Note: Field names can by perserved by using JsonObject, or by adding\n      // perserved name to extern. We are doing both right now.\n      // Please also add new introduced variable\n      // name to the extern list.\n      var opt_context = (0, _object.dict)({\n        'clientId': consents[0] || null,\n        'container': _this4.container_,\n        'initialConsentState': consents[1],\n        'consentSharedData': consents[2]\n      });\n\n      if (isConsentV2Experiment) {\n        opt_context['initialConsentValue'] = consents[3];\n      } // In this path, the request and render start events are entangled,\n      // because both happen inside a cross-domain iframe.  Separating them\n      // here, though, allows us to measure the impact of ad throttling via\n      // incrementLoadingAds().\n\n\n      var iframe = (0, _pFrame.getIframe)((0, _types.toWin)(_this4.element.ownerDocument.defaultView), _this4.element, _this4.type_, opt_context, {\n        disallowCustom: _this4.config.remoteHTMLDisabled\n      });\n      _this4.xOriginIframeHandler_ = new _ampAdXoriginIframeHandler.AmpAdXOriginIframeHandler(_this4);\n      return _this4.xOriginIframeHandler_.init(iframe);\n    });\n    (0, _concurrentLoad.incrementLoadingAds)(this.win, this.layoutPromise_);\n    return this.layoutPromise_;\n  }\n  /**\n   * @param {boolean} inViewport\n   * @override\n   */\n  ;\n\n  _proto.viewportCallback = function viewportCallback(inViewport) {\n    if (this.xOriginIframeHandler_) {\n      this.xOriginIframeHandler_.viewportCallback(inViewport);\n    }\n  }\n  /** @override */\n  ;\n\n  _proto.unlayoutOnPause = function unlayoutOnPause() {\n    return !this.xOriginIframeHandler_ || !this.xOriginIframeHandler_.isPausable();\n  }\n  /** @override  */\n  ;\n\n  _proto.pauseCallback = function pauseCallback() {\n    if (this.xOriginIframeHandler_) {\n      this.xOriginIframeHandler_.setPaused(true);\n    }\n  }\n  /** @override  */\n  ;\n\n  _proto.resumeCallback = function resumeCallback() {\n    if (this.xOriginIframeHandler_) {\n      this.xOriginIframeHandler_.setPaused(false);\n    }\n  }\n  /** @override  */\n  ;\n\n  _proto.unlayoutCallback = function unlayoutCallback() {\n    this.layoutPromise_ = null;\n    this.uiHandler.applyUnlayoutUI();\n\n    if (this.xOriginIframeHandler_) {\n      this.xOriginIframeHandler_.freeXOriginIframe();\n      this.xOriginIframeHandler_ = null;\n    }\n\n    return true;\n  }\n  /**\n   * @return {!Promise<?CONSENT_POLICY_STATE>}\n   */\n  ;\n\n  _proto.getConsentState = function getConsentState() {\n    var consentPolicyId = _AMP$BaseElement.prototype.getConsentPolicy.call(this);\n\n    return consentPolicyId ? (0, _consent.getConsentPolicyState)(this.element, consentPolicyId) : Promise.resolve(null);\n  }\n  /**\n   * Calculates and attempts to set the appropriate height & width for a\n   * responsive full width ad unit.\n   * @return {!Promise}\n   * @private\n   */\n  ;\n\n  _proto.attemptFullWidthSizeChange_ = function attemptFullWidthSizeChange_() {\n    var viewportSize = this.getViewport().getSize();\n    var maxHeight = Math.min(MAX_FULL_WIDTH_HEIGHT, viewportSize.height);\n    var width = viewportSize.width;\n    var height = this.getFullWidthHeight_(width, maxHeight); // Attempt to resize to the correct height. The width should already be\n    // 100vw, but is fixed here so that future resizes of the viewport don't\n    // affect it.\n\n    return this.attemptChangeSize(height, width).then(function () {\n      (0, _log.dev)().info(TAG_3P_IMPL, \"Size change accepted: \" + width + \"x\" + height);\n    }, function () {\n      (0, _log.dev)().info(TAG_3P_IMPL, \"Size change rejected: \" + width + \"x\" + height);\n    });\n  }\n  /**\n   * Calculates the appropriate width for a responsive full width ad unit.\n   * @param {number} width\n   * @param {number} maxHeight\n   * @return {number}\n   * @private\n   */\n  ;\n\n  _proto.getFullWidthHeight_ = function getFullWidthHeight_(width, maxHeight) {\n    // TODO(google a4a eng): remove this once adsense switches fully to\n    // fast fetch.\n    if (this.element.getAttribute('data-auto-format') === _utils.ADSENSE_MCRSPV_TAG) {\n      return (0, _utils.getMatchedContentResponsiveHeightAndUpdatePubParams)(width, this.element);\n    }\n\n    return (0, _math.clamp)(Math.round(width / this.config.fullWidthHeightRatio), MIN_FULL_WIDTH_HEIGHT, maxHeight);\n  };\n\n  return AmpAd3PImpl;\n}(AMP.BaseElement);\n\nexports.AmpAd3PImpl = AmpAd3PImpl;\n\n},{\"../../../ads/_config\":2,\"../../../ads/google/utils\":6,\"../../../src/3p-frame\":18,\"../../../src/ad-cid\":19,\"../../../src/ad-helper\":20,\"../../../src/consent\":26,\"../../../src/consent-state\":25,\"../../../src/experiments\":34,\"../../../src/layout\":44,\"../../../src/layout-rect\":43,\"../../../src/log\":45,\"../../../src/style\":57,\"../../../src/types\":58,\"../../../src/utils/math\":66,\"../../../src/utils/object\":67,\"./amp-ad-ui\":13,\"./amp-ad-xorigin-iframe-handler\":14,\"./concurrent-load\":16}],12:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.AmpAdCustom = exports.TAG_AD_CUSTOM = void 0;\n\nvar _ampAdUi = require(\"./amp-ad-ui\");\n\nvar _commonSignals = require(\"../../../src/common-signals\");\n\nvar _layout = require(\"../../../src/layout\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _url = require(\"../../../src/url\");\n\nvar _dom = require(\"../../../src/dom\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _log = require(\"../../../src/log\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/** @const {string} Tag name for custom ad implementation. */\nvar TAG_AD_CUSTOM = 'amp-ad-custom';\n/** @type {Object} A map of promises for each value of data-url. The promise\n *  will fetch data for the URL for the ad server, and return it as a map of\n *  objects, keyed by slot; each object contains the variables to be\n *   substituted into the mustache template. */\n\nexports.TAG_AD_CUSTOM = TAG_AD_CUSTOM;\nvar ampCustomadXhrPromises = {};\n/** @type {Object} a map of full urls (i.e. including the ampslots parameter)\n * for each value of data-url */\n\nvar ampCustomadFullUrls = null;\n\nvar AmpAdCustom =\n/*#__PURE__*/\nfunction (_AMP$BaseElement) {\n  _inheritsLoose(AmpAdCustom, _AMP$BaseElement);\n\n  /** @param {!AmpElement} element */\n  function AmpAdCustom(element) {\n    var _this;\n\n    _this = _AMP$BaseElement.call(this, element) || this;\n    /** @private {?string} The base URL of the ad server for this ad */\n\n    _this.url_ = null;\n    /** @private {?string} A string identifying this ad slot: the server's\n     *  responses will be keyed by slot */\n\n    _this.slot_ = null;\n    /** @type {?AmpAdUIHandler} */\n\n    _this.uiHandler = null;\n    return _this;\n  }\n  /** @override */\n\n\n  var _proto = AmpAdCustom.prototype;\n\n  _proto.getLayoutPriority = function getLayoutPriority() {\n    // Since this is AMPHTML we are trusting that it will load responsibly\n    return _layout.LayoutPriority.CONTENT;\n  }\n  /** @override */\n  ;\n\n  _proto.isLayoutSupported = function isLayoutSupported(layout) {\n    // TODO: Add proper support for more layouts, and figure out which ones\n    // we're permitting\n    return (0, _layout.isLayoutSizeDefined)(layout);\n  }\n  /**\n   * Builds AmpAdUIHandler callback\n   */\n  ;\n\n  _proto.buildCallback = function buildCallback() {\n    this.url_ = this.element.getAttribute('data-url');\n    this.slot_ = this.element.getAttribute('data-slot'); // Ensure that the slot value is legal\n\n    (0, _log.userAssert)(this.slot_ === null || this.slot_.match(/^[0-9a-z]+$/), 'custom ad slot should be alphanumeric: ' + this.slot_);\n\n    var urlService = _services.Services.urlForDoc(this.element);\n\n    (0, _log.userAssert)(this.url_ && urlService.isSecure(this.url_), 'custom ad url must be an HTTPS URL');\n    this.uiHandler = new _ampAdUi.AmpAdUIHandler(this);\n  }\n  /** @override */\n  ;\n\n  _proto.layoutCallback = function layoutCallback() {\n    var _this2 = this;\n\n    /** @const {string} fullUrl */\n    var fullUrl = this.getFullUrl_(); // if we have cached the response, find it, otherwise fetch\n\n    var responsePromise = ampCustomadXhrPromises[fullUrl] || _services.Services.xhrFor(this.win).fetchJson(fullUrl).then(function (res) {\n      return res.json();\n    });\n\n    if (this.slot_ !== null) {\n      // Cache this response if using `data-slot` feature so only one request\n      // is made per url\n      ampCustomadXhrPromises[fullUrl] = responsePromise;\n    }\n\n    return responsePromise.then(function (data) {\n      // We will get here when the data has been fetched from the server\n      var templateData = data;\n\n      if (_this2.slot_ !== null) {\n        templateData = (0, _object.hasOwn)(data, _this2.slot_) ? data[_this2.slot_] : null;\n      }\n\n      if (!templateData || typeof templateData != 'object') {\n        _this2.uiHandler.applyNoContentUI();\n\n        return;\n      }\n\n      templateData = _this2.handleTemplateData_(templateData);\n\n      _this2.renderStarted();\n\n      try {\n        _services.Services.templatesFor(_this2.win).findAndRenderTemplate(_this2.element, templateData).then(function (renderedElement) {\n          // Get here when the template has been rendered Clear out the\n          // child template and replace it by the rendered version Note that\n          // we can't clear templates that's not ad's child because they\n          // maybe used by other ad component.\n          (0, _dom.removeChildren)(_this2.element);\n\n          _this2.element.appendChild(renderedElement);\n\n          _this2.signals().signal(_commonSignals.CommonSignals.INI_LOAD);\n        });\n      } catch (e) {\n        _this2.uiHandler.applyNoContentUI();\n      }\n    });\n  }\n  /**\n   * Handles the template data response.\n   * There are two types of templateData format\n   * Format option 1\n   * {\n   *   'templateId': {},\n   *   'vars': {},\n   *   'data': {\n   *     'a': '1',\n   *     'b': '2'\n   *   }\n   * }\n   * or format option 2\n   * {\n   *  'a': '1',\n   *  'b': '2'\n   * }\n   * if `templateId` or `vars` are not specified.\n   *\n   * @param {!JsonObject} templateData\n   * @return {!JsonObject}\n   */\n  ;\n\n  _proto.handleTemplateData_ = function handleTemplateData_(templateData) {\n    if ((0, _dom.childElementByTag)(this.element, 'template')) {\n      // Need to check for template attribute if it's allowed in amp-ad tag\n      return templateData;\n    } // If use remote template specified by response\n\n\n    (0, _log.userAssert)(templateData['templateId'], 'TemplateId not specified');\n    (0, _log.userAssert)(templateData['data'] && typeof templateData['data'] == 'object', 'Template data not specified');\n    this.element.setAttribute('template', templateData['templateId']);\n\n    if (templateData['vars'] && typeof templateData['vars'] == 'object') {\n      // Support for vars\n      var vars = templateData['vars'];\n      var keys = Object.keys(vars);\n\n      for (var i = 0; i < keys.length; i++) {\n        var attrName = 'data-vars-' + keys[i];\n\n        try {\n          this.element.setAttribute(attrName, vars[keys[i]]);\n        } catch (e) {\n          this.user().error(TAG_AD_CUSTOM, 'Fail to set attribute: ', e);\n        }\n      }\n    }\n\n    return templateData['data'];\n  }\n  /** @override  */\n  ;\n\n  _proto.unlayoutCallback = function unlayoutCallback() {\n    this.uiHandler.applyUnlayoutUI();\n    return true;\n  }\n  /**\n   * @private getFullUrl_ Get a URL which includes a parameter indicating\n   * all slots to be fetched from this web server URL\n   * @return {string} The URL with the \"ampslots\" parameter appended\n   */\n  ;\n\n  _proto.getFullUrl_ = function getFullUrl_() {\n    // If this ad doesn't have a slot defined, just return the base URL\n    if (this.slot_ === null) {\n      return (0, _log.userAssert)(this.url_);\n    }\n\n    if (ampCustomadFullUrls === null) {\n      // The array of ad urls has not yet been built, do so now.\n      ampCustomadFullUrls = {};\n      var slots = {}; // Get the parent body of this amp-ad element. It could be the body of\n      // the main document, or it could be an enclosing iframe.\n\n      var body = (0, _dom.closestAncestorElementBySelector)(this.element, 'BODY');\n      var elements = body.querySelectorAll('amp-ad[type=custom]');\n\n      for (var index = 0; index < elements.length; index++) {\n        var elem = elements[index];\n        var url = elem.getAttribute('data-url');\n        var slotId = elem.getAttribute('data-slot');\n\n        if (slotId !== null) {\n          if (!(url in slots)) {\n            slots[url] = [];\n          }\n\n          slots[url].push(encodeURIComponent(slotId));\n        }\n      }\n\n      for (var baseUrl in slots) {\n        ampCustomadFullUrls[baseUrl] = (0, _url.addParamToUrl)(baseUrl, 'ampslots', slots[baseUrl].join(','));\n      }\n    }\n\n    return ampCustomadFullUrls[this.url_];\n  };\n\n  return AmpAdCustom;\n}(AMP.BaseElement);\n\nexports.AmpAdCustom = AmpAdCustom;\n\n},{\"../../../src/common-signals\":23,\"../../../src/dom\":29,\"../../../src/layout\":44,\"../../../src/log\":45,\"../../../src/services\":53,\"../../../src/url\":61,\"../../../src/utils/object\":67,\"./amp-ad-ui\":13}],13:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.AmpAdUIHandler = void 0;\n\nvar _dom = require(\"../../../src/dom\");\n\nvar _adHelper = require(\"../../../src/ad-helper\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar AmpAdUIHandler =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!AMP.BaseElement} baseInstance\n   */\n  function AmpAdUIHandler(baseInstance) {\n    /** @private {!AMP.BaseElement} */\n    this.baseInstance_ = baseInstance;\n    /** @private {!Element} */\n\n    this.element_ = baseInstance.element;\n    /** @private @const {!Document} */\n\n    this.doc_ = baseInstance.win.document;\n    this.containerElement_ = null;\n\n    if (this.element_.hasAttribute('data-ad-container-id')) {\n      var id = this.element_.getAttribute('data-ad-container-id');\n      var container = this.doc_.getElementById(id);\n\n      if (container && container.tagName == 'AMP-LAYOUT' && container.contains(this.element_)) {\n        // Parent <amp-layout> component with reference id can serve as the\n        // ad container\n        this.containerElement_ = container;\n      }\n    }\n\n    if (!baseInstance.getFallback()) {\n      var fallback = this.addDefaultUiComponent_('fallback');\n\n      if (fallback) {\n        this.baseInstance_.element.appendChild(fallback);\n      }\n    }\n  }\n  /**\n   * Apply UI for laid out ad with no-content\n   * Order: try collapse -> apply provided fallback -> apply default fallback\n   */\n\n\n  var _proto = AmpAdUIHandler.prototype;\n\n  _proto.applyNoContentUI = function applyNoContentUI() {\n    var _this = this;\n\n    if ((0, _adHelper.getAdContainer)(this.element_) === 'AMP-STICKY-AD') {\n      // Special case: force collapse sticky-ad if no content.\n      this.baseInstance_.\n      /*OK*/\n      collapse();\n      return;\n    }\n\n    if ((0, _adHelper.getAdContainer)(this.element_) === 'AMP-FX-FLYING-CARPET') {\n      /**\n       * Special case: Force collapse the ad if it is the,\n       * only and direct child of a flying carpet.\n       * Also, this will not handle\n       * the amp-layout case for now, as it could be\n       * inefficient. And we have not seen an amp-layout\n       * used with flying carpet and ads yet.\n       */\n      var flyingCarpetElements = (0, _dom.ancestorElementsByTag)(this.element_, 'amp-fx-flying-carpet');\n      var flyingCarpetElement = flyingCarpetElements[0];\n      flyingCarpetElement.getImpl().then(function (implementation) {\n        var children = implementation.getChildren();\n\n        if (children.length === 1 && children[0] === _this.element_) {\n          _this.baseInstance_.\n          /*OK*/\n          collapse();\n        }\n      });\n      return;\n    }\n\n    var attemptCollapsePromise;\n\n    if (this.containerElement_) {\n      // Collapse the container element if there's one\n      attemptCollapsePromise = this.element_.getResources().attemptCollapse(this.containerElement_);\n      attemptCollapsePromise.then(function () {});\n    } else {\n      attemptCollapsePromise = this.baseInstance_.attemptCollapse();\n    } // The order here is collapse > user provided fallback > default fallback\n\n\n    attemptCollapsePromise.catch(function () {\n      _this.baseInstance_.mutateElement(function () {\n        _this.baseInstance_.togglePlaceholder(false);\n\n        _this.baseInstance_.toggleFallback(true);\n      });\n    });\n  }\n  /**\n   * Apply UI for unlaid out ad: Hide fallback.\n   * Note: No need to togglePlaceholder here, unlayout show it by default.\n   */\n  ;\n\n  _proto.applyUnlayoutUI = function applyUnlayoutUI() {\n    var _this2 = this;\n\n    this.baseInstance_.mutateElement(function () {\n      _this2.baseInstance_.toggleFallback(false);\n    });\n  }\n  /**\n   * @param {string} name\n   * @return {?Element}\n   * @private\n   */\n  ;\n\n  _proto.addDefaultUiComponent_ = function addDefaultUiComponent_(name) {\n    if (this.element_.tagName == 'AMP-EMBED') {\n      // Do nothing for amp-embed element;\n      return null;\n    }\n\n    var uiComponent = this.doc_.createElement('div');\n    uiComponent.setAttribute(name, '');\n    var content = this.doc_.createElement('div');\n    content.classList.add('i-amphtml-ad-default-holder'); // TODO(aghassemi, #4146) i18n\n\n    content.setAttribute('data-ad-holder-text', 'Ad');\n    uiComponent.appendChild(content);\n    return uiComponent;\n  }\n  /**\n   * @param {number|string|undefined} height\n   * @param {number|string|undefined} width\n   * @param {number} iframeHeight\n   * @param {number} iframeWidth\n   * @param {!MessageEvent} event\n   * @return {!Promise<!Object>}\n   */\n  ;\n\n  _proto.updateSize = function updateSize(height, width, iframeHeight, iframeWidth, event) {\n    // Calculate new width and height of the container to include the padding.\n    // If padding is negative, just use the requested width and height directly.\n    var newHeight, newWidth;\n    height = parseInt(height, 10);\n\n    if (!isNaN(height)) {\n      newHeight = Math.max(this.element_.\n      /*OK*/\n      offsetHeight + height - iframeHeight, height);\n    }\n\n    width = parseInt(width, 10);\n\n    if (!isNaN(width)) {\n      newWidth = Math.max(this.element_.\n      /*OK*/\n      offsetWidth + width - iframeWidth, width);\n    }\n    /** @type {!Object<boolean, number|undefined, number|undefined>} */\n\n\n    var resizeInfo = {\n      success: true,\n      newWidth: newWidth,\n      newHeight: newHeight\n    };\n\n    if (!newHeight && !newWidth) {\n      return Promise.reject(new Error('undefined width and height'));\n    }\n\n    if ((0, _adHelper.getAdContainer)(this.element_) == 'AMP-STICKY-AD') {\n      // Special case: force collapse sticky-ad if no content.\n      resizeInfo.success = false;\n      return Promise.resolve(resizeInfo);\n    }\n\n    return this.baseInstance_.attemptChangeSize(newHeight, newWidth, event).then(function () {\n      return resizeInfo;\n    }, function () {\n      resizeInfo.success = false;\n      return resizeInfo;\n    });\n  };\n\n  return AmpAdUIHandler;\n}(); // Make the class available to other late loaded amp-ad implementations\n// without them having to depend on it directly.\n\n\nexports.AmpAdUIHandler = AmpAdUIHandler;\nAMP.AmpAdUIHandler = AmpAdUIHandler;\n\n},{\"../../../src/ad-helper\":20,\"../../../src/dom\":29}],14:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.AmpAdXOriginIframeHandler = void 0;\n\nvar _pFrameMessaging = require(\"../../../src/3p-frame-messaging\");\n\nvar _commonSignals = require(\"../../../src/common-signals\");\n\nvar _promise = require(\"../../../src/utils/promise\");\n\nvar _intersectionObserver = require(\"../../../src/intersection-observer\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _iframeHelper = require(\"../../../src/iframe-helper\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _eventHelper = require(\"../../../src/event-helper\");\n\nvar _getHtml = require(\"../../../src/get-html\");\n\nvar _experiments = require(\"../../../src/experiments\");\n\nvar _utils = require(\"../../../ads/google/a4a/utils\");\n\nvar _dom = require(\"../../../src/dom\");\n\nvar _error = require(\"../../../src/error\");\n\nvar _style = require(\"../../../src/style\");\n\nvar _rateLimit = require(\"../../../src/utils/rate-limit\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar VISIBILITY_TIMEOUT = 10000;\nvar MIN_INABOX_POSITION_EVENT_INTERVAL = 100;\n\nvar AmpAdXOriginIframeHandler =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!./amp-ad-3p-impl.AmpAd3PImpl|!../../amp-a4a/0.1/amp-a4a.AmpA4A} baseInstance\n   */\n  function AmpAdXOriginIframeHandler(baseInstance) {\n    /** @private {!Window} */\n    this.win_ = baseInstance.win;\n    /** @private */\n\n    this.baseInstance_ = baseInstance;\n    /** @private {!Element} */\n\n    this.element_ = baseInstance.element;\n    /** @private {?./amp-ad-ui.AmpAdUIHandler} */\n\n    this.uiHandler_ = baseInstance.uiHandler;\n    /** @type {?HTMLIFrameElement} iframe instance */\n\n    this.iframe = null;\n    /** @private {?IntersectionObserver} */\n\n    this.intersectionObserver_ = null;\n    /** @private {SubscriptionApi} */\n\n    this.embedStateApi_ = null;\n    /** @private {?SubscriptionApi} */\n\n    this.inaboxPositionApi_ = null;\n    /** @private {boolean} */\n\n    this.isInaboxPositionApiInit_ = false;\n    /** @private {!Array<!Function>} functions to unregister listeners */\n\n    this.unlisteners_ = [];\n    /** @private @const {!../../../src/service/viewport/viewport-interface.ViewportInterface} */\n\n    this.viewport_ = _services.Services.viewportForDoc(this.baseInstance_.getAmpDoc());\n    /** @private {boolean} */\n\n    this.sendPositionPending_ = false;\n  }\n  /**\n   * Sets up listeners and iframe state for iframe containing ad creative.\n   * @param {!HTMLIFrameElement} iframe\n   * @param {boolean=} opt_isA4A when true do not listen to ad response\n   * @param {boolean=} opt_letCreativeTriggerRenderStart Whether to wait for\n   *    render start from the creative, or simply trigger it in here.\n   * @return {!Promise} awaiting render complete promise\n   */\n\n\n  var _proto = AmpAdXOriginIframeHandler.prototype;\n\n  _proto.init = function init(iframe, opt_isA4A, opt_letCreativeTriggerRenderStart) {\n    var _this = this;\n\n    (0, _log.devAssert)(!this.iframe, 'multiple invocations of init without destroy!');\n    this.iframe = iframe;\n    this.iframe.setAttribute('scrolling', 'no');\n    this.baseInstance_.applyFillContent(this.iframe);\n\n    var timer = _services.Services.timerFor(this.baseInstance_.win); // Init IntersectionObserver service.\n\n\n    this.intersectionObserver_ = new _intersectionObserver.IntersectionObserver(this.baseInstance_, this.iframe, true);\n    this.embedStateApi_ = new _iframeHelper.SubscriptionApi(this.iframe, 'send-embed-state', true, function () {\n      return _this.sendEmbedInfo_(_this.baseInstance_.isInViewport());\n    }); // Enable creative position observer if inabox experiment enabled OR\n    // adsense running on non-CDN cache where AMP creatives are xdomained and\n    // may require this information.\n\n    if ((0, _experiments.isExperimentOn)(this.win_, 'inabox-position-api') || /^adsense$/i.test(this.element_.getAttribute('type')) && !(0, _utils.isGoogleAdsA4AValidEnvironment)(this.win_)) {\n      // To provide position to inabox.\n      this.inaboxPositionApi_ = new _iframeHelper.SubscriptionApi(this.iframe, _pFrameMessaging.MessageType.SEND_POSITIONS, true, function () {\n        // TODO(@zhouyx): Make sendPosition_ only send to\n        // message origin iframe\n        _this.sendPosition_();\n\n        _this.registerPosition_();\n      });\n    } // Triggered by context.reportRenderedEntityIdentifier(…) inside the ad\n    // iframe.\n\n\n    (0, _iframeHelper.listenForOncePromise)(this.iframe, 'entity-id', true).then(function (info) {\n      _this.element_.creativeId = info.data['id'];\n    });\n    this.handleOneTimeRequest_(_pFrameMessaging.MessageType.GET_HTML, function (payload) {\n      var selector = payload['selector'];\n      var attributes = payload['attributes'];\n      var content = '';\n\n      if (_this.element_.hasAttribute('data-html-access-allowed')) {\n        content = (0, _getHtml.getHtml)(_this.baseInstance_.win, selector, attributes);\n      }\n\n      return Promise.resolve(content);\n    });\n    this.handleOneTimeRequest_(_pFrameMessaging.MessageType.GET_CONSENT_STATE, function () {\n      return _this.baseInstance_.getConsentState().then(function (consentState) {\n        return {\n          consentState: consentState\n        };\n      });\n    }); // Install iframe resize API.\n\n    this.unlisteners_.push((0, _iframeHelper.listenFor)(this.iframe, 'embed-size', function (data, source, origin, event) {\n      if (!!data['hasOverflow']) {\n        _this.element_.warnOnMissingOverflow = false;\n      }\n\n      _this.handleResize_(data['height'], data['width'], source, origin, event);\n    }, true, true));\n    this.unlisteners_.push(this.baseInstance_.getAmpDoc().onVisibilityChanged(function () {\n      _this.sendEmbedInfo_(_this.baseInstance_.isInViewport());\n    }));\n    this.unlisteners_.push((0, _iframeHelper.listenFor)(this.iframe, _pFrameMessaging.MessageType.USER_ERROR_IN_IFRAME, function (data) {\n      _this.userErrorForAnalytics_(data['message']);\n    }, true, true\n    /* opt_includingNestedWindows */\n    )); // Iframe.onload normally called by the Ad after full load.\n\n    var iframeLoadPromise = this.baseInstance_.loadPromise(this.iframe).then(function () {\n      // Wait just a little to allow `no-content` message to arrive.\n      if (_this.iframe) {\n        // Chrome does not reflect the iframe readystate.\n        _this.iframe.readyState = 'complete';\n      }\n\n      return timer.promise(10);\n    }); // Calculate render-start and no-content signals.\n\n    var _ref = new _promise.Deferred(),\n        renderStartPromise = _ref.promise,\n        renderStartResolve = _ref.resolve;\n\n    var _ref2 = new _promise.Deferred(),\n        noContentPromise = _ref2.promise,\n        noContentResolve = _ref2.resolve;\n\n    if (this.baseInstance_.config && this.baseInstance_.config.renderStartImplemented) {\n      // When `render-start` is supported, these signals are mutually\n      // exclusive. Whichever arrives first wins.\n      (0, _iframeHelper.listenForOncePromise)(this.iframe, ['render-start', 'no-content'], true).then(function (info) {\n        var data = info.data;\n\n        if (data['type'] == 'render-start') {\n          _this.renderStartMsgHandler_(info);\n\n          renderStartResolve();\n        } else {\n          _this.noContent_();\n\n          noContentResolve();\n        }\n      });\n    } else {\n      // If `render-start` is not supported, listen to `bootstrap-loaded`.\n      // This will avoid keeping the Ad empty until it's fully loaded, which\n      // could be a long time.\n      (0, _iframeHelper.listenForOncePromise)(this.iframe, 'bootstrap-loaded', true).then(function () {\n        renderStartResolve();\n      }); // Likewise, no-content is observed here. However, it's impossible to\n      // assure exclusivity between `no-content` and `bootstrap-loaded` b/c\n      // `bootstrap-loaded` always arrives first.\n\n      (0, _iframeHelper.listenForOncePromise)(this.iframe, 'no-content', true).then(function () {\n        _this.noContent_();\n\n        noContentResolve();\n      });\n    } // Wait for initial load signal. Notice that this signal is not\n    // used to resolve the final layout promise because iframe may still be\n    // consuming significant network and CPU resources.\n\n\n    (0, _iframeHelper.listenForOncePromise)(this.iframe, _commonSignals.CommonSignals.INI_LOAD, true).then(function () {\n      // TODO(dvoytenko, #7788): ensure that in-a-box \"ini-load\" message is\n      // received here as well.\n      _this.baseInstance_.signals().signal(_commonSignals.CommonSignals.INI_LOAD);\n    }); // If \"pausable-iframe\" enabled, try to make the iframe pausable. It doesn't\n    // matter here whether this will succeed or not.\n\n    if ((0, _experiments.isExperimentOn)(this.win_, 'pausable-iframe')) {\n      (0, _iframeHelper.makePausable)(this.iframe);\n    }\n\n    this.element_.appendChild(this.iframe);\n\n    if (opt_isA4A && !opt_letCreativeTriggerRenderStart) {\n      // A4A writes creative frame directly to page once creative is received\n      // and therefore does not require render start message so attach and\n      // impose no loader delay.  Network is using renderStart or\n      // bootstrap-loaded to indicate ad request was sent, either way we know\n      // that occurred for Fast Fetch.\n      this.baseInstance_.renderStarted();\n      renderStartResolve();\n    } else {\n      // Set iframe initially hidden which will be removed on render-start or\n      // load, whichever is earlier.\n      (0, _style.setStyle)(this.iframe, 'visibility', 'hidden');\n    }\n\n    Promise.race([renderStartPromise, iframeLoadPromise, timer.promise(VISIBILITY_TIMEOUT)]).then(function () {\n      // Common signal RENDER_START invoked at toggle visibility time\n      // Note: 'render-start' msg and common signal RENDER_START are different\n      // 'render-start' msg is a way for implemented Ad to display ad earlier\n      // RENDER_START signal is a signal to inform AMP runtime and other AMP\n      // elements that the component visibility has been toggled on.\n      _this.baseInstance_.renderStarted();\n\n      if (_this.iframe) {\n        (0, _style.setStyle)(_this.iframe, 'visibility', '');\n      }\n    }); // The actual ad load is eariliest of iframe.onload event and no-content.\n\n    return Promise.race([iframeLoadPromise, noContentPromise]);\n  }\n  /**\n   * @param {string} requestType\n   * @param {function(*)} getter\n   * @private\n   */\n  ;\n\n  _proto.handleOneTimeRequest_ = function handleOneTimeRequest_(requestType, getter) {\n    var _this2 = this;\n\n    this.unlisteners_.push((0, _iframeHelper.listenFor)(this.iframe, requestType, function (info, source, origin) {\n      if (!_this2.iframe) {\n        return;\n      }\n\n      var messageId = info[_pFrameMessaging.CONSTANTS.messageIdFieldName];\n      var payload = info[_pFrameMessaging.CONSTANTS.payloadFieldName];\n      getter(payload).then(function (content) {\n        var result = (0, _object.dict)();\n        result[_pFrameMessaging.CONSTANTS.messageIdFieldName] = messageId;\n        result[_pFrameMessaging.CONSTANTS.contentFieldName] = content;\n        (0, _iframeHelper.postMessageToWindows)((0, _log.dev)().assertElement(_this2.iframe), [{\n          win: source,\n          origin: origin\n        }], requestType + _pFrameMessaging.CONSTANTS.responseTypeSuffix, result, true);\n      });\n    }, true\n    /* opt_is3P */\n    , false\n    /* opt_includingNestedWindows */\n    ));\n  }\n  /**\n   * callback functon on receiving render-start\n   * @param {{data: !JsonObject}} info\n   * @private\n   */\n  ;\n\n  _proto.renderStartMsgHandler_ = function renderStartMsgHandler_(info) {\n    var data = (0, _eventHelper.getData)(info);\n    this.handleResize_(data['height'], data['width'], info['source'], info['origin'], info['event']);\n  }\n  /**\n   * Cleans up the listeners on the cross domain ad iframe and frees the\n   * iframe resource.\n   * @param {boolean=} opt_keep\n   */\n  ;\n\n  _proto.freeXOriginIframe = function freeXOriginIframe(opt_keep) {\n    this.cleanup_(); // If ask to keep the iframe.\n    // Use in the case of no-content and iframe is a master iframe.\n\n    if (opt_keep) {\n      return;\n    }\n\n    if (this.iframe) {\n      (0, _dom.removeElement)(this.iframe);\n      this.iframe = null;\n    }\n  }\n  /**\n   * Cleans up listeners on the ad, and apply the default UI for ad.\n   * @private\n   */\n  ;\n\n  _proto.noContent_ = function noContent_() {\n    if (!this.iframe) {\n      // unlayout already called\n      return;\n    }\n\n    this.freeXOriginIframe(this.iframe.name.indexOf('_master') >= 0);\n    this.uiHandler_.applyNoContentUI();\n  }\n  /**\n   * Cleans up listeners on the ad iframe.\n   * @private\n   */\n  ;\n\n  _proto.cleanup_ = function cleanup_() {\n    this.unlisteners_.forEach(function (unlistener) {\n      return unlistener();\n    });\n    this.unlisteners_.length = 0;\n\n    if (this.embedStateApi_) {\n      this.embedStateApi_.destroy();\n      this.embedStateApi_ = null;\n    }\n\n    if (this.inaboxPositionApi_) {\n      this.inaboxPositionApi_.destroy();\n      this.inaboxPositionApi_ = null;\n    }\n\n    if (this.intersectionObserver_) {\n      this.intersectionObserver_.destroy();\n      this.intersectionObserver_ = null;\n    }\n  }\n  /**\n   * Updates the element's dimensions to accommodate the iframe's\n   * requested dimensions. Notifies the window that request the resize\n   * of success or failure.\n   * @param {number|string|undefined} height\n   * @param {number|string|undefined} width\n   * @param {!Window} source\n   * @param {string} origin\n   * @param {!MessageEvent} event\n   * @private\n   */\n  ;\n\n  _proto.handleResize_ = function handleResize_(height, width, source, origin, event) {\n    var _this3 = this;\n\n    this.baseInstance_.getVsync().mutate(function () {\n      if (!_this3.iframe) {\n        // iframe can be cleanup before vsync.\n        return;\n      }\n\n      var iframeHeight = _this3.iframe.\n      /*OK*/\n      offsetHeight;\n      var iframeWidth = _this3.iframe.\n      /*OK*/\n      offsetWidth;\n\n      _this3.uiHandler_.updateSize(height, width, iframeHeight, iframeWidth, event).then(function (info) {\n        _this3.sendEmbedSizeResponse_(info.success, info.newWidth, info.newHeight, source, origin);\n      }, function () {});\n    });\n  }\n  /**\n   * Sends a response to the window which requested a resize.\n   * @param {boolean} success\n   * @param {number} requestedWidth\n   * @param {number} requestedHeight\n   * @param {!Window} source\n   * @param {string} origin\n   * @private\n   */\n  ;\n\n  _proto.sendEmbedSizeResponse_ = function sendEmbedSizeResponse_(success, requestedWidth, requestedHeight, source, origin) {\n    // The iframe may have been removed by the time we resize.\n    if (!this.iframe) {\n      return;\n    }\n\n    (0, _iframeHelper.postMessageToWindows)(this.iframe, [{\n      win: source,\n      origin: origin\n    }], success ? 'embed-size-changed' : 'embed-size-denied', (0, _object.dict)({\n      'requestedWidth': requestedWidth,\n      'requestedHeight': requestedHeight\n    }), true);\n  }\n  /**\n   * @param {boolean} inViewport\n   * @private\n   */\n  ;\n\n  _proto.sendEmbedInfo_ = function sendEmbedInfo_(inViewport) {\n    if (!this.embedStateApi_) {\n      return;\n    }\n\n    this.embedStateApi_.send('embed-state', (0, _object.dict)({\n      'inViewport': inViewport,\n      'pageHidden': !this.baseInstance_.getAmpDoc().isVisible()\n    }));\n  }\n  /**\n   * Retrieve iframe position entry in next animation frame.\n   * @return {*} TODO(#23582): Specify return type\n   * @private\n   */\n  ;\n\n  _proto.getIframePositionPromise_ = function getIframePositionPromise_() {\n    var _this4 = this;\n\n    return this.viewport_.getClientRectAsync((0, _log.dev)().assertElement(this.iframe)).then(function (position) {\n      (0, _log.devAssert)(position, 'element clientRect should intersects with root clientRect');\n\n      var viewport = _this4.viewport_.getRect();\n\n      return (0, _object.dict)({\n        'targetRect': position,\n        'viewportRect': viewport\n      });\n    });\n  }\n  /** @private */\n  ;\n\n  _proto.sendPosition_ = function sendPosition_() {\n    var _this5 = this;\n\n    if (this.sendPositionPending_) {\n      // Only send once in single animation frame.\n      return;\n    }\n\n    this.sendPositionPending_ = true;\n    this.getIframePositionPromise_().then(function (position) {\n      _this5.sendPositionPending_ = false;\n\n      _this5.inaboxPositionApi_.send(_pFrameMessaging.MessageType.POSITION, position);\n    });\n  }\n  /** @private */\n  ;\n\n  _proto.registerPosition_ = function registerPosition_() {\n    var _this6 = this;\n\n    if (this.isInaboxPositionApiInit_) {\n      // only register to viewport scroll/resize once\n      return;\n    }\n\n    this.isInaboxPositionApiInit_ = true; // Send window scroll/resize event to viewport.\n\n    this.unlisteners_.push(this.viewport_.onScroll((0, _rateLimit.throttle)(this.win_, function () {\n      _this6.getIframePositionPromise_().then(function (position) {\n        _this6.inaboxPositionApi_.send(_pFrameMessaging.MessageType.POSITION, position);\n      });\n    }, MIN_INABOX_POSITION_EVENT_INTERVAL)));\n    this.unlisteners_.push(this.viewport_.onResize(function () {\n      _this6.getIframePositionPromise_().then(function (position) {\n        _this6.inaboxPositionApi_.send(_pFrameMessaging.MessageType.POSITION, position);\n      });\n    }));\n  }\n  /**\n   * See BaseElement method.\n   * @param {boolean} inViewport\n   */\n  ;\n\n  _proto.viewportCallback = function viewportCallback(inViewport) {\n    if (this.intersectionObserver_) {\n      this.intersectionObserver_.onViewportCallback(inViewport);\n    }\n\n    this.sendEmbedInfo_(inViewport);\n  }\n  /**\n   * See BaseElement method.\n   */\n  ;\n\n  _proto.onLayoutMeasure = function onLayoutMeasure() {\n    // When the framework has the need to remeasure us, our position might\n    // have changed. Send an intersection record if needed.\n    if (this.intersectionObserver_) {\n      this.intersectionObserver_.fire();\n    }\n  }\n  /**\n   * @param {string} message\n   * @private\n   */\n  ;\n\n  _proto.userErrorForAnalytics_ = function userErrorForAnalytics_(message) {\n    if (typeof message == 'string') {\n      var e = new Error(message);\n      e.name = '3pError';\n      (0, _error.reportErrorToAnalytics)(e, this.baseInstance_.win);\n    }\n  }\n  /**\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isPausable = function isPausable() {\n    return (0, _experiments.isExperimentOn)(this.win_, 'pausable-iframe') && !!this.iframe && (0, _iframeHelper.isPausable)(this.iframe);\n  }\n  /**\n   * See `BaseElement.pauseCallback()` and `BaseElement.resumeCallback()`.\n   * @param {boolean} paused\n   */\n  ;\n\n  _proto.setPaused = function setPaused(paused) {\n    if ((0, _experiments.isExperimentOn)(this.win_, 'pausable-iframe') && this.iframe) {\n      (0, _iframeHelper.setPaused)(this.iframe, paused);\n    }\n  };\n\n  return AmpAdXOriginIframeHandler;\n}(); // Make the class available to other late loaded amp-ad implementations\n// without them having to depend on it directly.\n\n\nexports.AmpAdXOriginIframeHandler = AmpAdXOriginIframeHandler;\nAMP.AmpAdXOriginIframeHandler = AmpAdXOriginIframeHandler;\n\n},{\"../../../ads/google/a4a/utils\":5,\"../../../src/3p-frame-messaging\":17,\"../../../src/common-signals\":23,\"../../../src/dom\":29,\"../../../src/error\":31,\"../../../src/event-helper\":33,\"../../../src/experiments\":34,\"../../../src/get-html\":36,\"../../../src/iframe-helper\":38,\"../../../src/intersection-observer\":41,\"../../../src/log\":45,\"../../../src/services\":53,\"../../../src/style\":57,\"../../../src/utils/object\":67,\"../../../src/utils/promise\":68,\"../../../src/utils/rate-limit\":69}],15:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.AmpAd = void 0;\n\nvar _ampAd3pImpl = require(\"./amp-ad-3p-impl\");\n\nvar _ampAdCustom = require(\"./amp-ad-custom\");\n\nvar _ampAd = require(\"../../../build/amp-ad-0.1.css\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _config = require(\"../../../ads/_config\");\n\nvar _a4aConfig = require(\"../../../ads/_a4a-config\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _log = require(\"../../../src/log\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * Construct ad network type-specific tag and script name.  Note that this\n * omits the version number and '.js' suffix for the extension script, which\n * will be handled by the extension loader.\n *\n * @param {string} type\n * @return {string}\n * @private\n */\nfunction networkImplementationTag(type) {\n  return \"amp-ad-network-\" + type + \"-impl\";\n}\n\nvar AmpAd =\n/*#__PURE__*/\nfunction (_AMP$BaseElement) {\n  _inheritsLoose(AmpAd, _AMP$BaseElement);\n\n  function AmpAd() {\n    return _AMP$BaseElement.apply(this, arguments) || this;\n  }\n\n  var _proto = AmpAd.prototype;\n\n  /** @override */\n  _proto.isLayoutSupported = function isLayoutSupported(unusedLayout) {\n    // TODO(jridgewell, #5980, #8218): ensure that unupgraded calls are not\n    // done for `isLayoutSupported`.\n    return true;\n  }\n  /** @override */\n  ;\n\n  _proto.upgradeCallback = function upgradeCallback() {\n    var _this = this;\n\n    var a4aRegistry = (0, _a4aConfig.getA4ARegistry)(); // Block whole ad load if a consent is needed.\n\n    /** @const {string} */\n\n    var consentId = this.element.getAttribute('data-consent-notification-id');\n    var consent = consentId ? _services.Services.userNotificationManagerForDoc(this.element).then(function (service) {\n      return service.get(consentId);\n    }) : Promise.resolve();\n    var type = this.element.getAttribute('type');\n    return consent.then(function () {\n      var isCustom = type === 'custom';\n      (0, _log.userAssert)(isCustom || (0, _object.hasOwn)(_config.adConfig, type) || (0, _object.hasOwn)(a4aRegistry, type), \"Unknown ad type \\\"\" + type + \"\\\"\"); // Check for the custom ad type (no ad network, self-service)\n\n      if (isCustom) {\n        return new _ampAdCustom.AmpAdCustom(_this.element);\n      }\n\n      _this.win.ampAdSlotIdCounter = _this.win.ampAdSlotIdCounter || 0;\n      var slotId = _this.win.ampAdSlotIdCounter++;\n      return new Promise(function (resolve) {\n        _this.getVsync().mutate(function () {\n          _this.element.setAttribute('data-amp-slot-index', slotId);\n\n          var useRemoteHtml = !(_config.adConfig[type] || {})['remoteHTMLDisabled'] && _this.win.document.querySelector('meta[name=amp-3p-iframe-src]'); // TODO(tdrl): Check amp-ad registry to see if they have this already.\n          // TODO(a4a-cam): Shorten this predicate.\n\n\n          if (!a4aRegistry[type] || // Note that predicate execution may have side effects.\n          !a4aRegistry[type](_this.win, _this.element, useRemoteHtml)) {\n            // Either this ad network doesn't support Fast Fetch, its Fast\n            // Fetch implementation has explicitly opted not to handle this\n            // tag, or this page uses remote.html which is inherently\n            // incompatible with Fast Fetch. Fall back to Delayed Fetch.\n            return resolve(new _ampAd3pImpl.AmpAd3PImpl(_this.element));\n          }\n\n          var extensionTagName = networkImplementationTag(type);\n\n          _this.element.setAttribute('data-a4a-upgrade-type', extensionTagName);\n\n          resolve(_services.Services.extensionsFor(_this.win).loadElementClass(extensionTagName).then(function (ctor) {\n            return new ctor(_this.element);\n          }).catch(function (error) {\n            // Work around presubmit restrictions.\n            var TAG = _this.element.tagName; // Report error and fallback to 3p\n\n            _this.user().error(TAG, 'Unable to load ad implementation for type ', type, ', falling back to 3p, error: ', error);\n\n            return new _ampAd3pImpl.AmpAd3PImpl(_this.element);\n          }));\n        });\n      });\n    });\n  };\n\n  return AmpAd;\n}(AMP.BaseElement);\n\nexports.AmpAd = AmpAd;\nAMP.extension('amp-ad', '0.1', function (AMP) {\n  AMP.registerElement('amp-ad', AmpAd, _ampAd.CSS);\n  AMP.registerElement('amp-embed', AmpAd);\n});\n\n},{\"../../../ads/_a4a-config\":1,\"../../../ads/_config\":2,\"../../../build/amp-ad-0.1.css\":7,\"../../../src/log\":45,\"../../../src/services\":53,\"../../../src/utils/object\":67,\"./amp-ad-3p-impl\":11,\"./amp-ad-custom\":12}],16:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.is3pThrottled = is3pThrottled;\nexports.waitFor3pThrottle = waitFor3pThrottle;\nexports.getAmpAdRenderOutsideViewport = getAmpAdRenderOutsideViewport;\nexports.incrementLoadingAds = incrementLoadingAds;\n\nvar _promise = require(\"../../../src/utils/promise\");\n\nvar _services = require(\"../../../src/services\");\n\nvar _log = require(\"../../../src/log\");\n\n/* Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Store loading ads info within window to ensure it can be properly stored\n * across separately compiled binaries that share load throttling.\n * @const ID of window variable used to track 3p ads waiting to load.\n */\nvar LOADING_ADS_WIN_ID_ = '3pla';\n/** @private {?Promise} resolves when no 3p throttle */\n\nvar throttlePromise_ = null;\n/** @private {?Function} resolver for throttle promise */\n\nvar throttlePromiseResolver_ = null;\n/**\n * @param {!Window} win\n * @return {boolean} Whether 3p is currently throttled.\n */\n\nfunction is3pThrottled(win) {\n  return !!win[LOADING_ADS_WIN_ID_];\n}\n/** @return {!Promise} resolves when no 3p throttle */\n\n\nfunction waitFor3pThrottle() {\n  return throttlePromise_ || Promise.resolve();\n}\n/**\n * @param {!Element} element\n * @return {?number} number if explicit value should be used otherwise super\n *    default should be used.\n */\n\n\nfunction getAmpAdRenderOutsideViewport(element) {\n  var rawValue = element.getAttribute('data-loading-strategy');\n\n  if (rawValue == null) {\n    return null;\n  } // Ad opts into lazier loading strategy where we only load ads that are\n  // at closer given number of viewports away.\n\n\n  if (rawValue == 'prefer-viewability-over-views' || rawValue == '') {\n    return 1.25;\n  }\n\n  var errorMessage = 'Value of data-loading-strategy should be a float number in range ' + 'of [0, 3], but got ' + rawValue;\n  var viewportNumber = (0, _log.user)().assertNumber(parseFloat(rawValue), errorMessage);\n  (0, _log.userAssert)(viewportNumber >= 0 && viewportNumber <= 3, errorMessage);\n  return viewportNumber;\n}\n/**\n * Increments loading ads count for throttling.\n * @param {!Window} win\n * @param {!Promise=} opt_loadingPromise\n */\n\n\nfunction incrementLoadingAds(win, opt_loadingPromise) {\n  if (win[LOADING_ADS_WIN_ID_] === undefined) {\n    win[LOADING_ADS_WIN_ID_] = 0;\n  }\n\n  win[LOADING_ADS_WIN_ID_]++;\n\n  if (!throttlePromise_) {\n    var deferred = new _promise.Deferred();\n    throttlePromise_ = deferred.promise;\n    throttlePromiseResolver_ = deferred.resolve;\n  }\n\n  _services.Services.timerFor(win).timeoutPromise(1000, opt_loadingPromise).catch(function () {}).then(function () {\n    if (! --win[LOADING_ADS_WIN_ID_]) {\n      throttlePromiseResolver_();\n      throttlePromise_ = null;\n      throttlePromiseResolver_ = null;\n    }\n  });\n}\n\n},{\"../../../src/log\":45,\"../../../src/services\":53,\"../../../src/utils/promise\":68}],17:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.listen = listen;\nexports.serializeMessage = serializeMessage;\nexports.deserializeMessage = deserializeMessage;\nexports.isAmpMessage = isAmpMessage;\nexports.IframeTransportEvent = exports.MessageType = exports.CONSTANTS = void 0;\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object\");\n\nvar _eventHelperListen = require(\"./event-helper-listen\");\n\nvar _json = require(\"./json\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const */\nvar AMP_MESSAGE_PREFIX = 'amp-';\nvar CONSTANTS = {\n  responseTypeSuffix: '-result',\n  messageIdFieldName: 'messageId',\n  payloadFieldName: 'payload',\n  contentFieldName: 'content'\n};\n/** @enum {string} */\n\nexports.CONSTANTS = CONSTANTS;\nvar MessageType = {\n  // For amp-ad\n  SEND_EMBED_STATE: 'send-embed-state',\n  EMBED_STATE: 'embed-state',\n  SEND_EMBED_CONTEXT: 'send-embed-context',\n  EMBED_CONTEXT: 'embed-context',\n  SEND_INTERSECTIONS: 'send-intersections',\n  INTERSECTION: 'intersection',\n  EMBED_SIZE: 'embed-size',\n  EMBED_SIZE_CHANGED: 'embed-size-changed',\n  EMBED_SIZE_DENIED: 'embed-size-denied',\n  NO_CONTENT: 'no-content',\n  GET_HTML: 'get-html',\n  GET_CONSENT_STATE: 'get-consent-state',\n  // For the frame to be placed in full overlay mode for lightboxes\n  FULL_OVERLAY_FRAME: 'full-overlay-frame',\n  FULL_OVERLAY_FRAME_RESPONSE: 'full-overlay-frame-response',\n  CANCEL_FULL_OVERLAY_FRAME: 'cancel-full-overlay-frame',\n  CANCEL_FULL_OVERLAY_FRAME_RESPONSE: 'cancel-full-overlay-frame-response',\n  // For amp-inabox\n  SEND_POSITIONS: 'send-positions',\n  POSITION: 'position',\n  // For amp-analytics' iframe-transport\n  SEND_IFRAME_TRANSPORT_EVENTS: 'send-iframe-transport-events',\n  IFRAME_TRANSPORT_EVENTS: 'iframe-transport-events',\n  IFRAME_TRANSPORT_RESPONSE: 'iframe-transport-response',\n  // For user-error-in-iframe\n  USER_ERROR_IN_IFRAME: 'user-error-in-iframe'\n};\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\nexports.MessageType = MessageType;\n\nfunction listen(element, eventType, listener, opt_evtListenerOpts) {\n  return (0, _eventHelperListen.internalListenImplementation)(element, eventType, listener, opt_evtListenerOpts);\n}\n/**\n * Serialize an AMP post message. Output looks like:\n * 'amp-011481323099490{\"type\":\"position\",\"sentinel\":\"12345\",\"foo\":\"bar\"}'\n * @param {string} type\n * @param {string} sentinel\n * @param {JsonObject=} data\n * @param {?string=} rtvVersion\n * @return {string}\n */\n\n\nfunction serializeMessage(type, sentinel, data, rtvVersion) {\n  if (data === void 0) {\n    data = (0, _object.dict)();\n  }\n\n  if (rtvVersion === void 0) {\n    rtvVersion = null;\n  }\n\n  // TODO: consider wrap the data in a \"data\" field. { type, sentinal, data }\n  var message = data;\n  message['type'] = type;\n  message['sentinel'] = sentinel;\n  return AMP_MESSAGE_PREFIX + (rtvVersion || '') + JSON.stringify(message);\n}\n/**\n * Deserialize an AMP post message.\n * Returns null if it's not valid AMP message format.\n *\n * @param {*} message\n * @return {?JsonObject|undefined}\n */\n\n\nfunction deserializeMessage(message) {\n  if (!isAmpMessage(message)) {\n    return null;\n  }\n\n  var startPos = message.indexOf('{');\n  (0, _log.devAssert)(startPos != -1, 'JSON missing in %s', message);\n\n  try {\n    return (0, _json.parseJson)(message.substr(startPos));\n  } catch (e) {\n    (0, _log.dev)().error('MESSAGING', 'Failed to parse message: ' + message, e);\n    return null;\n  }\n}\n/**\n *  Returns true if message looks like it is an AMP postMessage\n *  @param {*} message\n *  @return {boolean}\n */\n\n\nfunction isAmpMessage(message) {\n  return typeof message == 'string' && message.indexOf(AMP_MESSAGE_PREFIX) == 0 && message.indexOf('{') != -1;\n}\n/** @typedef {{creativeId: string, message: string}} */\n\n\nvar IframeTransportEvent; // An event, and the transport ID of the amp-analytics tags that\n// generated it. For instance if the creative with transport\n// ID 2 sends \"hi\", then an IframeTransportEvent would look like:\n// { creativeId: \"2\", message: \"hi\" }\n// If the creative with transport ID 2 sent that, and also sent \"hello\",\n// and the creative with transport ID 3 sends \"goodbye\" then an *array* of 3\n// AmpAnalyticsIframeTransportEvent would be sent to the 3p frame like so:\n// [\n//   { creativeId: \"2\", message: \"hi\" }, // An AmpAnalyticsIframeTransportEvent\n//   { creativeId: \"2\", message: \"hello\" }, // Another\n//   { creativeId: \"3\", message: \"goodbye\" } // And another\n// ]\n\nexports.IframeTransportEvent = IframeTransportEvent;\n\n},{\"./event-helper-listen\":32,\"./json\":42,\"./log\":45,\"./utils/object\":67}],18:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getIframe = getIframe;\nexports.addDataAndJsonAttributes_ = addDataAndJsonAttributes_;\nexports.preloadBootstrap = preloadBootstrap;\nexports.getBootstrapBaseUrl = getBootstrapBaseUrl;\nexports.setDefaultBootstrapBaseUrlForTesting = setDefaultBootstrapBaseUrlForTesting;\nexports.resetBootstrapBaseUrlForTesting = resetBootstrapBaseUrlForTesting;\nexports.getDefaultBootstrapBaseUrl = getDefaultBootstrapBaseUrl;\nexports.getDevelopmentBootstrapBaseUrl = getDevelopmentBootstrapBaseUrl;\nexports.getSubDomain = getSubDomain;\nexports.getRandom = getRandom;\nexports.applySandbox = applySandbox;\nexports.generateSentinel = generateSentinel;\nexports.resetCountForTesting = resetCountForTesting;\n\nvar _url = require(\"./url\");\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object\");\n\nvar _iframeAttributes = require(\"../src/iframe-attributes\");\n\nvar _mode = require(\"./mode\");\n\nvar _internalVersion = require(\"./internal-version\");\n\nvar _style = require(\"./style\");\n\nvar _string = require(\"./string\");\n\nvar _json = require(\"./json\");\n\nvar _config = require(\"./config\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @type {!Object<string,number>} Number of 3p frames on the for that type. */\nvar count = {};\n/** @type {string} */\n\nvar overrideBootstrapBaseUrl;\n/** @const {string} */\n\nvar TAG = '3p-frame';\n/**\n * Produces the attributes for the ad template.\n * @param {!Window} parentWindow\n * @param {!AmpElement} element\n * @param {string=} opt_type\n * @param {Object=} opt_context\n * @return {!JsonObject} Contains\n *     - type, width, height, src attributes of <amp-ad> tag. These have\n *       precedence over the data- attributes.\n *     - data-* attributes of the <amp-ad> tag with the \"data-\" removed.\n *     - A _context object for internal use.\n */\n\nfunction getFrameAttributes(parentWindow, element, opt_type, opt_context) {\n  var type = opt_type || element.getAttribute('type');\n  (0, _log.userAssert)(type, 'Attribute type required for <amp-ad>: %s', element);\n  var sentinel = generateSentinel(parentWindow);\n  var attributes = (0, _object.dict)(); // Do these first, as the other attributes have precedence.\n\n  addDataAndJsonAttributes_(element, attributes);\n  attributes = (0, _iframeAttributes.getContextMetadata)(parentWindow, element, sentinel, attributes);\n  attributes['type'] = type;\n  Object.assign(attributes['_context'], opt_context);\n  return attributes;\n}\n/**\n * Creates the iframe for the embed. Applies correct size and passes the embed\n * attributes to the frame via JSON inside the fragment.\n * @param {!Window} parentWindow\n * @param {!AmpElement} parentElement\n * @param {string=} opt_type\n * @param {Object=} opt_context\n * @param {!{\n *   disallowCustom,\n *   allowFullscreen,\n * }=} opt_options Options for the created iframe.\n * @return {!HTMLIFrameElement} The iframe.\n */\n\n\nfunction getIframe(parentWindow, parentElement, opt_type, opt_context, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      disallowCustom = _ref.disallowCustom,\n      allowFullscreen = _ref.allowFullscreen;\n\n  // Check that the parentElement is already in DOM. This code uses a new and\n  // fast `isConnected` API and thus only used when it's available.\n  (0, _log.devAssert)(parentElement['isConnected'] === undefined || parentElement['isConnected'] === true, 'Parent element must be in DOM');\n  var attributes = getFrameAttributes(parentWindow, parentElement, opt_type, opt_context);\n  var iframe =\n  /** @type {!HTMLIFrameElement} */\n  parentWindow.document.createElement('iframe');\n\n  if (!count[attributes['type']]) {\n    count[attributes['type']] = 0;\n  }\n\n  count[attributes['type']] += 1;\n  var baseUrl = getBootstrapBaseUrl(parentWindow, undefined, disallowCustom);\n  var host = (0, _url.parseUrlDeprecated)(baseUrl).hostname; // This name attribute may be overwritten if this frame is chosen to\n  // be the master frame. That is ok, as we will read the name off\n  // for our uses before that would occur.\n  // @see https://github.com/ampproject/amphtml/blob/master/3p/integration.js\n\n  var name = JSON.stringify((0, _object.dict)({\n    'host': host,\n    'type': attributes['type'],\n    // https://github.com/ampproject/amphtml/pull/2955\n    'count': count[attributes['type']],\n    'attributes': attributes\n  }));\n  iframe.src = baseUrl;\n  iframe.ampLocation = (0, _url.parseUrlDeprecated)(baseUrl);\n  iframe.name = name; // Add the check before assigning to prevent IE throw Invalid argument error\n\n  if (attributes['width']) {\n    iframe.width = attributes['width'];\n  }\n\n  if (attributes['height']) {\n    iframe.height = attributes['height'];\n  }\n\n  if (attributes['title']) {\n    iframe.title = attributes['title'];\n  }\n\n  if (allowFullscreen) {\n    iframe.setAttribute('allowfullscreen', 'true');\n  }\n\n  iframe.setAttribute('scrolling', 'no');\n  (0, _style.setStyle)(iframe, 'border', 'none');\n  /** @this {!Element} */\n\n  iframe.onload = function () {\n    // Chrome does not reflect the iframe readystate.\n    this.readyState = 'complete';\n  }; // Block synchronous XHR in ad. These are very rare, but super bad for UX\n  // as they block the UI thread for the arbitrary amount of time until the\n  // request completes.\n\n\n  iframe.setAttribute('allow', \"sync-xhr 'none';\");\n  var excludeFromSandbox = ['facebook'];\n\n  if (!excludeFromSandbox.includes(opt_type)) {\n    applySandbox(iframe);\n  }\n\n  iframe.setAttribute('data-amp-3p-sentinel', attributes['_context']['sentinel']);\n  return iframe;\n}\n/**\n * Copies data- attributes from the element into the attributes object.\n * Removes the data- from the name and capitalizes after -. If there\n * is an attribute called json, parses the JSON and adds it to the\n * attributes.\n * @param {!Element} element\n * @param {!JsonObject} attributes The destination.\n * visibleForTesting\n */\n\n\nfunction addDataAndJsonAttributes_(element, attributes) {\n  var dataset = element.dataset;\n\n  for (var name in dataset) {\n    // data-vars- is reserved for amp-analytics\n    // see https://github.com/ampproject/amphtml/blob/master/extensions/amp-analytics/analytics-vars.md#variables-as-data-attribute\n    if (!(0, _string.startsWith)(name, 'vars')) {\n      attributes[name] = dataset[name];\n    }\n  }\n\n  var json = element.getAttribute('json');\n\n  if (json) {\n    var obj = (0, _json.tryParseJson)(json);\n\n    if (obj === undefined) {\n      throw (0, _log.user)().createError('Error parsing JSON in json attribute in element %s', element);\n    }\n\n    for (var key in obj) {\n      attributes[key] = obj[key];\n    }\n  }\n}\n/**\n * Preloads URLs related to the bootstrap iframe.\n * @param {!Window} win\n * @param {!./preconnect.Preconnect} preconnect\n * @param {boolean=} opt_disallowCustom whether 3p url should not use meta tag.\n */\n\n\nfunction preloadBootstrap(win, preconnect, opt_disallowCustom) {\n  var url = getBootstrapBaseUrl(win, undefined, opt_disallowCustom);\n  preconnect.preload(url, 'document'); // While the URL may point to a custom domain, this URL will always be\n  // fetched by it.\n\n  var scriptUrl = (0, _mode.getMode)().localDev ? getAdsLocalhost(win) + '/dist.3p/current/integration.js' : _config.urls.thirdParty + \"/\" + (0, _internalVersion.internalRuntimeVersion)() + \"/f.js\";\n  preconnect.preload(scriptUrl, 'script');\n}\n/**\n * Returns the base URL for 3p bootstrap iframes.\n * @param {!Window} parentWindow\n * @param {boolean=} opt_strictForUnitTest\n * @param {boolean=} opt_disallowCustom whether 3p url should not use meta tag.\n * @return {string}\n * @visibleForTesting\n */\n\n\nfunction getBootstrapBaseUrl(parentWindow, opt_strictForUnitTest, opt_disallowCustom) {\n  var customBootstrapBaseUrl = opt_disallowCustom ? null : getCustomBootstrapBaseUrl(parentWindow, opt_strictForUnitTest);\n  return customBootstrapBaseUrl || getDefaultBootstrapBaseUrl(parentWindow);\n}\n/**\n * @param {string} url\n */\n\n\nfunction setDefaultBootstrapBaseUrlForTesting(url) {\n  overrideBootstrapBaseUrl = url;\n}\n/**\n * @param {*} win\n */\n\n\nfunction resetBootstrapBaseUrlForTesting(win) {\n  win.__AMP_DEFAULT_BOOTSTRAP_SUBDOMAIN = undefined;\n}\n/**\n * Returns the default base URL for 3p bootstrap iframes.\n * @param {!Window} parentWindow\n * @param {string=} opt_srcFileBasename\n * @return {string}\n */\n\n\nfunction getDefaultBootstrapBaseUrl(parentWindow, opt_srcFileBasename) {\n  var srcFileBasename = opt_srcFileBasename || 'frame';\n\n  if ((0, _mode.getMode)().localDev || (0, _mode.getMode)().test) {\n    return getDevelopmentBootstrapBaseUrl(parentWindow, srcFileBasename);\n  } // Ensure same sub-domain is used despite potentially different file.\n\n\n  parentWindow.__AMP_DEFAULT_BOOTSTRAP_SUBDOMAIN = parentWindow.__AMP_DEFAULT_BOOTSTRAP_SUBDOMAIN || getSubDomain(parentWindow);\n  return 'https://' + parentWindow.__AMP_DEFAULT_BOOTSTRAP_SUBDOMAIN + (\".\" + _config.urls.thirdPartyFrameHost + \"/\" + (0, _internalVersion.internalRuntimeVersion)() + \"/\") + (srcFileBasename + \".html\");\n}\n/**\n * Function to return the development boostrap base URL\n * @param {!Window} parentWindow\n * @param {string} srcFileBasename\n * @return {string}\n */\n\n\nfunction getDevelopmentBootstrapBaseUrl(parentWindow, srcFileBasename) {\n  return overrideBootstrapBaseUrl || getAdsLocalhost(parentWindow) + '/dist.3p/' + ((0, _mode.getMode)().minified ? (0, _internalVersion.internalRuntimeVersion)() + \"/\" + srcFileBasename : \"current/\" + srcFileBasename + \".max\") + '.html';\n}\n/**\n * @param {!Window} win\n * @return {string}\n */\n\n\nfunction getAdsLocalhost(win) {\n  var adsUrl = _config.urls.thirdParty; // local dev with a non-localhost server\n\n  if (adsUrl == 'https://3p.ampproject.net') {\n    adsUrl = 'http://ads.localhost'; // local dev with a localhost server\n  }\n\n  return adsUrl + ':' + (win.location.port || win.parent.location.port);\n}\n/**\n * Sub domain on which the 3p iframe will be hosted.\n * Because we only calculate the URL once per page, this function is only\n * called once and hence all frames on a page use the same URL.\n * @param {!Window} win\n * @return {string}\n * @visibleForTesting\n */\n\n\nfunction getSubDomain(win) {\n  return 'd-' + getRandom(win);\n}\n/**\n * Generates a random non-negative integer.\n * @param {!Window} win\n * @return {string}\n */\n\n\nfunction getRandom(win) {\n  var rand;\n\n  if (win.crypto && win.crypto.getRandomValues) {\n    // By default use 2 32 bit integers.\n    var uint32array = new Uint32Array(2);\n    win.crypto.getRandomValues(uint32array);\n    rand = String(uint32array[0]) + uint32array[1];\n  } else {\n    // Fall back to Math.random.\n    rand = String(win.Math.random()).substr(2) + '0';\n  }\n\n  return rand;\n}\n/**\n * Returns the custom base URL for 3p bootstrap iframes if it exists.\n * Otherwise null.\n * @param {!Window} parentWindow\n * @param {boolean=} opt_strictForUnitTest\n * @return {?string}\n */\n\n\nfunction getCustomBootstrapBaseUrl(parentWindow, opt_strictForUnitTest) {\n  var meta = parentWindow.document.querySelector('meta[name=\"amp-3p-iframe-src\"]');\n\n  if (!meta) {\n    return null;\n  }\n\n  var url = (0, _url.assertHttpsUrl)(meta.getAttribute('content'), meta);\n  (0, _log.userAssert)(url.indexOf('?') == -1, '3p iframe url must not include query string %s in element %s.', url, meta); // This is not a security primitive, we just don't want this to happen in\n  // practice. People could still redirect to the same origin, but they cannot\n  // redirect to the proxy origin which is the important one.\n\n  var parsed = (0, _url.parseUrlDeprecated)(url);\n  (0, _log.userAssert)(parsed.hostname == 'localhost' && !opt_strictForUnitTest || parsed.origin != (0, _url.parseUrlDeprecated)(parentWindow.location.href).origin, '3p iframe url must not be on the same origin as the current document ' + '%s (%s) in element %s. See https://github.com/ampproject/amphtml' + '/blob/master/spec/amp-iframe-origin-policy.md for details.', url, parsed.origin, meta);\n  return url + \"?\" + (0, _internalVersion.internalRuntimeVersion)();\n}\n/**\n * Applies a sandbox to the iframe, if the required flags can be allowed.\n * @param {!Element} iframe\n * @visibleForTesting\n */\n\n\nfunction applySandbox(iframe) {\n  if (!iframe.sandbox || !iframe.sandbox.supports) {\n    return; // Can't feature detect support\n  } // If these flags are not supported by the UA we don't apply any\n  // sandbox.\n\n\n  var requiredFlags = [// This only allows navigation when user interacts and thus prevents\n  // ads from auto navigating the user.\n  'allow-top-navigation-by-user-activation', // Crucial because otherwise even target=_blank opened links are\n  // still sandboxed which they may not expect.\n  'allow-popups-to-escape-sandbox']; // These flags are not feature detected. Put stuff here where either\n  // they have always been supported or support is not crucial.\n\n  var otherFlags = ['allow-forms', // We should consider turning this off! But since the top navigation\n  // issue is the big one, we'll leave this allowed for now.\n  'allow-modals', // Give access to raw mouse movements.\n  'allow-pointer-lock', // This remains subject to popup blocking, it just makes it supported\n  // at all.\n  'allow-popups', // This applies inside the iframe and is crucial to not break the web.\n  'allow-same-origin', 'allow-scripts']; // Not allowed\n  // - allow-top-navigation\n  // - allow-orientation-lock\n  // - allow-pointer-lock\n  // - allow-presentation\n\n  for (var i = 0; i < requiredFlags.length; i++) {\n    var flag = requiredFlags[i];\n\n    if (!iframe.sandbox.supports(flag)) {\n      (0, _log.dev)().info(TAG, \"Iframe doesn't support %s\", flag);\n      return;\n    }\n  }\n\n  iframe.sandbox = requiredFlags.join(' ') + ' ' + otherFlags.join(' ');\n}\n/**\n * Returns a randomized sentinel value for 3p iframes.\n * The format is \"%d-%d\" with the first value being the depth of current\n * window in the window hierarchy and the second a random integer.\n * @param {!Window} parentWindow\n * @return {string}\n * @visibleForTesting\n */\n\n\nfunction generateSentinel(parentWindow) {\n  var windowDepth = 0;\n\n  for (var win = parentWindow; win && win != win.parent; win = win.parent) {\n    windowDepth++;\n  }\n\n  return String(windowDepth) + '-' + getRandom(parentWindow);\n}\n/**\n * Resets the count of each 3p frame type\n * @visibleForTesting\n */\n\n\nfunction resetCountForTesting() {\n  count = {};\n}\n\n},{\"../src/iframe-attributes\":37,\"./config\":24,\"./internal-version\":40,\"./json\":42,\"./log\":45,\"./mode\":47,\"./string\":55,\"./style\":57,\"./url\":61,\"./utils/object\":67}],19:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getAdCid = getAdCid;\nexports.getOrCreateAdCid = getOrCreateAdCid;\n\nvar _services = require(\"./services\");\n\nvar _config = require(\"../ads/_config\");\n\nvar _log = require(\"../src/log\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {AMP.BaseElement} adElement\n * @return {!Promise<string|undefined>} A promise for a CID or undefined if\n *     - the ad network does not request one or\n *     - `amp-analytics` which provides the CID service was not installed.\n */\nfunction getAdCid(adElement) {\n  var config = _config.adConfig[adElement.element.getAttribute('type')];\n\n  if (!config || !config['clientIdScope']) {\n    return Promise.resolve();\n  }\n\n  return getOrCreateAdCid(adElement.getAmpDoc(), config['clientIdScope'], config['clientIdCookieName']);\n}\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampDoc\n * @param {string} clientIdScope\n * @param {string=} opt_clientIdCookieName\n * @param {number=} opt_timeout\n * @return {!Promise<string|undefined>} A promise for a CID or undefined.\n */\n\n\nfunction getOrCreateAdCid(ampDoc, clientIdScope, opt_clientIdCookieName, opt_timeout) {\n  var timeout = isNaN(opt_timeout) || opt_timeout == null ? 1000 : opt_timeout;\n\n  var cidPromise = _services.Services.cidForDoc(ampDoc).then(function (cidService) {\n    if (!cidService) {\n      return;\n    }\n\n    return cidService.get({\n      scope: (0, _log.dev)().assertString(clientIdScope),\n      createCookieIfNotPresent: true,\n      cookieName: opt_clientIdCookieName\n    }, Promise.resolve(undefined)).catch(function (error) {\n      // Not getting a CID is not fatal.\n      (0, _log.dev)().error('AD-CID', error);\n      return undefined;\n    });\n  }); // The CID should never be crucial for an ad. If it does not come within\n  // 1 second, assume it will never arrive.\n\n\n  return _services.Services.timerFor(ampDoc.win).timeoutPromise(timeout, cidPromise, 'cid timeout').catch(function (error) {\n    // Timeout is not fatal.\n    (0, _log.dev)().warn('AD-CID', error);\n    return undefined;\n  });\n}\n\n},{\"../ads/_config\":2,\"../src/log\":45,\"./services\":53}],20:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isAdPositionAllowed = isAdPositionAllowed;\nexports.getAdContainer = getAdContainer;\nexports.getAmpAdResourceId = getAmpAdResourceId;\n\nvar _style = require(\"./style\");\n\nvar _log = require(\"./log\");\n\nvar _service = require(\"./service\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar AD_CONTAINER_PROP = '__AMP__AD_CONTAINER';\n/**\n * Tags that are allowed to have fixed positioning\n * @const {!Object<string, boolean>}\n */\n\nvar CONTAINERS = {\n  'AMP-FX-FLYING-CARPET': true,\n  'AMP-LIGHTBOX': true,\n  'AMP-STICKY-AD': true,\n  'AMP-LIGHTBOX-GALLERY': true\n};\n/**\n * Determines if an element is fixed-positioned.\n * OK to use, because it's only called from onLayoutMeasure\n * @param {!Element} el\n * @param {!Window} win\n * @return {boolean}\n */\n\nfunction isPositionFixed(el, win) {\n  var _computedStyle = (0, _style.computedStyle)(win, el),\n      position = _computedStyle.position; // We consider sticky positions as fixed, since they can be fixed.\n\n\n  return position == 'fixed' || position == 'sticky';\n}\n/**\n * @param {!Element} element\n * @param {!Window} win\n * @return {boolean} whether the element position is allowed. If the element\n * belongs to CONTAINERS, it is allowed to be position fixed.\n * If the element has a position fixed ancestor, it is not allowed.\n * This should only be called when a layout on the page was just forced\n * anyway.\n */\n\n\nfunction isAdPositionAllowed(element, win) {\n  var hasFixedAncestor = false;\n  var containers = 0;\n  var el = element;\n\n  do {\n    if (CONTAINERS[el.tagName]) {\n      // The containers must not themselves be contained in a fixed-position\n      // element. Continue the search.\n      containers++;\n      hasFixedAncestor = false;\n    } else if (isPositionFixed((0, _log.dev)().assertElement(el), win)) {\n      // Because certain blessed elements may contain a position fixed\n      // container (which contain an ad), we continue to search the\n      // ancestry tree.\n      hasFixedAncestor = true;\n    }\n\n    el = el.parentElement;\n  } while (el && el.tagName != 'BODY');\n\n  return !hasFixedAncestor && containers <= 1;\n}\n/**\n * Returns the blessed container element tagName if the ad is contained by one.\n * This is called during layout measure.\n * @param {!Element} element\n * @return {?string}\n */\n\n\nfunction getAdContainer(element) {\n  if (element[AD_CONTAINER_PROP] === undefined) {\n    var el = element.parentElement;\n\n    while (el && el.tagName != 'BODY') {\n      if (CONTAINERS[el.tagName]) {\n        return element[AD_CONTAINER_PROP] = el.tagName;\n      }\n\n      el = el.parentElement;\n    }\n\n    element[AD_CONTAINER_PROP] = null;\n  }\n\n  return element[AD_CONTAINER_PROP];\n}\n/**\n * Gets the resource ID of the amp-ad element containing the passed node.\n * If there is no containing amp-ad tag, then null will be returned.\n * TODO(jonkeller): Investigate whether non-A4A use case is needed. Issue 11436\n * @param {!Element} node\n * @param {!Window} topWin\n * @return {?string}\n */\n\n\nfunction getAmpAdResourceId(node, topWin) {\n  try {\n    var frameParent = (0, _service.getParentWindowFrameElement)(node, topWin).parentElement;\n\n    if (frameParent.nodeName == 'AMP-AD') {\n      return String(frameParent.getResourceId());\n    }\n  } catch (e) {} // Whether we entered the catch above (e.g. due to attempt to access\n  // across xdomain boundary), or failed to enter the if further above, the\n  // node is not within a friendly amp-ad tag. So, there is no amp-ad\n  // resource ID. How to handle that is up to the caller, but see TODO above.\n\n\n  return null;\n}\n\n},{\"./log\":45,\"./service\":49,\"./style\":57}],21:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.AmpEvents = void 0;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common AMP events.\n * @enum {string}\n */\nvar AmpEvents = {\n  DOM_UPDATE: 'amp:dom-update',\n  FORM_DIRTINESS_CHANGE: 'amp:form-dirtiness-change',\n  FORM_VALUE_CHANGE: 'amp:form-value-change',\n  VISIBILITY_CHANGE: 'amp:visibilitychange',\n  // https://github.com/ampproject/amphtml/blob/master/ads/README.md#page-visibility\n  // The following codes are only used for testing.\n  // TODO(choumx): Move these to a separate enum so they can be DCE'd.\n  ATTACHED: 'amp:attached',\n  STUBBED: 'amp:stubbed',\n  LOAD_START: 'amp:load:start',\n  LOAD_END: 'amp:load:end',\n  ERROR: 'amp:error',\n  SIZE_CHANGED: 'amp:size-changed'\n};\nexports.AmpEvents = AmpEvents;\n\n},{}],22:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.triggerAnalyticsEvent = triggerAnalyticsEvent;\n\nvar _services = require(\"./services\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Helper method to trigger analytics event if amp-analytics is available.\n * TODO: Do not expose this function\n * @param {!Element} target\n * @param {string} eventType\n * @param {!JsonObject=} opt_vars A map of vars and their values.\n */\nfunction triggerAnalyticsEvent(target, eventType, opt_vars) {\n  _services.Services.analyticsForDocOrNull(target).then(function (analytics) {\n    if (!analytics) {\n      return;\n    }\n\n    analytics.triggerEventForTarget(target, eventType, opt_vars);\n  });\n}\n\n},{\"./services\":53}],23:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.CommonSignals = void 0;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Commonly used signals across different elements and documents.\n * @enum {string}\n */\nvar CommonSignals = {\n  /**\n   * The element has been upgraded from ElementStub to its real implementation.\n   */\n  UPGRADED: 'upgraded',\n\n  /**\n   * The element has been built.\n   */\n  BUILT: 'built',\n\n  /**\n   * The element has started loading.\n   * LOAD_START triggers at the start of the layoutCallback.\n   */\n  LOAD_START: 'load-start',\n\n  /**\n   * Rendering has been confirmed to have been started.\n   * It is a signal to indicate meaningful display (e.g. text could be displayed\n   * CSS is correctly installed/applied).\n   *\n   * Elements can optionally implement RENDER_START signal. (e.g. ad, shadowdoc)\n   * if it want to define its own meaningful display time and toggle visibility.\n   *\n   * Simpler elements's RENDER_START can be equal to the start of the\n   * buildCallback\n   */\n  RENDER_START: 'render-start',\n\n  /**\n   * The element has been loaded.\n   * LOAD_END triggers at the end of the layoutCallback.\n   *\n   */\n  LOAD_END: 'load-end',\n\n  /**\n   * The initial contents of an element/document/embed have been loaded.\n   * INI_LOAD is an optional signal, implemented by ads, story, and elements\n   * that consist of other resources.\n   * It instructs that all critical resources has been loaded, and can be used\n   * for more accurate visibility measurement.\n   * When an element doesn't consist multiple child resources, LOAD_END signal\n   * can be used to indicate resource load completion.\n   * Note: Based on the implementation, INI_LOAD can trigger before or after\n   * LOAD_END.\n   */\n  INI_LOAD: 'ini-load',\n\n  /**\n   * The element has been unlaid out.\n   */\n  UNLOAD: 'unload'\n};\nexports.CommonSignals = CommonSignals;\n\n},{}],24:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.config = exports.urls = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nvar env = self.AMP_CONFIG || {};\nvar thirdPartyFrameRegex = typeof env['thirdPartyFrameRegex'] == 'string' ? new RegExp(env['thirdPartyFrameRegex']) : env['thirdPartyFrameRegex'];\nvar cdnProxyRegex = typeof env['cdnProxyRegex'] == 'string' ? new RegExp(env['cdnProxyRegex']) : env['cdnProxyRegex'];\n/** @type {!Object<string, string|boolean|RegExp|Array<RegExp>>} */\n\nvar urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex: thirdPartyFrameRegex || /^d-\\d+\\.ampproject\\.net$/,\n  cdn: env['cdnUrl'] || 'https://cdn.ampproject.org',\n\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex: cdnProxyRegex || /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting: env['errorReportingUrl'] || 'https://amp-error-reporting.appspot.com/r',\n  localDev: env['localDev'] || false,\n\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/master/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [/(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/, /(^|\\.)gmail\\.dev$/]\n};\nexports.urls = urls;\nvar config = {\n  urls: urls\n};\nexports.config = config;\n\n},{}],25:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.CONSENT_POLICY_STATE = void 0;\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file will be imported by 3P scripts.\n\n/**\n * Possible consent policy state to proceed with.\n * @enum {number}\n */\nvar CONSENT_POLICY_STATE = {\n  // Enum value has external dependency. Please do not change existing value.\n  // If new values are added, please notify the AMP for Ads team to assure\n  // correct Real Time Config behavior is maintained for Fast Fetch.\n  SUFFICIENT: 1,\n  INSUFFICIENT: 2,\n  UNKNOWN_NOT_REQUIRED: 3,\n  UNKNOWN: 4\n};\nexports.CONSENT_POLICY_STATE = CONSENT_POLICY_STATE;\n\n},{}],26:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getConsentPolicyState = getConsentPolicyState;\nexports.getConsentPolicySharedData = getConsentPolicySharedData;\nexports.getConsentPolicyInfo = getConsentPolicyInfo;\nexports.shouldBlockOnConsentByMeta = shouldBlockOnConsentByMeta;\n\nvar _consentState = require(\"./consent-state\");\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a promise that resolve when all consent state the policy wait\n * for resolve. Or if consent service is not available.\n * @param {!Element|!ShadowRoot} element\n * @param {string=} policyId\n * @return {!Promise<?CONSENT_POLICY_STATE>}\n */\nfunction getConsentPolicyState(element, policyId) {\n  if (policyId === void 0) {\n    policyId = 'default';\n  }\n\n  return _services.Services.consentPolicyServiceForDocOrNull(element).then(function (consentPolicy) {\n    if (!consentPolicy) {\n      return null;\n    }\n\n    return consentPolicy.whenPolicyResolved(\n    /** @type {string} */\n    policyId);\n  });\n}\n/**\n * Returns a promise that resolves to a sharedData retrieved from consent\n * remote endpoint.\n * @param {!Element|!ShadowRoot} element\n * @param {string} policyId\n * @return {!Promise<?Object>}\n */\n\n\nfunction getConsentPolicySharedData(element, policyId) {\n  return _services.Services.consentPolicyServiceForDocOrNull(element).then(function (consentPolicy) {\n    if (!consentPolicy) {\n      return null;\n    }\n\n    return consentPolicy.getMergedSharedData(\n    /** @type {string} */\n    policyId);\n  });\n}\n/**\n * TODO(zhouyx): Combine with getConsentPolicyState and return a consentInfo\n * object.\n * @param {!Element|!ShadowRoot} element\n * @param {string} policyId\n * @return {!Promise<string>}\n */\n\n\nfunction getConsentPolicyInfo(element, policyId) {\n  // Return the stored consent string.\n  return _services.Services.consentPolicyServiceForDocOrNull(element).then(function (consentPolicy) {\n    if (!consentPolicy) {\n      return null;\n    }\n\n    return consentPolicy.getConsentStringInfo(\n    /** @type {string} */\n    policyId);\n  });\n}\n/**\n * Determine if an element needs to be blocked by consent based on metaTags.\n * @param {*} element\n * @return {boolean}\n */\n\n\nfunction shouldBlockOnConsentByMeta(element) {\n  var ampdoc = element.getAmpDoc();\n\n  var content = _services.Services.documentInfoForDoc(ampdoc).metaTags['amp-consent-blocking'];\n\n  if (!content) {\n    return false;\n  } // validator enforce uniqueness of <meta name='amp-consent-blocking'>\n  // content will not be an array.\n\n\n  if (typeof content !== 'string') {\n    (0, _log.user)().error('CONSENT', 'Invalid amp-consent-blocking value, ignore meta tag');\n    return false;\n  } // Handles whitespace\n\n\n  content = content.toUpperCase().replace(/\\s/g, '').split(',');\n\n  if (content.includes(element.tagName)) {\n    return true;\n  }\n\n  return false;\n}\n\n},{\"./consent-state\":25,\"./log\":45,\"./services\":53}],27:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.assertIsName = assertIsName;\nexports.setScopeSelectorSupportedForTesting = setScopeSelectorSupportedForTesting;\nexports.isScopeSelectorSupported = isScopeSelectorSupported;\nexports.prependSelectorsWith = prependSelectorsWith;\nexports.escapeCssSelectorIdent = escapeCssSelectorIdent;\nexports.escapeCssSelectorNth = escapeCssSelectorNth;\n\nvar _cssEscape = require(\"../third_party/css-escape/css-escape\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nfunction assertIsName(name) {\n  (0, _log.devAssert)(/^[\\w-]+$/.test(name));\n}\n/**\n * @type {boolean|undefined}\n */\n\n\nvar scopeSelectorSupported;\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\n\nfunction setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\n\n\nfunction isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return scopeSelectorSupported = testScopeSelector(el);\n}\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\n\n\nfunction testScopeSelector(el) {\n  try {\n    var doc = el.ownerDocument;\n    var testElement = doc.createElement('div');\n    var testChild = doc.createElement('div');\n    testElement.appendChild(testChild); // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n\n    return testElement.\n    /*OK*/\n    querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\n\n\nfunction prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, \"$&\" + distribute + \" \");\n}\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n */\n\n\nfunction escapeCssSelectorIdent(ident) {\n  return (0, _cssEscape.cssEscape)(ident);\n}\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\n\n\nfunction escapeCssSelectorNth(ident) {\n  var escaped = String(ident); // Ensure it doesn't close the nth-child psuedo class.\n\n  (0, _log.devAssert)(escaped.indexOf(')') === -1);\n  return escaped;\n}\n\n},{\"../third_party/css-escape/css-escape\":70,\"./log\":45}],28:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isDocumentReady = isDocumentReady;\nexports.onDocumentReady = onDocumentReady;\nexports.whenDocumentReady = whenDocumentReady;\nexports.whenDocumentComplete = whenDocumentComplete;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether the document is ready.\n * @param {!Document} doc\n * @return {boolean}\n */\nfunction isDocumentReady(doc) {\n  return doc.readyState != 'loading' && doc.readyState != 'uninitialized';\n}\n/**\n * Whether the document has loaded all the css and sub-resources.\n * @param {!Document} doc\n * @return {boolean}\n */\n\n\nfunction isDocumentComplete(doc) {\n  return doc.readyState == 'complete';\n}\n/**\n * Calls the callback when document is ready.\n * @param {!Document} doc\n * @param {function(!Document)} callback\n */\n\n\nfunction onDocumentReady(doc, callback) {\n  onDocumentState(doc, isDocumentReady, callback);\n}\n/**\n * Calls the callback when document's state satisfies the stateFn.\n * @param {!Document} doc\n * @param {function(!Document):boolean} stateFn\n * @param {function(!Document)} callback\n */\n\n\nfunction onDocumentState(doc, stateFn, callback) {\n  var ready = stateFn(doc);\n\n  if (ready) {\n    callback(doc);\n  } else {\n    var readyListener = function readyListener() {\n      if (stateFn(doc)) {\n        if (!ready) {\n          ready = true;\n          callback(doc);\n        }\n\n        doc.removeEventListener('readystatechange', readyListener);\n      }\n    };\n\n    doc.addEventListener('readystatechange', readyListener);\n  }\n}\n/**\n * Returns a promise that is resolved when document is ready.\n * @param {!Document} doc\n * @return {!Promise<!Document>}\n */\n\n\nfunction whenDocumentReady(doc) {\n  return new Promise(function (resolve) {\n    onDocumentReady(doc, resolve);\n  });\n}\n/**\n * Returns a promise that is resolved when document is complete.\n * @param {!Document} doc\n * @return {!Promise<!Document>}\n */\n\n\nfunction whenDocumentComplete(doc) {\n  return new Promise(function (resolve) {\n    onDocumentState(doc, isDocumentComplete, resolve);\n  });\n}\n\n},{}],29:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.waitForChild = waitForChild;\nexports.waitForChildPromise = waitForChildPromise;\nexports.waitForBodyOpen = waitForBodyOpen;\nexports.waitForBodyOpenPromise = waitForBodyOpenPromise;\nexports.removeElement = removeElement;\nexports.removeChildren = removeChildren;\nexports.copyChildren = copyChildren;\nexports.insertAfterOrAtStart = insertAfterOrAtStart;\nexports.addAttributesToElement = addAttributesToElement;\nexports.createElementWithAttributes = createElementWithAttributes;\nexports.isConnectedNode = isConnectedNode;\nexports.rootNodeFor = rootNodeFor;\nexports.isShadowRoot = isShadowRoot;\nexports.closest = closest;\nexports.closestNode = closestNode;\nexports.closestAncestorElementBySelector = closestAncestorElementBySelector;\nexports.ancestorElements = ancestorElements;\nexports.ancestorElementsByTag = ancestorElementsByTag;\nexports.childElement = childElement;\nexports.childElements = childElements;\nexports.lastChildElement = lastChildElement;\nexports.childNodes = childNodes;\nexports.childElementByAttr = childElementByAttr;\nexports.lastChildElementByAttr = lastChildElementByAttr;\nexports.childElementsByAttr = childElementsByAttr;\nexports.childElementByTag = childElementByTag;\nexports.childElementsByTag = childElementsByTag;\nexports.matches = matches;\nexports.elementByTag = elementByTag;\nexports.scopedQuerySelector = scopedQuerySelector;\nexports.scopedQuerySelectorAll = scopedQuerySelectorAll;\nexports.getDataParamsFromAttributes = getDataParamsFromAttributes;\nexports.hasNextNodeInDocumentOrder = hasNextNodeInDocumentOrder;\nexports.templateContentClone = templateContentClone;\nexports.iterateCursor = iterateCursor;\nexports.openWindowDialog = openWindowDialog;\nexports.isJsonScriptTag = isJsonScriptTag;\nexports.isJsonLdScriptTag = isJsonLdScriptTag;\nexports.isRTL = isRTL;\nexports.escapeHtml = escapeHtml;\nexports.tryFocus = tryFocus;\nexports.isIframed = isIframed;\nexports.isAmpElement = isAmpElement;\nexports.whenUpgradedToCustomElement = whenUpgradedToCustomElement;\nexports.fullscreenEnter = fullscreenEnter;\nexports.fullscreenExit = fullscreenExit;\nexports.isFullscreenElement = isFullscreenElement;\nexports.isEnabled = isEnabled;\nexports.domOrderComparator = domOrderComparator;\nexports.toggleAttribute = toggleAttribute;\nexports.getVerticalScrollbarWidth = getVerticalScrollbarWidth;\nexports.UPGRADE_TO_CUSTOMELEMENT_RESOLVER = exports.UPGRADE_TO_CUSTOMELEMENT_PROMISE = void 0;\n\nvar _promise = require(\"./utils/promise\");\n\nvar _css = require(\"./css\");\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object\");\n\nvar _string = require(\"./string\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;'\n};\nvar HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n/** @const {string} */\n\nvar UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n/** @const {string} */\n\nexports.UPGRADE_TO_CUSTOMELEMENT_PROMISE = UPGRADE_TO_CUSTOMELEMENT_PROMISE;\nvar UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\n\nexports.UPGRADE_TO_CUSTOMELEMENT_RESOLVER = UPGRADE_TO_CUSTOMELEMENT_RESOLVER;\n\nfunction waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n\n\n  var win = (0, _types.toWin)(parent.ownerDocument.defaultView);\n\n  if (win.MutationObserver) {\n    /** @const {MutationObserver} */\n    var observer = new win.MutationObserver(function () {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {\n      childList: true\n    });\n  } else {\n    /** @const {number} */\n    var interval = win.setInterval(function () {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    },\n    /* milliseconds */\n    5);\n  }\n}\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\n\n\nfunction waitForChildPromise(parent, checkFunc) {\n  return new Promise(function (resolve) {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\n\n\nfunction waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, function () {\n    return !!doc.body;\n  }, callback);\n}\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\n\n\nfunction waitForBodyOpenPromise(doc) {\n  return new Promise(function (resolve) {\n    return waitForBodyOpen(doc, resolve);\n  });\n}\n/**\n * Removes the element.\n * @param {!Element} element\n */\n\n\nfunction removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element} parent\n */\n\n\nfunction removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\n\n\nfunction copyChildren(from, to) {\n  var frag = to.ownerDocument.createDocumentFragment();\n\n  for (var n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n\n  to.appendChild(frag);\n}\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node} after\n */\n\n\nfunction insertAfterOrAtStart(root, element, after) {\n  var before = after ? after.nextSibling : root.firstChild;\n  root.insertBefore(element, before);\n}\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\n\n\nfunction addAttributesToElement(element, attributes) {\n  for (var attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n\n  return element;\n}\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\n\n\nfunction createElementWithAttributes(doc, tagName, attributes) {\n  var element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\n\n\nfunction isConnectedNode(node) {\n  var connected = node.isConnected;\n\n  if (connected !== undefined) {\n    return connected;\n  } // \"An element is connected if its shadow-including root is a document.\"\n\n\n  var n = node;\n\n  do {\n    n = rootNodeFor(n);\n\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\n\n\nfunction rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n\n  var n; // Check isShadowRoot() is only needed for the polyfill case.\n\n  for (n = node; !!n.parentNode && !isShadowRoot(n); n = n.parentNode) {}\n\n  return n;\n}\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isShadowRoot(value) {\n  // TODO(#22733): remove in preference to dom's `rootNodeFor`.\n  if (!value) {\n    return false;\n  } // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n\n\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n\n  return value.nodeType ==\n  /* DOCUMENT_FRAGMENT */\n  11 && Object.prototype.toString.call(value) === '[object ShadowRoot]';\n}\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\n\n\nfunction closest(element, callback, opt_stopAt) {\n  for (var el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\n\n\nfunction closestNode(node, callback) {\n  for (var n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\n\n\nfunction closestAncestorElementBySelector(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  return closest(element, function (el) {\n    return matches(el, selector);\n  });\n}\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\n\n\nfunction ancestorElements(child, predicate) {\n  var ancestors = [];\n\n  for (var ancestor = child.parentElement; ancestor; ancestor = ancestor.parentElement) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n\n  return ancestors;\n}\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\n\n\nfunction ancestorElementsByTag(child, tagName) {\n  (0, _css.assertIsName)(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, function (el) {\n    return el.tagName == tagName;\n  });\n}\n/**\n * Finds the first child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\n\n\nfunction childElement(parent, callback) {\n  for (var child = parent.firstElementChild; child; child = child.nextElementSibling) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\n\n\nfunction childElements(parent, callback) {\n  var children = [];\n\n  for (var child = parent.firstElementChild; child; child = child.nextElementSibling) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n\n  return children;\n}\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\n\n\nfunction lastChildElement(parent, callback) {\n  for (var child = parent.lastElementChild; child; child = child.previousElementSibling) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\n\n\nfunction childNodes(parent, callback) {\n  var nodes = [];\n\n  for (var child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n\n  return nodes;\n}\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\n\n\nfunction childElementByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return (\n    /*OK*/\n    scopedQuerySelector(parent, \"> [\" + attr + \"]\")\n  );\n}\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\n\n\nfunction lastChildElementByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return lastChildElement(parent, function (el) {\n    return el.hasAttribute(attr);\n  });\n}\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\n\n\nfunction childElementsByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return (\n    /*OK*/\n    scopedQuerySelectorAll(parent, \"> [\" + attr + \"]\")\n  );\n}\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {?Element}\n */\n\n\nfunction childElementByTag(parent, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return (\n    /*OK*/\n    scopedQuerySelector(parent, \"> \" + tagName)\n  );\n}\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\n\n\nfunction childElementsByTag(parent, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return (\n    /*OK*/\n    scopedQuerySelectorAll(parent, \"> \" + tagName)\n  );\n}\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\n\n\nfunction matches(el, selector) {\n  var matcher = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector || el.oMatchesSelector;\n\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n\n  return false; // IE8 always returns false.\n}\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\n\n\nfunction elementByTag(element, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return element.\n  /*OK*/\n  querySelector(tagName);\n}\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\n\n\nfunction scopedQuerySelectionFallback(root, selector) {\n  var unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  var scopedSelector = (0, _css.prependSelectorsWith)(selector, \".\" + unique);\n  var elements = root.\n  /*OK*/\n  querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {?Element}\n */\n\n\nfunction scopedQuerySelector(root, selector) {\n  if ((0, _css.isScopeSelectorSupported)(root)) {\n    return root.\n    /*OK*/\n    querySelector((0, _css.prependSelectorsWith)(selector, ':scope'));\n  } // Only IE.\n\n\n  var fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\n\n\nfunction scopedQuerySelectorAll(root, selector) {\n  if ((0, _css.isScopeSelectorSupported)(root)) {\n    return root.\n    /*OK*/\n    querySelectorAll((0, _css.prependSelectorsWith)(selector, ':scope'));\n  } // Only IE.\n\n\n  return scopedQuerySelectionFallback(root, selector);\n}\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!Element} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\n\n\nfunction getDataParamsFromAttributes(element, opt_computeParamNameFunc, opt_paramPattern) {\n  var computeParamNameFunc = opt_computeParamNameFunc || function (key) {\n    return key;\n  };\n\n  var dataset = element.dataset;\n  var params = (0, _object.dict)();\n  var paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n\n  for (var key in dataset) {\n    var _matches = key.match(paramPattern);\n\n    if (_matches) {\n      var param = _matches[1][0].toLowerCase() + _matches[1].substr(1);\n\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n\n  return params;\n}\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\n\n\nfunction hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  var currentElement = element;\n\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while ((currentElement = currentElement.parentNode) && currentElement != opt_stopNode);\n\n  return false;\n}\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\n\n\nfunction templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    var content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\n\n\nfunction iterateCursor(iterable, cb) {\n  var length = iterable.length;\n\n  for (var i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\n\n\nfunction openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  var res;\n\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    (0, _log.dev)().error('DOM', 'Failed to open url on target: ', target, e);\n  } // Then try with `_top` target.\n\n\n  if (!res && target != '_top' && !(0, _string.includes)(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n\n  return res;\n}\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isJsonScriptTag(element) {\n  return element.tagName == 'SCRIPT' && element.hasAttribute('type') && element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON';\n}\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isJsonLdScriptTag(element) {\n  return element.tagName == 'SCRIPT' && element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON';\n}\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\n\n\nfunction isRTL(doc) {\n  var dir = doc.body.getAttribute('dir') || doc.documentElement.getAttribute('dir') || 'ltr';\n  return dir == 'rtl';\n}\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\n\n\nfunction escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n/**\n * @param {string} c\n * @return {string}\n */\n\n\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\n\n\nfunction tryFocus(element) {\n  try {\n    element.\n    /*OK*/\n    focus();\n  } catch (e) {// IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nfunction isIframed(win) {\n  return win.parent && win.parent != win;\n}\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isAmpElement(element) {\n  var tag = element.tagName; // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n\n  return (0, _string.startsWith)(tag, 'AMP-') && // Some \"amp-*\" elements are not really AMP elements. :smh:\n  !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY');\n}\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!Element} element\n * @return {!Promise<!Element>}\n */\n\n\nfunction whenUpgradedToCustomElement(element) {\n  (0, _log.devAssert)(isAmpElement(element), 'element is not AmpElement');\n\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(element);\n  } // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n\n\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    var deferred = new _promise.Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n/**\n * Replacement for `Element.requestFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n * @param {!Element} element\n */\n\n\nfunction fullscreenEnter(element) {\n  var requestFs = element.requestFullscreen || element.requestFullScreen || element.webkitRequestFullscreen || element.webkitEnterFullscreen || element.msRequestFullscreen || element.mozRequestFullScreen;\n\n  if (requestFs) {\n    requestFs.call(element);\n  }\n}\n/**\n * Replacement for `Document.exitFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/exitFullscreen\n * @param {!Element} element\n */\n\n\nfunction fullscreenExit(element) {\n  var elementBoundExit = element.cancelFullScreen || element.exitFullscreen || element.webkitExitFullscreen || element.webkitCancelFullScreen || element.mozCancelFullScreen || element.msExitFullscreen;\n\n  if (elementBoundExit) {\n    elementBoundExit.call(element);\n    return;\n  }\n\n  var ownerDocument = element.ownerDocument;\n\n  if (!ownerDocument) {\n    return;\n  }\n\n  var docBoundExit = ownerDocument.cancelFullScreen || ownerDocument.exitFullscreencancelFullScreen || ownerDocument.webkitExitFullscreencancelFullScreen || ownerDocument.webkitCancelFullScreencancelFullScreen || ownerDocument.mozCancelFullScreencancelFullScreen || ownerDocument.msExitFullscreen;\n\n  if (docBoundExit) {\n    docBoundExit.call(ownerDocument);\n  }\n}\n/**\n * Replacement for `Document.fullscreenElement`.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenElement\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isFullscreenElement(element) {\n  var webkitDisplayingFullscreen = element.webkitDisplayingFullscreen;\n\n  if (webkitDisplayingFullscreen !== undefined) {\n    return webkitDisplayingFullscreen;\n  }\n\n  var ownerDocument = element.ownerDocument;\n\n  if (!ownerDocument) {\n    return false;\n  }\n\n  var fullscreenElement = ownerDocument.fullscreenElement || ownerDocument.webkitFullscreenElement || ownerDocument.mozFullScreenElement || ownerDocument.webkitCurrentFullScreenElement;\n  return fullscreenElement == element;\n}\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!Element} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\n\n\nfunction isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\n\n\nfunction domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  var pos = element1.compareDocumentPosition(element2);\n  var precedingOrContains = Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS; // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n\n  if (pos & precedingOrContains) {\n    return 1;\n  } // if fe2 is following or contained by fe1, then fe1 is before fe2\n\n\n  return -1;\n}\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\n\n\nfunction toggleAttribute(element, name, forced) {\n  var hasAttribute = element.hasAttribute(name);\n  var enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\n\n\nfunction getVerticalScrollbarWidth(win) {\n  var documentElement = win.document.documentElement;\n  var windowWidth = win.\n  /*OK*/\n  innerWidth;\n  var documentWidth = documentElement.\n  /*OK*/\n  clientWidth;\n  return windowWidth - documentWidth;\n}\n\n},{\"./css\":27,\"./log\":45,\"./string\":55,\"./types\":58,\"./utils/object\":67,\"./utils/promise\":68}],30:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getElementService = getElementService;\nexports.getElementServiceIfAvailable = getElementServiceIfAvailable;\nexports.getElementServiceForDoc = getElementServiceForDoc;\nexports.getElementServiceIfAvailableForDoc = getElementServiceIfAvailableForDoc;\nexports.getElementServiceIfAvailableForDocInEmbedScope = getElementServiceIfAvailableForDocInEmbedScope;\nexports.extensionScriptsInNode = extensionScriptsInNode;\nexports.isExtensionScriptInNode = isExtensionScriptInNode;\n\nvar dom = _interopRequireWildcard(require(\"./dom\"));\n\nvar _service = require(\"./service\");\n\nvar _types = require(\"./types\");\n\nvar _log = require(\"./log\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nfunction getElementService(win, id, extension, opt_element) {\n  return getElementServiceIfAvailable(win, id, extension, opt_element).then(function (service) {\n    return assertService(service, id, extension);\n  });\n}\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailable(win, id, extension, opt_element) {\n  var s = (0, _service.getServicePromiseOrNull)(win, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      s\n    );\n  }\n\n  return getElementServicePromiseOrNull(win, id, extension, opt_element);\n}\n/**\n * @param {!Window} win\n * @param {string} elementName Name of an extended custom element.\n * @return {boolean} Whether this element is scheduled to be loaded.\n */\n\n\nfunction isElementScheduled(win, elementName) {\n  // Set in custom-element.js\n  if (!win.__AMP_EXTENDED_ELEMENTS) {\n    return false;\n  }\n\n  return !!win.__AMP_EXTENDED_ELEMENTS[elementName];\n}\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\n\n\nfunction getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(element, id, extension, opt_element).then(function (service) {\n    return assertService(service, id, extension);\n  });\n}\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailableForDoc(element, id, extension, opt_element) {\n  var s = (0, _service.getServicePromiseOrNullForDoc)(element, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      s\n    );\n  }\n\n  var ampdoc = (0, _service.getAmpdoc)(element);\n  return ampdoc.waitForBodyOpen().then(function () {\n    return waitForExtensionIfPresent(ampdoc.win, extension, ampdoc.win.document.head);\n  }).then(function () {\n    // If this service is provided by an element, then we can't depend on\n    // the service (they may not use the element).\n    if (opt_element) {\n      return (0, _service.getServicePromiseOrNullForDoc)(element, id);\n    } else if (isElementScheduled(ampdoc.win, extension)) {\n      return (0, _service.getServicePromiseForDoc)(element, id);\n    }\n\n    return null;\n  });\n}\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailableForDocInEmbedScope(element, id, extension) {\n  var s = (0, _service.getExistingServiceForDocInEmbedScope)(element, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      Promise.resolve(s)\n    );\n  }\n\n  var win = (0, _types.toWin)(element.ownerDocument.defaultView);\n  var topWin = (0, _service.getTopWindow)(win); // In embeds, doc services are stored on the embed window.\n\n  if (win !== topWin) {\n    return getElementServicePromiseOrNull(win, id, extension);\n  } else {\n    // Only fallback to element's ampdoc (top-level) if not embedded.\n    return getElementServiceIfAvailableForDoc(element, id, extension);\n  }\n}\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction assertService(service, id, extension) {\n  return (\n    /** @type {!Object} */\n    (0, _log.userAssert)(service, 'Service %s was requested to be provided through %s, ' + 'but %s is not loaded in the current page. To fix this ' + 'problem load the JavaScript file for %s in this page.', id, extension, extension, extension)\n  );\n}\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Array<string>}\n */\n\n\nfunction extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n\n  var scripts = {}; // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n\n  var list = head.querySelectorAll('script[custom-element],script[custom-template]');\n\n  for (var i = 0; i < list.length; i++) {\n    var script = list[i];\n    var name = script.getAttribute('custom-element') || script.getAttribute('custom-template');\n    scripts[name] = true;\n  }\n\n  return Object.keys(scripts);\n}\n/**\n * Waits for body to be present then verifies that an extension script is\n * present in head for installation.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} extensionId\n * @return {!Promise<boolean>}\n */\n\n\nfunction isExtensionScriptInNode(ampdoc, extensionId) {\n  return ampdoc.waitForBodyOpen().then(function () {\n    return extensionScriptInNode(ampdoc.getHeadNode(), extensionId);\n  });\n}\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @param {string} extensionId\n * @return {boolean}\n * @private\n */\n\n\nfunction extensionScriptInNode(head, extensionId) {\n  return extensionScriptsInNode(head).includes(extensionId);\n}\n/**\n * Waits for an extension if its script is present\n * @param {!Window} win\n * @param {string} extension\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Promise}\n * @private\n */\n\n\nfunction waitForExtensionIfPresent(win, extension, head) {\n  /**\n   * If there is an extension script wait for it to load before trying\n   * to get the service. Prevents a race condition when everything but\n   * the extensions is in cache. If there is no script then it's either\n   * not present, or the service was defined by a test. In those cases\n   * we don't wait around for an extension that does not exist.\n   */\n  // TODO(jpettitt) investigate registerExtension to short circuit\n  // the dom call in extensionScriptsInNode()\n  if (!extensionScriptInNode(head, extension)) {\n    return Promise.resolve();\n  }\n\n  var extensions = (0, _service.getService)(win, 'extensions');\n  return (\n    /** @type {!Promise<?Object>} */\n    extensions.waitForExtension(win, extension)\n  );\n}\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\n\n\nfunction getElementServicePromiseOrNull(win, id, extension, opt_element) {\n  return dom.waitForBodyOpenPromise(win.document).then(function () {\n    return waitForExtensionIfPresent(win, extension, win.document.head);\n  }).then(function () {\n    // If this service is provided by an element, then we can't depend on\n    // the service (they may not use the element).\n    if (opt_element) {\n      return (0, _service.getServicePromiseOrNull)(win, id);\n    } else if (isElementScheduled(win, extension)) {\n      return (0, _service.getServicePromise)(win, id);\n    }\n\n    return null;\n  });\n}\n\n},{\"./dom\":29,\"./log\":45,\"./service\":49,\"./types\":58}],31:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.reportErrorForWin = reportErrorForWin;\nexports.reportError = reportError;\nexports.cancellation = cancellation;\nexports.isCancellation = isCancellation;\nexports.blockedByConsentError = blockedByConsentError;\nexports.isBlockedByConsent = isBlockedByConsent;\nexports.installErrorReporting = installErrorReporting;\nexports.reportErrorToServerOrViewer = reportErrorToServerOrViewer;\nexports.maybeReportErrorToViewer = maybeReportErrorToViewer;\nexports.errorReportingDataForViewer = errorReportingDataForViewer;\nexports.getErrorReportData = getErrorReportData;\nexports.detectNonAmpJs = detectNonAmpJs;\nexports.resetAccumulatedErrorMessagesForTesting = resetAccumulatedErrorMessagesForTesting;\nexports.detectJsEngineFromStack = detectJsEngineFromStack;\nexports.reportErrorToAnalytics = reportErrorToAnalytics;\n\nvar _ampEvents = require(\"./amp-events\");\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object\");\n\nvar _experiments = require(\"./experiments\");\n\nvar _exponentialBackoff = require(\"./exponential-backoff\");\n\nvar _mode = require(\"./mode\");\n\nvar _eventHelper = require(\"./event-helper\");\n\nvar _url = require(\"./url\");\n\nvar _styleInstaller = require(\"./style-installer\");\n\nvar _string = require(\"./string\");\n\nvar _analytics = require(\"./analytics\");\n\nvar _config = require(\"./config\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @const {string}\n */\nvar CANCELLED = 'CANCELLED';\n/**\n * @const {string}\n */\n\nvar BLOCK_BY_CONSENT = 'BLOCK_BY_CONSENT';\n/**\n * @const {string}\n */\n\nvar ABORTED = 'AbortError';\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\n\nvar NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD = 0.001;\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\n\nvar USER_ERROR_THROTTLE_THRESHOLD = 0.1;\n/**\n * Collects error messages, so they can be included in subsequent reports.\n * That allows identifying errors that might be caused by previous errors.\n */\n\nvar accumulatedErrorMessages = self.__AMP_ERRORS || []; // Use a true global, to avoid multi-module inclusion issues.\n\nself.__AMP_ERRORS = accumulatedErrorMessages;\n/**\n * Pushes element into array, keeping at most the most recent limit elements\n *\n * @param {!Array<T>} array\n * @param {T} element\n * @param {number} limit\n * @template T\n */\n\nfunction pushLimit(array, element, limit) {\n  if (array.length >= limit) {\n    array.splice(0, array.length - limit + 1);\n  }\n\n  array.push(element);\n}\n/**\n * A wrapper around our exponentialBackoff, to lazy initialize it to avoid an\n * un-DCE'able side-effect.\n * @param {function()} work the function to execute after backoff\n * @return {number} the setTimeout id\n */\n\n\nvar _reportingBackoff = function reportingBackoff(work) {\n  // Set reportingBackoff as the lazy-created function. JS Vooodoooo.\n  _reportingBackoff = (0, _exponentialBackoff.exponentialBackoff)(1.5);\n  return _reportingBackoff(work);\n};\n/**\n * Attempts to stringify a value, falling back to String.\n * @param {*} value\n * @return {string}\n */\n\n\nfunction tryJsonStringify(value) {\n  try {\n    // Cast is fine, because we really don't care here. Just trying.\n    return JSON.stringify(\n    /** @type {!JsonObject} */\n    value);\n  } catch (e) {\n    return String(value);\n  }\n}\n/**\n * The true JS engine, as detected by inspecting an Error stack. This should be\n * used with the userAgent to tell definitely. I.e., Chrome on iOS is really a\n * Safari JS engine.\n */\n\n\nvar detectedJsEngine;\n/**\n * @param {!Window} win\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n */\n\nfunction reportErrorForWin(win, error, opt_associatedElement) {\n  reportError(error, opt_associatedElement);\n\n  if (error && !!win && (0, _log.isUserErrorMessage)(error.message) && !(0, _log.isUserErrorEmbed)(error.message)) {\n    reportErrorToAnalytics(\n    /** @type {!Error} */\n    error, win);\n  }\n}\n/**\n * Reports an error. If the error has an \"associatedElement\" property\n * the element is marked with the `i-amphtml-element-error` and displays\n * the message itself. The message is always send to the console.\n * If the error has a \"messageArray\" property, that array is logged.\n * This way one gets the native fidelity of the console for things like\n * elements instead of stringification.\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n * @return {!Error}\n */\n\n\nfunction reportError(error, opt_associatedElement) {\n  try {\n    // Convert error to the expected type.\n    var isValidError;\n\n    if (error) {\n      if (error.message !== undefined) {\n        error = (0, _log.duplicateErrorIfNecessary)(\n        /** @type {!Error} */\n        error);\n        isValidError = true;\n      } else {\n        var origError = error;\n        error = new Error(tryJsonStringify(origError));\n        error.origError = origError;\n      }\n    } else {\n      error = new Error('Unknown error');\n    } // Report if error is not an expected type.\n\n\n    if (!isValidError && (0, _mode.getMode)().localDev && !(0, _mode.getMode)().test) {\n      setTimeout(function () {\n        var rethrow = new Error('_reported_ Error reported incorrectly: ' + error);\n        throw rethrow;\n      });\n    }\n\n    if (error.reported) {\n      return (\n        /** @type {!Error} */\n        error\n      );\n    }\n\n    error.reported = true; // Update element.\n\n    var element = opt_associatedElement || error.associatedElement;\n\n    if (element && element.classList) {\n      element.classList.add('i-amphtml-error');\n\n      if ((0, _mode.getMode)().development) {\n        element.classList.add('i-amphtml-element-error');\n        element.setAttribute('error-message', error.message);\n      }\n    } // Report to console.\n\n\n    if (self.console) {\n      var output = console.error || console.log;\n\n      if (error.messageArray) {\n        output.apply(console, error.messageArray);\n      } else {\n        if (element) {\n          output.call(console, error.message, element);\n        } else if (!(0, _mode.getMode)().minified) {\n          output.call(console, error.stack);\n        } else {\n          output.call(console, error.message);\n        }\n      }\n    }\n\n    if (element && element.dispatchCustomEventForTesting) {\n      element.dispatchCustomEventForTesting(_ampEvents.AmpEvents.ERROR, error.message);\n    } // 'call' to make linter happy. And .call to make compiler happy\n    // that expects some @this.\n\n\n    onError['call'](undefined, undefined, undefined, undefined, undefined, error);\n  } catch (errorReportingError) {\n    setTimeout(function () {\n      throw errorReportingError;\n    });\n  }\n\n  return (\n    /** @type {!Error} */\n    error\n  );\n}\n/**\n * Returns an error for a cancellation of a promise.\n * @return {!Error}\n */\n\n\nfunction cancellation() {\n  return new Error(CANCELLED);\n}\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\n\n\nfunction isCancellation(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n\n  if (typeof errorOrMessage == 'string') {\n    return (0, _string.startsWith)(errorOrMessage, CANCELLED);\n  }\n\n  if (typeof errorOrMessage.message == 'string') {\n    return (0, _string.startsWith)(errorOrMessage.message, CANCELLED);\n  }\n\n  return false;\n}\n/**\n * Returns an error for component blocked by consent\n * @return {!Error}\n */\n\n\nfunction blockedByConsentError() {\n  return new Error(BLOCK_BY_CONSENT);\n}\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\n\n\nfunction isBlockedByConsent(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n\n  if (typeof errorOrMessage == 'string') {\n    return (0, _string.startsWith)(errorOrMessage, BLOCK_BY_CONSENT);\n  }\n\n  if (typeof errorOrMessage.message == 'string') {\n    return (0, _string.startsWith)(errorOrMessage.message, BLOCK_BY_CONSENT);\n  }\n\n  return false;\n}\n/**\n * Install handling of global unhandled exceptions.\n * @param {!Window} win\n */\n\n\nfunction installErrorReporting(win) {\n  win.onerror =\n  /** @type {!Function} */\n  onError;\n  win.addEventListener('unhandledrejection', function (event) {\n    if (event.reason && (event.reason.message === CANCELLED || event.reason.message === BLOCK_BY_CONSENT || event.reason.message === ABORTED)) {\n      event.preventDefault();\n      return;\n    }\n\n    reportError(event.reason || new Error('rejected promise ' + event));\n  });\n}\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @this {!Window|undefined}\n */\n\n\nfunction onError(message, filename, line, col, error) {\n  var _this = this;\n\n  // Make an attempt to unhide the body.\n  if (this && this.document) {\n    (0, _styleInstaller.makeBodyVisibleRecovery)(this.document);\n  }\n\n  if ((0, _mode.getMode)().localDev || (0, _mode.getMode)().development || (0, _mode.getMode)().test) {\n    return;\n  }\n\n  var hasNonAmpJs = false;\n\n  try {\n    hasNonAmpJs = detectNonAmpJs(self);\n  } catch (ignore) {// Ignore errors during error report generation.\n  }\n\n  if (hasNonAmpJs && Math.random() > 0.01) {\n    // Only report 1% of errors on pages with non-AMP JS.\n    // These errors can almost never be acted upon, but spikes such as\n    // due to buggy browser extensions may be helpful to notify authors.\n    return;\n  }\n\n  var data = getErrorReportData(message, filename, line, col, error, hasNonAmpJs);\n\n  if (data) {\n    _reportingBackoff(function () {\n      try {\n        return reportErrorToServerOrViewer(_this,\n        /** @type {!JsonObject} */\n        data).catch(function () {// catch async errors to avoid recursive errors.\n        });\n      } catch (e) {// catch async errors to avoid recursive errors.\n      }\n    });\n  }\n}\n/**\n * Passes the given error data to either server or viewer.\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {Promise<undefined>}\n */\n\n\nfunction reportErrorToServerOrViewer(win, data) {\n  // Report the error to viewer if it has the capability. The data passed\n  // to the viewer is exactly the same as the data passed to the server\n  // below.\n  return maybeReportErrorToViewer(win, data).then(function (reportedErrorToViewer) {\n    if (!reportedErrorToViewer) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('POST', _config.urls.errorReporting, true);\n      xhr.send(JSON.stringify(data));\n    }\n  });\n}\n/**\n * Passes the given error data to the viewer if the following criteria is met:\n * - The viewer is a trusted viewer\n * - The viewer has the `errorReporter` capability\n * - The AMP doc is in single doc mode\n * - The AMP doc is opted-in for error interception (`<html>` tag has the\n *   `report-errors-to-viewer` attribute)\n *\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {!Promise<boolean>} `Promise<True>` if the error was sent to the\n *     viewer, `Promise<False>` otherwise.\n * @visibleForTesting\n */\n\n\nfunction maybeReportErrorToViewer(win, data) {\n  var ampdocService = _services.Services.ampdocServiceFor(win);\n\n  if (!ampdocService.isSingleDoc()) {\n    return Promise.resolve(false);\n  }\n\n  var ampdocSingle = ampdocService.getSingleDoc();\n  var htmlElement = ampdocSingle.getRootNode().documentElement;\n  var docOptedIn = htmlElement.hasAttribute('report-errors-to-viewer');\n\n  if (!docOptedIn) {\n    return Promise.resolve(false);\n  }\n\n  var viewer = _services.Services.viewerForDoc(ampdocSingle);\n\n  if (!viewer.hasCapability('errorReporter')) {\n    return Promise.resolve(false);\n  }\n\n  return viewer.isTrustedViewer().then(function (viewerTrusted) {\n    if (!viewerTrusted) {\n      return false;\n    }\n\n    viewer.sendMessage('error', errorReportingDataForViewer(data));\n    return true;\n  });\n}\n/**\n * Strips down the error reporting data to a minimal set\n * to be sent to the viewer.\n * @param {!JsonObject} errorReportData\n * @return {!JsonObject}\n * @visibleForTesting\n */\n\n\nfunction errorReportingDataForViewer(errorReportData) {\n  return (0, _object.dict)({\n    'm': errorReportData['m'],\n    // message\n    'a': errorReportData['a'],\n    // isUserError\n    's': errorReportData['s'],\n    // error stack\n    'el': errorReportData['el'],\n    // tagName\n    'ex': errorReportData['ex'],\n    // expected error?\n    'v': errorReportData['v'],\n    // runtime\n    'jse': errorReportData['jse'] // detectedJsEngine\n\n  });\n}\n/**\n * @param {string|undefined}  message\n * @param {*|undefined} error\n * @return {string}\n */\n\n\nfunction buildErrorMessage_(message, error) {\n  if (error) {\n    if (error.message) {\n      message = error.message;\n    } else {\n      // This should never be a string, but sometimes it is.\n      message = String(error);\n    }\n  }\n\n  if (!message) {\n    message = 'Unknown error';\n  }\n\n  return message;\n}\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @param {boolean} hasNonAmpJs\n * @return {!JsonObject|undefined} The data to post\n * visibleForTesting\n */\n\n\nfunction getErrorReportData(message, filename, line, col, error, hasNonAmpJs) {\n  message = buildErrorMessage_(message, error); // An \"expected\" error is still an error, i.e. some features are disabled\n  // or not functioning fully because of it. However, it's an expected\n  // error. E.g. as is the case with some browser API missing (storage).\n  // Thus, the error can be classified differently by log aggregators.\n  // The main goal is to monitor that an \"expected\" error doesn't deteriorate\n  // over time. It's impossible to completely eliminate it.\n\n  var expected = !!(error && error.expected);\n\n  if (/_reported_/.test(message)) {\n    return;\n  }\n\n  if (message == CANCELLED) {\n    return;\n  }\n\n  var detachedWindow = !(self && self.window);\n  var throttleBase = Math.random(); // We throttle load errors and generic \"Script error.\" errors\n  // that have no information and thus cannot be acted upon.\n\n  if ((0, _eventHelper.isLoadErrorMessage)(message) || // See https://github.com/ampproject/amphtml/issues/7353\n  // for context.\n  message == 'Script error.' || // Window has become detached, really anything can happen\n  // at this point.\n  detachedWindow) {\n    expected = true;\n\n    if (throttleBase > NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD) {\n      return;\n    }\n  }\n\n  var isUserError = (0, _log.isUserErrorMessage)(message); // Only report a subset of user errors.\n\n  if (isUserError && throttleBase > USER_ERROR_THROTTLE_THRESHOLD) {\n    return;\n  } // This is the App Engine app in\n  // https://github.com/ampproject/error-tracker\n  // It stores error reports via https://cloud.google.com/error-reporting/\n  // for analyzing production issues.\n\n\n  var data =\n  /** @type {!JsonObject} */\n  Object.create(null);\n  data['v'] = (0, _mode.getMode)().rtvVersion;\n  data['noAmp'] = hasNonAmpJs ? '1' : '0';\n  data['m'] = message.replace(_log.USER_ERROR_SENTINEL, '');\n  data['a'] = isUserError ? '1' : '0'; // Errors are tagged with \"ex\" (\"expected\") label to allow loggers to\n  // classify these errors as benchmarks and not exceptions.\n\n  data['ex'] = expected ? '1' : '0';\n  data['dw'] = detachedWindow ? '1' : '0';\n  var runtime = '1p';\n\n  if (self.context && self.context.location) {\n    data['3p'] = '1';\n    runtime = '3p';\n  } else if ((0, _mode.getMode)().runtime) {\n    runtime = (0, _mode.getMode)().runtime;\n  }\n\n  if ((0, _mode.getMode)().singlePassType) {\n    data['spt'] = (0, _mode.getMode)().singlePassType;\n  }\n\n  data['rt'] = runtime; // Add our a4a id if we are inabox\n\n  if (runtime === 'inabox') {\n    data['adid'] = (0, _mode.getMode)().a4aId;\n  } // TODO(erwinm): Remove ca when all systems read `bt` instead of `ca` to\n  // identify js binary type.\n\n\n  data['ca'] = (0, _experiments.isCanary)(self) ? '1' : '0'; // Pass binary type.\n\n  data['bt'] = (0, _experiments.getBinaryType)(self);\n\n  if (self.location.ancestorOrigins && self.location.ancestorOrigins[0]) {\n    data['or'] = self.location.ancestorOrigins[0];\n  }\n\n  if (self.viewerState) {\n    data['vs'] = self.viewerState;\n  } // Is embedded?\n\n\n  if (self.parent && self.parent != self) {\n    data['iem'] = '1';\n  }\n\n  if (self.AMP && self.AMP.viewer) {\n    var resolvedViewerUrl = self.AMP.viewer.getResolvedViewerUrl();\n    var messagingOrigin = self.AMP.viewer.maybeGetMessagingOrigin();\n\n    if (resolvedViewerUrl) {\n      data['rvu'] = resolvedViewerUrl;\n    }\n\n    if (messagingOrigin) {\n      data['mso'] = messagingOrigin;\n    }\n  }\n\n  if (!detectedJsEngine) {\n    detectedJsEngine = detectJsEngineFromStack();\n  }\n\n  data['jse'] = detectedJsEngine;\n  var exps = [];\n  var experiments = (0, _experiments.experimentTogglesOrNull)(self);\n\n  for (var exp in experiments) {\n    var on = experiments[exp];\n    exps.push(exp + \"=\" + (on ? '1' : '0'));\n  }\n\n  data['exps'] = exps.join(',');\n\n  if (error) {\n    var tagName = error.associatedElement ? error.associatedElement.tagName : 'u'; // Unknown\n\n    data['el'] = tagName;\n\n    if (error.args) {\n      data['args'] = JSON.stringify(error.args);\n    }\n\n    if (!isUserError && !error.ignoreStack && error.stack) {\n      data['s'] = error.stack;\n    } // TODO(jridgewell, #18574); Make sure error is always an object.\n\n\n    if (error.message) {\n      error.message += ' _reported_';\n    }\n  } else {\n    data['f'] = filename || '';\n    data['l'] = line || '';\n    data['c'] = col || '';\n  }\n\n  data['r'] = self.document ? self.document.referrer : '';\n  data['ae'] = accumulatedErrorMessages.join(',');\n  data['fr'] = self.location.originalHash || self.location.hash;\n  pushLimit(accumulatedErrorMessages, message, 25);\n  return data;\n}\n/**\n * Returns true if it appears like there is non-AMP JS on the\n * current page.\n * @param {!Window} win\n * @return {boolean}\n * @visibleForTesting\n */\n\n\nfunction detectNonAmpJs(win) {\n  if (!win.document) {\n    return false;\n  }\n\n  var scripts = win.document.querySelectorAll('script[src]');\n\n  for (var i = 0; i < scripts.length; i++) {\n    if (!(0, _url.isProxyOrigin)(scripts[i].src.toLowerCase())) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Resets accumulated error messages for testing\n */\n\n\nfunction resetAccumulatedErrorMessagesForTesting() {\n  accumulatedErrorMessages = [];\n}\n/**\n * Does a series of checks on the stack of an thrown error to determine the\n * JS engine that is currently running. This gives a bit more information than\n * just the UserAgent, since browsers often allow overriding it to \"emulate\"\n * mobile.\n * @return {string}\n * @visibleForTesting\n */\n\n\nfunction detectJsEngineFromStack() {\n  /** @constructor */\n  function Fn() {}\n\n  Fn.prototype.t = function () {\n    throw new Error('message');\n  };\n\n  var object = new Fn();\n\n  try {\n    object.t();\n  } catch (e) {\n    var stack = e.stack; // Safari only mentions the method name.\n\n    if ((0, _string.startsWith)(stack, 't@')) {\n      return 'Safari';\n    } // Firefox mentions \"prototype\".\n\n\n    if (stack.indexOf('.prototype.t@') > -1) {\n      return 'Firefox';\n    } // IE looks like Chrome, but includes a context for the base stack line.\n    // Explicitly, we're looking for something like:\n    // \"    at Global code (https://example.com/app.js:1:200)\" or\n    // \"    at Anonymous function (https://example.com/app.js:1:200)\"\n    // vs Chrome which has:\n    // \"    at https://example.com/app.js:1:200\"\n\n\n    var last = stack.split('\\n').pop();\n\n    if (/\\bat .* \\(/i.test(last)) {\n      return 'IE';\n    } // Finally, chrome includes the error message in the stack.\n\n\n    if ((0, _string.startsWith)(stack, 'Error: message')) {\n      return 'Chrome';\n    }\n  }\n\n  return 'unknown';\n}\n/**\n * @param {!Error} error\n * @param {!Window} win\n */\n\n\nfunction reportErrorToAnalytics(error, win) {\n  // Currently this can only be executed in a single-doc mode. Otherwise,\n  // it's not clear which ampdoc the event would belong too.\n  if (_services.Services.ampdocServiceFor(win).isSingleDoc()) {\n    var vars = (0, _object.dict)({\n      'errorName': error.name,\n      'errorMessage': error.message\n    });\n    (0, _analytics.triggerAnalyticsEvent)(getRootElement_(win), 'user-error', vars);\n  }\n}\n/**\n * @param {!Window} win\n * @return {!Element}\n * @private\n */\n\n\nfunction getRootElement_(win) {\n  var root = _services.Services.ampdocServiceFor(win).getSingleDoc().getRootNode();\n\n  return (0, _log.dev)().assertElement(root.documentElement || root.body || root);\n}\n\n},{\"./amp-events\":21,\"./analytics\":22,\"./config\":24,\"./event-helper\":33,\"./experiments\":34,\"./exponential-backoff\":35,\"./log\":45,\"./mode\":47,\"./services\":53,\"./string\":55,\"./style-installer\":56,\"./url\":61,\"./utils/object\":67}],32:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.internalListenImplementation = internalListenImplementation;\nexports.detectEvtListenerOptsSupport = detectEvtListenerOptsSupport;\nexports.resetEvtListenerOptsSupportForTesting = resetEvtListenerOptsSupportForTesting;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nvar optsSupported;\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\nfunction internalListenImplementation(element, eventType, listener, opt_evtListenerOpts) {\n  var localElement = element;\n  var localListener = listener;\n  /**\n   * @type {?Function}\n   */\n\n  var wrapped;\n\n  wrapped = function wrapped(event) {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n\n      throw e;\n    }\n  };\n\n  var optsSupported = detectEvtListenerOptsSupport();\n  var capture = false;\n\n  if (opt_evtListenerOpts) {\n    capture = opt_evtListenerOpts.capture;\n  }\n\n  localElement.addEventListener(eventType, wrapped, optsSupported ? opt_evtListenerOpts : capture);\n  return function () {\n    if (localElement) {\n      localElement.removeEventListener(eventType, wrapped, optsSupported ? opt_evtListenerOpts : capture);\n    } // Ensure these are GC'd\n\n\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\n\n\nfunction detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    var options = {\n      get capture() {\n        optsSupported = true;\n      }\n\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {// EventListenerOptions are not supported\n  }\n\n  return optsSupported;\n}\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\n\n\nfunction resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n\n},{}],33:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.createCustomEvent = createCustomEvent;\nexports.listen = listen;\nexports.getData = getData;\nexports.getDetail = getDetail;\nexports.listenOnce = listenOnce;\nexports.listenOncePromise = listenOncePromise;\nexports.isLoaded = isLoaded;\nexports.loadPromise = loadPromise;\nexports.isLoadErrorMessage = isLoadErrorMessage;\nexports.MEDIA_LOAD_FAILURE_SRC_PROPERTY = void 0;\n\nvar _eventHelperListen = require(\"./event-helper-listen\");\n\nvar _dom = require(\"./dom\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string}  */\nvar LOAD_FAILURE_PREFIX = 'Failed to load:';\n/** @const {string} */\n\nvar MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\n\nexports.MEDIA_LOAD_FAILURE_SRC_PROPERTY = MEDIA_LOAD_FAILURE_SRC_PROPERTY;\n\nfunction createCustomEvent(win, type, detail, opt_eventInit) {\n  var eventInit =\n  /** @type {!CustomEventInit} */\n  {\n    detail: detail\n  };\n  Object.assign(eventInit, opt_eventInit); // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n\n  if (typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    var e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(type, !!eventInit.bubbles, !!eventInit.cancelable, detail);\n    return e;\n  }\n}\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\n\nfunction listen(element, eventType, listener, opt_evtListenerOpts) {\n  return (0, _eventHelperListen.internalListenImplementation)(element, eventType, listener, opt_evtListenerOpts);\n}\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\n\n\nfunction getData(event) {\n  return (\n    /** @type {?JsonObject|string|undefined} */\n    event.data\n  );\n}\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\n\n\nfunction getDetail(event) {\n  return (\n    /** @type {?JsonObject|string|undefined} */\n    event.detail\n  );\n}\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\n\nfunction listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  var localListener = listener;\n  var unlisten = (0, _eventHelperListen.internalListenImplementation)(element, eventType, function (event) {\n    try {\n      localListener(event);\n    } finally {\n      // Ensure listener is GC'd\n      localListener = null;\n      unlisten();\n    }\n  }, opt_evtListenerOpts);\n  return unlisten;\n}\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\n\n\nfunction listenOncePromise(element, eventType, opt_evtListenerOpts, opt_cancel) {\n  var unlisten;\n  var eventPromise = new Promise(function (resolve) {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n\n  return eventPromise;\n}\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\n\n\nfunction isLoaded(eleOrWindow) {\n  return !!(eleOrWindow.complete || eleOrWindow.readyState == 'complete' || isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0 || // If the passed in thing is a Window, infer loaded state from\n  //\n  eleOrWindow.document && eleOrWindow.document.readyState == 'complete');\n}\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\n\n\nfunction loadPromise(eleOrWindow) {\n  var unlistenLoad;\n  var unlistenError;\n\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n\n  var isMediaElement = isHTMLMediaElement(eleOrWindow);\n\n  if (isMediaElement && eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc) {\n    return Promise.reject(eleOrWindow);\n  }\n\n  var loadingPromise = new Promise(function (resolve, reject) {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    } // Don't unlisten on error for Windows.\n\n\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n\n    var errorTarget = eleOrWindow; // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = (0, _dom.lastChildElement)(eleOrWindow, function (child) {\n        return child.tagName === 'SOURCE';\n      });\n\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n  return loadingPromise.then(function () {\n    if (unlistenError) {\n      unlistenError();\n    }\n\n    return eleOrWindow;\n  }, function () {\n    if (unlistenLoad) {\n      unlistenLoad();\n    }\n\n    failedToLoad(eleOrWindow);\n  });\n}\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\n\n\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] = eleOrWindow.currentSrc || true;\n  } // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n\n\n  var target = eleOrWindow;\n\n  if (target && target.src) {\n    target = target.src;\n  }\n\n  throw (0, _log.user)().createError(LOAD_FAILURE_PREFIX, target);\n}\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\n\n\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\n\n\nfunction isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n\n},{\"./dom\":29,\"./event-helper-listen\":32,\"./log\":45}],34:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isCanary = isCanary;\nexports.getBinaryType = getBinaryType;\nexports.isExperimentOn = isExperimentOn;\nexports.toggleExperiment = toggleExperiment;\nexports.experimentToggles = experimentToggles;\nexports.experimentTogglesOrNull = experimentTogglesOrNull;\nexports.getExperimentTogglesForTesting = getExperimentTogglesForTesting;\nexports.resetExperimentTogglesForTesting = resetExperimentTogglesForTesting;\nexports.randomlySelectUnsetExperiments = randomlySelectUnsetExperiments;\nexports.getExperimentBranch = getExperimentBranch;\nexports.forceExperimentBranch = forceExperimentBranch;\nexports.RANDOM_NUMBER_GENERATORS = exports.ExperimentInfo = void 0;\n\nvar _log = require(\"./log\");\n\nvar _mode = require(\"./mode\");\n\nvar _object = require(\"./utils/object\");\n\nvar _url = require(\"./url\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\n/** @const {string} */\nvar TAG = 'EXPERIMENTS';\n/** @const {string} */\n\nvar LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n/** @const {string} */\n\nvar TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n/**\n * @typedef {{\n *   isTrafficEligible: function(!Window):boolean,\n *   branches: !Array<string>\n * }}\n */\n\nvar ExperimentInfo;\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\n\nexports.ExperimentInfo = ExperimentInfo;\n\nfunction isCanary(win) {\n  return !!(win.AMP_CONFIG && win.AMP_CONFIG.canary);\n}\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\n\n\nfunction getBinaryType(win) {\n  return win.AMP_CONFIG && win.AMP_CONFIG.type ? win.AMP_CONFIG.type : 'unknown';\n}\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\n\n\nfunction isExperimentOn(win, experimentId) {\n  var toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\n\n\nfunction toggleExperiment(win, experimentId, opt_on, opt_transientExperiment) {\n  var currentlyOn = isExperimentOn(win,\n  /*OK*/\n  experimentId);\n  var on = !!(opt_on !== undefined ? opt_on : !currentlyOn);\n\n  if (on != currentlyOn) {\n    var toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      var storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles); // Avoid affecting tests that spy/stub warn().\n\n      if (!(0, _mode.getMode)().test) {\n        (0, _log.user)().warn(TAG, '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental', experimentId, on ? 'enabled' : 'disabled', win.location.hostname);\n      }\n    }\n  }\n\n  return on;\n}\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\n\n\nfunction experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n\n  win[TOGGLES_WINDOW_PROPERTY] = Object.create(null);\n  var toggles = win[TOGGLES_WINDOW_PROPERTY]; // Read the default config of this build.\n\n  if (win.AMP_CONFIG) {\n    for (var experimentId in win.AMP_CONFIG) {\n      var frequency = win.AMP_CONFIG[experimentId];\n\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  } // Read document level override from meta tag.\n\n\n  if (win.AMP_CONFIG && Array.isArray(win.AMP_CONFIG['allow-doc-opt-in']) && win.AMP_CONFIG['allow-doc-opt-in'].length > 0) {\n    var allowed = win.AMP_CONFIG['allow-doc-opt-in'];\n    var meta = win.document.head.querySelector('meta[name=\"amp-experiments-opt-in\"]');\n\n    if (meta) {\n      var optedInExperiments = meta.getAttribute('content').split(',');\n\n      for (var i = 0; i < optedInExperiments.length; i++) {\n        if (allowed.indexOf(optedInExperiments[i]) != -1) {\n          toggles[optedInExperiments[i]] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  if (win.AMP_CONFIG && Array.isArray(win.AMP_CONFIG['allow-url-opt-in']) && win.AMP_CONFIG['allow-url-opt-in'].length > 0) {\n    var _allowed = win.AMP_CONFIG['allow-url-opt-in'];\n    var hash = win.location.originalHash || win.location.hash;\n    var params = (0, _url.parseQueryString)(hash);\n\n    for (var _i = 0; _i < _allowed.length; _i++) {\n      var param = params[\"e-\" + _allowed[_i]];\n\n      if (param == '1') {\n        toggles[_allowed[_i]] = true;\n      }\n\n      if (param == '0') {\n        toggles[_allowed[_i]] = false;\n      }\n    }\n  }\n\n  return toggles;\n}\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {Object<string, boolean>}\n */\n\n\nfunction experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\n\n\nfunction getExperimentToggles(win) {\n  var experimentsString = '';\n\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch (e) {\n    (0, _log.dev)().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n\n  var tokens = experimentsString ? experimentsString.split(/\\s*,\\s*/g) : [];\n  var toggles = Object.create(null);\n\n  for (var i = 0; i < tokens.length; i++) {\n    if (tokens[i].length == 0) {\n      continue;\n    }\n\n    if (tokens[i][0] == '-') {\n      toggles[tokens[i].substr(1)] = false;\n    } else {\n      toggles[tokens[i]] = true;\n    }\n  }\n\n  return toggles;\n}\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\n\n\nfunction saveExperimentToggles(win, toggles) {\n  var experimentIds = [];\n\n  for (var experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n\n  try {\n    if ('localStorage' in win) {\n      win.localStorage.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n    }\n  } catch (e) {\n    (0, _log.user)().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\n\n\nfunction getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\n\n\nfunction resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\n\n\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\n\n\nvar RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng\n};\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\n\nexports.RANDOM_NUMBER_GENERATORS = RANDOM_NUMBER_GENERATORS;\n\nfunction selectRandomItem(arr) {\n  var rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return arr[Math.floor(rn * arr.length)] || null;\n}\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Object<string, !ExperimentInfo>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\n\n\nfunction randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  var selectedExperiments = {};\n\n  for (var experimentName in experiments) {\n    // Skip experimentName if it is not a key of experiments object or if it\n    // has already been populated by some other property.\n    if (!(0, _object.hasOwn)(experiments, experimentName)) {\n      continue;\n    }\n\n    if ((0, _object.hasOwn)(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] = win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (!experiments[experimentName].isTrafficEligible || !experiments[experimentName].isTrafficEligible(win)) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    } // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n\n\n    if (!win.__AMP_EXPERIMENT_BRANCHES[experimentName] && isExperimentOn(win,\n    /*OK*/\n    experimentName)) {\n      var branches = experiments[experimentName].branches;\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(branches);\n      selectedExperiments[experimentName] = win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n\n  return selectedExperiments;\n}\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\n\n\nfunction getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES ? win.__AMP_EXPERIMENT_BRANCHES[experimentName] : null;\n}\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\n\n\nfunction forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n\n},{\"./log\":45,\"./mode\":47,\"./url\":61,\"./utils/object\":67}],35:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.exponentialBackoff = exponentialBackoff;\nexports.exponentialBackoffClock = exponentialBackoffClock;\nexports.getJitter = getJitter;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {number=} opt_base Exponential base. Defaults to 2.\n * @return {function(function()): number} Function that when invoked will\n *     call the passed in function. On every invocation the next\n *     invocation of the passed in function will be exponentially\n *     later. Returned function returns timeout id.\n */\nfunction exponentialBackoff(opt_base) {\n  var getTimeout = exponentialBackoffClock(opt_base);\n  return function (work) {\n    return setTimeout(work, getTimeout());\n  };\n}\n/**\n * @param {number=} opt_base Exponential base. Defaults to 2.\n * @return {function(): number} Function that when invoked will return\n *    a number that exponentially grows per invocation.\n */\n\n\nfunction exponentialBackoffClock(opt_base) {\n  var base = opt_base || 2;\n  var count = 0;\n  return function () {\n    var wait = Math.pow(base, count++);\n    wait += getJitter(wait);\n    return wait * 1000;\n  };\n}\n/**\n * Add jitter to avoid the thundering herd. This can e.g. happen when\n * we poll a backend and it fails for everyone at the same time.\n * We add up to 30% (default) longer or shorter than the given time.\n *\n * @param {number} wait the amount if base milliseconds\n * @param {number=} opt_perc the min/max percentage to add or sutract\n * @return {number}\n */\n\n\nfunction getJitter(wait, opt_perc) {\n  opt_perc = opt_perc || 0.3;\n  var jitter = wait * opt_perc * Math.random();\n\n  if (Math.random() > 0.5) {\n    jitter *= -1;\n  }\n\n  return jitter;\n}\n\n},{}],36:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getHtml = getHtml;\n\nvar _string = require(\"./string\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @type {!Array<string>} */\nvar excludedTags = ['script', 'style'];\n/** @type {!Array<string>} */\n\nvar allowedAmpTags = ['amp-accordion', 'amp-app-banner', 'amp-carousel', 'amp-fit-text', 'amp-form', 'amp-selector', 'amp-sidebar'];\n/** @type {!Array<string>} */\n\nvar allowedAttributes = ['action', 'alt', 'class', 'disabled', 'height', 'href', 'id', 'name', 'placeholder', 'readonly', 'src', 'tabindex', 'title', 'type', 'value', 'width'];\n/**\n * Returns content of HTML node\n * @param {!Window} win\n * @param {string} selector - CSS selector of the node to take content from\n * @param {!Array<string>} attrs - tag attributes to be left in the stringified\n * HTML\n * @return {string}\n */\n\nfunction getHtml(win, selector, attrs) {\n  var root = win.document.querySelector(selector);\n  var result = [];\n\n  if (root) {\n    appendToResult(root, attrs, result);\n  }\n\n  return result.join('').replace(/\\s{2,}/g, ' ');\n}\n/**\n * @param {!Element} node - node to take content from\n * @param {!Array<string>} attrs - tag attributes to be left in the stringified HTML\n * @param {!Array<string>} result\n */\n\n\nfunction appendToResult(node, attrs, result) {\n  var stack = [node];\n  var allowedAttrs = attrs.filter(function (attr) {\n    return allowedAttributes.includes(attr);\n  });\n\n  while (stack.length > 0) {\n    node = stack.pop();\n\n    if (typeof node === 'string') {\n      result.push(node);\n    } else if (node.nodeType === Node.TEXT_NODE) {\n      result.push(node.textContent);\n    } else if (node.nodeType === Node.ELEMENT_NODE && isApplicableNode(node)) {\n      appendOpenTag(node, allowedAttrs, result);\n      stack.push(\"</\" + node.tagName.toLowerCase() + \">\");\n\n      for (var child = node.lastChild; child; child = child.previousSibling) {\n        stack.push(child);\n      }\n    }\n  }\n}\n/**\n *\n * @param {!Element} node\n * @return {boolean}\n */\n\n\nfunction isApplicableNode(node) {\n  var tagName = node.tagName.toLowerCase();\n\n  if ((0, _string.startsWith)(tagName, 'amp-')) {\n    return !!(allowedAmpTags.includes(tagName) && node.textContent);\n  } else {\n    return !!(!excludedTags.includes(tagName) && node.textContent);\n  }\n}\n/**\n *\n * @param {!Element} node\n * @param {!Array<string>} attrs\n * @param {Array<string>} result\n */\n\n\nfunction appendOpenTag(node, attrs, result) {\n  result.push(\"<\" + node.tagName.toLowerCase());\n  attrs.forEach(function (attr) {\n    if (node.hasAttribute(attr)) {\n      result.push(\" \" + attr + \"=\\\"\" + node.getAttribute(attr) + \"\\\"\");\n    }\n  });\n  result.push('>');\n}\n\n},{\"./string\":55}],37:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getContextMetadata = getContextMetadata;\n\nvar _domFingerprint = require(\"./utils/dom-fingerprint\");\n\nvar _services = require(\"./services\");\n\nvar _object = require(\"./utils/object.js\");\n\nvar _experiments = require(\"./experiments\");\n\nvar _layout = require(\"./layout\");\n\nvar _modeObject = require(\"./mode-object\");\n\nvar _internalVersion = require(\"./internal-version\");\n\nvar _config = require(\"./config\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Produces the attributes for the ad template.\n * @param {!Window} parentWindow\n * @param {!AmpElement} element\n * @param {string} sentinel\n * @param {!JsonObject=} attributes\n * @return {!JsonObject}\n */\nfunction getContextMetadata(parentWindow, element, sentinel, attributes) {\n  var startTime = Date.now();\n  var width = element.getAttribute('width');\n  var height = element.getAttribute('height');\n  attributes = attributes ? attributes : (0, _object.dict)();\n  attributes['width'] = (0, _layout.getLengthNumeral)(width);\n  attributes['height'] = (0, _layout.getLengthNumeral)(height);\n\n  if (element.getAttribute('title')) {\n    attributes['title'] = element.getAttribute('title');\n  }\n\n  var locationHref = parentWindow.location.href; // This is really only needed for tests, but whatever. Children\n  // see us as the logical origin, so telling them we are about:srcdoc\n  // will fail ancestor checks.\n\n  if (locationHref == 'about:srcdoc') {\n    locationHref = parentWindow.parent.location.href;\n  }\n\n  var ampdoc = _services.Services.ampdoc(element);\n\n  var docInfo = _services.Services.documentInfoForDoc(element);\n\n  var viewer = _services.Services.viewerForDoc(element);\n\n  var referrer = viewer.getUnconfirmedReferrerUrl(); // TODO(alanorozco): Redesign data structure so that fields not exposed by\n  // AmpContext are not part of this object.\n\n  var layoutRect = element.getPageLayoutBox(); // Use JsonObject to preserve field names so that ampContext can access\n  // values with name\n  // ampcontext.js and this file are compiled in different compilation unit\n  // Note: Field names can by perserved by using JsonObject, or by adding\n  // perserved name to extern. We are doing both right now.\n  // Please also add new introduced variable\n  // name to the extern list.\n\n  attributes['_context'] = (0, _object.dict)({\n    'ampcontextVersion': (0, _internalVersion.internalRuntimeVersion)(),\n    'ampcontextFilepath': _config.urls.thirdParty + \"/\" + (0, _internalVersion.internalRuntimeVersion)() + \"/ampcontext-v0.js\",\n    'sourceUrl': docInfo.sourceUrl,\n    'referrer': referrer,\n    'canonicalUrl': docInfo.canonicalUrl,\n    'pageViewId': docInfo.pageViewId,\n    'location': {\n      'href': locationHref\n    },\n    'startTime': startTime,\n    'tagName': element.tagName,\n    'mode': (0, _modeObject.getModeObject)(),\n    'canary': (0, _experiments.isCanary)(parentWindow),\n    'hidden': !ampdoc.isVisible(),\n    'initialLayoutRect': layoutRect ? {\n      'left': layoutRect.left,\n      'top': layoutRect.top,\n      'width': layoutRect.width,\n      'height': layoutRect.height\n    } : null,\n    'initialIntersection': element.getIntersectionChangeEntry(),\n    'domFingerprint': _domFingerprint.DomFingerprint.generate(element),\n    'experimentToggles': (0, _experiments.experimentToggles)(parentWindow),\n    'sentinel': sentinel\n  });\n  var adSrc = element.getAttribute('src');\n\n  if (adSrc) {\n    attributes['src'] = adSrc;\n  }\n\n  return attributes;\n}\n\n},{\"./config\":24,\"./experiments\":34,\"./internal-version\":40,\"./layout\":44,\"./mode-object\":46,\"./services\":53,\"./utils/dom-fingerprint\":63,\"./utils/object.js\":67}],38:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.listenFor = listenFor;\nexports.listenForOncePromise = listenForOncePromise;\nexports.postMessage = postMessage;\nexports.postMessageToWindows = postMessageToWindows;\nexports.parseIfNeeded = parseIfNeeded;\nexports.looksLikeTrackingIframe = looksLikeTrackingIframe;\nexports.isAdLike = isAdLike;\nexports.disableScrollingOnIframe = disableScrollingOnIframe;\nexports.canInspectWindow = canInspectWindow;\nexports.getFriendlyIframeEmbedOptional = getFriendlyIframeEmbedOptional;\nexports.isInFie = isInFie;\nexports.makePausable = makePausable;\nexports.isPausable = isPausable;\nexports.setPaused = setPaused;\nexports.FIE_EMBED_PROP = exports.SubscriptionApi = void 0;\n\nvar _dom = require(\"./dom\");\n\nvar _pFrameMessaging = require(\"./3p-frame-messaging\");\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object\");\n\nvar _eventHelper = require(\"./event-helper\");\n\nvar _url = require(\"./url\");\n\nvar _array = require(\"./utils/array\");\n\nvar _style = require(\"./style\");\n\nvar _json = require(\"./json\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Sentinel used to force unlistening after a iframe is detached.\n * @type {string}\n */\nvar UNLISTEN_SENTINEL = 'unlisten';\n/**\n * The iframe feature policy that forces the iframe to pause when it's not\n * display.\n * See https://github.com/dtapuska/iframe-freeze.\n */\n\nvar EXECUTION_WHILE_NOT_RENDERED = 'execution-while-not-rendered';\n/**\n * @typedef {{\n *   frame: !Element,\n *   events: !Object<string, !Array<function(!JsonObject)>>\n * }}\n */\n\nvar WindowEventsDef;\n/**\n * Returns a mapping from a URL's origin to an array of windows and their\n * listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {boolean=} opt_create create the mapping if it does not exist\n * @return {?Object<string, !Array<!WindowEventsDef>>}\n */\n\nfunction getListenFors(parentWin, opt_create) {\n  var listeningFors = parentWin.listeningFors;\n\n  if (!listeningFors && opt_create) {\n    listeningFors = parentWin.listeningFors = Object.create(null);\n  }\n\n  return listeningFors || null;\n}\n/**\n * Returns an array of WindowEventsDef that have had any listenFor listeners\n * registered for this sentinel.\n * @param {?Window} parentWin the window that created the iframe\n * @param {string} sentinel the sentinel of the message\n * @param {boolean=} opt_create create the array if it does not exist\n * @return {?Array<!WindowEventsDef>}\n */\n\n\nfunction getListenForSentinel(parentWin, sentinel, opt_create) {\n  var listeningFors = getListenFors(parentWin, opt_create);\n\n  if (!listeningFors) {\n    return listeningFors;\n  }\n\n  var listenSentinel = listeningFors[sentinel];\n\n  if (!listenSentinel && opt_create) {\n    listenSentinel = listeningFors[sentinel] = [];\n  }\n\n  return listenSentinel || null;\n}\n/**\n * Returns an mapping of event names to listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {!Element} iframe the iframe element who's context will trigger the\n *     event\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @return {?Object<string, !Array<function(!JsonObject, !Window, string, !MessageEvent)>>}\n */\n\n\nfunction getOrCreateListenForEvents(parentWin, iframe, opt_is3P) {\n  var sentinel = getSentinel_(iframe, opt_is3P);\n  var listenSentinel = getListenForSentinel(parentWin, sentinel, true);\n  var windowEvents;\n\n  for (var i = 0; i < listenSentinel.length; i++) {\n    var we = listenSentinel[i];\n\n    if (we.frame === iframe) {\n      windowEvents = we;\n      break;\n    }\n  }\n\n  if (!windowEvents) {\n    windowEvents = {\n      frame: iframe,\n      events: Object.create(null)\n    };\n    listenSentinel.push(windowEvents);\n  }\n\n  return windowEvents.events;\n}\n/**\n * Returns an mapping of event names to listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {string} sentinel the sentinel of the message\n * @param {string} origin the source window's origin\n * @param {?Window} triggerWin the window that triggered the event\n * @return {?Object<string, !Array<function(!JsonObject, !Window, string, !MessageEvent)>>}\n */\n\n\nfunction getListenForEvents(parentWin, sentinel, origin, triggerWin) {\n  var listenSentinel = getListenForSentinel(parentWin, sentinel);\n\n  if (!listenSentinel) {\n    return listenSentinel;\n  } // Find the entry for the frame.\n  // TODO(@nekodo): Add a WeakMap<Window, WindowEventsDef> cache to\n  //     speed up this process.\n\n\n  var windowEvents;\n\n  for (var i = 0; i < listenSentinel.length; i++) {\n    var we = listenSentinel[i];\n    var contentWindow = we.frame.contentWindow;\n\n    if (!contentWindow) {\n      setTimeout(dropListenSentinel, 0, listenSentinel);\n    } else if (triggerWin == contentWindow || isDescendantWindow(contentWindow, triggerWin)) {\n      // 3p code path, we may accept messages from nested frames.\n      windowEvents = we;\n      break;\n    }\n  }\n\n  return windowEvents ? windowEvents.events : null;\n}\n/**\n * Checks whether one window is a descendant of another by climbing\n * the parent chain.\n * @param {?Window} ancestor potential ancestor window\n * @param {?Window} descendant potential descendant window\n * @return {boolean}\n */\n\n\nfunction isDescendantWindow(ancestor, descendant) {\n  for (var win = descendant; win && win != win.parent; win = win.parent) {\n    if (win == ancestor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Removes any listenFors registed on listenSentinel that do not have\n * a contentWindow (the frame was removed from the DOM tree).\n * @param {!Array<!WindowEventsDef>} listenSentinel\n */\n\n\nfunction dropListenSentinel(listenSentinel) {\n  var noopData = (0, _object.dict)({\n    'sentinel': UNLISTEN_SENTINEL\n  });\n\n  for (var i = listenSentinel.length - 1; i >= 0; i--) {\n    var windowEvents = listenSentinel[i];\n\n    if (!windowEvents.frame.contentWindow) {\n      listenSentinel.splice(i, 1);\n      var events = windowEvents.events;\n\n      for (var name in events) {\n        // Splice here, so that each unlisten does not shift the array\n        events[name].splice(0, Infinity).forEach(function (event) {\n          event(noopData);\n        });\n      }\n    }\n  }\n}\n/**\n * Registers the global listenFor event listener if it has yet to be.\n * @param {?Window} parentWin\n */\n\n\nfunction registerGlobalListenerIfNeeded(parentWin) {\n  if (parentWin.listeningFors) {\n    return;\n  }\n\n  var listenForListener = function listenForListener(event) {\n    if (!(0, _eventHelper.getData)(event)) {\n      return;\n    }\n\n    var data = parseIfNeeded((0, _eventHelper.getData)(event));\n\n    if (!data || !data['sentinel']) {\n      return;\n    }\n\n    var listenForEvents = getListenForEvents(parentWin, data['sentinel'], event.origin, event.source);\n\n    if (!listenForEvents) {\n      return;\n    }\n\n    var listeners = listenForEvents[data['type']];\n\n    if (!listeners) {\n      return;\n    } // We slice to avoid issues with adding another listener or unlistening\n    // during iteration. We could move to a Doubly Linked List with\n    // backtracking, but that's overly complicated.\n\n\n    listeners = listeners.slice();\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener(data, event.source, event.origin, event);\n    }\n  };\n\n  parentWin.addEventListener('message', listenForListener);\n}\n/**\n * Allows listening for message from the iframe. Returns an unlisten\n * function to remove the listener.\n *\n * @param {?Element} iframe\n * @param {string} typeOfMessage\n * @param {?function(!JsonObject, !Window, string, !MessageEvent)} callback Called when a\n *     message of this type arrives for this iframe.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @param {boolean=} opt_includingNestedWindows set to true if messages from\n *     nested frames should also be accepted.\n * @param {boolean=} opt_allowOpaqueOrigin set to true if messages from\n       opaque origins (origin == null) are allowed.\n * @return {!UnlistenDef}\n */\n\n\nfunction listenFor(iframe, typeOfMessage, callback, opt_is3P, opt_includingNestedWindows, opt_allowOpaqueOrigin) {\n  (0, _log.devAssert)(iframe.src, 'only iframes with src supported');\n  (0, _log.devAssert)(!iframe.parentNode, 'cannot register events on an attached ' + 'iframe. It will cause hair-pulling bugs like #2942');\n  (0, _log.devAssert)(callback);\n  var parentWin = iframe.ownerDocument.defaultView;\n  registerGlobalListenerIfNeeded(parentWin);\n  var listenForEvents = getOrCreateListenForEvents(parentWin, iframe, opt_is3P);\n  var iframeOrigin = (0, _url.parseUrlDeprecated)(iframe.src).origin;\n  var events = listenForEvents[typeOfMessage] || (listenForEvents[typeOfMessage] = []);\n  var unlisten;\n\n  var listener = function listener(data, source, origin, event) {\n    var sentinel = data['sentinel']; // Exclude messages that don't satisfy amp sentinel rules.\n\n    if (sentinel == 'amp') {\n      // For `amp` sentinel, nested windows are not allowed\n      if (source != iframe.contentWindow) {\n        return;\n      } // For `amp` sentinel origin must match unless opaque origin is allowed\n\n\n      var isOpaqueAndAllowed = origin == 'null' && opt_allowOpaqueOrigin;\n\n      if (iframeOrigin != origin && !isOpaqueAndAllowed) {\n        return;\n      }\n    } // Exclude nested frames if necessary.\n    // Note that the source was already verified to be either the contentWindow\n    // of the iframe itself or a descendant window within it.\n\n\n    if (!opt_includingNestedWindows && source != iframe.contentWindow) {\n      return;\n    }\n\n    if (data.sentinel == UNLISTEN_SENTINEL) {\n      unlisten();\n      return;\n    }\n\n    callback(data, source, origin, event);\n  };\n\n  events.push(listener);\n  return unlisten = function unlisten() {\n    if (listener) {\n      var index = events.indexOf(listener);\n\n      if (index > -1) {\n        events.splice(index, 1);\n      } // Make sure references to the unlisten function do not keep\n      // alive too much.\n\n\n      listener = null;\n      events = null;\n      callback = null;\n    }\n  };\n}\n/**\n * Returns a promise that resolves when one of given messages has been observed\n * for the first time. And remove listener for all other messages.\n * @param {!Element} iframe\n * @param {string|!Array<string>} typeOfMessages\n * @param {boolean=} opt_is3P\n * @return {!Promise<!{data: !JsonObject, source: !Window, origin: string, event: !MessageEvent}>}\n */\n\n\nfunction listenForOncePromise(iframe, typeOfMessages, opt_is3P) {\n  var unlistenList = [];\n\n  if (typeof typeOfMessages == 'string') {\n    typeOfMessages = [typeOfMessages];\n  }\n\n  return new Promise(function (resolve) {\n    for (var i = 0; i < typeOfMessages.length; i++) {\n      var message = typeOfMessages[i];\n      var unlisten = listenFor(iframe, message, function (data, source, origin, event) {\n        for (var _i = 0; _i < unlistenList.length; _i++) {\n          unlistenList[_i]();\n        }\n\n        resolve({\n          data: data,\n          source: source,\n          origin: origin,\n          event: event\n        });\n      }, opt_is3P);\n      unlistenList.push(unlisten);\n    }\n  });\n}\n/**\n * Posts a message to the iframe.\n * @param {!Element} iframe The iframe.\n * @param {string} type Type of the message.\n * @param {!JsonObject} object Message payload.\n * @param {string} targetOrigin origin of the target.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n */\n\n\nfunction postMessage(iframe, type, object, targetOrigin, opt_is3P) {\n  postMessageToWindows(iframe, [{\n    win: iframe.contentWindow,\n    origin: targetOrigin\n  }], type, object, opt_is3P);\n}\n/**\n * Posts an identical message to multiple target windows with the same\n * sentinel.\n * The message is serialized only once.\n * @param {!Element} iframe The iframe.\n * @param {!Array<{win: !Window, origin: string}>} targets to send the message\n *     to, pairs of window and its origin.\n * @param {string} type Type of the message.\n * @param {!JsonObject} object Message payload.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n */\n\n\nfunction postMessageToWindows(iframe, targets, type, object, opt_is3P) {\n  if (!iframe.contentWindow) {\n    return;\n  }\n\n  object['type'] = type;\n  object['sentinel'] = getSentinel_(iframe, opt_is3P);\n  var payload = object;\n\n  if (opt_is3P) {\n    // Serialize ourselves because that is much faster in Chrome.\n    payload = 'amp-' + JSON.stringify(object);\n  }\n\n  for (var i = 0; i < targets.length; i++) {\n    var target = targets[i];\n    target.win.\n    /*OK*/\n    postMessage(payload, target.origin);\n  }\n}\n/**\n * Gets the sentinel string.\n * @param {!Element} iframe The iframe.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @return {string} Sentinel string.\n * @private\n */\n\n\nfunction getSentinel_(iframe, opt_is3P) {\n  return opt_is3P ? iframe.getAttribute('data-amp-3p-sentinel') : 'amp';\n}\n/**\n * JSON parses event.data if it needs to be\n * @param {*} data\n * @return {?JsonObject} object message\n * @private\n * @visibleForTesting\n */\n\n\nfunction parseIfNeeded(data) {\n  if (typeof data == 'string') {\n    if (data.charAt(0) == '{') {\n      data = (0, _json.tryParseJson)(data, function (e) {\n        (0, _log.dev)().warn('IFRAME-HELPER', 'Postmessage could not be parsed. ' + 'Is it in a valid JSON format?', e);\n      }) || null;\n    } else if ((0, _pFrameMessaging.isAmpMessage)(data)) {\n      data = (0, _pFrameMessaging.deserializeMessage)(data);\n    } else {\n      data = null;\n    }\n  }\n\n  return (\n    /** @type {?JsonObject} */\n    data\n  );\n}\n/**\n * Manages a postMessage API for an iframe with a subscription message and\n * a way to broadcast messages to all subscribed windows, which\n * in turn must all be descendants of the contentWindow of the iframe.\n */\n\n\nvar SubscriptionApi =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Element} iframe The iframe.\n   * @param {string} type Type of the subscription message.\n   * @param {boolean} is3p set to true if the iframe is 3p.\n   * @param {function(!JsonObject, !Window, string)} requestCallback Callback\n   *     invoked whenever a new window subscribes.\n   */\n  function SubscriptionApi(iframe, type, is3p, requestCallback) {\n    var _this = this;\n\n    /** @private @const {!Element} */\n    this.iframe_ = iframe;\n    /** @private @const {boolean} */\n\n    this.is3p_ = is3p;\n    /** @private @const {!Array<{win: !Window, origin: string}>} */\n\n    this.clientWindows_ = [];\n    /** @private @const {!UnlistenDef} */\n\n    this.unlisten_ = listenFor(this.iframe_, type, function (data, source, origin) {\n      // This message might be from any window within the iframe, we need\n      // to keep track of which windows want to be sent updates.\n      if (!_this.clientWindows_.some(function (entry) {\n        return entry.win == source;\n      })) {\n        _this.clientWindows_.push({\n          win: source,\n          origin: origin\n        });\n      }\n\n      requestCallback(data, source, origin);\n    }, this.is3p_, // For 3P frames we also allow nested frames within them to subscribe..\n    this.is3p_\n    /* opt_includingNestedWindows */\n    );\n  }\n  /**\n   * Sends a message to all subscribed windows.\n   * @param {string} type Type of the message.\n   * @param {!JsonObject} data Message payload.\n   */\n\n\n  var _proto = SubscriptionApi.prototype;\n\n  _proto.send = function send(type, data) {\n    // Remove clients that have been removed from the DOM.\n    (0, _array.remove)(this.clientWindows_, function (client) {\n      return !client.win.parent;\n    });\n    postMessageToWindows(this.iframe_, this.clientWindows_, type, data, this.is3p_);\n  }\n  /**\n   * Destroys iframe.\n   */\n  ;\n\n  _proto.destroy = function destroy() {\n    this.unlisten_();\n    this.clientWindows_.length = 0;\n  };\n\n  return SubscriptionApi;\n}();\n/**\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nexports.SubscriptionApi = SubscriptionApi;\n\nfunction looksLikeTrackingIframe(element) {\n  var box = element.getLayoutBox(); // This heuristic is subject to change.\n\n  if (box.width > 10 || box.height > 10) {\n    return false;\n  } // Iframe is not tracking iframe if open with user interaction\n\n\n  return !(0, _dom.closestAncestorElementBySelector)(element, '.i-amphtml-overlay');\n} // Most common ad sizes\n// Array of [width, height] pairs.\n\n\nvar adSizes = [[300, 250], [320, 50], [300, 50], [320, 100]];\n/**\n * Guess whether this element might be an ad.\n * @param {!Element} element An amp-iframe element.\n * @return {boolean}\n * @visibleForTesting\n */\n\nfunction isAdLike(element) {\n  var box = element.getLayoutBox();\n  var height = box.height,\n      width = box.width;\n\n  for (var i = 0; i < adSizes.length; i++) {\n    var refWidth = adSizes[i][0];\n    var refHeight = adSizes[i][1];\n\n    if (refHeight > height) {\n      continue;\n    }\n\n    if (refWidth > width) {\n      continue;\n    } // Fuzzy matching to account for padding.\n\n\n    if (height - refHeight <= 20 && width - refWidth <= 20) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * @param {!Element} iframe\n * @return {!Element}\n * @private\n */\n\n\nfunction disableScrollingOnIframe(iframe) {\n  (0, _dom.addAttributesToElement)(iframe, (0, _object.dict)({\n    'scrolling': 'no'\n  })); // This shouldn't work, but it does on Firefox.\n  // https://stackoverflow.com/a/15494969\n\n  (0, _style.setStyle)(iframe, 'overflow', 'hidden');\n  return iframe;\n}\n/**\n * Returns true if win's properties can be accessed and win is defined.\n * This functioned is used to determine if a window is cross-domained\n * from the perspective of the current window.\n * @param {!Window} win\n * @return {boolean}\n * @private\n */\n\n\nfunction canInspectWindow(win) {\n  // TODO: this is not reliable.  The compiler assumes that property reads are\n  // side-effect free.  The recommended fix is to use goog.reflect.sinkValue\n  // but since we're not using the closure library I'm not sure how to do this.\n  // See https://github.com/google/closure-compiler/issues/3156\n  try {\n    // win['test'] could be truthy but not true the compiler shouldn't be able\n    // to optimize this check away.\n    return !!win.location.href && (win['test'] || true);\n  } catch (unusedErr) {\n    // eslint-disable-line no-unused-vars\n    return false;\n  }\n}\n/** @const {string} */\n\n\nvar FIE_EMBED_PROP = '__AMP_EMBED__';\n/**\n * Returns the embed created using `installFriendlyIframeEmbed` or `null`.\n * Caution: This will only return the FIE after the iframe has 'loaded'. If you\n * are checking before this signal you may be in a race condition that returns\n * null.\n * @param {!HTMLIFrameElement} iframe\n * @return {?./friendly-iframe-embed.FriendlyIframeEmbed}\n */\n\nexports.FIE_EMBED_PROP = FIE_EMBED_PROP;\n\nfunction getFriendlyIframeEmbedOptional(iframe) {\n  return (\n    /** @type {?./friendly-iframe-embed.FriendlyIframeEmbed} */\n    iframe[FIE_EMBED_PROP]\n  );\n}\n/**\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isInFie(element) {\n  return element.classList.contains('i-amphtml-fie') || !!(0, _dom.closestAncestorElementBySelector)(element, '.i-amphtml-fie');\n}\n/**\n * @param {!HTMLIFrameElement} iframe\n */\n\n\nfunction makePausable(iframe) {\n  var oldAllow = (iframe.getAttribute('allow') || '').trim();\n  iframe.setAttribute('allow', EXECUTION_WHILE_NOT_RENDERED + \" 'none';\" + oldAllow);\n}\n/**\n * @param {!HTMLIFrameElement} iframe\n * @return {boolean}\n */\n\n\nfunction isPausable(iframe) {\n  return !!iframe.featurePolicy && iframe.featurePolicy.features().indexOf(EXECUTION_WHILE_NOT_RENDERED) != -1 && !iframe.featurePolicy.allowsFeature(EXECUTION_WHILE_NOT_RENDERED);\n}\n/**\n * @param {!HTMLIFrameElement} iframe\n * @param {boolean} paused\n */\n\n\nfunction setPaused(iframe, paused) {\n  (0, _style.toggle)(iframe, !paused);\n}\n\n},{\"./3p-frame-messaging\":17,\"./dom\":29,\"./event-helper\":33,\"./json\":42,\"./log\":45,\"./style\":57,\"./url\":61,\"./utils/array\":62,\"./utils/object\":67}],39:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.whenContentIniLoad = whenContentIniLoad;\nexports.getMeasuredResources = getMeasuredResources;\n\nvar _resourcesInterface = require(\"./service/resources-interface\");\n\nvar _services = require(\"./services\");\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {!Array<string>} */\nvar EXCLUDE_INI_LOAD = ['AMP-AD', 'AMP-ANALYTICS', 'AMP-PIXEL', 'AMP-AD-EXIT'];\n/**\n * Returns the promise that will be resolved when all content elements\n * have been loaded in the initially visible set.\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {!Window} hostWin\n * @param {!./layout-rect.LayoutRectDef} rect\n * @param {boolean=} opt_isInPrerender signifies if we are in prerender mode.\n * @return {!Promise}\n */\n\nfunction whenContentIniLoad(elementOrAmpDoc, hostWin, rect, opt_isInPrerender) {\n  var ampdoc = _services.Services.ampdoc(elementOrAmpDoc);\n\n  return getMeasuredResources(ampdoc, hostWin, function (r) {\n    // TODO(jridgewell): Remove isFixed check here once the position\n    // is calculted correctly in a separate layer for embeds.\n    if (!r.isDisplayed() || !r.overlaps(rect) && !r.isFixed() || opt_isInPrerender && !r.prerenderAllowed()) {\n      return false;\n    }\n\n    return true;\n  }).then(function (resources) {\n    var promises = [];\n    resources.forEach(function (r) {\n      if (!EXCLUDE_INI_LOAD.includes(r.element.tagName)) {\n        promises.push(r.loadedOnce());\n      }\n    });\n    return Promise.all(promises);\n  });\n}\n/**\n * Returns a subset of resources which are (1) belong to the specified host\n * window, and (2) meet the filterFn given.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {!Window} hostWin\n * @param {function(!./service/resource.Resource):boolean} filterFn\n * @return {!Promise<!Array<!./service/resource.Resource>>}\n */\n\n\nfunction getMeasuredResources(ampdoc, hostWin, filterFn) {\n  // First, wait for the `ready-scan` signal. Waiting for each element\n  // individually is too expensive and `ready-scan` will cover most of\n  // the initially parsed elements.\n  // TODO(jridgewell): this path should be switched to use a future\n  // \"layer has been measured\" signal.\n  return ampdoc.signals().whenSignal(_resourcesInterface.READY_SCAN_SIGNAL).then(function () {\n    // Second, wait for any left-over elements to complete measuring.\n    var measurePromiseArray = [];\n\n    var resources = _services.Services.resourcesForDoc(ampdoc);\n\n    resources.get().forEach(function (r) {\n      if (!r.hasBeenMeasured() && r.hostWin == hostWin && !r.hasOwner()) {\n        measurePromiseArray.push(r.getPageLayoutBoxAsync());\n      }\n    });\n    return Promise.all(measurePromiseArray);\n  }).then(function () {\n    var resources = _services.Services.resourcesForDoc(ampdoc);\n\n    return resources.get().filter(function (r) {\n      return r.hostWin == hostWin && !r.hasOwner() && r.hasBeenMeasured() && filterFn(r);\n    });\n  });\n}\n\n},{\"./service/resources-interface\":51,\"./services\":53}],40:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.internalRuntimeVersion = internalRuntimeVersion;\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nfunction internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n\n},{}],41:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getIntersectionChangeEntry = getIntersectionChangeEntry;\nexports.IntersectionObserver = exports.DOMRect = void 0;\n\nvar _services = require(\"./services\");\n\nvar _iframeHelper = require(\"./iframe-helper\");\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object\");\n\nvar _layoutRect = require(\"./layout-rect\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The structure that defines the rectangle used in intersection observers.\n *\n * @typedef {{\n *   top: number,\n *   bottom: number,\n *   left: number,\n *   right: number,\n *   width: number,\n *   height: number,\n *   x: number,\n *   y: number,\n * }}\n */\nvar DOMRect;\n/**\n * Returns the ratio of the smaller box's area to the larger box's area.\n * @param {!./layout-rect.LayoutRectDef} smaller\n * @param {!./layout-rect.LayoutRectDef} larger\n * @return {number}\n */\n\nexports.DOMRect = DOMRect;\n\nfunction intersectionRatio(smaller, larger) {\n  return smaller.width * smaller.height / (larger.width * larger.height);\n}\n/**\n * Produces a change entry for that should be compatible with\n * IntersectionObserverEntry.\n *\n * Mutates passed in rootBounds to have x and y according to spec.\n *\n * @param {!./layout-rect.LayoutRectDef} element The element's layout rectangle\n * @param {?./layout-rect.LayoutRectDef} owner The owner's layout rect, if\n *     there is an owner.\n * @param {!./layout-rect.LayoutRectDef} viewport The viewport's layout rect.\n * @return {!IntersectionObserverEntry} A change entry.\n * @private\n */\n\n\nfunction getIntersectionChangeEntry(element, owner, viewport) {\n  (0, _log.devAssert)(element.width >= 0 && element.height >= 0, 'Negative dimensions in element.'); // Building an IntersectionObserverEntry.\n\n  var intersectionRect = element;\n\n  if (owner) {\n    intersectionRect = (0, _layoutRect.rectIntersection)(owner, element) || // No intersection.\n    (0, _layoutRect.layoutRectLtwh)(0, 0, 0, 0);\n  }\n\n  intersectionRect = (0, _layoutRect.rectIntersection)(viewport, intersectionRect) || // No intersection.\n  (0, _layoutRect.layoutRectLtwh)(0, 0, 0, 0); // The element is relative to (0, 0), while the viewport moves. So, we must\n  // adjust.\n\n  var boundingClientRect = (0, _layoutRect.moveLayoutRect)(element, -viewport.left, -viewport.top);\n  intersectionRect = (0, _layoutRect.moveLayoutRect)(intersectionRect, -viewport.left, -viewport.top); // Now, move the viewport to (0, 0)\n\n  var rootBounds = (0, _layoutRect.moveLayoutRect)(viewport, -viewport.left, -viewport.top);\n  return (\n    /** @type {!IntersectionObserverEntry} */\n    {\n      time: Date.now(),\n      rootBounds: rootBounds,\n      boundingClientRect: boundingClientRect,\n      intersectionRect: intersectionRect,\n      intersectionRatio: intersectionRatio(intersectionRect, element)\n    }\n  );\n}\n/**\n * The IntersectionObserver class lets any element share its viewport\n * intersection data with an iframe of its choice (most likely contained within\n * the element itself.). When instantiated the class will start listening for a\n * 'send-intersections' postMessage from the iframe, and only then  would start\n * sending intersection data to the iframe. The intersection data would be sent\n * when the element is moved inside or outside the viewport as well as on scroll\n * and resize. The element should create an IntersectionObserver instance once\n * the Iframe element is created. The IntersectionObserver class exposes a\n * `fire` method that would send the intersection data to the iframe. The\n * IntersectionObserver class exposes a `onViewportCallback` method that should\n * be called inside if the viewportCallback of the element. This would let the\n * element sent intersection data automatically when there element comes inside\n * or goes outside the viewport and also manage sending intersection data\n * onscroll and resize. Note: The IntersectionObserver would not send any data\n * over to the iframe if it had not requested the intersection data already via\n * a postMessage.\n */\n\n\nvar IntersectionObserver =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!AMP.BaseElement} baseElement\n   * @param {!Element} iframe Iframe element which requested the\n   *     intersection data.\n   * @param {?boolean} opt_is3p Set to `true` when the iframe is 3'rd party.\n   */\n  function IntersectionObserver(baseElement, iframe, opt_is3p) {\n    var _this = this;\n\n    /** @private @const {!AMP.BaseElement} */\n    this.baseElement_ = baseElement;\n    /** @private @const {!./service/timer-impl.Timer} */\n\n    this.timer_ = _services.Services.timerFor(baseElement.win);\n    /** @private {boolean} */\n\n    this.shouldSendIntersectionChanges_ = false;\n    /** @private {boolean} */\n\n    this.inViewport_ = false;\n    /** @private {!Array<!IntersectionObserverEntry>} */\n\n    this.pendingChanges_ = [];\n    /** @private {number|string} */\n\n    this.flushTimeout_ = 0;\n    /** @private @const {function()} */\n\n    this.boundFlush_ = this.flush_.bind(this);\n    /**\n     * An object which handles tracking subscribers to the\n     * intersection updates for this element.\n     * Triggered by context.observeIntersection(…) inside the ad/iframe\n     * or by directly posting a send-intersections message.\n     * @private {!SubscriptionApi}\n     */\n\n    this.postMessageApi_ = new _iframeHelper.SubscriptionApi(iframe, 'send-intersections', opt_is3p || false, // Each time someone subscribes we make sure that they\n    // get an update.\n    function () {\n      return _this.startSendingIntersectionChanges_();\n    });\n    /** @private {?Function} */\n\n    this.unlistenViewportChanges_ = null;\n  }\n  /**\n   * Fires element intersection\n   */\n\n\n  var _proto = IntersectionObserver.prototype;\n\n  _proto.fire = function fire() {\n    this.sendElementIntersection_();\n  }\n  /**\n   * Check if we need to unlisten when moving out of viewport,\n   * unlisten and reset unlistenViewportChanges_.\n   * @private\n   */\n  ;\n\n  _proto.unlistenOnOutViewport_ = function unlistenOnOutViewport_() {\n    if (this.unlistenViewportChanges_) {\n      this.unlistenViewportChanges_();\n      this.unlistenViewportChanges_ = null;\n    }\n  }\n  /**\n   * Called via postMessage from the child iframe when the ad/iframe starts\n   * observing its position in the viewport.\n   * Sets a flag, measures the iframe position if necessary and sends\n   * one change record to the iframe.\n   * Note that this method may be called more than once if a single ad\n   * has multiple parties interested in viewability data.\n   * @private\n   */\n  ;\n\n  _proto.startSendingIntersectionChanges_ = function startSendingIntersectionChanges_() {\n    var _this2 = this;\n\n    this.shouldSendIntersectionChanges_ = true;\n    this.baseElement_.getVsync().measure(function () {\n      if (_this2.baseElement_.isInViewport()) {\n        _this2.onViewportCallback(true);\n      }\n\n      _this2.fire();\n    });\n  }\n  /**\n   * Triggered by the AmpElement to when it either enters or exits the visible\n   * viewport.\n   * @param {boolean} inViewport true if the element is in viewport.\n   */\n  ;\n\n  _proto.onViewportCallback = function onViewportCallback(inViewport) {\n    if (this.inViewport_ == inViewport) {\n      return;\n    }\n\n    this.inViewport_ = inViewport; // Lets the ad know that it became visible or no longer is.\n\n    this.fire(); // And update the ad about its position in the viewport while\n    // it is visible.\n\n    if (inViewport) {\n      var send = this.fire.bind(this); // Scroll events.\n\n      var unlistenScroll = this.baseElement_.getViewport().onScroll(send); // Throttled scroll events. Also fires for resize events.\n\n      var unlistenChanged = this.baseElement_.getViewport().onChanged(send);\n\n      this.unlistenViewportChanges_ = function () {\n        unlistenScroll();\n        unlistenChanged();\n      };\n    } else {\n      this.unlistenOnOutViewport_();\n    }\n  }\n  /**\n   * Sends 'intersection' message to ad/iframe with intersection change records\n   * if this has been activated and we measured the layout box of the iframe\n   * at least once.\n   * @private\n   */\n  ;\n\n  _proto.sendElementIntersection_ = function sendElementIntersection_() {\n    if (!this.shouldSendIntersectionChanges_) {\n      return;\n    }\n\n    var change = this.baseElement_.element.getIntersectionChangeEntry();\n\n    if (this.pendingChanges_.length > 0 && this.pendingChanges_[this.pendingChanges_.length - 1].time == change.time) {\n      return;\n    }\n\n    this.pendingChanges_.push(change);\n\n    if (!this.flushTimeout_) {\n      // Send one immediately, …\n      this.flush_(); // but only send a maximum of 10 postMessages per second.\n\n      this.flushTimeout_ = this.timer_.delay(this.boundFlush_, 100);\n    }\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.flush_ = function flush_() {\n    // TODO(zhouyx): One potential place to check if element is still in doc.\n    this.flushTimeout_ = 0;\n\n    if (!this.pendingChanges_.length) {\n      return;\n    } // Note that SubscribeApi multicasts the update to all interested windows.\n\n\n    this.postMessageApi_.send('intersection', (0, _object.dict)({\n      'changes': this.pendingChanges_\n    }));\n    this.pendingChanges_.length = 0;\n  }\n  /**\n   * Provide a function to clear timeout before set this intersection to null.\n   */\n  ;\n\n  _proto.destroy = function destroy() {\n    this.timer_.cancel(this.flushTimeout_);\n    this.unlistenOnOutViewport_();\n    this.postMessageApi_.destroy();\n  };\n\n  return IntersectionObserver;\n}();\n\nexports.IntersectionObserver = IntersectionObserver;\n\n},{\"./iframe-helper\":38,\"./layout-rect\":43,\"./log\":45,\"./services\":53,\"./utils/object\":67}],42:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.recreateNonProtoObject = recreateNonProtoObject;\nexports.getValueForExpr = getValueForExpr;\nexports.parseJson = parseJson;\nexports.tryParseJson = tryParseJson;\nexports.getChildJsonConfig = getChildJsonConfig;\nexports.deepEquals = deepEquals;\nexports.jsonConfiguration = jsonConfiguration;\nexports.jsonLiteral = jsonLiteral;\nexports.includeJsonLiteral = includeJsonLiteral;\n\nvar _dom = require(\"./dom\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {*} should be string|number|boolean|null\n */\nvar JSONScalarDef;\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {*} should be !Object<string, ?JSONValueDef>\n */\n\nvar JSONObjectDef;\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {*} should be !Array<?JSONValueDef>\n */\n\nvar JSONArrayDef;\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {*} should be !JSONScalarDef|!JSONObjectDef|!JSONArrayDef\n */\n\nvar JSONValueDef;\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\n\nfunction recreateNonProtoObject(obj) {\n  var copy = Object.create(null);\n\n  for (var k in obj) {\n    if (!hasOwnProperty(obj, k)) {\n      continue;\n    }\n\n    var v = obj[k];\n    copy[k] = (0, _types.isObject)(v) ? recreateNonProtoObject(v) : v;\n  }\n\n  return (\n    /** @type {!JsonObject} */\n    copy\n  );\n}\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\n\n\nfunction getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  } // Otherwise, navigate via properties.\n\n\n  var parts = expr.split('.');\n  var value = obj;\n\n  for (var i = 0; i < parts.length; i++) {\n    var part = parts[i];\n\n    if (part && value && value[part] !== undefined && hasOwnProperty(value, part)) {\n      value = value[part];\n      continue;\n    }\n\n    value = undefined;\n    break;\n  }\n\n  return value;\n}\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {*} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\n\n\nfunction parseJson(json) {\n  return (\n    /** @type {?JsonObject} */\n    JSON.parse(\n    /** @type {string} */\n    json)\n  );\n}\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {*} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\n\n\nfunction tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    if (opt_onFailed) {\n      opt_onFailed(e);\n    }\n\n    return null;\n  }\n}\n/**\n * Helper method to get the json config from an element <script> tag\n * @param {!Element} element\n * @return {?JsonObject}\n * @throws {!Error} If element does not have exactly one <script> child\n * with type=\"application/json\", or if the <script> contents are not valid JSON.\n */\n\n\nfunction getChildJsonConfig(element) {\n  var scripts = (0, _dom.childElementsByTag)(element, 'script');\n  var n = scripts.length;\n\n  if (n !== 1) {\n    throw new Error(\"Found \" + scripts.length + \" <script> children. Expected 1.\");\n  }\n\n  var script = scripts[0];\n\n  if (!(0, _dom.isJsonScriptTag)(script)) {\n    throw new Error('<script> child must have type=\"application/json\"');\n  }\n\n  try {\n    return parseJson(script.textContent);\n  } catch (unusedError) {\n    throw new Error('Failed to parse <script> contents. Is it valid JSON?');\n  }\n}\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\n\n\nfunction deepEquals(a, b, depth) {\n  if (depth === void 0) {\n    depth = 5;\n  }\n\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n\n\n  var queue = [{\n    a: a,\n    b: b,\n    depth: depth\n  }];\n\n  while (queue.length > 0) {\n    var _queue$shift = queue.shift(),\n        _a = _queue$shift.a,\n        _b = _queue$shift.b,\n        _depth = _queue$shift.depth; // Only check deep equality if depth > 0.\n\n\n    if (_depth > 0) {\n      if (typeof _a !== typeof _b) {\n        return false;\n      } else if (Array.isArray(_a) && Array.isArray(_b)) {\n        if (_a.length !== _b.length) {\n          return false;\n        }\n\n        for (var i = 0; i < _a.length; i++) {\n          queue.push({\n            a: _a[i],\n            b: _b[i],\n            depth: _depth - 1\n          });\n        }\n\n        continue;\n      } else if (_a && _b && typeof _a === 'object' && typeof _b === 'object') {\n        var keysA = Object.keys(\n        /** @type {!Object} */\n        _a);\n        var keysB = Object.keys(\n        /** @type {!Object} */\n        _b);\n\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n\n        for (var _i = 0; _i < keysA.length; _i++) {\n          var k = keysA[_i];\n          queue.push({\n            a: _a[k],\n            b: _b[k],\n            depth: _depth - 1\n          });\n        }\n\n        continue;\n      }\n    } // If we get here, then depth == 0 or (a, b) are primitives.\n\n\n    if (_a !== _b) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @param {*} obj\n * @param {string} key\n * @return {boolean}\n */\n\n\nfunction hasOwnProperty(obj, key) {\n  if (obj == null || typeof obj != 'object') {\n    return false;\n  }\n\n  return Object.prototype.hasOwnProperty.call(\n  /** @type {!Object} */\n  obj, key);\n}\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\n\n\nfunction jsonConfiguration(obj) {\n  return (\n    /** @type {!JsonObject} */\n    obj\n  );\n}\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {!Object|!Array|string|number|boolean|null} value\n * @return {!InternalJsonLiteralTypeDef}\n */\n\n\nfunction jsonLiteral(value) {\n  return (\n    /** @type {!InternalJsonLiteralTypeDef} */\n    value\n  );\n}\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\n\n\nfunction includeJsonLiteral(value) {\n  return value;\n}\n\n},{\"./dom\":29,\"./types\":58}],43:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.layoutRectLtwh = layoutRectLtwh;\nexports.layoutRectFromDomRect = layoutRectFromDomRect;\nexports.layoutRectsOverlap = layoutRectsOverlap;\nexports.rectIntersection = rectIntersection;\nexports.layoutRectsRelativePos = layoutRectsRelativePos;\nexports.layoutPositionRelativeToScrolledViewport = layoutPositionRelativeToScrolledViewport;\nexports.expandLayoutRect = expandLayoutRect;\nexports.moveLayoutRect = moveLayoutRect;\nexports.areMarginsChanged = areMarginsChanged;\nexports.layoutRectSizeEquals = layoutRectSizeEquals;\nexports.layoutRectEquals = layoutRectEquals;\nexports.cloneLayoutMarginsChangeDef = cloneLayoutMarginsChangeDef;\nexports.RelativePositions = exports.LayoutMarginsChangeDef = exports.LayoutMarginsDef = exports.LayoutRectDef = void 0;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The structure that combines position and size for an element. The exact\n * interpretation of position and size depends on the use case.\n *\n * @typedef {{\n *   top: number,\n *   bottom: number,\n *   left: number,\n *   right: number,\n *   width: number,\n *   height: number,\n *   x: number,\n *   y: number\n * }}\n */\nvar LayoutRectDef;\n/**\n * The structure that represents the margins of an Element.\n *\n * @typedef {{\n *   top: number,\n *   right: number,\n *   bottom: number,\n *   left: number\n * }}\n */\n\nexports.LayoutRectDef = LayoutRectDef;\nvar LayoutMarginsDef;\n/**\n * The structure that represents a requested change to the margins of an\n * Element. Any new values specified will replace existing ones (rather than\n * being additive).\n *\n * @typedef {{\n *   top: (number|undefined),\n *   right: (number|undefined),\n *   bottom: (number|undefined),\n *   left: (number|undefined)\n * }}\n */\n\nexports.LayoutMarginsDef = LayoutMarginsDef;\nvar LayoutMarginsChangeDef;\n/**\n * RelativePositions\n *\n * Describes the relative position of an element to another (whether the\n * first is inside the second, on top of the second or on the bottom\n * @enum {string}\n */\n\nexports.LayoutMarginsChangeDef = LayoutMarginsChangeDef;\nvar RelativePositions = {\n  INSIDE: 'inside',\n  TOP: 'top',\n  BOTTOM: 'bottom'\n};\n/**\n * Creates a layout rect based on the left, top, width and height parameters\n * in that order.\n * @param {number} left\n * @param {number} top\n * @param {number} width\n * @param {number} height\n * @return {!LayoutRectDef}\n */\n\nexports.RelativePositions = RelativePositions;\n\nfunction layoutRectLtwh(left, top, width, height) {\n  return {\n    left: left,\n    top: top,\n    width: width,\n    height: height,\n    bottom: top + height,\n    right: left + width,\n    x: left,\n    y: top\n  };\n}\n/**\n * Creates a layout rect based on the DOMRect, e.g. obtained from calling\n * getBoundingClientRect.\n * @param {!ClientRect} rect\n * @return {!LayoutRectDef}\n */\n\n\nfunction layoutRectFromDomRect(rect) {\n  return layoutRectLtwh(Number(rect.left), Number(rect.top), Number(rect.width), Number(rect.height));\n}\n/**\n * Returns true if the specified two rects overlap by a single pixel.\n * @param {!LayoutRectDef} r1\n * @param {!LayoutRectDef} r2\n * @return {boolean}\n */\n\n\nfunction layoutRectsOverlap(r1, r2) {\n  return r1.top <= r2.bottom && r2.top <= r1.bottom && r1.left <= r2.right && r2.left <= r1.right;\n}\n/**\n * Returns the intersection between a, b or null if there is none.\n * @param {...?LayoutRectDef|undefined} var_args\n * @return {?LayoutRectDef}\n */\n\n\nfunction rectIntersection(var_args) {\n  var x0 = -Infinity;\n  var x1 = Infinity;\n  var y0 = -Infinity;\n  var y1 = Infinity;\n\n  for (var i = 0; i < arguments.length; i++) {\n    var current = arguments[i];\n\n    if (!current) {\n      continue;\n    }\n\n    x0 = Math.max(x0, current.left);\n    x1 = Math.min(x1, current.left + current.width);\n    y0 = Math.max(y0, current.top);\n    y1 = Math.min(y1, current.top + current.height);\n\n    if (x1 < x0 || y1 < y0) {\n      return null;\n    }\n  }\n\n  if (x1 == Infinity) {\n    return null;\n  }\n\n  return layoutRectLtwh(x0, y0, x1 - x0, y1 - y0);\n}\n/**\n * Returns the position of r2 relative to r1\n * @param {!LayoutRectDef} r1\n * @param {!LayoutRectDef} r2\n * @return {RelativePositions}\n */\n\n\nfunction layoutRectsRelativePos(r1, r2) {\n  if (r1.top < r2.top) {\n    return RelativePositions.TOP;\n  } else if (r1.bottom > r2.bottom) {\n    return RelativePositions.BOTTOM;\n  } else {\n    return RelativePositions.INSIDE;\n  }\n}\n/**\n * Determines if any portion of a layoutBox would be onscreen in the given\n * viewport, when scrolled to the specified position.\n * @param {!LayoutRectDef} layoutBox\n * @param {!./service/viewport/viewport-interface.ViewportInterface} viewport\n * @param {number} scrollPos\n * @return {RelativePositions}\n */\n\n\nfunction layoutPositionRelativeToScrolledViewport(layoutBox, viewport, scrollPos) {\n  var scrollLayoutBox = layoutRectFromDomRect(\n  /** @type {!ClientRect} */\n  {\n    top: scrollPos,\n    bottom: scrollPos + viewport.getHeight(),\n    left: 0,\n    right: viewport.getWidth()\n  });\n\n  if (layoutRectsOverlap(layoutBox, scrollLayoutBox)) {\n    return RelativePositions.INSIDE;\n  } else {\n    return layoutRectsRelativePos(layoutBox, scrollLayoutBox);\n  }\n}\n/**\n * Expand the layout rect using multiples of width and height.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dw Expansion in width, specified as a multiple of width.\n * @param {number} dh Expansion in height, specified as a multiple of height.\n * @return {!LayoutRectDef}\n */\n\n\nfunction expandLayoutRect(rect, dw, dh) {\n  return layoutRectLtwh(rect.left - rect.width * dw, rect.top - rect.height * dh, rect.width * (1 + dw * 2), rect.height * (1 + dh * 2));\n}\n/**\n * Moves the layout rect using dx and dy.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dx Move horizontally with this value.\n * @param {number} dy Move vertically with this value.\n * @return {!LayoutRectDef}\n */\n\n\nfunction moveLayoutRect(rect, dx, dy) {\n  if (dx == 0 && dy == 0 || rect.width == 0 && rect.height == 0) {\n    return rect;\n  }\n\n  return layoutRectLtwh(rect.left + dx, rect.top + dy, rect.width, rect.height);\n}\n/**\n * @param {!LayoutMarginsDef} margins\n * @param {!LayoutMarginsChangeDef} change\n * @return {boolean}\n */\n\n\nfunction areMarginsChanged(margins, change) {\n  return change.top !== undefined && change.top != margins.top || change.right !== undefined && change.right != margins.right || change.bottom !== undefined && change.bottom != margins.bottom || change.left !== undefined && change.left != margins.left;\n}\n/**\n * @param {!LayoutRectDef} from\n * @param {!LayoutRectDef} to\n * @return {boolean}\n */\n\n\nfunction layoutRectSizeEquals(from, to) {\n  return from.width == to.width && from.height === to.height;\n}\n/**\n * @param {?LayoutRectDef} r1\n * @param {?LayoutRectDef} r2\n * @return {boolean}\n */\n\n\nfunction layoutRectEquals(r1, r2) {\n  if (!r1 || !r2) {\n    return false;\n  }\n\n  return r1.left == r2.left && r1.top == r2.top && r1.width == r2.width && r1.height == r2.height;\n}\n/**\n * @param {LayoutMarginsChangeDef|undefined} marginsChange\n * @return {LayoutMarginsChangeDef|undefined}\n */\n\n\nfunction cloneLayoutMarginsChangeDef(marginsChange) {\n  if (!marginsChange) {\n    return marginsChange;\n  }\n\n  return {\n    top: marginsChange.top,\n    bottom: marginsChange.bottom,\n    left: marginsChange.left,\n    right: marginsChange.right\n  };\n}\n\n},{}],44:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.parseLayout = parseLayout;\nexports.getLayoutClass = getLayoutClass;\nexports.isLayoutSizeDefined = isLayoutSizeDefined;\nexports.isLayoutSizeFixed = isLayoutSizeFixed;\nexports.isInternalElement = isInternalElement;\nexports.parseLength = parseLength;\nexports.assertLength = assertLength;\nexports.assertLengthOrPercent = assertLengthOrPercent;\nexports.getLengthUnits = getLengthUnits;\nexports.getLengthNumeral = getLengthNumeral;\nexports.hasNaturalDimensions = hasNaturalDimensions;\nexports.getNaturalDimensions = getNaturalDimensions;\nexports.isLoadingAllowed = isLoadingAllowed;\nexports.isIframeVideoPlayerComponent = isIframeVideoPlayerComponent;\nexports.applyStaticLayout = applyStaticLayout;\nexports.LOADING_ELEMENTS_ = exports.naturalDimensions_ = exports.LengthDef = exports.LayoutPriority = exports.Layout = void 0;\n\nvar _log = require(\"./log\");\n\nvar _staticTemplate = require(\"./static-template\");\n\nvar _types = require(\"./types\");\n\nvar _style = require(\"./style\");\n\nvar _string = require(\"./string\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n      <i-amphtml-sizer class=\\\"i-amphtml-sizer\\\">\\n        <img alt=\\\"\\\" role=\\\"presentation\\\" aria-hidden=\\\"true\\\"\\n             class=\\\"i-amphtml-intrinsic-sizer\\\" />\\n      </i-amphtml-sizer>\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) { if (!raw) { raw = strings.slice(0); } strings.raw = raw; return strings; }\n\n/**\n * @enum {string}\n */\nvar Layout = {\n  NODISPLAY: 'nodisplay',\n  FIXED: 'fixed',\n  FIXED_HEIGHT: 'fixed-height',\n  RESPONSIVE: 'responsive',\n  CONTAINER: 'container',\n  FILL: 'fill',\n  FLEX_ITEM: 'flex-item',\n  FLUID: 'fluid',\n  INTRINSIC: 'intrinsic'\n};\n/**\n * Layout priorities to use with BaseElement#getLayoutPriority() and\n * BaseElement#updateLayoutPriority().\n * @enum {number}\n */\n\nexports.Layout = Layout;\nvar LayoutPriority = {\n  CONTENT: 0,\n  METADATA: 1,\n  ADS: 2,\n  BACKGROUND: 3\n};\n/**\n * CSS Length type. E.g. \"1px\" or \"20vh\".\n * @typedef {string}\n */\n\nexports.LayoutPriority = LayoutPriority;\nvar LengthDef;\n/**\n * @typedef {{\n *   width: string,\n *   height: string\n * }}\n */\n\nexports.LengthDef = LengthDef;\nvar DimensionsDef;\n/**\n * The set of elements with natural dimensions, that is, elements\n * which have a known dimension either based on their value specified here,\n * or, if the value is null, a dimension specific to the browser.\n * `hasNaturalDimensions` checks for membership in this set.\n * `getNaturalDimensions` determines the dimensions for an element in the\n *    set and caches it.\n * @type {!Object<string, ?DimensionsDef>}\n * @private  Visible for testing only!\n */\n\nvar naturalDimensions_ = {\n  'AMP-PIXEL': {\n    width: '0px',\n    height: '0px'\n  },\n  'AMP-ANALYTICS': {\n    width: '1px',\n    height: '1px'\n  },\n  // TODO(dvoytenko): audio should have width:auto.\n  'AMP-AUDIO': null,\n  'AMP-SOCIAL-SHARE': {\n    width: '60px',\n    height: '44px'\n  }\n};\n/**\n * Elements that the progress can be shown for. This set has to be externalized\n * since the element's implementation may not be downloaded yet.\n * This list does not include video players which are found via regex later.\n * @enum {boolean}\n * @private  Visible for testing only!\n */\n\nexports.naturalDimensions_ = naturalDimensions_;\nvar LOADING_ELEMENTS_ = {\n  'AMP-AD': true,\n  'AMP-ANIM': true,\n  'AMP-EMBED': true,\n  'AMP-FACEBOOK': true,\n  'AMP-FACEBOOK-COMMENTS': true,\n  'AMP-FACEBOOK-PAGE': true,\n  'AMP-GOOGLE-DOCUMENT-EMBED': true,\n  'AMP-IFRAME': true,\n  'AMP-IMG': true,\n  'AMP-INSTAGRAM': true,\n  'AMP-LIST': true,\n  'AMP-PINTEREST': true,\n  'AMP-PLAYBUZZ': true,\n  'AMP-TWITTER': true\n};\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they are listed individually.\n * @private @const {!RegExp}\n */\n\nexports.LOADING_ELEMENTS_ = LOADING_ELEMENTS_;\nvar videoPlayerTagNameRe = /^amp\\-(video|.+player)|AMP-BRIGHTCOVE|AMP-DAILYMOTION|AMP-YOUTUBE|AMP-VIMEO|AMP-IMA-VIDEO/i;\n/**\n * @param {string} s\n * @return {Layout|undefined} Returns undefined in case of failure to parse\n *   the layout string.\n */\n\nfunction parseLayout(s) {\n  for (var k in Layout) {\n    if (Layout[k] == s) {\n      return Layout[k];\n    }\n  }\n\n  return undefined;\n}\n/**\n * @param {!Layout} layout\n * @return {string}\n */\n\n\nfunction getLayoutClass(layout) {\n  return 'i-amphtml-layout-' + layout;\n}\n/**\n * Whether an element with this layout inherently defines the size.\n * @param {!Layout} layout\n * @return {boolean}\n */\n\n\nfunction isLayoutSizeDefined(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT || layout == Layout.RESPONSIVE || layout == Layout.FILL || layout == Layout.FLEX_ITEM || layout == Layout.FLUID || layout == Layout.INTRINSIC;\n}\n/**\n * Whether an element with this layout has a fixed dimension.\n * @param {!Layout} layout\n * @return {boolean}\n */\n\n\nfunction isLayoutSizeFixed(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT;\n}\n/**\n * Whether the tag is an internal (service) AMP tag.\n * @param {!Node|string} tag\n * @return {boolean}\n */\n\n\nfunction isInternalElement(tag) {\n  var tagName = typeof tag == 'string' ? tag : tag.tagName;\n  return tagName && (0, _string.startsWith)(tagName.toLowerCase(), 'i-');\n}\n/**\n * Parses the CSS length value. If no units specified, the assumed value is\n * \"px\". Returns undefined in case of parsing error.\n * @param {string|undefined|null} s\n * @return {!LengthDef|undefined}\n */\n\n\nfunction parseLength(s) {\n  if (typeof s == 'number') {\n    return s + 'px';\n  }\n\n  if (!s) {\n    return undefined;\n  }\n\n  if (!/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)?$/.test(s)) {\n    return undefined;\n  }\n\n  if (/^\\d+(\\.\\d+)?$/.test(s)) {\n    return s + 'px';\n  }\n\n  return s;\n}\n/**\n * Asserts that the supplied value is a non-percent CSS Length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction assertLength(length) {\n  (0, _log.userAssert)(/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)$/.test(length), 'Invalid length value: %s', length);\n  return (\n    /** @type {!LengthDef} */\n    length\n  );\n}\n/**\n * Asserts that the supplied value is a CSS Length value\n * (including percent unit).\n * @param {!LengthDef|string} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction assertLengthOrPercent(length) {\n  (0, _log.userAssert)(/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|%)$/.test(length), 'Invalid length or percent value: %s', length);\n  return length;\n}\n/**\n * Returns units from the CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {string}\n */\n\n\nfunction getLengthUnits(length) {\n  assertLength(length);\n  (0, _log.dev)().assertString(length);\n  var m = (0, _log.userAssert)(length.match(/[a-z]+/i), 'Failed to read units from %s', length);\n  return m[0];\n}\n/**\n * Returns the numeric value of a CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {number|undefined}\n */\n\n\nfunction getLengthNumeral(length) {\n  var res = parseFloat(length);\n  return (0, _types.isFiniteNumber)(res) ? res : undefined;\n}\n/**\n * Determines whether the tagName is a known element that has natural dimensions\n * in our runtime or the browser.\n * @param {string} tagName The element tag name.\n * @return {boolean}\n */\n\n\nfunction hasNaturalDimensions(tagName) {\n  tagName = tagName.toUpperCase();\n  return naturalDimensions_[tagName] !== undefined;\n}\n/**\n * Determines the default dimensions for an element which could vary across\n * different browser implementations, like <audio> for instance.\n * This operation can only be completed for an element whitelisted by\n * `hasNaturalDimensions`.\n * @param {!Element} element\n * @return {DimensionsDef}\n */\n\n\nfunction getNaturalDimensions(element) {\n  var tagName = element.tagName.toUpperCase();\n  (0, _log.devAssert)(naturalDimensions_[tagName] !== undefined);\n\n  if (!naturalDimensions_[tagName]) {\n    var doc = element.ownerDocument;\n    var naturalTagName = tagName.replace(/^AMP\\-/, '');\n    var temp = doc.createElement(naturalTagName); // For audio, should no-op elsewhere.\n\n    temp.controls = true;\n    (0, _style.setStyles)(temp, {\n      position: 'absolute',\n      visibility: 'hidden'\n    });\n    doc.body.appendChild(temp);\n    naturalDimensions_[tagName] = {\n      width: (temp.\n      /*OK*/\n      offsetWidth || 1) + 'px',\n      height: (temp.\n      /*OK*/\n      offsetHeight || 1) + 'px'\n    };\n    doc.body.removeChild(temp);\n  }\n\n  return (\n    /** @type {DimensionsDef} */\n    naturalDimensions_[tagName]\n  );\n}\n/**\n * Whether the loading can be shown for the specified elemeent. This set has\n * to be externalized since the element's implementation may not be\n * downloaded yet.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isLoadingAllowed(element) {\n  var tagName = element.tagName.toUpperCase();\n  return LOADING_ELEMENTS_[tagName] || isIframeVideoPlayerComponent(tagName);\n}\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they're present in the LOADING_ELEMENTS_ whitelist.\n * @param {string} tagName\n * @return {boolean}\n */\n\n\nfunction isIframeVideoPlayerComponent(tagName) {\n  if (tagName == 'AMP-VIDEO') {\n    return false;\n  }\n\n  return videoPlayerTagNameRe.test(tagName);\n}\n/**\n * Applies layout to the element. Visible for testing only.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this method is used for server-side rendering (SSR) and\n * any changes made to it must be made in coordination with caches that\n * implement SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @param {!Element} element\n * @return {!Layout}\n */\n\n\nfunction applyStaticLayout(element) {\n  // Check if the layout has already been done by server-side rendering or\n  // client-side rendering and the element was cloned. The document may be\n  // visible to the user if the boilerplate was removed so please take care in\n  // making changes here.\n  var completedLayoutAttr = element.getAttribute('i-amphtml-layout');\n\n  if (completedLayoutAttr) {\n    var _layout =\n    /** @type {!Layout} */\n    (0, _log.devAssert)(parseLayout(completedLayoutAttr));\n\n    if ((_layout == Layout.RESPONSIVE || _layout == Layout.INTRINSIC) && element.firstElementChild) {\n      // Find sizer, but assume that it might not have been parsed yet.\n      element.sizerElement = element.querySelector('i-amphtml-sizer') || undefined;\n    } else if (_layout == Layout.NODISPLAY) {\n      (0, _style.toggle)(element, false); // TODO(jridgewell): Temporary hack while SSR still adds an inline\n      // `display: none`\n\n      element['style']['display'] = '';\n    }\n\n    return _layout;\n  } // If the layout was already done by server-side rendering (SSR), then the\n  // code below will not run. Any changes below will necessitate a change to SSR\n  // and must be coordinated with caches that implement SSR. See bit.ly/amp-ssr.\n  // Parse layout from the element.\n\n\n  var layoutAttr = element.getAttribute('layout');\n  var widthAttr = element.getAttribute('width');\n  var heightAttr = element.getAttribute('height');\n  var sizesAttr = element.getAttribute('sizes');\n  var heightsAttr = element.getAttribute('heights'); // Input layout attributes.\n\n  var inputLayout = layoutAttr ? parseLayout(layoutAttr) : null;\n  (0, _log.userAssert)(inputLayout !== undefined, 'Unknown layout: %s', layoutAttr);\n  /** @const {string|null|undefined} */\n\n  var inputWidth = widthAttr && widthAttr != 'auto' ? parseLength(widthAttr) : widthAttr;\n  (0, _log.userAssert)(inputWidth !== undefined, 'Invalid width value: %s', widthAttr);\n  /** @const {string|null|undefined} */\n\n  var inputHeight = heightAttr && heightAttr != 'fluid' ? parseLength(heightAttr) : heightAttr;\n  (0, _log.userAssert)(inputHeight !== undefined, 'Invalid height value: %s', heightAttr); // Effective layout attributes. These are effectively constants.\n\n  var width;\n  var height;\n  var layout; // Calculate effective width and height.\n\n  if ((!inputLayout || inputLayout == Layout.FIXED || inputLayout == Layout.FIXED_HEIGHT) && (!inputWidth || !inputHeight) && hasNaturalDimensions(element.tagName)) {\n    // Default width and height: handle elements that do not specify a\n    // width/height and are defined to have natural browser dimensions.\n    var dimensions = getNaturalDimensions(element);\n    width = inputWidth || inputLayout == Layout.FIXED_HEIGHT ? inputWidth : dimensions.width;\n    height = inputHeight || dimensions.height;\n  } else {\n    width = inputWidth;\n    height = inputHeight;\n  } // Calculate effective layout.\n\n\n  if (inputLayout) {\n    layout = inputLayout;\n  } else if (!width && !height) {\n    layout = Layout.CONTAINER;\n  } else if (height == 'fluid') {\n    layout = Layout.FLUID;\n  } else if (height && (!width || width == 'auto')) {\n    layout = Layout.FIXED_HEIGHT;\n  } else if (height && width && (sizesAttr || heightsAttr)) {\n    layout = Layout.RESPONSIVE;\n  } else {\n    layout = Layout.FIXED;\n  } // Verify layout attributes.\n\n\n  if (layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT || layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    (0, _log.userAssert)(height, 'Expected height to be available: %s', heightAttr);\n  }\n\n  if (layout == Layout.FIXED_HEIGHT) {\n    (0, _log.userAssert)(!width || width == 'auto', 'Expected width to be either absent or equal \"auto\" ' + 'for fixed-height layout: %s', widthAttr);\n  }\n\n  if (layout == Layout.FIXED || layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    (0, _log.userAssert)(width && width != 'auto', 'Expected width to be available and not equal to \"auto\": %s', widthAttr);\n  }\n\n  if (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    (0, _log.userAssert)(getLengthUnits(width) == getLengthUnits(height), 'Length units should be the same for width and height: %s, %s', widthAttr, heightAttr);\n  } else {\n    (0, _log.userAssert)(heightsAttr === null, 'Unexpected \"heights\" attribute for none-responsive layout');\n  } // Apply UI.\n\n\n  element.classList.add(getLayoutClass(layout));\n\n  if (isLayoutSizeDefined(layout)) {\n    element.classList.add('i-amphtml-layout-size-defined');\n  }\n\n  if (layout == Layout.NODISPLAY) {\n    // CSS defines layout=nodisplay automatically with `display:none`. Thus\n    // no additional styling is needed.\n    (0, _style.toggle)(element, false); // TODO(jridgewell): Temporary hack while SSR still adds an inline\n    // `display: none`\n\n    element['style']['display'] = '';\n  } else if (layout == Layout.FIXED) {\n    (0, _style.setStyles)(element, {\n      width: (0, _log.dev)().assertString(width),\n      height: (0, _log.dev)().assertString(height)\n    });\n  } else if (layout == Layout.FIXED_HEIGHT) {\n    (0, _style.setStyle)(element, 'height', (0, _log.dev)().assertString(height));\n  } else if (layout == Layout.RESPONSIVE) {\n    var sizer = element.ownerDocument.createElement('i-amphtml-sizer');\n    (0, _style.setStyles)(sizer, {\n      paddingTop: getLengthNumeral(height) / getLengthNumeral(width) * 100 + '%'\n    });\n    element.insertBefore(sizer, element.firstChild);\n    element.sizerElement = sizer;\n  } else if (layout == Layout.INTRINSIC) {\n    // Intrinsic uses an svg inside the sizer element rather than the padding\n    // trick Note a naked svg won't work becasue other thing expect the\n    // i-amphtml-sizer element\n    var _sizer = (0, _staticTemplate.htmlFor)(element)(_templateObject());\n\n    var intrinsicSizer = _sizer.firstElementChild;\n    intrinsicSizer.setAttribute('src', \"data:image/svg+xml;charset=utf-8,<svg height=\\\"\" + height + \"\\\" width=\\\"\" + width + \"\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\"/>\");\n    element.insertBefore(_sizer, element.firstChild);\n    element.sizerElement = _sizer;\n  } else if (layout == Layout.FILL) {// Do nothing.\n  } else if (layout == Layout.CONTAINER) {// Do nothing. Elements themselves will check whether the supplied\n    // layout value is acceptable. In particular container is only OK\n    // sometimes.\n  } else if (layout == Layout.FLEX_ITEM) {\n    // Set height and width to a flex item if they exist.\n    // The size set to a flex item could be overridden by `display: flex` later.\n    if (width) {\n      (0, _style.setStyle)(element, 'width', width);\n    }\n\n    if (height) {\n      (0, _style.setStyle)(element, 'height', height);\n    }\n  } else if (layout == Layout.FLUID) {\n    element.classList.add('i-amphtml-layout-awaiting-size');\n\n    if (width) {\n      (0, _style.setStyle)(element, 'width', width);\n    }\n\n    (0, _style.setStyle)(element, 'height', 0);\n  } // Mark the element as having completed static layout, in case it is cloned\n  // in the future.\n\n\n  element.setAttribute('i-amphtml-layout', layout);\n  return layout;\n}\n\n},{\"./log\":45,\"./static-template\":54,\"./string\":55,\"./style\":57,\"./types\":58}],45:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isUserErrorMessage = isUserErrorMessage;\nexports.isUserErrorEmbed = isUserErrorEmbed;\nexports.setReportError = setReportError;\nexports.overrideLogLevel = overrideLogLevel;\nexports.duplicateErrorIfNecessary = duplicateErrorIfNecessary;\nexports.createErrorVargs = createErrorVargs;\nexports.rethrowAsync = rethrowAsync;\nexports.initLogConstructor = initLogConstructor;\nexports.resetLogConstructorForTesting = resetLogConstructorForTesting;\nexports.user = user;\nexports.dev = dev;\nexports.isFromEmbed = isFromEmbed;\nexports.devAssert = devAssert;\nexports.userAssert = userAssert;\nexports.Log = exports.LogLevel = exports.USER_ERROR_EMBED_SENTINEL = exports.USER_ERROR_SENTINEL = void 0;\n\nvar _mode = require(\"./mode\");\n\nvar _modeObject = require(\"./mode-object\");\n\nvar _internalVersion = require(\"./internal-version\");\n\nvar _types = require(\"./types\");\n\nvar _function = require(\"./utils/function\");\n\nvar _config = require(\"./config\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar noop = function noop() {};\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\n\n\nvar USER_ERROR_SENTINEL = \"\\u200B\\u200B\\u200B\";\n/**\n * Four zero width space.\n *\n * @const {string}\n */\n\nexports.USER_ERROR_SENTINEL = USER_ERROR_SENTINEL;\nvar USER_ERROR_EMBED_SENTINEL = \"\\u200B\\u200B\\u200B\\u200B\";\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\n\nexports.USER_ERROR_EMBED_SENTINEL = USER_ERROR_EMBED_SENTINEL;\n\nfunction isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\n\n\nfunction isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n/**\n * @enum {number}\n * @private Visible for testing only.\n */\n\n\nvar LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4\n};\n/**\n * Sets reportError function. Called from error.js to break cyclic\n * dependency.\n * @param {function(*, !Element=)|undefined} fn\n */\n\nexports.LogLevel = LogLevel;\n\nfunction setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\n\n\nvar levelOverride_ = undefined;\n/**\n * @param {!LogLevel} level\n */\n\nfunction overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\n\n\nvar messageUrlRtv = function messageUrlRtv() {\n  return \"01\" + (0, _internalVersion.internalRuntimeVersion)();\n};\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\n\n\nvar externalMessageUrl = function externalMessageUrl(id, interpolatedParts) {\n  return interpolatedParts.reduce(function (prefix, arg) {\n    return prefix + \"&s[]=\" + messageArgToEncodedComponent(arg);\n  }, \"https://log.amp.dev/?v=\" + messageUrlRtv() + \"&id=\" + encodeURIComponent(id));\n};\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\n\n\nvar externalMessagesSimpleTableUrl = function externalMessagesSimpleTableUrl() {\n  return _config.urls.cdn + \"/rtv/\" + messageUrlRtv() + \"/log-messages.simple.json\";\n};\n/**\n * @param {*} arg\n * @return {string}\n */\n\n\nvar messageArgToEncodedComponent = function messageArgToEncodedComponent(arg) {\n  return encodeURIComponent(String(elementStringOrPassthru(arg)));\n};\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don’t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\n\n\nvar Log =\n/*#__PURE__*/\nfunction () {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(!./mode.ModeDef):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  function Log(win, levelFunc, opt_suffix) {\n    var _this = this;\n\n    if (opt_suffix === void 0) {\n      opt_suffix = '';\n    }\n\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = (0, _mode.getMode)().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n    /** @private @const {function(!./mode.ModeDef):!LogLevel} */\n\n    this.levelFunc_ = levelFunc;\n    /** @private @const {!LogLevel} */\n\n    this.level_ = this.defaultLevel_();\n    /** @private @const {string} */\n\n    this.suffix_ = opt_suffix;\n    /** @private {?JsonObject} */\n\n    this.messages_ = null;\n    this.fetchExternalMessagesOnce_ = (0, _function.once)(function () {\n      win.fetch(externalMessagesSimpleTableUrl()).then(function (response) {\n        return response.json();\n      }, noop).then(function (opt_messages) {\n        if (opt_messages) {\n          _this.messages_ =\n          /** @type {!JsonObject} */\n          opt_messages;\n        }\n      });\n    });\n  }\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n\n\n  var _proto = Log.prototype;\n\n  _proto.getLevel_ = function getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  ;\n\n  _proto.defaultLevel_ = function defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    } // Logging has been explicitly disabled.\n\n\n    if ((0, _mode.getMode)().log == '0') {\n      return LogLevel.OFF;\n    } // Logging is enabled for tests directly.\n\n\n    if ((0, _mode.getMode)().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    } // LocalDev by default allows INFO level, unless overriden by `#log`.\n\n\n    if ((0, _mode.getMode)().localDev && !(0, _mode.getMode)().log) {\n      return LogLevel.INFO;\n    } // Delegate to the specific resolver.\n\n\n    return this.levelFunc_((0, _modeObject.getModeObject)());\n  }\n  /**\n   * @param {string} tag\n   * @param {string} level\n   * @param {!Array} messages\n   */\n  ;\n\n  _proto.msg_ = function msg_(tag, level, messages) {\n    if (this.getLevel_() != LogLevel.OFF) {\n      var fn = this.win.console.log;\n\n      if (level == 'ERROR') {\n        fn = this.win.console.error || fn;\n      } else if (level == 'INFO') {\n        fn = this.win.console.info || fn;\n      } else if (level == 'WARN') {\n        fn = this.win.console.warn || fn;\n      }\n\n      var args = this.maybeExpandMessageArgs_(messages); // Prefix console message with \"[tag]\".\n\n      var prefix = \"[\" + tag + \"]\";\n\n      if (typeof args[0] === 'string') {\n        // Prepend string to avoid breaking string substitutions e.g. %s.\n        args[0] = prefix + ' ' + args[0];\n      } else {\n        args.unshift(prefix);\n      }\n\n      fn.apply(this.win.console, args);\n    }\n  }\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isEnabled = function isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.fine = function fine(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.FINE) {\n      this.msg_(tag, 'FINE', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.info = function info(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.INFO) {\n      this.msg_(tag, 'INFO', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.warn = function warn(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.WARN) {\n      this.msg_(tag, 'WARN', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} var_args\n   * @return {!Error|undefined}\n   * @private\n   */\n  ;\n\n  _proto.error_ = function error_(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.ERROR) {\n      this.msg_(tag, 'ERROR', Array.prototype.slice.call(arguments, 1));\n    } else {\n      var error = createErrorVargs.apply(null, Array.prototype.slice.call(arguments, 1));\n      this.prepareError_(error);\n      return error;\n    }\n  }\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.error = function error(tag, var_args) {\n    var error = this.error_.apply(this, arguments);\n\n    if (error) {\n      error.name = tag || error.name; // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.expectedError = function expectedError(unusedTag, var_args) {\n    var error = this.error_.apply(this, arguments);\n\n    if (error) {\n      error.expected = true; // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  ;\n\n  _proto.createError = function createError(var_args) {\n    var error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  ;\n\n  _proto.createExpectedError = function createExpectedError(var_args) {\n    var error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * NOTE: for an explanation of the tempate R implementation see\n   * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {R} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is `null` or `undefined`.\n   * @template T\n   * @template R :=\n   *     mapunion(T, (V) =>\n   *         cond(eq(V, 'null'),\n   *             none(),\n   *             cond(eq(V, 'undefined'),\n   *                 none(),\n   *                 V)))\n   *  =:\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assert = function assert(shouldBeTrueish, opt_message, var_args) {\n    var firstElement;\n\n    if ((0, _types.isArray)(opt_message)) {\n      return this.assert.apply(this, [shouldBeTrueish].concat(this.expandMessageArgs_(\n      /** @type {!Array} */\n      opt_message)));\n    }\n\n    if (!shouldBeTrueish) {\n      var message = opt_message || 'Assertion failed';\n      var splitMessage = message.split('%s');\n      var first = splitMessage.shift();\n      var formatted = first;\n      var messageArray = [];\n      var i = 2;\n      pushIfNonEmpty(messageArray, first);\n\n      while (splitMessage.length > 0) {\n        var nextConstant = splitMessage.shift();\n        var val = arguments[i++];\n\n        if (val && val.tagName) {\n          firstElement = val;\n        }\n\n        messageArray.push(val);\n        pushIfNonEmpty(messageArray, nextConstant.trim());\n        formatted += stringOrElementString(val) + nextConstant;\n      }\n\n      var e = new Error(formatted);\n      e.fromAssert = true;\n      e.associatedElement = firstElement;\n      e.messageArray = messageArray;\n      this.prepareError_(e); // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(e);\n\n      throw e;\n    }\n\n    return shouldBeTrueish;\n  }\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertElement = function assertElement(shouldBeElement, opt_message) {\n    var shouldBeTrueish = shouldBeElement && shouldBeElement.nodeType == 1;\n    this.assertType_(shouldBeElement, shouldBeTrueish, 'Element expected', opt_message);\n    return (\n      /** @type {!Element} */\n      shouldBeElement\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertString = function assertString(shouldBeString, opt_message) {\n    this.assertType_(shouldBeString, typeof shouldBeString == 'string', 'String expected', opt_message);\n    return (\n      /** @type {string} */\n      shouldBeString\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertNumber = function assertNumber(shouldBeNumber, opt_message) {\n    this.assertType_(shouldBeNumber, typeof shouldBeNumber == 'number', 'Number expected', opt_message);\n    return (\n      /** @type {number} */\n      shouldBeNumber\n    );\n  }\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertArray = function assertArray(shouldBeArray, opt_message) {\n    this.assertType_(shouldBeArray, (0, _types.isArray)(shouldBeArray), 'Array expected', opt_message);\n    return (\n      /** @type {!Array} */\n      shouldBeArray\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertBoolean = function assertBoolean(shouldBeBoolean, opt_message) {\n    this.assertType_(shouldBeBoolean, !!shouldBeBoolean === shouldBeBoolean, 'Boolean expected', opt_message);\n    return (\n      /** @type {boolean} */\n      shouldBeBoolean\n    );\n  }\n  /**\n   * Asserts and returns the enum value. If the enum doesn't contain such a\n   * value, the error is thrown.\n   *\n   * @param {!Object<T>} enumObj\n   * @param {string} s\n   * @param {string=} opt_enumName\n   * @return {T}\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertEnumValue = function assertEnumValue(enumObj, s, opt_enumName) {\n    if ((0, _types.isEnumValue)(enumObj, s)) {\n      return s;\n    }\n\n    this.assert(false, 'Unknown %s value: \"%s\"', opt_enumName || 'enum', s);\n  }\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  ;\n\n  _proto.prepareError_ = function prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  ;\n\n  _proto.maybeExpandMessageArgs_ = function maybeExpandMessageArgs_(args) {\n    if ((0, _types.isArray)(args[0])) {\n      return this.expandMessageArgs_(\n      /** @type {!Array} */\n      args[0]);\n    }\n\n    return args;\n  }\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  ;\n\n  _proto.expandMessageArgs_ = function expandMessageArgs_(parts) {\n    // First value should exist.\n    var id = parts.shift(); // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n\n    if ((0, _mode.getMode)(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n\n    return [\"More info at \" + externalMessageUrl(id, parts)];\n  }\n  /**\n   * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n   *\n   * It understands array-based \"id\"-contracted messages.\n   *\n   * Otherwise creates a sprintf syntax string containing the optional message or the\n   * default. An interpolation token is added at the end to include the `subject`.\n   * @param {*} subject\n   * @param {*} assertion\n   * @param {string} defaultMessage\n   * @param {!Array|string=} opt_message\n   * @private\n   */\n  ;\n\n  _proto.assertType_ = function assertType_(subject, assertion, defaultMessage, opt_message) {\n    if ((0, _types.isArray)(opt_message)) {\n      this.assert(assertion, opt_message.concat(subject));\n    } else {\n      this.assert(assertion, (opt_message || defaultMessage) + \": %s\", subject);\n    }\n  };\n\n  return Log;\n}();\n/**\n * @param {string|!Element} val\n * @return {string}\n */\n\n\nexports.Log = Log;\n\nvar stringOrElementString = function stringOrElementString(val) {\n  return (\n    /** @type {string} */\n    elementStringOrPassthru(val)\n  );\n};\n/**\n * @param {*} val\n * @return {*}\n */\n\n\nfunction elementStringOrPassthru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (val && val.nodeType == 1) {\n    return val.tagName.toLowerCase() + (val.id ? '#' + val.id : '');\n  }\n\n  return val;\n}\n/**\n * @param {!Array} array\n * @param {*} val\n */\n\n\nfunction pushIfNonEmpty(array, val) {\n  if (val != '') {\n    array.push(val);\n  }\n}\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\n\n\nfunction duplicateErrorIfNecessary(error) {\n  var messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n\n  if (messageProperty && messageProperty.writable) {\n    return error;\n  }\n\n  var message = error.message,\n      stack = error.stack;\n  var e = new Error(message); // Copy all the extraneous things we attach.\n\n  for (var prop in error) {\n    e[prop] = error[prop];\n  } // Ensure these are copied.\n\n\n  e.stack = stack;\n  return e;\n}\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\n\n\nfunction createErrorVargs(var_args) {\n  var error = null;\n  var message = '';\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n\n  return error;\n}\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\n\n\nfunction rethrowAsync(var_args) {\n  var error = createErrorVargs.apply(null, arguments);\n  setTimeout(function () {\n    // reportError is installed globally per window in the entry point.\n    self.__AMP_REPORT_ERROR(error);\n\n    throw error;\n  });\n}\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\n\n\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null\n};\nvar logs = self.__AMP_LOG;\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?Function}\n */\n\nvar logConstructor = null;\n/**\n * Initializes log contructor.\n */\n\nfunction initLogConstructor() {\n  logConstructor = Log; // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n\n  dev();\n  user();\n}\n/**\n * Resets log contructor for testing.\n */\n\n\nfunction resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\n\n\nfunction user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n\n    return logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL);\n  }\n}\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\n\n\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n\n  return new logConstructor(self, function (mode) {\n    var logNum = parseInt(mode.log, 10);\n\n    if (mode.development || logNum >= 1) {\n      return LogLevel.FINE;\n    }\n\n    return LogLevel.WARN;\n  }, suffix);\n}\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\n\n\nfunction dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n\n  return logs.dev = new logConstructor(self, function (mode) {\n    var logNum = parseInt(mode.log, 10);\n\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n\n    return LogLevel.OFF;\n  });\n}\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\n\n\nfunction isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n\n  return opt_element.ownerDocument.defaultView != win;\n}\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction devAssert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9) {\n  if ((0, _mode.getMode)().minified) {\n    return shouldBeTrueish;\n  }\n\n  return dev().\n  /*Orig call*/\n  assert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9);\n}\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction userAssert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9) {\n  return user().\n  /*Orig call*/\n  assert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9);\n}\n\n},{\"./config\":24,\"./internal-version\":40,\"./mode\":47,\"./mode-object\":46,\"./types\":58,\"./utils/function\":64}],46:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getModeObject = getModeObject;\n\nvar _mode = require(\"./mode\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides info about the current app. This return value may be cached and\n * passed around as it will always be DCE'd.\n * @param {?Window=} opt_win\n * @return {!./mode.ModeDef}\n */\nfunction getModeObject(opt_win) {\n  return {\n    localDev: (0, _mode.getMode)(opt_win).localDev,\n    development: (0, _mode.getMode)(opt_win).development,\n    filter: (0, _mode.getMode)(opt_win).filter,\n    minified: (0, _mode.getMode)(opt_win).minified,\n    lite: (0, _mode.getMode)(opt_win).lite,\n    test: (0, _mode.getMode)(opt_win).test,\n    log: (0, _mode.getMode)(opt_win).log,\n    version: (0, _mode.getMode)(opt_win).version,\n    rtvVersion: (0, _mode.getMode)(opt_win).rtvVersion,\n    singlePassType: (0, _mode.getMode)(opt_win).singlePassType\n  };\n}\n\n},{\"./mode\":47}],47:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getMode = getMode;\nexports.getRtvVersionForTesting = getRtvVersionForTesting;\nexports.resetRtvVersionForTesting = resetRtvVersionForTesting;\nexports.ModeDef = void 0;\n\nvar _internalVersion = require(\"./internal-version\");\n\nvar _urlParseQueryString = require(\"./url-parse-query-string\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   filter: (string|undefined),\n *   minified: boolean,\n *   lite: boolean,\n *   test: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   singlePassType: (string|undefined)\n * }}\n */\nvar ModeDef;\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\n\nexports.ModeDef = ModeDef;\nvar rtvVersion = '';\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\n\nfunction getMode(opt_win) {\n  var win = opt_win || self;\n\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n\n  return win.__AMP_MODE = getMode_(win);\n}\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\n\n\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  var AMP_CONFIG = self.AMP_CONFIG || {}; // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_DEV is only replaced when `gulp dist` is called without the\n  // --fortesting flag.\n\n  var IS_DEV = true;\n  var IS_MINIFIED = false;\n  var localDevEnabled = !!AMP_CONFIG.localDev;\n  var runningTests = !!AMP_CONFIG.test || IS_DEV && !!(win.__AMP_TEST || win.__karma__);\n  var runningTestsOnIe = win.__karma__ && win.__karma__.config.amp.testOnIe;\n  var isLocalDev = IS_DEV && (localDevEnabled || runningTests);\n  var hashQuery = (0, _urlParseQueryString.parseQueryString_)( // location.originalHash is set by the viewer when it removes the fragment\n  // from the URL.\n  win.location.originalHash || win.location.hash);\n  var singlePassType = AMP_CONFIG.spt;\n  var searchQuery = (0, _urlParseQueryString.parseQueryString_)(win.location.search);\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win, isLocalDev);\n  } // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `gulp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n\n\n  return {\n    localDev: isLocalDev,\n    // Triggers validation or enable pub level logging. Validation can be\n    // bypassed via #validate=0.\n    // Note that AMP_DEV_MODE flag is used for testing purposes.\n    // Use Array.indexOf instead of Array.includes because of #24219\n    development: !!(['1', 'actions', 'amp', 'amp4ads', 'amp4email'].indexOf(hashQuery['development']) >= 0 || win.AMP_DEV_MODE),\n    examiner: hashQuery['development'] == '2',\n    // Allows filtering validation errors by error category. For the\n    // available categories, see ErrorCategory in validator/validator.proto.\n    filter: hashQuery['filter'],\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    // amp-user-location override\n    userLocationOverride: hashQuery['amp-user-location'],\n    minified: IS_MINIFIED,\n    // Whether document is in an amp-lite viewer. It signal that the user\n    // would prefer to use less bandwidth.\n    lite: searchQuery['amp_lite'] != undefined,\n    test: runningTests,\n    testIe: runningTestsOnIe,\n    log: hashQuery['log'],\n    version: (0, _internalVersion.internalRuntimeVersion)(),\n    rtvVersion: rtvVersion,\n    singlePassType: singlePassType\n  };\n}\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n */\n\n\nfunction getRtvVersion(win, isLocalDev) {\n  // If it's local dev then we won't actually have a full version so\n  // just use the version.\n  if (isLocalDev) {\n    return (0, _internalVersion.internalRuntimeVersion)();\n  }\n\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  } // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n\n\n  return \"01\" + (0, _internalVersion.internalRuntimeVersion)();\n}\n/**\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n * @visibleForTesting\n */\n\n\nfunction getRtvVersionForTesting(win, isLocalDev) {\n  return getRtvVersion(win, isLocalDev);\n}\n/** @visibleForTesting */\n\n\nfunction resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n\n},{\"./internal-version\":40,\"./url-parse-query-string\":59}],48:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.waitForServices = waitForServices;\nexports.hasRenderDelayingServices = hasRenderDelayingServices;\nexports.isRenderDelayingService = isRenderDelayingService;\nexports.includedServices = includedServices;\nexports.RenderDelayingService = void 0;\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\nvar _service = require(\"./service\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A map of services that delay rendering. The key is the name of the service\n * and the value is a DOM query which is used to check if the service is needed\n * in the current document.\n * Do not add a service unless absolutely necessary.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this list is used for server-side rendering (SSR) and any\n * changes made to it must be made in coordination with caches that implement\n * SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @const {!Object<string, string>}\n */\nvar SERVICES = {\n  'amp-dynamic-css-classes': '[custom-element=amp-dynamic-css-classes]',\n  'variant': 'amp-experiment',\n  'amp-story-render': 'amp-story[standalone]'\n};\n/**\n * Base class for render delaying services.\n * This should be extended to ensure the service\n * is properly handled\n *\n * @interface\n */\n\nvar RenderDelayingService =\n/*#__PURE__*/\nfunction () {\n  function RenderDelayingService() {}\n\n  var _proto = RenderDelayingService.prototype;\n\n  /**\n   * Function to return a promise for when\n   * it is finished delaying render, and is ready.\n   * NOTE: This should simply return Promise.resolve,\n   * if your service does not need to perform any logic\n   * after being registered.\n   * @return {!Promise}\n   */\n  _proto.whenReady = function whenReady() {};\n\n  return RenderDelayingService;\n}();\n/**\n * Maximum milliseconds to wait for all extensions to load before erroring.\n * @const\n */\n\n\nexports.RenderDelayingService = RenderDelayingService;\nvar LOAD_TIMEOUT = 3000;\n/**\n * Detects any render delaying services that are required on the page, and\n * returns a promise with a timeout.\n * @param {!Window} win\n * @return {!Promise<!Array<*>>} resolves to an Array that has the same length\n *     as the detected render delaying services\n */\n\nfunction waitForServices(win) {\n  var promises = includedServices(win).map(function (serviceId) {\n    var serviceReadyPromise = (0, _service.getServicePromise)(win, serviceId).then(function (service) {\n      if (service && isRenderDelayingService(service)) {\n        return service.whenReady().then(function () {\n          return service;\n        });\n      }\n\n      return service;\n    });\n    return _services.Services.timerFor(win).timeoutPromise(LOAD_TIMEOUT, serviceReadyPromise, \"Render timeout waiting for service \" + serviceId + \" to be ready.\");\n  });\n  return Promise.all(promises);\n}\n/**\n * Returns true if the page has a render delaying service.\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nfunction hasRenderDelayingServices(win) {\n  return includedServices(win).length > 0;\n}\n/**\n * Function to determine if the passed\n * Object is a Render Delaying Service\n * @param {!Object} service\n * @return {boolean}\n */\n\n\nfunction isRenderDelayingService(service) {\n  var maybeRenderDelayingService =\n  /** @type {!RenderDelayingService}*/\n  service;\n  return typeof maybeRenderDelayingService.whenReady == 'function';\n}\n/**\n * Detects which, if any, render-delaying extensions are included on the page.\n * @param {!Window} win\n * @return {!Array<string>}\n */\n\n\nfunction includedServices(win) {\n  /** @const {!Document} */\n  var doc = win.document;\n  (0, _log.devAssert)(doc.body);\n  return Object.keys(SERVICES).filter(function (service) {\n    return doc.querySelector(SERVICES[service]);\n  });\n}\n\n},{\"./log\":45,\"./service\":49,\"./services\":53}],49:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getExistingServiceForDocInEmbedScope = getExistingServiceForDocInEmbedScope;\nexports.installServiceInEmbedScope = installServiceInEmbedScope;\nexports.registerServiceBuilder = registerServiceBuilder;\nexports.registerServiceBuilderForDoc = registerServiceBuilderForDoc;\nexports.rejectServicePromiseForDoc = rejectServicePromiseForDoc;\nexports.getService = getService;\nexports.getServicePromise = getServicePromise;\nexports.getExistingServiceOrNull = getExistingServiceOrNull;\nexports.getServicePromiseOrNull = getServicePromiseOrNull;\nexports.getServiceForDoc = getServiceForDoc;\nexports.getServicePromiseForDoc = getServicePromiseForDoc;\nexports.getServicePromiseOrNullForDoc = getServicePromiseOrNullForDoc;\nexports.setParentWindow = setParentWindow;\nexports.getParentWindow = getParentWindow;\nexports.getTopWindow = getTopWindow;\nexports.getParentWindowFrameElement = getParentWindowFrameElement;\nexports.getAmpdoc = getAmpdoc;\nexports.isDisposable = isDisposable;\nexports.assertDisposable = assertDisposable;\nexports.disposeServicesForDoc = disposeServicesForDoc;\nexports.disposeServicesForEmbed = disposeServicesForEmbed;\nexports.installServiceInEmbedIfEmbeddable = installServiceInEmbedIfEmbeddable;\nexports.adoptServiceForEmbedDoc = adoptServiceForEmbedDoc;\nexports.resetServiceForTesting = resetServiceForTesting;\nexports.EmbeddableService = exports.Disposable = void 0;\n\nvar _promise = require(\"./utils/promise\");\n\nvar _log = require(\"./log\");\n\nvar _experiments = require(\"./experiments\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (?function(new:Object, !Window)|\n *          ?function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nvar ServiceHolderDef;\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\n\nvar Disposable =\n/*#__PURE__*/\nfunction () {\n  function Disposable() {}\n\n  var _proto = Disposable.prototype;\n\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  _proto.dispose = function dispose() {};\n\n  return Disposable;\n}();\n/**\n * Services must implement this interface to be embeddable in FIEs.\n * @interface\n */\n\n\nexports.Disposable = Disposable;\n\nvar EmbeddableService =\n/*#__PURE__*/\nfunction () {\n  function EmbeddableService() {}\n\n  /**\n   * Installs a new instance of the service in the given FIE window.\n   * @param {!Window} unusedEmbedWin\n   * @param {!./service/ampdoc-impl.AmpDoc} unusedAmpDoc\n   */\n  EmbeddableService.installInEmbedWindow = function installInEmbedWindow(unusedEmbedWin, unusedAmpDoc) {};\n\n  return EmbeddableService;\n}();\n/**\n * Returns a service with the given id. Assumes that it has been constructed\n * already.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\n\n\nexports.EmbeddableService = EmbeddableService;\n\nfunction getExistingServiceForDocInEmbedScope(element, id) {\n  // TODO(#22733): completely remove this method once ampdoc-fie launches.\n  var document = element.ownerDocument;\n  var win = (0, _types.toWin)(document.defaultView);\n  var topWin = getTopWindow(win); // First, try to resolve via local embed window (if applicable).\n\n  var isEmbed = win != topWin;\n  var ampdocFieExperimentOn = (0, _experiments.isExperimentOn)(topWin, 'ampdoc-fie');\n\n  if (isEmbed && !ampdocFieExperimentOn) {\n    if (isServiceRegistered(win, id)) {\n      return getServiceInternal(win, id);\n    } // Fallback from FIE to parent is intentionally unsupported for safety.\n\n\n    return null;\n  } else {\n    // Resolve via the element's ampdoc.\n    return getServiceForDocOrNullInternal(element, id);\n  }\n}\n/**\n * Installs a service override on amp-doc level.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {!Object} service The service.\n */\n\n\nfunction installServiceInEmbedScope(embedWin, id, service) {\n  var topWin = getTopWindow(embedWin);\n  (0, _log.devAssert)(embedWin != topWin, 'Service override can only be installed in embed window: %s', id);\n  (0, _log.devAssert)(!isServiceRegistered(embedWin, id), 'Service override has already been installed: %s', id);\n  var ampdocFieExperimentOn = (0, _experiments.isExperimentOn)(topWin, 'ampdoc-fie');\n\n  if (ampdocFieExperimentOn) {\n    var ampdoc = getAmpdoc(embedWin.document);\n    registerServiceInternal(getAmpdocServiceHolder(ampdoc), ampdoc, id, function () {\n      return service;\n    },\n    /* override */\n    true);\n  } else {\n    registerServiceInternal(embedWin, embedWin, id, function () {\n      return service;\n    });\n    getServiceInternal(embedWin, id); // Force service to build.\n  }\n}\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\n\n\nfunction registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\n\n\nfunction registerServiceBuilderForDoc(nodeOrDoc, id, constructor, opt_instantiate) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\n\n\nfunction rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\n\n\nfunction getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\n\n\nfunction getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\n\n\nfunction getServiceForDoc(elementOrAmpDoc, id) {\n  var ampdoc = getAmpdoc(elementOrAmpDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\n\n\nfunction getServiceForDocOrNullInternal(element, id) {\n  var ampdoc = getAmpdoc(element);\n  var holder = getAmpdocServiceHolder(ampdoc);\n\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\n\n\nfunction setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\n\n\nfunction getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\n\n\nfunction getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\n\n\nfunction getParentWindowFrameElement(node, opt_topWin) {\n  var childWin = (node.ownerDocument || node).defaultView;\n  var topWin = opt_topWin || getTopWindow(childWin);\n\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return (\n        /** @type {?HTMLIFrameElement} */\n        childWin.frameElement\n      );\n    } catch (e) {// Ignore the error.\n    }\n  }\n\n  return null;\n}\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\n\n\nfunction getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    var win = (0, _types.toWin)(\n    /** @type {!Document} */\n    (nodeOrDoc.ownerDocument || nodeOrDoc).defaultView);\n    return getAmpdocService(win).getAmpDoc(\n    /** @type {!Node} */\n    nodeOrDoc);\n  }\n\n  return (\n    /** @type {!./service/ampdoc-impl.AmpDoc} */\n    nodeOrDoc\n  );\n}\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\n\n\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\n\n\nfunction getAmpdocService(win) {\n  return (\n    /** @type {!./service/ampdoc-impl.AmpDocService} */\n    getService(win, 'ampdoc')\n  );\n}\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n * @template T\n */\n\n\nfunction getServiceInternal(holder, id) {\n  (0, _log.devAssert)(isServiceRegistered(holder, id), \"Expected service \" + id + \" to be registered\");\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (!s.obj) {\n    (0, _log.devAssert)(s.ctor, \"Service \" + id + \" registered without ctor nor impl.\");\n    (0, _log.devAssert)(s.context, \"Service \" + id + \" registered without context.\");\n    s.obj = new s.ctor(s.context);\n    (0, _log.devAssert)(s.obj, \"Service \" + id + \" constructed to null.\");\n    s.ctor = null;\n    s.context = null; // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n\n  return s.obj;\n}\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n */\n\n\nfunction registerServiceInternal(holder, context, id, ctor, opt_override) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null\n    };\n  }\n\n  if (!opt_override && (s.ctor || s.obj)) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context; // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromiseInternal(holder, id) {\n  var cached = getServicePromiseOrNullInternal(holder, id);\n\n  if (cached) {\n    return cached;\n  } // Service is not registered.\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n\n\n  var services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return (\n    /** @type {!Promise<!Object>} */\n    services[id].promise\n  );\n}\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\n\n\nfunction rejectServicePromiseInternal(holder, id, error) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNullInternal(holder, id) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return s.promise = Promise.resolve(\n      /** @type {!Object} */\n      s.obj);\n    }\n  }\n\n  return null;\n}\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\n\n\nfunction getServices(holder) {\n  var services = holder.__AMP_SERVICES;\n\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n\n  return services;\n}\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\n\n\nfunction isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\n\n\nfunction assertDisposable(service) {\n  (0, _log.devAssert)(isDisposable(service), 'required to implement Disposable');\n  return (\n    /** @type {!Disposable} */\n    service\n  );\n}\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\n\n\nfunction disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\n\n\nfunction disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n/**\n * @param {!Object} holder Object holding the service instances.\n */\n\n\nfunction disposeServicesInternal(holder) {\n  // TODO(dvoytenko): Consider marking holder as destroyed for later-arriving\n  // service to be canceled automatically.\n  var services = getServices(holder);\n\n  var _loop = function _loop(id) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      return \"continue\";\n    }\n\n    var serviceHolder = services[id];\n\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then(function (instance) {\n        return disposeServiceInternal(id, instance);\n      });\n    }\n  };\n\n  for (var id in services) {\n    var _ret = _loop(id);\n\n    if (_ret === \"continue\") continue;\n  }\n}\n/**\n * @param {string} id\n * @param {!Object} service\n */\n\n\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    (0, _log.dev)().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n/**\n * Adopts an embeddable (implements `EmbeddableService` interface) service\n * in embed scope.\n * @param {!Window} embedWin\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} serviceClass\n * @suppress {missingProperties}\n * @return {boolean}\n */\n\n\nfunction installServiceInEmbedIfEmbeddable(embedWin, serviceClass) {\n  var isEmbeddableService = typeof serviceClass.installInEmbedWindow === 'function';\n\n  if (!isEmbeddableService) {\n    return false;\n  }\n\n  var frameElement = (0, _log.dev)().assertElement(embedWin.frameElement, 'frameElement not found for embed');\n  var ampdoc = getAmpdoc(frameElement);\n  serviceClass.installInEmbedWindow(embedWin, ampdoc);\n  return true;\n}\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\n\n\nfunction adoptServiceForEmbedDoc(ampdoc, id) {\n  var service = getServiceInternal(getAmpdocServiceHolder((0, _log.devAssert)(ampdoc.getParent())), id);\n  registerServiceInternal(getAmpdocServiceHolder(ampdoc), ampdoc, id, function () {\n    return service;\n  });\n}\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\n\n\nfunction resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\n\n\nfunction isServiceRegistered(holder, id) {\n  var service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id]; // All registered services must have an implementation or a constructor.\n\n  return !!(service && (service.ctor || service.obj));\n}\n/** @return {!ServiceHolderDef} */\n\n\nfunction emptyServiceHolderWithPromise() {\n  var deferred = new _promise.Deferred();\n  var promise = deferred.promise,\n      resolve = deferred.resolve,\n      reject = deferred.reject;\n  promise.catch(function () {}); // avoid uncaught exception when service gets rejected\n\n  return {\n    obj: null,\n    promise: promise,\n    resolve: resolve,\n    reject: reject,\n    context: null,\n    ctor: null\n  };\n}\n\n},{\"./experiments\":34,\"./log\":45,\"./types\":58,\"./utils/promise\":68}],50:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.MutatorInterface = void 0;\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\n\n/**\n * @interface\n */\nvar MutatorInterface =\n/*#__PURE__*/\nfunction () {\n  function MutatorInterface() {}\n\n  var _proto = MutatorInterface.prototype;\n\n  /**\n   * Requests the runtime to change the element's size. When the size is\n   * successfully updated then the opt_callback is called.\n   * @param {!Element} element\n   * @param {number|undefined} newHeight\n   * @param {number|undefined} newWidth\n   * @param {function()=} opt_callback A callback function.\n   * @param {!../layout-rect.LayoutMarginsChangeDef=} opt_newMargins\n   */\n  _proto.changeSize = function changeSize(element, newHeight, newWidth, opt_callback, opt_newMargins) {}\n  /**\n   * Return a promise that requests the runtime to update the size of\n   * this element to the specified value.\n   * The runtime will schedule this request and attempt to process it\n   * as soon as possible. However, unlike in {@link changeSize}, the runtime\n   * may refuse to make a change in which case it will reject promise, call the\n   * `overflowCallback` method on the target resource with the height value.\n   * Overflow callback is expected to provide the reader with the user action\n   * to update the height manually.\n   * Note that the runtime does not call the `overflowCallback` method if the\n   * requested height is 0 or negative.\n   * If the height is successfully updated then the promise is resolved.\n   * @param {!Element} element\n   * @param {number|undefined} newHeight\n   * @param {number|undefined} newWidth\n   * @param {!../layout-rect.LayoutMarginsChangeDef=} opt_newMargins\n   * @return {!Promise}\n   * @param {?Event=} opt_event\n   */\n  ;\n\n  _proto.attemptChangeSize = function attemptChangeSize(element, newHeight, newWidth, opt_newMargins, opt_event) {}\n  /**\n   * Expands the element.\n   * @param {!Element} element\n   */\n  ;\n\n  _proto.expandElement = function expandElement(element) {}\n  /**\n   * Return a promise that requests runtime to collapse this element.\n   * The runtime will schedule this request and first attempt to resize\n   * the element to height and width 0. If success runtime will set element\n   * display to none, and notify element owner of this collapse.\n   * @param {!Element} element\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.attemptCollapse = function attemptCollapse(element) {}\n  /**\n   * Collapses the element: ensures that it's `display:none`, notifies its\n   * owner and updates the layout box.\n   * @param {!Element} element\n   */\n  ;\n\n  _proto.collapseElement = function collapseElement(element) {}\n  /**\n   * Runs the specified measure, which is called in the \"measure\" vsync phase.\n   * This is simply a proxy to the privileged vsync service.\n   *\n   * @param {function()} measurer\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.measureElement = function measureElement(measurer) {}\n  /**\n   * Runs the specified mutation on the element and ensures that remeasures and\n   * layouts performed for the affected elements.\n   *\n   * This method should be called whenever a significant mutations are done\n   * on the DOM that could affect layout of elements inside this subtree or\n   * its siblings. The top-most affected element should be specified as the\n   * first argument to this method and all the mutation work should be done\n   * in the mutator callback which is called in the \"mutation\" vsync phase.\n   *\n   * @param {!Element} element\n   * @param {function()} mutator\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.mutateElement = function mutateElement(element, mutator) {}\n  /**\n   * Runs the specified mutation on the element and ensures that remeasures and\n   * layouts performed for the affected elements.\n   *\n   * This method should be called whenever a significant mutations are done\n   * on the DOM that could affect layout of elements inside this subtree or\n   * its siblings. The top-most affected element should be specified as the\n   * first argument to this method and all the mutation work should be done\n   * in the mutator callback which is called in the \"mutation\" vsync phase.\n   *\n   * @param {!Element} element\n   * @param {?function()} measurer\n   * @param {function()} mutator\n   * @return {!Promise}\n   */\n  ;\n\n  _proto.measureMutateElement = function measureMutateElement(element, measurer, mutator) {};\n\n  return MutatorInterface;\n}();\n/* eslint-enable no-unused-vars */\n\n\nexports.MutatorInterface = MutatorInterface;\n\n},{}],51:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.ResourcesInterface = exports.READY_SCAN_SIGNAL = void 0;\n\nvar _mutatorInterface = require(\"./mutator-interface\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/** @const {string} */\nvar READY_SCAN_SIGNAL = 'ready-scan';\n/* eslint-disable no-unused-vars */\n\n/**\n * @interface\n */\n\nexports.READY_SCAN_SIGNAL = READY_SCAN_SIGNAL;\n\nvar ResourcesInterface =\n/*#__PURE__*/\nfunction (_MutatorInterface) {\n  _inheritsLoose(ResourcesInterface, _MutatorInterface);\n\n  function ResourcesInterface() {\n    return _MutatorInterface.apply(this, arguments) || this;\n  }\n\n  var _proto = ResourcesInterface.prototype;\n\n  /**\n   * Returns a list of resources.\n   * @return {!Array<!./resource.Resource>}\n   * @export\n   */\n  _proto.get = function get() {}\n  /**\n   * @return {!./ampdoc-impl.AmpDoc}\n   */\n  ;\n\n  _proto.getAmpdoc = function getAmpdoc() {}\n  /**\n   * Returns the {@link Resource} instance corresponding to the specified AMP\n   * Element. If no Resource is found, the exception is thrown.\n   * @param {!AmpElement} element\n   * @return {!./resource.Resource}\n   */\n  ;\n\n  _proto.getResourceForElement = function getResourceForElement(element) {}\n  /**\n   * Returns the {@link Resource} instance corresponding to the specified AMP\n   * Element. Returns null if no resource is found.\n   * @param {!AmpElement} element\n   * @return {?./resource.Resource}\n   */\n  ;\n\n  _proto.getResourceForElementOptional = function getResourceForElementOptional(element) {}\n  /**\n   * Returns the direction the user last scrolled.\n   *  - -1 for scrolling up\n   *  - 1 for scrolling down\n   *  - Defaults to 1\n   * TODO(lannka): this method should not belong to resources.\n   * @return {number}\n   */\n  ;\n\n  _proto.getScrollDirection = function getScrollDirection() {}\n  /**\n   * Signals that an element has been added to the DOM. Resources manager\n   * will start tracking it from this point on.\n   * @param {!AmpElement} element\n   */\n  ;\n\n  _proto.add = function add(element) {}\n  /**\n   * Signals that an element has been upgraded to the DOM. Resources manager\n   * will perform build and enable layout/viewport signals for this element.\n   * @param {!AmpElement} element\n   */\n  ;\n\n  _proto.upgraded = function upgraded(element) {}\n  /**\n   * Signals that an element has been removed to the DOM. Resources manager\n   * will stop tracking it from this point on.\n   * @param {!AmpElement} element\n   */\n  ;\n\n  _proto.remove = function remove(element) {}\n  /**\n   * Schedules layout or preload for the specified resource.\n   * @param {!./resource.Resource} resource\n   * @param {boolean} layout\n   * @param {number=} opt_parentPriority\n   * @param {boolean=} opt_forceOutsideViewport\n   * @package\n   */\n  ;\n\n  _proto.scheduleLayoutOrPreload = function scheduleLayoutOrPreload(resource, layout, opt_parentPriority, opt_forceOutsideViewport) {}\n  /**\n   * Schedules the work pass at the latest with the specified delay.\n   * @param {number=} opt_delay\n   * @param {boolean=} opt_relayoutAll\n   * @return {boolean}\n   */\n  ;\n\n  _proto.schedulePass = function schedulePass(opt_delay, opt_relayoutAll) {}\n  /**\n   * Registers a callback to be called when the next pass happens.\n   * @param {function()} callback\n   */\n  ;\n\n  _proto.onNextPass = function onNextPass(callback) {}\n  /**\n   * @return {!Promise} when first pass executed.\n   */\n  ;\n\n  _proto.whenFirstPass = function whenFirstPass() {}\n  /**\n   * Called when main AMP binary is fully initialized.\n   * May never be called in Shadow Mode.\n   */\n  ;\n\n  _proto.ampInitComplete = function ampInitComplete() {}\n  /**\n   * Updates the priority of the resource. If there are tasks currently\n   * scheduled, their priority is updated as well.\n   * @param {!Element} element\n   * @param {number} newLayoutPriority\n   */\n  ;\n\n  _proto.updateLayoutPriority = function updateLayoutPriority(element, newLayoutPriority) {};\n\n  return ResourcesInterface;\n}(_mutatorInterface.MutatorInterface);\n/* eslint-enable no-unused-vars */\n\n\nexports.ResourcesInterface = ResourcesInterface;\n\n},{\"./mutator-interface\":50}],52:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getTimingDataAsync = getTimingDataAsync;\nexports.getTimingDataSync = getTimingDataSync;\nexports.getNavigationData = getNavigationData;\nexports.VariableSource = exports.AsyncResolverDef = exports.SyncResolverDef = exports.ResolverReturnDef = void 0;\n\nvar _services = require(\"../services\");\n\nvar _log = require(\"../log\");\n\nvar _types = require(\"../types\");\n\nvar _eventHelper = require(\"../event-helper\");\n\nvar _documentReady = require(\"../document-ready\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {string|number|boolean|undefined|null} */\nvar ResolverReturnDef;\n/** @typedef {function(...string):ResolverReturnDef} */\n\nexports.ResolverReturnDef = ResolverReturnDef;\nvar SyncResolverDef;\n/** @typedef {function(...string):!Promise<ResolverReturnDef>} */\n\nexports.SyncResolverDef = SyncResolverDef;\nvar AsyncResolverDef;\n/** @typedef {{sync: SyncResolverDef, async: AsyncResolverDef}} */\n\nexports.AsyncResolverDef = AsyncResolverDef;\nvar ReplacementDef;\n/**\n * A list of events that the navTiming needs to wait for.\n * Sort event in order\n * @enum {number}\n */\n\nvar WAITFOR_EVENTS = {\n  VIEWER_FIRST_VISIBLE: 1,\n  DOCUMENT_COMPLETE: 2,\n  LOAD: 3,\n  LOAD_END: 4\n};\n/**\n * A list of events on which event they should wait\n * @const {!Object<string, WAITFOR_EVENTS>}\n */\n\nvar NAV_TIMING_WAITFOR_EVENTS = {\n  // ready on viewer first visible\n  'navigationStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'redirectStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'redirectEnd': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'fetchStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'domainLookupStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'domainLookupEnd': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'connectStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'secureConnectionStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'connectEnd': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'requestStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'responseStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'responseEnd': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  // ready on document complte\n  'domLoading': WAITFOR_EVENTS.DOCUMENT_COMPLETE,\n  'domInteractive': WAITFOR_EVENTS.DOCUMENT_COMPLETE,\n  'domContentLoaded': WAITFOR_EVENTS.DOCUMENT_COMPLETE,\n  'domComplete': WAITFOR_EVENTS.DOCUMENT_COMPLETE,\n  // ready on load\n  'loadEventStart': WAITFOR_EVENTS.LOAD,\n  // ready on load complete\n  'loadEventEnd': WAITFOR_EVENTS.LOAD_END\n};\n/**\n * Returns navigation timing information based on the start and end events.\n * The data for the timing events is retrieved from performance.timing API.\n * If start and end events are both given, the result is the difference between\n * the two. If only start event is given, the result is the timing value at\n * start event.\n * @param {!Window} win\n * @param {string} startEvent\n * @param {string=} endEvent\n * @return {!Promise<ResolverReturnDef>}\n */\n\nfunction getTimingDataAsync(win, startEvent, endEvent) {\n  // Fallback to load event if we don't know what to wait for\n  var startWaitForEvent = NAV_TIMING_WAITFOR_EVENTS[startEvent] || WAITFOR_EVENTS.LOAD;\n  var endWaitForEvent = endEvent ? NAV_TIMING_WAITFOR_EVENTS[endEvent] || WAITFOR_EVENTS.LOAD : startWaitForEvent;\n  var waitForEvent = Math.max(startWaitForEvent, endWaitForEvent); // set wait for onload to be default\n\n  var readyPromise;\n\n  if (waitForEvent === WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE) {\n    readyPromise = Promise.resolve();\n  } else if (waitForEvent === WAITFOR_EVENTS.DOCUMENT_COMPLETE) {\n    readyPromise = (0, _documentReady.whenDocumentComplete)(win.document);\n  } else if (waitForEvent === WAITFOR_EVENTS.LOAD) {\n    readyPromise = (0, _eventHelper.loadPromise)(win);\n  } else if (waitForEvent === WAITFOR_EVENTS.LOAD_END) {\n    // performance.timing.loadEventEnd returns 0 before the load event handler\n    // has terminated, that's when the load event is completed.\n    // To wait for the event handler to terminate, wait 1ms and defer to the\n    // event loop.\n    var timer = _services.Services.timerFor(win);\n\n    readyPromise = (0, _eventHelper.loadPromise)(win).then(function () {\n      return timer.promise(1);\n    });\n  }\n\n  (0, _log.devAssert)(readyPromise, 'waitForEvent not supported ' + waitForEvent);\n  return readyPromise.then(function () {\n    return getTimingDataSync(win, startEvent, endEvent);\n  });\n}\n/**\n * Returns navigation timing information based on the start and end events.\n * The data for the timing events is retrieved from performance.timing API.\n * If start and end events are both given, the result is the difference between\n * the two. If only start event is given, the result is the timing value at\n * start event. Enforces synchronous evaluation.\n * @param {!Window} win\n * @param {string} startEvent\n * @param {string=} endEvent\n * @return {ResolverReturnDef} undefined if API is not available, empty string\n *    if it is not yet available, or value as string\n */\n\n\nfunction getTimingDataSync(win, startEvent, endEvent) {\n  var timingInfo = win['performance'] && win['performance']['timing'];\n\n  if (!timingInfo || timingInfo['navigationStart'] == 0) {\n    // Navigation timing API is not supported.\n    return;\n  }\n\n  var metric = endEvent === undefined ? timingInfo[startEvent] : timingInfo[endEvent] - timingInfo[startEvent];\n\n  if (!(0, _types.isFiniteNumber)(metric) || metric < 0) {\n    // The metric is not supported.\n    return;\n  } else {\n    return metric;\n  }\n}\n/**\n * Returns navigation information from the current browsing context.\n * @param {!Window} win\n * @param {string} attribute\n * @return {ResolverReturnDef}\n * @private\n */\n\n\nfunction getNavigationData(win, attribute) {\n  var navigationInfo = win['performance'] && win['performance']['navigation'];\n\n  if (!navigationInfo || navigationInfo[attribute] === undefined) {\n    // PerformanceNavigation interface is not supported or attribute is not\n    // implemented.\n    return;\n  }\n\n  return navigationInfo[attribute];\n}\n/**\n * A class to provide variable substitution related features. Extend this class\n * and override initialize() to add more supported variables.\n */\n\n\nvar VariableSource =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   */\n  function VariableSource(ampdoc) {\n    /** @protected @const {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampdoc;\n    /** @private @const {!Object<string, !ReplacementDef>} */\n\n    this.replacements_ = Object.create(null);\n    /** @private {boolean} */\n\n    this.initialized_ = false;\n    this.getUrlMacroWhitelist_();\n  }\n  /**\n   * Lazily initialize the default replacements.\n   * @private\n   */\n\n\n  var _proto = VariableSource.prototype;\n\n  _proto.initialize_ = function initialize_() {\n    this.initialize();\n    this.initialized_ = true;\n  }\n  /**\n   * Override this method to set all the variables supported by derived class.\n   */\n  ;\n\n  _proto.initialize = function initialize() {} // Needs to be implemented by derived classes.\n\n  /**\n   * Method exists to assist stubbing in tests.\n   * @param {string} name\n   * @return {!ReplacementDef}\n   */\n  ;\n\n  _proto.get = function get(name) {\n    if (!this.initialized_) {\n      this.initialize_();\n    }\n\n    return this.replacements_[name];\n  }\n  /**\n   * Sets a synchronous value resolver for the variable with the specified name.\n   * The value resolver may optionally take an extra parameter.\n   * Can be called in conjunction with setAsync to allow for additional\n   * asynchronous resolver where expand will use async and expandSync the sync\n   * version.\n   * @param {string} varName\n   * @param {!SyncResolverDef} syncResolver\n   * @return {!VariableSource}\n   */\n  ;\n\n  _proto.set = function set(varName, syncResolver) {\n    (0, _log.devAssert)(varName.indexOf('RETURN') == -1);\n    this.replacements_[varName] = this.replacements_[varName] || {\n      sync: undefined,\n      async: undefined\n    };\n    this.replacements_[varName].sync = syncResolver;\n    return this;\n  }\n  /**\n   * Sets an async value resolver for the variable with the specified name.\n   * The value resolver may optionally take an extra parameter.\n   * Can be called in conjuction with setAsync to allow for additional\n   * asynchronous resolver where expand will use async and expandSync the sync\n   * version.\n   * @param {string} varName\n   * @param {!AsyncResolverDef} asyncResolver\n   * @return {!VariableSource}\n   */\n  ;\n\n  _proto.setAsync = function setAsync(varName, asyncResolver) {\n    (0, _log.devAssert)(varName.indexOf('RETURN') == -1);\n    this.replacements_[varName] = this.replacements_[varName] || {\n      sync: undefined,\n      async: undefined\n    };\n    this.replacements_[varName].async = asyncResolver;\n    return this;\n  }\n  /**\n   * Helper method to set both sync and async resolvers.\n   * @param {string} varName\n   * @param {!SyncResolverDef} syncResolver\n   * @param {!AsyncResolverDef} asyncResolver\n   * @return {!VariableSource}\n   */\n  ;\n\n  _proto.setBoth = function setBoth(varName, syncResolver, asyncResolver) {\n    return this.set(varName, syncResolver).setAsync(varName, asyncResolver);\n  }\n  /**\n   * Returns a Regular expression that can be used to detect all the variables\n   * in a template.\n   * @param {!Object<string, *>=} opt_bindings\n   * @param {!Object<string, boolean>=} opt_whiteList Optional white list of names\n   *   that can be substituted.\n   * @return {!RegExp}\n   */\n  ;\n\n  _proto.getExpr = function getExpr(opt_bindings, opt_whiteList) {\n    if (!this.initialized_) {\n      this.initialize_();\n    }\n\n    var all = Object.assign({}, this.replacements_, opt_bindings);\n    return this.buildExpr_(Object.keys(all), opt_whiteList);\n  }\n  /**\n   * @param {!Array<string>} keys\n   * @param {!Object<string, boolean>=} opt_whiteList Optional white list of names\n   *   that can be substituted.\n   * @return {!RegExp}\n   * @private\n   */\n  ;\n\n  _proto.buildExpr_ = function buildExpr_(keys, opt_whiteList) {\n    var _this = this;\n\n    // If a whitelist is present, the keys must belong to the whitelist.\n    // We filter the keys one last time to ensure no unwhitelisted key is\n    // allowed.\n    if (this.getUrlMacroWhitelist_()) {\n      keys = keys.filter(function (key) {\n        return _this.getUrlMacroWhitelist_().includes(key);\n      });\n    } // If a whitelist is passed into the call to GlobalVariableSource.expand_\n    // then we only resolve values contained in the whitelist.\n\n\n    if (opt_whiteList) {\n      keys = keys.filter(function (key) {\n        return opt_whiteList[key];\n      });\n    }\n\n    if (keys.length === 0) {\n      var regexThatMatchesNothing = /_^/g; // lgtm [js/regex/unmatchable-caret]\n\n      return regexThatMatchesNothing;\n    } // The keys must be sorted to ensure that the longest keys are considered\n    // first. This avoids a problem where a RANDOM conflicts with RANDOM_ONE.\n\n\n    keys.sort(function (s1, s2) {\n      return s2.length - s1.length;\n    }); // Keys that start with a `$` need to be escaped so that they do not\n    // interfere with the regex that is constructed.\n\n    var escaped = keys.map(function (key) {\n      if (key[0] === '$') {\n        return '\\\\' + key;\n      }\n\n      return key;\n    });\n    var all = escaped.join('|'); // Match the given replacement patterns, as well as optionally\n    // arguments to the replacement behind it in parentheses.\n    // Example string that match\n    // FOO_BAR\n    // FOO_BAR(arg1)\n    // FOO_BAR(arg1,arg2)\n    // FOO_BAR(arg1, arg2)\n\n    var regexStr = '\\\\$?(' + all + ')';\n    return new RegExp(regexStr, 'g');\n  }\n  /**\n   * @return {?Array<string>} The whitelist of allowed AMP variables. (if provided in\n   *     a meta tag).\n   * @private\n   */\n  ;\n\n  _proto.getUrlMacroWhitelist_ = function getUrlMacroWhitelist_() {\n    if (this.variableWhitelist_) {\n      return this.variableWhitelist_;\n    }\n\n    var _this$ampdoc$getRootN = this.ampdoc.getRootNode(),\n        head = _this$ampdoc$getRootN.head;\n\n    if (!head) {\n      return null;\n    } // A meta[name=\"amp-allowed-url-macros\"] tag, if present,\n    // contains, in its content attribute, a whitelist of variable substitution.\n\n\n    var meta = head.querySelector('meta[name=\"amp-allowed-url-macros\"]');\n\n    if (!meta) {\n      return null;\n    }\n    /**\n     * The whitelist of variables allowed for variable substitution.\n     * @private {?Array<string>}\n     */\n\n\n    this.variableWhitelist_ = meta.getAttribute('content').split(',').map(function (variable) {\n      return variable.trim();\n    });\n    return this.variableWhitelist_;\n  };\n\n  return VariableSource;\n}();\n\nexports.VariableSource = VariableSource;\n\n},{\"../document-ready\":28,\"../event-helper\":33,\"../log\":45,\"../services\":53,\"../types\":58}],53:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.Services = exports.SubscriptionService = void 0;\n\nvar _service = require(\"./service\");\n\nvar _elementService = require(\"./element-service\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nvar SubscriptionService;\nexports.SubscriptionService = SubscriptionService;\n\nvar Services =\n/*#__PURE__*/\nfunction () {\n  function Services() {}\n\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  Services.accessServiceForDoc = function accessServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'access', 'amp-access')\n    );\n  }\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  ;\n\n  Services.accessServiceForDocOrNull = function accessServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'access', 'amp-access')\n    );\n  }\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  ;\n\n  Services.subscriptionsServiceForDoc = function subscriptionsServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!SubscriptionService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  ;\n\n  Services.subscriptionsServiceForDocOrNull = function subscriptionsServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?SubscriptionService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  ;\n\n  Services.actionServiceForDoc = function actionServiceForDoc(element) {\n    return (\n      /** @type {!./service/action-impl.ActionService} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'action')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  ;\n\n  Services.standardActionsForDoc = function standardActionsForDoc(element) {\n    return (\n      /** @type {!./service/standard-actions-impl.StandardActions} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'standard-actions')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  ;\n\n  Services.activityForDoc = function activityForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'activity', 'amp-analytics')\n    );\n  }\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  ;\n\n  Services.ampdocServiceFor = function ampdocServiceFor(window) {\n    return (\n      /** @type {!./service/ampdoc-impl.AmpDocService} */\n      (0, _service.getService)(window, 'ampdoc')\n    );\n  }\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  ;\n\n  Services.ampdoc = function ampdoc(nodeOrAmpDoc) {\n    return (0, _service.getAmpdoc)(nodeOrAmpDoc);\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  ;\n\n  Services.analyticsForDoc = function analyticsForDoc(element, loadAnalytics) {\n    if (loadAnalytics === void 0) {\n      loadAnalytics = false;\n    }\n\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      var ampdoc = (0, _service.getAmpdoc)(element);\n      Services.extensionsFor(ampdoc.win).\n      /*OK*/\n      installExtensionForDoc(ampdoc, 'amp-analytics');\n    }\n\n    return (\n      /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'amp-analytics-instrumentation', 'amp-analytics')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  ;\n\n  Services.analyticsForDocOrNull = function analyticsForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'amp-analytics-instrumentation', 'amp-analytics')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  ;\n\n  Services.batchedXhrFor = function batchedXhrFor(window) {\n    return (\n      /** @type {!./service/batched-xhr-impl.BatchedXhr} */\n      (0, _service.getService)(window, 'batched-xhr')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  ;\n\n  Services.bindForDocOrNull = function bindForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */\n      (0, _elementService.getElementServiceIfAvailableForDocInEmbedScope)(element, 'bind', 'amp-bind')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  ;\n\n  Services.cidForDoc = function cidForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/cid-impl.CidDef>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'cid')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  ;\n\n  Services.navigationForDoc = function navigationForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/navigation.Navigation} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'navigation')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  ;\n\n  Services.loaderServiceForDoc = function loaderServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'loader', 'amp-loader')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  ;\n\n  Services.standaloneServiceForDoc = function standaloneServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'standalone', 'amp-standalone')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  ;\n\n  Services.cryptoFor = function cryptoFor(window) {\n    return (\n      /** @type {!./service/crypto-impl.Crypto} */\n      (0, _service.getService)(window, 'crypto')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  ;\n\n  Services.documentInfoForDoc = function documentInfoForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/document-info-impl.DocInfo} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'documentInfo').get()\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  ;\n\n  Services.extensionsFor = function extensionsFor(window) {\n    return (\n      /** @type {!./service/extensions-impl.Extensions} */\n      (0, _service.getService)(window, 'extensions')\n    );\n  }\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  ;\n\n  Services.formSubmitForDoc = function formSubmitForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  ;\n\n  Services.hiddenObserverForDoc = function hiddenObserverForDoc(element) {\n    return (\n      /** @type {!./service/hidden-observer-impl.HiddenObserver} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'hidden-observer')\n    );\n  }\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  ;\n\n  Services.historyForDoc = function historyForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/history-impl.History} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'history')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  ;\n\n  Services.inputFor = function inputFor(win) {\n    return (0, _service.getService)(win, 'input');\n  }\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  ;\n\n  Services.inputmaskServiceForDocOrNull = function inputmaskServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  ;\n\n  Services.ownersForDoc = function ownersForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/owners-interface.OwnersInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'owners')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  ;\n\n  Services.performanceFor = function performanceFor(window) {\n    return (\n      /** @type {!./service/performance-impl.Performance}*/\n      (0, _service.getService)(window, 'performance')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  ;\n\n  Services.performanceForOrNull = function performanceForOrNull(window) {\n    return (\n      /** @type {!./service/performance-impl.Performance}*/\n      (0, _service.getExistingServiceOrNull)(window, 'performance')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  ;\n\n  Services.platformFor = function platformFor(window) {\n    return (\n      /** @type {!./service/platform-impl.Platform} */\n      (0, _service.getService)(window, 'platform')\n    );\n  }\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  ;\n\n  Services.positionObserverForDoc = function positionObserverForDoc(element) {\n    return (\n      /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */\n      (0, _service.getServiceForDoc)(element, 'position-observer')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  ;\n\n  Services.resourcesForDoc = function resourcesForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/resources-interface.ResourcesInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'resources')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  ;\n\n  Services.resourcesPromiseForDoc = function resourcesPromiseForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'resources')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?{incomingFragment: string, outgoingFragment: string}>}\n   */\n  ;\n\n  Services.shareTrackingForOrNull = function shareTrackingForOrNull(win) {\n    return (\n      /** @type {!Promise<?{incomingFragment: string, outgoingFragment: string}>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'share-tracking', 'amp-share-tracking', true)\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>}\n   */\n  ;\n\n  Services.storyVariableServiceForOrNull = function storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-variable', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  ;\n\n  Services.storyVariableService = function storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-variable')\n    );\n  }\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>}\n   */\n  ;\n\n  Services.storyStoreServiceForOrNull = function storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-store', 'amp-story')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  ;\n\n  Services.storyStoreService = function storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-store')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  ;\n\n  Services.storyMediaQueryService = function storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-media-query')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  ;\n\n  Services.storyRequestService = function storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-request')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  ;\n\n  Services.mediaPerformanceMetricsService = function mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (0, _service.getExistingServiceOrNull)(win, 'media-performance-metrics')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  ;\n\n  Services.localizationServiceForOrNull = function localizationServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'localization', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  ;\n\n  Services.localizationService = function localizationService(win) {\n    return (0, _service.getService)(win, 'localization');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  ;\n\n  Services.storyAnalyticsServiceForOrNull = function storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-analytics', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  ;\n\n  Services.storyAnalyticsService = function storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-analytics')\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService}\n   */\n  ;\n\n  Services.storyStoreServiceV01 = function storyStoreServiceV01(win) {\n    return (0, _service.getService)(win, 'story-store');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-request-service.AmpStoryRequestService}\n   */\n  ;\n\n  Services.storyRequestServiceV01 = function storyRequestServiceV01(win) {\n    return (0, _service.getService)(win, 'story-request-v01');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  ;\n\n  Services.localizationServiceForOrNullV01 = function localizationServiceForOrNullV01(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'localization-v01', 'amp-story', true)\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  ;\n\n  Services.localizationServiceV01 = function localizationServiceV01(win) {\n    return (0, _service.getService)(win, 'localization-v01');\n  }\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>}\n   */\n  ;\n\n  Services.viewerIntegrationVariableServiceForOrNull = function viewerIntegrationVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'viewer-integration-variable', 'amp-viewer-integration', true)\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  ;\n\n  Services.webAnimationServiceFor = function webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'web-animation', 'amp-animation')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  ;\n\n  Services.storageForDoc = function storageForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/storage-impl.Storage>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'storage')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/template-impl.Templates}\n   */\n  ;\n\n  Services.templatesFor = function templatesFor(window) {\n    return (\n      /** @type {!./service/template-impl.Templates} */\n      (0, _service.getService)(window, 'templates')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  ;\n\n  Services.timerFor = function timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return (\n      /** @type {!./service/timer-impl.Timer} */\n      (0, _service.getService)(window, 'timer')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  ;\n\n  Services.urlReplacementsForDoc = function urlReplacementsForDoc(element) {\n    return (\n      /** @type {!./service/url-replacements-impl.UrlReplacements} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'url-replace')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  ;\n\n  Services.userNotificationManagerForDoc = function userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'userNotificationManager', 'amp-user-notification')\n    );\n  }\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  ;\n\n  Services.consentPolicyServiceForDocOrNull = function consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'consentPolicyManager', 'amp-consent')\n    );\n  }\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  ;\n\n  Services.geoForDocOrNull = function geoForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'geo', 'amp-geo', true)\n    );\n  }\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>}\n   */\n  ;\n\n  Services.userLocationForDocOrNull = function userLocationForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'user-location', 'amp-user-location', true)\n    );\n  }\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  ;\n\n  Services.urlForDoc = function urlForDoc(element) {\n    return (\n      /** @type {!./service/url-impl.Url} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'url')\n    );\n  }\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  ;\n\n  Services.variantsForDocOrNull = function variantsForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'variant', 'amp-experiment', true)\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  ;\n\n  Services.videoManagerForDoc = function videoManagerForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/video-manager-impl.VideoManager} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'video-manager')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>}\n   */\n  ;\n\n  Services.viewerAssistanceForDocOrNull = function viewerAssistanceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'amp-viewer-assistance', 'amp-viewer-assistance')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  ;\n\n  Services.viewerForDoc = function viewerForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/viewer-interface.ViewerInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'viewer')\n    );\n  }\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  ;\n\n  Services.viewerPromiseForDoc = function viewerPromiseForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'viewer')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  ;\n\n  Services.vsyncFor = function vsyncFor(window) {\n    return (\n      /** @type {!./service/vsync-impl.Vsync} */\n      (0, _service.getService)(window, 'vsync')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  ;\n\n  Services.viewportForDoc = function viewportForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/viewport/viewport-interface.ViewportInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'viewport')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  ;\n\n  Services.xhrFor = function xhrFor(window) {\n    return (\n      /** @type {!./service/xhr-impl.Xhr} */\n      (0, _service.getService)(window, 'xhr')\n    );\n  };\n\n  return Services;\n}();\n\nexports.Services = Services;\n\n},{\"./element-service\":30,\"./service\":49}],54:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.htmlFor = htmlFor;\nexports.svgFor = svgFor;\nexports.htmlRefs = htmlRefs;\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object.js\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar htmlContainer;\nvar svgContainer;\n/**\n * Creates the html helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\n\nfunction htmlFor(nodeOrDoc) {\n  var doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n\n  if (!htmlContainer || htmlContainer.ownerDocument !== doc) {\n    htmlContainer = doc.createElement('div');\n  }\n\n  return html;\n}\n/**\n * Creates the svg helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\n\n\nfunction svgFor(nodeOrDoc) {\n  var doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n\n  if (!svgContainer || svgContainer.ownerDocument !== svgContainer) {\n    svgContainer = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  }\n\n  return svg;\n}\n/**\n * A tagged template literal helper to generate static SVG trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const circle = svg`<circle cx=\"60\" cy=\"60\" r=\"22\"></circle>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\n\n\nfunction svg(strings) {\n  return createNode(svgContainer, strings);\n}\n/**\n * A tagged template literal helper to generate static DOM trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const div = html`<div><span></span></div>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\n\n\nfunction html(strings) {\n  return createNode(htmlContainer, strings);\n}\n/**\n * Helper used by html and svg string literal functions.\n * @param {!Element} container\n * @param {!Array<string>} strings\n * @return {!Element}\n */\n\n\nfunction createNode(container, strings) {\n  (0, _log.devAssert)(strings.length === 1, 'Improper html template tag usage.');\n  container.\n  /*OK*/\n  innerHTML = strings[0];\n  var el = container.firstElementChild;\n  (0, _log.devAssert)(el, 'No elements in template');\n  (0, _log.devAssert)(!el.nextElementSibling, 'Too many root elements in template'); // Clear to free memory.\n\n  container.removeChild(el);\n  return el;\n}\n/**\n * Queries an element for all elements with a \"ref\" attribute, removing\n * the attribute afterwards.\n * Returns a named map of all ref elements.\n *\n * @param {!Element} root\n * @return {!Object<string, !Element>}\n */\n\n\nfunction htmlRefs(root) {\n  var elements = root.querySelectorAll('[ref]');\n  var refs = (0, _object.map)();\n\n  for (var i = 0; i < elements.length; i++) {\n    var element = elements[i];\n    var ref = (0, _log.devAssert)(element.getAttribute('ref'), 'Empty ref attr');\n    element.removeAttribute('ref');\n    (0, _log.devAssert)(refs[ref] === undefined, 'Duplicate ref');\n    refs[ref] = element;\n  }\n\n  return refs;\n}\n\n},{\"./log\":45,\"./utils/object.js\":67}],55:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.dashToCamelCase = dashToCamelCase;\nexports.camelCaseToDash = camelCaseToDash;\nexports.dashToUnderline = dashToUnderline;\nexports.endsWith = endsWith;\nexports.startsWith = startsWith;\nexports.includes = includes;\nexports.expandTemplate = expandTemplate;\nexports.stringHash32 = stringHash32;\nexports.trimEnd = trimEnd;\nexports.trimStart = trimStart;\nexports.padStart = padStart;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n/**\n * @param {string} match\n * @return {string}\n */\n\n\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\n\n\nfunction dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\n\n\nfunction camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\n\n\nfunction dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\n\n\nfunction endsWith(string, suffix) {\n  var index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n/**\n * Polyfill for String.prototype.startsWith.\n * @param {string} string\n * @param {string} prefix\n * @return {boolean}\n */\n\n\nfunction startsWith(string, prefix) {\n  if (prefix.length > string.length) {\n    return false;\n  }\n\n  return string.lastIndexOf(prefix, 0) == 0;\n}\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\n\n\nfunction includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + substring.length > string.length) {\n    return false;\n  }\n\n  return string.indexOf(substring, start) !== -1;\n}\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\n\n\nfunction expandTemplate(template, getter, opt_maxIterations) {\n  var maxIterations = opt_maxIterations || 1;\n\n  var _loop = function _loop(i) {\n    var matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, function (_a, b) {\n      matches++;\n      return getter(b);\n    });\n\n    if (!matches) {\n      return \"break\";\n    }\n  };\n\n  for (var i = 0; i < maxIterations; i++) {\n    var _ret = _loop(i);\n\n    if (_ret === \"break\") break;\n  }\n\n  return template;\n}\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\n\n\nfunction stringHash32(str) {\n  var length = str.length;\n  var hash = 5381;\n\n  for (var i = 0; i < length; i++) {\n    hash = hash * 33 ^ str.charCodeAt(i);\n  } // Convert from 32-bit signed to unsigned.\n\n\n  return String(hash >>> 0);\n}\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\n\n\nfunction trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\n\n\nfunction trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {*} TODO(#23582): Specify return type\n */\n\n\nfunction padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n\n  targetLength = targetLength - s.length;\n  var padding = padString;\n\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n\n  return padding.slice(0, targetLength) + s;\n}\n\n},{}],56:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.installStylesForDoc = installStylesForDoc;\nexports.installStylesLegacy = installStylesLegacy;\nexports.installCssTransformer = installCssTransformer;\nexports.setBodyMadeVisibleForTesting = setBodyMadeVisibleForTesting;\nexports.makeBodyVisible = makeBodyVisible;\nexports.makeBodyVisibleRecovery = makeBodyVisibleRecovery;\nexports.bodyAlwaysVisible = bodyAlwaysVisible;\n\nvar _commonSignals = require(\"./common-signals\");\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\nvar _service = require(\"./service\");\n\nvar _dom = require(\"./dom\");\n\nvar _object = require(\"./utils/object\");\n\nvar _style = require(\"./style\");\n\nvar _renderDelayingServices = require(\"./render-delaying-services\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TRANSFORMER_PROP = '__AMP_CSS_TR';\nvar STYLE_MAP_PROP = '__AMP_CSS_SM';\n/**\n * Adds the given css text to the given ampdoc.\n *\n * The style tags will be at the beginning of the head before all author\n * styles. One element can be the main runtime CSS. This is guaranteed\n * to always be the first stylesheet in the doc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc The ampdoc that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are available.\n *     Not using a promise, because this is synchronous when possible.\n *     for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\n\nfunction installStylesForDoc(ampdoc, cssText, cb, opt_isRuntimeCss, opt_ext) {\n  var cssRoot = ampdoc.getHeadNode();\n  var style = insertStyleElement(cssRoot, maybeTransform(cssRoot, cssText), opt_isRuntimeCss || false, opt_ext || null);\n\n  if (cb) {\n    var rootNode = ampdoc.getRootNode(); // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n\n    if (styleLoaded(rootNode, style)) {\n      cb(style);\n      return style;\n    } // Poll until styles are available.\n\n\n    var interval = setInterval(function () {\n      if (styleLoaded(rootNode, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n\n  return style;\n}\n/**\n * Adds the given css text to the given document.\n * TODO(dvoytenko, #22733): Remove this method once FIE/ampdoc migration is\n * done.\n *\n * @param {!Document} doc The document that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are\n *     available. Not using a promise, because this is synchronous when\n *     possible. for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\n\n\nfunction installStylesLegacy(doc, cssText, cb, opt_isRuntimeCss, opt_ext) {\n  var style = insertStyleElement((0, _log.dev)().assertElement(doc.head), cssText, opt_isRuntimeCss || false, opt_ext || null);\n\n  if (cb) {\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(doc, style)) {\n      cb(style);\n      return style;\n    } // Poll until styles are available.\n\n\n    var interval = setInterval(function () {\n      if (styleLoaded(doc, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n\n  return style;\n}\n/**\n * Creates the properly configured style element.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @param {boolean} isRuntimeCss\n * @param {?string} ext\n * @return {!Element}\n */\n\n\nfunction insertStyleElement(cssRoot, cssText, isRuntimeCss, ext) {\n  var styleMap = cssRoot[STYLE_MAP_PROP];\n\n  if (!styleMap) {\n    styleMap = cssRoot[STYLE_MAP_PROP] = (0, _object.map)();\n  }\n\n  var isExtCss = !isRuntimeCss && ext && ext != 'amp-custom' && ext != 'amp-keyframes';\n  var key = isRuntimeCss ? 'amp-runtime' : isExtCss ? \"amp-extension=\" + ext : null; // Check if it has already been created or discovered.\n\n  if (key) {\n    var existing = getExistingStyleElement(cssRoot, styleMap, key);\n\n    if (existing) {\n      if (existing.textContent !== cssText) {\n        existing.textContent = cssText;\n      }\n\n      return existing;\n    }\n  } // Create the new style element and append to cssRoot.\n\n\n  var doc = cssRoot.ownerDocument || cssRoot;\n  var style = doc.createElement('style');\n  style.\n  /*OK*/\n  textContent = cssText;\n  var afterElement = null; // Make sure that we place style tags after the main runtime CSS. Otherwise\n  // the order is random.\n\n  if (isRuntimeCss) {\n    style.setAttribute('amp-runtime', '');\n  } else if (isExtCss) {\n    style.setAttribute('amp-extension', ext || '');\n    afterElement = (0, _log.dev)().assertElement(getExistingStyleElement(cssRoot, styleMap, 'amp-runtime'));\n  } else {\n    if (ext) {\n      style.setAttribute(ext, '');\n    }\n\n    afterElement = cssRoot.lastChild;\n  }\n\n  (0, _dom.insertAfterOrAtStart)(cssRoot, style, afterElement);\n\n  if (key) {\n    styleMap[key] = style;\n  }\n\n  return style;\n}\n/**\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {!Object<string, !Element>} styleMap\n * @param {string} key\n * @return {?Element}\n */\n\n\nfunction getExistingStyleElement(cssRoot, styleMap, key) {\n  // Already cached.\n  if (styleMap[key]) {\n    return styleMap[key];\n  } // Check if the style has already been added by the server layout.\n\n\n  var existing = cssRoot.\n  /*OK*/\n  querySelector(\"style[\" + key + \"]\");\n\n  if (existing) {\n    styleMap[key] = existing;\n    return existing;\n  } // Nothing found.\n\n\n  return null;\n}\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {function(string):string} transformer\n */\n\n\nfunction installCssTransformer(cssRoot, transformer) {\n  cssRoot[TRANSFORMER_PROP] = transformer;\n}\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @return {string}\n */\n\n\nfunction maybeTransform(cssRoot, cssText) {\n  var transformer = cssRoot[TRANSFORMER_PROP];\n  return transformer ? transformer(cssText) : cssText;\n}\n/** @private {boolean} */\n\n\nvar bodyMadeVisible = false;\n/**\n * @param {boolean} value\n * @visibleForTesting\n */\n\nfunction setBodyMadeVisibleForTesting(value) {\n  bodyMadeVisible = value;\n}\n/**\n * Sets the document's body opacity to 1.\n * If the body is not yet available (because our script was loaded\n * synchronously), polls until it is.\n * @param {!Document} doc The document who's body we should make visible.\n */\n\n\nfunction makeBodyVisible(doc) {\n  (0, _log.devAssert)(doc.defaultView, 'Passed in document must have a defaultView');\n  var win =\n  /** @type {!Window} */\n  doc.defaultView;\n  (0, _dom.waitForBodyOpenPromise)(doc).then(function () {\n    return (0, _renderDelayingServices.waitForServices)(win);\n  }).catch(function (reason) {\n    (0, _log.rethrowAsync)(reason);\n    return [];\n  }).then(function (services) {\n    bodyMadeVisible = true;\n    setBodyVisibleStyles(doc);\n    var ampdoc = (0, _service.getAmpdoc)(doc);\n    ampdoc.signals().signal(_commonSignals.CommonSignals.RENDER_START);\n\n    if (services.length > 0) {\n      var resources = _services.Services.resourcesForDoc(doc.documentElement);\n\n      resources.\n      /*OK*/\n      schedulePass(1,\n      /* relayoutAll */\n      true);\n    }\n\n    try {\n      var perf = _services.Services.performanceFor(win);\n\n      perf.tick('mbv');\n      perf.flush();\n    } catch (e) {}\n  });\n}\n/**\n * Set the document's body opacity to 1. Called in error cases.\n * @param {!Document} doc The document who's body we should make visible.\n */\n\n\nfunction makeBodyVisibleRecovery(doc) {\n  (0, _log.devAssert)(doc.defaultView, 'Passed in document must have a defaultView');\n\n  if (bodyMadeVisible) {\n    return;\n  }\n\n  bodyMadeVisible = true;\n  setBodyVisibleStyles(doc);\n}\n/**\n * Make sure that body exists, and make it visible.\n * @param {!Document} doc\n */\n\n\nfunction setBodyVisibleStyles(doc) {\n  (0, _style.setStyles)((0, _log.dev)().assertElement(doc.body), {\n    opacity: 1,\n    visibility: 'visible',\n    'animation': 'none'\n  });\n}\n/**\n * Indicates that the body is always visible. For instance, in case of PWA.\n * This check is on a module level variable, and could be problematic if you are\n * relying on this function across different binaries.\n * @param {!Window} unusedWin\n */\n\n\nfunction bodyAlwaysVisible(unusedWin) {\n  bodyMadeVisible = true;\n}\n/**\n * Checks whether a style element was registered in the DOM.\n * @param {!Document|!ShadowRoot} doc\n * @param {!Element} style\n * @return {boolean}\n */\n\n\nfunction styleLoaded(doc, style) {\n  var sheets = doc.styleSheets;\n\n  for (var i = 0; i < sheets.length; i++) {\n    var sheet = sheets[i];\n\n    if (sheet.ownerNode == style) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n},{\"./common-signals\":23,\"./dom\":29,\"./log\":45,\"./render-delaying-services\":48,\"./service\":49,\"./services\":53,\"./style\":57,\"./utils/object\":67}],57:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.camelCaseToTitleCase = camelCaseToTitleCase;\nexports.getVendorJsPropertyName = getVendorJsPropertyName;\nexports.setImportantStyles = setImportantStyles;\nexports.setStyle = setStyle;\nexports.getStyle = getStyle;\nexports.setStyles = setStyles;\nexports.assertNotDisplay = assertNotDisplay;\nexports.assertDoesNotContainDisplay = assertDoesNotContainDisplay;\nexports.setInitialDisplay = setInitialDisplay;\nexports.toggle = toggle;\nexports.px = px;\nexports.deg = deg;\nexports.translateX = translateX;\nexports.translate = translate;\nexports.scale = scale;\nexports.rotate = rotate;\nexports.removeAlphaFromColor = removeAlphaFromColor;\nexports.computedStyle = computedStyle;\nexports.resetStyles = resetStyles;\nexports.propagateObjectFitStyles = propagateObjectFitStyles;\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object.js\");\n\nvar _string = require(\"./string\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\n\n/** @type {Object<string, string>} */\nvar propertyNameCache;\n/** @const {!Array<string>} */\n\nvar vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n/**\n * @export\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\n\nfunction camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\n\n\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (var i = 0; i < vendorPrefixes.length; i++) {\n    var propertyName = vendorPrefixes[i] + titleCase;\n\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n\n  return '';\n}\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @export\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\n\n\nfunction getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if ((0, _string.startsWith)(camelCase, '--')) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n\n  if (!propertyNameCache) {\n    propertyNameCache = (0, _object.map)();\n  }\n\n  var propertyName = propertyNameCache[camelCase];\n\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n\n    if (style[camelCase] === undefined) {\n      var titleCase = camelCaseToTitleCase(camelCase);\n      var prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n\n  return propertyName;\n}\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\n\n\nfunction setImportantStyles(element, styles) {\n  var style = element.style;\n\n  for (var k in styles) {\n    style.setProperty(getVendorJsPropertyName(style, k), styles[k].toString(), 'important');\n  }\n}\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\n\n\nfunction setStyle(element, property, value, opt_units, opt_bypassCache) {\n  var propertyName = getVendorJsPropertyName(element.style, property, opt_bypassCache);\n\n  if (propertyName) {\n    element.style[propertyName] =\n    /** @type {string} */\n    opt_units ? value + opt_units : value;\n  }\n}\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\n\n\nfunction getStyle(element, property, opt_bypassCache) {\n  var propertyName = getVendorJsPropertyName(element.style, property, opt_bypassCache);\n\n  if (!propertyName) {\n    return undefined;\n  }\n\n  return element.style[propertyName];\n}\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\n\n\nfunction setStyles(element, styles) {\n  for (var k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\n\n\nfunction assertNotDisplay(style) {\n  if (style === 'display') {\n    (0, _log.dev)().error('STYLE', '`display` style detected. You must use toggle instead.');\n  }\n\n  return style;\n}\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\n\n\nfunction assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    (0, _log.dev)().error('STYLE', '`display` style detected in styles. You must use toggle instead.');\n  }\n\n  return styles;\n}\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\n\n\nfunction setInitialDisplay(el, value) {\n  var style = el.style;\n  (0, _log.devAssert)(value !== '' && value !== 'none', 'Initial display value must not be \"none\". Use toggle instead.');\n  (0, _log.devAssert)(!style['display'], 'setInitialDisplay MUST NOT be used for ' + 'resetting the display style. If you are looking for display:none ' + 'toggling, use toggle instead.');\n  style['display'] = value;\n}\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\n\n\nfunction toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\n\n\nfunction px(value) {\n  return value + \"px\";\n}\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\n\n\nfunction deg(value) {\n  return value + \"deg\";\n}\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction translateX(value) {\n  if (typeof value == 'string') {\n    return \"translateX(\" + value + \")\";\n  }\n\n  return \"translateX(\" + px(value) + \")\";\n}\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\n\n\nfunction translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n\n  if (opt_y === undefined) {\n    return \"translate(\" + x + \")\";\n  }\n\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n\n  return \"translate(\" + x + \", \" + opt_y + \")\";\n}\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction scale(value) {\n  return \"scale(\" + value + \")\";\n}\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n\n  return \"rotate(\" + value + \")\";\n}\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\n\n\nfunction removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(/\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g, '($1,$2,$3, 1)');\n}\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!Object<string, string>}\n */\n\n\nfunction computedStyle(win, el) {\n  var style =\n  /** @type {?CSSStyleDeclaration} */\n  win.getComputedStyle(el);\n  return (\n    /** @type {!Object<string, string>} */\n    style || (0, _object.map)()\n  );\n}\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\n\n\nfunction resetStyles(element, properties) {\n  for (var i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\n\n\nfunction propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n},{\"./log\":45,\"./string\":55,\"./utils/object.js\":67}],58:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isArray = isArray;\nexports.toArray = toArray;\nexports.isObject = isObject;\nexports.isFiniteNumber = isFiniteNumber;\nexports.isEnumValue = isEnumValue;\nexports.toWin = toWin;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nvar toString_ = Object.prototype.toString;\n/**\n * Returns the ECMA [[Class]] of a value\n * @param {*} value\n * @return {string}\n */\n\nfunction toString(value) {\n  return toString_.call(value);\n}\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\n\n\nfunction toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  return toString(value) === '[object Object]';\n}\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n/**\n * Checks whether `s` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} s\n * @return {boolean}\n * @template T\n */\n\n\nfunction isEnumValue(enumObj, s) {\n  for (var k in enumObj) {\n    if (enumObj[k] === s) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {!Window|null} winOrNull\n * @return {!Window}\n */\n\n\nfunction toWin(winOrNull) {\n  return (\n    /** @type {!Window} */\n    winOrNull\n  );\n}\n\n},{}],59:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.parseQueryString_ = parseQueryString_;\n\nvar _urlTryDecodeUriComponent = require(\"./url-try-decode-uri-component\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar regex = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * DO NOT import the function from this file. Instead, import parseQueryString\n * from `src/url.js`.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\n\nfunction parseQueryString_(queryString) {\n  var params =\n  /** @type {!JsonObject} */\n  Object.create(null);\n\n  if (!queryString) {\n    return params;\n  }\n\n  var match;\n\n  while (match = regex.exec(queryString)) {\n    var name = (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(match[1], match[1]);\n    var value = match[2] ? (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(match[2].replace(/\\+/g, ' '), match[2]) : '';\n    params[name] = value;\n  }\n\n  return params;\n}\n\n},{\"./url-try-decode-uri-component\":60}],60:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.tryDecodeUriComponent_ = tryDecodeUriComponent_;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * DO NOT import the function from this file. Instead, import\n * tryDecodeUriComponent from `src/url.js`.\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nfunction tryDecodeUriComponent_(component, fallback) {\n  if (fallback === void 0) {\n    fallback = '';\n  }\n\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n},{}],61:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getWinOrigin = getWinOrigin;\nexports.parseUrlDeprecated = parseUrlDeprecated;\nexports.parseUrlWithA = parseUrlWithA;\nexports.appendEncodedParamStringToUrl = appendEncodedParamStringToUrl;\nexports.addParamToUrl = addParamToUrl;\nexports.addParamsToUrl = addParamsToUrl;\nexports.addMissingParamsToUrl = addMissingParamsToUrl;\nexports.serializeQueryString = serializeQueryString;\nexports.isSecureUrlDeprecated = isSecureUrlDeprecated;\nexports.assertHttpsUrl = assertHttpsUrl;\nexports.assertAbsoluteHttpOrHttpsUrl = assertAbsoluteHttpOrHttpsUrl;\nexports.parseQueryString = parseQueryString;\nexports.removeFragment = removeFragment;\nexports.getFragment = getFragment;\nexports.isProxyOrigin = isProxyOrigin;\nexports.getProxyServingType = getProxyServingType;\nexports.isLocalhostOrigin = isLocalhostOrigin;\nexports.isProtocolValid = isProtocolValid;\nexports.removeAmpJsParamsFromUrl = removeAmpJsParamsFromUrl;\nexports.removeSearch = removeSearch;\nexports.removeParamsFromSearch = removeParamsFromSearch;\nexports.getSourceUrl = getSourceUrl;\nexports.getSourceOrigin = getSourceOrigin;\nexports.resolveRelativeUrl = resolveRelativeUrl;\nexports.resolveRelativeUrlFallback_ = resolveRelativeUrlFallback_;\nexports.getCorsUrl = getCorsUrl;\nexports.checkCorsUrl = checkCorsUrl;\nexports.tryDecodeUriComponent = tryDecodeUriComponent;\nexports.SOURCE_ORIGIN_PARAM = void 0;\n\nvar _lruCache = require(\"./utils/lru-cache\");\n\nvar _object = require(\"./utils/object\");\n\nvar _string = require(\"./string\");\n\nvar _mode = require(\"./mode\");\n\nvar _types = require(\"./types\");\n\nvar _urlParseQueryString = require(\"./url-parse-query-string\");\n\nvar _urlTryDecodeUriComponent = require(\"./url-try-decode-uri-component\");\n\nvar _config = require(\"./config\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @type {!JsonObject}\n */\nvar SERVING_TYPE_PREFIX = (0, _object.dict)({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n  // Actions viewer\n  'action': true\n});\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\n\nvar a;\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\n\nvar cache;\n/** @private @const Matches amp_js_* parameters in query string. */\n\nvar AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n/** @private @const Matches amp_gsa parameters in query string. */\n\nvar AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n/** @private @const Matches amp_r parameters in query string. */\n\nvar AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n/** @private @const Matches amp_kit parameters in query string. */\n\nvar AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n/** @private @const Matches usqp parameters from goog experiment in query string. */\n\nvar GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\nvar INVALID_PROTOCOLS = [\n/*eslint no-script-url: 0*/\n'javascript:',\n/*eslint no-script-url: 0*/\n'data:',\n/*eslint no-script-url: 0*/\n'vbscript:'];\n/** @const {string} */\n\nvar SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\n\nexports.SOURCE_ORIGIN_PARAM = SOURCE_ORIGIN_PARAM;\n\nfunction getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n * @return {!Location}\n */\n\n\nfunction parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a =\n    /** @type {!HTMLAnchorElement} */\n    self.document.createElement('a');\n    cache = self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new _lruCache.LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, opt_nocache ? null : cache);\n}\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n * @return {!Location}\n * @restricted\n */\n\n\nfunction parseUrlWithA(a, url, opt_cache) {\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url; // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  var info =\n  /** @type {!Location} */\n  {\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null // Set below.\n\n  }; // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  } // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n\n\n  if (info.protocol == 'http:' && info.port == 80 || info.protocol == 'https:' && info.port == 443) {\n    info.port = '';\n    info.host = info.hostname;\n  } // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n\n\n  var origin;\n\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n\n  info.origin = origin; // Freeze during testing to avoid accidental mutation.\n\n  var frozen = (0, _mode.getMode)().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\n\n\nfunction appendEncodedParamStringToUrl(url, paramString, opt_addToFront) {\n  if (!paramString) {\n    return url;\n  }\n\n  var mainAndFragment = url.split('#', 2);\n  var mainAndQuery = mainAndFragment[0].split('?', 2);\n  var newUrl = mainAndQuery[0] + (mainAndQuery[1] ? opt_addToFront ? \"?\" + paramString + \"&\" + mainAndQuery[1] : \"?\" + mainAndQuery[1] + \"&\" + paramString : \"?\" + paramString);\n  newUrl += mainAndFragment[1] ? \"#\" + mainAndFragment[1] : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\n\n\nfunction addParamToUrl(url, key, value, opt_addToFront) {\n  var field = encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction addMissingParamsToUrl(url, params) {\n  var location = parseUrlDeprecated(url);\n  var existingParams = parseQueryString(location.search);\n  var paramsToAdd = (0, _object.dict)({});\n  var keys = Object.keys(params);\n\n  for (var i = 0; i < keys.length; i++) {\n    if (!(0, _object.hasOwn)(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n\n  return addParamsToUrl(url, paramsToAdd);\n}\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction serializeQueryString(params) {\n  var s = [];\n\n  for (var k in params) {\n    var v = params[k];\n\n    if (v == null) {\n      continue;\n    } else if ((0, _types.isArray)(v)) {\n      for (var i = 0; i < v.length; i++) {\n        var sv =\n        /** @type {string} */\n        v[i];\n        s.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(sv));\n      }\n    } else {\n      var _sv =\n      /** @type {string} */\n      v;\n      s.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(_sv));\n    }\n  }\n\n  return s.join('&');\n}\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\n\n\nfunction isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return url.protocol == 'https:' || url.hostname == 'localhost' || url.hostname == '127.0.0.1' || (0, _string.endsWith)(url.hostname, '.localhost');\n}\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\n\n\nfunction assertHttpsUrl(urlString, elementContext, sourceName) {\n  if (sourceName === void 0) {\n    sourceName = 'source';\n  }\n\n  (0, _log.userAssert)(urlString != null, '%s %s must be available', elementContext, sourceName); // (erwinm, #4560): type cast necessary until #4560 is fixed.\n\n  var theUrlString =\n  /** @type {string} */\n  urlString;\n  (0, _log.userAssert)(isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString), '%s %s must start with ' + '\"https://\" or \"//\" or be relative and served from ' + 'either https or from localhost. Invalid value: %s', elementContext, sourceName, theUrlString);\n  return theUrlString;\n}\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\n\n\nfunction assertAbsoluteHttpOrHttpsUrl(urlString) {\n  (0, _log.userAssert)(/^https?\\:/i.test(urlString), 'URL must start with \"http://\" or \"https://\". Invalid value: %s', urlString);\n  return parseUrlDeprecated(urlString).href;\n}\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * This function is implemented in a separate file to avoid a circular\n * dependency.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\n\n\nfunction parseQueryString(queryString) {\n  return (0, _urlParseQueryString.parseQueryString_)(queryString);\n}\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeFragment(url) {\n  var index = url.indexOf('#');\n\n  if (index == -1) {\n    return url;\n  }\n\n  return url.substring(0, index);\n}\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction getFragment(url) {\n  var index = url.indexOf('#');\n\n  if (index == -1) {\n    return '';\n  }\n\n  return url.substring(index);\n}\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\n\n\nfunction isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return _config.urls.cdnProxyRegex.test(url.origin);\n}\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\n\n\nfunction getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n\n  var path = url.pathname.split('/', 2);\n  return path[1];\n}\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\n\n\nfunction isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return _config.urls.localhostRegex.test(url.origin);\n}\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\n\n\nfunction isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeAmpJsParamsFromUrl(url) {\n  var parsed = parseUrlDeprecated(url);\n  var search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeSearch(url) {\n  var index = url.indexOf('?');\n\n  if (index == -1) {\n    return url;\n  }\n\n  var fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\n\n\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n\n  var search = urlSearch.replace(AMP_JS_PARAMS_REGEX, '').replace(AMP_GSA_PARAMS_REGEX, '').replace(AMP_R_PARAMS_REGEX, '').replace(AMP_KIT_PARAMS_REGEX, '').replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '').replace(/^[?&]/, ''); // Removes first ? or &.\n\n  return search ? '?' + search : '';\n}\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\n\n\nfunction removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n\n  var paramRegex = new RegExp(\"[?&]\" + paramName + \"=[^&]*\", 'g');\n  var search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\n\n\nfunction getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  } // Not a proxy URL - return the URL itself.\n\n\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  } // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n\n\n  var path = url.pathname.split('/');\n  var prefix = path[1];\n  (0, _log.userAssert)(SERVING_TYPE_PREFIX[prefix], 'Unknown path prefix in url %s', url.href);\n  var domainOrHttpsSignal = path[2];\n  var origin = domainOrHttpsSignal == 's' ? 'https://' + decodeURIComponent(path[3]) : 'http://' + decodeURIComponent(domainOrHttpsSignal); // Sanity test that what we found looks like a domain.\n\n  (0, _log.userAssert)(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return origin + path.join('/') + removeAmpJsParamsFromSearch(url.search) + (url.hash || '');\n}\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\n\n\nfunction getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\n\n\nfunction resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n\n  if (typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private Visible for testing.\n */\n\n\nfunction resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  var relativeUrl = parseUrlDeprecated(relativeUrlString); // Absolute URL.\n\n  if ((0, _string.startsWith)(relativeUrlString.toLowerCase(), relativeUrl.protocol)) {\n    return relativeUrl.href;\n  } // Protocol-relative URL.\n\n\n  if ((0, _string.startsWith)(relativeUrlString, '//')) {\n    return baseUrl.protocol + relativeUrlString;\n  } // Absolute path.\n\n\n  if ((0, _string.startsWith)(relativeUrlString, '/')) {\n    return baseUrl.origin + relativeUrlString;\n  } // Relative path.\n\n\n  return baseUrl.origin + baseUrl.pathname.replace(/\\/[^/]*$/, '/') + relativeUrlString;\n}\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\n\n\nfunction getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  var sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\n\n\nfunction checkCorsUrl(url) {\n  var parsedUrl = parseUrlDeprecated(url);\n  var query = parseQueryString(parsedUrl.search);\n  (0, _log.userAssert)(!(SOURCE_ORIGIN_PARAM in query), 'Source origin is not allowed in %s', url);\n}\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} opt_fallback\n * @return {string}\n */\n\n\nfunction tryDecodeUriComponent(component, opt_fallback) {\n  return (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(component, opt_fallback);\n}\n\n},{\"./config\":24,\"./log\":45,\"./mode\":47,\"./string\":55,\"./types\":58,\"./url-parse-query-string\":59,\"./url-try-decode-uri-component\":60,\"./utils/lru-cache\":65,\"./utils/object\":67}],62:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.areEqualOrdered = areEqualOrdered;\nexports.remove = remove;\nexports.findIndex = findIndex;\nexports.fromIterator = fromIterator;\nexports.pushIfNotExist = pushIfNotExist;\nexports.lastItem = lastItem;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nfunction areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (var i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\n\n\nfunction remove(array, shouldRemove) {\n  var removed = [];\n  var index = 0;\n\n  for (var i = 0; i < array.length; i++) {\n    var item = array[i];\n\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n\n      index++;\n    }\n  }\n\n  if (index < array.length) {\n    array.length = index;\n  }\n\n  return removed;\n}\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\n\n\nfunction findIndex(array, predicate) {\n  for (var i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\n\n\nfunction fromIterator(iterator) {\n  var array = [];\n\n  for (var e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n\n  return array;\n}\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @template T\n */\n\n\nfunction pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n  }\n}\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\n\n\nfunction lastItem(array) {\n  return array[array.length - 1];\n}\n\n},{}],63:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.domFingerprintPlain = domFingerprintPlain;\nexports.DomFingerprint = void 0;\n\nvar _string = require(\"../string\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Gets a string of concatenated element names and relative positions\n * of the DOM element and its parentElement's (up to 25).  Relative position\n * is the index of nodes with this tag within the parent's children.\n * The order is from the inner to outer nodes in DOM hierarchy.\n *\n * If a DOM hierarchy is the following:\n *\n * <div id='id1' ...>\n *   <div id='id2' ...>\n *     <table ...>       // table:0\n *       <tr>            // tr:0\n *         <td>...</td>  // td:0\n *         <td>          // td:1\n *           <amp-ad ...></amp-ad>\n *         </td>\n *       </tr>\n *       <tr>...</tr>    // tr:1\n *     </table>\n *   </div>\n * </div>\n *\n * With the amp-ad element passed in:\n * 'amp-ad.0,td.1,tr.0,table.0,div/id2.0,div/id1.0'\n *\n * Note: 25 is chosen arbitrarily.\n *\n * @param {?Element} element DOM node from which to get fingerprint.\n * @return {string} Concatenated element ids.\n */\nfunction domFingerprintPlain(element) {\n  var ids = [];\n  var level = 0;\n\n  while (element && element.nodeType ==\n  /* element */\n  1 && level < 25) {\n    var id = '';\n\n    if (element.id) {\n      id = \"/\" + element.id;\n    }\n\n    var nodeName = element.nodeName.toLowerCase();\n    ids.push(\"\" + nodeName + id + indexWithinParent(element));\n    level++;\n    element = element.parentElement;\n  }\n\n  return ids.join();\n}\n\nvar DomFingerprint =\n/*#__PURE__*/\nfunction () {\n  function DomFingerprint() {}\n\n  /**\n   * Calculates ad slot DOM fingerprint.  This key is intended to\n   * identify \"same\" ad unit across many page views. This is\n   * based on where the ad appears within the page's DOM structure.\n   *\n   * @param {?Element} element The DOM element from which to collect\n   *     the DOM chain element IDs.  If null, DOM chain element IDs are not\n   *     included in the hash.\n   * @return {string} The ad unit hash key string.\n   */\n  DomFingerprint.generate = function generate(element) {\n    return (0, _string.stringHash32)(domFingerprintPlain(element));\n  };\n\n  return DomFingerprint;\n}();\n/**\n * Gets a string showing the index of an element within\n * the children of its parent, counting only nodes with the same tag.\n * Stop at 25, just to have a limit.\n * @param {!Element} element DOM node to get index of.\n * @return {string} '.<index>' or ''.\n */\n\n\nexports.DomFingerprint = DomFingerprint;\n\nfunction indexWithinParent(element) {\n  var nodeName = element.nodeName; // Find my index within my parent's children\n\n  var i = 0;\n  var count = 0;\n  var sibling = element.previousElementSibling; // Different browsers have different children.\n  // So count only nodes with the same tag.\n  // Use a limit for the tags, so that different browsers get the same\n  // count. So 25 and higher all return no index.\n\n  while (sibling && count < 25 && i < 100) {\n    if (sibling.nodeName == nodeName) {\n      count++;\n    }\n\n    i++;\n    sibling = sibling.previousElementSibling;\n  } // If we got to the end, then the count is accurate; otherwise skip count.\n\n\n  return count < 25 && i < 100 ? \".\" + count : '';\n}\n\n},{\"../string\":55}],64:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.once = once;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// TODO(rsimha, #15334): Enable this rule.\n\n/* eslint jsdoc/check-types: 0 */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nfunction once(fn) {\n  var evaluated = false;\n  var retValue = null;\n  var callback = fn;\n  return function () {\n    if (!evaluated) {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n\n    return retValue;\n  };\n}\n\n},{}],65:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.LruCache = void 0;\n\nvar _log = require(\"../log\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nvar TAG = 'lru-cache';\n/**\n * @template T\n */\n\nvar LruCache =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {number} capacity\n   */\n  function LruCache(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n    /** @private {number} */\n\n    this.size_ = 0;\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n\n    this.access_ = 0;\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n\n    this.cache_ = Object.create(null);\n  }\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n\n\n  var _proto = LruCache.prototype;\n\n  _proto.has = function has(key) {\n    return !!this.cache_[key];\n  }\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  ;\n\n  _proto.get = function get(key) {\n    var cacheable = this.cache_[key];\n\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n\n    return undefined;\n  }\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  ;\n\n  _proto.put = function put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n\n    this.cache_[key] = {\n      payload: payload,\n      access: this.access_\n    };\n    this.evict_();\n  }\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  ;\n\n  _proto.evict_ = function evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    (0, _log.dev)().warn(TAG, 'Trimming LRU cache');\n    var cache = this.cache_;\n    var oldest = this.access_ + 1;\n    var oldestKey;\n\n    for (var key in cache) {\n      var access = cache[key].access;\n\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  };\n\n  return LruCache;\n}();\n\nexports.LruCache = LruCache;\n\n},{\"../log\":45}],66:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.mapRange = mapRange;\nexports.mod = mod;\nexports.clamp = clamp;\nexports.boundValue = boundValue;\nexports.magnitude = magnitude;\nexports.distance = distance;\nexports.polarToCartesian = polarToCartesian;\nexports.sum = sum;\n\nvar _log = require(\"../log\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Maps a value in a first range to its equivalent in a second range\n * Ex.: 5 in the range [0,10] gives 60 in the range[40,80]\n *\n * NOTE: lower/upper bounds on the source range are detected automatically,\n * however the bounds on the target range are not altered (thus the target\n * range could be decreasing).\n * Ex1: 8 in the range [0, 10] gives 2 in the range [10, 0]\n * Ex2: also, 8 in the range [10, 0] gives 2 in the range [10, 0]\n *\n * NOTE: Input value is enforced to be bounded inside the source range\n * Ex1: -2 in the range [0, 10] is interpreted as 0 and thus gives 40 in [40,80]\n * Ex2: 19 in the range [0, 5] is interpreted as 5 and thus gives 80 in [40,80]\n *\n * @param {number} val the value in the source range\n * @param {number} min1 the lower bound of the source range\n * @param {number} max1 the upper bound of the source range\n * @param {number} min2 the lower bound of the target range\n * @param {number} max2 the upper bound of the target range\n * @return {number} the equivalent value in the target range\n */\nfunction mapRange(val, min1, max1, min2, max2) {\n  var max1Bound = max1;\n  var min1Bound = min1;\n\n  if (min1 > max1) {\n    max1Bound = min1;\n    min1Bound = max1;\n  }\n\n  if (val < min1Bound) {\n    val = min1Bound;\n  } else if (val > max1Bound) {\n    val = max1Bound;\n  }\n\n  return (val - min1) * (max2 - min2) / (max1 - min1) + min2;\n}\n/**\n * Computes the modulus of values `a` and `b`.\n *\n * This is needed because the % operator in JavaScript doesn't implement\n * modulus behavior as can be seen by the spec here:\n * http://www.ecma-international.org/ecma-262/5.1/#sec-11.5.3.\n * It instead is used to obtain the remainder of a division.\n * This function uses the remainder (%) operator to determine the modulus.\n * Derived from here:\n * https://stackoverflow.com/questions/25726760/javascript-modular-arithmetic/47354356#47354356\n *\n * @param {number} a\n * @param {number} b\n * @return {number} returns the modulus of the two numbers.\n * @example\n *\n * _.min(10, 5);\n * // => 0\n *\n * _.mod(-1, 5);\n * // => 4\n */\n\n\nfunction mod(a, b) {\n  return a > 0 && b > 0 ? a % b : (a % b + b) % b;\n}\n/**\n * Restricts a number to be in the given min/max range. The minimum value must\n * be less than or equal to the maximum value.\n *\n * Examples:\n * clamp(0.5, 0, 1) -> 0.5\n * clamp(1.5, 0, 1) -> 1\n * clamp(-0.5, 0, 1) -> 0\n *\n * @param {number} val the value to clamp.\n * @param {number} min the lower bound.\n * @param {number} max the upper bound.\n * @return {number} the clamped value.\n */\n\n\nfunction clamp(val, min, max) {\n  (0, _log.devAssert)(min <= max, 'Minimum value is greater than the maximum.');\n  return Math.min(Math.max(val, min), max);\n}\n/**\n * Returns value bound to min and max values +/- extent. The lower bound must\n * be less than or equal to the upper bound.\n * @param {number} val the value to bound.\n * @param {number} min the lower bound.\n * @param {number} max the upper bound\n * @param {number} extent the allowed extent beyond the bounds.\n * @return {number} the bounded value.\n */\n\n\nfunction boundValue(val, min, max, extent) {\n  (0, _log.devAssert)(min <= max, 'Lower bound is greater than the upper bound.');\n  return clamp(val, min - extent, max + extent);\n}\n/**\n * Returns the length of a vector given in X- and Y-coordinates.\n * @param {number} deltaX distance in the X direction.\n * @param {number} deltaY distance in the Y direction.\n * @return {number} the magnitude of the vector.\n */\n\n\nfunction magnitude(deltaX, deltaY) {\n  return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n}\n/**\n * Returns the distance between two points.\n * @param {number} x1 X-coordinate of the first point.\n * @param {number} y1 Y-coordinate of the first point.\n * @param {number} x2 X-coordinate of the second point.\n * @param {number} y2 Y-coordinate of the second point.\n * @return {number} the distance between the two points.\n */\n\n\nfunction distance(x1, y1, x2, y2) {\n  return magnitude(x2 - x1, y2 - y1);\n}\n/**\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} radius\n * @param {number} angleInDegrees\n * @return {{\n *  x: number,\n *  y: number,\n * }}\n */\n\n\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians)\n  };\n}\n/**\n * Sums up the values of the given array and returns the result\n * @param {Array<number>} values\n * @return {number}\n */\n\n\nfunction sum(values) {\n  return values.reduce(function (a, b) {\n    return a + b;\n  });\n}\n\n},{\"../log\":45}],67:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.map = map;\nexports.dict = dict;\nexports.hasOwn = hasOwn;\nexports.ownProperty = ownProperty;\nexports.deepMerge = deepMerge;\nexports.omit = omit;\n\nvar _types = require(\"../types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nvar hasOwn_ = Object.prototype.hasOwnProperty;\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\n\nfunction map(opt_initial) {\n  var obj = Object.create(null);\n\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n\n  return obj;\n}\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\n\n\nfunction dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return (\n    /** @type {!JsonObject} */\n    opt_initial || {}\n  );\n}\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\n\n\nfunction hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\n\n\nfunction ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\n\n\nfunction deepMerge(target, source, depth) {\n  if (depth === void 0) {\n    depth = 10;\n  }\n\n  // Keep track of seen objects to detect recursive references.\n  var seen = [];\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n\n  var queue = [];\n  queue.push({\n    t: target,\n    s: source,\n    d: 0\n  }); // BFS to ensure objects don't have recursive references at shallower depths.\n\n  var _loop = function _loop() {\n    var _queue$shift = queue.shift(),\n        t = _queue$shift.t,\n        s = _queue$shift.s,\n        d = _queue$shift.d;\n\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n\n    seen.push(s);\n\n    if (t === s) {\n      return \"continue\";\n    }\n\n    if (d > depth) {\n      Object.assign(t, s);\n      return \"continue\";\n    }\n\n    Object.keys(s).forEach(function (key) {\n      var newValue = s[key]; // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n\n      if (hasOwn(t, key)) {\n        var oldValue = t[key];\n\n        if ((0, _types.isObject)(newValue) && (0, _types.isObject)(oldValue)) {\n          queue.push({\n            t: oldValue,\n            s: newValue,\n            d: d + 1\n          });\n          return;\n        }\n      }\n\n      t[key] = newValue;\n    });\n  };\n\n  while (queue.length > 0) {\n    var _ret = _loop();\n\n    if (_ret === \"continue\") continue;\n  }\n\n  return target;\n}\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\n\n\nfunction omit(o, props) {\n  return Object.keys(o).reduce(function (acc, key) {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n\n    return acc;\n  }, {});\n}\n\n},{\"../types\":58}],68:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.tryResolve = tryResolve;\nexports.some = some;\nexports.LastAddedResolver = exports.Deferred = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nvar Deferred =\n/**\n * Creates an instance of Deferred.\n */\nfunction Deferred() {\n  var resolve, reject;\n  /**\n   * @const {!Promise<T>}\n   */\n\n  this.promise = new\n  /*OK*/\n  Promise(function (res, rej) {\n    resolve = res;\n    reject = rej;\n  });\n  /**\n   * @const {function(T=)}\n   */\n\n  this.resolve = resolve;\n  /**\n   * @const {function(*=)}\n   */\n\n  this.reject = reject;\n};\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\n\n\nexports.Deferred = Deferred;\n\nfunction tryResolve(fn) {\n  return new Promise(function (resolve) {\n    resolve(fn());\n  });\n}\n/**\n * Returns a promise which resolves if a threshold amount of the given promises\n * resolve, and rejects otherwise.\n * @param {!Array<!Promise>} promises The array of promises to test.\n * @param {number} count The number of promises that must resolve for the\n *     returned promise to resolve.\n * @return {!Promise} A promise that resolves if any of the given promises\n *     resolve, and which rejects otherwise.\n */\n\n\nfunction some(promises, count) {\n  if (count === void 0) {\n    count = 1;\n  }\n\n  return new Promise(function (resolve, reject) {\n    count = Math.max(count, 0);\n    var extra = promises.length - count;\n\n    if (extra < 0) {\n      reject(new Error('not enough promises to resolve'));\n    }\n\n    if (promises.length == 0) {\n      resolve([]);\n    }\n\n    var values = [];\n    var reasons = [];\n\n    var onFulfilled = function onFulfilled(value) {\n      if (values.length < count) {\n        values.push(value);\n      }\n\n      if (values.length == count) {\n        resolve(values);\n      }\n    };\n\n    var onRejected = function onRejected(reason) {\n      if (reasons.length <= extra) {\n        reasons.push(reason);\n      }\n\n      if (reasons.length > extra) {\n        reject(reasons);\n      }\n    };\n\n    for (var i = 0; i < promises.length; i++) {\n      Promise.resolve(promises[i]).then(onFulfilled, onRejected);\n    }\n  });\n}\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\n\n\nvar LastAddedResolver =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Array<!Promise>=} opt_promises\n   */\n  function LastAddedResolver(opt_promises) {\n    var resolve_, reject_;\n    /** @private @const {!Promise} */\n\n    this.promise_ = new Promise(function (resolve, reject) {\n      resolve_ = resolve;\n      reject_ = reject;\n    });\n    /** @private */\n\n    this.resolve_ = resolve_;\n    /** @private */\n\n    this.reject_ = reject_;\n    /** @private */\n\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (var i = 0; i < opt_promises.length; i++) {\n        this.add(opt_promises[i]);\n      }\n    }\n  }\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!Promise} promise\n   * @return {!Promise}\n   */\n\n\n  var _proto = LastAddedResolver.prototype;\n\n  _proto.add = function add(promise) {\n    var _this = this;\n\n    var countAtAdd = ++this.count_;\n    Promise.resolve(promise).then(function (result) {\n      if (_this.count_ === countAtAdd) {\n        _this.resolve_(result);\n      }\n    }, function (error) {\n      // Don't follow behavior of Promise.all and Promise.race error so that\n      // this will only reject when most recently added promise fails.\n      if (_this.count_ === countAtAdd) {\n        _this.reject_(error);\n      }\n    });\n    return this.promise_;\n  }\n  /** @override */\n  ;\n\n  _proto.then = function then(opt_resolve, opt_reject) {\n    return this.promise_.then(opt_resolve, opt_reject);\n  };\n\n  return LastAddedResolver;\n}();\n\nexports.LastAddedResolver = LastAddedResolver;\n\n},{}],69:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.throttle = throttle;\nexports.debounce = debounce;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Wraps a given callback and applies a rate limit.\n * It throttles the calls so that no consequent calls have time interval\n * smaller than the given minimal interval.\n *\n * @param {!Window} win\n * @param {function(...*)} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...*)}\n */\nfunction throttle(win, callback, minInterval) {\n  var locker = 0;\n  var nextCallArgs = null;\n  /**\n   * @param {!Object} args\n   */\n\n  function fire(args) {\n    nextCallArgs = null; // Lock the fire for minInterval milliseconds\n\n    locker = win.setTimeout(waiter, minInterval);\n    callback.apply(null, args);\n  }\n  /**\n   * Waiter function\n   */\n\n\n  function waiter() {\n    locker = 0; // If during the period there're invocations queued up, fire once.\n\n    if (nextCallArgs) {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (locker) {\n      nextCallArgs = args;\n    } else {\n      fire(args);\n    }\n  };\n}\n/**\n * Wraps a given callback and applies a wait timer, so that minInterval\n * milliseconds must pass since the last call before the callback is actually\n * invoked.\n *\n * @param {!Window} win\n * @param {function(...*)} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...*)}\n */\n\n\nfunction debounce(win, callback, minInterval) {\n  var locker = 0;\n  var timestamp = 0;\n  var nextCallArgs = null;\n  /**\n   * @param {?Array} args\n   */\n\n  function fire(args) {\n    nextCallArgs = null;\n    callback.apply(null, args);\n  }\n  /**\n   * Wait function for debounce\n   */\n\n\n  function waiter() {\n    locker = 0;\n    var remaining = minInterval - (win.Date.now() - timestamp);\n\n    if (remaining > 0) {\n      locker = win.setTimeout(waiter, remaining);\n    } else {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function () {\n    timestamp = win.Date.now();\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    nextCallArgs = args;\n\n    if (!locker) {\n      locker = win.setTimeout(waiter, minInterval);\n    }\n  };\n}\n\n},{}],70:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.cssEscape = cssEscape;\n\n/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  } // Nil is the null terminator (group 1) capture\n\n\n  if (nil) {\n    return \"\\uFFFD\";\n  } // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n\n\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' ';\n  } // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n\n\n  return '\\\\' + match;\n}\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\n\n\nfunction cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n\n},{}]},{},[15])\n\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cloudflareIsA4AEnabled} from '../extensions/amp-ad-network-cloudflare-impl/0.1/cloudflare-a4a-config';\nimport {gmosspIsA4AEnabled} from '../extensions/amp-ad-network-gmossp-impl/0.1/gmossp-a4a-config';\nimport {map} from '../src/utils/object';\nimport {tripleliftIsA4AEnabled} from '../extensions/amp-ad-network-triplelift-impl/0.1/triplelift-a4a-config';\n\n/**\n * Registry for A4A (AMP Ads for AMPHTML pages) \"is supported\" predicates.\n * If an ad network, {@code ${NETWORK}}, is registered in this object, then the\n * {@code <amp-ad type=\"${NETWORK}\">} implementation will look up its predicate\n * here. If there is a predicate and it and returns {@code true}, then\n * {@code amp-ad} will attempt to render the ad via the A4A pathway (fetch\n * ad creative via early XHR CORS request; verify that it is validated AMP;\n * and then render directly in the host page by splicing into the host DOM).\n * Otherwise, it will attempt to render the ad via the existing \"3p iframe\"\n * pathway (delay load into a cross-domain iframe).\n *\n * @type {!Object<string, function(!Window, !Element): boolean>}\n */\nlet a4aRegistry;\n\n/**\n * Returns the a4a registry map\n * @return {Object}\n */\nexport function getA4ARegistry() {\n  if (!a4aRegistry) {\n    a4aRegistry = map({\n      'adsense': () => true,\n      'adzerk': () => true,\n      'doubleclick': () => true,\n      'triplelift': tripleliftIsA4AEnabled,\n      'cloudflare': cloudflareIsA4AEnabled,\n      'gmossp': gmosspIsA4AEnabled,\n      'fake': () => true,\n      // TODO: Add new ad network implementation \"is enabled\" functions here.\n      // Note: if you add a function here that requires a new \"import\", above,\n      // you'll probably also need to add a whitelist exception to\n      // build-system/test-configs/dep-check-config.js in the\n      // \"filesMatching: 'ads/**/*.js'\" rule.\n    });\n  }\n\n  return a4aRegistry;\n}\n\n/**\n * An object mapping signing server names to their corresponding URLs.\n * @type {!Object<string, string>}\n */\nexport const signingServerURLs = {\n  'google': 'https://cdn.ampproject.org/amp-ad-verifying-keyset.json',\n  'google-dev': 'https://cdn.ampproject.org/amp-ad-verifying-keyset-dev.json',\n  'cloudflare': 'https://amp.cloudflare.com/amp-ad-verifying-keyset.json',\n  'cloudflare-dev':\n    'https://amp.cloudflare.com/amp-ad-verifying-keyset-dev.json',\n};\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonConfiguration} from '../src/json';\n\n/**\n * @typedef {{\n *   prefetch: (string|undefined),\n *   preconnect: (string|undefined),\n *   renderStartImplemented: (boolean|undefined),\n *   clientIdScope: (string|undefined),\n *   clientIdCookieName: (string|undefined),\n *   consentHandlingOverride: (boolean|undefined),\n *   remoteHTMLDisabled: (boolean|undefined),\n *   fullWidthHeightRatio: (number|undefined),\n * }}\n */\nlet AdNetworkConfigDef;\n\n/**\n * The config of each ad network.\n * Please keep the list alphabetic order.\n *\n * yourNetworkName: {  // This is the \"type\" attribute of <amp-ad>\n *\n *   // List of URLs for prefetch\n *   prefetch: string|array\n *\n *   // List of hosts for preconnect\n *   preconnect: string|array\n *\n *   // The scope used to provide CIDs to ads\n *   clientIdScope: string\n *\n *   // The cookie name to store the CID. In absence, `clientIdScope` is used.\n *   clientIdCookieName: string\n *\n *   // If the ad network is willing to override the consent handling, which\n *   // by default is blocking ad load until the consent is accepted.\n *   consentHandlingOverride: boolean\n *\n *   // Whether render-start API has been implemented\n *   // We highly recommend all networks to implement the API,\n *   // see details in the README.md\n *   renderStartImplemented: boolean\n *\n *   // The width / height ratio for full width ad units.\n *   // If absent, it means the network does not support full width ad units.\n *   // Example value: 1.2\n *   fullWidthHeightRatio: number\n * }\n *\n * @const {!Object<string, !JsonObject>}\n */\nconst adConfig = jsonConfiguration({\n  '_ping_': {\n    renderStartImplemented: true,\n    clientIdScope: '_PING_',\n    consentHandlingOverride: true,\n  },\n\n  '1wo': {},\n\n  '24smi': {\n    prefetch: 'https://jsn.24smi.net/smi.js',\n    preconnect: 'https://data.24smi.net',\n  },\n\n  'a8': {\n    prefetch: 'https://statics.a8.net/amp/ad.js',\n    renderStartImplemented: true,\n  },\n\n  'a9': {\n    prefetch: 'https://z-na.amazon-adsystem.com/widgets/onejs?MarketPlace=US',\n  },\n\n  'accesstrade': {\n    prefetch: 'https://h.accesstrade.net/js/amp/amp.js',\n  },\n\n  'adagio': {\n    prefetch: 'https://js-ssl.neodatagroup.com/adagio_amp.js',\n    preconnect: [\n      'https://ad-aws-it.neodatagroup.com',\n      'https://tracker.neodatagroup.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'adblade': {\n    prefetch: 'https://web.adblade.com/js/ads/async/show.js',\n    preconnect: [\n      'https://staticd.cdn.adblade.com',\n      'https://static.adblade.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'adbutler': {\n    prefetch: 'https://servedbyadbutler.com/app.js',\n  },\n\n  'adform': {},\n\n  'adfox': {\n    prefetch: 'https://yastatic.net/pcode/adfox/loader.js',\n    renderStartImplemented: true,\n  },\n\n  'adgeneration': {\n    prefetch: 'https://i.socdm.com/sdk/js/adg-script-loader.js',\n  },\n\n  'adglare': {\n    renderStartImplemented: true,\n  },\n\n  'adhese': {\n    renderStartImplemented: true,\n  },\n\n  'adincube': {\n    renderStartImplemented: true,\n  },\n\n  'adition': {},\n\n  'adman': {},\n\n  'admanmedia': {\n    renderStartImplemented: true,\n  },\n\n  'admixer': {\n    renderStartImplemented: true,\n    preconnect: ['https://inv-nets.admixer.net', 'https://cdn.admixer.net'],\n  },\n\n  'adocean': {\n    consentHandlingOverride: true,\n  },\n\n  'adop': {},\n\n  'adpicker': {\n    renderStartImplemented: true,\n  },\n\n  'adplugg': {\n    prefetch: 'https://www.adplugg.com/serve/js/ad.js',\n    renderStartImplemented: true,\n  },\n\n  'adpon': {\n    prefetch: 'https://ad.adpon.jp/amp.js',\n    clientIdScope: 'AMP_ECID_ADPON',\n  },\n\n  'adreactor': {},\n\n  'adsensor': {\n    prefetch: 'https://wfpscripts.webspectator.com/amp/adsensor-amp.js',\n    clientIdScope: 'amp_ecid_adensor',\n    renderStartImplemented: true,\n  },\n  'adsloom': {\n    clientIdScope: 'AMP_ECID_ADSLOOM',\n  },\n  'adsnative': {\n    prefetch: 'https://static.adsnative.com/static/js/render.v1.js',\n    preconnect: 'https://api.adsnative.com',\n  },\n\n  'adspeed': {\n    preconnect: 'https://g.adspeed.net',\n    renderStartImplemented: true,\n  },\n\n  'adspirit': {},\n\n  'adstir': {\n    prefetch: 'https://js.ad-stir.com/js/adstir_async.js',\n    preconnect: 'https://ad.ad-stir.com',\n  },\n\n  'adstyle': {\n    prefetch: 'https://widgets.ad.style/amp.js',\n    preconnect: ['https://w.ad.style'],\n  },\n\n  'adtech': {\n    prefetch: 'https://s.aolcdn.com/os/ads/adsWrapper3.js',\n    preconnect: ['https://mads.at.atwola.com', 'https://aka-cdn.adtechus.com'],\n  },\n\n  'adthrive': {\n    prefetch: ['https://www.googletagservices.com/tag/js/gpt.js'],\n    preconnect: [\n      'https://partner.googleadservices.com',\n      'https://securepubads.g.doubleclick.net',\n      'https://tpc.googlesyndication.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'adunity': {\n    preconnect: ['https://content.adunity.com'],\n    renderStartImplemented: true,\n  },\n\n  'aduptech': {\n    prefetch: 'https://s.d.adup-tech.com/jsapi',\n    preconnect: ['https://d.adup-tech.com', 'https://m.adup-tech.com'],\n    renderStartImplemented: true,\n  },\n\n  'adventive': {\n    preconnect: ['https://ads.adventive.com', 'https://amp.adventivedev.com'],\n    renderStartImplemented: true,\n  },\n\n  'adverline': {\n    prefetch: 'https://ads.adverline.com/richmedias/amp.js',\n    preconnect: ['https://adnext.fr'],\n    renderStartImplemented: true,\n  },\n\n  'adverticum': {},\n\n  'advertserve': {\n    renderStartImplemented: true,\n  },\n\n  'adyoulike': {\n    consentHandlingOverride: true,\n    prefetch: 'https://fo-static.omnitagjs.com/amp.js',\n    renderStartImplemented: true,\n  },\n\n  'adzerk': {},\n\n  'affiliateb': {\n    prefetch: 'https://track.affiliate-b.com/amp/a.js',\n    renderStartImplemented: true,\n  },\n\n  'aja': {\n    prefetch: [\n      'https://cdn.as.amanad.adtdp.com/sdk/asot-amp.js',\n      'https://cdn.as.amanad.adtdp.com/sdk/asot-v2.js',\n    ],\n    preconnect: ['https://ad.as.amanad.adtdp.com'],\n  },\n\n  'appvador': {\n    prefetch: [\n      'https://cdn.apvdr.com/js/VastAdUnit.min.js',\n      'https://cdn.apvdr.com/js/VideoAd.min.js',\n      'https://cdn.apvdr.com/js/VideoAd3PAS.min.js',\n      'https://cdn.apvdr.com/js/VideoAdAutoPlay.min.js',\n      'https://cdn.apvdr.com/js/VideoAdNative.min.js',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'amoad': {\n    prefetch: ['https://j.amoad.com/js/a.js', 'https://j.amoad.com/js/n.js'],\n    preconnect: [\n      'https://d.amoad.com',\n      'https://i.amoad.com',\n      'https://m.amoad.com',\n      'https://v.amoad.com',\n    ],\n  },\n\n  'aniview': {\n    renderStartImplemented: true,\n  },\n\n  'appnexus': {\n    prefetch: 'https://acdn.adnxs.com/ast/ast.js',\n    preconnect: 'https://ib.adnxs.com',\n    renderStartImplemented: true,\n  },\n\n  'atomx': {\n    prefetch: 'https://s.ato.mx/p.js',\n  },\n\n  'beaverads': {\n    renderStartImplemented: true,\n  },\n\n  'beopinion': {\n    prefetch: 'https://widget.beopinion.com/sdk.js',\n    preconnect: [\n      'https://t.beopinion.com',\n      'https://s.beopinion.com',\n      'https://data.beopinion.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'bidtellect': {},\n\n  'blade': {\n    prefetch: 'https://sdk.streamrail.com/blade/sr.blade.js',\n    renderStartImplemented: true,\n  },\n\n  'brainy': {},\n\n  'bringhub': {\n    renderStartImplemented: true,\n    preconnect: ['https://static.bh-cdn.com', 'https://core-api.bringhub.io'],\n  },\n\n  'broadstreetads': {\n    prefetch: 'https://cdn.broadstreetads.com/init-2.min.js',\n  },\n\n  'caajainfeed': {\n    prefetch: ['https://cdn.amanad.adtdp.com/sdk/ajaamp.js'],\n    preconnect: ['https://ad.amanad.adtdp.com'],\n  },\n\n  'capirs': {\n    renderStartImplemented: true,\n  },\n\n  'caprofitx': {\n    prefetch: [\n      'https://cdn.caprofitx.com/pfx.min.js',\n      'https://cdn.caprofitx.com/tags/amp/profitx_amp.js',\n    ],\n    preconnect: 'https://ad.caprofitx.adtdp.com',\n  },\n\n  'cedato': {\n    renderStartImplemented: true,\n  },\n\n  'chargeads': {}, // Deprecated, to be removed on 2019-05-23\n\n  'colombia': {\n    prefetch: 'https://static.clmbtech.com/ad/commons/js/colombia-amp.js',\n  },\n\n  'connatix': {\n    renderStartImplemented: true,\n  },\n\n  'contentad': {},\n\n  'criteo': {\n    prefetch: 'https://static.criteo.net/js/ld/publishertag.js',\n    preconnect: 'https://cas.criteo.com',\n  },\n\n  'csa': {\n    prefetch: 'https://www.google.com/adsense/search/ads.js',\n  },\n\n  'dable': {\n    preconnect: [\n      'https://static.dable.io',\n      'https://api.dable.io',\n      'https://images.dable.io',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'directadvert': {\n    renderStartImplemented: true,\n  },\n\n  'distroscale': {\n    preconnect: [\n      'https://c.jsrdn.com',\n      'https://s.jsrdn.com',\n      'https://i.jsrdn.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'dotandads': {\n    prefetch: 'https://amp.ad.dotandad.com/dotandadsAmp.js',\n    preconnect: 'https://bal.ad.dotandad.com',\n  },\n  'dynad': {\n    preconnect: ['https://t.dynad.net', 'https://tm.jsuol.com.br'],\n  },\n  'eadv': {\n    renderStartImplemented: true,\n    clientIdScope: 'AMP_ECID_EADV',\n    prefetch: [\n      'https://www.eadv.it/track/esr.min.js',\n      'https://www.eadv.it/track/ead.min.js',\n    ],\n  },\n\n  'eas': {\n    prefetch: 'https://amp.emediate.eu/amp.v0.js',\n    renderStartImplemented: true,\n  },\n\n  'engageya': {},\n\n  'epeex': {},\n\n  'eplanning': {\n    prefetch: 'https://us.img.e-planning.net/layers/epl-amp.js',\n  },\n\n  'ezoic': {\n    prefetch: [\n      'https://www.googletagservices.com/tag/js/gpt.js',\n      'https://g.ezoic.net/ezoic/ampad.js',\n    ],\n    clientIdScope: 'AMP_ECID_EZOIC',\n    consentHandlingOverride: true,\n  },\n\n  'f1e': {\n    prefetch: 'https://img.ak.impact-ad.jp/util/f1e_amp.min.js',\n  },\n\n  'f1h': {\n    preconnect: 'https://img.ak.impact-ad.jp',\n    renderStartImplemented: true,\n  },\n\n  'fake': {},\n\n  'felmat': {\n    prefetch: 'https://t.felmat.net/js/fmamp.js',\n    renderStartImplemented: true,\n  },\n\n  'flite': {},\n\n  'fluct': {\n    preconnect: [\n      'https://cdn-fluct.sh.adingo.jp',\n      'https://s.sh.adingo.jp',\n      'https://i.adingo.jp',\n    ],\n  },\n\n  'forkmedia': {\n    prefetch: 'https://delivery.forkcdn.com/rappio/inread/v1.1/amp/inread.js',\n    renderStartImplemented: true,\n  },\n\n  'freewheel': {\n    prefetch: 'https://cdn.stickyadstv.com/prime-time/fw-amp.min.js',\n    renderStartImplemented: true,\n  },\n\n  'fusion': {\n    prefetch: 'https://assets.adtomafusion.net/fusion/latest/fusion-amp.min.js',\n  },\n\n  'genieessp': {\n    prefetch: 'https://js.gsspcln.jp/l/amp.js',\n  },\n\n  'giraff': {\n    renderStartImplemented: true,\n  },\n\n  'gmossp': {\n    prefetch: 'https://cdn.gmossp-sp.jp/ads/amp.js',\n  },\n\n  'gumgum': {\n    prefetch: 'https://js.gumgum.com/slot.js',\n    renderStartImplemented: true,\n  },\n\n  'holder': {\n    prefetch: 'https://i.holder.com.ua/js2/holder/ajax/ampv1.js',\n    preconnect: 'https://h.holder.com.ua',\n    renderStartImplemented: true,\n  },\n\n  'ibillboard': {},\n\n  'idealmedia': {\n    renderStartImplemented: true,\n    preconnect: [\n      'https://jsc.idealmedia.io',\n      'https://servicer.idealmedia.io',\n      'https://s-img.idealmedia.io/',\n    ],\n  },\n\n  'imedia': {\n    prefetch: 'https://i.imedia.cz/js/im3.js',\n    renderStartImplemented: true,\n  },\n\n  'imobile': {\n    prefetch: 'https://spamp.i-mobile.co.jp/script/amp.js',\n    preconnect: 'https://spad.i-mobile.co.jp',\n  },\n  'imonomy': {\n    renderStartImplemented: true,\n  },\n  'improvedigital': {},\n\n  'industrybrains': {\n    prefetch: 'https://web.industrybrains.com/js/ads/async/show.js',\n    preconnect: [\n      'https://staticd.cdn.industrybrains.com',\n      'https://static.industrybrains.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'inmobi': {\n    prefetch: 'https://cf.cdn.inmobi.com/ad/inmobi.secure.js',\n    renderStartImplemented: true,\n  },\n\n  'innity': {\n    prefetch: 'https://cdn.innity.net/admanager.js',\n    preconnect: 'https://as.innity.com',\n    renderStartImplemented: true,\n  },\n\n  'insticator': {\n    preconnect: 'https://d3lcz8vpax4lo2.cloudfront.net', // can also be array if more than one URL needed\n    renderStartImplemented: true,\n  },\n\n  'invibes': {\n    prefetch: 'https://k.r66net.com/GetAmpLink',\n    renderStartImplemented: true,\n    consentHandlingOverride: true,\n  },\n\n  'ix': {\n    prefetch: ['https://js-sec.indexww.com/apl/amp.js'],\n    preconnect: 'https://as-sec.casalemedia.com',\n    renderStartImplemented: true,\n  },\n\n  'jubna': {},\n\n  'kargo': {},\n\n  'kiosked': {\n    renderStartImplemented: true,\n  },\n\n  'kixer': {\n    prefetch: 'https://cdn.kixer.com/ad/load.js',\n    renderStartImplemented: true,\n  },\n\n  'kuadio': {},\n\n  'lentainform': {\n    renderStartImplemented: true,\n    preconnect: [\n      'https://jsc.lentainform.com',\n      'https://servicer.lentainform.com',\n      'https://s-img.lentainform.com',\n    ],\n  },\n\n  'ligatus': {\n    prefetch: 'https://ssl.ligatus.com/render/ligrend.js',\n    renderStartImplemented: true,\n  },\n\n  'lockerdome': {\n    prefetch: 'https://cdn2.lockerdomecdn.com/_js/amp.js',\n    renderStartImplemented: true,\n  },\n\n  'logly': {\n    preconnect: ['https://l.logly.co.jp', 'https://cdn.logly.co.jp'],\n    renderStartImplemented: true,\n  },\n\n  'loka': {\n    prefetch: 'https://loka-cdn.akamaized.net/scene/amp.js',\n    preconnect: [\n      'https://scene-front.lokaplatform.com',\n      'https://loka-materials.akamaized.net',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'mads': {\n    prefetch: 'https://eu2.madsone.com/js/tags.js',\n  },\n\n  'mantis-display': {\n    prefetch: 'https://assets.mantisadnetwork.com/mantodea.min.js',\n    preconnect: [\n      'https://mantodea.mantisadnetwork.com',\n      'https://res.cloudinary.com',\n      'https://resize.mantisadnetwork.com',\n    ],\n  },\n\n  'mantis-recommend': {\n    prefetch: 'https://assets.mantisadnetwork.com/recommend.min.js',\n    preconnect: [\n      'https://mantodea.mantisadnetwork.com',\n      'https://resize.mantisadnetwork.com',\n    ],\n  },\n\n  'mediaimpact': {\n    prefetch: 'https://ec-ns.sascdn.com/diff/251/pages/amp_default.js',\n    preconnect: [\n      'https://ww251.smartadserver.com',\n      'https://static.sascdn.com/',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'medianet': {\n    preconnect: 'https://contextual.media.net',\n    renderStartImplemented: true,\n  },\n\n  'mediavine': {\n    prefetch: 'https://amp.mediavine.com/wrapper.min.js',\n    preconnect: [\n      'https://partner.googleadservices.com',\n      'https://securepubads.g.doubleclick.net',\n      'https://tpc.googlesyndication.com',\n    ],\n    renderStartImplemented: true,\n    consentHandlingOverride: true,\n  },\n\n  'medyanet': {\n    renderStartImplemented: true,\n  },\n\n  'meg': {\n    renderStartImplemented: true,\n  },\n\n  'mgid': {\n    renderStartImplemented: true,\n    preconnect: [\n      'https://jsc.mgid.com',\n      'https://servicer.mgid.com',\n      'https://s-img.mgid.com',\n    ],\n  },\n\n  'microad': {\n    prefetch: 'https://j.microad.net/js/camp.js',\n    preconnect: [\n      'https://s-rtb.send.microad.jp',\n      'https://s-rtb.send.microadinc.com',\n      'https://cache.send.microad.jp',\n      'https://cache.send.microadinc.com',\n      'https://deb.send.microad.jp',\n    ],\n  },\n\n  'miximedia': {\n    renderStartImplemented: true,\n  },\n\n  'mixpo': {\n    prefetch: 'https://cdn.mixpo.com/js/loader.js',\n    preconnect: ['https://player1.mixpo.com', 'https://player2.mixpo.com'],\n  },\n\n  'monetizer101': {\n    renderStartImplemented: true,\n  },\n\n  'mox': {\n    prefetch: [\n      'https://ad.mox.tv/js/amp.min.js',\n      'https://ad.mox.tv/mox/mwayss_invocation.min.js',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'mytarget': {\n    prefetch: 'https://ad.mail.ru/static/ads-async.js',\n    renderStartImplemented: true,\n  },\n\n  'mywidget': {\n    preconnect: 'https://likemore-fe.go.mail.ru',\n    prefetch: 'https://likemore-go.imgsmail.ru/widget_amp.js',\n    renderStartImplemented: true,\n  },\n\n  'nativeroll': {\n    prefetch: 'https://cdn01.nativeroll.tv/js/seedr-player.min.js',\n  },\n\n  'nativo': {\n    prefetch: 'https://s.ntv.io/serve/load.js',\n  },\n\n  'navegg': {\n    renderStartImplemented: true,\n  },\n\n  'nend': {\n    prefetch: 'https://js1.nend.net/js/amp.js',\n    preconnect: ['https://output.nend.net', 'https://img1.nend.net'],\n  },\n\n  'netletix': {\n    preconnect: ['https://call.netzathleten-media.de'],\n    renderStartImplemented: true,\n  },\n\n  'noddus': {\n    prefetch: 'https://noddus.com/amp_loader.js',\n    renderStartImplemented: true,\n  },\n\n  'nokta': {\n    prefetch: 'https://static.virgul.com/theme/mockups/noktaamp/ampjs.js',\n    renderStartImplemented: true,\n  },\n\n  'nws': {},\n\n  'onead': {\n    prefetch: 'https://ad-specs.guoshipartners.com/static/js/onead-amp.min.js',\n    renderStartImplemented: true,\n  },\n\n  'onnetwork': {\n    renderStartImplemented: true,\n  },\n\n  'openadstream': {},\n\n  'openx': {\n    prefetch: 'https://www.googletagservices.com/tag/js/gpt.js',\n    preconnect: [\n      'https://partner.googleadservices.com',\n      'https://securepubads.g.doubleclick.net',\n      'https://tpc.googlesyndication.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'opinary': {},\n\n  'outbrain': {\n    renderStartImplemented: true,\n    prefetch: 'https://widgets.outbrain.com/widgetAMP/outbrainAMP.min.js',\n    preconnect: ['https://odb.outbrain.com'],\n    consentHandlingOverride: true,\n  },\n\n  'pixels': {\n    prefetch: 'https://cdn.adsfactor.net/amp/pixels-amp.min.js',\n    clientIdCookieName: '__AF',\n    renderStartImplemented: true,\n  },\n\n  'plista': {},\n\n  'polymorphicads': {\n    prefetch: 'https://www.polymorphicads.jp/js/amp.js',\n    preconnect: [\n      'https://img.polymorphicads.jp',\n      'https://ad.polymorphicads.jp',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'popin': {\n    renderStartImplemented: true,\n  },\n\n  'postquare': {},\n\n  'pressboard': {\n    renderStartImplemented: true,\n  },\n\n  'promoteiq': {},\n\n  'pubexchange': {},\n\n  'pubguru': {\n    renderStartImplemented: true,\n  },\n\n  'pubmatic': {\n    prefetch: 'https://ads.pubmatic.com/AdServer/js/amp.js',\n  },\n\n  'pubmine': {\n    prefetch: ['https://s.pubmine.com/head.js'],\n    preconnect: 'https://delivery.g.switchadhub.com',\n    renderStartImplemented: true,\n  },\n\n  'puffnetwork': {\n    prefetch: 'https://static.puffnetwork.com/amp_ad.js',\n    renderStartImplemented: true,\n  },\n\n  'pulsepoint': {\n    prefetch: 'https://ads.contextweb.com/TagPublish/getjs.static.js',\n    preconnect: 'https://tag.contextweb.com',\n  },\n\n  'purch': {\n    prefetch: 'https://ramp.purch.com/serve/creative_amp.js',\n    renderStartImplemented: true,\n  },\n\n  'quoraad': {\n    prefetch: 'https://a.quora.com/amp_ad.js',\n    preconnect: 'https://ampad.quora.com',\n    renderStartImplemented: true,\n  },\n\n  'rbinfox': {\n    renderStartImplemented: true,\n  },\n\n  'readmo': {\n    renderStartImplemented: true,\n  },\n\n  'realclick': {\n    renderStartImplemented: true,\n  },\n\n  'recomad': {\n    renderStartImplemented: true,\n  },\n\n  'relap': {\n    renderStartImplemented: true,\n  },\n\n  'revcontent': {\n    prefetch:\n      'https://labs-cdn.revcontent.com/build/amphtml/revcontent.amp.min.js',\n    preconnect: [\n      'https://trends.revcontent.com',\n      'https://cdn.revcontent.com',\n      'https://img.revcontent.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'revjet': {\n    prefetch: 'https://cdn.revjet.com/~cdn/JS/03/amp.js',\n    renderStartImplemented: true,\n  },\n\n  'rfp': {\n    prefetch: 'https://js.rfp.fout.jp/rfp-amp.js',\n    preconnect: 'https://ad.rfp.fout.jp',\n    renderStartImplemented: true,\n  },\n\n  'rnetplus': {},\n\n  'rubicon': {},\n\n  'runative': {\n    prefetch: 'https://cdn.run-syndicate.com/sdk/v1/n.js',\n    renderStartImplemented: true,\n  },\n\n  'sas': {\n    renderStartImplemented: true,\n  },\n\n  'seedingalliance': {},\n\n  'sekindo': {\n    renderStartImplemented: true,\n  },\n\n  'sharethrough': {\n    renderStartImplemented: true,\n  },\n\n  'shemedia': {\n    prefetch: [\n      'https://securepubads.g.doubleclick.net/tag/js/gpt.js',\n      'https://ads.shemedia.com/static/amp.js',\n    ],\n    preconnect: [\n      'https://partner.googleadservices.com',\n      'https://tpc.googlesyndication.com',\n      'https://ads.blogherads.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'sklik': {\n    prefetch: 'https://c.imedia.cz/js/amp.js',\n  },\n\n  'slimcutmedia': {\n    preconnect: [\n      'https://sb.freeskreen.com',\n      'https://static.freeskreen.com',\n      'https://video.freeskreen.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'smartadserver': {\n    prefetch: 'https://ec-ns.sascdn.com/diff/js/amp.v0.js',\n    preconnect: 'https://static.sascdn.com',\n    renderStartImplemented: true,\n  },\n\n  'smartclip': {\n    prefetch: 'https://cdn.smartclip.net/amp/amp.v0.js',\n    preconnect: 'https://des.smartclip.net',\n    renderStartImplemented: true,\n  },\n\n  'smi2': {\n    renderStartImplemented: true,\n  },\n\n  'smilewanted': {\n    prefetch: 'https://prebid.smilewanted.com/amp/amp.js',\n    preconnect: 'https://static.smilewanted.com',\n    renderStartImplemented: true,\n  },\n\n  'sogouad': {\n    prefetch: 'https://theta.sogoucdn.com/wap/js/aw.js',\n    renderStartImplemented: true,\n  },\n\n  'sortable': {\n    prefetch: 'https://www.googletagservices.com/tag/js/gpt.js',\n    preconnect: [\n      'https://tags-cdn.deployads.com',\n      'https://partner.googleadservices.com',\n      'https://securepubads.g.doubleclick.net',\n      'https://tpc.googlesyndication.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'sovrn': {\n    prefetch: 'https://ap.lijit.com/www/sovrn_amp/sovrn_ads.js',\n  },\n\n  'speakol': {\n    renderStartImplemented: true,\n  },\n\n  'spotx': {\n    preconnect: 'https://js.spotx.tv',\n    renderStartImplemented: true,\n  },\n\n  'strossle': {\n    preconnect: [\n      'https://amp.spklw.com',\n      'https://widgets.sprinklecontent.com',\n      'https://images.sprinklecontent.com',\n    ],\n  },\n\n  'sunmedia': {\n    prefetch: 'https://vod.addevweb.com/sunmedia/amp/ads/sunmedia.js',\n    preconnect: 'https://static.addevweb.com',\n    renderStartImplemented: true,\n  },\n\n  'svknative': {\n    renderStartImplemented: true,\n    prefetch: 'https://widget.svk-native.ru/js/embed.js',\n  },\n\n  'swoop': {\n    prefetch: 'https://www.swoop-amp.com/amp.js',\n    preconnect: ['https://www.swpsvc.com', 'https://client.swpcld.com'],\n    renderStartImplemented: true,\n  },\n\n  'taboola': {},\n\n  'tcsemotion': {\n    prefetch: 'https://ads.tcsemotion.com/www/delivery/amphb.js',\n    renderStartImplemented: true,\n  },\n\n  'teads': {\n    prefetch: 'https://a.teads.tv/media/format/v3/teads-format.min.js',\n    preconnect: [\n      'https://cdn2.teads.tv',\n      'https://t.teads.tv',\n      'https://r.teads.tv',\n    ],\n    consentHandlingOverride: true,\n  },\n\n  'torimochi': {\n    renderStartImplemented: true,\n  },\n\n  'tracdelight': {\n    prefetch: 'https://scripts.tracdelight.io/amp.js',\n    renderStartImplemented: true,\n  },\n\n  'triplelift': {},\n\n  'trugaze': {\n    clientIdScope: '__tg_amp',\n    renderStartImplemented: true,\n  },\n\n  'uas': {\n    prefetch: 'https://ads.pubmatic.com/AdServer/js/phoenix.js',\n  },\n\n  'ucfunnel': {\n    renderStartImplemented: true,\n  },\n\n  'uzou': {\n    preconnect: ['https://speee-ad.akamaized.net'],\n    renderStartImplemented: true,\n  },\n\n  'unruly': {\n    prefetch: 'https://video.unrulymedia.com/native/native-loader.js',\n    renderStartImplemented: true,\n  },\n\n  'valuecommerce': {\n    prefetch: 'https://amp.valuecommerce.com/amp_bridge.js',\n    preconnect: ['https://ad.jp.ap.valuecommerce.com'],\n    renderStartImplemented: true,\n  },\n\n  'videointelligence': {\n    preconnect: 'https://s.vi-serve.com',\n    renderStartImplemented: true,\n  },\n\n  'videonow': {\n    renderStartImplemented: true,\n  },\n\n  'viralize': {\n    renderStartImplemented: true,\n  },\n\n  'vmfive': {\n    prefetch: 'https://man.vm5apis.com/dist/adn-web-sdk.js',\n    preconnect: ['https://vawpro.vm5apis.com', 'https://vahfront.vm5apis.com'],\n    renderStartImplemented: true,\n  },\n\n  'webediads': {\n    prefetch: 'https://eu1.wbdds.com/amp.min.js',\n    preconnect: ['https://goutee.top', 'https://mediaathay.org.uk'],\n    renderStartImplemented: true,\n  },\n\n  'weborama-display': {\n    prefetch: [\n      'https://cstatic.weborama.fr/js/advertiserv2/adperf_launch_1.0.0_scrambled.js',\n      'https://cstatic.weborama.fr/js/advertiserv2/adperf_core_1.0.0_scrambled.js',\n    ],\n  },\n\n  'widespace': {},\n\n  'wisteria': {\n    renderStartImplemented: true,\n  },\n\n  'wpmedia': {\n    prefetch: 'https://std.wpcdn.pl/wpjslib/wpjslib-amp.js',\n    preconnect: ['https://www.wp.pl', 'https://v.wpimg.pl'],\n    renderStartImplemented: true,\n  },\n\n  'xlift': {\n    prefetch: 'https://cdn.x-lift.jp/resources/common/xlift_amp.js',\n    renderStartImplemented: true,\n  },\n\n  'yahoo': {\n    prefetch: 'https://s.yimg.com/os/ampad/display.js',\n    preconnect: 'https://us.adserver.yahoo.com',\n  },\n\n  'yahoojp': {\n    prefetch: [\n      'https://s.yimg.jp/images/listing/tool/yads/ydn/amp/amp.js',\n      'https://yads.c.yimg.jp/js/yads.js',\n    ],\n    preconnect: 'https://yads.yahoo.co.jp',\n  },\n\n  'yahoonativeads': {\n    renderStartImplemented: true,\n  },\n\n  'yandex': {\n    prefetch: 'https://yastatic.net/partner-code/loaders/context_amp.js',\n    renderStartImplemented: true,\n  },\n\n  'yengo': {\n    renderStartImplemented: true,\n  },\n\n  'yieldbot': {\n    prefetch: [\n      'https://cdn.yldbt.com/js/yieldbot.intent.amp.js',\n      'https://msg.yldbt.com/js/ybmsg.html',\n    ],\n    preconnect: 'https://i.yldbt.com',\n  },\n\n  'yieldmo': {\n    prefetch: 'https://static.yieldmo.com/ym.1.js',\n    preconnect: ['https://s.yieldmo.com', 'https://ads.yieldmo.com'],\n    renderStartImplemented: true,\n  },\n\n  'yieldone': {\n    prefetch: 'https://img.ak.impact-ad.jp/ic/pone/commonjs/yone-amp.js',\n  },\n\n  'yieldpro': {\n    preconnect: 'https://creatives.yieldpro.eu',\n    renderStartImplemented: true,\n  },\n\n  'zedo': {\n    prefetch: 'https://ss3.zedo.com/gecko/tag/Gecko.amp.min.js',\n    renderStartImplemented: true,\n  },\n\n  'zen': {\n    prefetch: 'https://zen.yandex.ru/widget-loader',\n    preconnect: ['https://yastatic.net/'],\n    renderStartImplemented: true,\n  },\n\n  'zergnet': {},\n\n  'zucks': {\n    preconnect: [\n      'https://j.zucks.net.zimg.jp',\n      'https://sh.zucks.net',\n      'https://k.zucks.net',\n      'https://static.zucks.net.zimg.jp',\n    ],\n  },\n\n  'baidu': {\n    prefetch: 'https://dup.baidustatic.com/js/dm.js',\n    renderStartImplemented: true,\n  },\n});\n\nexport {adConfig};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview CoRe responsive functions that are shared with Google tag code.\n * This file must not depend on any AMP-specific libraries, e.g. log. If\n * there is a need to pass any things for logging/reporting - the values\n * must be returned from exported functions.\n */\n\n/**\n * Layout types for Content Recommendation responsive.\n * @enum {string}\n */\nexport const LayoutType = {\n  IMAGE_STACKED: 'image_stacked',\n  IMAGE_SIDEBYSIDE: 'image_sidebyside',\n  MOBILE_BANNER_IMAGE_SIDEBYSIDE: 'mobile_banner_image_sidebyside',\n  PUB_CONTROL_IMAGE_STACKED: 'pub_control_image_stacked',\n  PUB_CONTROL_IMAGE_SIDEBYSIDE: 'pub_control_image_sidebyside',\n  PUB_CONTROL_IMAGE_CARD_STACKED: 'pub_control_image_card_stacked',\n  PUB_CONTROL_IMAGE_CARD_SIDEBYSIDE: 'pub_control_image_card_sidebyside',\n  PUB_CONTROL_TEXT: 'pub_control_text',\n  PUB_CONTROL_TEXT_CARD: 'pub_control_text_card',\n  PEDESTAL: 'pedestal',\n};\n\n/**\n * The external name of Core Pub Control UI pub vars, which are used by\n * publishers directly.\n * @enum {string}\n */\nexport const ExternalCorePubVars = {\n  UI_TYPE: 'data-matched-content-ui-type',\n  COLUMNS_NUM: 'data-matched-content-columns-num',\n  ROWS_NUM: 'data-matched-content-rows-num',\n};\n\n/**\n * Minimum width of desktop responsive slot in CoRe responsive. We have\n * different logic for desktop and mobile slots. Any slot width equal or larger\n * than this will be adapted to the desktop logic while any slot width smaller\n * than this will be adapted to the mobile logic.\n * @const {number}\n */\nexport const MIN_PUB_CONTROL_WIDTH_OF_DESKTOP = 468;\n\n/**\n * The px padding.\n * @const {number}\n */\nconst PADDING = 8;\n\n/**\n * The maximum dimension for CoRe Pub Control UI layout.\n * @const {number}\n */\nconst MAX_PUB_CONTROL_DIMENSION = 1500;\n\n/**\n * The layout - aspect ratio map to calculate the size of each content\n * recommendation.\n * image_stacked: https://screenshot.googleplex.com/74S09gFO82b\n * image_sidebyside: https://screenshot.googleplex.com/FUgDSDvwcVo\n * image_card_stacked: https://screenshot.googleplex.com/vedjTonVaDT\n * image_card_sidebyside: https://screenshot.googleplex.com/v3qOZY61tFm\n * text: https://screenshot.googleplex.com/taeRQn7DUhq\n * text_card: https://screenshot.googleplex.com/ur45m96Tv0D\n * @const {!Object<!LayoutType, number>}\n */\nconst LAYOUT_ASPECT_RATIO_MAP = {\n  [LayoutType.IMAGE_STACKED]: 1 / 1.91,\n  [LayoutType.IMAGE_SIDEBYSIDE]: 1 / 3.82,\n  [LayoutType.MOBILE_BANNER_IMAGE_SIDEBYSIDE]: 1 / 3.82,\n  [LayoutType.PUB_CONTROL_IMAGE_STACKED]: 1 / 1.91,\n  [LayoutType.PUB_CONTROL_IMAGE_SIDEBYSIDE]: 1 / 3.82,\n  [LayoutType.PUB_CONTROL_IMAGE_CARD_STACKED]: 1 / 1.91,\n  [LayoutType.PUB_CONTROL_IMAGE_CARD_SIDEBYSIDE]: 1 / 3.74,\n  [LayoutType.PUB_CONTROL_TEXT]: 0,\n  [LayoutType.PUB_CONTROL_TEXT_CARD]: 0,\n};\n\n/**\n * The layout - height map to evaluate the height of title + url. Notice, this\n * mainly works only for stacked mode. In sidebyside mode, this height is\n * decided by the height of image. It equals to:\n * FontSize * LineHeight * NumTitle + Padding * 2 + UrlBoxHeight.\n * image_stacked: https://screenshot.googleplex.com/74S09gFO82b\n * image_card_stacked: https://screenshot.googleplex.com/vedjTonVaDT\n * @const {!Object<!LayoutType, number>}\n */\nconst LAYOUT_TEXT_HEIGHT_MAP = {\n  [LayoutType.IMAGE_STACKED]: 80,\n  [LayoutType.IMAGE_SIDEBYSIDE]: 0,\n  [LayoutType.MOBILE_BANNER_IMAGE_SIDEBYSIDE]: 0,\n  [LayoutType.PUB_CONTROL_IMAGE_STACKED]: 80,\n  [LayoutType.PUB_CONTROL_IMAGE_SIDEBYSIDE]: 0,\n  [LayoutType.PUB_CONTROL_IMAGE_CARD_STACKED]: 85,\n  [LayoutType.PUB_CONTROL_IMAGE_CARD_SIDEBYSIDE]: 0,\n  [LayoutType.PUB_CONTROL_TEXT]: 80,\n  [LayoutType.PUB_CONTROL_TEXT_CARD]: 80,\n};\n\n/**\n * The layout - minimal width map for pub control UIs. We will adjust column\n * numbers according to minimal width.\n * @const {!Object<!LayoutType, number>}\n */\nconst LAYOUT_AD_WIDTH_MAP = {\n  [LayoutType.PUB_CONTROL_IMAGE_STACKED]: 100,\n  [LayoutType.PUB_CONTROL_IMAGE_SIDEBYSIDE]: 200,\n  [LayoutType.PUB_CONTROL_IMAGE_CARD_STACKED]: 150,\n  [LayoutType.PUB_CONTROL_IMAGE_CARD_SIDEBYSIDE]: 250,\n  [LayoutType.PUB_CONTROL_TEXT]: 100,\n  [LayoutType.PUB_CONTROL_TEXT_CARD]: 150,\n};\n\nconst PUB_CONTROL_LAYOUT_PREFIX = 'pub_control_';\n\nconst PUB_CONTROL_EXAMPLE =\n  '\\n ' +\n  'data-matched-content-rows-num=\"4,2\"\\n' +\n  'data-matched-content-columns-num=\"1,6\"\\n' +\n  'data-matched-content-ui-type=\"image_stacked,image_card_sidebyside\"';\n\n/**\n * Configuration of content recommendation unit for current slot. This is the\n * result of running CoRe responsive logic and values from this config\n * will be used in ad request.\n * @record\n */\nexport class CoReConfig {\n  // eslint-disable-line no-unused-vars\n  /** see comment on class */\n  constructor() {\n    /** @const {number} */\n    this.slotWidth;\n\n    /** @const {number} */\n    this.slotHeight;\n\n    /**\n     * Number of rows to return in matched content unit. Corresponds to\n     * \"cr_col\" url param.\n     * @const {number}\n     */\n    this.numberOfRows;\n\n    /**\n     * Number of columns to return in matched content unit. Corresponds to\n     * \"cr_row\" url param.\n     * @const {number}\n     */\n    this.numberOfColumns;\n\n    /**\n     * Layout type to use for currect matched content slot. Corresponds to\n     * \"crui\" url param.\n     * @const {!LayoutType}\n     */\n    this.layoutType;\n\n    /**\n     * If not null then it contains an error that some of the provided\n     * parameters are incorrect. The error is intended to be displayed to\n     * developers who setup ad tag. For example it can displayed in console\n     * or thrown as js error. If validation is set other params should be\n     * ignored.\n     * @const {string|undefined}\n     */\n    this.validationError;\n  }\n}\n\n/**\n * @param {number} availableWidth\n * @param {boolean} isMobile\n * @return {!CoReConfig}\n */\nexport function getAutoConfig(availableWidth, isMobile) {\n  if (availableWidth < MIN_PUB_CONTROL_WIDTH_OF_DESKTOP) {\n    if (isMobile) {\n      const layoutType = LayoutType.MOBILE_BANNER_IMAGE_SIDEBYSIDE;\n      const numColumns = 1;\n      const numRows = 12;\n      const slotSize = getLargerAdOneColumnSidebysideSize(\n        availableWidth,\n        layoutType,\n        numColumns,\n        numRows\n      );\n      return {\n        slotWidth: slotSize.width,\n        slotHeight: slotSize.height,\n        numberOfColumns: numColumns,\n        numberOfRows: numRows,\n        layoutType,\n      };\n    } else {\n      const slotSize = getAutoSlotSize(availableWidth);\n      return {\n        slotWidth: slotSize.width,\n        slotHeight: slotSize.height,\n        numberOfColumns: 1,\n        numberOfRows: 13,\n        layoutType: LayoutType.IMAGE_SIDEBYSIDE,\n      };\n    }\n  } else {\n    const slotSize = getAutoSlotSize(availableWidth);\n    return {\n      slotWidth: slotSize.width,\n      slotHeight: slotSize.height,\n      numberOfColumns: 4,\n      numberOfRows: 2,\n      layoutType: LayoutType.IMAGE_STACKED,\n    };\n  }\n}\n\n/**\n * Parameters for matched content unit provided pub publisher. These\n * parameters are read from ad tag. These are unparsed parameters so they\n * might be invalid.\n *\n * @typedef {{\n *   numberOfRows: (string|undefined),\n *   numberOfColumns: (string|undefined),\n *   layoutType: (string|undefined),\n * }}\n */\nexport let RawPublisherControlParams; // eslint-disable-line no-unused-vars\n\n/**\n * Get CoRe Pub Control UI Sizes.\n * @param {number} availableWidth\n * @param {!RawPublisherControlParams} rawPubControlParams\n * @return {!CoReConfig}\n */\nexport function getPubControlConfig(availableWidth, rawPubControlParams) {\n  const pubParams = validateAndParsePubControlParams(rawPubControlParams);\n  if (pubParams.validationError) {\n    return {\n      slotWidth: 0,\n      slotHeight: 0,\n      numberOfColumns: 0,\n      numberOfRows: 0,\n      // set any layout, doesn't matter because it's error and it won't be used\n      // anyway\n      layoutType: LayoutType.IMAGE_STACKED,\n      validationError: pubParams.validationError,\n    };\n  }\n\n  let index;\n  if (\n    pubParams.layoutTypes.length === 2 &&\n    availableWidth >= MIN_PUB_CONTROL_WIDTH_OF_DESKTOP\n  ) {\n    // Publisher provided settings for both mobile and desktop and screen is\n    // wide - use desktop.\n    index = 1;\n  } else {\n    // Either publisher provided only one setting or screen is small so use\n    // first setting.\n    index = 0;\n  }\n\n  const layout = convertToPubControlLayoutType(pubParams.layoutTypes[index]);\n  const numColumns = getOptimizedNumColumns(\n    availableWidth,\n    pubParams.numberOfColumns[index],\n    layout\n  );\n  const numRows = pubParams.numberOfRows[index];\n\n  const slotSize = getPubControlSlotSize(\n    availableWidth,\n    numColumns,\n    numRows,\n    layout\n  );\n  if (slotSize.sizeError) {\n    return {\n      slotWidth: 0,\n      slotHeight: 0,\n      numberOfColumns: 0,\n      numberOfRows: 0,\n      layoutType: layout,\n      validationError: slotSize.sizeError,\n    };\n  }\n  return {\n    slotWidth: slotSize.width,\n    slotHeight: slotSize.height,\n    numberOfColumns: numColumns,\n    numberOfRows: numRows,\n    layoutType: layout,\n  };\n}\n\n/**\n * Validates and parses parameters that publisher specified on the ad tag via\n * data-matched-content-foo attributes.\n * @param {!RawPublisherControlParams} params\n * @return {{\n *   numberOfRows: (!Array<number>|undefined),\n *   numberOfColumns: (!Array<number>|undefined),\n *   layoutTypes: (!Array<!LayoutType>|undefined),\n *   validationError: (string|undefined),\n * }} parsed params or null if they were invalid.\n */\nfunction validateAndParsePubControlParams(params) {\n  // Verify that either all three parameters passed or none.\n  let numberOfPubControlParams = 0;\n  if (params.layoutType) {\n    numberOfPubControlParams++;\n  }\n  if (params.numberOfColumns) {\n    numberOfPubControlParams++;\n  }\n  if (params.numberOfRows) {\n    numberOfPubControlParams++;\n  }\n  if (numberOfPubControlParams < 3) {\n    return {\n      validationError: `Tags ${ExternalCorePubVars.UI_TYPE}, ${ExternalCorePubVars.COLUMNS_NUM} and ${ExternalCorePubVars.ROWS_NUM} should be set together.`,\n    };\n  }\n\n  const /** !Array<!LayoutType> */ layoutTypes = params.layoutType.split(',');\n  const /** !Array<string> */ numberOfRows = params.numberOfRows.split(',');\n  const /** !Array<string> */ numberOfColumns = params.numberOfColumns.split(\n      ','\n    );\n\n  // Check all params have same length.\n  if (\n    layoutTypes.length !== numberOfRows.length ||\n    layoutTypes.length !== numberOfColumns.length\n  ) {\n    return {\n      validationError: `Lengths of parameters ${ExternalCorePubVars.UI_TYPE}, ${ExternalCorePubVars.COLUMNS_NUM} and ${ExternalCorePubVars.ROWS_NUM} must match. Example: ${PUB_CONTROL_EXAMPLE}`,\n    };\n  }\n\n  if (layoutTypes.length > 2) {\n    return {\n      validationError:\n        `The parameter length of attribute ${ExternalCorePubVars.UI_TYPE}, ${ExternalCorePubVars.COLUMNS_NUM} and ${ExternalCorePubVars.ROWS_NUM} is too long. At most 2 parameters for each ` +\n        'attribute are needed: one for mobile and one for desktop, while ' +\n        `you are providing ${layoutTypes.length} parameters. Example: ${PUB_CONTROL_EXAMPLE}.`,\n    };\n  }\n\n  const /** !Array<number> */ numberOfRowsAsNumbers = [];\n  const /** !Array<number> */ numberOfColumnsAsNumbers = [];\n  for (let i = 0; i < layoutTypes.length; i++) {\n    const row = Number(numberOfRows[i]);\n    if (isNaN(row) || row === 0) {\n      return {\n        validationError: `Wrong value '${numberOfRows[i]}' for ${ExternalCorePubVars.ROWS_NUM}.`,\n      };\n    }\n    numberOfRowsAsNumbers.push(row);\n    const col = Number(numberOfColumns[i]);\n    if (isNaN(col) || col === 0) {\n      return {\n        validationError: `Wrong value '${numberOfColumns[i]}' for ${ExternalCorePubVars.COLUMNS_NUM}.`,\n      };\n    }\n    numberOfColumnsAsNumbers.push(col);\n  }\n  return {\n    numberOfRows: numberOfRowsAsNumbers,\n    numberOfColumns: numberOfColumnsAsNumbers,\n    layoutTypes,\n  };\n}\n\n/**\n * @param {number} availableWidth\n * @return {{width: number, height: number}}\n */\nfunction getAutoSlotSize(availableWidth) {\n  if (availableWidth >= 1200) {\n    return {width: 1200, height: 600};\n  } else if (availableWidth >= 850) {\n    return {width: availableWidth, height: Math.floor(availableWidth * 0.5)};\n  } else if (availableWidth >= 550) {\n    return {width: availableWidth, height: Math.floor(availableWidth * 0.6)};\n  } else if (availableWidth >= 468) {\n    return {width: availableWidth, height: Math.floor(availableWidth * 0.7)};\n  } else {\n    return {width: availableWidth, height: Math.floor(availableWidth * 3.44)};\n  }\n}\n\n/**\n * Calculate the ad height according to the layout and ad width.\n * @param {number} adWidth\n * @param {!LayoutType} layout\n * @return {number}\n */\nfunction getAdHeight(adWidth, layout) {\n  return (\n    adWidth * LAYOUT_ASPECT_RATIO_MAP[layout] + LAYOUT_TEXT_HEIGHT_MAP[layout]\n  );\n}\n\n/**\n * Calculate the core width according to the slot width and number\n * of columns.\n * @param {number} slotWidth\n * @param {number} numColumns\n * @return {number}\n */\nfunction getAdWidth(slotWidth, numColumns) {\n  return (slotWidth - PADDING * numColumns - PADDING) / numColumns;\n}\n\n/**\n * Calculate the core slot height according to the core height and\n * number of rows.\n * @param {number} adHeight\n * @param {number} numRows\n * @return {number}\n */\nfunction getSlotHeight(adHeight, numRows) {\n  return Math.floor(adHeight * numRows + PADDING * numRows + PADDING);\n}\n\n/**\n * Calculate the slot size for Pub Control UI.\n * @param {number} slotWidth\n * @param {number} numColumns\n * @param {number} numRows\n * @param {!LayoutType} layout\n * @return {{\n *   width: number,\n *   height: number,\n *   sizeError: (string|undefined),\n * }}\n */\nfunction getPubControlSlotSize(slotWidth, numColumns, numRows, layout) {\n  const adWidth = getAdWidth(slotWidth, numColumns);\n  const adHeight = getAdHeight(adWidth, layout);\n  const slotHeight = getSlotHeight(adHeight, numRows);\n\n  if (slotWidth > MAX_PUB_CONTROL_DIMENSION) {\n    return {\n      width: 0,\n      height: 0,\n      sizeError: 'Calculated slot width is too large: ' + slotWidth,\n    };\n  }\n  if (slotHeight > MAX_PUB_CONTROL_DIMENSION) {\n    return {\n      width: 0,\n      height: 0,\n      sizeError: 'Calculated slot height is too large: ' + slotHeight,\n    };\n  }\n\n  return {width: slotWidth, height: slotHeight};\n}\n\n/**\n * @param {number} availableWidth\n * @param {!LayoutType} layoutType\n * @param {number} numColumns\n * @param {number} numRows\n * @return {{width: number, height: number}}\n */\nfunction getLargerAdOneColumnSidebysideSize(\n  availableWidth,\n  layoutType,\n  numColumns,\n  numRows\n) {\n  const adWidth = getAdWidth(availableWidth, numColumns);\n  // The title height of first ad slot 70px, should be consistent with what we\n  // define in rendering js.\n  const firstAdHeight = Math.floor(adWidth / 1.91 + 70);\n  const restAdHeight = getAdHeight(adWidth, layoutType);\n  const slotHeight = firstAdHeight + getSlotHeight(restAdHeight, numRows - 1);\n\n  return {width: availableWidth, height: slotHeight};\n}\n\n/**\n * Adds 'pub_control_' prefix to Pub Control UI layout name if the layout name\n * does not have 'pub_control_' prefix. This is to differentiate Pub Control UI\n * from responsive auto UI.\n * @param {!LayoutType} layout\n * @return {!LayoutType} the new layout name with 'pub_control_' prefix.\n */\nfunction convertToPubControlLayoutType(layout) {\n  return layout.indexOf(PUB_CONTROL_LAYOUT_PREFIX) === 0\n    ? layout\n    : /** @type {!LayoutType} */ (PUB_CONTROL_LAYOUT_PREFIX + layout);\n}\n\n/**\n * Gets optimized number of columns. If the publisher specified value of\n * 'data-matched-content-columns-num' is too large, it may result in a very\n * small ad width and broken layout. We will adjust the column number to ensure\n * that ad width is larger than certain threshold and print out some warning\n * message to the console.\n * @param {number} availableWidth\n * @param {number} numColumns\n * @param {!LayoutType} layout\n * @return {number} optimized number of columns\n */\nfunction getOptimizedNumColumns(availableWidth, numColumns, layout) {\n  const minWidth = LAYOUT_AD_WIDTH_MAP[layout];\n  let optimizedNumColumns = numColumns;\n  while (\n    availableWidth / optimizedNumColumns < minWidth &&\n    optimizedNumColumns > 1\n  ) {\n    optimizedNumColumns--;\n  }\n  return optimizedNumColumns;\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {{name: string, value: (string|number|null)}} */\nexport let QueryParameterDef;\n\n/**\n * Builds a URL from query parameters, truncating to a maximum length if\n * necessary.\n * @param {string} baseUrl scheme, domain, and path for the URL.\n * @param {!Object<string,string|number|null>} queryParams query parameters for\n *     the URL.\n * @param {number} maxLength length to truncate the URL to if necessary.\n * @param {?QueryParameterDef=} opt_truncationQueryParam query parameter to\n *     append to the URL iff any query parameters were truncated.\n * @return {string} the fully constructed URL.\n */\nexport function buildUrl(\n  baseUrl,\n  queryParams,\n  maxLength,\n  opt_truncationQueryParam\n) {\n  const encodedParams = [];\n  const encodedTruncationParam =\n    opt_truncationQueryParam &&\n    !(\n      opt_truncationQueryParam.value == null ||\n      opt_truncationQueryParam.value === ''\n    )\n      ? encodeURIComponent(opt_truncationQueryParam.name) +\n        '=' +\n        encodeURIComponent(String(opt_truncationQueryParam.value))\n      : null;\n  let capacity = maxLength - baseUrl.length;\n  if (encodedTruncationParam) {\n    capacity -= encodedTruncationParam.length + 1;\n  }\n  const keys = Object.keys(queryParams);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = queryParams[key];\n    if (value == null || value === '') {\n      continue;\n    }\n    const encodedNameAndSep = encodeURIComponent(key) + '=';\n    const encodedValue = encodeURIComponent(String(value));\n    const fullLength = encodedNameAndSep.length + encodedValue.length + 1;\n    if (fullLength > capacity) {\n      const truncatedValue = encodedValue\n        .substr(0, capacity - encodedNameAndSep.length - 1)\n        // Don't end with a partially truncated escape sequence\n        .replace(/%\\w?$/, '');\n      if (truncatedValue) {\n        encodedParams.push(encodedNameAndSep + truncatedValue);\n      }\n      if (encodedTruncationParam) {\n        encodedParams.push(encodedTruncationParam);\n      }\n      break;\n    }\n    encodedParams.push(encodedNameAndSep + encodedValue);\n    capacity -= fullLength;\n  }\n  if (!encodedParams.length) {\n    return baseUrl;\n  }\n  return baseUrl + '?' + encodedParams.join('&');\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CONSENT_POLICY_STATE} from '../../../src/consent-state';\nimport {DomFingerprint} from '../../../src/utils/dom-fingerprint';\nimport {Services} from '../../../src/services';\nimport {buildUrl} from './shared/url-builder';\nimport {dev, devAssert} from '../../../src/log';\nimport {dict} from '../../../src/utils/object';\nimport {\n  getBinaryType,\n  isExperimentOn,\n  toggleExperiment,\n} from '../../../src/experiments';\nimport {getConsentPolicyState} from '../../../src/consent';\nimport {getMeasuredResources} from '../../../src/ini-load';\nimport {getMode} from '../../../src/mode';\nimport {getOrCreateAdCid} from '../../../src/ad-cid';\nimport {getTimingDataSync} from '../../../src/service/variable-source';\nimport {internalRuntimeVersion} from '../../../src/internal-version';\nimport {parseJson} from '../../../src/json';\nimport {whenUpgradedToCustomElement} from '../../../src/dom';\n\n/** @type {string}  */\nconst AMP_ANALYTICS_HEADER = 'X-AmpAnalytics';\n\n/** @const {number} */\nconst MAX_URL_LENGTH = 15360;\n\n/** @enum {string} */\nconst AmpAdImplementation = {\n  AMP_AD_XHR_TO_IFRAME: '2',\n  AMP_AD_XHR_TO_IFRAME_OR_AMP: '3',\n  AMP_AD_IFRAME_GET: '5',\n};\n\n/** @const {!Object} */\nexport const ValidAdContainerTypes = {\n  'AMP-CAROUSEL': 'ac',\n  'AMP-FX-FLYING-CARPET': 'fc',\n  'AMP-LIGHTBOX': 'lb',\n  'AMP-STICKY-AD': 'sa',\n};\n\n/**\n * See `VisibilityState` enum.\n * @const {!Object<string, string>}\n */\nconst visibilityStateCodes = {\n  'visible': '1',\n  'hidden': '2',\n  'prerender': '3',\n  'unloaded': '5',\n};\n\n/** @const {string} */\nexport const QQID_HEADER = 'X-QQID';\n\n/** @type {string} */\nexport const SANDBOX_HEADER = 'amp-ff-sandbox';\n\n/**\n * Element attribute that stores experiment IDs.\n *\n * Note: This attribute should be used only for tracking experimental\n * implementations of AMP tags, e.g., by AMPHTML implementors.  It should not be\n * added by a publisher page.\n *\n * @const {string}\n * @visibleForTesting\n */\nexport const EXPERIMENT_ATTRIBUTE = 'data-experiment-id';\n\n/** @typedef {{urls: !Array<string>}}\n */\nexport let AmpAnalyticsConfigDef;\n\n/**\n * @typedef {{instantLoad: boolean, writeInBody: boolean}}\n */\nexport let NameframeExperimentConfig;\n\n/**\n * @const {!./shared/url-builder.QueryParameterDef}\n * @visibleForTesting\n */\nexport const TRUNCATION_PARAM = {name: 'trunc', value: '1'};\n\n/** @const {Object} */\nconst CDN_PROXY_REGEXP = /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org((\\/.*)|($))+/;\n\n/**\n * Returns the value of some navigation timing parameter.\n * Feature detection is used for safety on browsers that do not support the\n * performance API.\n * @param {!Window} win\n * @param {string} timingEvent The name of the timing event, e.g.\n *     'navigationStart' or 'domContentLoadEventStart'.\n * @return {number}\n */\nfunction getNavigationTiming(win, timingEvent) {\n  return (\n    (win['performance'] &&\n      win['performance']['timing'] &&\n      win['performance']['timing'][timingEvent]) ||\n    0\n  );\n}\n\n/**\n * Check whether Google Ads supports the A4A rendering pathway is valid for the\n * environment by ensuring native crypto support and page originated in the\n * {@code cdn.ampproject.org} CDN <em>or</em> we must be running in local\n * dev mode.\n *\n * @param {!Window} win  Host window for the ad.\n * @return {boolean}  Whether Google Ads should attempt to render via the A4A\n *   pathway.\n */\nexport function isGoogleAdsA4AValidEnvironment(win) {\n  return (\n    supportsNativeCrypto(win) &&\n    (!!isCdnProxy(win) || getMode(win).localDev || getMode(win).test)\n  );\n}\n\n/**\n * Checks whether native crypto is supported for win.\n * @param {!Window} win  Host window for the ad.\n * @return {boolean} Whether native crypto is supported.\n */\nexport function supportsNativeCrypto(win) {\n  return win.crypto && (win.crypto.subtle || win.crypto.webkitSubtle);\n}\n\n/**\n * @param {!AMP.BaseElement} ampElement The element on whose lifecycle this\n *    reporter will be reporting.\n * @return {boolean} whether reporting is enabled for this element\n */\nexport function isReportingEnabled(ampElement) {\n  // Carve-outs: We only want to enable profiling pingbacks when:\n  //   - The ad is from one of the Google networks (AdSense or Doubleclick).\n  //   - The ad slot is in the A4A-vs-3p amp-ad control branch (either via\n  //     internal, client-side selection or via external, Google Search\n  //     selection).\n  //   - We haven't turned off profiling via the rate controls in\n  //     build-system/global-config/{canary,prod}-config.json\n  // If any of those fail, we use the `BaseLifecycleReporter`, which is a\n  // a no-op (sends no pings).\n  const type = ampElement.element.getAttribute('type');\n  const {win} = ampElement;\n  // In local dev mode, neither the canary nor prod config files is available,\n  // so manually set the profiling rate, for testing/dev.\n  if (getMode(ampElement.win).localDev && !getMode(ampElement.win).test) {\n    toggleExperiment(win, 'a4aProfilingRate', true, true);\n  }\n  return (\n    (type == 'doubleclick' || type == 'adsense') &&\n    isExperimentOn(win, 'a4aProfilingRate')\n  );\n}\n\n/**\n * Has side-effect of incrementing ifi counter on window.\n * @param {!../../../extensions/amp-a4a/0.1/amp-a4a.AmpA4A} a4a\n * @param {!Array<string>=} opt_experimentIds Any experiments IDs (in addition\n *     to those specified on the ad element) that should be included in the\n *     request.\n * @return {!Object<string,null|number|string>} block level parameters\n */\nexport function googleBlockParameters(a4a, opt_experimentIds) {\n  const {element: adElement, win} = a4a;\n  const slotRect = a4a.getPageLayoutBox();\n  const iframeDepth = iframeNestingDepth(win);\n  const enclosingContainers = getEnclosingContainerTypes(adElement);\n  let eids = adElement.getAttribute('data-experiment-id');\n  if (opt_experimentIds) {\n    eids = mergeExperimentIds(opt_experimentIds, eids);\n  }\n  return {\n    'adf': DomFingerprint.generate(adElement),\n    'nhd': iframeDepth,\n    'eid': eids,\n    'adx': slotRect.left,\n    'ady': slotRect.top,\n    'oid': '2',\n    'act': enclosingContainers.length ? enclosingContainers.join() : null,\n  };\n}\n\n/**\n * @param {!Window} win\n * @param {string} type matching typing attribute.\n * @param {function(!Element):string} groupFn\n * @return {!Promise<!Object<string,!Array<!Promise<!../../../src/base-element.BaseElement>>>>}\n */\nexport function groupAmpAdsByType(win, type, groupFn) {\n  // Look for amp-ad elements of correct type or those contained within\n  // standard container type.  Note that display none containers will not be\n  // included as they will never be measured.\n  // TODO(keithwrightbos): what about slots that become measured due to removal\n  // of display none (e.g. user resizes viewport and media selector makes\n  // visible).\n  const ampAdSelector = r =>\n    r.element./*OK*/ querySelector(`amp-ad[type=${type}]`);\n  const {documentElement} = win.document;\n  const ampdoc = Services.ampdoc(documentElement);\n  return (\n    getMeasuredResources(ampdoc, win, r => {\n      const isAmpAdType =\n        r.element.tagName == 'AMP-AD' && r.element.getAttribute('type') == type;\n      if (isAmpAdType) {\n        return true;\n      }\n      const isAmpAdContainerElement =\n        Object.keys(ValidAdContainerTypes).includes(r.element.tagName) &&\n        !!ampAdSelector(r);\n      return isAmpAdContainerElement;\n    })\n      // Need to wait on any contained element resolution followed by build\n      // of child ad.\n      .then(resources =>\n        Promise.all(\n          resources.map(resource => {\n            if (resource.element.tagName == 'AMP-AD') {\n              return resource.element;\n            }\n            // Must be container element so need to wait for child amp-ad to\n            // be upgraded.\n            return whenUpgradedToCustomElement(\n              dev().assertElement(ampAdSelector(resource))\n            );\n          })\n        )\n      )\n      // Group by networkId.\n      .then(elements =>\n        elements.reduce((result, element) => {\n          const groupId = groupFn(element);\n          (result[groupId] || (result[groupId] = [])).push(element.getImpl());\n          return result;\n        }, {})\n      )\n  );\n}\n\n/**\n * @param {! ../../../extensions/amp-a4a/0.1/amp-a4a.AmpA4A} a4a\n * @param {number} startTime\n * @return {!Promise<!Object<string,null|number|string>>}\n */\nexport function googlePageParameters(a4a, startTime) {\n  const {win} = a4a;\n  const ampDoc = a4a.getAmpDoc();\n  // Do not wait longer than 1 second to retrieve referrer to ensure\n  // viewer integration issues do not cause ad requests to hang indefinitely.\n  const referrerPromise = Services.timerFor(win)\n    .timeoutPromise(1000, Services.viewerForDoc(ampDoc).getReferrerUrl())\n    .catch(() => {\n      dev().expectedError('AMP-A4A', 'Referrer timeout!');\n      return '';\n    });\n  const domLoading = getNavigationTiming(win, 'domLoading');\n  return Promise.all([\n    getOrCreateAdCid(ampDoc, 'AMP_ECID_GOOGLE', '_ga'),\n    referrerPromise,\n  ]).then(promiseResults => {\n    const clientId = promiseResults[0];\n    const referrer = promiseResults[1];\n    const {pageViewId, canonicalUrl} = Services.documentInfoForDoc(ampDoc);\n    // Read by GPT for GA/GPT integration.\n    win.gaGlobal = win.gaGlobal || {cid: clientId, hid: pageViewId};\n    const {screen} = win;\n    const viewport = Services.viewportForDoc(ampDoc);\n    const viewportRect = viewport.getRect();\n    const viewportSize = viewport.getSize();\n    const visibilityState = ampDoc.getVisibilityState();\n    return {\n      'is_amp': a4a.isXhrAllowed()\n        ? AmpAdImplementation.AMP_AD_XHR_TO_IFRAME_OR_AMP\n        : AmpAdImplementation.AMP_AD_IFRAME_GET,\n      'amp_v': internalRuntimeVersion(),\n      'd_imp': '1',\n      'c': getCorrelator(win, ampDoc, clientId),\n      'ga_cid': win.gaGlobal.cid || null,\n      'ga_hid': win.gaGlobal.hid || null,\n      'dt': startTime,\n      'biw': viewportRect.width,\n      'bih': viewportRect.height,\n      'u_aw': screen ? screen.availWidth : null,\n      'u_ah': screen ? screen.availHeight : null,\n      'u_cd': screen ? screen.colorDepth : null,\n      'u_w': screen ? screen.width : null,\n      'u_h': screen ? screen.height : null,\n      'u_tz': -new Date().getTimezoneOffset(),\n      'u_his': getHistoryLength(win),\n      'isw': win != win.top ? viewportSize.width : null,\n      'ish': win != win.top ? viewportSize.height : null,\n      'art': getAmpRuntimeTypeParameter(win),\n      'vis': visibilityStateCodes[visibilityState] || '0',\n      'scr_x': viewport.getScrollLeft(),\n      'scr_y': viewport.getScrollTop(),\n      'bc': getBrowserCapabilitiesBitmap(win) || null,\n      'debug_experiment_id':\n        (/(?:#|,)deid=([\\d,]+)/i.exec(win.location.hash) || [])[1] || null,\n      'url': canonicalUrl || null,\n      'top': win != win.top ? topWindowUrlOrDomain(win) : null,\n      'loc': win.location.href == canonicalUrl ? null : win.location.href,\n      'ref': referrer || null,\n      'bdt': domLoading ? startTime - domLoading : null,\n    };\n  });\n}\n\n/**\n * @param {!../../../extensions/amp-a4a/0.1/amp-a4a.AmpA4A} a4a\n * @param {string} baseUrl\n * @param {number} startTime\n * @param {!Object<string,null|number|string>} parameters\n * @param {!Array<string>=} opt_experimentIds Any experiments IDs (in addition\n *     to those specified on the ad element) that should be included in the\n *     request.\n * @return {!Promise<string>}\n */\nexport function googleAdUrl(\n  a4a,\n  baseUrl,\n  startTime,\n  parameters,\n  opt_experimentIds\n) {\n  // TODO: Maybe add checks in case these promises fail.\n  const blockLevelParameters = googleBlockParameters(a4a, opt_experimentIds);\n  return googlePageParameters(a4a, startTime).then(pageLevelParameters => {\n    Object.assign(parameters, blockLevelParameters, pageLevelParameters);\n    return truncAndTimeUrl(baseUrl, parameters, startTime);\n  });\n}\n\n/**\n * @param {string} baseUrl\n * @param {!Object<string,null|number|string>} parameters\n * @param {number} startTime\n * @return {string}\n */\nexport function truncAndTimeUrl(baseUrl, parameters, startTime) {\n  return (\n    buildUrl(baseUrl, parameters, MAX_URL_LENGTH - 10, TRUNCATION_PARAM) +\n    '&dtd=' +\n    elapsedTimeWithCeiling(Date.now(), startTime)\n  );\n}\n\n/**\n * @param {!Window} win\n * @return {number}\n */\nfunction iframeNestingDepth(win) {\n  let w = win;\n  let depth = 0;\n  while (w != w.parent && depth < 100) {\n    w = w.parent;\n    depth++;\n  }\n  devAssert(w == win.top);\n  return depth;\n}\n\n/**\n * @param {!Window} win\n * @return {number}\n */\nfunction getHistoryLength(win) {\n  // We have seen cases where accessing history length causes errors.\n  try {\n    return win.history.length;\n  } catch (e) {\n    return 0;\n  }\n}\n\n/**\n * @param {string} url\n * @return {string} hostname portion of url\n * @visibleForTesting\n */\nexport function extractHost(url) {\n  return (/^(?:https?:\\/\\/)?([^\\/\\?:]+)/i.exec(url) || [])[1] || url;\n}\n\n/**\n * @param {!Window} win\n * @return {?string}\n */\nfunction topWindowUrlOrDomain(win) {\n  const {ancestorOrigins} = win.location;\n  if (ancestorOrigins) {\n    const {origin} = win.location;\n    const topOrigin = ancestorOrigins[ancestorOrigins.length - 1];\n    if (origin == topOrigin) {\n      return win.top.location.hostname;\n    }\n    const secondFromTop = secondWindowFromTop(win);\n    if (\n      secondFromTop == win ||\n      origin == ancestorOrigins[ancestorOrigins.length - 2]\n    ) {\n      return extractHost(secondFromTop./*OK*/ document.referrer);\n    }\n    return extractHost(topOrigin);\n  } else {\n    try {\n      return win.top.location.hostname;\n    } catch (e) {}\n    const secondFromTop = secondWindowFromTop(win);\n    try {\n      return extractHost(secondFromTop./*OK*/ document.referrer);\n    } catch (e) {}\n    return null;\n  }\n}\n\n/**\n * @param {!Window} win\n * @return {!Window}\n */\nfunction secondWindowFromTop(win) {\n  let secondFromTop = win;\n  let depth = 0;\n  while (secondFromTop.parent != secondFromTop.parent.parent && depth < 100) {\n    secondFromTop = secondFromTop.parent;\n    depth++;\n  }\n  devAssert(secondFromTop.parent == win.top);\n  return secondFromTop;\n}\n\n/**\n * @param {number} time\n * @param {number} start\n * @return {(number|string)}\n */\nfunction elapsedTimeWithCeiling(time, start) {\n  const duration = time - start;\n  if (duration >= 1e6) {\n    return 'M';\n  } else if (duration >= 0) {\n    return duration;\n  }\n  return '-M';\n}\n\n/**\n * `nodeOrDoc` must be passed for correct behavior in shadow AMP (PWA) case.\n * @param {!Window} win\n * @param {!Element|!../../../src/service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string=} opt_cid\n * @return {number} The correlator.\n */\nexport function getCorrelator(win, elementOrAmpDoc, opt_cid) {\n  if (!win.ampAdPageCorrelator) {\n    win.ampAdPageCorrelator = isExperimentOn(win, 'exp-new-correlator')\n      ? Math.floor(4503599627370496 * Math.random())\n      : makeCorrelator(\n          Services.documentInfoForDoc(elementOrAmpDoc).pageViewId,\n          opt_cid\n        );\n  }\n  return win.ampAdPageCorrelator;\n}\n\n/**\n * @param {string} pageViewId\n * @param {string=} opt_clientId\n * @return {number}\n */\nfunction makeCorrelator(pageViewId, opt_clientId) {\n  const pageViewIdNumeric = Number(pageViewId || 0);\n  if (opt_clientId) {\n    return pageViewIdNumeric + (opt_clientId.replace(/\\D/g, '') % 1e6) * 1e6;\n  } else {\n    // In this case, pageViewIdNumeric is only 4 digits => too low entropy\n    // to be useful as a page correlator.  So synthesize one from scratch.\n    // 4503599627370496 == 2^52.  The guaranteed range of JS Number is at least\n    // 2^53 - 1.\n    return Math.floor(4503599627370496 * Math.random());\n  }\n}\n\n/**\n * Collect additional dimensions for the brdim parameter.\n * @param {!Window} win The window for which we read the browser dimensions.\n * @param {{width: number, height: number}|null} viewportSize\n * @return {string}\n * @visibleForTesting\n */\nexport function additionalDimensions(win, viewportSize) {\n  // Some browsers throw errors on some of these.\n  let screenX, screenY, outerWidth, outerHeight, innerWidth, innerHeight;\n  try {\n    screenX = win.screenX;\n    screenY = win.screenY;\n  } catch (e) {}\n  try {\n    outerWidth = win.outerWidth;\n    outerHeight = win.outerHeight;\n  } catch (e) {}\n  try {\n    innerWidth = viewportSize.width;\n    innerHeight = viewportSize.height;\n  } catch (e) {}\n  return [\n    win.screenLeft,\n    win.screenTop,\n    screenX,\n    screenY,\n    win.screen ? win.screen.availWidth : undefined,\n    win.screen ? win.screen.availTop : undefined,\n    outerWidth,\n    outerHeight,\n    innerWidth,\n    innerHeight,\n  ].join();\n}\n\n/**\n * Returns amp-analytics config for a new CSI trigger.\n * @param {string} on The name of the analytics trigger.\n * @param {!Object<string, string>} params Params to be included on the ping.\n * @return {!JsonObject}\n */\nfunction csiTrigger(on, params) {\n  return dict({\n    'on': on,\n    'request': 'csi',\n    'sampleSpec': {\n      // Pings are sampled on a per-pageview basis. A prefix is included in the\n      // sampleOn spec so that the hash is orthogonal to any other sampling in\n      // amp.\n      'sampleOn': 'a4a-csi-${pageViewId}',\n      'threshold': 1, // 1% sample\n    },\n    'selector': 'amp-ad',\n    'selectionMethod': 'closest',\n    'extraUrlParams': params,\n  });\n}\n\n/**\n * Returns amp-analytics config for Google ads network impls.\n * @return {!JsonObject}\n */\nexport function getCsiAmpAnalyticsConfig() {\n  return dict({\n    'requests': {\n      'csi': 'https://csi.gstatic.com/csi?',\n    },\n    'transport': {'xhrpost': false},\n    'triggers': {\n      'adRequestStart': csiTrigger('ad-request-start', {\n        // afs => ad fetch start\n        'met.a4a': 'afs_lvt.${viewerLastVisibleTime}~afs.${time}',\n      }),\n      'adResponseEnd': csiTrigger('ad-response-end', {\n        // afe => ad fetch end\n        'met.a4a': 'afe.${time}',\n      }),\n      'adRenderStart': csiTrigger('ad-render-start', {\n        // ast => ad schedule time\n        // ars => ad render start\n        'met.a4a':\n          'ast.${scheduleTime}~ars_lvt.${viewerLastVisibleTime}~ars.${time}',\n        'qqid': '${qqid}',\n      }),\n      'adIframeLoaded': csiTrigger('ad-iframe-loaded', {\n        // ail => ad iframe loaded\n        'met.a4a': 'ail.${time}',\n      }),\n    },\n    'extraUrlParams': {\n      's': 'ampad',\n      'ctx': '2',\n      'c': '${correlator}',\n      'slotId': '${slotId}',\n      // Time that the beacon was actually sent. Note that there can be delays\n      // between the time at which the event is fired and when ${nowMs} is\n      // evaluated when the URL is built by amp-analytics.\n      'puid': '${requestCount}~${timestamp}',\n    },\n  });\n}\n\n/**\n * Returns variables to be included in the amp-analytics event for A4A.\n * @param {string} analyticsTrigger The name of the analytics trigger.\n * @param {!AMP.BaseElement} a4a The A4A element.\n * @param {?string} qqid The query ID or null if the query ID has not been set\n *     yet.\n * @return {!JsonObject}\n */\nexport function getCsiAmpAnalyticsVariables(analyticsTrigger, a4a, qqid) {\n  const {win} = a4a;\n  const ampdoc = a4a.getAmpDoc();\n  const navStart = getNavigationTiming(win, 'navigationStart');\n  const vars = /** @type {!JsonObject} */ ({\n    'correlator': getCorrelator(win, ampdoc),\n    'slotId': a4a.element.getAttribute('data-amp-slot-index'),\n    'viewerLastVisibleTime': ampdoc.getLastVisibleTime() - navStart,\n  });\n  if (qqid) {\n    vars['qqid'] = qqid;\n  }\n  if (analyticsTrigger == 'ad-render-start') {\n    vars['scheduleTime'] = a4a.element.layoutScheduleTime - navStart;\n  }\n  return vars;\n}\n\n/**\n * Extracts configuration used to build amp-analytics element for active view.\n *\n * @param {!../../../extensions/amp-a4a/0.1/amp-a4a.AmpA4A} a4a\n * @param {!Headers} responseHeaders\n *   XHR service FetchResponseHeaders object containing the response\n *   headers.\n * @return {?JsonObject} config or null if invalid/missing.\n */\nexport function extractAmpAnalyticsConfig(a4a, responseHeaders) {\n  if (!responseHeaders.has(AMP_ANALYTICS_HEADER)) {\n    return null;\n  }\n  try {\n    const analyticsConfig = parseJson(\n      responseHeaders.get(AMP_ANALYTICS_HEADER)\n    );\n    devAssert(Array.isArray(analyticsConfig['url']));\n    const urls = analyticsConfig['url'];\n    if (!urls.length) {\n      return null;\n    }\n\n    const config = /** @type {JsonObject}*/ ({\n      'transport': {'beacon': false, 'xhrpost': false},\n      'triggers': {\n        'continuousVisible': {\n          'on': 'visible',\n          'visibilitySpec': {\n            'selector': 'amp-ad',\n            'selectionMethod': 'closest',\n            'visiblePercentageMin': 50,\n            'continuousTimeMin': 1000,\n          },\n        },\n      },\n    });\n\n    // Discover and build visibility endpoints.\n    const requests = dict();\n    for (let idx = 1; idx <= urls.length; idx++) {\n      // TODO: Ensure url is valid and not freeform JS?\n      requests[`visibility${idx}`] = `${urls[idx - 1]}`;\n    }\n    // Security review needed here.\n    config['requests'] = requests;\n    config['triggers']['continuousVisible']['request'] = Object.keys(requests);\n    return config;\n  } catch (err) {\n    dev().error(\n      'AMP-A4A',\n      'Invalid analytics',\n      err,\n      responseHeaders.get(AMP_ANALYTICS_HEADER)\n    );\n  }\n  return null;\n}\n\n/**\n * Add new experiment IDs to a (possibly empty) existing set of experiment IDs.\n * The {@code currentIdString} may be {@code null} or {@code ''}, but if it is\n * populated, it must contain a comma-separated list of integer experiment IDs\n * (per {@code parseExperimentIds()}).  Returns the new set of IDs, encoded\n * as a comma-separated list.  Does not de-duplicate ID entries.\n *\n * @param {!Array<string>} newIds IDs to merge in. Should contain stringified\n *     integer (base 10) experiment IDs.\n * @param {?string} currentIdString  If present, a string containing a\n *   comma-separated list of integer experiment IDs.\n * @return {string}  New experiment list string, including newId iff it is\n *   a valid (integer) experiment ID.\n * @see parseExperimentIds, validateExperimentIds\n */\nexport function mergeExperimentIds(newIds, currentIdString) {\n  const newIdString = newIds.filter(newId => Number(newId)).join(',');\n  currentIdString = currentIdString || '';\n  return (\n    currentIdString + (currentIdString && newIdString ? ',' : '') + newIdString\n  );\n}\n\n/**\n * Adds two CSI signals to the given amp-analytics configuration object, one\n * for render-start, and one for ini-load.\n *\n * @param {!Window} win\n * @param {!Element} element The ad slot.\n * @param {!JsonObject} config The original config object.\n * @param {?string} qqid\n * @param {boolean} isVerifiedAmpCreative\n * @return {?JsonObject} config or null if invalid/missing.\n */\nexport function addCsiSignalsToAmpAnalyticsConfig(\n  win,\n  element,\n  config,\n  qqid,\n  isVerifiedAmpCreative\n) {\n  // Add CSI pingbacks.\n  const correlator = getCorrelator(win, element);\n  const slotId = Number(element.getAttribute('data-amp-slot-index'));\n  const eids = encodeURIComponent(element.getAttribute(EXPERIMENT_ATTRIBUTE));\n  const adType = element.getAttribute('type');\n  const initTime = Number(\n    getTimingDataSync(win, 'navigationStart') || Date.now()\n  );\n  const deltaTime = Math.round(\n    win.performance && win.performance.now\n      ? win.performance.now()\n      : Date.now() - initTime\n  );\n  const baseCsiUrl =\n    'https://csi.gstatic.com/csi?s=a4a' +\n    `&c=${correlator}&slotId=${slotId}&qqid.${slotId}=${qqid}` +\n    `&dt=${initTime}` +\n    (eids != 'null' ? `&e.${slotId}=${eids}` : '') +\n    `&rls=${internalRuntimeVersion()}&adt.${slotId}=${adType}`;\n  const isAmpSuffix = isVerifiedAmpCreative ? 'Friendly' : 'CrossDomain';\n  config['triggers']['continuousVisibleIniLoad'] = {\n    'on': 'ini-load',\n    'selector': 'amp-ad',\n    'selectionMethod': 'closest',\n    'request': 'iniLoadCsi',\n  };\n  config['triggers']['continuousVisibleRenderStart'] = {\n    'on': 'render-start',\n    'selector': 'amp-ad',\n    'selectionMethod': 'closest',\n    'request': 'renderStartCsi',\n  };\n  config['requests']['iniLoadCsi'] =\n    baseCsiUrl + `&met.a4a.${slotId}=iniLoadCsi${isAmpSuffix}.${deltaTime}`;\n  config['requests']['renderStartCsi'] =\n    baseCsiUrl + `&met.a4a.${slotId}=renderStartCsi${isAmpSuffix}.${deltaTime}`;\n\n  // Add CSI ping for visibility.\n  config['requests']['visibilityCsi'] =\n    baseCsiUrl + `&met.a4a.${slotId}=visibilityCsi.${deltaTime}`;\n  config['triggers']['continuousVisible']['request'].push('visibilityCsi');\n  return config;\n}\n\n/**\n * Returns an array of two-letter codes representing the amp-ad containers\n * enclosing the given ad element.\n *\n * @param {!Element} adElement\n * @return {!Array<string>}\n */\nexport function getEnclosingContainerTypes(adElement) {\n  const containerTypeSet = {};\n  for (\n    let el = adElement.parentElement, counter = 0;\n    el && counter < 20;\n    el = el.parentElement, counter++\n  ) {\n    const tagName = el.tagName.toUpperCase();\n    if (ValidAdContainerTypes[tagName]) {\n      containerTypeSet[ValidAdContainerTypes[tagName]] = true;\n    }\n  }\n  return Object.keys(containerTypeSet);\n}\n\n/**\n * Appends parameter to ad request indicating error state so long as error\n * parameter is not already present or url has been truncated.\n * @param {string} adUrl used for network request\n * @param {string} parameterValue to be appended\n * @return {string|undefined} potentially modified url, undefined\n */\nexport function maybeAppendErrorParameter(adUrl, parameterValue) {\n  devAssert(!!adUrl && !!parameterValue);\n  // Add parameter indicating error so long as the url has not already been\n  // truncated and error parameter is not already present.  Note that we assume\n  // that added, error parameter length will be less than truncation parameter\n  // so adding will not cause length to exceed maximum.\n  if (\n    new RegExp(\n      `[?|&](${encodeURIComponent(TRUNCATION_PARAM.name)}=` +\n        `${encodeURIComponent(String(TRUNCATION_PARAM.value))}|aet=[^&]*)$`\n    ).test(adUrl)\n  ) {\n    return;\n  }\n  const modifiedAdUrl = adUrl + `&aet=${parameterValue}`;\n  devAssert(modifiedAdUrl.length <= MAX_URL_LENGTH);\n  return modifiedAdUrl;\n}\n\n/**\n * Returns a numerical code representing the binary type.\n * @param {string} type\n * @return {?string}\n */\nexport function getBinaryTypeNumericalCode(type) {\n  return (\n    {\n      'production': '0',\n      'control': '1',\n      'canary': '2',\n      'rc': '3',\n      'experimentA': '10',\n      'experimentB': '11',\n      'experimentC': '12',\n      'nomod': '42',\n      'mod': '43',\n    }[type] || null\n  );\n}\n\n/** @const {!RegExp} */\nconst IDENTITY_DOMAIN_REGEXP_ = /\\.google\\.(?:com?\\.)?[a-z]{2,3}$/;\n\n/** @typedef {{\n      token: (string|undefined),\n      jar: (string|undefined),\n      pucrd: (string|undefined),\n      freshLifetimeSecs: (number|undefined),\n      validLifetimeSecs: (number|undefined),\n      fetchTimeMs: (number|undefined)\n   }} */\nexport let IdentityToken;\n\n/**\n * @param {!Window} win\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampDoc\n * @param {?string} consentPolicyId\n * @return {!Promise<!IdentityToken>}\n */\nexport function getIdentityToken(win, ampDoc, consentPolicyId) {\n  // If configured to use amp-consent, delay request until consent state is\n  // resolved.\n  win['goog_identity_prom'] =\n    win['goog_identity_prom'] ||\n    (consentPolicyId\n      ? getConsentPolicyState(ampDoc.getHeadNode(), consentPolicyId)\n      : Promise.resolve(CONSENT_POLICY_STATE.UNKNOWN_NOT_REQUIRED)\n    ).then(consentState =>\n      consentState == CONSENT_POLICY_STATE.INSUFFICIENT ||\n      consentState == CONSENT_POLICY_STATE.UNKNOWN\n        ? /** @type {!IdentityToken} */ ({})\n        : executeIdentityTokenFetch(win, ampDoc)\n    );\n  return /** @type {!Promise<!IdentityToken>} */ (win['goog_identity_prom']);\n}\n\n/**\n * @param {!Window} win\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampDoc\n * @param {number=} redirectsRemaining (default 1)\n * @param {string=} domain\n * @param {number=} startTime\n * @return {!Promise<!IdentityToken>}\n */\nfunction executeIdentityTokenFetch(\n  win,\n  ampDoc,\n  redirectsRemaining = 1,\n  domain = undefined,\n  startTime = Date.now()\n) {\n  const url = getIdentityTokenRequestUrl(win, ampDoc, domain);\n  return Services.xhrFor(win)\n    .fetchJson(url, {\n      mode: 'cors',\n      method: 'GET',\n      ampCors: false,\n      credentials: 'include',\n    })\n    .then(res => res.json())\n    .then(obj => {\n      const token = obj['newToken'];\n      const jar = obj['1p_jar'] || '';\n      const pucrd = obj['pucrd'] || '';\n      const freshLifetimeSecs = parseInt(obj['freshLifetimeSecs'] || '', 10);\n      const validLifetimeSecs = parseInt(obj['validLifetimeSecs'] || '', 10);\n      const altDomain = obj['altDomain'];\n      const fetchTimeMs = Date.now() - startTime;\n      if (IDENTITY_DOMAIN_REGEXP_.test(altDomain)) {\n        if (!redirectsRemaining--) {\n          // Max redirects, log?\n          return {fetchTimeMs};\n        }\n        return executeIdentityTokenFetch(\n          win,\n          ampDoc,\n          redirectsRemaining,\n          altDomain,\n          startTime\n        );\n      } else if (\n        freshLifetimeSecs > 0 &&\n        validLifetimeSecs > 0 &&\n        typeof token == 'string'\n      ) {\n        return {\n          token,\n          jar,\n          pucrd,\n          freshLifetimeSecs,\n          validLifetimeSecs,\n          fetchTimeMs,\n        };\n      }\n      // returning empty\n      return {fetchTimeMs};\n    })\n    .catch(unusedErr => {\n      // TODO log?\n      return {};\n    });\n}\n\n/**\n * @param {!Window} win\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampDoc\n * @param {string=} domain\n * @return {string} url\n * @visibleForTesting\n */\nexport function getIdentityTokenRequestUrl(win, ampDoc, domain = undefined) {\n  if (!domain && win != win.top && win.location.ancestorOrigins) {\n    const matches = IDENTITY_DOMAIN_REGEXP_.exec(\n      win.location.ancestorOrigins[win.location.ancestorOrigins.length - 1]\n    );\n    domain = (matches && matches[0]) || undefined;\n  }\n  domain = domain || '.google.com';\n  const canonical = extractHost(\n    Services.documentInfoForDoc(ampDoc).canonicalUrl\n  );\n  return `https://adservice${domain}/adsid/integrator.json?domain=${canonical}`;\n}\n\n/**\n * Returns whether we are running on the AMP CDN.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCdnProxy(win) {\n  return CDN_PROXY_REGEXP.test(win.location.origin);\n}\n\n/**\n * Populates the fields of the given Nameframe experiment config object.\n * @param {!Headers} headers\n * @param {!NameframeExperimentConfig} nameframeConfig\n */\nexport function setNameframeExperimentConfigs(headers, nameframeConfig) {\n  const nameframeExperimentHeader = headers.get('amp-nameframe-exp');\n  if (nameframeExperimentHeader) {\n    nameframeExperimentHeader.split(';').forEach(config => {\n      if (config == 'instantLoad' || config == 'writeInBody') {\n        nameframeConfig[config] = true;\n      }\n    });\n  }\n}\n\n/**\n * Enum for browser capabilities. NOTE: Since JS is 32-bit, do not add anymore\n * than 32 capabilities to this enum.\n * @enum {number}\n */\nconst Capability = {\n  SVG_SUPPORTED: 1 << 0,\n  SANDBOXING_ALLOW_TOP_NAVIGATION_BY_USER_ACTIVATION_SUPPORTED: 1 << 1,\n  SANDBOXING_ALLOW_POPUPS_TO_ESCAPE_SANDBOX_SUPPORTED: 1 << 2,\n};\n\n/**\n * Returns a bitmap representing what features are supported by this browser.\n * @param {!Window} win\n * @return {number}\n */\nfunction getBrowserCapabilitiesBitmap(win) {\n  let browserCapabilities = 0;\n  const doc = win.document;\n  if (win.SVGElement && doc.createElementNS) {\n    browserCapabilities |= Capability.SVG_SUPPORTED;\n  }\n  const iframeEl = doc.createElement('iframe');\n  if (iframeEl.sandbox && iframeEl.sandbox.supports) {\n    if (iframeEl.sandbox.supports('allow-top-navigation-by-user-activation')) {\n      browserCapabilities |=\n        Capability.SANDBOXING_ALLOW_TOP_NAVIGATION_BY_USER_ACTIVATION_SUPPORTED;\n    }\n    if (iframeEl.sandbox.supports('allow-popups-to-escape-sandbox')) {\n      browserCapabilities |=\n        Capability.SANDBOXING_ALLOW_POPUPS_TO_ESCAPE_SANDBOX_SUPPORTED;\n    }\n  }\n  return browserCapabilities;\n}\n\n/**\n * Returns an enum value representing the AMP binary type, or null if this is a\n * canonical page.\n * @param {!Window} win\n * @return {?string} The binary type enum.\n * @visibleForTesting\n */\nexport function getAmpRuntimeTypeParameter(win) {\n  const art = getBinaryTypeNumericalCode(getBinaryType(win));\n  return isCdnProxy(win) && art != '0' ? art : null;\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ExternalCorePubVars,\n  MIN_PUB_CONTROL_WIDTH_OF_DESKTOP,\n  getAutoConfig,\n  getPubControlConfig,\n} from './a4a/shared/content-recommendation.js';\nimport {user} from '../../src/log';\n\n/**\n * Approved height for AdSense full-width responsive ads.\n * @const {number}\n */\nexport const ADSENSE_RSPV_WHITELISTED_HEIGHT = 320;\n\n/**\n * The attribute value for AdSense data-auto-format tag.\n * For full-width responsive ad: data-auto-format='rspv'.\n * For full-width matched content responsive ad: data-auto-format='mcrspv'\n * @const {string}\n */\nexport const ADSENSE_RSPV_TAG = 'rspv';\nexport const ADSENSE_MCRSPV_TAG = 'mcrspv';\n\n/**\n * Given the amp-ad data attribute containing the multi-size dimensions, and a\n * set of primary dimensions, this function will return all valid multi-size\n * [width, height] pairs in an array.\n *\n * @param {string} multiSizeDataStr The amp-ad data attribute containing the\n *   multi-size dimensions.\n * @param {number} primaryWidth The primary width of the ad slot.\n * @param {number} primaryHeight The primary height of the ad slot.\n * @param {boolean} multiSizeValidation A flag that if set to true will enforce\n *   the rule that ensures multi-size dimensions are no less than 2/3rds of\n *   their primary dimension's counterpart.\n * @param {boolean=} isFluidPrimary Indicates whether the ad slot's primary\n *   size is fluid.\n * @return {?Array<!Array<number>>} An array of dimensions.\n */\nexport function getMultiSizeDimensions(\n  multiSizeDataStr,\n  primaryWidth,\n  primaryHeight,\n  multiSizeValidation,\n  isFluidPrimary = false\n) {\n  const dimensions = [];\n  const arrayOfSizeStrs = multiSizeDataStr.split(',');\n\n  for (let i = 0; i < arrayOfSizeStrs.length; i++) {\n    const sizeStr = arrayOfSizeStrs[i];\n    if (sizeStr.toLowerCase() == 'fluid') {\n      // Fluid dummy sizes should be appended to the front of the request\n      // parameter, so they must be handled elsewhere.\n      continue;\n    }\n    const size = sizeStr.split('x');\n\n    // Make sure that each size is specified in the form WxH.\n    if (size.length != 2) {\n      user().error('AMP-AD', `Invalid multi-size data format '${sizeStr}'.`);\n      continue;\n    }\n\n    const width = Number(size[0]);\n    const height = Number(size[1]);\n\n    // Make sure that both dimensions given are positive numbers.\n    if (\n      !validateDimensions(\n        width,\n        height,\n        w => isNaN(w) || w <= 0,\n        h => isNaN(h) || h <= 0,\n        badParams =>\n          badParams\n            .map(\n              badParam =>\n                `Invalid ${badParam.dim} of ${badParam.val} ` +\n                'given for secondary size.'\n            )\n            .join(' ')\n      )\n    ) {\n      continue;\n    }\n\n    // Check that secondary size is not larger than primary size.\n    if (\n      !isFluidPrimary &&\n      !validateDimensions(\n        width,\n        height,\n        w => w > primaryWidth,\n        h => h > primaryHeight,\n        badParams =>\n          badParams\n            .map(\n              badParam =>\n                `Secondary ${badParam.dim} ${badParam.val} ` +\n                `can't be larger than the primary ${badParam.dim}.`\n            )\n            .join(' ')\n      )\n    ) {\n      continue;\n    }\n\n    // Check that if multi-size-validation is on, that the secondary sizes\n    // are at least minRatio of the primary size.\n    if (multiSizeValidation) {\n      // The minimum ratio of each secondary dimension to its corresponding\n      // primary dimension.\n      const minRatio = 2 / 3;\n      const minWidth = minRatio * primaryWidth;\n      const minHeight = minRatio * primaryHeight;\n      if (\n        !validateDimensions(\n          width,\n          height,\n          w => w < minWidth,\n          h => h < minHeight,\n          badParams =>\n            badParams\n              .map(\n                badParam =>\n                  `Secondary ${badParam.dim} ${badParam.val} is ` +\n                  `smaller than 2/3rds of the primary ${badParam.dim}.`\n              )\n              .join(' ')\n        )\n      ) {\n        continue;\n      }\n    }\n\n    // Passed all checks! Push additional size to dimensions.\n    dimensions.push([width, height]);\n  }\n\n  return dimensions;\n}\n\n/**\n * A helper function for determining whether a given width or height violates\n * some condition.\n *\n * Checks the width and height against their corresponding conditions. If\n * either of the conditions fail, the errorBuilder function will be called with\n * the appropriate arguments, its result will be logged to user().error, and\n * validateDimensions will return false. Otherwise, validateDimensions will\n * only return true.\n *\n * @param {(number|string)} width\n * @param {(number|string)} height\n * @param {function((number|string)): boolean} widthCond\n * @param {function((number|string)): boolean} heightCond\n * @param {function(!Array<{dim: string, val: (number|string)}>): string=} errorBuilder\n * A function that will produce an informative error message.\n * @return {boolean}\n */\nfunction validateDimensions(\n  width,\n  height,\n  widthCond,\n  heightCond,\n  errorBuilder\n) {\n  const badParams = [];\n  if (widthCond(width)) {\n    badParams.push({dim: 'width', val: width});\n  }\n  if (heightCond(height)) {\n    badParams.push({dim: 'height', val: height});\n  }\n  if (badParams.length) {\n    user().warn('AMP-AD', errorBuilder(badParams));\n  }\n  return !badParams.length;\n}\n\n/**\n * Calculates height of responsive matched content slot based on its width.\n * This logic should be kept as close to possible to the logic inside\n * adsbygoogle.js.\n *\n * @param {number} availableWidth\n * @param {!Element} element <amp-ad> tag which contains publisher settings\n *     if any.\n * @return {number} height to use for the matched content slot.\n */\nexport function getMatchedContentResponsiveHeightAndUpdatePubParams(\n  availableWidth,\n  element\n) {\n  const pubControlParams = {\n    numberOfRows: element.getAttribute(ExternalCorePubVars.ROWS_NUM),\n    numberOfColumns: element.getAttribute(ExternalCorePubVars.COLUMNS_NUM),\n    layoutType: element.getAttribute(ExternalCorePubVars.UI_TYPE),\n  };\n  let config;\n  if (\n    pubControlParams.numberOfRows ||\n    pubControlParams.numberOfColumns ||\n    pubControlParams.layoutType\n  ) {\n    // Publisher provided at least 1 param  which means we are in\n    // \"pub controlled matched content\" mode.\n    config = getPubControlConfig(availableWidth, pubControlParams);\n  } else {\n    // Publisher didn't provide any matched content params so use auto mode.\n    config = getAutoConfig(\n      availableWidth,\n      availableWidth <= MIN_PUB_CONTROL_WIDTH_OF_DESKTOP\n    );\n  }\n  if (config.validationError) {\n    user().error('AMP-AD', config.validationError);\n    // There was an error in pub params and we logged it in console.\n    // Return 0 as height to hide slot.\n    return 0;\n  }\n  element.setAttribute(ExternalCorePubVars.ROWS_NUM, config.numberOfRows);\n  element.setAttribute(ExternalCorePubVars.COLUMNS_NUM, config.numberOfColumns);\n  element.setAttribute(ExternalCorePubVars.UI_TYPE, config.layoutType);\n\n  return config.slotHeight;\n}\n","export const CSS = \"amp-ad iframe,amp-embed iframe{border:0!important;margin:0!important;padding:0!important}.i-amphtml-ad-default-holder{position:absolute;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;background-color:hsla(0,0%,78.4%,0.05)}.i-amphtml-ad-default-holder:after{content:\\\"Ad\\\";content:attr(data-ad-holder-text);background-color:transparent;border-radius:2px;color:#696969;font-size:10px;line-height:1;font-family:Arial,sans-serif;padding:3px 4px 1px;border:1px solid #696969}amp-ad[data-a4a-upgrade-type=amp-ad-network-doubleclick-impl]>iframe,amp-ad[type=adsense]>iframe{top:50%!important;left:50%!important;transform:translate(-50%,-50%)}amp-ad[type=adsense],amp-ad[type=doubleclick]{direction:ltr}amp-ad[data-a4a-upgrade-type=amp-ad-network-adsense-impl]>iframe,amp-ad[data-a4a-upgrade-type=amp-ad-network-doubleclick-impl]>iframe{min-height:0;min-width:0}amp-ad[data-a4a-upgrade-type=amp-ad-network-doubleclick-impl][height=fluid]>iframe{height:100%!important;width:100%!important;position:relative}amp-ad[data-a4a-upgrade-type=amp-ad-network-doubleclick-impl][height=fluid]{width:100%!important}\\n/*# sourceURL=/extensions/amp-ad/0.1/amp-ad.css*/\";\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Determines which tags desire A4A handling\n * @param {!Window} win\n * @param {!Element} element\n * @param {boolean} useRemoteHtml\n * @return {boolean}\n */\nexport function cloudflareIsA4AEnabled(win, element, useRemoteHtml) {\n  // We assume fast fetch for all content, but this will gracefully degrade,\n  // when non-a4a content is delivered\n  return !useRemoteHtml;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {startsWith} from '../../../src/string';\n\n/** @const @private {string} */\nconst GMOSSP_SRC_PREFIX_ = 'https://sp.gmossp-sp.jp/';\n\n/** @const @private {string} */\nconst GMOSSP_SRC_A4A_PREFIX_ = 'https://amp.sp.gmossp-sp.jp/_a4a/';\n\n/**\n * @param {!Window} win\n * @param {!Element} element\n * @param {boolean} useRemoteHtml\n * @return {boolean}\n */\nexport function gmosspIsA4AEnabled(win, element, useRemoteHtml) {\n  let src;\n  return (\n    !useRemoteHtml &&\n    !!(src = element.getAttribute('src')) &&\n    !!element.getAttribute('data-use-a4a') &&\n    (startsWith(src, GMOSSP_SRC_PREFIX_) ||\n      startsWith(src, GMOSSP_SRC_A4A_PREFIX_))\n  );\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const @private {string} */\nconst SRC_PREFIX_ = 'https://ib.3lift.com/';\n/**\n * @param {!Window} win\n * @param {!Element} element\n * @param {boolean} useRemoteHtml\n * @return {boolean}\n */\nexport function tripleliftIsA4AEnabled(win, element, useRemoteHtml) {\n  let src;\n  return (\n    !useRemoteHtml &&\n    !!element.getAttribute('data-use-a4a') &&\n    !!(src = element.getAttribute('src')) &&\n    src.indexOf(SRC_PREFIX_) == 0\n  );\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ADSENSE_MCRSPV_TAG,\n  getMatchedContentResponsiveHeightAndUpdatePubParams,\n} from '../../../ads/google/utils';\nimport {AmpAdUIHandler} from './amp-ad-ui';\nimport {AmpAdXOriginIframeHandler} from './amp-ad-xorigin-iframe-handler';\nimport {\n  CONSENT_POLICY_STATE, // eslint-disable-line no-unused-vars\n} from '../../../src/consent-state';\nimport {\n  Layout, // eslint-disable-line no-unused-vars\n  LayoutPriority,\n  isLayoutSizeDefined,\n} from '../../../src/layout';\nimport {adConfig} from '../../../ads/_config';\nimport {clamp} from '../../../src/utils/math';\nimport {computedStyle, setStyle} from '../../../src/style';\nimport {dev, devAssert, userAssert} from '../../../src/log';\nimport {dict} from '../../../src/utils/object';\nimport {getAdCid} from '../../../src/ad-cid';\nimport {getAdContainer, isAdPositionAllowed} from '../../../src/ad-helper';\nimport {\n  getAmpAdRenderOutsideViewport,\n  incrementLoadingAds,\n  is3pThrottled,\n} from './concurrent-load';\nimport {\n  getConsentPolicyInfo,\n  getConsentPolicySharedData,\n  getConsentPolicyState,\n} from '../../../src/consent';\nimport {getIframe, preloadBootstrap} from '../../../src/3p-frame';\nimport {isExperimentOn} from '../../../src/experiments';\nimport {moveLayoutRect} from '../../../src/layout-rect';\nimport {toWin} from '../../../src/types';\n\n/** @const {string} Tag name for 3P AD implementation. */\nexport const TAG_3P_IMPL = 'amp-ad-3p-impl';\n\n/** @const {number} */\nconst MIN_FULL_WIDTH_HEIGHT = 100;\n\n/** @const {number} */\nconst MAX_FULL_WIDTH_HEIGHT = 500;\n\nexport class AmpAd3PImpl extends AMP.BaseElement {\n  /**\n   * @param {!AmpElement} element\n   */\n  constructor(element) {\n    super(element);\n\n    /**\n     * @private {?Element}\n     * @visibleForTesting\n     */\n    this.iframe_ = null;\n\n    /** @type {?Object} */\n    this.config = null;\n\n    /** @type {?AmpAdUIHandler} */\n    this.uiHandler = null;\n\n    /** @private {?AmpAdXOriginIframeHandler} */\n    this.xOriginIframeHandler_ = null;\n\n    /**\n     * @private {?Element}\n     * @visibleForTesting\n     */\n    this.placeholder_ = null;\n\n    /**\n     * @private {?Element}\n     * @visibleForTesting\n     */\n    this.fallback_ = null;\n\n    /** @private {boolean} */\n    this.isInFixedContainer_ = false;\n\n    /**\n     * The (relative) layout box of the ad iframe to the amp-ad tag.\n     * @private {?../../../src/layout-rect.LayoutRectDef}\n     */\n    this.iframeLayoutBox_ = null;\n\n    /**\n     * Call to stop listening to viewport changes.\n     * @private {?function()}\n     * @visibleForTesting\n     */\n    this.unlistenViewportChanges_ = null;\n\n    /**\n     * @private {IntersectionObserver}\n     * @visibleForTesting\n     */\n    this.intersectionObserver_ = null;\n\n    /** @private {?string|undefined} */\n    this.container_ = undefined;\n\n    /** @private {?Promise} */\n    this.layoutPromise_ = null;\n\n    /** @private {string|undefined} */\n    this.type_ = undefined;\n\n    /**\n     * For full-width responsive ads: whether the element has already been\n     * aligned to the edges of the viewport.\n     * @private {boolean}\n     */\n    this.isFullWidthAligned_ = false;\n\n    /**\n     * Whether full-width responsive was requested for this ad.\n     * @private {boolean}\n     */\n    this.isFullWidthRequested_ = false;\n  }\n\n  /** @override */\n  getLayoutPriority() {\n    // Loads ads after other content,\n    const isPWA = !this.element.getAmpDoc().isSingleDoc();\n    // give the ad higher priority if it is inside a PWA\n    return isPWA ? LayoutPriority.METADATA : LayoutPriority.ADS;\n  }\n\n  /** @override */\n  renderOutsideViewport() {\n    if (is3pThrottled(this.win)) {\n      return false;\n    }\n    // Otherwise the ad is good to go.\n    const elementCheck = getAmpAdRenderOutsideViewport(this.element);\n    return elementCheck !== null ? elementCheck : super.renderOutsideViewport();\n  }\n\n  /**\n   * @param {!Layout} layout\n   * @override\n   */\n  isLayoutSupported(layout) {\n    return isLayoutSizeDefined(layout);\n  }\n\n  /**\n   * @return {!../../../src/service/resource.Resource}\n   * @visibleForTesting\n   */\n  getResource() {\n    return this.element.getResources().getResourceForElement(this.element);\n  }\n\n  /** @override */\n  getConsentPolicy() {\n    const type = this.element.getAttribute('type');\n    const config = adConfig[type];\n    if (config && config['consentHandlingOverride']) {\n      return null;\n    }\n    return super.getConsentPolicy();\n  }\n\n  /** @override */\n  buildCallback() {\n    this.type_ = this.element.getAttribute('type');\n    const upgradeDelayMs = Math.round(this.getResource().getUpgradeDelayMs());\n    dev().info(TAG_3P_IMPL, `upgradeDelay ${this.type_}: ${upgradeDelayMs}`);\n\n    this.placeholder_ = this.getPlaceholder();\n    this.fallback_ = this.getFallback();\n\n    this.config = adConfig[this.type_];\n    userAssert(this.config, `Type \"${this.type_}\" is not supported in amp-ad`);\n\n    this.uiHandler = new AmpAdUIHandler(this);\n\n    this.isFullWidthRequested_ = this.shouldRequestFullWidth_();\n\n    if (this.isFullWidthRequested_) {\n      return this.attemptFullWidthSizeChange_();\n    }\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  shouldRequestFullWidth_() {\n    const hasFullWidth = this.element.hasAttribute('data-full-width');\n    if (!hasFullWidth) {\n      return false;\n    }\n    userAssert(\n      this.element.getAttribute('width') == '100vw',\n      'Ad units with data-full-width must have width=\"100vw\".'\n    );\n    userAssert(\n      !!this.config.fullWidthHeightRatio,\n      'Ad network does not support full width ads.'\n    );\n    dev().info(\n      TAG_3P_IMPL,\n      '#${this.getResource().getId()} Full width requested'\n    );\n    return true;\n  }\n\n  /**\n   * Prefetches and preconnects URLs related to the ad.\n   * @param {boolean=} opt_onLayout\n   * @override\n   */\n  preconnectCallback(opt_onLayout) {\n    // We always need the bootstrap.\n    preloadBootstrap(this.win, this.preconnect, this.config.remoteHTMLDisabled);\n    if (typeof this.config.prefetch == 'string') {\n      this.preconnect.preload(this.config.prefetch, 'script');\n    } else if (this.config.prefetch) {\n      this.config.prefetch.forEach(p => {\n        this.preconnect.preload(p, 'script');\n      });\n    }\n    if (typeof this.config.preconnect == 'string') {\n      this.preconnect.url(this.config.preconnect, opt_onLayout);\n    } else if (this.config.preconnect) {\n      this.config.preconnect.forEach(p => {\n        this.preconnect.url(p, opt_onLayout);\n      });\n    }\n    // If fully qualified src for ad script is specified we preconnect to it.\n    const src = this.element.getAttribute('src');\n    if (src) {\n      // We only preconnect to the src because we cannot know whether the URL\n      // will have caching headers set.\n      this.preconnect.url(src);\n    }\n  }\n\n  /**\n   * @override\n   */\n  onLayoutMeasure() {\n    this.isInFixedContainer_ = !isAdPositionAllowed(this.element, this.win);\n    /** detect ad containers, add the list to element as a new attribute */\n    if (this.container_ === undefined) {\n      this.container_ = getAdContainer(this.element);\n    }\n    // We remeasured this tag, let's also remeasure the iframe. Should be\n    // free now and it might have changed.\n    this.measureIframeLayoutBox_();\n    if (this.xOriginIframeHandler_) {\n      this.xOriginIframeHandler_.onLayoutMeasure();\n    }\n\n    if (this.isFullWidthRequested_ && !this.isFullWidthAligned_) {\n      this.isFullWidthAligned_ = true;\n      const layoutBox = this.getLayoutBox();\n\n      // Nudge into the correct horizontal position by changing side margin.\n      this.getVsync().run(\n        {\n          measure: state => {\n            state.direction = computedStyle(this.win, this.element)[\n              'direction'\n            ];\n          },\n          mutate: state => {\n            if (state.direction == 'rtl') {\n              setStyle(this.element, 'marginRight', layoutBox.left, 'px');\n            } else {\n              setStyle(this.element, 'marginLeft', -layoutBox.left, 'px');\n            }\n          },\n        },\n        {direction: ''}\n      );\n    }\n  }\n\n  /**\n   * Measure the layout box of the iframe if we rendered it already.\n   * @private\n   */\n  measureIframeLayoutBox_() {\n    if (this.xOriginIframeHandler_ && this.xOriginIframeHandler_.iframe) {\n      const iframeBox = this.getViewport().getLayoutRect(\n        this.xOriginIframeHandler_.iframe\n      );\n      const box = this.getLayoutBox();\n      // Cache the iframe's relative position to the amp-ad. This is\n      // necessary for fixed-position containers which \"move\" with the\n      // viewport.\n      this.iframeLayoutBox_ = moveLayoutRect(iframeBox, -box.left, -box.top);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getIntersectionElementLayoutBox() {\n    if (!this.xOriginIframeHandler_ || !this.xOriginIframeHandler_.iframe) {\n      return super.getIntersectionElementLayoutBox();\n    }\n    const box = this.getLayoutBox();\n    if (!this.iframeLayoutBox_) {\n      this.measureIframeLayoutBox_();\n    }\n\n    const iframe = /** @type {!../../../src/layout-rect.LayoutRectDef} */ (devAssert(\n      this.iframeLayoutBox_\n    ));\n    return moveLayoutRect(iframe, box.left, box.top);\n  }\n\n  /** @override */\n  layoutCallback() {\n    if (this.layoutPromise_) {\n      return this.layoutPromise_;\n    }\n    userAssert(\n      !this.isInFixedContainer_,\n      '<amp-ad> is not allowed to be placed in elements with ' +\n        'position:fixed: %s',\n      this.element\n    );\n\n    const consentPromise = this.getConsentState();\n    const consentPolicyId = super.getConsentPolicy();\n    const isConsentV2Experiment = isExperimentOn(this.win, 'amp-consent-v2');\n    const consentStringPromise =\n      consentPolicyId && isConsentV2Experiment\n        ? getConsentPolicyInfo(this.element, consentPolicyId)\n        : Promise.resolve(null);\n    const sharedDataPromise = consentPolicyId\n      ? getConsentPolicySharedData(this.element, consentPolicyId)\n      : Promise.resolve(null);\n\n    this.layoutPromise_ = Promise.all([\n      getAdCid(this),\n      consentPromise,\n      sharedDataPromise,\n      consentStringPromise,\n    ]).then(consents => {\n      // Use JsonObject to preserve field names so that ampContext can access\n      // values with name\n      // ampcontext.js and this file are compiled in different compilation unit\n\n      // Note: Field names can by perserved by using JsonObject, or by adding\n      // perserved name to extern. We are doing both right now.\n      // Please also add new introduced variable\n      // name to the extern list.\n      const opt_context = dict({\n        'clientId': consents[0] || null,\n        'container': this.container_,\n        'initialConsentState': consents[1],\n        'consentSharedData': consents[2],\n      });\n      if (isConsentV2Experiment) {\n        opt_context['initialConsentValue'] = consents[3];\n      }\n\n      // In this path, the request and render start events are entangled,\n      // because both happen inside a cross-domain iframe.  Separating them\n      // here, though, allows us to measure the impact of ad throttling via\n      // incrementLoadingAds().\n      const iframe = getIframe(\n        toWin(this.element.ownerDocument.defaultView),\n        this.element,\n        this.type_,\n        opt_context,\n        {disallowCustom: this.config.remoteHTMLDisabled}\n      );\n      this.xOriginIframeHandler_ = new AmpAdXOriginIframeHandler(this);\n      return this.xOriginIframeHandler_.init(iframe);\n    });\n    incrementLoadingAds(this.win, this.layoutPromise_);\n    return this.layoutPromise_;\n  }\n\n  /**\n   * @param {boolean} inViewport\n   * @override\n   */\n  viewportCallback(inViewport) {\n    if (this.xOriginIframeHandler_) {\n      this.xOriginIframeHandler_.viewportCallback(inViewport);\n    }\n  }\n\n  /** @override */\n  unlayoutOnPause() {\n    return (\n      !this.xOriginIframeHandler_ || !this.xOriginIframeHandler_.isPausable()\n    );\n  }\n\n  /** @override  */\n  pauseCallback() {\n    if (this.xOriginIframeHandler_) {\n      this.xOriginIframeHandler_.setPaused(true);\n    }\n  }\n\n  /** @override  */\n  resumeCallback() {\n    if (this.xOriginIframeHandler_) {\n      this.xOriginIframeHandler_.setPaused(false);\n    }\n  }\n\n  /** @override  */\n  unlayoutCallback() {\n    this.layoutPromise_ = null;\n    this.uiHandler.applyUnlayoutUI();\n    if (this.xOriginIframeHandler_) {\n      this.xOriginIframeHandler_.freeXOriginIframe();\n      this.xOriginIframeHandler_ = null;\n    }\n    return true;\n  }\n\n  /**\n   * @return {!Promise<?CONSENT_POLICY_STATE>}\n   */\n  getConsentState() {\n    const consentPolicyId = super.getConsentPolicy();\n    return consentPolicyId\n      ? getConsentPolicyState(this.element, consentPolicyId)\n      : Promise.resolve(null);\n  }\n\n  /**\n   * Calculates and attempts to set the appropriate height & width for a\n   * responsive full width ad unit.\n   * @return {!Promise}\n   * @private\n   */\n  attemptFullWidthSizeChange_() {\n    const viewportSize = this.getViewport().getSize();\n    const maxHeight = Math.min(MAX_FULL_WIDTH_HEIGHT, viewportSize.height);\n    const {width} = viewportSize;\n    const height = this.getFullWidthHeight_(width, maxHeight);\n    // Attempt to resize to the correct height. The width should already be\n    // 100vw, but is fixed here so that future resizes of the viewport don't\n    // affect it.\n\n    return this.attemptChangeSize(height, width).then(\n      () => {\n        dev().info(TAG_3P_IMPL, `Size change accepted: ${width}x${height}`);\n      },\n      () => {\n        dev().info(TAG_3P_IMPL, `Size change rejected: ${width}x${height}`);\n      }\n    );\n  }\n\n  /**\n   * Calculates the appropriate width for a responsive full width ad unit.\n   * @param {number} width\n   * @param {number} maxHeight\n   * @return {number}\n   * @private\n   */\n  getFullWidthHeight_(width, maxHeight) {\n    // TODO(google a4a eng): remove this once adsense switches fully to\n    // fast fetch.\n    if (this.element.getAttribute('data-auto-format') === ADSENSE_MCRSPV_TAG) {\n      return getMatchedContentResponsiveHeightAndUpdatePubParams(\n        width,\n        this.element\n      );\n    }\n    return clamp(\n      Math.round(width / this.config.fullWidthHeightRatio),\n      MIN_FULL_WIDTH_HEIGHT,\n      maxHeight\n    );\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AmpAdUIHandler} from './amp-ad-ui';\nimport {CommonSignals} from '../../../src/common-signals';\nimport {LayoutPriority, isLayoutSizeDefined} from '../../../src/layout';\nimport {Services} from '../../../src/services';\nimport {addParamToUrl} from '../../../src/url';\nimport {\n  childElementByTag,\n  closestAncestorElementBySelector,\n  removeChildren,\n} from '../../../src/dom';\nimport {hasOwn} from '../../../src/utils/object';\nimport {userAssert} from '../../../src/log';\n\n/** @const {string} Tag name for custom ad implementation. */\nexport const TAG_AD_CUSTOM = 'amp-ad-custom';\n\n/** @type {Object} A map of promises for each value of data-url. The promise\n *  will fetch data for the URL for the ad server, and return it as a map of\n *  objects, keyed by slot; each object contains the variables to be\n *   substituted into the mustache template. */\nconst ampCustomadXhrPromises = {};\n\n/** @type {Object} a map of full urls (i.e. including the ampslots parameter)\n * for each value of data-url */\nlet ampCustomadFullUrls = null;\n\nexport class AmpAdCustom extends AMP.BaseElement {\n  /** @param {!AmpElement} element */\n  constructor(element) {\n    super(element);\n    /** @private {?string} The base URL of the ad server for this ad */\n    this.url_ = null;\n\n    /** @private {?string} A string identifying this ad slot: the server's\n     *  responses will be keyed by slot */\n    this.slot_ = null;\n\n    /** @type {?AmpAdUIHandler} */\n    this.uiHandler = null;\n  }\n\n  /** @override */\n  getLayoutPriority() {\n    // Since this is AMPHTML we are trusting that it will load responsibly\n    return LayoutPriority.CONTENT;\n  }\n\n  /** @override */\n  isLayoutSupported(layout) {\n    // TODO: Add proper support for more layouts, and figure out which ones\n    // we're permitting\n    return isLayoutSizeDefined(layout);\n  }\n\n  /**\n   * Builds AmpAdUIHandler callback\n   */\n  buildCallback() {\n    this.url_ = this.element.getAttribute('data-url');\n    this.slot_ = this.element.getAttribute('data-slot');\n    // Ensure that the slot value is legal\n    userAssert(\n      this.slot_ === null || this.slot_.match(/^[0-9a-z]+$/),\n      'custom ad slot should be alphanumeric: ' + this.slot_\n    );\n\n    const urlService = Services.urlForDoc(this.element);\n    userAssert(\n      this.url_ && urlService.isSecure(this.url_),\n      'custom ad url must be an HTTPS URL'\n    );\n\n    this.uiHandler = new AmpAdUIHandler(this);\n  }\n\n  /** @override */\n  layoutCallback() {\n    /** @const {string} fullUrl */\n    const fullUrl = this.getFullUrl_();\n    // if we have cached the response, find it, otherwise fetch\n    const responsePromise =\n      ampCustomadXhrPromises[fullUrl] ||\n      Services.xhrFor(this.win)\n        .fetchJson(fullUrl)\n        .then(res => res.json());\n    if (this.slot_ !== null) {\n      // Cache this response if using `data-slot` feature so only one request\n      // is made per url\n      ampCustomadXhrPromises[fullUrl] = responsePromise;\n    }\n    return responsePromise.then(data => {\n      // We will get here when the data has been fetched from the server\n      let templateData = data;\n      if (this.slot_ !== null) {\n        templateData = hasOwn(data, this.slot_) ? data[this.slot_] : null;\n      }\n\n      if (!templateData || typeof templateData != 'object') {\n        this.uiHandler.applyNoContentUI();\n        return;\n      }\n\n      templateData = this.handleTemplateData_(templateData);\n\n      this.renderStarted();\n\n      try {\n        Services.templatesFor(this.win)\n          .findAndRenderTemplate(this.element, templateData)\n          .then(renderedElement => {\n            // Get here when the template has been rendered Clear out the\n            // child template and replace it by the rendered version Note that\n            // we can't clear templates that's not ad's child because they\n            // maybe used by other ad component.\n            removeChildren(this.element);\n            this.element.appendChild(renderedElement);\n            this.signals().signal(CommonSignals.INI_LOAD);\n          });\n      } catch (e) {\n        this.uiHandler.applyNoContentUI();\n      }\n    });\n  }\n\n  /**\n   * Handles the template data response.\n   * There are two types of templateData format\n   * Format option 1\n   * {\n   *   'templateId': {},\n   *   'vars': {},\n   *   'data': {\n   *     'a': '1',\n   *     'b': '2'\n   *   }\n   * }\n   * or format option 2\n   * {\n   *  'a': '1',\n   *  'b': '2'\n   * }\n   * if `templateId` or `vars` are not specified.\n   *\n   * @param {!JsonObject} templateData\n   * @return {!JsonObject}\n   */\n  handleTemplateData_(templateData) {\n    if (childElementByTag(this.element, 'template')) {\n      // Need to check for template attribute if it's allowed in amp-ad tag\n      return templateData;\n    }\n\n    // If use remote template specified by response\n    userAssert(templateData['templateId'], 'TemplateId not specified');\n\n    userAssert(\n      templateData['data'] && typeof templateData['data'] == 'object',\n      'Template data not specified'\n    );\n\n    this.element.setAttribute('template', templateData['templateId']);\n\n    if (templateData['vars'] && typeof templateData['vars'] == 'object') {\n      // Support for vars\n      const vars = templateData['vars'];\n      const keys = Object.keys(vars);\n      for (let i = 0; i < keys.length; i++) {\n        const attrName = 'data-vars-' + keys[i];\n        try {\n          this.element.setAttribute(attrName, vars[keys[i]]);\n        } catch (e) {\n          this.user().error(TAG_AD_CUSTOM, 'Fail to set attribute: ', e);\n        }\n      }\n    }\n\n    return templateData['data'];\n  }\n\n  /** @override  */\n  unlayoutCallback() {\n    this.uiHandler.applyUnlayoutUI();\n    return true;\n  }\n\n  /**\n   * @private getFullUrl_ Get a URL which includes a parameter indicating\n   * all slots to be fetched from this web server URL\n   * @return {string} The URL with the \"ampslots\" parameter appended\n   */\n  getFullUrl_() {\n    // If this ad doesn't have a slot defined, just return the base URL\n    if (this.slot_ === null) {\n      return userAssert(this.url_);\n    }\n    if (ampCustomadFullUrls === null) {\n      // The array of ad urls has not yet been built, do so now.\n      ampCustomadFullUrls = {};\n      const slots = {};\n\n      // Get the parent body of this amp-ad element. It could be the body of\n      // the main document, or it could be an enclosing iframe.\n      const body = closestAncestorElementBySelector(this.element, 'BODY');\n      const elements = body.querySelectorAll('amp-ad[type=custom]');\n      for (let index = 0; index < elements.length; index++) {\n        const elem = elements[index];\n        const url = elem.getAttribute('data-url');\n        const slotId = elem.getAttribute('data-slot');\n        if (slotId !== null) {\n          if (!(url in slots)) {\n            slots[url] = [];\n          }\n          slots[url].push(encodeURIComponent(slotId));\n        }\n      }\n      for (const baseUrl in slots) {\n        ampCustomadFullUrls[baseUrl] = addParamToUrl(\n          baseUrl,\n          'ampslots',\n          slots[baseUrl].join(',')\n        );\n      }\n    }\n    return ampCustomadFullUrls[this.url_];\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ancestorElementsByTag} from '../../../src/dom';\nimport {getAdContainer} from '../../../src/ad-helper';\n\nexport class AmpAdUIHandler {\n  /**\n   * @param {!AMP.BaseElement} baseInstance\n   */\n  constructor(baseInstance) {\n    /** @private {!AMP.BaseElement} */\n    this.baseInstance_ = baseInstance;\n\n    /** @private {!Element} */\n    this.element_ = baseInstance.element;\n\n    /** @private @const {!Document} */\n    this.doc_ = baseInstance.win.document;\n\n    this.containerElement_ = null;\n\n    if (this.element_.hasAttribute('data-ad-container-id')) {\n      const id = this.element_.getAttribute('data-ad-container-id');\n      const container = this.doc_.getElementById(id);\n      if (\n        container &&\n        container.tagName == 'AMP-LAYOUT' &&\n        container.contains(this.element_)\n      ) {\n        // Parent <amp-layout> component with reference id can serve as the\n        // ad container\n        this.containerElement_ = container;\n      }\n    }\n\n    if (!baseInstance.getFallback()) {\n      const fallback = this.addDefaultUiComponent_('fallback');\n      if (fallback) {\n        this.baseInstance_.element.appendChild(fallback);\n      }\n    }\n  }\n\n  /**\n   * Apply UI for laid out ad with no-content\n   * Order: try collapse -> apply provided fallback -> apply default fallback\n   */\n  applyNoContentUI() {\n    if (getAdContainer(this.element_) === 'AMP-STICKY-AD') {\n      // Special case: force collapse sticky-ad if no content.\n      this.baseInstance_./*OK*/ collapse();\n      return;\n    }\n\n    if (getAdContainer(this.element_) === 'AMP-FX-FLYING-CARPET') {\n      /**\n       * Special case: Force collapse the ad if it is the,\n       * only and direct child of a flying carpet.\n       * Also, this will not handle\n       * the amp-layout case for now, as it could be\n       * inefficient. And we have not seen an amp-layout\n       * used with flying carpet and ads yet.\n       */\n\n      const flyingCarpetElements = ancestorElementsByTag(\n        this.element_,\n        'amp-fx-flying-carpet'\n      );\n      const flyingCarpetElement = flyingCarpetElements[0];\n\n      flyingCarpetElement.getImpl().then(implementation => {\n        const children = implementation.getChildren();\n\n        if (children.length === 1 && children[0] === this.element_) {\n          this.baseInstance_./*OK*/ collapse();\n        }\n      });\n      return;\n    }\n\n    let attemptCollapsePromise;\n    if (this.containerElement_) {\n      // Collapse the container element if there's one\n      attemptCollapsePromise = this.element_\n        .getResources()\n        .attemptCollapse(this.containerElement_);\n      attemptCollapsePromise.then(() => {});\n    } else {\n      attemptCollapsePromise = this.baseInstance_.attemptCollapse();\n    }\n\n    // The order here is collapse > user provided fallback > default fallback\n    attemptCollapsePromise.catch(() => {\n      this.baseInstance_.mutateElement(() => {\n        this.baseInstance_.togglePlaceholder(false);\n        this.baseInstance_.toggleFallback(true);\n      });\n    });\n  }\n\n  /**\n   * Apply UI for unlaid out ad: Hide fallback.\n   * Note: No need to togglePlaceholder here, unlayout show it by default.\n   */\n  applyUnlayoutUI() {\n    this.baseInstance_.mutateElement(() => {\n      this.baseInstance_.toggleFallback(false);\n    });\n  }\n\n  /**\n   * @param {string} name\n   * @return {?Element}\n   * @private\n   */\n  addDefaultUiComponent_(name) {\n    if (this.element_.tagName == 'AMP-EMBED') {\n      // Do nothing for amp-embed element;\n      return null;\n    }\n    const uiComponent = this.doc_.createElement('div');\n    uiComponent.setAttribute(name, '');\n\n    const content = this.doc_.createElement('div');\n    content.classList.add('i-amphtml-ad-default-holder');\n\n    // TODO(aghassemi, #4146) i18n\n    content.setAttribute('data-ad-holder-text', 'Ad');\n    uiComponent.appendChild(content);\n\n    return uiComponent;\n  }\n\n  /**\n   * @param {number|string|undefined} height\n   * @param {number|string|undefined} width\n   * @param {number} iframeHeight\n   * @param {number} iframeWidth\n   * @param {!MessageEvent} event\n   * @return {!Promise<!Object>}\n   */\n  updateSize(height, width, iframeHeight, iframeWidth, event) {\n    // Calculate new width and height of the container to include the padding.\n    // If padding is negative, just use the requested width and height directly.\n    let newHeight, newWidth;\n    height = parseInt(height, 10);\n    if (!isNaN(height)) {\n      newHeight = Math.max(\n        this.element_./*OK*/ offsetHeight + height - iframeHeight,\n        height\n      );\n    }\n    width = parseInt(width, 10);\n    if (!isNaN(width)) {\n      newWidth = Math.max(\n        this.element_./*OK*/ offsetWidth + width - iframeWidth,\n        width\n      );\n    }\n\n    /** @type {!Object<boolean, number|undefined, number|undefined>} */\n    const resizeInfo = {\n      success: true,\n      newWidth,\n      newHeight,\n    };\n\n    if (!newHeight && !newWidth) {\n      return Promise.reject(new Error('undefined width and height'));\n    }\n\n    if (getAdContainer(this.element_) == 'AMP-STICKY-AD') {\n      // Special case: force collapse sticky-ad if no content.\n      resizeInfo.success = false;\n      return Promise.resolve(resizeInfo);\n    }\n    return this.baseInstance_\n      .attemptChangeSize(newHeight, newWidth, event)\n      .then(\n        () => resizeInfo,\n        () => {\n          resizeInfo.success = false;\n          return resizeInfo;\n        }\n      );\n  }\n}\n\n// Make the class available to other late loaded amp-ad implementations\n// without them having to depend on it directly.\nAMP.AmpAdUIHandler = AmpAdUIHandler;\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CONSTANTS, MessageType} from '../../../src/3p-frame-messaging';\nimport {CommonSignals} from '../../../src/common-signals';\nimport {Deferred} from '../../../src/utils/promise';\nimport {IntersectionObserver} from '../../../src/intersection-observer';\nimport {Services} from '../../../src/services';\nimport {\n  SubscriptionApi,\n  isPausable,\n  listenFor,\n  listenForOncePromise,\n  makePausable,\n  postMessageToWindows,\n  setPaused,\n} from '../../../src/iframe-helper';\nimport {dev, devAssert} from '../../../src/log';\nimport {dict} from '../../../src/utils/object';\nimport {getData} from '../../../src/event-helper';\nimport {getHtml} from '../../../src/get-html';\nimport {isExperimentOn} from '../../../src/experiments';\nimport {isGoogleAdsA4AValidEnvironment} from '../../../ads/google/a4a/utils';\nimport {removeElement} from '../../../src/dom';\nimport {reportErrorToAnalytics} from '../../../src/error';\nimport {setStyle} from '../../../src/style';\nimport {throttle} from '../../../src/utils/rate-limit';\n\nconst VISIBILITY_TIMEOUT = 10000;\n\nconst MIN_INABOX_POSITION_EVENT_INTERVAL = 100;\n\nexport class AmpAdXOriginIframeHandler {\n  /**\n   * @param {!./amp-ad-3p-impl.AmpAd3PImpl|!../../amp-a4a/0.1/amp-a4a.AmpA4A} baseInstance\n   */\n  constructor(baseInstance) {\n    /** @private {!Window} */\n    this.win_ = baseInstance.win;\n\n    /** @private */\n    this.baseInstance_ = baseInstance;\n\n    /** @private {!Element} */\n    this.element_ = baseInstance.element;\n\n    /** @private {?./amp-ad-ui.AmpAdUIHandler} */\n    this.uiHandler_ = baseInstance.uiHandler;\n\n    /** @type {?HTMLIFrameElement} iframe instance */\n    this.iframe = null;\n\n    /** @private {?IntersectionObserver} */\n    this.intersectionObserver_ = null;\n\n    /** @private {SubscriptionApi} */\n    this.embedStateApi_ = null;\n\n    /** @private {?SubscriptionApi} */\n    this.inaboxPositionApi_ = null;\n\n    /** @private {boolean} */\n    this.isInaboxPositionApiInit_ = false;\n\n    /** @private {!Array<!Function>} functions to unregister listeners */\n    this.unlisteners_ = [];\n\n    /** @private @const {!../../../src/service/viewport/viewport-interface.ViewportInterface} */\n    this.viewport_ = Services.viewportForDoc(this.baseInstance_.getAmpDoc());\n\n    /** @private {boolean} */\n    this.sendPositionPending_ = false;\n  }\n\n  /**\n   * Sets up listeners and iframe state for iframe containing ad creative.\n   * @param {!HTMLIFrameElement} iframe\n   * @param {boolean=} opt_isA4A when true do not listen to ad response\n   * @param {boolean=} opt_letCreativeTriggerRenderStart Whether to wait for\n   *    render start from the creative, or simply trigger it in here.\n   * @return {!Promise} awaiting render complete promise\n   */\n  init(iframe, opt_isA4A, opt_letCreativeTriggerRenderStart) {\n    devAssert(!this.iframe, 'multiple invocations of init without destroy!');\n    this.iframe = iframe;\n    this.iframe.setAttribute('scrolling', 'no');\n    this.baseInstance_.applyFillContent(this.iframe);\n    const timer = Services.timerFor(this.baseInstance_.win);\n\n    // Init IntersectionObserver service.\n    this.intersectionObserver_ = new IntersectionObserver(\n      this.baseInstance_,\n      this.iframe,\n      true\n    );\n\n    this.embedStateApi_ = new SubscriptionApi(\n      this.iframe,\n      'send-embed-state',\n      true,\n      () => this.sendEmbedInfo_(this.baseInstance_.isInViewport())\n    );\n\n    // Enable creative position observer if inabox experiment enabled OR\n    // adsense running on non-CDN cache where AMP creatives are xdomained and\n    // may require this information.\n    if (\n      isExperimentOn(this.win_, 'inabox-position-api') ||\n      (/^adsense$/i.test(this.element_.getAttribute('type')) &&\n        !isGoogleAdsA4AValidEnvironment(this.win_))\n    ) {\n      // To provide position to inabox.\n      this.inaboxPositionApi_ = new SubscriptionApi(\n        this.iframe,\n        MessageType.SEND_POSITIONS,\n        true,\n        () => {\n          // TODO(@zhouyx): Make sendPosition_ only send to\n          // message origin iframe\n          this.sendPosition_();\n          this.registerPosition_();\n        }\n      );\n    }\n    // Triggered by context.reportRenderedEntityIdentifier(…) inside the ad\n    // iframe.\n    listenForOncePromise(this.iframe, 'entity-id', true).then(info => {\n      this.element_.creativeId = info.data['id'];\n    });\n\n    this.handleOneTimeRequest_(MessageType.GET_HTML, payload => {\n      const selector = payload['selector'];\n      const attributes = payload['attributes'];\n      let content = '';\n      if (this.element_.hasAttribute('data-html-access-allowed')) {\n        content = getHtml(this.baseInstance_.win, selector, attributes);\n      }\n      return Promise.resolve(content);\n    });\n\n    this.handleOneTimeRequest_(MessageType.GET_CONSENT_STATE, () => {\n      return this.baseInstance_.getConsentState().then(consentState => {\n        return {consentState};\n      });\n    });\n\n    // Install iframe resize API.\n    this.unlisteners_.push(\n      listenFor(\n        this.iframe,\n        'embed-size',\n        (data, source, origin, event) => {\n          if (!!data['hasOverflow']) {\n            this.element_.warnOnMissingOverflow = false;\n          }\n          this.handleResize_(\n            data['height'],\n            data['width'],\n            source,\n            origin,\n            event\n          );\n        },\n        true,\n        true\n      )\n    );\n\n    this.unlisteners_.push(\n      this.baseInstance_.getAmpDoc().onVisibilityChanged(() => {\n        this.sendEmbedInfo_(this.baseInstance_.isInViewport());\n      })\n    );\n\n    this.unlisteners_.push(\n      listenFor(\n        this.iframe,\n        MessageType.USER_ERROR_IN_IFRAME,\n        data => {\n          this.userErrorForAnalytics_(data['message']);\n        },\n        true,\n        true /* opt_includingNestedWindows */\n      )\n    );\n\n    // Iframe.onload normally called by the Ad after full load.\n    const iframeLoadPromise = this.baseInstance_\n      .loadPromise(this.iframe)\n      .then(() => {\n        // Wait just a little to allow `no-content` message to arrive.\n        if (this.iframe) {\n          // Chrome does not reflect the iframe readystate.\n          this.iframe.readyState = 'complete';\n        }\n        return timer.promise(10);\n      });\n\n    // Calculate render-start and no-content signals.\n    const {\n      promise: renderStartPromise,\n      resolve: renderStartResolve,\n    } = new Deferred();\n    const {\n      promise: noContentPromise,\n      resolve: noContentResolve,\n    } = new Deferred();\n\n    if (\n      this.baseInstance_.config &&\n      this.baseInstance_.config.renderStartImplemented\n    ) {\n      // When `render-start` is supported, these signals are mutually\n      // exclusive. Whichever arrives first wins.\n      listenForOncePromise(\n        this.iframe,\n        ['render-start', 'no-content'],\n        true\n      ).then(info => {\n        const {data} = info;\n        if (data['type'] == 'render-start') {\n          this.renderStartMsgHandler_(info);\n          renderStartResolve();\n        } else {\n          this.noContent_();\n          noContentResolve();\n        }\n      });\n    } else {\n      // If `render-start` is not supported, listen to `bootstrap-loaded`.\n      // This will avoid keeping the Ad empty until it's fully loaded, which\n      // could be a long time.\n      listenForOncePromise(this.iframe, 'bootstrap-loaded', true).then(() => {\n        renderStartResolve();\n      });\n      // Likewise, no-content is observed here. However, it's impossible to\n      // assure exclusivity between `no-content` and `bootstrap-loaded` b/c\n      // `bootstrap-loaded` always arrives first.\n      listenForOncePromise(this.iframe, 'no-content', true).then(() => {\n        this.noContent_();\n        noContentResolve();\n      });\n    }\n\n    // Wait for initial load signal. Notice that this signal is not\n    // used to resolve the final layout promise because iframe may still be\n    // consuming significant network and CPU resources.\n    listenForOncePromise(this.iframe, CommonSignals.INI_LOAD, true).then(() => {\n      // TODO(dvoytenko, #7788): ensure that in-a-box \"ini-load\" message is\n      // received here as well.\n      this.baseInstance_.signals().signal(CommonSignals.INI_LOAD);\n    });\n\n    // If \"pausable-iframe\" enabled, try to make the iframe pausable. It doesn't\n    // matter here whether this will succeed or not.\n    if (isExperimentOn(this.win_, 'pausable-iframe')) {\n      makePausable(this.iframe);\n    }\n\n    this.element_.appendChild(this.iframe);\n    if (opt_isA4A && !opt_letCreativeTriggerRenderStart) {\n      // A4A writes creative frame directly to page once creative is received\n      // and therefore does not require render start message so attach and\n      // impose no loader delay.  Network is using renderStart or\n      // bootstrap-loaded to indicate ad request was sent, either way we know\n      // that occurred for Fast Fetch.\n      this.baseInstance_.renderStarted();\n      renderStartResolve();\n    } else {\n      // Set iframe initially hidden which will be removed on render-start or\n      // load, whichever is earlier.\n      setStyle(this.iframe, 'visibility', 'hidden');\n    }\n\n    Promise.race([\n      renderStartPromise,\n      iframeLoadPromise,\n      timer.promise(VISIBILITY_TIMEOUT),\n    ]).then(() => {\n      // Common signal RENDER_START invoked at toggle visibility time\n      // Note: 'render-start' msg and common signal RENDER_START are different\n      // 'render-start' msg is a way for implemented Ad to display ad earlier\n      // RENDER_START signal is a signal to inform AMP runtime and other AMP\n      // elements that the component visibility has been toggled on.\n      this.baseInstance_.renderStarted();\n      if (this.iframe) {\n        setStyle(this.iframe, 'visibility', '');\n      }\n    });\n\n    // The actual ad load is eariliest of iframe.onload event and no-content.\n    return Promise.race([iframeLoadPromise, noContentPromise]);\n  }\n\n  /**\n   * @param {string} requestType\n   * @param {function(*)} getter\n   * @private\n   */\n  handleOneTimeRequest_(requestType, getter) {\n    this.unlisteners_.push(\n      listenFor(\n        this.iframe,\n        requestType,\n        (info, source, origin) => {\n          if (!this.iframe) {\n            return;\n          }\n\n          const messageId = info[CONSTANTS.messageIdFieldName];\n          const payload = info[CONSTANTS.payloadFieldName];\n\n          getter(payload).then(content => {\n            const result = dict();\n            result[CONSTANTS.messageIdFieldName] = messageId;\n            result[CONSTANTS.contentFieldName] = content;\n            postMessageToWindows(\n              dev().assertElement(this.iframe),\n              [{win: source, origin}],\n              requestType + CONSTANTS.responseTypeSuffix,\n              result,\n              true\n            );\n          });\n        },\n        true /* opt_is3P */,\n        false /* opt_includingNestedWindows */\n      )\n    );\n  }\n\n  /**\n   * callback functon on receiving render-start\n   * @param {{data: !JsonObject}} info\n   * @private\n   */\n  renderStartMsgHandler_(info) {\n    const data = getData(info);\n    this.handleResize_(\n      data['height'],\n      data['width'],\n      info['source'],\n      info['origin'],\n      info['event']\n    );\n  }\n\n  /**\n   * Cleans up the listeners on the cross domain ad iframe and frees the\n   * iframe resource.\n   * @param {boolean=} opt_keep\n   */\n  freeXOriginIframe(opt_keep) {\n    this.cleanup_();\n    // If ask to keep the iframe.\n    // Use in the case of no-content and iframe is a master iframe.\n    if (opt_keep) {\n      return;\n    }\n    if (this.iframe) {\n      removeElement(this.iframe);\n      this.iframe = null;\n    }\n  }\n\n  /**\n   * Cleans up listeners on the ad, and apply the default UI for ad.\n   * @private\n   */\n  noContent_() {\n    if (!this.iframe) {\n      // unlayout already called\n      return;\n    }\n    this.freeXOriginIframe(this.iframe.name.indexOf('_master') >= 0);\n    this.uiHandler_.applyNoContentUI();\n  }\n\n  /**\n   * Cleans up listeners on the ad iframe.\n   * @private\n   */\n  cleanup_() {\n    this.unlisteners_.forEach(unlistener => unlistener());\n    this.unlisteners_.length = 0;\n    if (this.embedStateApi_) {\n      this.embedStateApi_.destroy();\n      this.embedStateApi_ = null;\n    }\n    if (this.inaboxPositionApi_) {\n      this.inaboxPositionApi_.destroy();\n      this.inaboxPositionApi_ = null;\n    }\n    if (this.intersectionObserver_) {\n      this.intersectionObserver_.destroy();\n      this.intersectionObserver_ = null;\n    }\n  }\n\n  /**\n   * Updates the element's dimensions to accommodate the iframe's\n   * requested dimensions. Notifies the window that request the resize\n   * of success or failure.\n   * @param {number|string|undefined} height\n   * @param {number|string|undefined} width\n   * @param {!Window} source\n   * @param {string} origin\n   * @param {!MessageEvent} event\n   * @private\n   */\n  handleResize_(height, width, source, origin, event) {\n    this.baseInstance_.getVsync().mutate(() => {\n      if (!this.iframe) {\n        // iframe can be cleanup before vsync.\n        return;\n      }\n      const iframeHeight = this.iframe./*OK*/ offsetHeight;\n      const iframeWidth = this.iframe./*OK*/ offsetWidth;\n      this.uiHandler_\n        .updateSize(height, width, iframeHeight, iframeWidth, event)\n        .then(\n          info => {\n            this.sendEmbedSizeResponse_(\n              info.success,\n              info.newWidth,\n              info.newHeight,\n              source,\n              origin\n            );\n          },\n          () => {}\n        );\n    });\n  }\n\n  /**\n   * Sends a response to the window which requested a resize.\n   * @param {boolean} success\n   * @param {number} requestedWidth\n   * @param {number} requestedHeight\n   * @param {!Window} source\n   * @param {string} origin\n   * @private\n   */\n  sendEmbedSizeResponse_(\n    success,\n    requestedWidth,\n    requestedHeight,\n    source,\n    origin\n  ) {\n    // The iframe may have been removed by the time we resize.\n    if (!this.iframe) {\n      return;\n    }\n    postMessageToWindows(\n      this.iframe,\n      [{win: source, origin}],\n      success ? 'embed-size-changed' : 'embed-size-denied',\n      dict({\n        'requestedWidth': requestedWidth,\n        'requestedHeight': requestedHeight,\n      }),\n      true\n    );\n  }\n\n  /**\n   * @param {boolean} inViewport\n   * @private\n   */\n  sendEmbedInfo_(inViewport) {\n    if (!this.embedStateApi_) {\n      return;\n    }\n    this.embedStateApi_.send(\n      'embed-state',\n      dict({\n        'inViewport': inViewport,\n        'pageHidden': !this.baseInstance_.getAmpDoc().isVisible(),\n      })\n    );\n  }\n\n  /**\n   * Retrieve iframe position entry in next animation frame.\n   * @return {*} TODO(#23582): Specify return type\n   * @private\n   */\n  getIframePositionPromise_() {\n    return this.viewport_\n      .getClientRectAsync(dev().assertElement(this.iframe))\n      .then(position => {\n        devAssert(\n          position,\n          'element clientRect should intersects with root clientRect'\n        );\n        const viewport = this.viewport_.getRect();\n        return dict({\n          'targetRect': position,\n          'viewportRect': viewport,\n        });\n      });\n  }\n\n  /** @private */\n  sendPosition_() {\n    if (this.sendPositionPending_) {\n      // Only send once in single animation frame.\n      return;\n    }\n\n    this.sendPositionPending_ = true;\n    this.getIframePositionPromise_().then(position => {\n      this.sendPositionPending_ = false;\n      this.inaboxPositionApi_.send(MessageType.POSITION, position);\n    });\n  }\n\n  /** @private */\n  registerPosition_() {\n    if (this.isInaboxPositionApiInit_) {\n      // only register to viewport scroll/resize once\n      return;\n    }\n\n    this.isInaboxPositionApiInit_ = true;\n    // Send window scroll/resize event to viewport.\n    this.unlisteners_.push(\n      this.viewport_.onScroll(\n        throttle(\n          this.win_,\n          () => {\n            this.getIframePositionPromise_().then(position => {\n              this.inaboxPositionApi_.send(MessageType.POSITION, position);\n            });\n          },\n          MIN_INABOX_POSITION_EVENT_INTERVAL\n        )\n      )\n    );\n    this.unlisteners_.push(\n      this.viewport_.onResize(() => {\n        this.getIframePositionPromise_().then(position => {\n          this.inaboxPositionApi_.send(MessageType.POSITION, position);\n        });\n      })\n    );\n  }\n\n  /**\n   * See BaseElement method.\n   * @param {boolean} inViewport\n   */\n  viewportCallback(inViewport) {\n    if (this.intersectionObserver_) {\n      this.intersectionObserver_.onViewportCallback(inViewport);\n    }\n    this.sendEmbedInfo_(inViewport);\n  }\n\n  /**\n   * See BaseElement method.\n   */\n  onLayoutMeasure() {\n    // When the framework has the need to remeasure us, our position might\n    // have changed. Send an intersection record if needed.\n    if (this.intersectionObserver_) {\n      this.intersectionObserver_.fire();\n    }\n  }\n\n  /**\n   * @param {string} message\n   * @private\n   */\n  userErrorForAnalytics_(message) {\n    if (typeof message == 'string') {\n      const e = new Error(message);\n      e.name = '3pError';\n      reportErrorToAnalytics(e, this.baseInstance_.win);\n    }\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isPausable() {\n    return (\n      isExperimentOn(this.win_, 'pausable-iframe') &&\n      !!this.iframe &&\n      isPausable(this.iframe)\n    );\n  }\n\n  /**\n   * See `BaseElement.pauseCallback()` and `BaseElement.resumeCallback()`.\n   * @param {boolean} paused\n   */\n  setPaused(paused) {\n    if (isExperimentOn(this.win_, 'pausable-iframe') && this.iframe) {\n      setPaused(this.iframe, paused);\n    }\n  }\n}\n\n// Make the class available to other late loaded amp-ad implementations\n// without them having to depend on it directly.\nAMP.AmpAdXOriginIframeHandler = AmpAdXOriginIframeHandler;\n","/* Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AmpAd3PImpl} from './amp-ad-3p-impl';\nimport {AmpAdCustom} from './amp-ad-custom';\nimport {CSS} from '../../../build/amp-ad-0.1.css';\nimport {Services} from '../../../src/services';\nimport {adConfig} from '../../../ads/_config';\nimport {getA4ARegistry} from '../../../ads/_a4a-config';\nimport {hasOwn} from '../../../src/utils/object';\nimport {userAssert} from '../../../src/log';\n\n/**\n * Construct ad network type-specific tag and script name.  Note that this\n * omits the version number and '.js' suffix for the extension script, which\n * will be handled by the extension loader.\n *\n * @param {string} type\n * @return {string}\n * @private\n */\nfunction networkImplementationTag(type) {\n  return `amp-ad-network-${type}-impl`;\n}\n\nexport class AmpAd extends AMP.BaseElement {\n  /** @override */\n  isLayoutSupported(unusedLayout) {\n    // TODO(jridgewell, #5980, #8218): ensure that unupgraded calls are not\n    // done for `isLayoutSupported`.\n    return true;\n  }\n\n  /** @override */\n  upgradeCallback() {\n    const a4aRegistry = getA4ARegistry();\n    // Block whole ad load if a consent is needed.\n    /** @const {string} */\n    const consentId = this.element.getAttribute('data-consent-notification-id');\n    const consent = consentId\n      ? Services.userNotificationManagerForDoc(this.element).then(service =>\n          service.get(consentId)\n        )\n      : Promise.resolve();\n    const type = this.element.getAttribute('type');\n    return consent.then(() => {\n      const isCustom = type === 'custom';\n      userAssert(\n        isCustom || hasOwn(adConfig, type) || hasOwn(a4aRegistry, type),\n        `Unknown ad type \"${type}\"`\n      );\n\n      // Check for the custom ad type (no ad network, self-service)\n      if (isCustom) {\n        return new AmpAdCustom(this.element);\n      }\n\n      this.win.ampAdSlotIdCounter = this.win.ampAdSlotIdCounter || 0;\n      const slotId = this.win.ampAdSlotIdCounter++;\n\n      return new Promise(resolve => {\n        this.getVsync().mutate(() => {\n          this.element.setAttribute('data-amp-slot-index', slotId);\n\n          const useRemoteHtml =\n            !(adConfig[type] || {})['remoteHTMLDisabled'] &&\n            this.win.document.querySelector('meta[name=amp-3p-iframe-src]');\n          // TODO(tdrl): Check amp-ad registry to see if they have this already.\n          // TODO(a4a-cam): Shorten this predicate.\n          if (\n            !a4aRegistry[type] ||\n            // Note that predicate execution may have side effects.\n            !a4aRegistry[type](this.win, this.element, useRemoteHtml)\n          ) {\n            // Either this ad network doesn't support Fast Fetch, its Fast\n            // Fetch implementation has explicitly opted not to handle this\n            // tag, or this page uses remote.html which is inherently\n            // incompatible with Fast Fetch. Fall back to Delayed Fetch.\n            return resolve(new AmpAd3PImpl(this.element));\n          }\n\n          const extensionTagName = networkImplementationTag(type);\n          this.element.setAttribute('data-a4a-upgrade-type', extensionTagName);\n          resolve(\n            Services.extensionsFor(this.win)\n              .loadElementClass(extensionTagName)\n              .then(ctor => new ctor(this.element))\n              .catch(error => {\n                // Work around presubmit restrictions.\n                const TAG = this.element.tagName;\n                // Report error and fallback to 3p\n                this.user().error(\n                  TAG,\n                  'Unable to load ad implementation for type ',\n                  type,\n                  ', falling back to 3p, error: ',\n                  error\n                );\n                return new AmpAd3PImpl(this.element);\n              })\n          );\n        });\n      });\n    });\n  }\n}\n\nAMP.extension('amp-ad', '0.1', AMP => {\n  AMP.registerElement('amp-ad', AmpAd, CSS);\n  AMP.registerElement('amp-embed', AmpAd);\n});\n","/* Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from '../../../src/utils/promise';\nimport {Services} from '../../../src/services';\nimport {user, userAssert} from '../../../src/log';\n\n/**\n * Store loading ads info within window to ensure it can be properly stored\n * across separately compiled binaries that share load throttling.\n * @const ID of window variable used to track 3p ads waiting to load.\n */\nconst LOADING_ADS_WIN_ID_ = '3pla';\n\n/** @private {?Promise} resolves when no 3p throttle */\nlet throttlePromise_ = null;\n/** @private {?Function} resolver for throttle promise */\nlet throttlePromiseResolver_ = null;\n\n/**\n * @param {!Window} win\n * @return {boolean} Whether 3p is currently throttled.\n */\nexport function is3pThrottled(win) {\n  return !!win[LOADING_ADS_WIN_ID_];\n}\n\n/** @return {!Promise} resolves when no 3p throttle */\nexport function waitFor3pThrottle() {\n  return throttlePromise_ || Promise.resolve();\n}\n\n/**\n * @param {!Element} element\n * @return {?number} number if explicit value should be used otherwise super\n *    default should be used.\n */\nexport function getAmpAdRenderOutsideViewport(element) {\n  const rawValue = element.getAttribute('data-loading-strategy');\n  if (rawValue == null) {\n    return null;\n  }\n  // Ad opts into lazier loading strategy where we only load ads that are\n  // at closer given number of viewports away.\n  if (rawValue == 'prefer-viewability-over-views' || rawValue == '') {\n    return 1.25;\n  }\n  const errorMessage =\n    'Value of data-loading-strategy should be a float number in range ' +\n    'of [0, 3], but got ' +\n    rawValue;\n  const viewportNumber = user().assertNumber(\n    parseFloat(rawValue),\n    errorMessage\n  );\n  userAssert(viewportNumber >= 0 && viewportNumber <= 3, errorMessage);\n  return viewportNumber;\n}\n\n/**\n * Increments loading ads count for throttling.\n * @param {!Window} win\n * @param {!Promise=} opt_loadingPromise\n */\nexport function incrementLoadingAds(win, opt_loadingPromise) {\n  if (win[LOADING_ADS_WIN_ID_] === undefined) {\n    win[LOADING_ADS_WIN_ID_] = 0;\n  }\n  win[LOADING_ADS_WIN_ID_]++;\n\n  if (!throttlePromise_) {\n    const deferred = new Deferred();\n    throttlePromise_ = deferred.promise;\n    throttlePromiseResolver_ = deferred.resolve;\n  }\n\n  Services.timerFor(win)\n    .timeoutPromise(1000, opt_loadingPromise)\n    .catch(() => {})\n    .then(() => {\n      if (!--win[LOADING_ADS_WIN_ID_]) {\n        throttlePromiseResolver_();\n        throttlePromise_ = null;\n        throttlePromiseResolver_ = null;\n      }\n    });\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dev, devAssert} from './log';\nimport {dict} from './utils/object';\nimport {internalListenImplementation} from './event-helper-listen';\nimport {parseJson} from './json';\n\n/** @const */\nconst AMP_MESSAGE_PREFIX = 'amp-';\nexport const CONSTANTS = {\n  responseTypeSuffix: '-result',\n  messageIdFieldName: 'messageId',\n  payloadFieldName: 'payload',\n  contentFieldName: 'content',\n};\n\n/** @enum {string} */\nexport const MessageType = {\n  // For amp-ad\n  SEND_EMBED_STATE: 'send-embed-state',\n  EMBED_STATE: 'embed-state',\n  SEND_EMBED_CONTEXT: 'send-embed-context',\n  EMBED_CONTEXT: 'embed-context',\n  SEND_INTERSECTIONS: 'send-intersections',\n  INTERSECTION: 'intersection',\n  EMBED_SIZE: 'embed-size',\n  EMBED_SIZE_CHANGED: 'embed-size-changed',\n  EMBED_SIZE_DENIED: 'embed-size-denied',\n  NO_CONTENT: 'no-content',\n  GET_HTML: 'get-html',\n  GET_CONSENT_STATE: 'get-consent-state',\n\n  // For the frame to be placed in full overlay mode for lightboxes\n  FULL_OVERLAY_FRAME: 'full-overlay-frame',\n  FULL_OVERLAY_FRAME_RESPONSE: 'full-overlay-frame-response',\n  CANCEL_FULL_OVERLAY_FRAME: 'cancel-full-overlay-frame',\n  CANCEL_FULL_OVERLAY_FRAME_RESPONSE: 'cancel-full-overlay-frame-response',\n\n  // For amp-inabox\n  SEND_POSITIONS: 'send-positions',\n  POSITION: 'position',\n\n  // For amp-analytics' iframe-transport\n  SEND_IFRAME_TRANSPORT_EVENTS: 'send-iframe-transport-events',\n  IFRAME_TRANSPORT_EVENTS: 'iframe-transport-events',\n  IFRAME_TRANSPORT_RESPONSE: 'iframe-transport-response',\n\n  // For user-error-in-iframe\n  USER_ERROR_IN_IFRAME: 'user-error-in-iframe',\n};\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Serialize an AMP post message. Output looks like:\n * 'amp-011481323099490{\"type\":\"position\",\"sentinel\":\"12345\",\"foo\":\"bar\"}'\n * @param {string} type\n * @param {string} sentinel\n * @param {JsonObject=} data\n * @param {?string=} rtvVersion\n * @return {string}\n */\nexport function serializeMessage(\n  type,\n  sentinel,\n  data = dict(),\n  rtvVersion = null\n) {\n  // TODO: consider wrap the data in a \"data\" field. { type, sentinal, data }\n  const message = data;\n  message['type'] = type;\n  message['sentinel'] = sentinel;\n  return AMP_MESSAGE_PREFIX + (rtvVersion || '') + JSON.stringify(message);\n}\n\n/**\n * Deserialize an AMP post message.\n * Returns null if it's not valid AMP message format.\n *\n * @param {*} message\n * @return {?JsonObject|undefined}\n */\nexport function deserializeMessage(message) {\n  if (!isAmpMessage(message)) {\n    return null;\n  }\n  const startPos = message.indexOf('{');\n  devAssert(startPos != -1, 'JSON missing in %s', message);\n  try {\n    return parseJson(message.substr(startPos));\n  } catch (e) {\n    dev().error('MESSAGING', 'Failed to parse message: ' + message, e);\n    return null;\n  }\n}\n\n/**\n *  Returns true if message looks like it is an AMP postMessage\n *  @param {*} message\n *  @return {boolean}\n */\nexport function isAmpMessage(message) {\n  return (\n    typeof message == 'string' &&\n    message.indexOf(AMP_MESSAGE_PREFIX) == 0 &&\n    message.indexOf('{') != -1\n  );\n}\n\n/** @typedef {{creativeId: string, message: string}} */\nexport let IframeTransportEvent;\n// An event, and the transport ID of the amp-analytics tags that\n// generated it. For instance if the creative with transport\n// ID 2 sends \"hi\", then an IframeTransportEvent would look like:\n// { creativeId: \"2\", message: \"hi\" }\n// If the creative with transport ID 2 sent that, and also sent \"hello\",\n// and the creative with transport ID 3 sends \"goodbye\" then an *array* of 3\n// AmpAnalyticsIframeTransportEvent would be sent to the 3p frame like so:\n// [\n//   { creativeId: \"2\", message: \"hi\" }, // An AmpAnalyticsIframeTransportEvent\n//   { creativeId: \"2\", message: \"hello\" }, // Another\n//   { creativeId: \"3\", message: \"goodbye\" } // And another\n// ]\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {assertHttpsUrl, parseUrlDeprecated} from './url';\nimport {dev, devAssert, user, userAssert} from './log';\nimport {dict} from './utils/object';\nimport {getContextMetadata} from '../src/iframe-attributes';\nimport {getMode} from './mode';\nimport {internalRuntimeVersion} from './internal-version';\nimport {setStyle} from './style';\nimport {startsWith} from './string';\nimport {tryParseJson} from './json';\nimport {urls} from './config';\n\n/** @type {!Object<string,number>} Number of 3p frames on the for that type. */\nlet count = {};\n\n/** @type {string} */\nlet overrideBootstrapBaseUrl;\n\n/** @const {string} */\nconst TAG = '3p-frame';\n\n/**\n * Produces the attributes for the ad template.\n * @param {!Window} parentWindow\n * @param {!AmpElement} element\n * @param {string=} opt_type\n * @param {Object=} opt_context\n * @return {!JsonObject} Contains\n *     - type, width, height, src attributes of <amp-ad> tag. These have\n *       precedence over the data- attributes.\n *     - data-* attributes of the <amp-ad> tag with the \"data-\" removed.\n *     - A _context object for internal use.\n */\nfunction getFrameAttributes(parentWindow, element, opt_type, opt_context) {\n  const type = opt_type || element.getAttribute('type');\n  userAssert(type, 'Attribute type required for <amp-ad>: %s', element);\n  const sentinel = generateSentinel(parentWindow);\n  let attributes = dict();\n  // Do these first, as the other attributes have precedence.\n  addDataAndJsonAttributes_(element, attributes);\n  attributes = getContextMetadata(parentWindow, element, sentinel, attributes);\n  attributes['type'] = type;\n  Object.assign(attributes['_context'], opt_context);\n  return attributes;\n}\n\n/**\n * Creates the iframe for the embed. Applies correct size and passes the embed\n * attributes to the frame via JSON inside the fragment.\n * @param {!Window} parentWindow\n * @param {!AmpElement} parentElement\n * @param {string=} opt_type\n * @param {Object=} opt_context\n * @param {!{\n *   disallowCustom,\n *   allowFullscreen,\n * }=} opt_options Options for the created iframe.\n * @return {!HTMLIFrameElement} The iframe.\n */\nexport function getIframe(\n  parentWindow,\n  parentElement,\n  opt_type,\n  opt_context,\n  {disallowCustom, allowFullscreen} = {}\n) {\n  // Check that the parentElement is already in DOM. This code uses a new and\n  // fast `isConnected` API and thus only used when it's available.\n  devAssert(\n    parentElement['isConnected'] === undefined ||\n      parentElement['isConnected'] === true,\n    'Parent element must be in DOM'\n  );\n  const attributes = getFrameAttributes(\n    parentWindow,\n    parentElement,\n    opt_type,\n    opt_context\n  );\n  const iframe = /** @type {!HTMLIFrameElement} */ (parentWindow.document.createElement(\n    'iframe'\n  ));\n\n  if (!count[attributes['type']]) {\n    count[attributes['type']] = 0;\n  }\n  count[attributes['type']] += 1;\n\n  const baseUrl = getBootstrapBaseUrl(parentWindow, undefined, disallowCustom);\n  const host = parseUrlDeprecated(baseUrl).hostname;\n  // This name attribute may be overwritten if this frame is chosen to\n  // be the master frame. That is ok, as we will read the name off\n  // for our uses before that would occur.\n  // @see https://github.com/ampproject/amphtml/blob/master/3p/integration.js\n  const name = JSON.stringify(\n    dict({\n      'host': host,\n      'type': attributes['type'],\n      // https://github.com/ampproject/amphtml/pull/2955\n      'count': count[attributes['type']],\n      'attributes': attributes,\n    })\n  );\n\n  iframe.src = baseUrl;\n  iframe.ampLocation = parseUrlDeprecated(baseUrl);\n  iframe.name = name;\n  // Add the check before assigning to prevent IE throw Invalid argument error\n  if (attributes['width']) {\n    iframe.width = attributes['width'];\n  }\n  if (attributes['height']) {\n    iframe.height = attributes['height'];\n  }\n  if (attributes['title']) {\n    iframe.title = attributes['title'];\n  }\n  if (allowFullscreen) {\n    iframe.setAttribute('allowfullscreen', 'true');\n  }\n  iframe.setAttribute('scrolling', 'no');\n  setStyle(iframe, 'border', 'none');\n  /** @this {!Element} */\n  iframe.onload = function() {\n    // Chrome does not reflect the iframe readystate.\n    this.readyState = 'complete';\n  };\n  // Block synchronous XHR in ad. These are very rare, but super bad for UX\n  // as they block the UI thread for the arbitrary amount of time until the\n  // request completes.\n  iframe.setAttribute('allow', \"sync-xhr 'none';\");\n  const excludeFromSandbox = ['facebook'];\n  if (!excludeFromSandbox.includes(opt_type)) {\n    applySandbox(iframe);\n  }\n  iframe.setAttribute(\n    'data-amp-3p-sentinel',\n    attributes['_context']['sentinel']\n  );\n  return iframe;\n}\n\n/**\n * Copies data- attributes from the element into the attributes object.\n * Removes the data- from the name and capitalizes after -. If there\n * is an attribute called json, parses the JSON and adds it to the\n * attributes.\n * @param {!Element} element\n * @param {!JsonObject} attributes The destination.\n * visibleForTesting\n */\nexport function addDataAndJsonAttributes_(element, attributes) {\n  const {dataset} = element;\n  for (const name in dataset) {\n    // data-vars- is reserved for amp-analytics\n    // see https://github.com/ampproject/amphtml/blob/master/extensions/amp-analytics/analytics-vars.md#variables-as-data-attribute\n    if (!startsWith(name, 'vars')) {\n      attributes[name] = dataset[name];\n    }\n  }\n  const json = element.getAttribute('json');\n  if (json) {\n    const obj = tryParseJson(json);\n    if (obj === undefined) {\n      throw user().createError(\n        'Error parsing JSON in json attribute in element %s',\n        element\n      );\n    }\n    for (const key in obj) {\n      attributes[key] = obj[key];\n    }\n  }\n}\n\n/**\n * Preloads URLs related to the bootstrap iframe.\n * @param {!Window} win\n * @param {!./preconnect.Preconnect} preconnect\n * @param {boolean=} opt_disallowCustom whether 3p url should not use meta tag.\n */\nexport function preloadBootstrap(win, preconnect, opt_disallowCustom) {\n  const url = getBootstrapBaseUrl(win, undefined, opt_disallowCustom);\n  preconnect.preload(url, 'document');\n\n  // While the URL may point to a custom domain, this URL will always be\n  // fetched by it.\n  const scriptUrl = getMode().localDev\n    ? getAdsLocalhost(win) + '/dist.3p/current/integration.js'\n    : `${urls.thirdParty}/${internalRuntimeVersion()}/f.js`;\n  preconnect.preload(scriptUrl, 'script');\n}\n\n/**\n * Returns the base URL for 3p bootstrap iframes.\n * @param {!Window} parentWindow\n * @param {boolean=} opt_strictForUnitTest\n * @param {boolean=} opt_disallowCustom whether 3p url should not use meta tag.\n * @return {string}\n * @visibleForTesting\n */\nexport function getBootstrapBaseUrl(\n  parentWindow,\n  opt_strictForUnitTest,\n  opt_disallowCustom\n) {\n  const customBootstrapBaseUrl = opt_disallowCustom\n    ? null\n    : getCustomBootstrapBaseUrl(parentWindow, opt_strictForUnitTest);\n  return customBootstrapBaseUrl || getDefaultBootstrapBaseUrl(parentWindow);\n}\n\n/**\n * @param {string} url\n */\nexport function setDefaultBootstrapBaseUrlForTesting(url) {\n  overrideBootstrapBaseUrl = url;\n}\n\n/**\n * @param {*} win\n */\nexport function resetBootstrapBaseUrlForTesting(win) {\n  win.__AMP_DEFAULT_BOOTSTRAP_SUBDOMAIN = undefined;\n}\n\n/**\n * Returns the default base URL for 3p bootstrap iframes.\n * @param {!Window} parentWindow\n * @param {string=} opt_srcFileBasename\n * @return {string}\n */\nexport function getDefaultBootstrapBaseUrl(parentWindow, opt_srcFileBasename) {\n  const srcFileBasename = opt_srcFileBasename || 'frame';\n  if (getMode().localDev || getMode().test) {\n    return getDevelopmentBootstrapBaseUrl(parentWindow, srcFileBasename);\n  }\n  // Ensure same sub-domain is used despite potentially different file.\n  parentWindow.__AMP_DEFAULT_BOOTSTRAP_SUBDOMAIN =\n    parentWindow.__AMP_DEFAULT_BOOTSTRAP_SUBDOMAIN ||\n    getSubDomain(parentWindow);\n  return (\n    'https://' +\n    parentWindow.__AMP_DEFAULT_BOOTSTRAP_SUBDOMAIN +\n    `.${urls.thirdPartyFrameHost}/${internalRuntimeVersion()}/` +\n    `${srcFileBasename}.html`\n  );\n}\n\n/**\n * Function to return the development boostrap base URL\n * @param {!Window} parentWindow\n * @param {string} srcFileBasename\n * @return {string}\n */\nexport function getDevelopmentBootstrapBaseUrl(parentWindow, srcFileBasename) {\n  return (\n    overrideBootstrapBaseUrl ||\n    getAdsLocalhost(parentWindow) +\n      '/dist.3p/' +\n      (getMode().minified\n        ? `${internalRuntimeVersion()}/${srcFileBasename}`\n        : `current/${srcFileBasename}.max`) +\n      '.html'\n  );\n}\n\n/**\n * @param {!Window} win\n * @return {string}\n */\nfunction getAdsLocalhost(win) {\n  let adsUrl = urls.thirdParty; // local dev with a non-localhost server\n  if (adsUrl == 'https://3p.ampproject.net') {\n    adsUrl = 'http://ads.localhost'; // local dev with a localhost server\n  }\n  return adsUrl + ':' + (win.location.port || win.parent.location.port);\n}\n\n/**\n * Sub domain on which the 3p iframe will be hosted.\n * Because we only calculate the URL once per page, this function is only\n * called once and hence all frames on a page use the same URL.\n * @param {!Window} win\n * @return {string}\n * @visibleForTesting\n */\nexport function getSubDomain(win) {\n  return 'd-' + getRandom(win);\n}\n\n/**\n * Generates a random non-negative integer.\n * @param {!Window} win\n * @return {string}\n */\nexport function getRandom(win) {\n  let rand;\n  if (win.crypto && win.crypto.getRandomValues) {\n    // By default use 2 32 bit integers.\n    const uint32array = new Uint32Array(2);\n    win.crypto.getRandomValues(uint32array);\n    rand = String(uint32array[0]) + uint32array[1];\n  } else {\n    // Fall back to Math.random.\n    rand = String(win.Math.random()).substr(2) + '0';\n  }\n  return rand;\n}\n\n/**\n * Returns the custom base URL for 3p bootstrap iframes if it exists.\n * Otherwise null.\n * @param {!Window} parentWindow\n * @param {boolean=} opt_strictForUnitTest\n * @return {?string}\n */\nfunction getCustomBootstrapBaseUrl(parentWindow, opt_strictForUnitTest) {\n  const meta = parentWindow.document.querySelector(\n    'meta[name=\"amp-3p-iframe-src\"]'\n  );\n  if (!meta) {\n    return null;\n  }\n  const url = assertHttpsUrl(meta.getAttribute('content'), meta);\n  userAssert(\n    url.indexOf('?') == -1,\n    '3p iframe url must not include query string %s in element %s.',\n    url,\n    meta\n  );\n  // This is not a security primitive, we just don't want this to happen in\n  // practice. People could still redirect to the same origin, but they cannot\n  // redirect to the proxy origin which is the important one.\n  const parsed = parseUrlDeprecated(url);\n  userAssert(\n    (parsed.hostname == 'localhost' && !opt_strictForUnitTest) ||\n      parsed.origin != parseUrlDeprecated(parentWindow.location.href).origin,\n    '3p iframe url must not be on the same origin as the current document ' +\n      '%s (%s) in element %s. See https://github.com/ampproject/amphtml' +\n      '/blob/master/spec/amp-iframe-origin-policy.md for details.',\n    url,\n    parsed.origin,\n    meta\n  );\n  return `${url}?${internalRuntimeVersion()}`;\n}\n\n/**\n * Applies a sandbox to the iframe, if the required flags can be allowed.\n * @param {!Element} iframe\n * @visibleForTesting\n */\nexport function applySandbox(iframe) {\n  if (!iframe.sandbox || !iframe.sandbox.supports) {\n    return; // Can't feature detect support\n  }\n  // If these flags are not supported by the UA we don't apply any\n  // sandbox.\n  const requiredFlags = [\n    // This only allows navigation when user interacts and thus prevents\n    // ads from auto navigating the user.\n    'allow-top-navigation-by-user-activation',\n    // Crucial because otherwise even target=_blank opened links are\n    // still sandboxed which they may not expect.\n    'allow-popups-to-escape-sandbox',\n  ];\n  // These flags are not feature detected. Put stuff here where either\n  // they have always been supported or support is not crucial.\n  const otherFlags = [\n    'allow-forms',\n    // We should consider turning this off! But since the top navigation\n    // issue is the big one, we'll leave this allowed for now.\n    'allow-modals',\n    // Give access to raw mouse movements.\n    'allow-pointer-lock',\n    // This remains subject to popup blocking, it just makes it supported\n    // at all.\n    'allow-popups',\n    // This applies inside the iframe and is crucial to not break the web.\n    'allow-same-origin',\n    'allow-scripts',\n  ];\n  // Not allowed\n  // - allow-top-navigation\n  // - allow-orientation-lock\n  // - allow-pointer-lock\n  // - allow-presentation\n  for (let i = 0; i < requiredFlags.length; i++) {\n    const flag = requiredFlags[i];\n    if (!iframe.sandbox.supports(flag)) {\n      dev().info(TAG, \"Iframe doesn't support %s\", flag);\n      return;\n    }\n  }\n  iframe.sandbox = requiredFlags.join(' ') + ' ' + otherFlags.join(' ');\n}\n\n/**\n * Returns a randomized sentinel value for 3p iframes.\n * The format is \"%d-%d\" with the first value being the depth of current\n * window in the window hierarchy and the second a random integer.\n * @param {!Window} parentWindow\n * @return {string}\n * @visibleForTesting\n */\nexport function generateSentinel(parentWindow) {\n  let windowDepth = 0;\n  for (let win = parentWindow; win && win != win.parent; win = win.parent) {\n    windowDepth++;\n  }\n  return String(windowDepth) + '-' + getRandom(parentWindow);\n}\n\n/**\n * Resets the count of each 3p frame type\n * @visibleForTesting\n */\nexport function resetCountForTesting() {\n  count = {};\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\nimport {adConfig} from '../ads/_config';\nimport {dev} from '../src/log';\n\n/**\n * @param {AMP.BaseElement} adElement\n * @return {!Promise<string|undefined>} A promise for a CID or undefined if\n *     - the ad network does not request one or\n *     - `amp-analytics` which provides the CID service was not installed.\n */\nexport function getAdCid(adElement) {\n  const config = adConfig[adElement.element.getAttribute('type')];\n  if (!config || !config['clientIdScope']) {\n    return Promise.resolve();\n  }\n  return getOrCreateAdCid(\n    adElement.getAmpDoc(),\n    config['clientIdScope'],\n    config['clientIdCookieName']\n  );\n}\n\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampDoc\n * @param {string} clientIdScope\n * @param {string=} opt_clientIdCookieName\n * @param {number=} opt_timeout\n * @return {!Promise<string|undefined>} A promise for a CID or undefined.\n */\nexport function getOrCreateAdCid(\n  ampDoc,\n  clientIdScope,\n  opt_clientIdCookieName,\n  opt_timeout\n) {\n  const timeout =\n    isNaN(opt_timeout) || opt_timeout == null ? 1000 : opt_timeout;\n  const cidPromise = Services.cidForDoc(ampDoc).then(cidService => {\n    if (!cidService) {\n      return;\n    }\n    return cidService\n      .get(\n        {\n          scope: dev().assertString(clientIdScope),\n          createCookieIfNotPresent: true,\n          cookieName: opt_clientIdCookieName,\n        },\n        Promise.resolve(undefined)\n      )\n      .catch(error => {\n        // Not getting a CID is not fatal.\n        dev().error('AD-CID', error);\n        return undefined;\n      });\n  });\n  // The CID should never be crucial for an ad. If it does not come within\n  // 1 second, assume it will never arrive.\n  return Services.timerFor(ampDoc.win)\n    .timeoutPromise(timeout, cidPromise, 'cid timeout')\n    .catch(error => {\n      // Timeout is not fatal.\n      dev().warn('AD-CID', error);\n      return undefined;\n    });\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {computedStyle} from './style';\nimport {dev} from './log';\nimport {getParentWindowFrameElement} from './service';\n\nconst AD_CONTAINER_PROP = '__AMP__AD_CONTAINER';\n\n/**\n * Tags that are allowed to have fixed positioning\n * @const {!Object<string, boolean>}\n */\nconst CONTAINERS = {\n  'AMP-FX-FLYING-CARPET': true,\n  'AMP-LIGHTBOX': true,\n  'AMP-STICKY-AD': true,\n  'AMP-LIGHTBOX-GALLERY': true,\n};\n\n/**\n * Determines if an element is fixed-positioned.\n * OK to use, because it's only called from onLayoutMeasure\n * @param {!Element} el\n * @param {!Window} win\n * @return {boolean}\n */\nfunction isPositionFixed(el, win) {\n  const {position} = computedStyle(win, el);\n  // We consider sticky positions as fixed, since they can be fixed.\n  return position == 'fixed' || position == 'sticky';\n}\n\n/**\n * @param {!Element} element\n * @param {!Window} win\n * @return {boolean} whether the element position is allowed. If the element\n * belongs to CONTAINERS, it is allowed to be position fixed.\n * If the element has a position fixed ancestor, it is not allowed.\n * This should only be called when a layout on the page was just forced\n * anyway.\n */\nexport function isAdPositionAllowed(element, win) {\n  let hasFixedAncestor = false;\n  let containers = 0;\n  let el = element;\n  do {\n    if (CONTAINERS[el.tagName]) {\n      // The containers must not themselves be contained in a fixed-position\n      // element. Continue the search.\n      containers++;\n      hasFixedAncestor = false;\n    } else if (isPositionFixed(dev().assertElement(el), win)) {\n      // Because certain blessed elements may contain a position fixed\n      // container (which contain an ad), we continue to search the\n      // ancestry tree.\n      hasFixedAncestor = true;\n    }\n    el = el.parentElement;\n  } while (el && el.tagName != 'BODY');\n  return !hasFixedAncestor && containers <= 1;\n}\n\n/**\n * Returns the blessed container element tagName if the ad is contained by one.\n * This is called during layout measure.\n * @param {!Element} element\n * @return {?string}\n */\nexport function getAdContainer(element) {\n  if (element[AD_CONTAINER_PROP] === undefined) {\n    let el = element.parentElement;\n    while (el && el.tagName != 'BODY') {\n      if (CONTAINERS[el.tagName]) {\n        return (element[AD_CONTAINER_PROP] = el.tagName);\n      }\n      el = el.parentElement;\n    }\n    element[AD_CONTAINER_PROP] = null;\n  }\n  return element[AD_CONTAINER_PROP];\n}\n\n/**\n * Gets the resource ID of the amp-ad element containing the passed node.\n * If there is no containing amp-ad tag, then null will be returned.\n * TODO(jonkeller): Investigate whether non-A4A use case is needed. Issue 11436\n * @param {!Element} node\n * @param {!Window} topWin\n * @return {?string}\n */\nexport function getAmpAdResourceId(node, topWin) {\n  try {\n    const frameParent = getParentWindowFrameElement(node, topWin).parentElement;\n    if (frameParent.nodeName == 'AMP-AD') {\n      return String(frameParent.getResourceId());\n    }\n  } catch (e) {}\n  // Whether we entered the catch above (e.g. due to attempt to access\n  // across xdomain boundary), or failed to enter the if further above, the\n  // node is not within a friendly amp-ad tag. So, there is no amp-ad\n  // resource ID. How to handle that is up to the caller, but see TODO above.\n  return null;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common AMP events.\n * @enum {string}\n */\nexport const AmpEvents = {\n  DOM_UPDATE: 'amp:dom-update',\n  FORM_DIRTINESS_CHANGE: 'amp:form-dirtiness-change',\n  FORM_VALUE_CHANGE: 'amp:form-value-change',\n  VISIBILITY_CHANGE: 'amp:visibilitychange', // https://github.com/ampproject/amphtml/blob/master/ads/README.md#page-visibility\n  // The following codes are only used for testing.\n  // TODO(choumx): Move these to a separate enum so they can be DCE'd.\n  ATTACHED: 'amp:attached',\n  STUBBED: 'amp:stubbed',\n  LOAD_START: 'amp:load:start',\n  LOAD_END: 'amp:load:end',\n  ERROR: 'amp:error',\n  SIZE_CHANGED: 'amp:size-changed',\n};\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\n\n/**\n * Helper method to trigger analytics event if amp-analytics is available.\n * TODO: Do not expose this function\n * @param {!Element} target\n * @param {string} eventType\n * @param {!JsonObject=} opt_vars A map of vars and their values.\n */\nexport function triggerAnalyticsEvent(target, eventType, opt_vars) {\n  Services.analyticsForDocOrNull(target).then(analytics => {\n    if (!analytics) {\n      return;\n    }\n    analytics.triggerEventForTarget(target, eventType, opt_vars);\n  });\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Commonly used signals across different elements and documents.\n * @enum {string}\n */\nexport const CommonSignals = {\n  /**\n   * The element has been upgraded from ElementStub to its real implementation.\n   */\n  UPGRADED: 'upgraded',\n\n  /**\n   * The element has been built.\n   */\n  BUILT: 'built',\n\n  /**\n   * The element has started loading.\n   * LOAD_START triggers at the start of the layoutCallback.\n   */\n  LOAD_START: 'load-start',\n\n  /**\n   * Rendering has been confirmed to have been started.\n   * It is a signal to indicate meaningful display (e.g. text could be displayed\n   * CSS is correctly installed/applied).\n   *\n   * Elements can optionally implement RENDER_START signal. (e.g. ad, shadowdoc)\n   * if it want to define its own meaningful display time and toggle visibility.\n   *\n   * Simpler elements's RENDER_START can be equal to the start of the\n   * buildCallback\n   */\n  RENDER_START: 'render-start',\n\n  /**\n   * The element has been loaded.\n   * LOAD_END triggers at the end of the layoutCallback.\n   *\n   */\n  LOAD_END: 'load-end',\n\n  /**\n   * The initial contents of an element/document/embed have been loaded.\n   * INI_LOAD is an optional signal, implemented by ads, story, and elements\n   * that consist of other resources.\n   * It instructs that all critical resources has been loaded, and can be used\n   * for more accurate visibility measurement.\n   * When an element doesn't consist multiple child resources, LOAD_END signal\n   * can be used to indicate resource load completion.\n   * Note: Based on the implementation, INI_LOAD can trigger before or after\n   * LOAD_END.\n   */\n  INI_LOAD: 'ini-load',\n\n  /**\n   * The element has been unlaid out.\n   */\n  UNLOAD: 'unload',\n};\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex'];\n\nconst cdnProxyRegex =\n  typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex'];\n\n/** @type {!Object<string, string|boolean|RegExp|Array<RegExp>>} */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex: thirdPartyFrameRegex || /^d-\\d+\\.ampproject\\.net$/,\n  cdn: env['cdnUrl'] || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex:\n    cdnProxyRegex || /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] || 'https://amp-error-reporting.appspot.com/r',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/master/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.dev$/,\n  ],\n};\n\nexport const config = {\n  urls,\n};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This file will be imported by 3P scripts.\n\n/**\n * Possible consent policy state to proceed with.\n * @enum {number}\n */\nexport const CONSENT_POLICY_STATE = {\n  // Enum value has external dependency. Please do not change existing value.\n  // If new values are added, please notify the AMP for Ads team to assure\n  // correct Real Time Config behavior is maintained for Fast Fetch.\n  SUFFICIENT: 1,\n  INSUFFICIENT: 2,\n  UNKNOWN_NOT_REQUIRED: 3,\n  UNKNOWN: 4,\n};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONSENT_POLICY_STATE, // eslint-disable-line no-unused-vars\n} from './consent-state';\nimport {Services} from './services';\nimport {user} from './log';\n\n/**\n * Returns a promise that resolve when all consent state the policy wait\n * for resolve. Or if consent service is not available.\n * @param {!Element|!ShadowRoot} element\n * @param {string=} policyId\n * @return {!Promise<?CONSENT_POLICY_STATE>}\n */\nexport function getConsentPolicyState(element, policyId = 'default') {\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    consentPolicy => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.whenPolicyResolved(/** @type {string} */ (policyId));\n    }\n  );\n}\n\n/**\n * Returns a promise that resolves to a sharedData retrieved from consent\n * remote endpoint.\n * @param {!Element|!ShadowRoot} element\n * @param {string} policyId\n * @return {!Promise<?Object>}\n */\nexport function getConsentPolicySharedData(element, policyId) {\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    consentPolicy => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.getMergedSharedData(\n        /** @type {string} */ (policyId)\n      );\n    }\n  );\n}\n\n/**\n * TODO(zhouyx): Combine with getConsentPolicyState and return a consentInfo\n * object.\n * @param {!Element|!ShadowRoot} element\n * @param {string} policyId\n * @return {!Promise<string>}\n */\nexport function getConsentPolicyInfo(element, policyId) {\n  // Return the stored consent string.\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    consentPolicy => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.getConsentStringInfo(\n        /** @type {string} */ (policyId)\n      );\n    }\n  );\n}\n\n/**\n * Determine if an element needs to be blocked by consent based on metaTags.\n * @param {*} element\n * @return {boolean}\n */\nexport function shouldBlockOnConsentByMeta(element) {\n  const ampdoc = element.getAmpDoc();\n  let content = Services.documentInfoForDoc(ampdoc).metaTags[\n    'amp-consent-blocking'\n  ];\n\n  if (!content) {\n    return false;\n  }\n\n  // validator enforce uniqueness of <meta name='amp-consent-blocking'>\n  // content will not be an array.\n  if (typeof content !== 'string') {\n    user().error(\n      'CONSENT',\n      'Invalid amp-consent-blocking value, ignore meta tag'\n    );\n    return false;\n  }\n\n  // Handles whitespace\n  content = content\n    .toUpperCase()\n    .replace(/\\s/g, '')\n    .split(',');\n\n  if (content.includes(element.tagName)) {\n    return true;\n  }\n  return false;\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssEscape} from '../third_party/css-escape/css-escape';\nimport {devAssert} from './log';\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nexport function assertIsName(name) {\n  devAssert(/^[\\w-]+$/.test(name));\n}\n\n/**\n * @type {boolean|undefined}\n */\nlet scopeSelectorSupported;\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\nexport function isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return (scopeSelectorSupported = testScopeSelector(el));\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\nfunction testScopeSelector(el) {\n  try {\n    const doc = el.ownerDocument;\n    const testElement = doc.createElement('div');\n    const testChild = doc.createElement('div');\n    testElement.appendChild(testChild);\n    // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n    return testElement./*OK*/ querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\nexport function prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, `$&${distribute} `);\n}\n\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n */\nexport function escapeCssSelectorIdent(ident) {\n  return cssEscape(ident);\n}\n\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\nexport function escapeCssSelectorNth(ident) {\n  const escaped = String(ident);\n  // Ensure it doesn't close the nth-child psuedo class.\n  devAssert(escaped.indexOf(')') === -1);\n  return escaped;\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether the document is ready.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isDocumentReady(doc) {\n  return doc.readyState != 'loading' && doc.readyState != 'uninitialized';\n}\n\n/**\n * Whether the document has loaded all the css and sub-resources.\n * @param {!Document} doc\n * @return {boolean}\n */\nfunction isDocumentComplete(doc) {\n  return doc.readyState == 'complete';\n}\n\n/**\n * Calls the callback when document is ready.\n * @param {!Document} doc\n * @param {function(!Document)} callback\n */\nexport function onDocumentReady(doc, callback) {\n  onDocumentState(doc, isDocumentReady, callback);\n}\n\n/**\n * Calls the callback when document's state satisfies the stateFn.\n * @param {!Document} doc\n * @param {function(!Document):boolean} stateFn\n * @param {function(!Document)} callback\n */\nfunction onDocumentState(doc, stateFn, callback) {\n  let ready = stateFn(doc);\n  if (ready) {\n    callback(doc);\n  } else {\n    const readyListener = () => {\n      if (stateFn(doc)) {\n        if (!ready) {\n          ready = true;\n          callback(doc);\n        }\n        doc.removeEventListener('readystatechange', readyListener);\n      }\n    };\n    doc.addEventListener('readystatechange', readyListener);\n  }\n}\n\n/**\n * Returns a promise that is resolved when document is ready.\n * @param {!Document} doc\n * @return {!Promise<!Document>}\n */\nexport function whenDocumentReady(doc) {\n  return new Promise(resolve => {\n    onDocumentReady(doc, resolve);\n  });\n}\n\n/**\n * Returns a promise that is resolved when document is complete.\n * @param {!Document} doc\n * @return {!Promise<!Document>}\n */\nexport function whenDocumentComplete(doc) {\n  return new Promise(resolve => {\n    onDocumentState(doc, isDocumentComplete, resolve);\n  });\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './utils/promise';\nimport {\n  assertIsName,\n  isScopeSelectorSupported,\n  prependSelectorsWith,\n} from './css';\nimport {dev, devAssert} from './log';\nimport {dict} from './utils/object';\nimport {includes, startsWith} from './string';\nimport {toWin} from './types';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise(resolve => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise(resolve => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node} after\n */\nexport function insertAfterOrAtStart(root, element, after) {\n  const before = after ? after.nextSibling : root.firstChild;\n  root.insertBefore(element, before);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (n = node; !!n.parentNode && !isShadowRoot(n); n = n.parentNode) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {*} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  // TODO(#22733): remove in preference to dom's `rootNodeFor`.\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\nexport function closest(element, callback, opt_stopAt) {\n  for (let el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\nexport function closestNode(node, callback) {\n  for (let n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\nexport function closestAncestorElementBySelector(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  return closest(element, el => {\n    return matches(el, selector);\n  });\n}\n\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\nexport function ancestorElements(child, predicate) {\n  const ancestors = [];\n  for (\n    let ancestor = child.parentElement;\n    ancestor;\n    ancestor = ancestor.parentElement\n  ) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n  return ancestors;\n}\n\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\nexport function ancestorElementsByTag(child, tagName) {\n  assertIsName(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, el => {\n    return el.tagName == tagName;\n  });\n}\n\n/**\n * Finds the first child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function childElement(parent, callback) {\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\nexport function childElements(parent, callback) {\n  const children = [];\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function lastChildElement(parent, callback) {\n  for (\n    let child = parent.lastElementChild;\n    child;\n    child = child.previousElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\nexport function childNodes(parent, callback) {\n  const nodes = [];\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function childElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelector(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function lastChildElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return lastChildElement(parent, el => {\n    return el.hasAttribute(attr);\n  });\n}\n\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {?Element}\n */\nexport function childElementByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelector(parent, `> ${tagName}`);\n}\n\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> ${tagName}`);\n}\n\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\nexport function matches(el, selector) {\n  const matcher =\n    el.matches ||\n    el.webkitMatchesSelector ||\n    el.mozMatchesSelector ||\n    el.msMatchesSelector ||\n    el.oMatchesSelector;\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n  return false; // IE8 always returns false.\n}\n\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\nexport function elementByTag(element, tagName) {\n  assertIsName(tagName);\n  return element./*OK*/ querySelector(tagName);\n}\n\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nfunction scopedQuerySelectionFallback(root, selector) {\n  const unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  const scopedSelector = prependSelectorsWith(selector, `.${unique}`);\n  const elements = root./*OK*/ querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {?Element}\n */\nexport function scopedQuerySelector(root, selector) {\n  if (isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelector(prependSelectorsWith(selector, ':scope'));\n  }\n\n  // Only IE.\n  const fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nexport function scopedQuerySelectorAll(root, selector) {\n  if (isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelectorAll(\n      prependSelectorsWith(selector, ':scope')\n    );\n  }\n\n  // Only IE.\n  return scopedQuerySelectionFallback(root, selector);\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!Element} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || (key => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    startsWith(tag, 'AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!Element} element\n * @return {!Promise<!Element>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(element);\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Replacement for `Element.requestFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n * @param {!Element} element\n */\nexport function fullscreenEnter(element) {\n  const requestFs =\n    element.requestFullscreen ||\n    element.requestFullScreen ||\n    element.webkitRequestFullscreen ||\n    element.webkitEnterFullscreen ||\n    element.msRequestFullscreen ||\n    element.mozRequestFullScreen;\n  if (requestFs) {\n    requestFs.call(element);\n  }\n}\n\n/**\n * Replacement for `Document.exitFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/exitFullscreen\n * @param {!Element} element\n */\nexport function fullscreenExit(element) {\n  const elementBoundExit =\n    element.cancelFullScreen ||\n    element.exitFullscreen ||\n    element.webkitExitFullscreen ||\n    element.webkitCancelFullScreen ||\n    element.mozCancelFullScreen ||\n    element.msExitFullscreen;\n  if (elementBoundExit) {\n    elementBoundExit.call(element);\n    return;\n  }\n  const {ownerDocument} = element;\n  if (!ownerDocument) {\n    return;\n  }\n  const docBoundExit =\n    ownerDocument.cancelFullScreen ||\n    ownerDocument.exitFullscreencancelFullScreen ||\n    ownerDocument.webkitExitFullscreencancelFullScreen ||\n    ownerDocument.webkitCancelFullScreencancelFullScreen ||\n    ownerDocument.mozCancelFullScreencancelFullScreen ||\n    ownerDocument.msExitFullscreen;\n  if (docBoundExit) {\n    docBoundExit.call(ownerDocument);\n  }\n}\n\n/**\n * Replacement for `Document.fullscreenElement`.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenElement\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isFullscreenElement(element) {\n  const {webkitDisplayingFullscreen} = element;\n  if (webkitDisplayingFullscreen !== undefined) {\n    return webkitDisplayingFullscreen;\n  }\n  const {ownerDocument} = element;\n  if (!ownerDocument) {\n    return false;\n  }\n  const fullscreenElement =\n    ownerDocument.fullscreenElement ||\n    ownerDocument.webkitFullscreenElement ||\n    ownerDocument.mozFullScreenElement ||\n    ownerDocument.webkitCurrentFullScreenElement;\n  return fullscreenElement == element;\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!Element} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport {\n  getAmpdoc,\n  getExistingServiceForDocInEmbedScope,\n  getService,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n  getTopWindow,\n} from './service';\nimport {toWin} from './types';\nimport {userAssert} from './log';\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementService(win, id, extension, opt_element) {\n  return getElementServiceIfAvailable(win, id, extension, opt_element).then(\n    service => assertService(service, id, extension)\n  );\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(win, id, extension, opt_element) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(win, id, extension, opt_element);\n}\n\n/**\n * @param {!Window} win\n * @param {string} elementName Name of an extended custom element.\n * @return {boolean} Whether this element is scheduled to be loaded.\n */\nfunction isElementScheduled(win, elementName) {\n  // Set in custom-element.js\n  if (!win.__AMP_EXTENDED_ELEMENTS) {\n    return false;\n  }\n  return !!win.__AMP_EXTENDED_ELEMENTS[elementName];\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then(service => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .waitForBodyOpen()\n    .then(() =>\n      waitForExtensionIfPresent(ampdoc.win, extension, ampdoc.win.document.head)\n    )\n    .then(() => {\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      } else if (isElementScheduled(ampdoc.win, extension)) {\n        return getServicePromiseForDoc(element, id);\n      }\n      return null;\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getExistingServiceForDocInEmbedScope(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  const win = toWin(element.ownerDocument.defaultView);\n  const topWin = getTopWindow(win);\n  // In embeds, doc services are stored on the embed window.\n  if (win !== topWin) {\n    return getElementServicePromiseOrNull(win, id, extension);\n  } else {\n    // Only fallback to element's ampdoc (top-level) if not embedded.\n    return getElementServiceIfAvailableForDoc(element, id, extension);\n  }\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (userAssert(\n    service,\n    'Service %s was requested to be provided through %s, ' +\n      'but %s is not loaded in the current page. To fix this ' +\n      'problem load the JavaScript file for %s in this page.',\n    id,\n    extension,\n    extension,\n    extension\n  ));\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Array<string>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  const scripts = {};\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const name =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    scripts[name] = true;\n  }\n  return Object.keys(scripts);\n}\n\n/**\n * Waits for body to be present then verifies that an extension script is\n * present in head for installation.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} extensionId\n * @return {!Promise<boolean>}\n */\nexport function isExtensionScriptInNode(ampdoc, extensionId) {\n  return ampdoc.waitForBodyOpen().then(() => {\n    return extensionScriptInNode(ampdoc.getHeadNode(), extensionId);\n  });\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @param {string} extensionId\n * @return {boolean}\n * @private\n */\nfunction extensionScriptInNode(head, extensionId) {\n  return extensionScriptsInNode(head).includes(extensionId);\n}\n\n/**\n * Waits for an extension if its script is present\n * @param {!Window} win\n * @param {string} extension\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Promise}\n * @private\n */\nfunction waitForExtensionIfPresent(win, extension, head) {\n  /**\n   * If there is an extension script wait for it to load before trying\n   * to get the service. Prevents a race condition when everything but\n   * the extensions is in cache. If there is no script then it's either\n   * not present, or the service was defined by a test. In those cases\n   * we don't wait around for an extension that does not exist.\n   */\n\n  // TODO(jpettitt) investigate registerExtension to short circuit\n  // the dom call in extensionScriptsInNode()\n  if (!extensionScriptInNode(head, extension)) {\n    return Promise.resolve();\n  }\n\n  const extensions = getService(win, 'extensions');\n  return /** @type {!Promise<?Object>} */ (extensions.waitForExtension(\n    win,\n    extension\n  ));\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(win, id, extension, opt_element) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => waitForExtensionIfPresent(win, extension, win.document.head))\n    .then(() => {\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      } else if (isElementScheduled(win, extension)) {\n        return getServicePromise(win, id);\n      }\n      return null;\n    });\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AmpEvents} from './amp-events';\nimport {Services} from './services';\nimport {\n  USER_ERROR_SENTINEL,\n  dev,\n  duplicateErrorIfNecessary,\n  isUserErrorEmbed,\n  isUserErrorMessage,\n} from './log';\nimport {dict} from './utils/object';\nimport {experimentTogglesOrNull, getBinaryType, isCanary} from './experiments';\nimport {exponentialBackoff} from './exponential-backoff';\nimport {getMode} from './mode';\nimport {isLoadErrorMessage} from './event-helper';\nimport {isProxyOrigin} from './url';\nimport {makeBodyVisibleRecovery} from './style-installer';\nimport {startsWith} from './string';\nimport {triggerAnalyticsEvent} from './analytics';\nimport {urls} from './config';\n\n/**\n * @const {string}\n */\nconst CANCELLED = 'CANCELLED';\n\n/**\n * @const {string}\n */\nconst BLOCK_BY_CONSENT = 'BLOCK_BY_CONSENT';\n\n/**\n * @const {string}\n */\nconst ABORTED = 'AbortError';\n\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\nconst NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD = 0.001;\n\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\nconst USER_ERROR_THROTTLE_THRESHOLD = 0.1;\n\n/**\n * Collects error messages, so they can be included in subsequent reports.\n * That allows identifying errors that might be caused by previous errors.\n */\nlet accumulatedErrorMessages = self.__AMP_ERRORS || [];\n// Use a true global, to avoid multi-module inclusion issues.\nself.__AMP_ERRORS = accumulatedErrorMessages;\n\n/**\n * Pushes element into array, keeping at most the most recent limit elements\n *\n * @param {!Array<T>} array\n * @param {T} element\n * @param {number} limit\n * @template T\n */\nfunction pushLimit(array, element, limit) {\n  if (array.length >= limit) {\n    array.splice(0, array.length - limit + 1);\n  }\n  array.push(element);\n}\n\n/**\n * A wrapper around our exponentialBackoff, to lazy initialize it to avoid an\n * un-DCE'able side-effect.\n * @param {function()} work the function to execute after backoff\n * @return {number} the setTimeout id\n */\nlet reportingBackoff = function(work) {\n  // Set reportingBackoff as the lazy-created function. JS Vooodoooo.\n  reportingBackoff = exponentialBackoff(1.5);\n  return reportingBackoff(work);\n};\n\n/**\n * Attempts to stringify a value, falling back to String.\n * @param {*} value\n * @return {string}\n */\nfunction tryJsonStringify(value) {\n  try {\n    // Cast is fine, because we really don't care here. Just trying.\n    return JSON.stringify(/** @type {!JsonObject} */ (value));\n  } catch (e) {\n    return String(value);\n  }\n}\n\n/**\n * The true JS engine, as detected by inspecting an Error stack. This should be\n * used with the userAgent to tell definitely. I.e., Chrome on iOS is really a\n * Safari JS engine.\n */\nlet detectedJsEngine;\n\n/**\n * @param {!Window} win\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n */\nexport function reportErrorForWin(win, error, opt_associatedElement) {\n  reportError(error, opt_associatedElement);\n  if (\n    error &&\n    !!win &&\n    isUserErrorMessage(error.message) &&\n    !isUserErrorEmbed(error.message)\n  ) {\n    reportErrorToAnalytics(/** @type {!Error} */ (error), win);\n  }\n}\n\n/**\n * Reports an error. If the error has an \"associatedElement\" property\n * the element is marked with the `i-amphtml-element-error` and displays\n * the message itself. The message is always send to the console.\n * If the error has a \"messageArray\" property, that array is logged.\n * This way one gets the native fidelity of the console for things like\n * elements instead of stringification.\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n * @return {!Error}\n */\nexport function reportError(error, opt_associatedElement) {\n  try {\n    // Convert error to the expected type.\n    let isValidError;\n    if (error) {\n      if (error.message !== undefined) {\n        error = duplicateErrorIfNecessary(/** @type {!Error} */ (error));\n        isValidError = true;\n      } else {\n        const origError = error;\n        error = new Error(tryJsonStringify(origError));\n        error.origError = origError;\n      }\n    } else {\n      error = new Error('Unknown error');\n    }\n    // Report if error is not an expected type.\n    if (!isValidError && getMode().localDev && !getMode().test) {\n      setTimeout(function() {\n        const rethrow = new Error(\n          '_reported_ Error reported incorrectly: ' + error\n        );\n        throw rethrow;\n      });\n    }\n\n    if (error.reported) {\n      return /** @type {!Error} */ (error);\n    }\n    error.reported = true;\n\n    // Update element.\n    const element = opt_associatedElement || error.associatedElement;\n    if (element && element.classList) {\n      element.classList.add('i-amphtml-error');\n      if (getMode().development) {\n        element.classList.add('i-amphtml-element-error');\n        element.setAttribute('error-message', error.message);\n      }\n    }\n\n    // Report to console.\n    if (self.console) {\n      const output = console.error || console.log;\n      if (error.messageArray) {\n        output.apply(console, error.messageArray);\n      } else {\n        if (element) {\n          output.call(console, error.message, element);\n        } else if (!getMode().minified) {\n          output.call(console, error.stack);\n        } else {\n          output.call(console, error.message);\n        }\n      }\n    }\n    if (element && element.dispatchCustomEventForTesting) {\n      element.dispatchCustomEventForTesting(AmpEvents.ERROR, error.message);\n    }\n\n    // 'call' to make linter happy. And .call to make compiler happy\n    // that expects some @this.\n    onError['call'](\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      error\n    );\n  } catch (errorReportingError) {\n    setTimeout(function() {\n      throw errorReportingError;\n    });\n  }\n  return /** @type {!Error} */ (error);\n}\n\n/**\n * Returns an error for a cancellation of a promise.\n * @return {!Error}\n */\nexport function cancellation() {\n  return new Error(CANCELLED);\n}\n\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\nexport function isCancellation(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n  if (typeof errorOrMessage == 'string') {\n    return startsWith(errorOrMessage, CANCELLED);\n  }\n  if (typeof errorOrMessage.message == 'string') {\n    return startsWith(errorOrMessage.message, CANCELLED);\n  }\n  return false;\n}\n\n/**\n * Returns an error for component blocked by consent\n * @return {!Error}\n */\nexport function blockedByConsentError() {\n  return new Error(BLOCK_BY_CONSENT);\n}\n\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\nexport function isBlockedByConsent(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n  if (typeof errorOrMessage == 'string') {\n    return startsWith(errorOrMessage, BLOCK_BY_CONSENT);\n  }\n  if (typeof errorOrMessage.message == 'string') {\n    return startsWith(errorOrMessage.message, BLOCK_BY_CONSENT);\n  }\n  return false;\n}\n\n/**\n * Install handling of global unhandled exceptions.\n * @param {!Window} win\n */\nexport function installErrorReporting(win) {\n  win.onerror = /** @type {!Function} */ (onError);\n  win.addEventListener('unhandledrejection', event => {\n    if (\n      event.reason &&\n      (event.reason.message === CANCELLED ||\n        event.reason.message === BLOCK_BY_CONSENT ||\n        event.reason.message === ABORTED)\n    ) {\n      event.preventDefault();\n      return;\n    }\n    reportError(event.reason || new Error('rejected promise ' + event));\n  });\n}\n\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @this {!Window|undefined}\n */\nfunction onError(message, filename, line, col, error) {\n  // Make an attempt to unhide the body.\n  if (this && this.document) {\n    makeBodyVisibleRecovery(this.document);\n  }\n  if (getMode().localDev || getMode().development || getMode().test) {\n    return;\n  }\n  let hasNonAmpJs = false;\n  try {\n    hasNonAmpJs = detectNonAmpJs(self);\n  } catch (ignore) {\n    // Ignore errors during error report generation.\n  }\n  if (hasNonAmpJs && Math.random() > 0.01) {\n    // Only report 1% of errors on pages with non-AMP JS.\n    // These errors can almost never be acted upon, but spikes such as\n    // due to buggy browser extensions may be helpful to notify authors.\n    return;\n  }\n  const data = getErrorReportData(\n    message,\n    filename,\n    line,\n    col,\n    error,\n    hasNonAmpJs\n  );\n  if (data) {\n    reportingBackoff(() => {\n      try {\n        return reportErrorToServerOrViewer(\n          this,\n          /** @type {!JsonObject} */ (data)\n        ).catch(() => {\n          // catch async errors to avoid recursive errors.\n        });\n      } catch (e) {\n        // catch async errors to avoid recursive errors.\n      }\n    });\n  }\n}\n\n/**\n * Passes the given error data to either server or viewer.\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {Promise<undefined>}\n */\nexport function reportErrorToServerOrViewer(win, data) {\n  // Report the error to viewer if it has the capability. The data passed\n  // to the viewer is exactly the same as the data passed to the server\n  // below.\n  return maybeReportErrorToViewer(win, data).then(reportedErrorToViewer => {\n    if (!reportedErrorToViewer) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('POST', urls.errorReporting, true);\n      xhr.send(JSON.stringify(data));\n    }\n  });\n}\n\n/**\n * Passes the given error data to the viewer if the following criteria is met:\n * - The viewer is a trusted viewer\n * - The viewer has the `errorReporter` capability\n * - The AMP doc is in single doc mode\n * - The AMP doc is opted-in for error interception (`<html>` tag has the\n *   `report-errors-to-viewer` attribute)\n *\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {!Promise<boolean>} `Promise<True>` if the error was sent to the\n *     viewer, `Promise<False>` otherwise.\n * @visibleForTesting\n */\nexport function maybeReportErrorToViewer(win, data) {\n  const ampdocService = Services.ampdocServiceFor(win);\n  if (!ampdocService.isSingleDoc()) {\n    return Promise.resolve(false);\n  }\n  const ampdocSingle = ampdocService.getSingleDoc();\n  const htmlElement = ampdocSingle.getRootNode().documentElement;\n  const docOptedIn = htmlElement.hasAttribute('report-errors-to-viewer');\n  if (!docOptedIn) {\n    return Promise.resolve(false);\n  }\n  const viewer = Services.viewerForDoc(ampdocSingle);\n  if (!viewer.hasCapability('errorReporter')) {\n    return Promise.resolve(false);\n  }\n  return viewer.isTrustedViewer().then(viewerTrusted => {\n    if (!viewerTrusted) {\n      return false;\n    }\n    viewer.sendMessage('error', errorReportingDataForViewer(data));\n    return true;\n  });\n}\n\n/**\n * Strips down the error reporting data to a minimal set\n * to be sent to the viewer.\n * @param {!JsonObject} errorReportData\n * @return {!JsonObject}\n * @visibleForTesting\n */\nexport function errorReportingDataForViewer(errorReportData) {\n  return dict({\n    'm': errorReportData['m'], // message\n    'a': errorReportData['a'], // isUserError\n    's': errorReportData['s'], // error stack\n    'el': errorReportData['el'], // tagName\n    'ex': errorReportData['ex'], // expected error?\n    'v': errorReportData['v'], // runtime\n    'jse': errorReportData['jse'], // detectedJsEngine\n  });\n}\n\n/**\n * @param {string|undefined}  message\n * @param {*|undefined} error\n * @return {string}\n */\nfunction buildErrorMessage_(message, error) {\n  if (error) {\n    if (error.message) {\n      message = error.message;\n    } else {\n      // This should never be a string, but sometimes it is.\n      message = String(error);\n    }\n  }\n  if (!message) {\n    message = 'Unknown error';\n  }\n\n  return message;\n}\n\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @param {boolean} hasNonAmpJs\n * @return {!JsonObject|undefined} The data to post\n * visibleForTesting\n */\nexport function getErrorReportData(\n  message,\n  filename,\n  line,\n  col,\n  error,\n  hasNonAmpJs\n) {\n  message = buildErrorMessage_(message, error);\n  // An \"expected\" error is still an error, i.e. some features are disabled\n  // or not functioning fully because of it. However, it's an expected\n  // error. E.g. as is the case with some browser API missing (storage).\n  // Thus, the error can be classified differently by log aggregators.\n  // The main goal is to monitor that an \"expected\" error doesn't deteriorate\n  // over time. It's impossible to completely eliminate it.\n  let expected = !!(error && error.expected);\n  if (/_reported_/.test(message)) {\n    return;\n  }\n  if (message == CANCELLED) {\n    return;\n  }\n\n  const detachedWindow = !(self && self.window);\n  const throttleBase = Math.random();\n\n  // We throttle load errors and generic \"Script error.\" errors\n  // that have no information and thus cannot be acted upon.\n  if (\n    isLoadErrorMessage(message) ||\n    // See https://github.com/ampproject/amphtml/issues/7353\n    // for context.\n    message == 'Script error.' ||\n    // Window has become detached, really anything can happen\n    // at this point.\n    detachedWindow\n  ) {\n    expected = true;\n\n    if (throttleBase > NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD) {\n      return;\n    }\n  }\n\n  const isUserError = isUserErrorMessage(message);\n\n  // Only report a subset of user errors.\n  if (isUserError && throttleBase > USER_ERROR_THROTTLE_THRESHOLD) {\n    return;\n  }\n\n  // This is the App Engine app in\n  // https://github.com/ampproject/error-tracker\n  // It stores error reports via https://cloud.google.com/error-reporting/\n  // for analyzing production issues.\n  const data = /** @type {!JsonObject} */ (Object.create(null));\n  data['v'] = getMode().rtvVersion;\n  data['noAmp'] = hasNonAmpJs ? '1' : '0';\n  data['m'] = message.replace(USER_ERROR_SENTINEL, '');\n  data['a'] = isUserError ? '1' : '0';\n\n  // Errors are tagged with \"ex\" (\"expected\") label to allow loggers to\n  // classify these errors as benchmarks and not exceptions.\n  data['ex'] = expected ? '1' : '0';\n  data['dw'] = detachedWindow ? '1' : '0';\n\n  let runtime = '1p';\n  if (self.context && self.context.location) {\n    data['3p'] = '1';\n    runtime = '3p';\n  } else if (getMode().runtime) {\n    runtime = getMode().runtime;\n  }\n\n  if (getMode().singlePassType) {\n    data['spt'] = getMode().singlePassType;\n  }\n\n  data['rt'] = runtime;\n\n  // Add our a4a id if we are inabox\n  if (runtime === 'inabox') {\n    data['adid'] = getMode().a4aId;\n  }\n\n  // TODO(erwinm): Remove ca when all systems read `bt` instead of `ca` to\n  // identify js binary type.\n  data['ca'] = isCanary(self) ? '1' : '0';\n\n  // Pass binary type.\n  data['bt'] = getBinaryType(self);\n\n  if (self.location.ancestorOrigins && self.location.ancestorOrigins[0]) {\n    data['or'] = self.location.ancestorOrigins[0];\n  }\n  if (self.viewerState) {\n    data['vs'] = self.viewerState;\n  }\n  // Is embedded?\n  if (self.parent && self.parent != self) {\n    data['iem'] = '1';\n  }\n\n  if (self.AMP && self.AMP.viewer) {\n    const resolvedViewerUrl = self.AMP.viewer.getResolvedViewerUrl();\n    const messagingOrigin = self.AMP.viewer.maybeGetMessagingOrigin();\n    if (resolvedViewerUrl) {\n      data['rvu'] = resolvedViewerUrl;\n    }\n    if (messagingOrigin) {\n      data['mso'] = messagingOrigin;\n    }\n  }\n\n  if (!detectedJsEngine) {\n    detectedJsEngine = detectJsEngineFromStack();\n  }\n  data['jse'] = detectedJsEngine;\n\n  const exps = [];\n  const experiments = experimentTogglesOrNull(self);\n  for (const exp in experiments) {\n    const on = experiments[exp];\n    exps.push(`${exp}=${on ? '1' : '0'}`);\n  }\n  data['exps'] = exps.join(',');\n\n  if (error) {\n    const tagName = error.associatedElement\n      ? error.associatedElement.tagName\n      : 'u'; // Unknown\n    data['el'] = tagName;\n\n    if (error.args) {\n      data['args'] = JSON.stringify(error.args);\n    }\n\n    if (!isUserError && !error.ignoreStack && error.stack) {\n      data['s'] = error.stack;\n    }\n\n    // TODO(jridgewell, #18574); Make sure error is always an object.\n    if (error.message) {\n      error.message += ' _reported_';\n    }\n  } else {\n    data['f'] = filename || '';\n    data['l'] = line || '';\n    data['c'] = col || '';\n  }\n  data['r'] = self.document ? self.document.referrer : '';\n  data['ae'] = accumulatedErrorMessages.join(',');\n  data['fr'] = self.location.originalHash || self.location.hash;\n\n  pushLimit(accumulatedErrorMessages, message, 25);\n\n  return data;\n}\n\n/**\n * Returns true if it appears like there is non-AMP JS on the\n * current page.\n * @param {!Window} win\n * @return {boolean}\n * @visibleForTesting\n */\nexport function detectNonAmpJs(win) {\n  if (!win.document) {\n    return false;\n  }\n  const scripts = win.document.querySelectorAll('script[src]');\n  for (let i = 0; i < scripts.length; i++) {\n    if (!isProxyOrigin(scripts[i].src.toLowerCase())) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Resets accumulated error messages for testing\n */\nexport function resetAccumulatedErrorMessagesForTesting() {\n  accumulatedErrorMessages = [];\n}\n\n/**\n * Does a series of checks on the stack of an thrown error to determine the\n * JS engine that is currently running. This gives a bit more information than\n * just the UserAgent, since browsers often allow overriding it to \"emulate\"\n * mobile.\n * @return {string}\n * @visibleForTesting\n */\nexport function detectJsEngineFromStack() {\n  /** @constructor */\n  function Fn() {}\n  Fn.prototype.t = function() {\n    throw new Error('message');\n  };\n  const object = new Fn();\n  try {\n    object.t();\n  } catch (e) {\n    const {stack} = e;\n\n    // Safari only mentions the method name.\n    if (startsWith(stack, 't@')) {\n      return 'Safari';\n    }\n\n    // Firefox mentions \"prototype\".\n    if (stack.indexOf('.prototype.t@') > -1) {\n      return 'Firefox';\n    }\n\n    // IE looks like Chrome, but includes a context for the base stack line.\n    // Explicitly, we're looking for something like:\n    // \"    at Global code (https://example.com/app.js:1:200)\" or\n    // \"    at Anonymous function (https://example.com/app.js:1:200)\"\n    // vs Chrome which has:\n    // \"    at https://example.com/app.js:1:200\"\n    const last = stack.split('\\n').pop();\n    if (/\\bat .* \\(/i.test(last)) {\n      return 'IE';\n    }\n\n    // Finally, chrome includes the error message in the stack.\n    if (startsWith(stack, 'Error: message')) {\n      return 'Chrome';\n    }\n  }\n\n  return 'unknown';\n}\n\n/**\n * @param {!Error} error\n * @param {!Window} win\n */\nexport function reportErrorToAnalytics(error, win) {\n  // Currently this can only be executed in a single-doc mode. Otherwise,\n  // it's not clear which ampdoc the event would belong too.\n  if (Services.ampdocServiceFor(win).isSingleDoc()) {\n    const vars = dict({\n      'errorName': error.name,\n      'errorMessage': error.message,\n    });\n    triggerAnalyticsEvent(getRootElement_(win), 'user-error', vars);\n  }\n}\n\n/**\n * @param {!Window} win\n * @return {!Element}\n * @private\n */\nfunction getRootElement_(win) {\n  const root = Services.ampdocServiceFor(win)\n    .getSingleDoc()\n    .getRootNode();\n  return dev().assertElement(root.documentElement || root.body || root);\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet optsSupported;\n\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function internalListenImplementation(\n  element,\n  eventType,\n  listener,\n  opt_evtListenerOpts\n) {\n  let localElement = element;\n  let localListener = listener;\n  /**\n   * @type {?Function}\n   */\n  let wrapped;\n\n  wrapped = event => {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n      throw e;\n    }\n  };\n  const optsSupported = detectEvtListenerOptsSupport();\n  let capture = false;\n  if (opt_evtListenerOpts) {\n    capture = opt_evtListenerOpts.capture;\n  }\n  localElement.addEventListener(\n    eventType,\n    wrapped,\n    optsSupported ? opt_evtListenerOpts : capture\n  );\n  return () => {\n    if (localElement) {\n      localElement.removeEventListener(\n        eventType,\n        wrapped,\n        optsSupported ? opt_evtListenerOpts : capture\n      );\n    }\n    // Ensure these are GC'd\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\nexport function detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    const options = {\n      get capture() {\n        optsSupported = true;\n      },\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return optsSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\nexport function resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalListenImplementation} from './event-helper-listen';\nimport {lastChildElement} from './dom';\nimport {user} from './log';\n\n/** @const {string}  */\nconst LOAD_FAILURE_PREFIX = 'Failed to load:';\n\n/** @const {string} */\nexport const MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\nexport function createCustomEvent(win, type, detail, opt_eventInit) {\n  const eventInit = /** @type {!CustomEventInit} */ ({detail});\n  Object.assign(eventInit, opt_eventInit);\n  // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n  if (typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    const e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(\n      type,\n      !!eventInit.bubbles,\n      !!eventInit.cancelable,\n      detail\n    );\n    return e;\n  }\n}\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getData(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.data);\n}\n\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getDetail(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.detail);\n}\n\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  let localListener = listener;\n  const unlisten = internalListenImplementation(\n    element,\n    eventType,\n    event => {\n      try {\n        localListener(event);\n      } finally {\n        // Ensure listener is GC'd\n        localListener = null;\n        unlisten();\n      }\n    },\n    opt_evtListenerOpts\n  );\n  return unlisten;\n}\n\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\nexport function listenOncePromise(\n  element,\n  eventType,\n  opt_evtListenerOpts,\n  opt_cancel\n) {\n  let unlisten;\n  const eventPromise = new Promise(resolve => {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n  return eventPromise;\n}\n\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nexport function isLoaded(eleOrWindow) {\n  return !!(\n    eleOrWindow.complete ||\n    eleOrWindow.readyState == 'complete' ||\n    (isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0) ||\n    // If the passed in thing is a Window, infer loaded state from\n    //\n    (eleOrWindow.document && eleOrWindow.document.readyState == 'complete')\n  );\n}\n\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\nexport function loadPromise(eleOrWindow) {\n  let unlistenLoad;\n  let unlistenError;\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n  const isMediaElement = isHTMLMediaElement(eleOrWindow);\n  if (\n    isMediaElement &&\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc\n  ) {\n    return Promise.reject(eleOrWindow);\n  }\n  const loadingPromise = new Promise((resolve, reject) => {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true,\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    }\n    // Don't unlisten on error for Windows.\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n    let errorTarget = eleOrWindow;\n    // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = lastChildElement(\n        eleOrWindow,\n        child => child.tagName === 'SOURCE'\n      );\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n\n  return loadingPromise.then(\n    () => {\n      if (unlistenError) {\n        unlistenError();\n      }\n      return eleOrWindow;\n    },\n    () => {\n      if (unlistenLoad) {\n        unlistenLoad();\n      }\n      failedToLoad(eleOrWindow);\n    }\n  );\n}\n\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] =\n      eleOrWindow.currentSrc || true;\n  }\n\n  // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n  let target = eleOrWindow;\n  if (target && target.src) {\n    target = target.src;\n  }\n  throw user().createError(LOAD_FAILURE_PREFIX, target);\n}\n\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\nexport function isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\nimport {dev, user} from './log';\nimport {getMode} from './mode';\nimport {hasOwn} from './utils/object';\nimport {parseQueryString} from './url';\n\n/** @const {string} */\nconst TAG = 'EXPERIMENTS';\n\n/** @const {string} */\nconst LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n\n/** @const {string} */\nconst TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n\n/**\n * @typedef {{\n *   isTrafficEligible: function(!Window):boolean,\n *   branches: !Array<string>\n * }}\n */\nexport let ExperimentInfo;\n\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCanary(win) {\n  return !!(win.AMP_CONFIG && win.AMP_CONFIG.canary);\n}\n\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\nexport function getBinaryType(win) {\n  return win.AMP_CONFIG && win.AMP_CONFIG.type\n    ? win.AMP_CONFIG.type\n    : 'unknown';\n}\n\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\nexport function isExperimentOn(win, experimentId) {\n  const toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\nexport function toggleExperiment(\n  win,\n  experimentId,\n  opt_on,\n  opt_transientExperiment\n) {\n  const currentlyOn = isExperimentOn(win, /*OK*/ experimentId);\n  const on = !!(opt_on !== undefined ? opt_on : !currentlyOn);\n  if (on != currentlyOn) {\n    const toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      const storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles);\n      // Avoid affecting tests that spy/stub warn().\n      if (!getMode().test) {\n        user().warn(\n          TAG,\n          '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental',\n          experimentId,\n          on ? 'enabled' : 'disabled',\n          win.location.hostname\n        );\n      }\n    }\n  }\n  return on;\n}\n\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nexport function experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n  win[TOGGLES_WINDOW_PROPERTY] = Object.create(null);\n  const toggles = win[TOGGLES_WINDOW_PROPERTY];\n\n  // Read the default config of this build.\n  if (win.AMP_CONFIG) {\n    for (const experimentId in win.AMP_CONFIG) {\n      const frequency = win.AMP_CONFIG[experimentId];\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  }\n  // Read document level override from meta tag.\n  if (\n    win.AMP_CONFIG &&\n    Array.isArray(win.AMP_CONFIG['allow-doc-opt-in']) &&\n    win.AMP_CONFIG['allow-doc-opt-in'].length > 0\n  ) {\n    const allowed = win.AMP_CONFIG['allow-doc-opt-in'];\n    const meta = win.document.head.querySelector(\n      'meta[name=\"amp-experiments-opt-in\"]'\n    );\n    if (meta) {\n      const optedInExperiments = meta.getAttribute('content').split(',');\n      for (let i = 0; i < optedInExperiments.length; i++) {\n        if (allowed.indexOf(optedInExperiments[i]) != -1) {\n          toggles[optedInExperiments[i]] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  if (\n    win.AMP_CONFIG &&\n    Array.isArray(win.AMP_CONFIG['allow-url-opt-in']) &&\n    win.AMP_CONFIG['allow-url-opt-in'].length > 0\n  ) {\n    const allowed = win.AMP_CONFIG['allow-url-opt-in'];\n    const hash = win.location.originalHash || win.location.hash;\n    const params = parseQueryString(hash);\n    for (let i = 0; i < allowed.length; i++) {\n      const param = params[`e-${allowed[i]}`];\n      if (param == '1') {\n        toggles[allowed[i]] = true;\n      }\n      if (param == '0') {\n        toggles[allowed[i]] = false;\n      }\n    }\n  }\n  return toggles;\n}\n\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {Object<string, boolean>}\n */\nexport function experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nfunction getExperimentToggles(win) {\n  let experimentsString = '';\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch (e) {\n    dev().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n  const tokens = experimentsString ? experimentsString.split(/\\s*,\\s*/g) : [];\n\n  const toggles = Object.create(null);\n  for (let i = 0; i < tokens.length; i++) {\n    if (tokens[i].length == 0) {\n      continue;\n    }\n    if (tokens[i][0] == '-') {\n      toggles[tokens[i].substr(1)] = false;\n    } else {\n      toggles[tokens[i]] = true;\n    }\n  }\n  return toggles;\n}\n\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\nfunction saveExperimentToggles(win, toggles) {\n  const experimentIds = [];\n  for (const experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n  try {\n    if ('localStorage' in win) {\n      win.localStorage.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n    }\n  } catch (e) {\n    user().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\nexport function getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\nexport const RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng,\n};\n\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\nfunction selectRandomItem(arr) {\n  const rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return arr[Math.floor(rn * arr.length)] || null;\n}\n\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Object<string, !ExperimentInfo>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\nexport function randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  const selectedExperiments = {};\n  for (const experimentName in experiments) {\n    // Skip experimentName if it is not a key of experiments object or if it\n    // has already been populated by some other property.\n    if (!hasOwn(experiments, experimentName)) {\n      continue;\n    }\n    if (hasOwn(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (\n      !experiments[experimentName].isTrafficEligible ||\n      !experiments[experimentName].isTrafficEligible(win)\n    ) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    }\n\n    // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n    if (\n      !win.__AMP_EXPERIMENT_BRANCHES[experimentName] &&\n      isExperimentOn(win, /*OK*/ experimentName)\n    ) {\n      const {branches} = experiments[experimentName];\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(\n        branches\n      );\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n  return selectedExperiments;\n}\n\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\nexport function getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES\n    ? win.__AMP_EXPERIMENT_BRANCHES[experimentName]\n    : null;\n}\n\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\nexport function forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {number=} opt_base Exponential base. Defaults to 2.\n * @return {function(function()): number} Function that when invoked will\n *     call the passed in function. On every invocation the next\n *     invocation of the passed in function will be exponentially\n *     later. Returned function returns timeout id.\n */\nexport function exponentialBackoff(opt_base) {\n  const getTimeout = exponentialBackoffClock(opt_base);\n  return work => {\n    return setTimeout(work, getTimeout());\n  };\n}\n\n/**\n * @param {number=} opt_base Exponential base. Defaults to 2.\n * @return {function(): number} Function that when invoked will return\n *    a number that exponentially grows per invocation.\n */\nexport function exponentialBackoffClock(opt_base) {\n  const base = opt_base || 2;\n  let count = 0;\n  return () => {\n    let wait = Math.pow(base, count++);\n    wait += getJitter(wait);\n    return wait * 1000;\n  };\n}\n\n/**\n * Add jitter to avoid the thundering herd. This can e.g. happen when\n * we poll a backend and it fails for everyone at the same time.\n * We add up to 30% (default) longer or shorter than the given time.\n *\n * @param {number} wait the amount if base milliseconds\n * @param {number=} opt_perc the min/max percentage to add or sutract\n * @return {number}\n */\nexport function getJitter(wait, opt_perc) {\n  opt_perc = opt_perc || 0.3;\n  let jitter = wait * opt_perc * Math.random();\n  if (Math.random() > 0.5) {\n    jitter *= -1;\n  }\n  return jitter;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {startsWith} from './string';\n\n/** @type {!Array<string>} */\nconst excludedTags = ['script', 'style'];\n\n/** @type {!Array<string>} */\nconst allowedAmpTags = [\n  'amp-accordion',\n  'amp-app-banner',\n  'amp-carousel',\n  'amp-fit-text',\n  'amp-form',\n  'amp-selector',\n  'amp-sidebar',\n];\n\n/** @type {!Array<string>} */\nconst allowedAttributes = [\n  'action',\n  'alt',\n  'class',\n  'disabled',\n  'height',\n  'href',\n  'id',\n  'name',\n  'placeholder',\n  'readonly',\n  'src',\n  'tabindex',\n  'title',\n  'type',\n  'value',\n  'width',\n];\n\n/**\n * Returns content of HTML node\n * @param {!Window} win\n * @param {string} selector - CSS selector of the node to take content from\n * @param {!Array<string>} attrs - tag attributes to be left in the stringified\n * HTML\n * @return {string}\n */\nexport function getHtml(win, selector, attrs) {\n  const root = win.document.querySelector(selector);\n  const result = [];\n\n  if (root) {\n    appendToResult(root, attrs, result);\n  }\n\n  return result.join('').replace(/\\s{2,}/g, ' ');\n}\n\n/**\n * @param {!Element} node - node to take content from\n * @param {!Array<string>} attrs - tag attributes to be left in the stringified HTML\n * @param {!Array<string>} result\n */\nfunction appendToResult(node, attrs, result) {\n  const stack = [node];\n  const allowedAttrs = attrs.filter(attr => {\n    return allowedAttributes.includes(attr);\n  });\n\n  while (stack.length > 0) {\n    node = stack.pop();\n\n    if (typeof node === 'string') {\n      result.push(node);\n    } else if (node.nodeType === Node.TEXT_NODE) {\n      result.push(node.textContent);\n    } else if (node.nodeType === Node.ELEMENT_NODE && isApplicableNode(node)) {\n      appendOpenTag(node, allowedAttrs, result);\n      stack.push(`</${node.tagName.toLowerCase()}>`);\n\n      for (let child = node.lastChild; child; child = child.previousSibling) {\n        stack.push(child);\n      }\n    }\n  }\n}\n\n/**\n *\n * @param {!Element} node\n * @return {boolean}\n */\nfunction isApplicableNode(node) {\n  const tagName = node.tagName.toLowerCase();\n\n  if (startsWith(tagName, 'amp-')) {\n    return !!(allowedAmpTags.includes(tagName) && node.textContent);\n  } else {\n    return !!(!excludedTags.includes(tagName) && node.textContent);\n  }\n}\n\n/**\n *\n * @param {!Element} node\n * @param {!Array<string>} attrs\n * @param {Array<string>} result\n */\nfunction appendOpenTag(node, attrs, result) {\n  result.push(`<${node.tagName.toLowerCase()}`);\n\n  attrs.forEach(function(attr) {\n    if (node.hasAttribute(attr)) {\n      result.push(` ${attr}=\"${node.getAttribute(attr)}\"`);\n    }\n  });\n\n  result.push('>');\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {DomFingerprint} from './utils/dom-fingerprint';\nimport {Services} from './services';\nimport {dict} from './utils/object.js';\nimport {experimentToggles, isCanary} from './experiments';\nimport {getLengthNumeral} from './layout';\nimport {getModeObject} from './mode-object';\nimport {internalRuntimeVersion} from './internal-version';\nimport {urls} from './config';\n\n/**\n * Produces the attributes for the ad template.\n * @param {!Window} parentWindow\n * @param {!AmpElement} element\n * @param {string} sentinel\n * @param {!JsonObject=} attributes\n * @return {!JsonObject}\n */\nexport function getContextMetadata(\n  parentWindow,\n  element,\n  sentinel,\n  attributes\n) {\n  const startTime = Date.now();\n  const width = element.getAttribute('width');\n  const height = element.getAttribute('height');\n  attributes = attributes ? attributes : dict();\n  attributes['width'] = getLengthNumeral(width);\n  attributes['height'] = getLengthNumeral(height);\n  if (element.getAttribute('title')) {\n    attributes['title'] = element.getAttribute('title');\n  }\n  let locationHref = parentWindow.location.href;\n  // This is really only needed for tests, but whatever. Children\n  // see us as the logical origin, so telling them we are about:srcdoc\n  // will fail ancestor checks.\n  if (locationHref == 'about:srcdoc') {\n    locationHref = parentWindow.parent.location.href;\n  }\n\n  const ampdoc = Services.ampdoc(element);\n  const docInfo = Services.documentInfoForDoc(element);\n  const viewer = Services.viewerForDoc(element);\n  const referrer = viewer.getUnconfirmedReferrerUrl();\n\n  // TODO(alanorozco): Redesign data structure so that fields not exposed by\n  // AmpContext are not part of this object.\n  const layoutRect = element.getPageLayoutBox();\n\n  // Use JsonObject to preserve field names so that ampContext can access\n  // values with name\n  // ampcontext.js and this file are compiled in different compilation unit\n\n  // Note: Field names can by perserved by using JsonObject, or by adding\n  // perserved name to extern. We are doing both right now.\n  // Please also add new introduced variable\n  // name to the extern list.\n  attributes['_context'] = dict({\n    'ampcontextVersion': internalRuntimeVersion(),\n    'ampcontextFilepath': `${\n      urls.thirdParty\n    }/${internalRuntimeVersion()}/ampcontext-v0.js`,\n    'sourceUrl': docInfo.sourceUrl,\n    'referrer': referrer,\n    'canonicalUrl': docInfo.canonicalUrl,\n    'pageViewId': docInfo.pageViewId,\n    'location': {\n      'href': locationHref,\n    },\n    'startTime': startTime,\n    'tagName': element.tagName,\n    'mode': getModeObject(),\n    'canary': isCanary(parentWindow),\n    'hidden': !ampdoc.isVisible(),\n    'initialLayoutRect': layoutRect\n      ? {\n          'left': layoutRect.left,\n          'top': layoutRect.top,\n          'width': layoutRect.width,\n          'height': layoutRect.height,\n        }\n      : null,\n    'initialIntersection': element.getIntersectionChangeEntry(),\n    'domFingerprint': DomFingerprint.generate(element),\n    'experimentToggles': experimentToggles(parentWindow),\n    'sentinel': sentinel,\n  });\n  const adSrc = element.getAttribute('src');\n  if (adSrc) {\n    attributes['src'] = adSrc;\n  }\n  return attributes;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {addAttributesToElement, closestAncestorElementBySelector} from './dom';\nimport {deserializeMessage, isAmpMessage} from './3p-frame-messaging';\nimport {dev, devAssert} from './log';\nimport {dict} from './utils/object';\nimport {getData} from './event-helper';\nimport {parseUrlDeprecated} from './url';\nimport {remove} from './utils/array';\nimport {setStyle, toggle} from './style';\nimport {tryParseJson} from './json';\n\n/**\n * Sentinel used to force unlistening after a iframe is detached.\n * @type {string}\n */\nconst UNLISTEN_SENTINEL = 'unlisten';\n\n/**\n * The iframe feature policy that forces the iframe to pause when it's not\n * display.\n * See https://github.com/dtapuska/iframe-freeze.\n */\nconst EXECUTION_WHILE_NOT_RENDERED = 'execution-while-not-rendered';\n\n/**\n * @typedef {{\n *   frame: !Element,\n *   events: !Object<string, !Array<function(!JsonObject)>>\n * }}\n */\nlet WindowEventsDef;\n\n/**\n * Returns a mapping from a URL's origin to an array of windows and their\n * listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {boolean=} opt_create create the mapping if it does not exist\n * @return {?Object<string, !Array<!WindowEventsDef>>}\n */\nfunction getListenFors(parentWin, opt_create) {\n  let {listeningFors} = parentWin;\n\n  if (!listeningFors && opt_create) {\n    listeningFors = parentWin.listeningFors = Object.create(null);\n  }\n  return listeningFors || null;\n}\n\n/**\n * Returns an array of WindowEventsDef that have had any listenFor listeners\n * registered for this sentinel.\n * @param {?Window} parentWin the window that created the iframe\n * @param {string} sentinel the sentinel of the message\n * @param {boolean=} opt_create create the array if it does not exist\n * @return {?Array<!WindowEventsDef>}\n */\nfunction getListenForSentinel(parentWin, sentinel, opt_create) {\n  const listeningFors = getListenFors(parentWin, opt_create);\n  if (!listeningFors) {\n    return listeningFors;\n  }\n\n  let listenSentinel = listeningFors[sentinel];\n  if (!listenSentinel && opt_create) {\n    listenSentinel = listeningFors[sentinel] = [];\n  }\n  return listenSentinel || null;\n}\n\n/**\n * Returns an mapping of event names to listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {!Element} iframe the iframe element who's context will trigger the\n *     event\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @return {?Object<string, !Array<function(!JsonObject, !Window, string, !MessageEvent)>>}\n */\nfunction getOrCreateListenForEvents(parentWin, iframe, opt_is3P) {\n  const sentinel = getSentinel_(iframe, opt_is3P);\n  const listenSentinel = getListenForSentinel(parentWin, sentinel, true);\n\n  let windowEvents;\n  for (let i = 0; i < listenSentinel.length; i++) {\n    const we = listenSentinel[i];\n    if (we.frame === iframe) {\n      windowEvents = we;\n      break;\n    }\n  }\n\n  if (!windowEvents) {\n    windowEvents = {\n      frame: iframe,\n      events: Object.create(null),\n    };\n    listenSentinel.push(windowEvents);\n  }\n\n  return windowEvents.events;\n}\n\n/**\n * Returns an mapping of event names to listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {string} sentinel the sentinel of the message\n * @param {string} origin the source window's origin\n * @param {?Window} triggerWin the window that triggered the event\n * @return {?Object<string, !Array<function(!JsonObject, !Window, string, !MessageEvent)>>}\n */\nfunction getListenForEvents(parentWin, sentinel, origin, triggerWin) {\n  const listenSentinel = getListenForSentinel(parentWin, sentinel);\n\n  if (!listenSentinel) {\n    return listenSentinel;\n  }\n\n  // Find the entry for the frame.\n  // TODO(@nekodo): Add a WeakMap<Window, WindowEventsDef> cache to\n  //     speed up this process.\n  let windowEvents;\n  for (let i = 0; i < listenSentinel.length; i++) {\n    const we = listenSentinel[i];\n    const {contentWindow} = we.frame;\n    if (!contentWindow) {\n      setTimeout(dropListenSentinel, 0, listenSentinel);\n    } else if (\n      triggerWin == contentWindow ||\n      isDescendantWindow(contentWindow, triggerWin)\n    ) {\n      // 3p code path, we may accept messages from nested frames.\n      windowEvents = we;\n      break;\n    }\n  }\n\n  return windowEvents ? windowEvents.events : null;\n}\n\n/**\n * Checks whether one window is a descendant of another by climbing\n * the parent chain.\n * @param {?Window} ancestor potential ancestor window\n * @param {?Window} descendant potential descendant window\n * @return {boolean}\n */\nfunction isDescendantWindow(ancestor, descendant) {\n  for (let win = descendant; win && win != win.parent; win = win.parent) {\n    if (win == ancestor) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Removes any listenFors registed on listenSentinel that do not have\n * a contentWindow (the frame was removed from the DOM tree).\n * @param {!Array<!WindowEventsDef>} listenSentinel\n */\nfunction dropListenSentinel(listenSentinel) {\n  const noopData = dict({'sentinel': UNLISTEN_SENTINEL});\n\n  for (let i = listenSentinel.length - 1; i >= 0; i--) {\n    const windowEvents = listenSentinel[i];\n\n    if (!windowEvents.frame.contentWindow) {\n      listenSentinel.splice(i, 1);\n\n      const {events} = windowEvents;\n      for (const name in events) {\n        // Splice here, so that each unlisten does not shift the array\n        events[name].splice(0, Infinity).forEach(event => {\n          event(noopData);\n        });\n      }\n    }\n  }\n}\n\n/**\n * Registers the global listenFor event listener if it has yet to be.\n * @param {?Window} parentWin\n */\nfunction registerGlobalListenerIfNeeded(parentWin) {\n  if (parentWin.listeningFors) {\n    return;\n  }\n  const listenForListener = function(event) {\n    if (!getData(event)) {\n      return;\n    }\n    const data = parseIfNeeded(getData(event));\n\n    if (!data || !data['sentinel']) {\n      return;\n    }\n\n    const listenForEvents = getListenForEvents(\n      parentWin,\n      data['sentinel'],\n      event.origin,\n      event.source\n    );\n    if (!listenForEvents) {\n      return;\n    }\n\n    let listeners = listenForEvents[data['type']];\n    if (!listeners) {\n      return;\n    }\n\n    // We slice to avoid issues with adding another listener or unlistening\n    // during iteration. We could move to a Doubly Linked List with\n    // backtracking, but that's overly complicated.\n    listeners = listeners.slice();\n    for (let i = 0; i < listeners.length; i++) {\n      const listener = listeners[i];\n      listener(data, event.source, event.origin, event);\n    }\n  };\n\n  parentWin.addEventListener('message', listenForListener);\n}\n\n/**\n * Allows listening for message from the iframe. Returns an unlisten\n * function to remove the listener.\n *\n * @param {?Element} iframe\n * @param {string} typeOfMessage\n * @param {?function(!JsonObject, !Window, string, !MessageEvent)} callback Called when a\n *     message of this type arrives for this iframe.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @param {boolean=} opt_includingNestedWindows set to true if messages from\n *     nested frames should also be accepted.\n * @param {boolean=} opt_allowOpaqueOrigin set to true if messages from\n       opaque origins (origin == null) are allowed.\n * @return {!UnlistenDef}\n */\nexport function listenFor(\n  iframe,\n  typeOfMessage,\n  callback,\n  opt_is3P,\n  opt_includingNestedWindows,\n  opt_allowOpaqueOrigin\n) {\n  devAssert(iframe.src, 'only iframes with src supported');\n  devAssert(\n    !iframe.parentNode,\n    'cannot register events on an attached ' +\n      'iframe. It will cause hair-pulling bugs like #2942'\n  );\n  devAssert(callback);\n  const parentWin = iframe.ownerDocument.defaultView;\n\n  registerGlobalListenerIfNeeded(parentWin);\n\n  const listenForEvents = getOrCreateListenForEvents(\n    parentWin,\n    iframe,\n    opt_is3P\n  );\n\n  const iframeOrigin = parseUrlDeprecated(iframe.src).origin;\n  let events =\n    listenForEvents[typeOfMessage] || (listenForEvents[typeOfMessage] = []);\n\n  let unlisten;\n  let listener = function(data, source, origin, event) {\n    const sentinel = data['sentinel'];\n\n    // Exclude messages that don't satisfy amp sentinel rules.\n    if (sentinel == 'amp') {\n      // For `amp` sentinel, nested windows are not allowed\n      if (source != iframe.contentWindow) {\n        return;\n      }\n\n      // For `amp` sentinel origin must match unless opaque origin is allowed\n      const isOpaqueAndAllowed = origin == 'null' && opt_allowOpaqueOrigin;\n      if (iframeOrigin != origin && !isOpaqueAndAllowed) {\n        return;\n      }\n    }\n\n    // Exclude nested frames if necessary.\n    // Note that the source was already verified to be either the contentWindow\n    // of the iframe itself or a descendant window within it.\n    if (!opt_includingNestedWindows && source != iframe.contentWindow) {\n      return;\n    }\n\n    if (data.sentinel == UNLISTEN_SENTINEL) {\n      unlisten();\n      return;\n    }\n    callback(data, source, origin, event);\n  };\n\n  events.push(listener);\n\n  return (unlisten = function() {\n    if (listener) {\n      const index = events.indexOf(listener);\n      if (index > -1) {\n        events.splice(index, 1);\n      }\n      // Make sure references to the unlisten function do not keep\n      // alive too much.\n      listener = null;\n      events = null;\n      callback = null;\n    }\n  });\n}\n\n/**\n * Returns a promise that resolves when one of given messages has been observed\n * for the first time. And remove listener for all other messages.\n * @param {!Element} iframe\n * @param {string|!Array<string>} typeOfMessages\n * @param {boolean=} opt_is3P\n * @return {!Promise<!{data: !JsonObject, source: !Window, origin: string, event: !MessageEvent}>}\n */\nexport function listenForOncePromise(iframe, typeOfMessages, opt_is3P) {\n  const unlistenList = [];\n  if (typeof typeOfMessages == 'string') {\n    typeOfMessages = [typeOfMessages];\n  }\n  return new Promise(resolve => {\n    for (let i = 0; i < typeOfMessages.length; i++) {\n      const message = typeOfMessages[i];\n      const unlisten = listenFor(\n        iframe,\n        message,\n        (data, source, origin, event) => {\n          for (let i = 0; i < unlistenList.length; i++) {\n            unlistenList[i]();\n          }\n          resolve({data, source, origin, event});\n        },\n        opt_is3P\n      );\n      unlistenList.push(unlisten);\n    }\n  });\n}\n\n/**\n * Posts a message to the iframe.\n * @param {!Element} iframe The iframe.\n * @param {string} type Type of the message.\n * @param {!JsonObject} object Message payload.\n * @param {string} targetOrigin origin of the target.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n */\nexport function postMessage(iframe, type, object, targetOrigin, opt_is3P) {\n  postMessageToWindows(\n    iframe,\n    [{win: iframe.contentWindow, origin: targetOrigin}],\n    type,\n    object,\n    opt_is3P\n  );\n}\n\n/**\n * Posts an identical message to multiple target windows with the same\n * sentinel.\n * The message is serialized only once.\n * @param {!Element} iframe The iframe.\n * @param {!Array<{win: !Window, origin: string}>} targets to send the message\n *     to, pairs of window and its origin.\n * @param {string} type Type of the message.\n * @param {!JsonObject} object Message payload.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n */\nexport function postMessageToWindows(iframe, targets, type, object, opt_is3P) {\n  if (!iframe.contentWindow) {\n    return;\n  }\n  object['type'] = type;\n  object['sentinel'] = getSentinel_(iframe, opt_is3P);\n  let payload = object;\n  if (opt_is3P) {\n    // Serialize ourselves because that is much faster in Chrome.\n    payload = 'amp-' + JSON.stringify(object);\n  }\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i];\n    target.win./*OK*/ postMessage(payload, target.origin);\n  }\n}\n\n/**\n * Gets the sentinel string.\n * @param {!Element} iframe The iframe.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @return {string} Sentinel string.\n * @private\n */\nfunction getSentinel_(iframe, opt_is3P) {\n  return opt_is3P ? iframe.getAttribute('data-amp-3p-sentinel') : 'amp';\n}\n\n/**\n * JSON parses event.data if it needs to be\n * @param {*} data\n * @return {?JsonObject} object message\n * @private\n * @visibleForTesting\n */\nexport function parseIfNeeded(data) {\n  if (typeof data == 'string') {\n    if (data.charAt(0) == '{') {\n      data =\n        tryParseJson(data, e => {\n          dev().warn(\n            'IFRAME-HELPER',\n            'Postmessage could not be parsed. ' +\n              'Is it in a valid JSON format?',\n            e\n          );\n        }) || null;\n    } else if (isAmpMessage(data)) {\n      data = deserializeMessage(data);\n    } else {\n      data = null;\n    }\n  }\n  return /** @type {?JsonObject} */ (data);\n}\n\n/**\n * Manages a postMessage API for an iframe with a subscription message and\n * a way to broadcast messages to all subscribed windows, which\n * in turn must all be descendants of the contentWindow of the iframe.\n */\nexport class SubscriptionApi {\n  /**\n   * @param {!Element} iframe The iframe.\n   * @param {string} type Type of the subscription message.\n   * @param {boolean} is3p set to true if the iframe is 3p.\n   * @param {function(!JsonObject, !Window, string)} requestCallback Callback\n   *     invoked whenever a new window subscribes.\n   */\n  constructor(iframe, type, is3p, requestCallback) {\n    /** @private @const {!Element} */\n    this.iframe_ = iframe;\n    /** @private @const {boolean} */\n    this.is3p_ = is3p;\n    /** @private @const {!Array<{win: !Window, origin: string}>} */\n    this.clientWindows_ = [];\n\n    /** @private @const {!UnlistenDef} */\n    this.unlisten_ = listenFor(\n      this.iframe_,\n      type,\n      (data, source, origin) => {\n        // This message might be from any window within the iframe, we need\n        // to keep track of which windows want to be sent updates.\n        if (!this.clientWindows_.some(entry => entry.win == source)) {\n          this.clientWindows_.push({win: source, origin});\n        }\n        requestCallback(data, source, origin);\n      },\n      this.is3p_,\n      // For 3P frames we also allow nested frames within them to subscribe..\n      this.is3p_ /* opt_includingNestedWindows */\n    );\n  }\n\n  /**\n   * Sends a message to all subscribed windows.\n   * @param {string} type Type of the message.\n   * @param {!JsonObject} data Message payload.\n   */\n  send(type, data) {\n    // Remove clients that have been removed from the DOM.\n    remove(this.clientWindows_, client => !client.win.parent);\n    postMessageToWindows(\n      this.iframe_,\n      this.clientWindows_,\n      type,\n      data,\n      this.is3p_\n    );\n  }\n\n  /**\n   * Destroys iframe.\n   */\n  destroy() {\n    this.unlisten_();\n    this.clientWindows_.length = 0;\n  }\n}\n\n/**\n * @param {!Element} element\n * @return {boolean}\n */\nexport function looksLikeTrackingIframe(element) {\n  const box = element.getLayoutBox();\n  // This heuristic is subject to change.\n  if (box.width > 10 || box.height > 10) {\n    return false;\n  }\n  // Iframe is not tracking iframe if open with user interaction\n  return !closestAncestorElementBySelector(element, '.i-amphtml-overlay');\n}\n\n// Most common ad sizes\n// Array of [width, height] pairs.\nconst adSizes = [[300, 250], [320, 50], [300, 50], [320, 100]];\n\n/**\n * Guess whether this element might be an ad.\n * @param {!Element} element An amp-iframe element.\n * @return {boolean}\n * @visibleForTesting\n */\nexport function isAdLike(element) {\n  const box = element.getLayoutBox();\n  const {height, width} = box;\n  for (let i = 0; i < adSizes.length; i++) {\n    const refWidth = adSizes[i][0];\n    const refHeight = adSizes[i][1];\n    if (refHeight > height) {\n      continue;\n    }\n    if (refWidth > width) {\n      continue;\n    }\n    // Fuzzy matching to account for padding.\n    if (height - refHeight <= 20 && width - refWidth <= 20) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @param {!Element} iframe\n * @return {!Element}\n * @private\n */\nexport function disableScrollingOnIframe(iframe) {\n  addAttributesToElement(iframe, dict({'scrolling': 'no'}));\n\n  // This shouldn't work, but it does on Firefox.\n  // https://stackoverflow.com/a/15494969\n  setStyle(iframe, 'overflow', 'hidden');\n\n  return iframe;\n}\n\n/**\n * Returns true if win's properties can be accessed and win is defined.\n * This functioned is used to determine if a window is cross-domained\n * from the perspective of the current window.\n * @param {!Window} win\n * @return {boolean}\n * @private\n */\nexport function canInspectWindow(win) {\n  // TODO: this is not reliable.  The compiler assumes that property reads are\n  // side-effect free.  The recommended fix is to use goog.reflect.sinkValue\n  // but since we're not using the closure library I'm not sure how to do this.\n  // See https://github.com/google/closure-compiler/issues/3156\n  try {\n    // win['test'] could be truthy but not true the compiler shouldn't be able\n    // to optimize this check away.\n    return !!win.location.href && (win['test'] || true);\n  } catch (unusedErr) {\n    // eslint-disable-line no-unused-vars\n    return false;\n  }\n}\n\n/** @const {string} */\nexport const FIE_EMBED_PROP = '__AMP_EMBED__';\n\n/**\n * Returns the embed created using `installFriendlyIframeEmbed` or `null`.\n * Caution: This will only return the FIE after the iframe has 'loaded'. If you\n * are checking before this signal you may be in a race condition that returns\n * null.\n * @param {!HTMLIFrameElement} iframe\n * @return {?./friendly-iframe-embed.FriendlyIframeEmbed}\n */\nexport function getFriendlyIframeEmbedOptional(iframe) {\n  return /** @type {?./friendly-iframe-embed.FriendlyIframeEmbed} */ (iframe[\n    FIE_EMBED_PROP\n  ]);\n}\n\n/**\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isInFie(element) {\n  return (\n    element.classList.contains('i-amphtml-fie') ||\n    !!closestAncestorElementBySelector(element, '.i-amphtml-fie')\n  );\n}\n\n/**\n * @param {!HTMLIFrameElement} iframe\n */\nexport function makePausable(iframe) {\n  const oldAllow = (iframe.getAttribute('allow') || '').trim();\n  iframe.setAttribute(\n    'allow',\n    `${EXECUTION_WHILE_NOT_RENDERED} 'none';` + oldAllow\n  );\n}\n\n/**\n * @param {!HTMLIFrameElement} iframe\n * @return {boolean}\n */\nexport function isPausable(iframe) {\n  return (\n    !!iframe.featurePolicy &&\n    iframe.featurePolicy.features().indexOf(EXECUTION_WHILE_NOT_RENDERED) !=\n      -1 &&\n    !iframe.featurePolicy.allowsFeature(EXECUTION_WHILE_NOT_RENDERED)\n  );\n}\n\n/**\n * @param {!HTMLIFrameElement} iframe\n * @param {boolean} paused\n */\nexport function setPaused(iframe, paused) {\n  toggle(iframe, !paused);\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {READY_SCAN_SIGNAL} from './service/resources-interface';\nimport {Services} from './services';\n\n/** @const {!Array<string>} */\nconst EXCLUDE_INI_LOAD = [\n  'AMP-AD',\n  'AMP-ANALYTICS',\n  'AMP-PIXEL',\n  'AMP-AD-EXIT',\n];\n\n/**\n * Returns the promise that will be resolved when all content elements\n * have been loaded in the initially visible set.\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {!Window} hostWin\n * @param {!./layout-rect.LayoutRectDef} rect\n * @param {boolean=} opt_isInPrerender signifies if we are in prerender mode.\n * @return {!Promise}\n */\nexport function whenContentIniLoad(\n  elementOrAmpDoc,\n  hostWin,\n  rect,\n  opt_isInPrerender\n) {\n  const ampdoc = Services.ampdoc(elementOrAmpDoc);\n  return getMeasuredResources(ampdoc, hostWin, r => {\n    // TODO(jridgewell): Remove isFixed check here once the position\n    // is calculted correctly in a separate layer for embeds.\n    if (\n      !r.isDisplayed() ||\n      (!r.overlaps(rect) && !r.isFixed()) ||\n      (opt_isInPrerender && !r.prerenderAllowed())\n    ) {\n      return false;\n    }\n    return true;\n  }).then(resources => {\n    const promises = [];\n    resources.forEach(r => {\n      if (!EXCLUDE_INI_LOAD.includes(r.element.tagName)) {\n        promises.push(r.loadedOnce());\n      }\n    });\n    return Promise.all(promises);\n  });\n}\n\n/**\n * Returns a subset of resources which are (1) belong to the specified host\n * window, and (2) meet the filterFn given.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {!Window} hostWin\n * @param {function(!./service/resource.Resource):boolean} filterFn\n * @return {!Promise<!Array<!./service/resource.Resource>>}\n */\nexport function getMeasuredResources(ampdoc, hostWin, filterFn) {\n  // First, wait for the `ready-scan` signal. Waiting for each element\n  // individually is too expensive and `ready-scan` will cover most of\n  // the initially parsed elements.\n  // TODO(jridgewell): this path should be switched to use a future\n  // \"layer has been measured\" signal.\n  return ampdoc\n    .signals()\n    .whenSignal(READY_SCAN_SIGNAL)\n    .then(() => {\n      // Second, wait for any left-over elements to complete measuring.\n      const measurePromiseArray = [];\n      const resources = Services.resourcesForDoc(ampdoc);\n      resources.get().forEach(r => {\n        if (!r.hasBeenMeasured() && r.hostWin == hostWin && !r.hasOwner()) {\n          measurePromiseArray.push(r.getPageLayoutBoxAsync());\n        }\n      });\n      return Promise.all(measurePromiseArray);\n    })\n    .then(() => {\n      const resources = Services.resourcesForDoc(ampdoc);\n      return resources.get().filter(r => {\n        return (\n          r.hostWin == hostWin &&\n          !r.hasOwner() &&\n          r.hasBeenMeasured() &&\n          filterFn(r)\n        );\n      });\n    });\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\nimport {SubscriptionApi} from './iframe-helper';\nimport {devAssert} from './log';\nimport {dict} from './utils/object';\nimport {layoutRectLtwh, moveLayoutRect, rectIntersection} from './layout-rect';\n\n/**\n * The structure that defines the rectangle used in intersection observers.\n *\n * @typedef {{\n *   top: number,\n *   bottom: number,\n *   left: number,\n *   right: number,\n *   width: number,\n *   height: number,\n *   x: number,\n *   y: number,\n * }}\n */\nexport let DOMRect;\n\n/**\n * Returns the ratio of the smaller box's area to the larger box's area.\n * @param {!./layout-rect.LayoutRectDef} smaller\n * @param {!./layout-rect.LayoutRectDef} larger\n * @return {number}\n */\nfunction intersectionRatio(smaller, larger) {\n  return (smaller.width * smaller.height) / (larger.width * larger.height);\n}\n\n/**\n * Produces a change entry for that should be compatible with\n * IntersectionObserverEntry.\n *\n * Mutates passed in rootBounds to have x and y according to spec.\n *\n * @param {!./layout-rect.LayoutRectDef} element The element's layout rectangle\n * @param {?./layout-rect.LayoutRectDef} owner The owner's layout rect, if\n *     there is an owner.\n * @param {!./layout-rect.LayoutRectDef} viewport The viewport's layout rect.\n * @return {!IntersectionObserverEntry} A change entry.\n * @private\n */\nexport function getIntersectionChangeEntry(element, owner, viewport) {\n  devAssert(\n    element.width >= 0 && element.height >= 0,\n    'Negative dimensions in element.'\n  );\n  // Building an IntersectionObserverEntry.\n\n  let intersectionRect = element;\n  if (owner) {\n    intersectionRect =\n      rectIntersection(owner, element) ||\n      // No intersection.\n      layoutRectLtwh(0, 0, 0, 0);\n  }\n  intersectionRect =\n    rectIntersection(viewport, intersectionRect) ||\n    // No intersection.\n    layoutRectLtwh(0, 0, 0, 0);\n\n  // The element is relative to (0, 0), while the viewport moves. So, we must\n  // adjust.\n  const boundingClientRect = moveLayoutRect(\n    element,\n    -viewport.left,\n    -viewport.top\n  );\n  intersectionRect = moveLayoutRect(\n    intersectionRect,\n    -viewport.left,\n    -viewport.top\n  );\n  // Now, move the viewport to (0, 0)\n  const rootBounds = moveLayoutRect(viewport, -viewport.left, -viewport.top);\n\n  return /** @type {!IntersectionObserverEntry} */ ({\n    time: Date.now(),\n    rootBounds,\n    boundingClientRect,\n    intersectionRect,\n    intersectionRatio: intersectionRatio(intersectionRect, element),\n  });\n}\n\n/**\n * The IntersectionObserver class lets any element share its viewport\n * intersection data with an iframe of its choice (most likely contained within\n * the element itself.). When instantiated the class will start listening for a\n * 'send-intersections' postMessage from the iframe, and only then  would start\n * sending intersection data to the iframe. The intersection data would be sent\n * when the element is moved inside or outside the viewport as well as on scroll\n * and resize. The element should create an IntersectionObserver instance once\n * the Iframe element is created. The IntersectionObserver class exposes a\n * `fire` method that would send the intersection data to the iframe. The\n * IntersectionObserver class exposes a `onViewportCallback` method that should\n * be called inside if the viewportCallback of the element. This would let the\n * element sent intersection data automatically when there element comes inside\n * or goes outside the viewport and also manage sending intersection data\n * onscroll and resize. Note: The IntersectionObserver would not send any data\n * over to the iframe if it had not requested the intersection data already via\n * a postMessage.\n */\nexport class IntersectionObserver {\n  /**\n   * @param {!AMP.BaseElement} baseElement\n   * @param {!Element} iframe Iframe element which requested the\n   *     intersection data.\n   * @param {?boolean} opt_is3p Set to `true` when the iframe is 3'rd party.\n   */\n  constructor(baseElement, iframe, opt_is3p) {\n    /** @private @const {!AMP.BaseElement} */\n    this.baseElement_ = baseElement;\n    /** @private @const {!./service/timer-impl.Timer} */\n    this.timer_ = Services.timerFor(baseElement.win);\n    /** @private {boolean} */\n    this.shouldSendIntersectionChanges_ = false;\n    /** @private {boolean} */\n    this.inViewport_ = false;\n\n    /** @private {!Array<!IntersectionObserverEntry>} */\n    this.pendingChanges_ = [];\n\n    /** @private {number|string} */\n    this.flushTimeout_ = 0;\n\n    /** @private @const {function()} */\n    this.boundFlush_ = this.flush_.bind(this);\n\n    /**\n     * An object which handles tracking subscribers to the\n     * intersection updates for this element.\n     * Triggered by context.observeIntersection(…) inside the ad/iframe\n     * or by directly posting a send-intersections message.\n     * @private {!SubscriptionApi}\n     */\n    this.postMessageApi_ = new SubscriptionApi(\n      iframe,\n      'send-intersections',\n      opt_is3p || false,\n      // Each time someone subscribes we make sure that they\n      // get an update.\n      () => this.startSendingIntersectionChanges_()\n    );\n\n    /** @private {?Function} */\n    this.unlistenViewportChanges_ = null;\n  }\n\n  /**\n   * Fires element intersection\n   */\n  fire() {\n    this.sendElementIntersection_();\n  }\n\n  /**\n   * Check if we need to unlisten when moving out of viewport,\n   * unlisten and reset unlistenViewportChanges_.\n   * @private\n   */\n  unlistenOnOutViewport_() {\n    if (this.unlistenViewportChanges_) {\n      this.unlistenViewportChanges_();\n      this.unlistenViewportChanges_ = null;\n    }\n  }\n  /**\n   * Called via postMessage from the child iframe when the ad/iframe starts\n   * observing its position in the viewport.\n   * Sets a flag, measures the iframe position if necessary and sends\n   * one change record to the iframe.\n   * Note that this method may be called more than once if a single ad\n   * has multiple parties interested in viewability data.\n   * @private\n   */\n  startSendingIntersectionChanges_() {\n    this.shouldSendIntersectionChanges_ = true;\n    this.baseElement_.getVsync().measure(() => {\n      if (this.baseElement_.isInViewport()) {\n        this.onViewportCallback(true);\n      }\n      this.fire();\n    });\n  }\n\n  /**\n   * Triggered by the AmpElement to when it either enters or exits the visible\n   * viewport.\n   * @param {boolean} inViewport true if the element is in viewport.\n   */\n  onViewportCallback(inViewport) {\n    if (this.inViewport_ == inViewport) {\n      return;\n    }\n    this.inViewport_ = inViewport;\n    // Lets the ad know that it became visible or no longer is.\n    this.fire();\n    // And update the ad about its position in the viewport while\n    // it is visible.\n    if (inViewport) {\n      const send = this.fire.bind(this);\n      // Scroll events.\n      const unlistenScroll = this.baseElement_.getViewport().onScroll(send);\n      // Throttled scroll events. Also fires for resize events.\n      const unlistenChanged = this.baseElement_.getViewport().onChanged(send);\n      this.unlistenViewportChanges_ = () => {\n        unlistenScroll();\n        unlistenChanged();\n      };\n    } else {\n      this.unlistenOnOutViewport_();\n    }\n  }\n\n  /**\n   * Sends 'intersection' message to ad/iframe with intersection change records\n   * if this has been activated and we measured the layout box of the iframe\n   * at least once.\n   * @private\n   */\n  sendElementIntersection_() {\n    if (!this.shouldSendIntersectionChanges_) {\n      return;\n    }\n    const change = this.baseElement_.element.getIntersectionChangeEntry();\n    if (\n      this.pendingChanges_.length > 0 &&\n      this.pendingChanges_[this.pendingChanges_.length - 1].time == change.time\n    ) {\n      return;\n    }\n    this.pendingChanges_.push(change);\n    if (!this.flushTimeout_) {\n      // Send one immediately, …\n      this.flush_();\n      // but only send a maximum of 10 postMessages per second.\n      this.flushTimeout_ = this.timer_.delay(this.boundFlush_, 100);\n    }\n  }\n\n  /**\n   * @private\n   */\n  flush_() {\n    // TODO(zhouyx): One potential place to check if element is still in doc.\n    this.flushTimeout_ = 0;\n    if (!this.pendingChanges_.length) {\n      return;\n    }\n    // Note that SubscribeApi multicasts the update to all interested windows.\n    this.postMessageApi_.send(\n      'intersection',\n      dict({\n        'changes': this.pendingChanges_,\n      })\n    );\n    this.pendingChanges_.length = 0;\n  }\n\n  /**\n   * Provide a function to clear timeout before set this intersection to null.\n   */\n  destroy() {\n    this.timer_.cancel(this.flushTimeout_);\n    this.unlistenOnOutViewport_();\n    this.postMessageApi_.destroy();\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n\nimport {childElementsByTag, isJsonScriptTag} from './dom';\nimport {isObject} from './types';\n\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {*} should be string|number|boolean|null\n */\nlet JSONScalarDef;\n\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {*} should be !Object<string, ?JSONValueDef>\n */\nlet JSONObjectDef;\n\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {*} should be !Array<?JSONValueDef>\n */\nlet JSONArrayDef;\n\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {*} should be !JSONScalarDef|!JSONObjectDef|!JSONArrayDef\n */\nlet JSONValueDef;\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = Object.create(null);\n  for (const k in obj) {\n    if (!hasOwnProperty(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (let i = 0; i < parts.length; i++) {\n    const part = parts[i];\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      hasOwnProperty(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {*} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function parseJson(json) {\n  return /** @type {?JsonObject} */ (JSON.parse(/** @type {string} */ (json)));\n}\n\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {*} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    if (opt_onFailed) {\n      opt_onFailed(e);\n    }\n    return null;\n  }\n}\n\n/**\n * Helper method to get the json config from an element <script> tag\n * @param {!Element} element\n * @return {?JsonObject}\n * @throws {!Error} If element does not have exactly one <script> child\n * with type=\"application/json\", or if the <script> contents are not valid JSON.\n */\nexport function getChildJsonConfig(element) {\n  const scripts = childElementsByTag(element, 'script');\n  const n = scripts.length;\n  if (n !== 1) {\n    throw new Error(`Found ${scripts.length} <script> children. Expected 1.`);\n  }\n  const script = scripts[0];\n  if (!isJsonScriptTag(script)) {\n    throw new Error('<script> child must have type=\"application/json\"');\n  }\n  try {\n    return parseJson(script.textContent);\n  } catch (unusedError) {\n    throw new Error('Failed to parse <script> contents. Is it valid JSON?');\n  }\n}\n\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\nexport function deepEquals(a, b, depth = 5) {\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n  const queue = [{a, b, depth}];\n  while (queue.length > 0) {\n    const {a, b, depth} = queue.shift();\n    // Only check deep equality if depth > 0.\n    if (depth > 0) {\n      if (typeof a !== typeof b) {\n        return false;\n      } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          queue.push({a: a[i], b: b[i], depth: depth - 1});\n        }\n        continue;\n      } else if (a && b && typeof a === 'object' && typeof b === 'object') {\n        const keysA = Object.keys(/** @type {!Object} */ (a));\n        const keysB = Object.keys(/** @type {!Object} */ (b));\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n        for (let i = 0; i < keysA.length; i++) {\n          const k = keysA[i];\n          queue.push({a: a[k], b: b[k], depth: depth - 1});\n        }\n        continue;\n      }\n    }\n    // If we get here, then depth == 0 or (a, b) are primitives.\n    if (a !== b) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {*} obj\n * @param {string} key\n * @return {boolean}\n */\nfunction hasOwnProperty(obj, key) {\n  if (obj == null || typeof obj != 'object') {\n    return false;\n  }\n  return Object.prototype.hasOwnProperty.call(\n    /** @type {!Object} */ (obj),\n    key\n  );\n}\n\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\nexport function jsonConfiguration(obj) {\n  return /** @type {!JsonObject} */ (obj);\n}\n\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {!Object|!Array|string|number|boolean|null} value\n * @return {!InternalJsonLiteralTypeDef}\n */\nexport function jsonLiteral(value) {\n  return /** @type {!InternalJsonLiteralTypeDef} */ (value);\n}\n\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\nexport function includeJsonLiteral(value) {\n  return value;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The structure that combines position and size for an element. The exact\n * interpretation of position and size depends on the use case.\n *\n * @typedef {{\n *   top: number,\n *   bottom: number,\n *   left: number,\n *   right: number,\n *   width: number,\n *   height: number,\n *   x: number,\n *   y: number\n * }}\n */\nexport let LayoutRectDef;\n\n/**\n * The structure that represents the margins of an Element.\n *\n * @typedef {{\n *   top: number,\n *   right: number,\n *   bottom: number,\n *   left: number\n * }}\n */\nexport let LayoutMarginsDef;\n\n/**\n * The structure that represents a requested change to the margins of an\n * Element. Any new values specified will replace existing ones (rather than\n * being additive).\n *\n * @typedef {{\n *   top: (number|undefined),\n *   right: (number|undefined),\n *   bottom: (number|undefined),\n *   left: (number|undefined)\n * }}\n */\nexport let LayoutMarginsChangeDef;\n\n/**\n * RelativePositions\n *\n * Describes the relative position of an element to another (whether the\n * first is inside the second, on top of the second or on the bottom\n * @enum {string}\n */\nexport const RelativePositions = {\n  INSIDE: 'inside',\n  TOP: 'top',\n  BOTTOM: 'bottom',\n};\n\n/**\n * Creates a layout rect based on the left, top, width and height parameters\n * in that order.\n * @param {number} left\n * @param {number} top\n * @param {number} width\n * @param {number} height\n * @return {!LayoutRectDef}\n */\nexport function layoutRectLtwh(left, top, width, height) {\n  return {\n    left,\n    top,\n    width,\n    height,\n    bottom: top + height,\n    right: left + width,\n    x: left,\n    y: top,\n  };\n}\n\n/**\n * Creates a layout rect based on the DOMRect, e.g. obtained from calling\n * getBoundingClientRect.\n * @param {!ClientRect} rect\n * @return {!LayoutRectDef}\n */\nexport function layoutRectFromDomRect(rect) {\n  return layoutRectLtwh(\n    Number(rect.left),\n    Number(rect.top),\n    Number(rect.width),\n    Number(rect.height)\n  );\n}\n\n/**\n * Returns true if the specified two rects overlap by a single pixel.\n * @param {!LayoutRectDef} r1\n * @param {!LayoutRectDef} r2\n * @return {boolean}\n */\nexport function layoutRectsOverlap(r1, r2) {\n  return (\n    r1.top <= r2.bottom &&\n    r2.top <= r1.bottom &&\n    r1.left <= r2.right &&\n    r2.left <= r1.right\n  );\n}\n\n/**\n * Returns the intersection between a, b or null if there is none.\n * @param {...?LayoutRectDef|undefined} var_args\n * @return {?LayoutRectDef}\n */\nexport function rectIntersection(var_args) {\n  let x0 = -Infinity;\n  let x1 = Infinity;\n  let y0 = -Infinity;\n  let y1 = Infinity;\n  for (let i = 0; i < arguments.length; i++) {\n    const current = arguments[i];\n    if (!current) {\n      continue;\n    }\n    x0 = Math.max(x0, current.left);\n    x1 = Math.min(x1, current.left + current.width);\n    y0 = Math.max(y0, current.top);\n    y1 = Math.min(y1, current.top + current.height);\n    if (x1 < x0 || y1 < y0) {\n      return null;\n    }\n  }\n  if (x1 == Infinity) {\n    return null;\n  }\n  return layoutRectLtwh(x0, y0, x1 - x0, y1 - y0);\n}\n\n/**\n * Returns the position of r2 relative to r1\n * @param {!LayoutRectDef} r1\n * @param {!LayoutRectDef} r2\n * @return {RelativePositions}\n */\nexport function layoutRectsRelativePos(r1, r2) {\n  if (r1.top < r2.top) {\n    return RelativePositions.TOP;\n  } else if (r1.bottom > r2.bottom) {\n    return RelativePositions.BOTTOM;\n  } else {\n    return RelativePositions.INSIDE;\n  }\n}\n\n/**\n * Determines if any portion of a layoutBox would be onscreen in the given\n * viewport, when scrolled to the specified position.\n * @param {!LayoutRectDef} layoutBox\n * @param {!./service/viewport/viewport-interface.ViewportInterface} viewport\n * @param {number} scrollPos\n * @return {RelativePositions}\n */\nexport function layoutPositionRelativeToScrolledViewport(\n  layoutBox,\n  viewport,\n  scrollPos\n) {\n  const scrollLayoutBox = layoutRectFromDomRect(\n    /** @type {!ClientRect} */ ({\n      top: scrollPos,\n      bottom: scrollPos + viewport.getHeight(),\n      left: 0,\n      right: viewport.getWidth(),\n    })\n  );\n  if (layoutRectsOverlap(layoutBox, scrollLayoutBox)) {\n    return RelativePositions.INSIDE;\n  } else {\n    return layoutRectsRelativePos(layoutBox, scrollLayoutBox);\n  }\n}\n\n/**\n * Expand the layout rect using multiples of width and height.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dw Expansion in width, specified as a multiple of width.\n * @param {number} dh Expansion in height, specified as a multiple of height.\n * @return {!LayoutRectDef}\n */\nexport function expandLayoutRect(rect, dw, dh) {\n  return layoutRectLtwh(\n    rect.left - rect.width * dw,\n    rect.top - rect.height * dh,\n    rect.width * (1 + dw * 2),\n    rect.height * (1 + dh * 2)\n  );\n}\n\n/**\n * Moves the layout rect using dx and dy.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dx Move horizontally with this value.\n * @param {number} dy Move vertically with this value.\n * @return {!LayoutRectDef}\n */\nexport function moveLayoutRect(rect, dx, dy) {\n  if ((dx == 0 && dy == 0) || (rect.width == 0 && rect.height == 0)) {\n    return rect;\n  }\n  return layoutRectLtwh(rect.left + dx, rect.top + dy, rect.width, rect.height);\n}\n\n/**\n * @param {!LayoutMarginsDef} margins\n * @param {!LayoutMarginsChangeDef} change\n * @return {boolean}\n */\nexport function areMarginsChanged(margins, change) {\n  return (\n    (change.top !== undefined && change.top != margins.top) ||\n    (change.right !== undefined && change.right != margins.right) ||\n    (change.bottom !== undefined && change.bottom != margins.bottom) ||\n    (change.left !== undefined && change.left != margins.left)\n  );\n}\n\n/**\n * @param {!LayoutRectDef} from\n * @param {!LayoutRectDef} to\n * @return {boolean}\n */\nexport function layoutRectSizeEquals(from, to) {\n  return from.width == to.width && from.height === to.height;\n}\n\n/**\n * @param {?LayoutRectDef} r1\n * @param {?LayoutRectDef} r2\n * @return {boolean}\n */\nexport function layoutRectEquals(r1, r2) {\n  if (!r1 || !r2) {\n    return false;\n  }\n  return (\n    r1.left == r2.left &&\n    r1.top == r2.top &&\n    r1.width == r2.width &&\n    r1.height == r2.height\n  );\n}\n\n/**\n * @param {LayoutMarginsChangeDef|undefined} marginsChange\n * @return {LayoutMarginsChangeDef|undefined}\n */\nexport function cloneLayoutMarginsChangeDef(marginsChange) {\n  if (!marginsChange) {\n    return marginsChange;\n  }\n  return {\n    top: marginsChange.top,\n    bottom: marginsChange.bottom,\n    left: marginsChange.left,\n    right: marginsChange.right,\n  };\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implements element layout. See https://goo.gl/9avXuT for\n * details.\n */\n\nimport {dev, devAssert, userAssert} from './log';\nimport {htmlFor} from './static-template';\nimport {isFiniteNumber} from './types';\nimport {setStyle, setStyles, toggle} from './style';\nimport {startsWith} from './string';\n\n/**\n * @enum {string}\n */\nexport const Layout = {\n  NODISPLAY: 'nodisplay',\n  FIXED: 'fixed',\n  FIXED_HEIGHT: 'fixed-height',\n  RESPONSIVE: 'responsive',\n  CONTAINER: 'container',\n  FILL: 'fill',\n  FLEX_ITEM: 'flex-item',\n  FLUID: 'fluid',\n  INTRINSIC: 'intrinsic',\n};\n\n/**\n * Layout priorities to use with BaseElement#getLayoutPriority() and\n * BaseElement#updateLayoutPriority().\n * @enum {number}\n */\nexport const LayoutPriority = {\n  CONTENT: 0,\n  METADATA: 1,\n  ADS: 2,\n  BACKGROUND: 3,\n};\n\n/**\n * CSS Length type. E.g. \"1px\" or \"20vh\".\n * @typedef {string}\n */\nexport let LengthDef;\n\n/**\n * @typedef {{\n *   width: string,\n *   height: string\n * }}\n */\nlet DimensionsDef;\n\n/**\n * The set of elements with natural dimensions, that is, elements\n * which have a known dimension either based on their value specified here,\n * or, if the value is null, a dimension specific to the browser.\n * `hasNaturalDimensions` checks for membership in this set.\n * `getNaturalDimensions` determines the dimensions for an element in the\n *    set and caches it.\n * @type {!Object<string, ?DimensionsDef>}\n * @private  Visible for testing only!\n */\nexport const naturalDimensions_ = {\n  'AMP-PIXEL': {width: '0px', height: '0px'},\n  'AMP-ANALYTICS': {width: '1px', height: '1px'},\n  // TODO(dvoytenko): audio should have width:auto.\n  'AMP-AUDIO': null,\n  'AMP-SOCIAL-SHARE': {width: '60px', height: '44px'},\n};\n\n/**\n * Elements that the progress can be shown for. This set has to be externalized\n * since the element's implementation may not be downloaded yet.\n * This list does not include video players which are found via regex later.\n * @enum {boolean}\n * @private  Visible for testing only!\n */\nexport const LOADING_ELEMENTS_ = {\n  'AMP-AD': true,\n  'AMP-ANIM': true,\n  'AMP-EMBED': true,\n  'AMP-FACEBOOK': true,\n  'AMP-FACEBOOK-COMMENTS': true,\n  'AMP-FACEBOOK-PAGE': true,\n  'AMP-GOOGLE-DOCUMENT-EMBED': true,\n  'AMP-IFRAME': true,\n  'AMP-IMG': true,\n  'AMP-INSTAGRAM': true,\n  'AMP-LIST': true,\n  'AMP-PINTEREST': true,\n  'AMP-PLAYBUZZ': true,\n  'AMP-TWITTER': true,\n};\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they are listed individually.\n * @private @const {!RegExp}\n */\nconst videoPlayerTagNameRe = /^amp\\-(video|.+player)|AMP-BRIGHTCOVE|AMP-DAILYMOTION|AMP-YOUTUBE|AMP-VIMEO|AMP-IMA-VIDEO/i;\n\n/**\n * @param {string} s\n * @return {Layout|undefined} Returns undefined in case of failure to parse\n *   the layout string.\n */\nexport function parseLayout(s) {\n  for (const k in Layout) {\n    if (Layout[k] == s) {\n      return Layout[k];\n    }\n  }\n  return undefined;\n}\n\n/**\n * @param {!Layout} layout\n * @return {string}\n */\nexport function getLayoutClass(layout) {\n  return 'i-amphtml-layout-' + layout;\n}\n\n/**\n * Whether an element with this layout inherently defines the size.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeDefined(layout) {\n  return (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.FILL ||\n    layout == Layout.FLEX_ITEM ||\n    layout == Layout.FLUID ||\n    layout == Layout.INTRINSIC\n  );\n}\n\n/**\n * Whether an element with this layout has a fixed dimension.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeFixed(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT;\n}\n\n/**\n * Whether the tag is an internal (service) AMP tag.\n * @param {!Node|string} tag\n * @return {boolean}\n */\nexport function isInternalElement(tag) {\n  const tagName = typeof tag == 'string' ? tag : tag.tagName;\n  return tagName && startsWith(tagName.toLowerCase(), 'i-');\n}\n\n/**\n * Parses the CSS length value. If no units specified, the assumed value is\n * \"px\". Returns undefined in case of parsing error.\n * @param {string|undefined|null} s\n * @return {!LengthDef|undefined}\n */\nexport function parseLength(s) {\n  if (typeof s == 'number') {\n    return s + 'px';\n  }\n  if (!s) {\n    return undefined;\n  }\n  if (!/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)?$/.test(s)) {\n    return undefined;\n  }\n  if (/^\\d+(\\.\\d+)?$/.test(s)) {\n    return s + 'px';\n  }\n  return s;\n}\n\n/**\n * Asserts that the supplied value is a non-percent CSS Length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLength(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)$/.test(length),\n    'Invalid length value: %s',\n    length\n  );\n  return /** @type {!LengthDef} */ (length);\n}\n\n/**\n * Asserts that the supplied value is a CSS Length value\n * (including percent unit).\n * @param {!LengthDef|string} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLengthOrPercent(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|%)$/.test(length),\n    'Invalid length or percent value: %s',\n    length\n  );\n  return length;\n}\n\n/**\n * Returns units from the CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {string}\n */\nexport function getLengthUnits(length) {\n  assertLength(length);\n  dev().assertString(length);\n  const m = userAssert(\n    length.match(/[a-z]+/i),\n    'Failed to read units from %s',\n    length\n  );\n  return m[0];\n}\n\n/**\n * Returns the numeric value of a CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {number|undefined}\n */\nexport function getLengthNumeral(length) {\n  const res = parseFloat(length);\n  return isFiniteNumber(res) ? res : undefined;\n}\n\n/**\n * Determines whether the tagName is a known element that has natural dimensions\n * in our runtime or the browser.\n * @param {string} tagName The element tag name.\n * @return {boolean}\n */\nexport function hasNaturalDimensions(tagName) {\n  tagName = tagName.toUpperCase();\n  return naturalDimensions_[tagName] !== undefined;\n}\n\n/**\n * Determines the default dimensions for an element which could vary across\n * different browser implementations, like <audio> for instance.\n * This operation can only be completed for an element whitelisted by\n * `hasNaturalDimensions`.\n * @param {!Element} element\n * @return {DimensionsDef}\n */\nexport function getNaturalDimensions(element) {\n  const tagName = element.tagName.toUpperCase();\n  devAssert(naturalDimensions_[tagName] !== undefined);\n  if (!naturalDimensions_[tagName]) {\n    const doc = element.ownerDocument;\n    const naturalTagName = tagName.replace(/^AMP\\-/, '');\n    const temp = doc.createElement(naturalTagName);\n    // For audio, should no-op elsewhere.\n    temp.controls = true;\n    setStyles(temp, {\n      position: 'absolute',\n      visibility: 'hidden',\n    });\n    doc.body.appendChild(temp);\n    naturalDimensions_[tagName] = {\n      width: (temp./*OK*/ offsetWidth || 1) + 'px',\n      height: (temp./*OK*/ offsetHeight || 1) + 'px',\n    };\n    doc.body.removeChild(temp);\n  }\n  return /** @type {DimensionsDef} */ (naturalDimensions_[tagName]);\n}\n\n/**\n * Whether the loading can be shown for the specified elemeent. This set has\n * to be externalized since the element's implementation may not be\n * downloaded yet.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isLoadingAllowed(element) {\n  const tagName = element.tagName.toUpperCase();\n  return LOADING_ELEMENTS_[tagName] || isIframeVideoPlayerComponent(tagName);\n}\n\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they're present in the LOADING_ELEMENTS_ whitelist.\n * @param {string} tagName\n * @return {boolean}\n */\nexport function isIframeVideoPlayerComponent(tagName) {\n  if (tagName == 'AMP-VIDEO') {\n    return false;\n  }\n  return videoPlayerTagNameRe.test(tagName);\n}\n\n/**\n * Applies layout to the element. Visible for testing only.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this method is used for server-side rendering (SSR) and\n * any changes made to it must be made in coordination with caches that\n * implement SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @param {!Element} element\n * @return {!Layout}\n */\nexport function applyStaticLayout(element) {\n  // Check if the layout has already been done by server-side rendering or\n  // client-side rendering and the element was cloned. The document may be\n  // visible to the user if the boilerplate was removed so please take care in\n  // making changes here.\n  const completedLayoutAttr = element.getAttribute('i-amphtml-layout');\n  if (completedLayoutAttr) {\n    const layout = /** @type {!Layout} */ (devAssert(\n      parseLayout(completedLayoutAttr)\n    ));\n    if (\n      (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) &&\n      element.firstElementChild\n    ) {\n      // Find sizer, but assume that it might not have been parsed yet.\n      element.sizerElement =\n        element.querySelector('i-amphtml-sizer') || undefined;\n    } else if (layout == Layout.NODISPLAY) {\n      toggle(element, false);\n      // TODO(jridgewell): Temporary hack while SSR still adds an inline\n      // `display: none`\n      element['style']['display'] = '';\n    }\n    return layout;\n  }\n\n  // If the layout was already done by server-side rendering (SSR), then the\n  // code below will not run. Any changes below will necessitate a change to SSR\n  // and must be coordinated with caches that implement SSR. See bit.ly/amp-ssr.\n\n  // Parse layout from the element.\n  const layoutAttr = element.getAttribute('layout');\n  const widthAttr = element.getAttribute('width');\n  const heightAttr = element.getAttribute('height');\n  const sizesAttr = element.getAttribute('sizes');\n  const heightsAttr = element.getAttribute('heights');\n\n  // Input layout attributes.\n  const inputLayout = layoutAttr ? parseLayout(layoutAttr) : null;\n  userAssert(inputLayout !== undefined, 'Unknown layout: %s', layoutAttr);\n  /** @const {string|null|undefined} */\n  const inputWidth =\n    widthAttr && widthAttr != 'auto' ? parseLength(widthAttr) : widthAttr;\n  userAssert(inputWidth !== undefined, 'Invalid width value: %s', widthAttr);\n  /** @const {string|null|undefined} */\n  const inputHeight =\n    heightAttr && heightAttr != 'fluid' ? parseLength(heightAttr) : heightAttr;\n  userAssert(inputHeight !== undefined, 'Invalid height value: %s', heightAttr);\n\n  // Effective layout attributes. These are effectively constants.\n  let width;\n  let height;\n  let layout;\n\n  // Calculate effective width and height.\n  if (\n    (!inputLayout ||\n      inputLayout == Layout.FIXED ||\n      inputLayout == Layout.FIXED_HEIGHT) &&\n    (!inputWidth || !inputHeight) &&\n    hasNaturalDimensions(element.tagName)\n  ) {\n    // Default width and height: handle elements that do not specify a\n    // width/height and are defined to have natural browser dimensions.\n    const dimensions = getNaturalDimensions(element);\n    width =\n      inputWidth || inputLayout == Layout.FIXED_HEIGHT\n        ? inputWidth\n        : dimensions.width;\n    height = inputHeight || dimensions.height;\n  } else {\n    width = inputWidth;\n    height = inputHeight;\n  }\n\n  // Calculate effective layout.\n  if (inputLayout) {\n    layout = inputLayout;\n  } else if (!width && !height) {\n    layout = Layout.CONTAINER;\n  } else if (height == 'fluid') {\n    layout = Layout.FLUID;\n  } else if (height && (!width || width == 'auto')) {\n    layout = Layout.FIXED_HEIGHT;\n  } else if (height && width && (sizesAttr || heightsAttr)) {\n    layout = Layout.RESPONSIVE;\n  } else {\n    layout = Layout.FIXED;\n  }\n\n  // Verify layout attributes.\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(height, 'Expected height to be available: %s', heightAttr);\n  }\n  if (layout == Layout.FIXED_HEIGHT) {\n    userAssert(\n      !width || width == 'auto',\n      'Expected width to be either absent or equal \"auto\" ' +\n        'for fixed-height layout: %s',\n      widthAttr\n    );\n  }\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(\n      width && width != 'auto',\n      'Expected width to be available and not equal to \"auto\": %s',\n      widthAttr\n    );\n  }\n\n  if (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    userAssert(\n      getLengthUnits(width) == getLengthUnits(height),\n      'Length units should be the same for width and height: %s, %s',\n      widthAttr,\n      heightAttr\n    );\n  } else {\n    userAssert(\n      heightsAttr === null,\n      'Unexpected \"heights\" attribute for none-responsive layout'\n    );\n  }\n\n  // Apply UI.\n  element.classList.add(getLayoutClass(layout));\n  if (isLayoutSizeDefined(layout)) {\n    element.classList.add('i-amphtml-layout-size-defined');\n  }\n  if (layout == Layout.NODISPLAY) {\n    // CSS defines layout=nodisplay automatically with `display:none`. Thus\n    // no additional styling is needed.\n    toggle(element, false);\n    // TODO(jridgewell): Temporary hack while SSR still adds an inline\n    // `display: none`\n    element['style']['display'] = '';\n  } else if (layout == Layout.FIXED) {\n    setStyles(element, {\n      width: dev().assertString(width),\n      height: dev().assertString(height),\n    });\n  } else if (layout == Layout.FIXED_HEIGHT) {\n    setStyle(element, 'height', dev().assertString(height));\n  } else if (layout == Layout.RESPONSIVE) {\n    const sizer = element.ownerDocument.createElement('i-amphtml-sizer');\n    setStyles(sizer, {\n      paddingTop:\n        (getLengthNumeral(height) / getLengthNumeral(width)) * 100 + '%',\n    });\n    element.insertBefore(sizer, element.firstChild);\n    element.sizerElement = sizer;\n  } else if (layout == Layout.INTRINSIC) {\n    // Intrinsic uses an svg inside the sizer element rather than the padding\n    // trick Note a naked svg won't work becasue other thing expect the\n    // i-amphtml-sizer element\n    const sizer = htmlFor(element)`\n      <i-amphtml-sizer class=\"i-amphtml-sizer\">\n        <img alt=\"\" role=\"presentation\" aria-hidden=\"true\"\n             class=\"i-amphtml-intrinsic-sizer\" />\n      </i-amphtml-sizer>`;\n    const intrinsicSizer = sizer.firstElementChild;\n    intrinsicSizer.setAttribute(\n      'src',\n      `data:image/svg+xml;charset=utf-8,<svg height=\"${height}\" width=\"${width}\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"/>`\n    );\n    element.insertBefore(sizer, element.firstChild);\n    element.sizerElement = sizer;\n  } else if (layout == Layout.FILL) {\n    // Do nothing.\n  } else if (layout == Layout.CONTAINER) {\n    // Do nothing. Elements themselves will check whether the supplied\n    // layout value is acceptable. In particular container is only OK\n    // sometimes.\n  } else if (layout == Layout.FLEX_ITEM) {\n    // Set height and width to a flex item if they exist.\n    // The size set to a flex item could be overridden by `display: flex` later.\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    if (height) {\n      setStyle(element, 'height', height);\n    }\n  } else if (layout == Layout.FLUID) {\n    element.classList.add('i-amphtml-layout-awaiting-size');\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    setStyle(element, 'height', 0);\n  }\n  // Mark the element as having completed static layout, in case it is cloned\n  // in the future.\n  element.setAttribute('i-amphtml-layout', layout);\n  return layout;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\nimport {getModeObject} from './mode-object';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray, isEnumValue} from './types';\nimport {once} from './utils/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n * @private Visible for testing only.\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error.js to break cyclic\n * dependency.\n * @param {function(*, !Element=)|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = arg =>\n  encodeURIComponent(String(elementStringOrPassthru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don’t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(!./mode.ModeDef):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(!./mode.ModeDef):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then(response => response.json(), noop)\n        .then(opt_messages => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    // Delegate to the specific resolver.\n    return this.levelFunc_(getModeObject());\n  }\n\n  /**\n   * @param {string} tag\n   * @param {string} level\n   * @param {!Array} messages\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() != LogLevel.OFF) {\n      let fn = this.win.console.log;\n      if (level == 'ERROR') {\n        fn = this.win.console.error || fn;\n      } else if (level == 'INFO') {\n        fn = this.win.console.info || fn;\n      } else if (level == 'WARN') {\n        fn = this.win.console.warn || fn;\n      }\n      const args = this.maybeExpandMessageArgs_(messages);\n      // Prefix console message with \"[tag]\".\n      const prefix = `[${tag}]`;\n      if (typeof args[0] === 'string') {\n        // Prepend string to avoid breaking string substitutions e.g. %s.\n        args[0] = prefix + ' ' + args[0];\n      } else {\n        args.unshift(prefix);\n      }\n      fn.apply(this.win.console, args);\n    }\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  fine(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.FINE) {\n      this.msg_(tag, 'FINE', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  info(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.INFO) {\n      this.msg_(tag, 'INFO', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  warn(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.WARN) {\n      this.msg_(tag, 'WARN', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} var_args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.ERROR) {\n      this.msg_(tag, 'ERROR', Array.prototype.slice.call(arguments, 1));\n    } else {\n      const error = createErrorVargs.apply(\n        null,\n        Array.prototype.slice.call(arguments, 1)\n      );\n      this.prepareError_(error);\n      return error;\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * NOTE: for an explanation of the tempate R implementation see\n   * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {R} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is `null` or `undefined`.\n   * @template T\n   * @template R :=\n   *     mapunion(T, (V) =>\n   *         cond(eq(V, 'null'),\n   *             none(),\n   *             cond(eq(V, 'undefined'),\n   *                 none(),\n   *                 V)))\n   *  =:\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    let firstElement;\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n    if (!shouldBeTrueish) {\n      const message = opt_message || 'Assertion failed';\n      const splitMessage = message.split('%s');\n      const first = splitMessage.shift();\n      let formatted = first;\n      const messageArray = [];\n      let i = 2;\n      pushIfNonEmpty(messageArray, first);\n      while (splitMessage.length > 0) {\n        const nextConstant = splitMessage.shift();\n        const val = arguments[i++];\n        if (val && val.tagName) {\n          firstElement = val;\n        }\n        messageArray.push(val);\n        pushIfNonEmpty(messageArray, nextConstant.trim());\n        formatted += stringOrElementString(val) + nextConstant;\n      }\n      const e = new Error(formatted);\n      e.fromAssert = true;\n      e.associatedElement = firstElement;\n      e.messageArray = messageArray;\n      this.prepareError_(e);\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n      throw e;\n    }\n    return shouldBeTrueish;\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    const shouldBeTrueish = shouldBeElement && shouldBeElement.nodeType == 1;\n    this.assertType_(\n      shouldBeElement,\n      shouldBeTrueish,\n      'Element expected',\n      opt_message\n    );\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    this.assertType_(\n      shouldBeString,\n      typeof shouldBeString == 'string',\n      'String expected',\n      opt_message\n    );\n    return /** @type {string} */ (shouldBeString);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    this.assertType_(\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    );\n    return /** @type {number} */ (shouldBeNumber);\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    this.assertType_(\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    );\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    this.assertType_(\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    );\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n\n  /**\n   * Asserts and returns the enum value. If the enum doesn't contain such a\n   * value, the error is thrown.\n   *\n   * @param {!Object<T>} enumObj\n   * @param {string} s\n   * @param {string=} opt_enumName\n   * @return {T}\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertEnumValue(enumObj, s, opt_enumName) {\n    if (isEnumValue(enumObj, s)) {\n      return s;\n    }\n    this.assert(false, 'Unknown %s value: \"%s\"', opt_enumName || 'enum', s);\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n\n  /**\n   * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n   *\n   * It understands array-based \"id\"-contracted messages.\n   *\n   * Otherwise creates a sprintf syntax string containing the optional message or the\n   * default. An interpolation token is added at the end to include the `subject`.\n   * @param {*} subject\n   * @param {*} assertion\n   * @param {string} defaultMessage\n   * @param {!Array|string=} opt_message\n   * @private\n   */\n  assertType_(subject, assertion, defaultMessage, opt_message) {\n    if (isArray(opt_message)) {\n      this.assert(assertion, opt_message.concat(subject));\n    } else {\n      this.assert(assertion, `${opt_message || defaultMessage}: %s`, subject);\n    }\n  }\n}\n\n/**\n * @param {string|!Element} val\n * @return {string}\n */\nconst stringOrElementString = val =>\n  /** @type {string} */ (elementStringOrPassthru(val));\n\n/**\n * @param {*} val\n * @return {*}\n */\nfunction elementStringOrPassthru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (val && val.nodeType == 1) {\n    return val.tagName.toLowerCase() + (val.id ? '#' + val.id : '');\n  }\n  return val;\n}\n\n/**\n * @param {!Array} array\n * @param {*} val\n */\nfunction pushIfNonEmpty(array, val) {\n  if (val != '') {\n    array.push(val);\n  }\n}\n\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\nexport function duplicateErrorIfNecessary(error) {\n  const messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n  if (messageProperty && messageProperty.writable) {\n    return error;\n  }\n\n  const {message, stack} = error;\n  const e = new Error(message);\n  // Copy all the extraneous things we attach.\n  for (const prop in error) {\n    e[prop] = error[prop];\n  }\n  // Ensure these are copied.\n  e.stack = stack;\n  return e;\n}\n\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\nexport function createErrorVargs(var_args) {\n  let error = null;\n  let message = '';\n  for (let i = 0; i < arguments.length; i++) {\n    const arg = arguments[i];\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n  return error;\n}\n\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\nexport function rethrowAsync(var_args) {\n  const error = createErrorVargs.apply(null, arguments);\n  setTimeout(() => {\n    // reportError is installed globally per window in the entry point.\n    self.__AMP_REPORT_ERROR(error);\n    throw error;\n  });\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?Function}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log contructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log contructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    mode => {\n      const logNum = parseInt(mode.log, 10);\n      if (mode.development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, mode => {\n    const logNum = parseInt(mode.log, 10);\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\n\n/**\n * Provides info about the current app. This return value may be cached and\n * passed around as it will always be DCE'd.\n * @param {?Window=} opt_win\n * @return {!./mode.ModeDef}\n */\nexport function getModeObject(opt_win) {\n  return {\n    localDev: getMode(opt_win).localDev,\n    development: getMode(opt_win).development,\n    filter: getMode(opt_win).filter,\n    minified: getMode(opt_win).minified,\n    lite: getMode(opt_win).lite,\n    test: getMode(opt_win).test,\n    log: getMode(opt_win).log,\n    version: getMode(opt_win).version,\n    rtvVersion: getMode(opt_win).rtvVersion,\n    singlePassType: getMode(opt_win).singlePassType,\n  };\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString_} from './url-parse-query-string';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   filter: (string|undefined),\n *   minified: boolean,\n *   lite: boolean,\n *   test: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   singlePassType: (string|undefined)\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_DEV is only replaced when `gulp dist` is called without the\n  // --fortesting flag.\n  const IS_DEV = true;\n  const IS_MINIFIED = false;\n\n  const localDevEnabled = !!AMP_CONFIG.localDev;\n  const runningTests =\n    !!AMP_CONFIG.test || (IS_DEV && !!(win.__AMP_TEST || win.__karma__));\n  const runningTestsOnIe = win.__karma__ && win.__karma__.config.amp.testOnIe;\n  const isLocalDev = IS_DEV && (localDevEnabled || runningTests);\n  const hashQuery = parseQueryString_(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location.originalHash || win.location.hash\n  );\n  const singlePassType = AMP_CONFIG.spt;\n\n  const searchQuery = parseQueryString_(win.location.search);\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win, isLocalDev);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `gulp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    // Triggers validation or enable pub level logging. Validation can be\n    // bypassed via #validate=0.\n    // Note that AMP_DEV_MODE flag is used for testing purposes.\n    // Use Array.indexOf instead of Array.includes because of #24219\n    development: !!(\n      ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].indexOf(\n        hashQuery['development']\n      ) >= 0 || win.AMP_DEV_MODE\n    ),\n    examiner: hashQuery['development'] == '2',\n    // Allows filtering validation errors by error category. For the\n    // available categories, see ErrorCategory in validator/validator.proto.\n    filter: hashQuery['filter'],\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    // amp-user-location override\n    userLocationOverride: hashQuery['amp-user-location'],\n    minified: IS_MINIFIED,\n    // Whether document is in an amp-lite viewer. It signal that the user\n    // would prefer to use less bandwidth.\n    lite: searchQuery['amp_lite'] != undefined,\n    test: runningTests,\n    testIe: runningTestsOnIe,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n    singlePassType,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n */\nfunction getRtvVersion(win, isLocalDev) {\n  // If it's local dev then we won't actually have a full version so\n  // just use the version.\n  if (isLocalDev) {\n    return internalRuntimeVersion();\n  }\n\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win, isLocalDev) {\n  return getRtvVersion(win, isLocalDev);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\nimport {devAssert} from './log';\nimport {getServicePromise} from './service';\n\n/**\n * A map of services that delay rendering. The key is the name of the service\n * and the value is a DOM query which is used to check if the service is needed\n * in the current document.\n * Do not add a service unless absolutely necessary.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this list is used for server-side rendering (SSR) and any\n * changes made to it must be made in coordination with caches that implement\n * SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @const {!Object<string, string>}\n */\nconst SERVICES = {\n  'amp-dynamic-css-classes': '[custom-element=amp-dynamic-css-classes]',\n  'variant': 'amp-experiment',\n  'amp-story-render': 'amp-story[standalone]',\n};\n\n/**\n * Base class for render delaying services.\n * This should be extended to ensure the service\n * is properly handled\n *\n * @interface\n */\nexport class RenderDelayingService {\n  /**\n   * Function to return a promise for when\n   * it is finished delaying render, and is ready.\n   * NOTE: This should simply return Promise.resolve,\n   * if your service does not need to perform any logic\n   * after being registered.\n   * @return {!Promise}\n   */\n  whenReady() {}\n}\n\n/**\n * Maximum milliseconds to wait for all extensions to load before erroring.\n * @const\n */\nconst LOAD_TIMEOUT = 3000;\n\n/**\n * Detects any render delaying services that are required on the page, and\n * returns a promise with a timeout.\n * @param {!Window} win\n * @return {!Promise<!Array<*>>} resolves to an Array that has the same length\n *     as the detected render delaying services\n */\nexport function waitForServices(win) {\n  const promises = includedServices(win).map(serviceId => {\n    const serviceReadyPromise = getServicePromise(win, serviceId).then(\n      service => {\n        if (service && isRenderDelayingService(service)) {\n          return service.whenReady().then(() => {\n            return service;\n          });\n        }\n        return service;\n      }\n    );\n\n    return Services.timerFor(win).timeoutPromise(\n      LOAD_TIMEOUT,\n      serviceReadyPromise,\n      `Render timeout waiting for service ${serviceId} to be ready.`\n    );\n  });\n  return Promise.all(promises);\n}\n\n/**\n * Returns true if the page has a render delaying service.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function hasRenderDelayingServices(win) {\n  return includedServices(win).length > 0;\n}\n\n/**\n * Function to determine if the passed\n * Object is a Render Delaying Service\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isRenderDelayingService(service) {\n  const maybeRenderDelayingService = /** @type {!RenderDelayingService}*/ (service);\n  return typeof maybeRenderDelayingService.whenReady == 'function';\n}\n\n/**\n * Detects which, if any, render-delaying extensions are included on the page.\n * @param {!Window} win\n * @return {!Array<string>}\n */\nexport function includedServices(win) {\n  /** @const {!Document} */\n  const doc = win.document;\n  devAssert(doc.body);\n\n  return Object.keys(SERVICES).filter(service => {\n    return doc.querySelector(SERVICES[service]);\n  });\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from './utils/promise';\nimport {dev, devAssert} from './log';\nimport {isExperimentOn} from './experiments';\nimport {toWin} from './types';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (?function(new:Object, !Window)|\n *          ?function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Services must implement this interface to be embeddable in FIEs.\n * @interface\n */\nexport class EmbeddableService {\n  /**\n   * Installs a new instance of the service in the given FIE window.\n   * @param {!Window} unusedEmbedWin\n   * @param {!./service/ampdoc-impl.AmpDoc} unusedAmpDoc\n   */\n  static installInEmbedWindow(unusedEmbedWin, unusedAmpDoc) {}\n}\n\n/**\n * Returns a service with the given id. Assumes that it has been constructed\n * already.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\nexport function getExistingServiceForDocInEmbedScope(element, id) {\n  // TODO(#22733): completely remove this method once ampdoc-fie launches.\n  const document = element.ownerDocument;\n  const win = toWin(document.defaultView);\n  const topWin = getTopWindow(win);\n  // First, try to resolve via local embed window (if applicable).\n  const isEmbed = win != topWin;\n  const ampdocFieExperimentOn = isExperimentOn(topWin, 'ampdoc-fie');\n  if (isEmbed && !ampdocFieExperimentOn) {\n    if (isServiceRegistered(win, id)) {\n      return getServiceInternal(win, id);\n    }\n    // Fallback from FIE to parent is intentionally unsupported for safety.\n    return null;\n  } else {\n    // Resolve via the element's ampdoc.\n    return getServiceForDocOrNullInternal(element, id);\n  }\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedScope(embedWin, id, service) {\n  const topWin = getTopWindow(embedWin);\n  devAssert(\n    embedWin != topWin,\n    'Service override can only be installed in embed window: %s',\n    id\n  );\n  devAssert(\n    !isServiceRegistered(embedWin, id),\n    'Service override has already been installed: %s',\n    id\n  );\n  const ampdocFieExperimentOn = isExperimentOn(topWin, 'ampdoc-fie');\n  if (ampdocFieExperimentOn) {\n    const ampdoc = getAmpdoc(embedWin.document);\n    registerServiceInternal(\n      getAmpdocServiceHolder(ampdoc),\n      ampdoc,\n      id,\n      () => service,\n      /* override */ true\n    );\n  } else {\n    registerServiceInternal(embedWin, embedWin, id, () => service);\n    getServiceInternal(embedWin, id); // Force service to build.\n  }\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\nfunction getServiceForDocOrNullInternal(element, id) {\n  const ampdoc = getAmpdoc(element);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = toWin(\n      /** @type {!Document} */ (nodeOrDoc.ownerDocument || nodeOrDoc)\n        .defaultView\n    );\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (getService(\n    win,\n    'ampdoc'\n  ));\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n * @template T\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.ctor = null;\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n */\nfunction registerServiceInternal(holder, context, id, ctor, opt_override) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n    };\n  }\n\n  if (!opt_override && (s.ctor || s.obj)) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  // TODO(dvoytenko): Consider marking holder as destroyed for later-arriving\n  // service to be canceled automatically.\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then(instance =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * Adopts an embeddable (implements `EmbeddableService` interface) service\n * in embed scope.\n * @param {!Window} embedWin\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} serviceClass\n * @suppress {missingProperties}\n * @return {boolean}\n */\nexport function installServiceInEmbedIfEmbeddable(embedWin, serviceClass) {\n  const isEmbeddableService =\n    typeof serviceClass.installInEmbedWindow === 'function';\n  if (!isEmbeddableService) {\n    return false;\n  }\n  const frameElement = dev().assertElement(\n    embedWin.frameElement,\n    'frameElement not found for embed'\n  );\n  const ampdoc = getAmpdoc(frameElement);\n  serviceClass.installInEmbedWindow(embedWin, ampdoc);\n  return true;\n}\n\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    () => service\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have an implementation or a constructor.\n  return !!(service && (service.ctor || service.obj));\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, resolve, reject} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\n/**\n * @interface\n */\nexport class MutatorInterface {\n  /**\n   * Requests the runtime to change the element's size. When the size is\n   * successfully updated then the opt_callback is called.\n   * @param {!Element} element\n   * @param {number|undefined} newHeight\n   * @param {number|undefined} newWidth\n   * @param {function()=} opt_callback A callback function.\n   * @param {!../layout-rect.LayoutMarginsChangeDef=} opt_newMargins\n   */\n  changeSize(element, newHeight, newWidth, opt_callback, opt_newMargins) {}\n\n  /**\n   * Return a promise that requests the runtime to update the size of\n   * this element to the specified value.\n   * The runtime will schedule this request and attempt to process it\n   * as soon as possible. However, unlike in {@link changeSize}, the runtime\n   * may refuse to make a change in which case it will reject promise, call the\n   * `overflowCallback` method on the target resource with the height value.\n   * Overflow callback is expected to provide the reader with the user action\n   * to update the height manually.\n   * Note that the runtime does not call the `overflowCallback` method if the\n   * requested height is 0 or negative.\n   * If the height is successfully updated then the promise is resolved.\n   * @param {!Element} element\n   * @param {number|undefined} newHeight\n   * @param {number|undefined} newWidth\n   * @param {!../layout-rect.LayoutMarginsChangeDef=} opt_newMargins\n   * @return {!Promise}\n   * @param {?Event=} opt_event\n   */\n  attemptChangeSize(element, newHeight, newWidth, opt_newMargins, opt_event) {}\n\n  /**\n   * Expands the element.\n   * @param {!Element} element\n   */\n  expandElement(element) {}\n\n  /**\n   * Return a promise that requests runtime to collapse this element.\n   * The runtime will schedule this request and first attempt to resize\n   * the element to height and width 0. If success runtime will set element\n   * display to none, and notify element owner of this collapse.\n   * @param {!Element} element\n   * @return {!Promise}\n   */\n  attemptCollapse(element) {}\n\n  /**\n   * Collapses the element: ensures that it's `display:none`, notifies its\n   * owner and updates the layout box.\n   * @param {!Element} element\n   */\n  collapseElement(element) {}\n\n  /**\n   * Runs the specified measure, which is called in the \"measure\" vsync phase.\n   * This is simply a proxy to the privileged vsync service.\n   *\n   * @param {function()} measurer\n   * @return {!Promise}\n   */\n  measureElement(measurer) {}\n\n  /**\n   * Runs the specified mutation on the element and ensures that remeasures and\n   * layouts performed for the affected elements.\n   *\n   * This method should be called whenever a significant mutations are done\n   * on the DOM that could affect layout of elements inside this subtree or\n   * its siblings. The top-most affected element should be specified as the\n   * first argument to this method and all the mutation work should be done\n   * in the mutator callback which is called in the \"mutation\" vsync phase.\n   *\n   * @param {!Element} element\n   * @param {function()} mutator\n   * @return {!Promise}\n   */\n  mutateElement(element, mutator) {}\n\n  /**\n   * Runs the specified mutation on the element and ensures that remeasures and\n   * layouts performed for the affected elements.\n   *\n   * This method should be called whenever a significant mutations are done\n   * on the DOM that could affect layout of elements inside this subtree or\n   * its siblings. The top-most affected element should be specified as the\n   * first argument to this method and all the mutation work should be done\n   * in the mutator callback which is called in the \"mutation\" vsync phase.\n   *\n   * @param {!Element} element\n   * @param {?function()} measurer\n   * @param {function()} mutator\n   * @return {!Promise}\n   */\n  measureMutateElement(element, measurer, mutator) {}\n}\n/* eslint-enable no-unused-vars */\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MutatorInterface} from './mutator-interface';\n\n/** @const {string} */\nexport const READY_SCAN_SIGNAL = 'ready-scan';\n\n/* eslint-disable no-unused-vars */\n/**\n * @interface\n */\nexport class ResourcesInterface extends MutatorInterface {\n  /**\n   * Returns a list of resources.\n   * @return {!Array<!./resource.Resource>}\n   * @export\n   */\n  get() {}\n\n  /**\n   * @return {!./ampdoc-impl.AmpDoc}\n   */\n  getAmpdoc() {}\n\n  /**\n   * Returns the {@link Resource} instance corresponding to the specified AMP\n   * Element. If no Resource is found, the exception is thrown.\n   * @param {!AmpElement} element\n   * @return {!./resource.Resource}\n   */\n  getResourceForElement(element) {}\n\n  /**\n   * Returns the {@link Resource} instance corresponding to the specified AMP\n   * Element. Returns null if no resource is found.\n   * @param {!AmpElement} element\n   * @return {?./resource.Resource}\n   */\n  getResourceForElementOptional(element) {}\n\n  /**\n   * Returns the direction the user last scrolled.\n   *  - -1 for scrolling up\n   *  - 1 for scrolling down\n   *  - Defaults to 1\n   * TODO(lannka): this method should not belong to resources.\n   * @return {number}\n   */\n  getScrollDirection() {}\n\n  /**\n   * Signals that an element has been added to the DOM. Resources manager\n   * will start tracking it from this point on.\n   * @param {!AmpElement} element\n   */\n  add(element) {}\n\n  /**\n   * Signals that an element has been upgraded to the DOM. Resources manager\n   * will perform build and enable layout/viewport signals for this element.\n   * @param {!AmpElement} element\n   */\n  upgraded(element) {}\n\n  /**\n   * Signals that an element has been removed to the DOM. Resources manager\n   * will stop tracking it from this point on.\n   * @param {!AmpElement} element\n   */\n  remove(element) {}\n\n  /**\n   * Schedules layout or preload for the specified resource.\n   * @param {!./resource.Resource} resource\n   * @param {boolean} layout\n   * @param {number=} opt_parentPriority\n   * @param {boolean=} opt_forceOutsideViewport\n   * @package\n   */\n  scheduleLayoutOrPreload(\n    resource,\n    layout,\n    opt_parentPriority,\n    opt_forceOutsideViewport\n  ) {}\n\n  /**\n   * Schedules the work pass at the latest with the specified delay.\n   * @param {number=} opt_delay\n   * @param {boolean=} opt_relayoutAll\n   * @return {boolean}\n   */\n  schedulePass(opt_delay, opt_relayoutAll) {}\n\n  /**\n   * Registers a callback to be called when the next pass happens.\n   * @param {function()} callback\n   */\n  onNextPass(callback) {}\n\n  /**\n   * @return {!Promise} when first pass executed.\n   */\n  whenFirstPass() {}\n\n  /**\n   * Called when main AMP binary is fully initialized.\n   * May never be called in Shadow Mode.\n   */\n  ampInitComplete() {}\n\n  /**\n   * Updates the priority of the resource. If there are tasks currently\n   * scheduled, their priority is updated as well.\n   * @param {!Element} element\n   * @param {number} newLayoutPriority\n   */\n  updateLayoutPriority(element, newLayoutPriority) {}\n}\n/* eslint-enable no-unused-vars */\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Services} from '../services';\nimport {devAssert} from '../log';\nimport {isFiniteNumber} from '../types';\nimport {loadPromise} from '../event-helper';\nimport {whenDocumentComplete} from '../document-ready';\n\n/** @typedef {string|number|boolean|undefined|null} */\nexport let ResolverReturnDef;\n\n/** @typedef {function(...string):ResolverReturnDef} */\nexport let SyncResolverDef;\n\n/** @typedef {function(...string):!Promise<ResolverReturnDef>} */\nexport let AsyncResolverDef;\n\n/** @typedef {{sync: SyncResolverDef, async: AsyncResolverDef}} */\nlet ReplacementDef;\n\n/**\n * A list of events that the navTiming needs to wait for.\n * Sort event in order\n * @enum {number}\n */\nconst WAITFOR_EVENTS = {\n  VIEWER_FIRST_VISIBLE: 1,\n  DOCUMENT_COMPLETE: 2,\n  LOAD: 3,\n  LOAD_END: 4,\n};\n\n/**\n * A list of events on which event they should wait\n * @const {!Object<string, WAITFOR_EVENTS>}\n */\nconst NAV_TIMING_WAITFOR_EVENTS = {\n  // ready on viewer first visible\n  'navigationStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'redirectStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'redirectEnd': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'fetchStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'domainLookupStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'domainLookupEnd': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'connectStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'secureConnectionStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'connectEnd': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'requestStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'responseStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'responseEnd': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  // ready on document complte\n  'domLoading': WAITFOR_EVENTS.DOCUMENT_COMPLETE,\n  'domInteractive': WAITFOR_EVENTS.DOCUMENT_COMPLETE,\n  'domContentLoaded': WAITFOR_EVENTS.DOCUMENT_COMPLETE,\n  'domComplete': WAITFOR_EVENTS.DOCUMENT_COMPLETE,\n  // ready on load\n  'loadEventStart': WAITFOR_EVENTS.LOAD,\n  // ready on load complete\n  'loadEventEnd': WAITFOR_EVENTS.LOAD_END,\n};\n\n/**\n * Returns navigation timing information based on the start and end events.\n * The data for the timing events is retrieved from performance.timing API.\n * If start and end events are both given, the result is the difference between\n * the two. If only start event is given, the result is the timing value at\n * start event.\n * @param {!Window} win\n * @param {string} startEvent\n * @param {string=} endEvent\n * @return {!Promise<ResolverReturnDef>}\n */\nexport function getTimingDataAsync(win, startEvent, endEvent) {\n  // Fallback to load event if we don't know what to wait for\n  const startWaitForEvent =\n    NAV_TIMING_WAITFOR_EVENTS[startEvent] || WAITFOR_EVENTS.LOAD;\n  const endWaitForEvent = endEvent\n    ? NAV_TIMING_WAITFOR_EVENTS[endEvent] || WAITFOR_EVENTS.LOAD\n    : startWaitForEvent;\n\n  const waitForEvent = Math.max(startWaitForEvent, endWaitForEvent);\n\n  // set wait for onload to be default\n  let readyPromise;\n  if (waitForEvent === WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE) {\n    readyPromise = Promise.resolve();\n  } else if (waitForEvent === WAITFOR_EVENTS.DOCUMENT_COMPLETE) {\n    readyPromise = whenDocumentComplete(win.document);\n  } else if (waitForEvent === WAITFOR_EVENTS.LOAD) {\n    readyPromise = loadPromise(win);\n  } else if (waitForEvent === WAITFOR_EVENTS.LOAD_END) {\n    // performance.timing.loadEventEnd returns 0 before the load event handler\n    // has terminated, that's when the load event is completed.\n    // To wait for the event handler to terminate, wait 1ms and defer to the\n    // event loop.\n    const timer = Services.timerFor(win);\n    readyPromise = loadPromise(win).then(() => timer.promise(1));\n  }\n\n  devAssert(readyPromise, 'waitForEvent not supported ' + waitForEvent);\n\n  return readyPromise.then(() => {\n    return getTimingDataSync(win, startEvent, endEvent);\n  });\n}\n\n/**\n * Returns navigation timing information based on the start and end events.\n * The data for the timing events is retrieved from performance.timing API.\n * If start and end events are both given, the result is the difference between\n * the two. If only start event is given, the result is the timing value at\n * start event. Enforces synchronous evaluation.\n * @param {!Window} win\n * @param {string} startEvent\n * @param {string=} endEvent\n * @return {ResolverReturnDef} undefined if API is not available, empty string\n *    if it is not yet available, or value as string\n */\nexport function getTimingDataSync(win, startEvent, endEvent) {\n  const timingInfo = win['performance'] && win['performance']['timing'];\n  if (!timingInfo || timingInfo['navigationStart'] == 0) {\n    // Navigation timing API is not supported.\n    return;\n  }\n\n  const metric =\n    endEvent === undefined\n      ? timingInfo[startEvent]\n      : timingInfo[endEvent] - timingInfo[startEvent];\n\n  if (!isFiniteNumber(metric) || metric < 0) {\n    // The metric is not supported.\n    return;\n  } else {\n    return metric;\n  }\n}\n\n/**\n * Returns navigation information from the current browsing context.\n * @param {!Window} win\n * @param {string} attribute\n * @return {ResolverReturnDef}\n * @private\n */\nexport function getNavigationData(win, attribute) {\n  const navigationInfo = win['performance'] && win['performance']['navigation'];\n  if (!navigationInfo || navigationInfo[attribute] === undefined) {\n    // PerformanceNavigation interface is not supported or attribute is not\n    // implemented.\n    return;\n  }\n  return navigationInfo[attribute];\n}\n\n/**\n * A class to provide variable substitution related features. Extend this class\n * and override initialize() to add more supported variables.\n */\nexport class VariableSource {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @protected @const {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampdoc;\n\n    /** @private @const {!Object<string, !ReplacementDef>} */\n    this.replacements_ = Object.create(null);\n\n    /** @private {boolean} */\n    this.initialized_ = false;\n\n    this.getUrlMacroWhitelist_();\n  }\n\n  /**\n   * Lazily initialize the default replacements.\n   * @private\n   */\n  initialize_() {\n    this.initialize();\n    this.initialized_ = true;\n  }\n\n  /**\n   * Override this method to set all the variables supported by derived class.\n   */\n  initialize() {\n    // Needs to be implemented by derived classes.\n  }\n\n  /**\n   * Method exists to assist stubbing in tests.\n   * @param {string} name\n   * @return {!ReplacementDef}\n   */\n  get(name) {\n    if (!this.initialized_) {\n      this.initialize_();\n    }\n\n    return this.replacements_[name];\n  }\n\n  /**\n   * Sets a synchronous value resolver for the variable with the specified name.\n   * The value resolver may optionally take an extra parameter.\n   * Can be called in conjunction with setAsync to allow for additional\n   * asynchronous resolver where expand will use async and expandSync the sync\n   * version.\n   * @param {string} varName\n   * @param {!SyncResolverDef} syncResolver\n   * @return {!VariableSource}\n   */\n  set(varName, syncResolver) {\n    devAssert(varName.indexOf('RETURN') == -1);\n    this.replacements_[varName] = this.replacements_[varName] || {\n      sync: undefined,\n      async: undefined,\n    };\n    this.replacements_[varName].sync = syncResolver;\n    return this;\n  }\n\n  /**\n   * Sets an async value resolver for the variable with the specified name.\n   * The value resolver may optionally take an extra parameter.\n   * Can be called in conjuction with setAsync to allow for additional\n   * asynchronous resolver where expand will use async and expandSync the sync\n   * version.\n   * @param {string} varName\n   * @param {!AsyncResolverDef} asyncResolver\n   * @return {!VariableSource}\n   */\n  setAsync(varName, asyncResolver) {\n    devAssert(varName.indexOf('RETURN') == -1);\n    this.replacements_[varName] = this.replacements_[varName] || {\n      sync: undefined,\n      async: undefined,\n    };\n    this.replacements_[varName].async = asyncResolver;\n    return this;\n  }\n\n  /**\n   * Helper method to set both sync and async resolvers.\n   * @param {string} varName\n   * @param {!SyncResolverDef} syncResolver\n   * @param {!AsyncResolverDef} asyncResolver\n   * @return {!VariableSource}\n   */\n  setBoth(varName, syncResolver, asyncResolver) {\n    return this.set(varName, syncResolver).setAsync(varName, asyncResolver);\n  }\n\n  /**\n   * Returns a Regular expression that can be used to detect all the variables\n   * in a template.\n   * @param {!Object<string, *>=} opt_bindings\n   * @param {!Object<string, boolean>=} opt_whiteList Optional white list of names\n   *   that can be substituted.\n   * @return {!RegExp}\n   */\n  getExpr(opt_bindings, opt_whiteList) {\n    if (!this.initialized_) {\n      this.initialize_();\n    }\n    const all = Object.assign({}, this.replacements_, opt_bindings);\n    return this.buildExpr_(Object.keys(all), opt_whiteList);\n  }\n\n  /**\n   * @param {!Array<string>} keys\n   * @param {!Object<string, boolean>=} opt_whiteList Optional white list of names\n   *   that can be substituted.\n   * @return {!RegExp}\n   * @private\n   */\n  buildExpr_(keys, opt_whiteList) {\n    // If a whitelist is present, the keys must belong to the whitelist.\n    // We filter the keys one last time to ensure no unwhitelisted key is\n    // allowed.\n    if (this.getUrlMacroWhitelist_()) {\n      keys = keys.filter(key => this.getUrlMacroWhitelist_().includes(key));\n    }\n    // If a whitelist is passed into the call to GlobalVariableSource.expand_\n    // then we only resolve values contained in the whitelist.\n    if (opt_whiteList) {\n      keys = keys.filter(key => opt_whiteList[key]);\n    }\n    if (keys.length === 0) {\n      const regexThatMatchesNothing = /_^/g; // lgtm [js/regex/unmatchable-caret]\n      return regexThatMatchesNothing;\n    }\n    // The keys must be sorted to ensure that the longest keys are considered\n    // first. This avoids a problem where a RANDOM conflicts with RANDOM_ONE.\n    keys.sort((s1, s2) => s2.length - s1.length);\n    // Keys that start with a `$` need to be escaped so that they do not\n    // interfere with the regex that is constructed.\n    const escaped = keys.map(key => {\n      if (key[0] === '$') {\n        return '\\\\' + key;\n      }\n      return key;\n    });\n\n    const all = escaped.join('|');\n    // Match the given replacement patterns, as well as optionally\n    // arguments to the replacement behind it in parentheses.\n    // Example string that match\n    // FOO_BAR\n    // FOO_BAR(arg1)\n    // FOO_BAR(arg1,arg2)\n    // FOO_BAR(arg1, arg2)\n    const regexStr = '\\\\$?(' + all + ')';\n    return new RegExp(regexStr, 'g');\n  }\n\n  /**\n   * @return {?Array<string>} The whitelist of allowed AMP variables. (if provided in\n   *     a meta tag).\n   * @private\n   */\n  getUrlMacroWhitelist_() {\n    if (this.variableWhitelist_) {\n      return this.variableWhitelist_;\n    }\n\n    const {head} = this.ampdoc.getRootNode();\n    if (!head) {\n      return null;\n    }\n\n    // A meta[name=\"amp-allowed-url-macros\"] tag, if present,\n    // contains, in its content attribute, a whitelist of variable substitution.\n    const meta = head.querySelector('meta[name=\"amp-allowed-url-macros\"]');\n    if (!meta) {\n      return null;\n    }\n\n    /**\n     * The whitelist of variables allowed for variable substitution.\n     * @private {?Array<string>}\n     */\n    this.variableWhitelist_ = meta\n      .getAttribute('content')\n      .split(',')\n      .map(variable => variable.trim());\n    return this.variableWhitelist_;\n  }\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getAmpdoc,\n  getExistingServiceForDocInEmbedScope,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServicePromiseForDoc,\n} from './service';\nimport {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from './element-service';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (getElementServiceForDoc(\n      element,\n      'access',\n      'amp-access'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'access',\n      'amp-access'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (getElementServiceForDoc(\n      element,\n      'subscriptions',\n      'amp-subscriptions'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'subscriptions',\n      'amp-subscriptions'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'action'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'standard-actions'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (getElementServiceForDoc(\n      element,\n      'activity',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (getService(\n      window,\n      'ampdoc'\n    ));\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (getElementServiceForDoc(\n      element,\n      'amp-analytics-instrumentation',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'amp-analytics-instrumentation',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (getService(\n      window,\n      'batched-xhr'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (getElementServiceIfAvailableForDocInEmbedScope(\n      element,\n      'bind',\n      'amp-bind'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'cid'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'navigation'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (getElementServiceForDoc(\n      element,\n      'loader',\n      'amp-loader'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (getElementServiceForDoc(\n      element,\n      'standalone',\n      'amp-standalone'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (getService(\n      window,\n      'crypto'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'documentInfo'\n    )).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (getService(\n      window,\n      'extensions'\n    ));\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'form-submit-service'\n    ));\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'hidden-observer'\n    ));\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'history'\n    ));\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'inputmask',\n      'amp-inputmask'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'owners'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (getService(\n      window,\n      'performance'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (getExistingServiceOrNull(\n      window,\n      'performance'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (getService(\n      window,\n      'platform'\n    ));\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (getServiceForDoc(\n      element,\n      'position-observer'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'resources'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'resources'\n    ));\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?{incomingFragment: string, outgoingFragment: string}>}\n   */\n  static shareTrackingForOrNull(win) {\n    return /** @type {!Promise<?{incomingFragment: string, outgoingFragment: string}>} */ (getElementServiceIfAvailable(\n      win,\n      'share-tracking',\n      'amp-share-tracking',\n      true\n    ));\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (getElementServiceIfAvailable(win, 'localization', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  static localizationService(win) {\n    return getService(win, 'localization');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (getElementServiceIfAvailable(win, 'story-analytics', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreServiceV01(win) {\n    return getService(win, 'story-store');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestServiceV01(win) {\n    return getService(win, 'story-request-v01');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNullV01(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (getElementServiceIfAvailable(win, 'localization-v01', 'amp-story', true))\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  static localizationServiceV01(win) {\n    return getService(win, 'localization-v01');\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>}\n   */\n  static viewerIntegrationVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>} */\n      (getElementServiceIfAvailable(\n        win,\n        'viewer-integration-variable',\n        'amp-viewer-integration',\n        true\n      ))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'storage'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesFor(window) {\n    return /** @type {!./service/template-impl.Templates} */ (getService(\n      window,\n      'templates'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (getService(\n      window,\n      'timer'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'url-replace'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (getElementServiceForDoc(\n        element,\n        'userNotificationManager',\n        'amp-user-notification'\n      ))\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (getElementServiceIfAvailableForDoc(\n        element,\n        'consentPolicyManager',\n        'amp-consent'\n      ))\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'geo',\n      'amp-geo',\n      true\n    ));\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>}\n   */\n  static userLocationForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'user-location',\n      'amp-user-location',\n      true\n    ));\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'url'\n    ));\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'variant',\n      'amp-experiment',\n      true\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'video-manager'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>}\n   */\n  static viewerAssistanceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>} */\n      (getElementServiceIfAvailableForDoc(\n        element,\n        'amp-viewer-assistance',\n        'amp-viewer-assistance'\n      ))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'viewer'\n    ));\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'viewer'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (getService(\n      window,\n      'vsync'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'viewport'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from './log';\nimport {map} from './utils/object.js';\n\nlet htmlContainer;\nlet svgContainer;\n\n/**\n * Creates the html helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\nexport function htmlFor(nodeOrDoc) {\n  const doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n  if (!htmlContainer || htmlContainer.ownerDocument !== doc) {\n    htmlContainer = doc.createElement('div');\n  }\n\n  return html;\n}\n\n/**\n * Creates the svg helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\nexport function svgFor(nodeOrDoc) {\n  const doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n  if (!svgContainer || svgContainer.ownerDocument !== svgContainer) {\n    svgContainer = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  }\n\n  return svg;\n}\n\n/**\n * A tagged template literal helper to generate static SVG trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const circle = svg`<circle cx=\"60\" cy=\"60\" r=\"22\"></circle>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction svg(strings) {\n  return createNode(svgContainer, strings);\n}\n\n/**\n * A tagged template literal helper to generate static DOM trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const div = html`<div><span></span></div>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction html(strings) {\n  return createNode(htmlContainer, strings);\n}\n\n/**\n * Helper used by html and svg string literal functions.\n * @param {!Element} container\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction createNode(container, strings) {\n  devAssert(strings.length === 1, 'Improper html template tag usage.');\n  container./*OK*/ innerHTML = strings[0];\n\n  const el = container.firstElementChild;\n  devAssert(el, 'No elements in template');\n  devAssert(!el.nextElementSibling, 'Too many root elements in template');\n\n  // Clear to free memory.\n  container.removeChild(el);\n\n  return el;\n}\n\n/**\n * Queries an element for all elements with a \"ref\" attribute, removing\n * the attribute afterwards.\n * Returns a named map of all ref elements.\n *\n * @param {!Element} root\n * @return {!Object<string, !Element>}\n */\nexport function htmlRefs(root) {\n  const elements = root.querySelectorAll('[ref]');\n  const refs = map();\n\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n    const ref = devAssert(element.getAttribute('ref'), 'Empty ref attr');\n    element.removeAttribute('ref');\n    devAssert(refs[ref] === undefined, 'Duplicate ref');\n    refs[ref] = element;\n  }\n\n  return refs;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.startsWith.\n * @param {string} string\n * @param {string} prefix\n * @return {boolean}\n */\nexport function startsWith(string, prefix) {\n  if (prefix.length > string.length) {\n    return false;\n  }\n  return string.lastIndexOf(prefix, 0) == 0;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {*} TODO(#23582): Specify return type\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CommonSignals} from './common-signals';\nimport {Services} from './services';\nimport {dev, devAssert, rethrowAsync} from './log';\nimport {getAmpdoc} from './service';\nimport {insertAfterOrAtStart, waitForBodyOpenPromise} from './dom';\nimport {map} from './utils/object';\nimport {setStyles} from './style';\nimport {waitForServices} from './render-delaying-services';\n\nconst TRANSFORMER_PROP = '__AMP_CSS_TR';\nconst STYLE_MAP_PROP = '__AMP_CSS_SM';\n\n/**\n * Adds the given css text to the given ampdoc.\n *\n * The style tags will be at the beginning of the head before all author\n * styles. One element can be the main runtime CSS. This is guaranteed\n * to always be the first stylesheet in the doc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc The ampdoc that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are available.\n *     Not using a promise, because this is synchronous when possible.\n *     for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\nexport function installStylesForDoc(\n  ampdoc,\n  cssText,\n  cb,\n  opt_isRuntimeCss,\n  opt_ext\n) {\n  const cssRoot = ampdoc.getHeadNode();\n  const style = insertStyleElement(\n    cssRoot,\n    maybeTransform(cssRoot, cssText),\n    opt_isRuntimeCss || false,\n    opt_ext || null\n  );\n\n  if (cb) {\n    const rootNode = ampdoc.getRootNode();\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(rootNode, style)) {\n      cb(style);\n      return style;\n    }\n    // Poll until styles are available.\n    const interval = setInterval(() => {\n      if (styleLoaded(rootNode, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n  return style;\n}\n\n/**\n * Adds the given css text to the given document.\n * TODO(dvoytenko, #22733): Remove this method once FIE/ampdoc migration is\n * done.\n *\n * @param {!Document} doc The document that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are\n *     available. Not using a promise, because this is synchronous when\n *     possible. for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\nexport function installStylesLegacy(\n  doc,\n  cssText,\n  cb,\n  opt_isRuntimeCss,\n  opt_ext\n) {\n  const style = insertStyleElement(\n    dev().assertElement(doc.head),\n    cssText,\n    opt_isRuntimeCss || false,\n    opt_ext || null\n  );\n\n  if (cb) {\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(doc, style)) {\n      cb(style);\n      return style;\n    }\n    // Poll until styles are available.\n    const interval = setInterval(() => {\n      if (styleLoaded(doc, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n  return style;\n}\n\n/**\n * Creates the properly configured style element.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @param {boolean} isRuntimeCss\n * @param {?string} ext\n * @return {!Element}\n */\nfunction insertStyleElement(cssRoot, cssText, isRuntimeCss, ext) {\n  let styleMap = cssRoot[STYLE_MAP_PROP];\n  if (!styleMap) {\n    styleMap = cssRoot[STYLE_MAP_PROP] = map();\n  }\n\n  const isExtCss =\n    !isRuntimeCss && (ext && ext != 'amp-custom' && ext != 'amp-keyframes');\n  const key = isRuntimeCss\n    ? 'amp-runtime'\n    : isExtCss\n    ? `amp-extension=${ext}`\n    : null;\n\n  // Check if it has already been created or discovered.\n  if (key) {\n    const existing = getExistingStyleElement(cssRoot, styleMap, key);\n    if (existing) {\n      if (existing.textContent !== cssText) {\n        existing.textContent = cssText;\n      }\n      return existing;\n    }\n  }\n\n  // Create the new style element and append to cssRoot.\n  const doc = cssRoot.ownerDocument || cssRoot;\n  const style = doc.createElement('style');\n  style./*OK*/ textContent = cssText;\n  let afterElement = null;\n  // Make sure that we place style tags after the main runtime CSS. Otherwise\n  // the order is random.\n  if (isRuntimeCss) {\n    style.setAttribute('amp-runtime', '');\n  } else if (isExtCss) {\n    style.setAttribute('amp-extension', ext || '');\n    afterElement = dev().assertElement(\n      getExistingStyleElement(cssRoot, styleMap, 'amp-runtime')\n    );\n  } else {\n    if (ext) {\n      style.setAttribute(ext, '');\n    }\n    afterElement = cssRoot.lastChild;\n  }\n  insertAfterOrAtStart(cssRoot, style, afterElement);\n  if (key) {\n    styleMap[key] = style;\n  }\n  return style;\n}\n\n/**\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {!Object<string, !Element>} styleMap\n * @param {string} key\n * @return {?Element}\n */\nfunction getExistingStyleElement(cssRoot, styleMap, key) {\n  // Already cached.\n  if (styleMap[key]) {\n    return styleMap[key];\n  }\n  // Check if the style has already been added by the server layout.\n  const existing = cssRoot./*OK*/ querySelector(`style[${key}]`);\n  if (existing) {\n    styleMap[key] = existing;\n    return existing;\n  }\n  // Nothing found.\n  return null;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {function(string):string} transformer\n */\nexport function installCssTransformer(cssRoot, transformer) {\n  cssRoot[TRANSFORMER_PROP] = transformer;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @return {string}\n */\nfunction maybeTransform(cssRoot, cssText) {\n  const transformer = cssRoot[TRANSFORMER_PROP];\n  return transformer ? transformer(cssText) : cssText;\n}\n\n/** @private {boolean} */\nlet bodyMadeVisible = false;\n\n/**\n * @param {boolean} value\n * @visibleForTesting\n */\nexport function setBodyMadeVisibleForTesting(value) {\n  bodyMadeVisible = value;\n}\n\n/**\n * Sets the document's body opacity to 1.\n * If the body is not yet available (because our script was loaded\n * synchronously), polls until it is.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisible(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  const win = /** @type {!Window} */ (doc.defaultView);\n  waitForBodyOpenPromise(doc)\n    .then(() => {\n      return waitForServices(win);\n    })\n    .catch(reason => {\n      rethrowAsync(reason);\n      return [];\n    })\n    .then(services => {\n      bodyMadeVisible = true;\n      setBodyVisibleStyles(doc);\n      const ampdoc = getAmpdoc(doc);\n      ampdoc.signals().signal(CommonSignals.RENDER_START);\n      if (services.length > 0) {\n        const resources = Services.resourcesForDoc(doc.documentElement);\n        resources./*OK*/ schedulePass(1, /* relayoutAll */ true);\n      }\n      try {\n        const perf = Services.performanceFor(win);\n        perf.tick('mbv');\n        perf.flush();\n      } catch (e) {}\n    });\n}\n\n/**\n * Set the document's body opacity to 1. Called in error cases.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisibleRecovery(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  if (bodyMadeVisible) {\n    return;\n  }\n  bodyMadeVisible = true;\n  setBodyVisibleStyles(doc);\n}\n\n/**\n * Make sure that body exists, and make it visible.\n * @param {!Document} doc\n */\nfunction setBodyVisibleStyles(doc) {\n  setStyles(dev().assertElement(doc.body), {\n    opacity: 1,\n    visibility: 'visible',\n    'animation': 'none',\n  });\n}\n\n/**\n * Indicates that the body is always visible. For instance, in case of PWA.\n * This check is on a module level variable, and could be problematic if you are\n * relying on this function across different binaries.\n * @param {!Window} unusedWin\n */\nexport function bodyAlwaysVisible(unusedWin) {\n  bodyMadeVisible = true;\n}\n\n/**\n * Checks whether a style element was registered in the DOM.\n * @param {!Document|!ShadowRoot} doc\n * @param {!Element} style\n * @return {boolean}\n */\nfunction styleLoaded(doc, style) {\n  const sheets = doc.styleSheets;\n  for (let i = 0; i < sheets.length; i++) {\n    const sheet = sheets[i];\n    if (sheet.ownerNode == style) {\n      return true;\n    }\n  }\n  return false;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {dev, devAssert} from './log';\nimport {map} from './utils/object.js';\nimport {startsWith} from './string';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\n/**\n * @export\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @export\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (startsWith(camelCase, '--')) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      styles[k].toString(),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (propertyName) {\n    element.style[propertyName] = /** @type {string} */ (opt_units\n      ? value + opt_units\n      : value);\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  if (style === 'display') {\n    dev().error(\n      'STYLE',\n      '`display` style detected. You must use toggle instead.'\n    );\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    dev().error(\n      'STYLE',\n      '`display` style detected in styles. You must use toggle instead.'\n    );\n  }\n  return styles;\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x}, ${opt_y})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n  return `rotate(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!Object<string, string>}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return /** @type {!Object<string, string>} */ (style) || map();\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst toString_ = Object.prototype.toString;\n\n/**\n * Returns the ECMA [[Class]] of a value\n * @param {*} value\n * @return {string}\n */\nfunction toString(value) {\n  return toString_.call(value);\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport function isArray(value) {\n  return Array.isArray(value);\n}\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString(value) === '[object Object]';\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Checks whether `s` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} s\n * @return {boolean}\n * @template T\n */\nexport function isEnumValue(enumObj, s) {\n  for (const k in enumObj) {\n    if (enumObj[k] === s) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {!Window|null} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {tryDecodeUriComponent_} from './url-try-decode-uri-component';\n\nconst regex = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * DO NOT import the function from this file. Instead, import parseQueryString\n * from `src/url.js`.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString_(queryString) {\n  const params = /** @type {!JsonObject} */ (Object.create(null));\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = regex.exec(queryString))) {\n    const name = tryDecodeUriComponent_(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent_(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * DO NOT import the function from this file. Instead, import\n * tryDecodeUriComponent from `src/url.js`.\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent_(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LruCache} from './utils/lru-cache';\nimport {dict, hasOwn} from './utils/object';\nimport {endsWith, startsWith} from './string';\nimport {getMode} from './mode';\nimport {isArray} from './types';\nimport {parseQueryString_} from './url-parse-query-string';\nimport {tryDecodeUriComponent_} from './url-try-decode-uri-component';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\n/**\n * @type {!JsonObject}\n */\nconst SERVING_TYPE_PREFIX = dict({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n  // Actions viewer\n  'action': true,\n});\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet a;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet cache;\n\n/** @private @const Matches amp_js_* parameters in query string. */\nconst AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n\n/** @private @const Matches amp_gsa parameters in query string. */\nconst AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n\n/** @private @const Matches amp_r parameters in query string. */\nconst AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n\n/** @private @const Matches amp_kit parameters in query string. */\nconst AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n\n/** @private @const Matches usqp parameters from goog experiment in query string. */\nconst GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\n\nconst INVALID_PROTOCOLS = [\n  /*eslint no-script-url: 0*/ 'javascript:',\n  /*eslint no-script-url: 0*/ 'data:',\n  /*eslint no-script-url: 0*/ 'vbscript:',\n];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a = /** @type {!HTMLAnchorElement} */ (self.document.createElement('a'));\n    cache = self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, opt_nocache ? null : cache);\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(a, url, opt_cache) {\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = getMode().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  const field = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    const v = params[k];\n    if (v == null) {\n      continue;\n    } else if (isArray(v)) {\n      for (let i = 0; i < v.length; i++) {\n        const sv = /** @type {string} */ (v[i]);\n        s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n      }\n    } else {\n      const sv = /** @type {string} */ (v);\n      s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  // (erwinm, #4560): type cast necessary until #4560 is fixed.\n  const theUrlString = /** @type {string} */ (urlString);\n  userAssert(\n    isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    theUrlString\n  );\n  return theUrlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * This function is implemented in a separate file to avoid a circular\n * dependency.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  return parseQueryString_(queryString);\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.cdnProxyRegex.test(url.origin);\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.localhostRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const parsed = parseUrlDeprecated(url);\n  const search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const search = urlSearch\n    .replace(AMP_JS_PARAMS_REGEX, '')\n    .replace(AMP_GSA_PARAMS_REGEX, '')\n    .replace(AMP_R_PARAMS_REGEX, '')\n    .replace(AMP_KIT_PARAMS_REGEX, '')\n    .replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '')\n    .replace(/^[?&]/, ''); // Removes first ? or &.\n  return search ? '?' + search : '';\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}=[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX[prefix],\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  if (typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private Visible for testing.\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (startsWith(relativeUrlString.toLowerCase(), relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (startsWith(relativeUrlString, '//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (startsWith(relativeUrlString, '/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} opt_fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, opt_fallback) {\n  return tryDecodeUriComponent_(component, opt_fallback);\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n  }\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {stringHash32} from '../string';\n\n/**\n * Gets a string of concatenated element names and relative positions\n * of the DOM element and its parentElement's (up to 25).  Relative position\n * is the index of nodes with this tag within the parent's children.\n * The order is from the inner to outer nodes in DOM hierarchy.\n *\n * If a DOM hierarchy is the following:\n *\n * <div id='id1' ...>\n *   <div id='id2' ...>\n *     <table ...>       // table:0\n *       <tr>            // tr:0\n *         <td>...</td>  // td:0\n *         <td>          // td:1\n *           <amp-ad ...></amp-ad>\n *         </td>\n *       </tr>\n *       <tr>...</tr>    // tr:1\n *     </table>\n *   </div>\n * </div>\n *\n * With the amp-ad element passed in:\n * 'amp-ad.0,td.1,tr.0,table.0,div/id2.0,div/id1.0'\n *\n * Note: 25 is chosen arbitrarily.\n *\n * @param {?Element} element DOM node from which to get fingerprint.\n * @return {string} Concatenated element ids.\n */\nexport function domFingerprintPlain(element) {\n  const ids = [];\n  let level = 0;\n  while (element && element.nodeType == /* element */ 1 && level < 25) {\n    let id = '';\n    if (element.id) {\n      id = `/${element.id}`;\n    }\n    const nodeName = element.nodeName.toLowerCase();\n    ids.push(`${nodeName}${id}${indexWithinParent(element)}`);\n    level++;\n    element = element.parentElement;\n  }\n  return ids.join();\n}\n\nexport class DomFingerprint {\n  /**\n   * Calculates ad slot DOM fingerprint.  This key is intended to\n   * identify \"same\" ad unit across many page views. This is\n   * based on where the ad appears within the page's DOM structure.\n   *\n   * @param {?Element} element The DOM element from which to collect\n   *     the DOM chain element IDs.  If null, DOM chain element IDs are not\n   *     included in the hash.\n   * @return {string} The ad unit hash key string.\n   */\n  static generate(element) {\n    return stringHash32(domFingerprintPlain(element));\n  }\n}\n\n/**\n * Gets a string showing the index of an element within\n * the children of its parent, counting only nodes with the same tag.\n * Stop at 25, just to have a limit.\n * @param {!Element} element DOM node to get index of.\n * @return {string} '.<index>' or ''.\n */\nfunction indexWithinParent(element) {\n  const {nodeName} = element;\n  // Find my index within my parent's children\n  let i = 0;\n  let count = 0;\n  let sibling = element.previousElementSibling;\n  // Different browsers have different children.\n  // So count only nodes with the same tag.\n  // Use a limit for the tags, so that different browsers get the same\n  // count. So 25 and higher all return no index.\n  while (sibling && count < 25 && i < 100) {\n    if (sibling.nodeName == nodeName) {\n      count++;\n    }\n    i++;\n    sibling = sibling.previousElementSibling;\n  }\n  // If we got to the end, then the count is accurate; otherwise skip count.\n  return count < 25 && i < 100 ? `.${count}` : '';\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// TODO(rsimha, #15334): Enable this rule.\n/* eslint jsdoc/check-types: 0 */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nexport function once(fn) {\n  let evaluated = false;\n  let retValue = null;\n  let callback = fn;\n  return (...args) => {\n    if (!evaluated) {\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n    return retValue;\n  };\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dev} from '../log';\n\n/** @const {string} */\nconst TAG = 'lru-cache';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = Object.create(null);\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    dev().warn(TAG, 'Trimming LRU cache');\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../log';\n\n/**\n * Maps a value in a first range to its equivalent in a second range\n * Ex.: 5 in the range [0,10] gives 60 in the range[40,80]\n *\n * NOTE: lower/upper bounds on the source range are detected automatically,\n * however the bounds on the target range are not altered (thus the target\n * range could be decreasing).\n * Ex1: 8 in the range [0, 10] gives 2 in the range [10, 0]\n * Ex2: also, 8 in the range [10, 0] gives 2 in the range [10, 0]\n *\n * NOTE: Input value is enforced to be bounded inside the source range\n * Ex1: -2 in the range [0, 10] is interpreted as 0 and thus gives 40 in [40,80]\n * Ex2: 19 in the range [0, 5] is interpreted as 5 and thus gives 80 in [40,80]\n *\n * @param {number} val the value in the source range\n * @param {number} min1 the lower bound of the source range\n * @param {number} max1 the upper bound of the source range\n * @param {number} min2 the lower bound of the target range\n * @param {number} max2 the upper bound of the target range\n * @return {number} the equivalent value in the target range\n */\nexport function mapRange(val, min1, max1, min2, max2) {\n  let max1Bound = max1;\n  let min1Bound = min1;\n  if (min1 > max1) {\n    max1Bound = min1;\n    min1Bound = max1;\n  }\n\n  if (val < min1Bound) {\n    val = min1Bound;\n  } else if (val > max1Bound) {\n    val = max1Bound;\n  }\n\n  return ((val - min1) * (max2 - min2)) / (max1 - min1) + min2;\n}\n\n/**\n * Computes the modulus of values `a` and `b`.\n *\n * This is needed because the % operator in JavaScript doesn't implement\n * modulus behavior as can be seen by the spec here:\n * http://www.ecma-international.org/ecma-262/5.1/#sec-11.5.3.\n * It instead is used to obtain the remainder of a division.\n * This function uses the remainder (%) operator to determine the modulus.\n * Derived from here:\n * https://stackoverflow.com/questions/25726760/javascript-modular-arithmetic/47354356#47354356\n *\n * @param {number} a\n * @param {number} b\n * @return {number} returns the modulus of the two numbers.\n * @example\n *\n * _.min(10, 5);\n * // => 0\n *\n * _.mod(-1, 5);\n * // => 4\n */\nexport function mod(a, b) {\n  return a > 0 && b > 0 ? a % b : ((a % b) + b) % b;\n}\n\n/**\n * Restricts a number to be in the given min/max range. The minimum value must\n * be less than or equal to the maximum value.\n *\n * Examples:\n * clamp(0.5, 0, 1) -> 0.5\n * clamp(1.5, 0, 1) -> 1\n * clamp(-0.5, 0, 1) -> 0\n *\n * @param {number} val the value to clamp.\n * @param {number} min the lower bound.\n * @param {number} max the upper bound.\n * @return {number} the clamped value.\n */\nexport function clamp(val, min, max) {\n  devAssert(min <= max, 'Minimum value is greater than the maximum.');\n  return Math.min(Math.max(val, min), max);\n}\n\n/**\n * Returns value bound to min and max values +/- extent. The lower bound must\n * be less than or equal to the upper bound.\n * @param {number} val the value to bound.\n * @param {number} min the lower bound.\n * @param {number} max the upper bound\n * @param {number} extent the allowed extent beyond the bounds.\n * @return {number} the bounded value.\n */\nexport function boundValue(val, min, max, extent) {\n  devAssert(min <= max, 'Lower bound is greater than the upper bound.');\n  return clamp(val, min - extent, max + extent);\n}\n\n/**\n * Returns the length of a vector given in X- and Y-coordinates.\n * @param {number} deltaX distance in the X direction.\n * @param {number} deltaY distance in the Y direction.\n * @return {number} the magnitude of the vector.\n */\nexport function magnitude(deltaX, deltaY) {\n  return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n}\n\n/**\n * Returns the distance between two points.\n * @param {number} x1 X-coordinate of the first point.\n * @param {number} y1 Y-coordinate of the first point.\n * @param {number} x2 X-coordinate of the second point.\n * @param {number} y2 Y-coordinate of the second point.\n * @return {number} the distance between the two points.\n */\nexport function distance(x1, y1, x2, y2) {\n  return magnitude(x2 - x1, y2 - y1);\n}\n\n/**\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} radius\n * @param {number} angleInDegrees\n * @return {{\n *  x: number,\n *  y: number,\n * }}\n */\nexport function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\n\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians),\n  };\n}\n\n/**\n * Sums up the values of the given array and returns the result\n * @param {Array<number>} values\n * @return {number}\n */\nexport function sum(values) {\n  return values.reduce(function(a, b) {\n    return a + b;\n  });\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isObject} from '../types';\n\n/* @const */\nconst hasOwn_ = Object.prototype.hasOwnProperty;\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {t, s, d} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    Object.keys(s).forEach(key => {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          return;\n        }\n      }\n      t[key] = newValue;\n    });\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /**\n   * Creates an instance of Deferred.\n   */\n  constructor() {\n    let resolve, reject;\n\n    /**\n     * @const {!Promise<T>}\n     */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n\n    /**\n     * @const {function(T=)}\n     */\n    this.resolve = resolve;\n\n    /**\n     * @const {function(*=)}\n     */\n    this.reject = reject;\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise(resolve => {\n    resolve(fn());\n  });\n}\n\n/**\n * Returns a promise which resolves if a threshold amount of the given promises\n * resolve, and rejects otherwise.\n * @param {!Array<!Promise>} promises The array of promises to test.\n * @param {number} count The number of promises that must resolve for the\n *     returned promise to resolve.\n * @return {!Promise} A promise that resolves if any of the given promises\n *     resolve, and which rejects otherwise.\n */\nexport function some(promises, count = 1) {\n  return new Promise((resolve, reject) => {\n    count = Math.max(count, 0);\n    const extra = promises.length - count;\n    if (extra < 0) {\n      reject(new Error('not enough promises to resolve'));\n    }\n    if (promises.length == 0) {\n      resolve([]);\n    }\n    const values = [];\n    const reasons = [];\n\n    const onFulfilled = value => {\n      if (values.length < count) {\n        values.push(value);\n      }\n      if (values.length == count) {\n        resolve(values);\n      }\n    };\n    const onRejected = reason => {\n      if (reasons.length <= extra) {\n        reasons.push(reason);\n      }\n      if (reasons.length > extra) {\n        reject(reasons);\n      }\n    };\n    for (let i = 0; i < promises.length; i++) {\n      Promise.resolve(promises[i]).then(onFulfilled, onRejected);\n    }\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!Promise>=} opt_promises\n   */\n  constructor(opt_promises) {\n    let resolve_, reject_;\n    /** @private @const {!Promise} */\n    this.promise_ = new Promise((resolve, reject) => {\n      resolve_ = resolve;\n      reject_ = reject;\n    });\n\n    /** @private */\n    this.resolve_ = resolve_;\n\n    /** @private */\n    this.reject_ = reject_;\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (let i = 0; i < opt_promises.length; i++) {\n        this.add(opt_promises[i]);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!Promise} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    Promise.resolve(promise).then(\n      result => {\n        if (this.count_ === countAtAdd) {\n          this.resolve_(result);\n        }\n      },\n      error => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.reject_(error);\n        }\n      }\n    );\n    return this.promise_;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.promise_.then(opt_resolve, opt_reject);\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Wraps a given callback and applies a rate limit.\n * It throttles the calls so that no consequent calls have time interval\n * smaller than the given minimal interval.\n *\n * @param {!Window} win\n * @param {function(...*)} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...*)}\n */\nexport function throttle(win, callback, minInterval) {\n  let locker = 0;\n  let nextCallArgs = null;\n\n  /**\n   * @param {!Object} args\n   */\n  function fire(args) {\n    nextCallArgs = null;\n    // Lock the fire for minInterval milliseconds\n    locker = win.setTimeout(waiter, minInterval);\n\n    callback.apply(null, args);\n  }\n\n  /**\n   * Waiter function\n   */\n  function waiter() {\n    locker = 0;\n    // If during the period there're invocations queued up, fire once.\n    if (nextCallArgs) {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function(...args) {\n    if (locker) {\n      nextCallArgs = args;\n    } else {\n      fire(args);\n    }\n  };\n}\n\n/**\n * Wraps a given callback and applies a wait timer, so that minInterval\n * milliseconds must pass since the last call before the callback is actually\n * invoked.\n *\n * @param {!Window} win\n * @param {function(...*)} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...*)}\n */\nexport function debounce(win, callback, minInterval) {\n  let locker = 0;\n  let timestamp = 0;\n  let nextCallArgs = null;\n\n  /**\n   * @param {?Array} args\n   */\n  function fire(args) {\n    nextCallArgs = null;\n    callback.apply(null, args);\n  }\n\n  /**\n   * Wait function for debounce\n   */\n  function waiter() {\n    locker = 0;\n    const remaining = minInterval - (win.Date.now() - timestamp);\n    if (remaining > 0) {\n      locker = win.setTimeout(waiter, remaining);\n    } else {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function(...args) {\n    timestamp = win.Date.now();\n    nextCallArgs = args;\n    if (!locker) {\n      locker = win.setTimeout(waiter, minInterval);\n    }\n  };\n}\n","/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n"]}